{
    "00401184": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00401184(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        iVar2 = iVar2 + 1;\n        iVar1 = param_1[iVar2];\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040122a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040122a(uint noname_0, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (((((*0x41e9c8 & 1) == 0) &&\n         (iVar1 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(*0x41e9e8, &var_8h, 0, 0),  iVar1 != 0)) &&\n        (var_4h <= arg_10h)) && ((var_4h < arg_10h || (var_8h < arg_ch)))) {\n        arg_8h = fcn.00402490(0x2a);\n        iVar1 = fcn.00409581(arg_8h);\n        if (iVar1 != 1) {\n            *0x41e96c = 0x6a;\n            return 0x80004005;\n        }\n        *0x41e9c8 = *0x41e9c8 | 1;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*0x41ea58, 0x8001, 0, &arg_ch);\n    return 0;\n}\n",
        "token_count": 297
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401893": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401893(uint32_t lpExitCode, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint uVar2;\n    uint uVar3;\n    uint32_t arglist;\n    uint lpThreadId;\n    \n    fcn.004136a9(lpExitCode);\n    fcn.00401403(arg_ch);\n    fcn.004017a8(0x5c);\n    *0x41e96c = 0;\n    *0x41e964 = in_ECX;\n    *0x41e968 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x40133c);\n    if (*0x41e9c4 != 2) {\n        fcn.00408c92();\n    }\n    uVar2 = *0x41e968;\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x41e968, 0xffffffff);\n    *0x41ea58 = 0;\n    if (*0x41e96c == 0) {\n        if (*0x41ea60 != 0) {\n            *0x41ea58 = 0;\n            return 0x80004005;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetExitCodeThread)(*0x41e968, &lpExitCode);\n        if ((iVar1 != 0) && (lpExitCode == 0)) {\n            return 0;\n        }\n        if ((lpExitCode & 0x80070000) == 0x80070000) {\n            if (((lpExitCode & 0xffff) == 0xe) && (*0x41e9c8 == -1)) {\n                return 0x80004005;\n            }\n            (*_sym.imp.KERNEL32.dll_SetLastError)(lpExitCode & 0xffff);\n            uVar3 = 0x22;\n            uVar2 = 1;\n            arglist = lpExitCode;\n        }\n        else {\n            uVar3 = 0x21;\n            arglist = lpExitCode;\ncode_r0x00401976:\n            uVar2 = 0;\n        }\n        fcn.004095ee(uVar2, uVar3, arglist);\n    }\n    else {\n        if (*0x41e96c == 1) {\n            uVar3 = 0x11;\n        }\n        else if (*0x41e96c == 2) {\n            uVar3 = 0x13;\n        }\n        else {\n            if (*0x41e96c != 3) {\n                if ((0x67 < *0x41e96c) && (*0x41e96c < 0x6c)) {\n                    *0x41ea58 = 0;\n                    return 0x80004005;\n                }\n                uVar3 = 0x14;\n                arglist = *0x41e96c;\n                goto code_r0x00401976;\n            }\n            uVar3 = 0x12;\n        }\n        fcn.004095ee(0, uVar3, uVar2);\n    }\n    return 0x80004005;\n}\n",
        "token_count": 701
    },
    "00401b1e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401d94)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401b1e(int32_t *arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t *var_4h;\n    \n    if (*0x41ea60 != 0) {\n        return -0x7fffbffc;\n    }\n    var_4h = arg_8h + 9;\n    fcn.00413c8f();\n    var_3ch._0_2_ = 0;\n    var_3ch._2_2_ = 0;\n    iVar3 = (**(*arg_8h[3] + 0x18))(arg_8h[3], arg_ch, 3, &var_3ch);\n    if (iVar3 != 0) goto code_r0x00401b69;\n    fcn.004014eb();\n    if ((var_3ch == 0) || (var_3ch != 8)) {\n        iVar3 = (**(*arg_8h + 0x1c))(arg_8h, 100);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n        fcn.00412564();\n        return iVar3;\n    }\n    fcn.00401403(var_34h);\n    piVar1 = arg_8h + 10;\n    uVar4 = fcn.004017d3(&var_1ch, arg_8h + 4, &var_10h);\n    fcn.0040143c(uVar4);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n    if (arg_14h != 0) {\n        *arg_10h = 0;\n        goto code_r0x00401e45;\n    }\n    var_2ch._0_2_ = 0;\n    var_2ch._2_2_ = 0;\n    iVar3 = (**(*arg_8h[3] + 0x18))(arg_8h[3], arg_ch, 9, &var_2ch);\n    if (iVar3 == 0) {\n        if (var_2ch == 0) {\n            arg_8h[0x10] = 0;\ncode_r0x00401c43:\n            iVar3 = (**(*arg_8h[3] + 0x18))(arg_8h[3], arg_ch, 6, &var_2ch);\n            if (iVar3 != 0) goto code_r0x00401bf2;\n            arg_8h[0xf] = var_24h != 0;\n            iVar3 = (**(*arg_8h[3] + 0x18))(arg_8h[3], arg_ch, 0xc, &var_2ch);\n            if (iVar3 != 0) {\n                fcn.00412564();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                goto code_r0x00401b69;\n            }\n            if (var_2ch == 0) {\n                (*_sym.imp.KERNEL32.dll_GetLocalTime)(&var_4ch);\n                (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&var_4ch, arg_8h + 0xd);\n            }\n            else {\n                if (var_2ch != 0x40) {\n                    uVar4 = 0x66;\n                    goto code_r0x00401c1f;\n                }\n                arg_8h[0xd] = var_24h;\n                arg_8h[0xe] = var_20h;\n            }\n            iVar3 = 0;\n            if (arg_8h[0xf] == 0) {\n                iVar5 = fcn.0040372c(*piVar1, arg_8h + 0xd);\n                if (iVar5 == -1) {\n                    iVar3 = *arg_8h;\n                    uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    iVar3 = (**(iVar3 + 0x20))(arg_8h, 0x69, uVar4);\n                }\n                else {\n                    if (iVar5 != 1) {\n                        puVar6 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x18);\n                        if (puVar6 == NULL) {\n                            puVar6 = NULL;\n                        }\n                        else {\n                            puVar6[1] = 0;\n                            *puVar6 = 0x41a558;\n                            puVar6[2] = 0xffffffff;\n                        }\n                        arg_8h[8] = puVar6;\n                        fcn.0041333e(puVar6);\n                        iVar3 = *piVar1;\n                        iVar5 = arg_8h[8];\n                        *(iVar5 + 0x10) = 0;\n                        *(iVar5 + 0x14) = 0;\n                        cVar2 = fcn.00412458(iVar3, 1);\n                        if (cVar2 != '\\0') {\ncode_r0x00401e07:\n                            fcn.004136a9(0);\n                            *arg_10h = 0;\n                            fcn.00412564();\ncode_r0x00401e45:\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                            fcn.00412564();\n                            return 0;\n                        }\n                        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        fcn.004013d1(piVar1);\n                        iVar3 = fcn.004033f2(&var_1ch);\n                        if (iVar3 < 0) {\n                            iVar3 = (**(*arg_8h + 0x20))(arg_8h, 0x6a, uVar4);\n                        }\n                        else {\n                            *(var_1ch + iVar3 * 2) = 0;\n                            var_18h = iVar3;\n                            iVar3 = fcn.00403a96(var_1ch);\n                            if (iVar3 == 0) {\n                                iVar3 = (**(*arg_8h + 0x1c))(arg_8h, 0x68);\n                            }\n                            else {\n                                iVar3 = *piVar1;\n                                iVar5 = arg_8h[8];\n                                *(iVar5 + 0x10) = 0;\n                                *(iVar5 + 0x14) = 0;\n                                cVar2 = fcn.00412458(iVar3, 1);\n                                if (cVar2 != '\\0') {\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                                    goto code_r0x00401e07;\n                                }\n                                iVar3 = *arg_8h;\n                                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                                iVar3 = (**(iVar3 + 0x20))(arg_8h, 0x6a, uVar4);\n                            }\n                        }\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                        fcn.00412564();\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                        goto code_r0x00401b69;\n                    }\n                    *arg_10h = 0;\n                }\n            }\n            else {\n                iVar5 = fcn.00403a96(*piVar1);\n                if (iVar5 == 0) {\n                    uVar4 = 0x68;\n                    goto code_r0x00401c1f;\n                }\n            }\n        }\n        else {\n            if (var_2ch == 0x13) {\n                arg_8h[0x10] = var_24h;\n                goto code_r0x00401c43;\n            }\n            uVar4 = 0x65;\ncode_r0x00401c1f:\n            iVar3 = (**(*arg_8h + 0x1c))(arg_8h, uVar4);\n        }\n        fcn.00412564();\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n    }\n    else {\ncode_r0x00401bf2:\n        arg_8h = iVar3;\n        fcn.00412564();\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n        iVar3 = arg_8h;\n    }\ncode_r0x00401b69:\n    fcn.00412564();\n    return iVar3;\n}\n",
        "token_count": 2021
    },
    "00401f7d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401f7d(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar6 = 0;\n    if (0 < arg_10h) {\n        piVar5 = arg_ch;\n        do {\n            iVar1 = *((arg_8h - arg_ch) + piVar5);\n            if ((iVar1 == 0) || (*piVar5 == 0)) break;\n            iVar1 = fcn.004126b0(iVar1);\n            iVar2 = fcn.004126b0(*piVar5);\n            if (iVar1 != iVar2) {\n                uVar3 = fcn.004126b0(*(iVar6 * 2 + arg_8h));\n                uVar4 = fcn.004126b0(arg_ch[iVar6]);\n                return (uVar3 & 0xffff) - (uVar4 & 0xffff);\n            }\n            iVar6 = iVar6 + 1;\n            piVar5 = piVar5 + 1;\n        } while (iVar6 < arg_10h);\n    }\n    return iVar6 != arg_10h;\n}\n",
        "token_count": 311
    },
    "00402003": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402003(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(param_1, 0, 0x8000);\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0040201c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040201c(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00402023. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.MSVCRT.dll_free)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004020d2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004020d2(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_44h;\n    code *var_4h;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    pcVar1 = _sym.imp.KERNEL32.dll_FindResourceExA;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindResourceExA)(uVar3, arg_8h, arg_ch, *0x41e980);\n    if ((iVar4 != 0) || (iVar4 = (*pcVar1)(uVar3, arg_8h, arg_ch, 0x409),  iVar4 != 0)) {\n        if (arg_10h != NULL) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_SizeofResource)(uVar3, iVar4);\n            *arg_10h = uVar5;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar3, iVar4);\n        if (iVar4 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar4);\n            return uVar3;\n        }\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    if (*0x41e990 == 0) {\n        *0x41e990 = 1;\n        uVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32\", \"SetProcessPreferredUILanguages\");\n        pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        var_4h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3);\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_44h, L\"%04X%c%04X%c\", *0x41e980, 0, 0x409, 0);\n        if (var_4h == NULL) {\n            uVar3 = (*pcVar1)(\"kernel32\", \"SetThreadPreferredUILanguages\");\n            var_4h = (*pcVar2)(uVar3);\n            if (var_4h == NULL) {\n                return 0;\n            }\n        }\n        (*var_4h)(4, &var_44h, 0);\n    }\n    return 0;\n}\n",
        "token_count": 546
    },
    "004021bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004021bb(uint hgdiobj)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint lpvObject;\n    uint var_28h;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hDC;\n    \n    hDC = (*_sym.imp.USER32.dll_GetWindowDC)(0);\n    iVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(hDC, 0x58);\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    if (iVar2 < 1) {\n        iVar2 = 0x60;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, 0x60);\n    if (iVar2 < 0x76) {\n        if (iVar2 < 0x92) {\n            (*_sym.imp.USER32.dll_ReleaseDC)(0, hDC);\n            uVar4 = (*_sym.imp.USER32.dll_CopyImage)(hgdiobj, 0, 0, 0, 0);\n            return uVar4;\n        }\n    }\n    else if (iVar2 < 0x92) {\n        uVar4 = 4;\n        uVar5 = 3;\n        goto code_r0x00402211;\n    }\n    uVar4 = 3;\n    uVar5 = 2;\ncode_r0x00402211:\n    (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n    nWidth = (*pcVar1)(var_28h, uVar4, uVar5);\n    nHeight = (*pcVar1)(var_24h, uVar4, uVar5);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    uVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(hDC);\n    uVar5 = (*pcVar1)(hDC);\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    var_10h = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, hgdiobj);\n    uVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(hDC, nWidth, nHeight);\n    var_14h = (*pcVar1)(uVar5, uVar3);\n    (*_sym.imp.GDI32.dll_SetStretchBltMode)(uVar5, 4);\n    (*_sym.imp.GDI32.dll_StretchBlt)(uVar5, 0, 0, nWidth, nHeight, uVar4, 0, 0, var_28h, var_24h, 0xcc0020);\n    nWidth = (*_sym.imp.GDI32.dll_GetCurrentObject)(uVar5, 7);\n    (*pcVar1)(uVar4, var_10h);\n    (*pcVar1)(uVar5, var_14h);\n    pcVar1 = _sym.imp.GDI32.dll_DeleteDC;\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar4);\n    (*pcVar1)(uVar5);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, hDC);\n    return nWidth;\n}\n",
        "token_count": 748
    },
    "0040243a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "identify system language via API"
        ],
        "decompiled_code": "\nuint16_t fcn.0040243a(void)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    \n    if (*0x41e980 == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetUserDefaultUILanguage)();\n        *0x41e980 = *0x41e980 & 0xffff0000 | uVar1;\n        if ((uVar1 & 0x3ff) != 9) {\n            return uVar1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDefaultUILanguage)();\n        if (iVar2 == 0x409) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetSystemDefaultLCID)();\n            if (uVar3 == *0x41b41c) {\n                *0x41e980 = *0x41e980 & 0xffff0000 | *0x41b41c & 0xffff;\n            }\n        }\n    }\n    return *0x41e980;\n}\n",
        "token_count": 235
    },
    "004026be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004026be(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    if (*0x41e984 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32\", \"Wow64RevertWow64FsRedirection\");\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        if (pcVar2 != NULL) {\n            (*pcVar2)(*0x41e988);\n            *0x41e984 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004029fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004029fa(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint lpBuffer;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    lpBuffer = 0x40;\n    if (((((*0x41e9c8 & 2) == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&lpBuffer),  iVar1 != 0)) &&\n        (var_2ch == 0)) && (var_30h < arg_8h)) {\n        arg_8h_00 = fcn.00402490(0x2b);\n        iVar1 = fcn.00409581(arg_8h_00);\n        if (iVar1 != 1) {\n            *0x41e9c8 = 0xffffffff;\n            return 0;\n        }\n        *0x41e9c8 = *0x41e9c8 | 2;\n    }\n    return 1;\n}\n",
        "token_count": 257
    },
    "00402be4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar ** __thiscall fcn.00402be4(char **param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar3 = NULL;\n    param_1[1] = NULL;\n    **param_1 = '\\0';\n    cVar1 = *param_2;\n    while (cVar1 != '\\0') {\n        pcVar3 = pcVar3 + 1;\n        cVar1 = pcVar3[param_2];\n    }\n    fcn.0040283a(pcVar3);\n    pcVar2 = *param_1;\n    do {\n        cVar1 = *param_2;\n        *pcVar2 = cVar1;\n        pcVar2 = pcVar2 + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 != '\\0');\n    param_1[1] = pcVar3;\n    return param_1;\n}\n",
        "token_count": 219
    },
    "00402c7e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00402c7e(int32_t *param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    cVar1 = *param_2;\n    while (cVar1 != '\\0') {\n        iVar3 = iVar3 + 1;\n        cVar1 = param_2[iVar3];\n    }\n    fcn.00402886(iVar3);\n    pcVar2 = param_1[1] + *param_1;\n    do {\n        cVar1 = *param_2;\n        *pcVar2 = cVar1;\n        pcVar2 = pcVar2 + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 != '\\0');\n    param_1[1] = param_1[1] + iVar3;\n    return param_1;\n}\n",
        "token_count": 214
    },
    "00402e03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.00402e03(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.004014eb();\n    if (param_2[1] != 0) {\n        uVar1 = *param_2;\n        iVar3 = param_2[1];\n        uVar2 = fcn.00402ad5(iVar3, iVar3 + 1);\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(param_2, 0, uVar1, iVar3, uVar2);\n        *(*param_1 + iVar3 * 2) = 0;\n        param_1[1] = iVar3;\n    }\n    return param_1;\n}\n",
        "token_count": 184
    },
    "00402e9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e9c(uint *arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.004014eb();\n    if (var_4h < 2) {\n        fcn.004011b7(1);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW;\n    iVar3 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(*arg_8h, var_ch, 1);\n    if (iVar3 == 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    else {\n        uVar1 = *arg_8h;\n        uVar4 = fcn.00402ad5(iVar3 + 1, iVar3 + 1);\n        (*pcVar2)(uVar1, uVar4);\n        var_8h = fcn.00401184(var_ch);\n        *(var_ch + var_8h * 2) = 0;\n        fcn.0040143c(&var_ch);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "0040305b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040305b(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint var_18h;\n    uint var_ch;\n    \n    if (*0x41ea6c == 3) {\n        uVar2 = fcn.00401ee8(0x7a);\n    }\n    else {\n        fcn.00402b4e();\n        cVar1 = *(arg_ch + *arg_8h);\n        while( true ) {\n            if (((cVar1 == '\\0') || (cVar1 == '\\n')) || (cVar1 == '\\r')) break;\n            fcn.00402c56();\n            arg_ch = arg_ch + 1;\n            cVar1 = *(arg_ch + *arg_8h);\n        }\n        fcn.00402e03(&var_ch, &var_18h, 0xfde9);\n        if (arg_10h == '\\0') {\n            fcn.004095ee(0, 0xb, *0x41e080);\n        }\n        else {\n            fcn.004095ee(0, 0x20, var_ch);\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n        uVar2 = sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 332
    },
    "0040331e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check if file exists",
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.0040331e(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*0x41ea6c != 0) {\n        return 1;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (uVar1 == 0xffffffff) {\n        return 1;\n    }\n    if ((uVar1 & 0x10) != 0) {\n        uVar3 = fcn.00403211(param_1);\n        return uVar3;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(param_1, 0);\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(param_1);\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "00403685": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403685(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    \n    fcn.004014eb();\n    fcn.004014eb();\n    fcn.00401403(arg_8h);\n    fcn.00401403(arg_ch);\n    fcn.00403604(&var_24h);\n    if (arg_10h != 0) {\n        fcn.00402a9c(0x41a6c0);\n        fcn.00402aed(arg_8h);\n        fcn.00403685(var_ch, arg_ch, 0);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    fcn.004028f8();\n    return;\n}\n",
        "token_count": 190
    },
    "004037a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004037a5(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t *puVar1;\n    uchar *puVar2;\n    code *pcVar3;\n    char cVar4;\n    uchar uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    char extraout_CL;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint lpString1;\n    uint var_50h;\n    uint var_44h;\n    uint var_38h;\n    uint var_2ch;\n    uchar *var_20h;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.00402b4e();\n    do {\n        cVar4 = fcn.0040290e();\n        if (cVar4 == '\\0') {\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n            return 1;\n        }\n        fcn.004014eb();\n        fcn.004014eb();\n        var_8h = var_4h;\n        puVar1 = *arg_8h + var_4h;\n        fcn.00402b4e();\n        uVar8 = *puVar1;\n        iVar9 = 0;\n        while( true ) {\n            var_ch = var_ch & 0xffffff00 | uVar8;\n            cVar4 = fcn.00401ec4();\n            if ((cVar4 != '\\0') || (extraout_CL == '=')) break;\n            fcn.00402c56();\n            iVar9 = iVar9 + 1;\n            uVar8 = puVar1[iVar9];\n        }\n        uVar6 = fcn.00402e03(&var_38h, &var_2ch, 0xfde9);\n        fcn.0040143c(uVar6);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_38h);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_2ch);\n        iVar7 = var_4h;\n        if (iVar9 == 0) {\ncode_r0x00403a73:\n            uVar5 = fcn.0040305b(arg_8h, iVar7, arg_10h);\n            fcn.004028f8();\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n            return uVar5;\n        }\n        var_4h = var_4h + iVar9;\n        cVar4 = fcn.0040290e();\n        iVar7 = var_8h;\n        if ((cVar4 == '\\0') || (*(var_4h + *arg_8h) != '=')) goto code_r0x00403a73;\n        var_4h = var_4h + 1;\n        cVar4 = fcn.0040290e();\n        iVar9 = var_4h;\n        pcVar3 = _sym.imp.MSVCRT.dll_strncmp;\n        iVar7 = var_8h;\n        if (cVar4 == '\\0') goto code_r0x00403a73;\n        if (*(var_4h + *arg_8h) == '\\\"') {\n            iVar9 = var_4h + 1;\n            var_1ch = 0;\n            *var_20h = 0;\n            var_4h = iVar9;\n            while( true ) {\n                uVar6 = 5;\n                iVar7 = (*pcVar3)(*arg_8h + iVar9, \"{\\\\rtf\", 5);\n                if (iVar7 == 0) break;\n                while (iVar7 = (*pcVar3)(*arg_8h + iVar9, \"{\\\\rtf\", 5),  iVar7 != 0) {\n                    iVar7 = var_8h;\n                    if (arg_8h[1] <= iVar9) goto code_r0x00403a73;\n                    uVar8 = *(*arg_8h + iVar9);\n                    iVar7 = iVar9 + 1;\n                    var_14h = var_14h & 0xffffff00 | uVar8;\n                    var_4h = iVar7;\n                    if (uVar8 == 0x22) goto code_r0x00403987;\n                    uVar11 = var_14h;\n                    if (uVar8 == 0x5c) {\n                        uVar8 = *(*arg_8h + iVar7);\n                        iVar7 = iVar9 + 2;\n                        var_10h = var_10h & 0xffffff00 | uVar8;\n                        var_4h = iVar7;\n                        if (uVar8 == 0x22) {\n                            uVar11 = 0x22;\n                        }\n                        else if (uVar8 == 0x5c) {\n                            uVar11 = 0x5c;\n                        }\n                        else if (uVar8 == 0x6e) {\n                            uVar11 = 10;\n                        }\n                        else if (uVar8 == 0x74) {\n                            uVar11 = 9;\n                        }\n                        else {\n                            fcn.00402c56(0x5c);\n                            uVar11 = var_10h;\n                        }\n                    }\n                    fcn.00402c56(uVar11);\n                    iVar9 = iVar7;\n                }\n            }\n            while( true ) {\n                iVar7 = *arg_8h;\n                cVar4 = *(iVar7 + iVar9);\n                if ((cVar4 == '\\0') || (cVar4 == '\\\"')) break;\n                if ((cVar4 == '\\\\') && (*(iVar7 + 1 + iVar9) == '\\\"')) {\n                    iVar9 = iVar9 + 1;\n                }\n                puVar2 = iVar7 + iVar9;\n                iVar9 = iVar9 + 1;\n                var_4h = iVar9;\n                fcn.00402c56(uVar6, *puVar2);\n            }\n            if (*(iVar9 + *arg_8h) != '\\0') {\n                var_4h = iVar9 + 1;\n            }\ncode_r0x00403987:\n            uVar6 = fcn.00402e03(&var_44h, &var_20h, 0xfde9);\n            fcn.0040143c(uVar6);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_44h);\n            fcn.00403101(&var_50h);\n            iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(lpString1, L\"SetEnvironment\");\n            if ((iVar9 == 0) && (iVar9 = fcn.00412683(var_50h, 0x3d),  iVar7 = var_8h,  iVar9 < 1))\n            goto code_r0x00403a73;\n            piVar10 = 0x41e088;\n            if (*0x41e088 == 0) {\ncode_r0x00403a13:\n                iVar9 = fcn.0040295b(arg_ch, lpString1, 0);\n                if (iVar9 != 0) {\n                    fcn.00401403(var_50h);\n                    goto code_r0x00403a3f;\n                }\n            }\n            else {\n                do {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*piVar10);\n                    iVar9 = (*_sym.imp.MSVCRT.dll_wcsncmp)(lpString1, *piVar10, uVar6);\n                    if (iVar9 == 0) break;\n                    piVar10 = piVar10 + 1;\n                } while (*piVar10 != 0);\n                if (*piVar10 == 0) goto code_r0x00403a13;\n            }\n            fcn.00403604(&lpString1);\n        }\n        else {\n            if (*(var_4h + *arg_8h) != '-') goto code_r0x00403a73;\n            fcn.004029a3(arg_ch, lpString1);\n            var_4h = iVar9 + 1;\n        }\ncode_r0x00403a3f:\n        fcn.004028f8();\n    } while( true );\n}\n",
        "token_count": 1877
    },
    "00403f47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f47(int32_t arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint var_70h;\n    uint var_ch;\n    \n    fcn.00402be4(\",!@Install@!UTF-8!\");\n    fcn.00402be4(\",!@InstallEnd@!\");\n    fcn.00402d38(&var_ch, 0, *(arg_10h + 4) + -1);\n    fcn.00402c1e(&var_ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    fcn.00402d38(&var_ch, 0, *(arg_14h + 4) + -1);\n    fcn.00402c1e(&var_ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    pcVar1 = _sym.imp.USER32.dll_wsprintfA;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        (*_sym.imp.USER32.dll_wsprintfA)(&var_70h, \":%hs\", arg_ch);\n        fcn.00402c7e(&var_70h);\n        fcn.00402c7e(&var_70h);\n    }\n    if (arg_8h != 0) {\n        (*pcVar1)(&var_70h, \":Language:%u\", arg_8h);\n        fcn.00402c7e(&var_70h);\n        fcn.00402c7e(&var_70h);\n    }\n    fcn.00402c7e(0x41a790);\n    fcn.00402c7e(0x41a790);\n    return;\n}\n",
        "token_count": 401
    },
    "004041e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004041e6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_8h;\n    if (*(arg_8h + 4) == 0) {\n        arg_8h = 0;\n    }\n    else {\n        cVar3 = fcn.00402dea(arg_8h, arg_ch);\n        if (cVar3 == '\\0') {\n            uVar1 = *(arg_8h + 4);\n            iVar2 = *(arg_ch + 4);\n            iVar4 = 0;\n            arg_8h = 0;\n            if (0 < *(in_ECX + 4)) {\n                do {\n                    iVar4 = fcn.004027d9(arg_8h_00, iVar4);\n                    if (iVar4 < 0) {\n                        return arg_8h;\n                    }\n                    fcn.00402d03(iVar4, uVar1);\n                    fcn.0040362e(iVar4, arg_ch);\n                    iVar4 = iVar4 + iVar2;\n                    arg_8h = arg_8h + 1;\n                } while (iVar4 < *(in_ECX + 4));\n            }\n        }\n        else {\n            arg_8h = 0;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 357
    },
    "0040491c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040491c(void)\n\n{\n    if (*0x41e994 == '\\0') {\n        fcn.0040331e(*0x41e9e8);\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "004049b1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004049b1(int16_t **param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = *param_1;\n    while( true ) {\n        iVar1 = fcn.00412683(*param_2, *piVar2);\n        if ((iVar1 < 0) || (*piVar2 == 0)) break;\n        piVar2 = piVar2 + 1;\n    }\n    fcn.00402d03(0, piVar2 - *param_1 >> 1);\n    return;\n}\n",
        "token_count": 141
    },
    "00404b47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404b47(int32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    int32_t *piVar7;\n    uint var_18h;\n    uint16_t *var_ch;\n    int32_t var_8h;\n    \n    piVar7 = 0x41e3f0;\n    if (*0x41e3f0 != 0) {\n        do {\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*piVar7);\n            iVar5 = fcn.00401f7d(arg_8h, *piVar7, iVar4);\n            if ((iVar5 == 0) && (*(arg_8h + iVar4 * 2) == 0x3d)) {\n                fcn.00402a9c(arg_8h);\n                bVar2 = false;\n                uVar1 = *var_ch;\n                puVar6 = var_ch;\n                while ((uVar1 != 0 && ((uVar1 = *puVar6,  0x20 < uVar1 || (bVar2))))) {\n                    if (uVar1 == 0x22) {\n                        bVar2 = !bVar2;\n                    }\n                    else if ((uVar1 == 0x5c) && (puVar6[1] == 0x22)) {\n                        puVar6 = puVar6 + 1;\n                    }\n                    puVar6 = puVar6 + 1;\n                    uVar1 = *puVar6;\n                }\n                var_8h = puVar6 - var_ch >> 1;\n                iVar4 = var_8h * 2;\n                var_ch[var_8h] = 0;\n                fcn.00402e4b(&var_18h, &var_ch, 0xfde9);\n                cVar3 = fcn.004037a5(&var_18h, arg_ch, 1);\n                if (cVar3 == '\\0') {\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n                    arg_8h = 1;\n                }\n                else {\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n                    arg_8h = arg_8h + iVar4;\n                }\n                return arg_8h;\n            }\n            piVar7 = piVar7 + 1;\n        } while (*piVar7 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 619
    },
    "00404ea8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t * fcn.00404ea8(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *param_1;\n    if (uVar1 == 0x22) {\n        param_1 = param_1 + 1;\n        uVar1 = *param_1;\n        if (uVar1 != 0) {\n            do {\n                if (uVar1 == 0x22) break;\n                fcn.004017a8();\n                param_1 = param_1 + 1;\n                uVar1 = *param_1;\n            } while (uVar1 != 0);\n            if (*param_1 != 0) {\n                do {\n                    param_1 = param_1 + 1;\ncode_r0x00404f0b:\n                } while ((*param_1 != 0) && (*param_1 < 0x21));\n            }\n        }\n    }\n    else if (uVar1 != 0) {\n        do {\n            if (uVar1 < 0x21) goto code_r0x00404f0b;\n            fcn.004017a8();\n            param_1 = param_1 + 1;\n            uVar1 = *param_1;\n            if (uVar1 == 0) goto code_r0x00404f0b;\n        } while( true );\n    }\n    return param_1;\n}\n",
        "token_count": 314
    },
    "004051fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051fc(code *arg_8h, uint arg_ch, uint arg_10h, uint16_t *arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint var_10h;\n    int32_t var_4h;\n    \n    fcn.004014eb();\n    bVar2 = false;\n    puVar5 = arg_14h;\n    while ((((uVar1 = *puVar5,  0x2f < uVar1 && (uVar1 < 0x3a)) || ((0x60 < uVar1 && (uVar1 < 0x7b)))) ||\n           (((0x40 < uVar1 && (uVar1 < 0x5b)) || ((arg_14h == puVar5 && (arg_18h == -1))))))) {\n        fcn.00401403(arg_10h);\n        uVar3 = *puVar5;\n        fcn.004017a8();\n        var_4h = 0;\n        puVar5 = puVar5 + 1;\n        iVar4 = fcn.004029db(arg_ch, var_10h, &var_4h);\n        if (iVar4 != 0) {\n            bVar2 = true;\n            do {\n                (*arg_8h)(iVar4, uVar3);\n                var_4h = var_4h + 1;\n                iVar4 = fcn.004029db(arg_ch, var_10h, &var_4h);\n            } while (iVar4 != 0);\n        }\n    }\n    if ((arg_18h != 0) && ((arg_18h == 1 || ((((*arg_14h != 0 || (arg_18h != -1)) && (!bVar2)) && (*arg_14h != 0)))))) {\n        fcn.004051fc(arg_8h, arg_ch, arg_10h, 0x41b830, 0xffffffff);\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n    return;\n}\n",
        "token_count": 500
    },
    "00405492": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00405492(uint param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint arg_10h;\n    char16_t *arg_10h_00;\n    uint arg_10h_01;\n    uint arg_10h_02;\n    uint arg_10h_03;\n    uint arg_10h_04;\n    uint auStack248 [17];\n    uint auStack180 [3];\n    uint auStack168 [3];\n    uint auStack156 [3];\n    uint auStack144 [3];\n    uint auStack132 [3];\n    uint auStack120 [3];\n    uint auStack108 [3];\n    uint auStack96 [3];\n    uint auStack84 [3];\n    uint auStack72 [3];\n    uint uStack60;\n    uint uStack48;\n    uint uStack44;\n    int32_t iStack40;\n    uchar auStack36 [4];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack16 [4];\n    uint uStack12;\n    int32_t iStack8;\n    \n    fcn.004014eb();\n    fcn.004014eb();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)(auStack72);\n    fcn.00404ea8(uVar3);\n    param_3 = param_3 + 0x30;\n    arg_10h_04 = 0x41b8b0;\n    arg_10h_03 = 0x22;\n    arg_10h_02 = 0x20;\n    arg_10h_01 = 0x3a;\n    arg_10h_00 = L\"sfxwaitall\";\n    arg_10h = 0x41b890;\n    uVar3 = fcn.00404df8(auStack144, 0x22, auStack72);\n    uVar3 = fcn.00404e16(auStack120, uVar3, arg_10h);\n    uVar3 = fcn.00404e16(auStack96, uVar3, arg_10h_00);\n    uVar3 = fcn.00404e34(auStack180, uVar3, arg_10h_01);\n    uVar3 = fcn.00404e34(auStack132, uVar3, param_3);\n    uVar3 = fcn.00404e34(auStack156, uVar3, arg_10h_02);\n    uVar3 = fcn.00404e34(auStack108, uVar3, arg_10h_03);\n    uVar3 = fcn.00404e16(auStack84, uVar3, param_1);\n    uVar3 = fcn.00404e16(auStack168, uVar3, arg_10h_04);\n    uVar3 = fcn.00404e16(&uStack48, uVar3, param_2);\n    fcn.0040143c(uVar3);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack48);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack168[0]);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack84[0]);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack108[0]);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack156[0]);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack132[0]);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack180[0]);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack96[0]);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack120[0]);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack144[0]);\n    auStack248[0] = 0x44;\n    (*_sym.imp.KERNEL32.dll_GetStartupInfoW)(auStack248);\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (0, uStack60, 0, 0, 1, 0x1000004, 0, *0x41e9e8, auStack248, &uStack32);\n    if (iVar4 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar6 = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateJobObjectW)(0, 0);\n        pcVar1 = _sym.imp.KERNEL32.dll_ResumeThread;\n        if (((iVar4 == 0) || (iVar5 = (*_sym.imp.KERNEL32.dll_AssignProcessToJobObject)(iVar4, uStack32),  iVar5 == 0))\n           || (iVar6 = (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)(0xffffffff, 0, 1, 0),  iVar6 == 0)) {\ncode_r0x004056a6:\n            (*pcVar1)(uStack28);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack32, 0xffffffff);\n        }\n        else {\n            uStack44 = 1;\n            iStack40 = iVar6;\n            (*_sym.imp.KERNEL32.dll_SetInformationJobObject)(iVar4, 7, &uStack44, 8);\n            (*pcVar1)(uStack28);\n            pcVar2 = _sym.imp.KERNEL32.dll_GetQueuedCompletionStatus;\n            do {\n                iVar5 = (*pcVar2)(iVar6, &iStack8, auStack16, auStack36, 0xffffffff);\n                if (iVar5 == 0) goto code_r0x004056a6;\n            } while (iStack8 != 4);\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack28);\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(uStack32, &uStack12);\n        if (iVar5 == 0) {\n            uStack12 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        (*pcVar1)(uStack32);\n        if (iVar6 != 0) {\n            (*pcVar1)(iVar6);\n        }\n        uVar3 = uStack12;\n        if (iVar4 != 0) {\n            (*pcVar1)(iVar4);\n            uVar3 = uStack12;\n        }\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack60);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(auStack72[0]);\n    return uVar3;\n}\n",
        "token_count": 1538
    },
    "00405c18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00405c18(void)\n\n{\n    uint8_t uVar1;\n    ushort *arg_ch;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int16_t *piVar6;\n    uint16_t *puVar7;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int16_t *piVar13;\n    uint16_t uVar14;\n    uint16_t *puVar15;\n    int32_t *piVar16;\n    uint *puVar17;\n    uint *puVar18;\n    uint ARG_0;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h;\n    uint var_1ch;\n    uint var_20h;\n    uint var_24h;\n    uint var_28h;\n    uint var_2ch;\n    uint var_30h;\n    uint var_38h;\n    uint var_3ch;\n    uint var_44h_2;\n    uint var_48h;\n    uint var_4ch;\n    uint var_54h;\n    uint var_58h;\n    uint var_5fh;\n    uint var_66h;\n    char16_t *pcVar19;\n    uint uVar20;\n    uint16_t *puVar21;\n    uchar *puVar22;\n    char16_t *arg_10h;\n    uint uVar23;\n    char16_t *pcStack784;\n    uchar *puStack780;\n    int32_t iStack768;\n    uint lpVersionInformation;\n    uint var_2a0h;\n    uint var_294h;\n    uchar auStack508 [104];\n    uint var_190h;\n    uint32_t auStack368 [4];\n    uint32_t auStack352 [4];\n    uchar auStack336 [24];\n    int16_t aiStack312 [6];\n    uint var_128h;\n    uint var_104h;\n    uint var_f4h;\n    uint uStack236;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint uStack212;\n    uint var_cch;\n    int32_t iStack200;\n    uint uStack188;\n    int32_t iStack176;\n    int32_t iStack172;\n    uint uStack168;\n    int16_t *piStack156;\n    uint var_8ch;\n    int32_t var_80h;\n    int32_t iStack128;\n    int32_t iStack124;\n    uint var_74h;\n    uint16_t *puStack116;\n    uint uStack112;\n    uint var_68h;\n    ushort *puStack100;\n    int32_t lpString;\n    int32_t iStack92;\n    uint uStack88;\n    uint var_50h;\n    uint uStack80;\n    uint uStack76;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch_2;\n    int32_t iStack60;\n    uint var_30h_2;\n    int32_t iStack48;\n    uint16_t *var_24h_2;\n    ushort *puStack36;\n    int32_t iStack32;\n    uint var_18h_2;\n    uint16_t *var_14h_2;\n    uint32_t var_10h_2;\n    char cStack13;\n    int32_t *var_8h_2;\n    uint lpFileName;\n    \n    (*_sym.imp.MSVCRT.dll_int____cdecl___unsigned_int____cdecl__set_new_handler_int____cdecl___unsigned_int__)(0x4048ec)\n    ;\n    fcn.0040202a();\n    pcStack784 = 0x114;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&stack0xfffffcf0);\n    if (((iVar4 == 0) || (iStack768 != 2)) || (puStack780 < 0x5)) {\n        (*_sym.imp.USER32.dll_MessageBoxA)\n                  (0, \"Sorry, this program requires Microsoft Windows 2000 or later.\", \"7-Zip SFX\", 0x10);\n        return 0x14;\n    }\n    iStack176 = -1;\n    iStack172 = -1;\n    str.___InstallEnd__[0] = ';';\n    str.___Install__UTF_8_[0] = ';';\n    var_24h_2 = 0x41b830;\n    lpFileName._2_1_ = '\\0';\n    lpFileName._3_1_ = '\\0';\n    cStack13 = '\\0';\n    lpFileName._0_1_ = '\\0';\n    fcn.004014eb();\n    fcn.004014eb();\n    var_50h = 0;\n    uStack80 = 0;\n    uStack76 = 0;\n    var_44h = 4;\n    uStack88 = 0x41b54c;\n    fcn.00404932(0x20);\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)(&stack0xffffff9c);\n    uVar5 = fcn.00404ea8(uVar5);\n    fcn.00402aed(uVar5);\n    fcn.00403101(&stack0xffffff38);\n    puVar15 = iStack200 + 2;\n    puVar9 = puVar15;\n    var_14h_2 = puVar15;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n    puStack116 = puVar15 + iVar4;\n    fcn.00403685(L\"SfxVarModulePlatform\", 0x41a634, 1);\n    uVar23 = 1;\n    uVar5 = fcn.004026a9();\n    fcn.00403685(L\"SfxVarSystemPlatform\", uVar5, uVar23);\n    fcn.00403685(L\"SfxVarCmdLine0\", puVar15, 1);\n    fcn.0040455d();\n    if (iStack92 < 0x21) {\n        fcn.004011b7(0x20);\n    }\n    arg_ch = puStack100;\n    (*_sym.imp.USER32.dll_wsprintfW)(puStack100, 0x41bb78, *0x41e980);\n    lpString = fcn.00401184(arg_ch);\n    arg_ch[lpString] = 0;\n    fcn.00403685(L\"SfxVarSystemLanguage\", arg_ch, 1);\n    piVar6 = fcn.00404880(puVar15, L\"sfxlang\");\n    if ((piVar6 != NULL) && (*piVar6 == 0x3a)) {\n        iVar4 = (*_sym.imp.MSVCRT.dll__wtol)(piVar6 + 1);\n        if (iVar4 - 1U < 0xffff) {\n            *0x41e980 = iVar4;\n        }\n        for (; 0x20 < *puVar15; puVar15 = puVar15 + 1) {\n        }\n        for (; (*puVar15 != 0 && (*puVar15 < 0x21)); puVar15 = puVar15 + 1) {\n        }\n    }\n    iVar4 = fcn.00404880(puVar15, L\"sfxversion\");\n    if (iVar4 == 0) {\n        iVar4 = fcn.00404880(puVar15, L\"sfxwaitall\");\n        if (iVar4 != 0) {\n            uVar5 = fcn.004056fb(iVar4);\n            goto code_r0x00405def;\n        }\n        lpFileName._1_1_ = '\\0';\n        puVar7 = fcn.00404880(puVar15, L\"sfxelevation\");\n        if (puVar7 != NULL) {\n            lpFileName._1_1_ = '\\x01';\n            for (; (puVar15 = puVar7,  *puVar7 != 0 && (*puVar7 < 0x21)); puVar7 = puVar7 + 1) {\n            }\n        }\n        if (*0x41ea38 < 0x209) {\n            fcn.004011b7(0x208);\n        }\n        iVar8 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, *0x41ea30, 0x208);\n        iVar4 = *0x41ea30;\n        if (iVar8 == 0) {\n            uVar5 = 1;\n            fcn.004095ee(1, 6, puVar9);\n            goto code_r0x00405def;\n        }\n        *0x41ea34 = fcn.00401184(*0x41ea30);\n        *(iVar4 + *0x41ea34 * 2) = 0;\n        puVar9 = fcn.00404880(puVar15, L\"sfxtest\");\n        if (puVar9 != NULL) {\n            if (*puVar9 != 0x3a) goto code_r0x00405ed2;\n            uVar14 = puVar9[1] | 0x20;\n            puVar15 = puVar9;\n            if (uVar14 == 0x61) {\n                *0x41ea6c = 2;\n            }\n            else {\n                if (uVar14 != 99) {\n                    if (uVar14 == 100) {\n                        if (puVar9[1] != 0x44) {\n                            puVar15 = puVar9 + 2;\ncode_r0x00405f9a:\n                            *0x41ea68 = 0;\n                            if (*puVar15 == 0x3a) {\n                                pcStack784 = puVar15 + 1;\n                                *0x41ea68 = (*_sym.imp.MSVCRT.dll__wtol)();\n                                if ((0xe10 < *0x41ea68) || (*0x41ea68 == 0)) goto code_r0x00405fc1;\n                            }\n                            else {\ncode_r0x00405fc1:\n                                *0x41ea68 = 10;\n                            }\n                            *0x41ea6c = 1;\n                            goto code_r0x00405ff9;\n                        }\n                        if (puVar9[2] == 0x3a) {\n                            for (puVar15 = puVar9 + 3; (uVar14 = *puVar15,  0x20 < uVar14 && (uVar14 != 0x3a));\n                                puVar15 = puVar15 + 1) {\n                                puStack780 = uVar14;\n                                fcn.004017a8();\n                            }\n                            if (*0x41ea74 != 0) goto code_r0x00405f9a;\n                        }\n                    }\n                    else {\n                        if (uVar14 == 0x6f) {\n                            if (puVar9[2] == 0x3a) {\n                                uVar14 = puVar9[3];\n                                if (uVar14 == 0x31) {\n                                    uVar5 = 1;\n                                    goto code_r0x00405def;\n                                }\n                                if (uVar14 == 0x32) {\n                                    uVar5 = 0xff;\n                                    goto code_r0x00405def;\n                                }\n                                if (uVar14 == 0x33) {\n                                    uVar5 = 0x1f;\n                                    goto code_r0x00405def;\n                                }\n                                if (uVar14 == 0x34) {\n                                    uVar5 = 0x2ff;\n                                    goto code_r0x00405def;\n                                }\n                                if (uVar14 == 0x35) {\ncode_r0x00405f32:\n                                    uVar5 = 7;\n                                    goto code_r0x00405def;\n                                }\n                            }\n                            goto code_r0x00405ded;\n                        }\n                        if (uVar14 == 0x76) {\n                            uVar5 = 0x4a98;\n                            goto code_r0x00405def;\n                        }\n                    }\ncode_r0x00405ed2:\n                    uVar5 = 100;\n                    goto code_r0x00405def;\n                }\n                *0x41ea6c = (puVar9[2] == 99) + 3;\n            }\ncode_r0x00405ff9:\n            for (; 0x20 < *puVar15; puVar15 = puVar15 + 1) {\n            }\n            for (; (*puVar15 != 0 && (*puVar15 < 0x21)); puVar15 = puVar15 + 1) {\n            }\n            pcStack784 = L\"sfxconfig\";\n            puVar9 = fcn.00404880(puVar15);\n            if (puVar9 != NULL) {\n                if (*puVar9 != 0x3a) goto code_r0x00406032;\n                do {\n                    puVar9 = puVar9 + 1;\ncode_r0x00406032:\n                } while ((*puVar9 != 0) && (*puVar9 < 0x21));\n                *puStack100 = 0;\n                pcStack784 = &stack0xffffff9c;\n                lpString = 0;\n                puVar15 = fcn.00404ea8(puVar9);\n                if (*0x41ea6c != 2) {\n                    puStack780 = &stack0xffffff9c;\n                    fcn.0040143c();\n                }\n            }\n        }\n        pcStack784 = 0x41ea30;\n        fcn.0040143c();\n        uVar5 = 0x41ea30;\n        fcn.0040143c();\n        iVar4 = fcn.004033f2(0x41ea30);\n        if (-1 < iVar4) {\n            iVar8 = iVar4 * 2;\n            *(*0x41e9f4 + iVar8) = 0;\n            *0x41e9f8 = iVar4;\n            fcn.00401403(*0x41ea30 + 2 + iVar8);\n            fcn.00401403(*0x41ea30 + 2 + iVar8);\n            iVar4 = fcn.00402b23(0x2e);\n            if (0 < iVar4) {\n                *(*0x41ea18 + iVar4 * 2) = 0;\n                *0x41ea1c = iVar4;\n            }\n            fcn.0040143c(0x41ea18);\n            uVar5 = fcn.00402490(4);\n            fcn.00402aed(uVar5);\n            *0x41e9b0 = *0x41ea18;\n            *0x41e9b8 = *0x41ea0c;\n            *0x41e9bc = *0x41ea18;\n        }\n        uVar10 = fcn.004026a9(uVar5);\n        fcn.00401403(uVar10);\n        iVar4 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x10);\n        if (iVar4 == 0) {\n            var_40h = 0;\n        }\n        else {\n            var_40h = fcn.00404c71();\n        }\n        fcn.0041333e(var_40h);\n        iVar4 = *0x41ea30;\n        cVar2 = fcn.004123d3();\n        if (cVar2 == '\\0') {\n            fcn.004095ee(1, 7, *0x41ea30);\n            if (var_8h_2 != NULL) {\n                (**(*var_8h_2 + 8))(var_8h_2);\n            }\n            uVar5 = 2;\n            goto code_r0x00405def;\n        }\n        fcn.00402b4e();\n        piVar16 = var_8h_2;\n        cVar2 = fcn.00404038(var_8h_2, &fcn.00405c18::var_3ch_2);\n        if (cVar2 == '\\0') {\n            fcn.004095ee(0, 9, iVar4);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n            if (piVar16 != NULL) {\n                (**(*piVar16 + 8))(piVar16);\n            }\n            uVar5 = 3;\n            goto code_r0x00405def;\n        }\n        if ((*0x41ea6c == 0) && (puVar9 = fcn.00404880(puVar15, L\"sfxconfig\"),  puVar9 != NULL)) {\n            if (*puVar9 == 0x3a) {\n                puVar9 = puVar9 + 1;\n            }\n            uVar14 = *puVar9;\n            if (uVar14 != 0) {\n                do {\n                    if (0x20 < uVar14) break;\n                    puVar9 = puVar9 + 1;\n                    uVar14 = *puVar9;\n                } while (uVar14 != 0);\n                if ((*puVar9 != 0) && (cVar2 = fcn.004059b8(puVar9, &fcn.00405c18::var_3ch_2),  cVar2 == '\\0')) {\n                    fcn.004095ee(0, 10, iVar4);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n                    goto code_r0x0040623a;\n                }\n            }\n        }\n        else {\n            fcn.004127d6();\n            if ((iStack60 != 0) && (cVar2 = fcn.004037a5(&fcn.00405c18::var_3ch_2, &stack0xffffffa8, 0),  cVar2 == '\\0')\n               ) {\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\ncode_r0x0040623a:\n                if (piVar16 != NULL) {\n                    (**(*piVar16 + 8))(piVar16);\n                }\n                uVar5 = 4;\n                goto code_r0x00405def;\n            }\n            if (*0x41ea6c != 4) {\n                piVar16 = 0x41e0b0;\n                iVar4 = *0x41e0b0;\n                while (iVar4 != 0) {\n                    (*_sym.imp.USER32.dll_wsprintfW)(&stack0xfffffeb0, L\"SfxString%d\", iVar4);\n                    uVar23 = 0;\n                    uVar5 = fcn.00402490(*piVar16);\n                    fcn.00403685(&stack0xfffffeb0, uVar5, uVar23);\n                    piVar16 = piVar16 + 4;\n                    iVar4 = *piVar16;\n                }\n                fcn.00404f17(&stack0xffffffa8);\n                fcn.00403685(L\"SfxVarCmdLine2\", 0x41a584, 1);\ncode_r0x004062fe:\n                puVar15 = puVar15 + -1;\ncode_r0x00406305:\n                for (; puVar9 = puVar15,  0x20 < *puVar15; puVar15 = puVar15 + 1) {\n                }\n                for (; (*puVar9 != 0 && (*puVar9 < 0x21)); puVar9 = puVar9 + 1) {\n                }\n                puVar7 = puVar9;\n                if ((*puVar9 != 0x2f) && (*puVar9 != 0x2d)) goto code_r0x004065ba;\n                puVar21 = puVar9 + 1;\n                if (*puVar21 == 0x21) {\n                    puVar7 = puVar9 + 2;\n                    if (puVar9 == NULL) goto code_r0x004065ba;\n                    goto code_r0x004065be;\n                }\n                iVar4 = fcn.004046a3(puVar21, 0x41babc);\n                puVar15 = puVar9;\n                if (iVar4 != 0) {\n                    puVar9 = puVar9 + 3;\n                    uVar14 = *puVar9;\n                    if ((((uVar14 < 0x30) || (0x39 < uVar14)) && ((uVar14 < 0x61 || (0x7a < uVar14)))) &&\n                       ((uVar14 < 0x41 || (0x5a < uVar14)))) {\n                        if (0x20 < uVar14) goto code_r0x004065ba;\n                        var_24h_2 = 0x41b830;\n                        puVar9 = var_24h_2;\n                    }\n                    var_24h_2 = puVar9;\n                    lpFileName._2_1_ = '\\x01';\n                    lpFileName._3_1_ = '\\x01';\n                    goto code_r0x00406305;\n                }\n                iVar4 = fcn.004046a3(puVar21, 0x41bab4);\n                if (iVar4 == 0) {\n                    iVar4 = fcn.004046a3(puVar21, 0x41baac);\n                    if (iVar4 == 0) {\n                        iVar4 = fcn.004046a3(puVar21, 0x41baa4);\n                        if (iVar4 == 0) {\n                            iVar4 = fcn.004046a3(puVar21, 0x41ba9c);\n                            if (iVar4 == 0) {\n                                iVar4 = fcn.004046a3(puVar21, 0x41ba94);\n                                if (iVar4 == 0) {\n                                    iVar4 = fcn.004046a3(puVar21, 0x41ba8c);\n                                    if (iVar4 == 0) {\n                                        iVar4 = fcn.004046a3(puVar21, 0x41ba84);\n                                        if (iVar4 == 0) {\n                                            iVar4 = fcn.004046a3(puVar21, 0x41ba7c);\n                                            if (iVar4 != 0) {\n                                                puVar21 = puVar9 + 4;\n                                                pcVar19 = L\"BeginPromptTimeout\";\n                                                goto code_r0x00406507;\n                                            }\n                                            uVar14 = *puVar21;\n                                            if ((uVar14 == 0x70) || (uVar14 == 0x50)) goto code_r0x00406581;\n                                            if (((uVar14 == 0x79) || (uVar14 == 0x59)) && (puVar9[2] < 0x21)) {\n                                                lpFileName._2_1_ = '\\x01';\n                                            }\n                                            else if ((((uVar14 == 0x3f) || (uVar14 == 0x68)) || (uVar14 == 0x48)) &&\n                                                    (puVar9[2] < 0x21)) {\n                                                lpFileName._0_1_ = '\\x01';\n                                            }\n                                            else {\n                                                puVar15 = fcn.00404b47(puVar21, &stack0xffffffa8);\n                                                if (puVar15 == NULL) goto code_r0x004065ba;\n                                                if (puVar15 == 0x1) {\n                                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n                                                    if (var_8h_2 != NULL) {\n                                                        (**(*var_8h_2 + 8))(var_8h_2);\n                                                    }\n                                                    uVar5 = 0x20;\n                                                    goto code_r0x00405def;\n                                                }\n                                            }\n                                            goto code_r0x00406305;\n                                        }\n                                        uVar14 = puVar9[3];\n                                        if ((0x2f < uVar14) && (uVar14 < 0x3a)) {\n                                            *0x41e3b0 = (*_sym.imp.MSVCRT.dll__wtol)(puVar9 + 3);\n                                            goto code_r0x00406305;\n                                        }\n                                    }\n                                    else if (puVar9[3] < 0x21) {\n                                        cStack13 = '\\x01';\n                                        goto code_r0x00406305;\n                                    }\n                                }\n                                else {\n                                    puVar21 = puVar9 + 3;\n                                    if (((*puVar21 == 0x30) || (*puVar21 == 0x31)) && (puVar9[4] < 0x21)) {\n                                        pcVar19 = L\"SelfDelete\";\n                                        goto code_r0x00406507;\n                                    }\n                                }\ncode_r0x004065ba:\n                                puVar9 = puVar7;\ncode_r0x004065be:\n                                if (var_14h_2 == puVar9) {\n                                    puVar15 = 0x1;\n                                    iVar4 = 0x41a584;\n                                }\n                                else {\n                                    puVar15 = var_14h_2;\n                                    fcn.00402a9c();\n                                    iVar4 = puVar9 - var_14h_2 >> 1;\n                                    fcn.00404d44(&stack0xffffff80, 0, iVar4);\n                                    fcn.0040143c(&stack0xffffff80);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack128);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack36);\n                                    fcn.00405992();\n                                    fcn.0040596c();\n                                }\n                                fcn.00403685(L\"SfxVarCmdLine1\", iVar4, puVar15);\n                                fcn.00402a9c(puVar7);\n                                fcn.00404d44(&stack0xffffff80, 0, puStack116 - puVar7 >> 1);\n                                fcn.0040143c(&stack0xffffff80);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack128);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack36);\n                                fcn.00405992();\n                                fcn.0040596c();\n                                fcn.00403685(L\"SfxVarCmdLine2\", puStack100, 1);\n                                fcn.00404f17(&stack0xffffffa8);\n                                if (((lpFileName._1_1_ != '\\0') || ((*0x41e9c8 & 4) == 0)) ||\n                                   (iVar4 = fcn.00402757(),  iVar4 != 0)) {\n                                    var_80h = 0;\n                                    iVar4 = fcn.004029db(&stack0xffffffa8, L\"SetEnvironment\", &fcn.00405c18::var_80h);\n                                    goto joined_r0x00406831;\n                                }\n                                fcn.004014eb();\n                                fcn.004014eb();\n                                uVar5 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)(&fcn.00405c18::var_8ch);\n                                uVar5 = fcn.00404ea8(uVar5);\n                                fcn.00402a9c(uVar5);\n                                puVar22 = &stack0xffffff58;\n                                uVar20 = 0x20;\n                                pcVar19 = L\"sfxelevation\";\n                                uVar23 = 0x41b890;\n                                uVar5 = fcn.00404df8(&stack0xffffff44, 0x22, &fcn.00405c18::var_8ch);\n                                uVar5 = fcn.00404e16(&fcn.00405c18::var_30h_2, uVar5, uVar23);\n                                uVar5 = fcn.00404e16(&stack0xffffff90, uVar5, pcVar19);\n                                uVar5 = fcn.00404e34(&stack0xffffff64, uVar5, uVar20);\n                                uVar5 = fcn.004017d3(&stack0xffffff80, uVar5, puVar22);\n                                fcn.0040143c(uVar5);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack128);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack156);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack112);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_30h_2);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack188);\n                                uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xffffffff, 0xffffffff);\n                                (*_sym.imp.KERNEL32.dll_SetProcessWorkingSetSize)(uVar5);\n                                iVar4 = fcn.004053bb(puStack36, 2, 0);\n                                if (iVar4 != 0) {\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack168);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack36);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_8ch);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n                                    goto code_r0x004067ff;\n                                }\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack168);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack36);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_8ch);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n                                if (var_8h_2 != NULL) {\n                                    (**(*var_8h_2 + 8))(var_8h_2);\n                                }\n                                uVar5 = 0xb;\n                                goto code_r0x00405def;\n                            }\n                            puVar21 = puVar9 + 3;\n                            pcVar19 = L\"MiscFlags\";\n                        }\n                        else {\n                            puVar21 = puVar9 + 3;\n                            pcVar19 = L\"GUIFlags\";\n                        }\n                    }\n                    else {\n                        puVar21 = puVar9 + 3;\n                        if (((*puVar21 < 0x30) || (0x32 < *puVar21)) || (0x20 < puVar9[4])) goto code_r0x004065ba;\n                        pcVar19 = L\"GUIMode\";\n                    }\n                }\n                else {\n                    puVar21 = puVar9 + 3;\n                    pcVar19 = L\"OverwriteMode\";\n                }\ncode_r0x00406507:\n                fcn.0040519e(pcVar19, puVar21, &stack0xffffffa8);\n                goto code_r0x00406305;\n            }\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n        if (piVar16 != NULL) {\n            (**(*piVar16 + 8))(piVar16);\n        }\n    }\n    else {\n        fcn.004052e7();\n    }\ncode_r0x00405ded:\n    uVar5 = 0;\ncode_r0x00405def:\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack200);\n    fcn.0040497f();\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack212);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack100);\n    return uVar5;\ncode_r0x00406581:\n    fcn.004014eb();\n    puVar15 = fcn.00404ea8(puVar9 + 2, &stack0xffffffdc);\n    fcn.00401503(puStack36);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack36);\n    goto code_r0x004062fe;\njoined_r0x00406831:\n    if (iVar4 == 0) goto code_r0x00406894;\n    fcn.00402a9c(iVar4);\n    iVar8 = iStack128;\n    iVar11 = fcn.00412683(iStack128, 0x3d);\n    if (iVar11 < 1) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar8);\n        goto code_r0x00406894;\n    }\n    *(iVar8 + iVar11 * 2) = 0;\n    iStack124 = iVar11;\n    fcn.00403685(iVar8, iVar11 * 2 + 2 + iVar4, 0);\n    var_80h = var_80h + 1;\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar8);\n    iVar4 = fcn.004029db(&stack0xffffffa8, L\"SetEnvironment\", &fcn.00405c18::var_80h);\n    goto joined_r0x00406831;\ncode_r0x00406894:\n    fcn.00404af0();\n    if (*0x41e3a4 == 0xffffffff) {\n        *0x41e3a4 = 0;\n    }\n    if (lpFileName == '\\0') {\n        if (lpFileName._2_1_ != '\\0') {\n            *0x41e3a4 = *0x41e3a4 & 0xfffffeff;\n        }\n        (*_sym.imp.ole32.dll_CoInitialize)(0);\n        uVar5 = 0;\n        uVar12 = fcn.004029db(&stack0xffffffa8, L\"InstallPath\", 0);\n        if (uVar12 != 0) {\n            fcn.00401403(uVar5, uVar12);\n            uVar10 = uVar12;\n        }\n        fcn.0040464c(0x41e9e8);\n        iVar4 = fcn.004029db(&stack0xffffffa8, L\"SfxAuthor\", 0);\n        if (iVar4 != 0) {\n            fcn.0040a8a0(&stack0xfffffe04);\n            iVar8 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar4);\n            fcn.0040abc0(&stack0xfffffe04, iVar4, iVar8 * 2);\n            fcn.0040ac10(&stack0xfffffe04, &stack0xfffffe90);\n            puVar17 = \"123456789ABCDEFGHJKMNPQRSTUVWXYZ\";\n            puVar18 = &fcn.00405c18::var_190h;\n            for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar18 = *puVar17;\n                puVar17 = puVar17 + 1;\n                puVar18 = puVar18 + 1;\n            }\n            *puVar18 = *puVar17;\n            iVar4 = 0;\n            do {\n                *(&stack0xfffffe90 + iVar4 * 4) = *(&stack0xfffffe90 + iVar4 * 4) ^ *(&stack0xfffffea0 + iVar4 * 4);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < 4);\n            iVar4 = 0;\n            var_10h_2 = 0;\n            do {\n                uVar12 = var_10h_2 & 0x80000007;\n                uVar1 = (&stack0xfffffe90)[var_10h_2 + (var_10h_2 >> 0x1f & 7U) >> 3];\n                if (uVar12 < 0) {\n                    uVar12 = (uVar12 - 1 | 0xfffffff8) + 1;\n                }\n                if ((var_10h_2 != 0) && (var_10h_2 % 0x19 == 0)) {\n                    *(&stack0xfffffec8 + iVar4 * 2) = 0x2d;\n                    iVar4 = iVar4 + 1;\n                }\n                var_10h_2 = var_10h_2 + 5;\n                *(&stack0xfffffec8 + iVar4 * 2) = *(&fcn.00405c18::var_190h + (uVar1 >> (uVar12 & 0x1f) & 0x1f));\n                iVar4 = iVar4 + 1;\n            } while (var_10h_2 < 0x7d);\n            *(&stack0xfffffec8 + iVar4 * 2) = 0;\n            fcn.00401503(&stack0xfffffec8);\n        }\n        iVar4 = fcn.004029db(&stack0xffffffa8, L\"BeginPromptTimeout\", 0);\n        if (iVar4 != 0) {\n            *0x41e9d4 = (*_sym.imp.MSVCRT.dll__wtol)(iVar4);\n        }\n        piVar16 = var_8h_2;\n        if (*0x41ea74 == 0) {\n            if (*0x41ea6c != 3) {\n                if (((*0x41e9c8 & 8) != 0) || (iVar4 = fcn.004015d8(var_8h_2),  iVar4 != 0)) {\n                    do {\n                        iVar4 = fcn.004029db(&stack0xffffffa8, L\"BeginPrompt\", 0);\n                        if ((iVar4 != 0) && (lpFileName._2_1_ == '\\0')) {\n                            iVar4 = fcn.00408bb8(*0x41e9b0, iVar4);\n                            if (iVar4 == 0) {\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n                                goto code_r0x00406c74;\n                            }\n                            iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0x10);\n                            if (iVar3 < 0) {\n                                lpFileName._2_1_ = '\\x01';\n                                lpFileName._3_1_ = '\\x01';\n                            }\n                            if (*0x41ea54 != 0) {\n                                *0x41e3a4 = *0x41e3a4 & 0xffffff7f;\n                            }\n                        }\n                        fcn.004014eb();\n                        puVar15 = var_24h_2;\n                        if (lpFileName._3_1_ != '\\0') {\n                            do {\n                                fcn.00401403(L\"AutoInstall\");\n                                fcn.004017a8();\n                                iVar4 = fcn.004029db(&stack0xffffffa8, var_30h_2, 0);\n                                if (iVar4 == 0) {\n                                    fcn.004095ee(0, 0xe, var_30h_2);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_30h_2);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n                                    if (var_8h_2 != NULL) {\n                                        (**(*var_8h_2 + 8))(var_8h_2);\n                                    }\n                                    uVar5 = 6;\n                                    goto code_r0x00405def;\n                                }\n                                puVar15 = puVar15 + 1;\n                                uVar14 = *puVar15;\n                            } while ((((0x2f < uVar14) && (uVar14 < 0x3a)) || ((0x60 < uVar14 && (uVar14 < 0x7b)))) ||\n                                    ((0x40 < uVar14 && (uVar14 < 0x5b))));\n                            fcn.00401403(L\"AutoInstall\");\n                            uVar10 = *var_24h_2;\n                            fcn.004017a8();\n                        }\n                        lpFileName._1_1_ = '\\0';\n                        if (iStack48 == 0) {\n                            iVar4 = fcn.004029db(&stack0xffffffa8, L\"ExecuteFile\", 0, uVar10);\n                            if (iVar4 != 0) {\n                                fcn.00401403(L\"ExecuteFile\");\n                                lpFileName._1_1_ = '\\x01';\n                                if (iStack48 != 0) goto code_r0x00406c1a;\n                            }\n                            iVar4 = fcn.004029db(&stack0xffffffa8, L\"RunProgram\", 0, uVar10);\n                            if (iVar4 != 0) {\n                                fcn.00401403(L\"RunProgram\");\n                            }\n                        }\ncode_r0x00406c1a:\n                        if ((((lpFileName._3_1_ != '\\0') || (lpFileName._2_1_ != '\\0')) || ((*0x41e3a4 & 0xc0) != 0x80))\n                           || (iVar4 = fcn.00408c36(*0x41e9a8, *0x41e9a4),  iVar4 != 0)) {\n                            if (*0x41e9ec == 0) {\n                                uVar5 = fcn.00404a41(&stack0xffffff44, L\"7ZipSfx.%03x\");\n                                puVar15 = 0x406cf3;\n                                fcn.0040143c(uVar5);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n                                *0x41e994 = '\\0';\n                            }\n                            else {\n                                fcn.004013d1();\n                                puVar15 = &stack0xffffffdc;\n                                fcn.0040464c();\n                                if (iStack32 == 0) {\n                                    puVar15 = &stack0xffffffdc;\n                                    fcn.0040143c();\n                                }\n                                *0x41e994 = '\\x01';\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack36);\n                            }\n                            iVar3 = *(*0x41e9e8 + -2 + *0x41e9ec * 2);\n                            if ((iVar3 == 0x5c) || (iVar3 == 0x2f)) {\n                                *0x41e9ec = *0x41e9ec + -1;\n                                *(*0x41e9e8 + *0x41e9ec * 2) = 0;\n                            }\n                            if (lpFileName._2_1_ != '\\0') {\n                                *0x41e9c8 = *0x41e9c8 | 3;\n                            }\n                            if (*0x41ea68 == 0) {\n                                iVar4 = fcn.004019e5(var_40h, 0x41e9e8);\ncode_r0x00406d96:\n                                if (iVar4 != 0) {\n                                    fcn.0040491c();\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_30h_2);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n                                    if (var_8h_2 != NULL) {\n                                        (**(*var_8h_2 + 8))(var_8h_2);\n                                    }\n                                    uVar5 = 8;\n                                    goto code_r0x00405def;\n                                }\n                            }\n                            else {\n                                iVar4 = fcn.00408c92();\n                                if (iVar4 == 0) {\n                                    iVar4 = -0x7fffbffb;\n                                    goto code_r0x00406d96;\n                                }\n                            }\n                            fcn.00404af0();\n                            if ((cStack13 != '\\0') && (*0x41e994 != '\\0')) goto code_r0x0040739a;\n                            var_14h_2 = NULL;\n                            fcn.004014eb();\n                            if (lpFileName._3_1_ == '\\0') {\n                                fcn.00404e52(&stack0xffffffa8, &stack0xffffffdc);\n                            }\n                            lpFileName._3_1_ = '\\0';\n                            puStack116 = var_24h_2;\n                            goto code_r0x00406e08;\n                        }\n                        if (*0x41e9d8 == '\\0') goto code_r0x00406cbe;\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_30h_2);\n                    } while( true );\n                }\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n                if (piVar16 != NULL) {\n                    (**(*piVar16 + 8))(piVar16);\n                }\n                goto code_r0x00406ad9;\n            }\n            uVar5 = fcn.004096e3(&stack0xffffffa8);\n        }\n        else {\n            uVar5 = fcn.004097de(&stack0xffffffa8);\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n        if (var_8h_2 != NULL) {\n            (**(*var_8h_2 + 8))(var_8h_2);\n        }\n        goto code_r0x00405def;\n    }\n    iVar4 = fcn.004029db(&stack0xffffffa8, L\"HelpText\", 0);\n    if (iVar4 == 0) {\n        iVar4 = fcn.00402490(0x18);\n    }\n    fcn.00404544();\n    fcn.00408433(0x11, *0x41e9b0, iVar4, 0);\n    fcn.004081a6();\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\ncode_r0x004067ff:\n    if (var_8h_2 != NULL) {\n        (**(*var_8h_2 + 8))(var_8h_2);\n    }\n    goto code_r0x00405ded;\ncode_r0x00406cbe:\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_30h_2);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\ncode_r0x00406c74:\n    if (var_8h_2 != NULL) {\n        (**(*var_8h_2 + 8))(var_8h_2);\n    }\ncode_r0x00406ad9:\n    uVar5 = 5;\n    goto code_r0x00405def;\ncode_r0x00406e08:\n    var_40h = 0;\n    lpFileName._0_1_ = '\\0';\n    fcn.004014eb();\n    fcn.004014eb();\n    var_10h_2 = 0;\n    if (iStack48 != 0) {\n        pcVar19 = fcn.004029db(&stack0xffffffa8, var_30h_2, &fcn.00405c18::var_14h_2);\n        if (pcVar19 != NULL) goto code_r0x00406e94;\n        puVar9 = puStack116 + 1;\n        uVar14 = *puVar9;\n        puStack116 = puVar9;\n        if ((((uVar14 < 0x30) || (0x39 < uVar14)) && ((uVar14 < 0x61 || (0x7a < uVar14)))) &&\n           ((uVar14 < 0x41 || (0x5a < uVar14)))) goto code_r0x00407248;\n        fcn.00401403(L\"AutoInstall\");\n        fcn.004017a8(*puVar9);\n        var_14h_2 = NULL;\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack156);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack112);\n        goto code_r0x00406e08;\n    }\n    if (*0x41e994 == '\\0') {\n        pcVar19 = L\"setup.exe\";\n        arg_10h = L\"setup.exe\";\n        uVar5 = fcn.00404e16(&stack0xffffff14, 0x41e9e8, 0x41a7ec);\n        uVar5 = fcn.00404e16(&stack0xffffff44, uVar5, arg_10h);\n        fcn.0040143c(uVar5);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack188);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack236);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(uStack112);\n        if (iVar4 == -1) {\n            fcn.0040491c();\n            fcn.004095ee(0, 0xf, puVar15);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack156);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack112);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack36);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_30h_2);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n            if (var_8h_2 != NULL) {\n                (**(*var_8h_2 + 8))(var_8h_2);\n            }\n            goto code_r0x00405f32;\n        }\n        lpFileName._3_1_ = '\\x01';\ncode_r0x00406e94:\n        fcn.00401403(pcVar19);\n        fcn.00404680(&stack0xffffff64);\n        piVar6 = piStack156;\ncode_r0x00406eaa:\n        while( true ) {\n            while( true ) {\n                while (piVar13 = piVar6,  piVar6 = fcn.004046dd(piVar13, L\"waitall\", 0),  piVar6 != NULL) {\n                    lpFileName._0_1_ = '\\x01';\n                }\n                piVar6 = fcn.004046dd(piVar13, L\"hidcon\", 0);\n                if (piVar6 == NULL) break;\n                var_10h_2 = var_10h_2 | 1;\n            }\n            piVar6 = fcn.004046dd(piVar13, L\"nowait\", 0);\n            if (piVar6 == NULL) break;\n            if (*0x41e994 != '\\0') {\ncode_r0x00406fa6:\n                var_10h_2 = var_10h_2 | 0x10000;\n            }\n        }\n        piVar6 = fcn.004046dd(piVar13, L\"forcenowait\", 0);\n        if (piVar6 != NULL) goto code_r0x00406fa6;\n        piVar6 = fcn.004046dd(piVar13, 0x41ba84, 2);\n        if (piVar6 != NULL) {\n            if (*0x41e3b0 == -1) {\n                *0x41e3b0 = (*_sym.imp.MSVCRT.dll__wtol)(piVar13 + 2);\n            }\n            goto code_r0x00406eaa;\n        }\n        piVar6 = fcn.004046dd(piVar13, 0x41b9a4, 3);\n        if (piVar6 != NULL) {\n            iStack176 = piVar13[3] - 0x30;\n            goto code_r0x00406eaa;\n        }\n        piVar6 = fcn.004046dd(piVar13, 0x41b99c, 3);\n        if (piVar6 != NULL) {\n            iStack172 = piVar13[3] - 0x30;\n            goto code_r0x00406eaa;\n        }\n        piVar6 = fcn.004046dd(piVar13, 0x41a634, 0);\n        if ((piVar6 != NULL) || (piVar6 = fcn.004046dd(piVar13, L\"i386\", 0),  piVar6 != NULL)) {\n            var_40h = 1;\n            goto code_r0x00406eaa;\n        }\n        piVar6 = fcn.004046dd(piVar13, 0x41b984, 0);\n        if ((piVar6 != NULL) || (piVar6 = fcn.004046dd(piVar13, 0x41a62c, 0),  piVar6 != NULL)) {\n            var_40h = 2;\n            goto code_r0x00406eaa;\n        }\n        if (lpFileName._1_1_ == '\\0') {\n            puVar22 = &stack0xffffffdc;\n            fcn.0040143c(puVar22);\ncode_r0x004070fe:\n            fcn.00402aed(piVar13, puVar22);\n        }\n        else {\n            if (*piVar13 == 0x22) {\n                fcn.00401403(piVar13);\n            }\n            else {\n                fcn.00401403(0x41b824);\n                fcn.00402aed(piVar13);\n                fcn.00402aed(0x41b824);\n            }\n            piVar13 = fcn.004029db(&stack0xffffffa8, L\"ExecuteParameters\", 0);\n            if (piVar13 != NULL) {\n                puVar22 = 0x41b980;\n                fcn.00402aed();\n                goto code_r0x004070fe;\n            }\n        }\n        fcn.004014eb();\n        uVar5 = uStack112;\n        puVar15 = fcn.00404ea8(uStack112, &fcn.00405c18::var_8ch);\n        fcn.00402a9c();\n        fcn.00404680(&fcn.00405c18::var_8ch);\n        if ((*0x41ea6c == 0) && (iVar4 = fcn.00402726(var_40h),  iVar4 != 0)) {\n            if (*puVar7 != 0) {\n                puVar15 = puVar7;\n                fcn.00402aed();\n                for (; *puVar7 != 0; puVar7 = puVar7 + 1) {\n                }\n            }\n            fcn.00404680(&stack0xffffff58);\n            if (lpFileName == '\\0') {\n                puVar22 = &stack0xffffff58;\n                uVar20 = 0x41b8b0;\n                uVar23 = fcn.00404df8(&fcn.00405c18::var_dch, 0x22, &fcn.00405c18::var_8ch);\n                uVar23 = fcn.00404e16(&fcn.00405c18::var_f4h, uVar23, uVar20);\n                fcn.004017d3(&stack0xffffff80, uVar23, puVar22);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_f4h);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_dch);\n                iVar4 = fcn.004053bb(iStack128, var_10h_2, *0x41e9e8);\n                if (iVar4 == 0) {\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack128);\ncode_r0x004072bd:\n                    fcn.004095ee(1, 0x10, uVar5);\n                    fcn.0040491c();\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack168);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_8ch);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack156);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar5);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack36);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_30h_2);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n                    if (var_8h_2 != NULL) {\n                        (**(*var_8h_2 + 8))(var_8h_2);\n                    }\n                    uVar5 = 9;\n                    goto code_r0x00405def;\n                }\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack128);\n            }\n            else {\n                iVar4 = fcn.00405492(var_8ch, uStack168, var_10h_2);\n                if (iVar4 != 0) {\n                    (*_sym.imp.KERNEL32.dll_SetLastError)(iVar4);\n                    goto code_r0x004072bd;\n                }\n            }\n            fcn.004026be();\n        }\n        if ((lpFileName._1_1_ != '\\0') || (lpFileName._3_1_ != '\\0')) {\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack168);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_8ch);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack156);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar5);\n            goto code_r0x0040733a;\n        }\n        iStack32 = 0;\n        *puStack36 = 0;\n        var_14h_2 = var_14h_2 + 1;\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack168);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_8ch);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack156);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar5);\n        goto code_r0x00406e08;\n    }\ncode_r0x00407248:\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack156);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack112);\ncode_r0x0040733a:\n    if (*0x41ea6c == 0) {\n        fcn.00404af0();\n        fcn.004051fc(fcn.00405b3b, &stack0xffffffa8, L\"Shortcut\", var_24h_2, iStack176);\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(*0x41e9f4);\n        fcn.004051fc(fcn.00404c42, &stack0xffffffa8, L\"Delete\", var_24h_2, iStack172);\n        fcn.0040491c();\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack36);\ncode_r0x0040739a:\n    if (*0x41e3b0 == -1) {\n        if (lpFileName._2_1_ != '\\0') goto code_r0x00407413;\n        *0x41e3b0 = 1;\n    }\n    if ((0 < *0x41e3b0) && (iVar4 = fcn.004029db(&stack0xffffffa8, L\"FinishMessage\", 0),  iVar4 != 0)) {\n        if (999 < *0x41e3b0) {\n            *0x41e3b0 = 999;\n        }\n        fcn.00404903();\n        fcn.00408433(0x11, *0x41e9b0, iVar4, 0);\n        fcn.004081a6();\n    }\ncode_r0x00407413:\n    if ((((cStack13 == '\\0') && (*0x41ea6c == 0)) &&\n        (piVar6 = fcn.004029db(&stack0xffffffa8, L\"SelfDelete\", 0),  piVar6 != NULL)) && (*piVar6 == 0x31)) {\n        uVar5 = 0x41ea30;\n        fcn.004013d1();\n        fcn.00405758(uVar5);\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_30h_2);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_3ch_2);\n    if (var_8h_2 != NULL) {\n        (**(*var_8h_2 + 8))(var_8h_2);\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack200);\n    fcn.0040497f();\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack212);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack100);\n    return 0;\n}\n",
        "token_count": 13490
    },
    "00407503": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00407503(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 84
    },
    "00407925": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00407925(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    if (*(param_1 + 0x38) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), param_2);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_ShowWindow)(iVar1, -(unaff_retaddr != 0) & 5);\n        }\n    }\n    else {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 148
    },
    "00407a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407a40(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t arg_10h;\n    int32_t arg_ch;\n    int32_t arg_18h;\n    int32_t lpRect;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_18h = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_ch = 0;\n    uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), 0x4b3);\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar3, 0xfffffff0);\n    if ((uVar4 & 0x10000000) != 0) {\n        fcn.00407908(0x4b3, &lpRect);\n        var_ch = var_24h - lpRect;\n        var_18h = 0x4b3;\n        var_14h = var_20h - var_28h;\n    }\n    uVar3 = (*pcVar1)(*(param_1 + 4), 0x4b4);\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar3, 0xfffffff0);\n    if ((uVar4 & 0x10000000) != 0) {\n        fcn.00407908(0x4b4, &lpRect);\n        var_4h = var_24h - lpRect;\n        var_18h = 0x4b4;\n        var_14h = var_20h - var_28h;\n    }\n    if ((0 < var_ch) && (0 < var_4h)) {\n        if (var_ch < var_4h) {\n            var_ch = var_4h;\n        }\n        else {\n            var_4h = var_ch;\n        }\n    }\n    if (((var_18h != 0) && (var_8h = var_4h,  var_ch != 0)) && (var_8h = var_ch,  var_4h != 0)) {\n        var_8h = var_4h + 10 + var_ch;\n    }\n    if (*(param_1 + 0x14) < var_8h + 0x1a) {\n        *(param_1 + 0x14) = var_8h + 0x1a;\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x10);\n    var_1ch = (*pcVar1)(0x11);\n    iVar6 = (*pcVar1)(8);\n    *(param_1 + 0x14) = *(param_1 + 0x14) + iVar6;\n    iVar6 = (*pcVar1)(7);\n    *(param_1 + 0x18) = *(param_1 + 0x18) + iVar6;\n    var_10h = (var_1ch - *(param_1 + 0x18)) / 2;\n    iVar5 = (iVar5 - *(param_1 + 0x14)) / 2;\n    var_1ch = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 4));\n    if (var_1ch != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)(var_1ch, &lpRect);\n        pcVar2 = _sym.imp.USER32.dll_ClientToScreen;\n        (*_sym.imp.USER32.dll_ClientToScreen)(var_1ch, &lpRect);\n        (*pcVar2)(var_1ch, &var_24h);\n        var_10h = var_28h;\n        if (*(param_1 + 0x14) < var_24h - lpRect) {\n            lpRect = ((var_24h - *(param_1 + 0x14)) - lpRect) / 2 + lpRect;\n        }\n        if (*(param_1 + 0x18) < var_20h - var_28h) {\n            var_10h = ((var_20h - *(param_1 + 0x18)) - var_28h) / 2 + var_28h;\n        }\n        iVar5 = lpRect + 10;\n        var_10h = var_10h + 10;\n    }\n    (*_sym.imp.USER32.dll_SetWindowPos)(*(param_1 + 4), 0, iVar5, var_10h, *(param_1 + 0x14), *(param_1 + 0x18), 4);\n    if (*(param_1 + 0x30) == 0) {\n        fcn.00407a11(0x4b2, 0xc, 10, *(param_1 + 0x28) + 1, *(param_1 + 0x2c) + 1, 0);\n    }\n    else {\n        fcn.00407a11(0x4b1, 0xc, 0xc, 0, 0, 1);\n        fcn.00407908(0x4b1, &lpRect);\n        iVar5 = *(param_1 + 0x2c);\n        var_20h = var_20h + (2 - var_28h);\n        if (iVar5 < var_20h) {\n            iVar6 = (var_20h - iVar5) / 2;\n        }\n        else {\n            iVar6 = 0;\n        }\n        fcn.00407a11(0x4b2, var_24h + 0xb, iVar6 + 10, *(param_1 + 0x28) + 1, iVar5 + 1, 0);\n    }\n    if (var_18h != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 4), &lpRect);\n        if ((var_ch == 0) || (var_4h == 0)) {\n            uVar3 = 1;\n            arg_18h = 0;\n            arg_10h = (var_20h - var_14h) + -10;\n            iVar6 = 0;\n            arg_ch = (var_24h - var_8h) / 2;\n            iVar5 = var_18h;\n        }\n        else {\n            uVar3 = 0;\n            arg_10h = (var_20h - var_14h) + -10;\n            arg_ch = (var_24h - var_8h) / 2;\n            iVar6 = var_ch;\n            arg_18h = var_14h;\n            fcn.00407a11(0x4b3, arg_ch, arg_10h, var_ch, var_14h, 0);\n            fcn.00407908(0x4b3, &lpRect);\n            iVar5 = 0x4b4;\n        }\n        fcn.00407a11(iVar5, arg_ch, arg_10h, iVar6, arg_18h, uVar3);\n    }\n    iVar5 = (*pcVar1)(8);\n    *(param_1 + 0x14) = *(param_1 + 0x14) - iVar5;\n    iVar5 = (*pcVar1)(7);\n    *(param_1 + 0x18) = *(param_1 + 0x18) - iVar5;\n    return;\n}\n",
        "token_count": 1800
    },
    "00408048": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408048(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x70) != 0) {\n        (**(**(param_1 + 0x70) + 0x28))(*(param_1 + 0x70), *(param_1 + 4), param_2);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004080bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004080bc(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00407a40();\n    pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n    if (*0x41e9c4 == 1) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 4));\n        iVar2 = var_8h;\n    }\n    else {\n        fcn.00407908(0x4b4, &var_14h);\n        iVar2 = var_10h;\n    }\n    iVar2 = iVar2 + -10;\n    (*pcVar1)(*(param_1 + 4), &var_14h);\n    var_4h = var_ch + -0x18;\n    if ((*0x41e3a4 & 4) != 0) {\n        iVar2 = iVar2 - *(param_1 + 0x5c);\n        fcn.00407a11(0x4b5, 0xc, iVar2, var_4h, *(param_1 + 0x5c) + 1, 0);\n        iVar2 = iVar2 + -5;\n    }\n    fcn.00407908(0x4b8, &var_14h);\n    fcn.00407a11(0x4b8, 0xc, (var_10h - var_8h) + iVar2, var_4h, var_8h - var_10h, 0);\n    return;\n}\n",
        "token_count": 390
    },
    "00408433": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408433(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    int32_t var_18h;\n    int32_t var_ch;\n    \n    if ((arg_ch == 0) || (arg_10h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00402a9c(arg_10h);\n        fcn.00402a9c(arg_ch);\n        fcn.00404680(&var_18h);\n        fcn.00404680(&var_ch);\n        in_ECX[2] = arg_8h;\n        in_ECX[3] = var_ch;\n        in_ECX[4] = var_18h;\n        uVar1 = (**(*in_ECX + 4))(arg_14h);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "004084ad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004084ad(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((*0x41e3a4 & 0x100) == 0) {\ncode_r0x004084b8:\n        uVar1 = 1;\n    }\n    else {\n        if (param_1 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            if (*0x41ea74 != 0) goto code_r0x004084b8;\n            uVar1 = *(param_1 + 4);\n        }\n        uVar1 = fcn.00408433(8, *0x41e9b0, *0x41e9a0, uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "00408611": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408611(int32_t param_1)\n\n{\n    uint uVar1;\n    uint ARG_0;\n    uint var_ch;\n    \n    fcn.004013d1(param_1 + 0x3c);\n    if (0 < *(param_1 + 0x48)) {\n        uVar1 = fcn.00402490(0x1d);\n        (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x41bcd0, *(param_1 + 0x48), uVar1);\n        fcn.00402aed(&ARG_0);\n    }\n    fcn.00408186(*(param_1 + 0x4c), var_ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 181
    },
    "0040872f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040872f(int32_t param_1)\n\n{\n    uint uVar1;\n    uchar auStack536 [512];\n    uint uStack24;\n    uint uStack16;\n    \n    if (*(param_1 + 0x48) != 0) {\n        uVar1 = *(param_1 + 4);\n        uStack16 = 0x408743;\n        (*_sym.imp.USER32.dll_KillTimer)();\n        *(param_1 + 0x48) = 0;\n        fcn.004013d1(param_1 + 0x3c, uVar1);\n        if (0 < *(param_1 + 0x48)) {\n            uVar1 = fcn.00402490(0x1d);\n            (*_sym.imp.USER32.dll_wsprintfW)(&stack0xfffffde8, 0x41bcd0, *(param_1 + 0x48), uVar1);\n            fcn.00402aed(&stack0xfffffde8);\n        }\n        fcn.00408186(*(param_1 + 0x4c), uStack24);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack24);\n        return;\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "004087f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004087f4(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.004081b6();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n    if (param_1[5] < *0x41e3a8 - iVar2) {\n        iVar2 = (*pcVar1)(7);\n        param_1[5] = *0x41e3a8 - iVar2;\n    }\n    fcn.00402a9c(param_1[3]);\n    if ((*0x41e3a4 & 2) == 0) {\n        fcn.00402aed(0x41bd10);\n    }\n    iVar2 = fcn.004077e6(var_14h, &var_8h);\n    if ((iVar2 != 0) && (param_1[5] < var_8h)) {\n        param_1[5] = var_8h;\n    }\n    fcn.00407908(0x4b8, &var_24h);\n    param_1[6] = param_1[6] + (var_18h - var_20h) + 0xe;\n    if ((*0x41e3a4 & 4) != 0) {\n        iVar2 = (**(*param_1 + 8))(0x41bd10, param_1 + 0x14, param_1[0xd], 0x820);\n        if (iVar2 != 0) {\n            param_1[6] = param_1[6] + param_1[0x17];\n        }\n        param_1[6] = param_1[6] + 5;\n    }\n    param_1[6] = param_1[6] + -0x12;\n    if (*0x41e9c4 == 1) {\n        fcn.00407908(0x4b4, &var_24h);\n        param_1[6] = param_1[6] + (var_20h - var_18h);\n    }\n    else {\n        param_1[6] = param_1[6] + 10;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_14h);\n    return;\n}\n",
        "token_count": 578
    },
    "004088ed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004088ed(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    ulong uVar3;\n    uint *puVar4;\n    uint var_24h;\n    uint var_ch;\n    \n    puVar1 = arg_8h;\n    fcn.004014eb();\n    if ((*(in_ECX + 0x60) | *(in_ECX + 100)) == 0) {\n        arg_8h = NULL;\n    }\n    else {\n        uVar3 = fcn.00419380(*arg_8h, arg_8h[1], 30000, 0);\n        arg_8h = fcn.004192d0(uVar3, *(in_ECX + 0x60), *(in_ECX + 100));\n    }\n    if (30000 < arg_8h) {\n        arg_8h = 0x7530;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 4), 0x4b8);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x402, arg_8h, 0);\n    (*_sym.imp.USER32.dll_wsprintfW)(&var_24h, L\"%d%%\", (arg_8h + 299) / 300);\n    if ((*0x41e3a4 & 4) != 0) {\n        fcn.00408186(0x4b5, &var_24h);\n    }\n    if ((*0x41e3a4 & 2) == 0) {\n        if ((*0x41e3a4 & 1) == 0) {\n            fcn.00401403(&var_24h);\n            fcn.004017a8(0x20);\n            puVar4 = *0x41e9ac;\n        }\n        else {\n            fcn.00401403(*0x41e9ac);\n            fcn.004017a8(0x20);\n            puVar4 = &var_24h;\n        }\n        fcn.00402aed(puVar4);\n        fcn.00408751(var_ch);\n    }\n    if (*(in_ECX + 0x70) != 0) {\n        (**(**(in_ECX + 0x70) + 0x24))\n                  (*(in_ECX + 0x70), *(in_ECX + 4), *puVar1, puVar1[1], *(in_ECX + 0x60), *(in_ECX + 100));\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 607
    },
    "00408a1a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408a1a(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (arg_8h == 0x113) {\n        puVar1 = in_ECX + 0x68;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + 1;\n        *(in_ECX + 0x6c) = *(in_ECX + 0x6c) + (0xfffffffe < uVar3);\n        if ((-1 < *(in_ECX + 0x6c)) && ((0 < *(in_ECX + 0x6c) || (100 < *puVar1)))) {\n            (*_sym.imp.USER32.dll_EndDialog)(*(in_ECX + 4), 1);\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x8002, 0, puVar1);\n    }\n    else if (arg_8h == 0x8001) {\n        *(in_ECX + 0x60) = *arg_10h;\n        *(in_ECX + 100) = arg_10h[1];\n        piVar2 = *(in_ECX + 0x70);\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 0x28))(piVar2, *(in_ECX + 4), 2);\n            (**(**(in_ECX + 0x70) + 0x24))(*(in_ECX + 0x70), *(in_ECX + 4), 0, 0, *(in_ECX + 0x60), *(in_ECX + 100));\n        }\n    }\n    else if (arg_8h == 0x8002) {\n        fcn.004088ed(arg_10h);\n    }\n    fcn.00407687(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 476
    },
    "00408c92": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00408c92(void)\n\n{\n    uint uVar1;\n    uint var_78h;\n    \n    uVar1 = 2;\n    if (*0x41e998 == 0) {\n        *0x41e998 = 0x41a584;\n    }\n    if ((*0x41e3a4 & 0x20) != 0) {\n        uVar1 = 6;\n    }\n    fcn.004085f8();\n    uVar1 = fcn.00408433(uVar1, *0x41e9ac, *0x41e998, 0);\n    fcn.004081a6();\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "00408ce9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408ce9(uint arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_10h;\n    \n    if (*0x41ea48 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (0 < *(*0x41ea48 + 0x48)) {\n            piVar3 = 0x41e5d0;\n            iVar1 = *0x41e5d0;\n            while (iVar1 != 0) {\n                if (iVar1 == arg_ch) {\n                    (*_sym.imp.USER32.dll_ScreenToClient)(*(*0x41ea48 + 4), arg_10h);\n                    (*_sym.imp.USER32.dll_GetClientRect)(*(*0x41ea48 + 4), &var_10h);\n                    iVar1 = (*_sym.imp.USER32.dll_PtInRect)(&var_10h, *arg_10h, arg_10h[1]);\n                    if (iVar1 != 0) {\n                        fcn.0040872f();\n                    }\n                    break;\n                }\n                piVar3 = piVar3 + 1;\n                iVar1 = *piVar3;\n            }\n        }\n        uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*0x41ea4c, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 339
    },
    "0040950a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_50h\n\nvoid __cdecl fcn.0040950a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_50h;\n    \n    if (*0x41ea64 == '\\0') {\n        *0x41ea64 = '\\x01';\n        fcn.004083d2();\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*0x41ea58, 0x41bd2c);\n        if (iVar1 != 0) {\n            uVar2 = 0x78;\n            iVar1 = (*_sym.imp.KERNEL32.dll_IsBadReadPtr)(*0x41ea5c, 0x78);\n            if (iVar1 == 0) {\n                fcn.00408048(uVar2, 4);\n            }\n        }\n        fcn.00408433(0xd, *0x41e9b8, arg_8h, *0x41ea58);\n        fcn.004081a6();\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040c000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __thiscall\nfcn.0040c000(int32_t *param_1, uint param_2, uint param_3, int32_t param_4, uint param_5, uint param_6, int32_t param_7)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    uint8_t uVar6;\n    char cVar7;\n    int32_t iVar8;\n    uint8_t **ppuVar9;\n    uint *unaff_EBP;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint32_t uStack36;\n    uint32_t uVar12;\n    \n    if ((param_4 != 4) || (param_7 != 1)) {\n        return 0x80070057;\n    }\n    puVar3 = param_1[0x132];\n    cVar7 = fcn.0041336a();\n    if (((cVar7 != '\\0') && (cVar7 = fcn.0041336a(),  cVar7 != '\\0')) && (cVar7 = fcn.0041336a(),  cVar7 != '\\0')) {\n        cVar7 = fcn.0041336a();\n        if (cVar7 == '\\0') {\n            return 0x8007000e;\n        }\n        piVar1 = param_1 + 0x128;\n        cVar7 = fcn.0041358f();\n        if (cVar7 == '\\0') {\n            return 0x8007000e;\n        }\n        fcn.004133a6(*unaff_EBP);\n        piVar4 = unaff_EBP[1];\n        fcn.004133a6();\n        fcn.004133a6(unaff_EBP[2]);\n        fcn.004133a6(unaff_EBP[3]);\n        fcn.004135c9(*puVar3);\n        fcn.0041332a();\n        fcn.0041332a();\n        fcn.0041332a();\n        fcn.0040be80();\n        fcn.0041354e();\n        piVar10 = param_1 + 0x26;\n        for (iVar8 = 0x102; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *piVar10 = 0x400;\n            piVar10 = piVar10 + 1;\n        }\n        uVar6 = 0;\n        uVar12 = 0;\n        piVar10 = param_1;\n        do {\n            do {\n                if ((0xfffff < uVar12) && (param_1 != NULL)) {\n                    fcn.00413566();\n                    uVar12 = (**(*param_1 + 0xc))(param_1, 0, &stack0xffffffd0);\n                    if (uVar12 != 0) {\n                        fcn.0040bf90();\n                        return uVar12;\n                    }\n                }\n                uStack36 = 0;\n                do {\n                    if ((piVar10[5] <= piVar10[4]) && (cVar7 = fcn.004133ae(),  cVar7 == '\\0')) {\n                        uVar12 = fcn.00413662();\n                        fcn.0040bf90();\n                        return uVar12;\n                    }\n                    puVar5 = piVar10[4];\n                    uVar2 = *puVar5;\n                    piVar10[4] = puVar5 + 1;\n                    *(param_1[0x129] + *piVar1) = uVar2;\n                    param_1[0x129] = param_1[0x129] + 1;\n                    if (param_1[0x129] == param_1[0x12a]) {\n                        fcn.0041367e();\n                    }\n                } while (((uVar2 & 0xfe) != 0xe8) &&\n                        (((uVar6 != 0xf || ((uVar2 & 0xf0) != 0x80)) &&\n                         (uStack36 = uStack36 + 1,  uVar6 = uVar2,  uStack36 < 0x40000))));\n                uVar12 = uVar12 + uStack36;\n            } while ((uStack36 == 0x40000) || (iVar8 = fcn.0040bed0(),  iVar8 != 1));\n            uVar11 = 0;\n            ppuVar9 = piVar10 + 0xc;\n            if (uVar2 != 0xe8) {\n                ppuVar9 = piVar10 + 0x14;\n            }\n            iVar8 = 0;\n            do {\n                if ((ppuVar9[1] <= *ppuVar9) && (cVar7 = fcn.004133ae(),  cVar7 == '\\0')) {\n                    fcn.0040bf90();\n                    return 1;\n                }\n                iVar8 = iVar8 + 1;\n                uVar11 = uVar11 << 8 | **ppuVar9;\n                *ppuVar9 = *ppuVar9 + 1;\n            } while (iVar8 < 4);\n            iVar8 = fcn.00413566();\n            iVar8 = (uVar11 - iVar8) + -4;\n            *(*piVar1 + param_1[0x129]) = iVar8;\n            param_1[0x129] = param_1[0x129] + 1;\n            if (param_1[0x129] == param_1[0x12a]) {\n                fcn.0041367e();\n            }\n            *(*piVar1 + param_1[0x129]) = iVar8 >> 8;\n            param_1[0x129] = param_1[0x129] + 1;\n            if (param_1[0x129] == param_1[0x12a]) {\n                fcn.0041367e();\n            }\n            *(param_1[0x129] + *piVar1) = iVar8 >> 0x10;\n            param_1[0x129] = param_1[0x129] + 1;\n            if (param_1[0x129] == param_1[0x12a]) {\n                fcn.0041367e();\n            }\n            *(*piVar1 + param_1[0x129]) = iVar8 >> 0x18;\n            param_1[0x129] = param_1[0x129] + 1;\n            piVar10 = piVar4;\n            if (param_1[0x129] == param_1[0x12a]) {\n                fcn.0041367e();\n            }\n        } while( true );\n    }\n    return 0x8007000e;\n}\n",
        "token_count": 1526
    },
    "0040c820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040c820(int32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[1];\n    iVar4 = (uVar1 - param_2) + -1;\n    if (uVar1 <= param_2) {\n        if ((*(param_1 + 9) == '\\0') || (param_1[4] <= param_2)) {\n            return 0;\n        }\n        iVar4 = iVar4 + param_1[4];\n    }\n    if ((param_3 < param_1[2] - uVar1) && (param_3 < param_1[4] - iVar4)) {\n        puVar3 = *param_1 + iVar4;\n        puVar2 = *param_1 + uVar1;\n        param_1[1] = uVar1 + param_3;\n        do {\n            *puVar2 = *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n            param_3 = param_3 - 1;\n        } while (param_3 != 0);\n        return 1;\n    }\n    do {\n        if (iVar4 == param_1[4]) {\n            iVar4 = 0;\n        }\n        *(*param_1 + param_1[1]) = *(*param_1 + iVar4);\n        param_1[1] = param_1[1] + 1;\n        iVar4 = iVar4 + 1;\n        if (param_1[1] == param_1[2]) {\n            fcn.0041367e();\n        }\n        param_3 = param_3 - 1;\n    } while (param_3 != 0);\n    return 1;\n}\n",
        "token_count": 433
    },
    "0040d0f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d0f0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (*(param_1 + 1) != '\\0') {\n        fcn.00413662();\n    }\n    iVar1 = *param_1;\n    piVar2 = *(iVar1 + 0x24);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2);\n        *(iVar1 + 0x24) = 0;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040d470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040d470(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t auStack660 [8];\n    uchar auStack652 [284];\n    uchar auStack368 [4];\n    uchar auStack364 [32];\n    uchar auStack332 [4];\n    uchar auStack328 [4];\n    uchar auStack324 [324];\n    \n    piVar1 = param_1 + 0x38;\n    fcn.0040d080();\n    uVar4 = *(param_1 + 0x68);\n    *piVar1 = *piVar1 + 1;\n    *(param_1 + 0x68) = uVar4 >> 1;\n    *(param_1 + 0xd40) = (uVar4 & 1) == 1;\n    fcn.0040d080();\n    *piVar1 = *piVar1 + 2;\n    uVar5 = *(param_1 + 0x68) & 3;\n    uVar4 = *(param_1 + 0x68) >> 2;\n    *(param_1 + 0x68) = uVar4;\n    if (2 < uVar5) goto code_r0x0040d4bd;\n    if (uVar5 == 0) {\n        *(param_1 + 0xd41) = 1;\n        uVar4 = -*piVar1 & 7;\n        *(param_1 + 0x68) = *(param_1 + 0x68) >> uVar4;\n        *piVar1 = *piVar1 + uVar4;\n        fcn.0040d080();\n        uVar4 = *(param_1 + 0x68);\n        *piVar1 = *piVar1 + 0x10;\n        *(param_1 + 0x68) = uVar4 >> 0x10;\n        *(param_1 + 0xd3c) = uVar4 & 0xffff;\n        if (*(param_1 + 0xd48) != '\\0') {\n            return CONCAT31(uVar4 >> 0x18, 1);\n        }\n        fcn.0040d080();\n        uVar4 = *(param_1 + 0x68);\n        *piVar1 = *piVar1 + 0x10;\n        *(param_1 + 0x68) = uVar4 >> 0x10;\n        return *(param_1 + 0xd3c) == (~(uVar4 & 0xffff) & 0xffff);\n    }\n    *(param_1 + 0xd41) = 0;\n    if (uVar5 == 1) {\n        fcn.0040c930();\n        *(param_1 + 0xd44) = (*(param_1 + 0xd49) != '\\0') * 2 + 0x1e;\n    }\n    else {\n        fcn.0040d080();\n        *piVar1 = *piVar1 + 5;\n        *(param_1 + 0x68) = *(param_1 + 0x68) >> 5;\n        fcn.0040d080();\n        uVar4 = *(param_1 + 0x68);\n        *piVar1 = *piVar1 + 5;\n        *(param_1 + 0x68) = uVar4 >> 5;\n        *(param_1 + 0xd44) = (uVar4 & 0x1f) + 1;\n        fcn.0040d080();\n        *piVar1 = *piVar1 + 4;\n        uVar5 = *(param_1 + 0x68) & 0xf;\n        uVar4 = *(param_1 + 0x68) >> 4;\n        iVar6 = uVar5 + 4;\n        *(param_1 + 0x68) = uVar4;\n        if ((*(param_1 + 0xd49) == '\\0') && (0x1e < *(param_1 + 0xd44))) goto code_r0x0040d4bd;\n        uVar4 = 0;\n        do {\n            uVar2 = *(uVar4 + 0x41c0e8);\n            if (uVar4 < iVar6) {\n                fcn.0040d080();\n                uVar3 = *(param_1 + 0x68);\n                *piVar1 = *piVar1 + 3;\n                *(param_1 + 0x68) = uVar3 >> 3;\n                auStack660[uVar2] = uVar3 & 7;\n            }\n            else {\n                auStack660[uVar2] = 0;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x13);\n        uVar4 = fcn.0040ce50(auStack660);\n        if (uVar4 == '\\0') goto code_r0x0040d4bd;\n        uVar4 = fcn.0040d370(auStack324, *(param_1 + 0xd44) + iVar6);\n        if (uVar4 == '\\0') goto code_r0x0040d4bd;\n        fcn.0040c8c0();\n        sub.MSVCRT.dll_memcpy(auStack652, auStack332, iVar6);\n        sub.MSVCRT.dll_memcpy(auStack364, auStack328 + uVar5, *(param_1 + 0xd44));\n    }\n    uVar4 = fcn.0040ca00(auStack652);\n    if (uVar4 != '\\0') {\n        uVar4 = fcn.0040cc60(auStack368);\n        return uVar4;\n    }\ncode_r0x0040d4bd:\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 1339
    },
    "0040d6e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040d6e0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    char cVar7;\n    uchar uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t unaff_EBX;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    int32_t iStack4;\n    \n    if (*(param_1 + 0xd4c) == -1) {\n        return 0;\n    }\n    if (*(param_1 + 0xd4c) == -2) {\n        if ((*(param_1 + 0xd4a) == '\\0') &&\n           (cVar7 = fcn.0041358f((-(*(param_1 + 0xd49) != '\\0') & 0x8000) + 0x8000),  cVar7 == '\\0')) {\n            return -0x7ff8fff2;\n        }\n        iVar9 = fcn.0040d120(*(param_1 + 0xd4b));\n        if (iVar9 != 0) {\n            return iVar9;\n        }\n        if (*(param_1 + 0xd4a) == '\\0') {\n            fcn.0041354e();\n        }\n        *(param_1 + 0xd40) = 0;\n        *(param_1 + 0xd4c) = 0;\n        *(param_1 + 0xd54) = 1;\n    }\n    if (iStack4 == 0) {\n        return 0;\n    }\n    iVar9 = *(param_1 + 0xd4c);\n    while (0 < iVar9) {\n        if (iStack4 == 0) {\n            return 0;\n        }\n        *(param_1 + 0xd4c) = *(param_1 + 0xd4c) + -1;\n        uVar10 = (*(param_1 + 0x14) - *(param_1 + 0xd50)) - 1;\n        if (*(param_1 + 0x20) <= uVar10) {\n            uVar10 = uVar10 + *(param_1 + 0x20);\n        }\n        *(*(param_1 + 0x10) + *(param_1 + 0x14)) = *(uVar10 + *(param_1 + 0x10));\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        if (*(param_1 + 0x14) == *(param_1 + 0x18)) {\n            fcn.0041367e();\n        }\n        iStack4 = iStack4 + -1;\n        iVar9 = *(param_1 + 0xd4c);\n    }\n    if (iStack4 == 0) {\n        return 0;\n    }\ncode_r0x0040d7f0:\n    if (*(param_1 + 0xd54) != '\\0') {\n        if (*(param_1 + 0xd40) != '\\0') {\n            *(param_1 + 0xd4c) = 0xffffffff;\n            return 0;\n        }\n        cVar7 = fcn.0040d470();\n        if (cVar7 == '\\0') {\n            return 1;\n        }\n        *(param_1 + 0xd54) = 0;\n    }\n    if (*(param_1 + 0xd41) == '\\0') {\n        if (iStack4 == 0) {\n            return 0;\n        }\n        do {\n            if (4 < *(param_1 + 0x60)) {\n                return 1;\n            }\n            piVar1 = param_1 + 0x38;\n            uVar10 = fcn.0040d250(piVar1);\n            if (uVar10 < 0x100) {\n                *(*(param_1 + 0x10) + *(param_1 + 0x14)) = uVar10;\n                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                iVar9 = unaff_EBX;\n                if (*(param_1 + 0x14) == *(param_1 + 0x18)) {\n                    fcn.0041367e();\n                    iVar9 = unaff_EBX;\n                }\n                iStack4 = iStack4 + -1;\n            }\n            else {\n                if (uVar10 == 0x100) {\n                    *(param_1 + 0xd54) = 1;\n                    goto code_r0x0040da22;\n                }\n                if (0x11d < uVar10) {\n                    return 1;\n                }\n                if (*(param_1 + 0xd49) == '\\0') {\n                    uVar2 = *(uVar10 + 0x41bec7);\n                    uVar3 = *(uVar10 + 0x41bf07);\n                }\n                else {\n                    uVar2 = *(uVar10 + 0x41bee7);\n                    uVar3 = *(uVar10 + 0x41bf27);\n                }\n                fcn.0040d080();\n                uVar10 = *(param_1 + 0x68);\n                *piVar1 = *piVar1 + uVar3;\n                *(param_1 + 0x68) = uVar10 >> (uVar3 & 0x1f);\n                uVar11 = fcn.0040d2e0(piVar1);\n                if (*(param_1 + 0xd44) <= uVar11) {\n                    return 1;\n                }\n                uVar4 = *(uVar11 + 0x41c0c8);\n                fcn.0040d080();\n                uVar6 = *(param_1 + 0x68);\n                *piVar1 = *piVar1 + uVar4;\n                *(param_1 + 0x68) = uVar6 >> (uVar4 & 0x1f);\n                iVar13 = *(uVar11 * 4 + 0x41c048) + ((1 << (uVar4 & 0x1f)) - 1U & uVar6);\n                iVar9 = unaff_EBX;\n                cVar7 = fcn.0040c820(iVar13, unaff_EBX);\n                if (cVar7 == '\\0') {\n                    return 1;\n                }\n                iStack4 = uVar11 - unaff_EBX;\n                iVar12 = (uVar2 + 3 + ((1 << (uVar3 & 0x1f)) - 1U & uVar10)) - unaff_EBX;\n                if (iVar12 != 0) goto code_r0x0040da12;\n            }\n            unaff_EBX = iVar9;\n            if (iStack4 == 0) {\n                return 0;\n            }\n        } while( true );\n    }\n    bVar14 = *(param_1 + 0xd3c) == 0;\n    if (!bVar14) {\n        do {\n            if (iStack4 == 0) break;\n            if (*(param_1 + 0x38) == 0x20) {\n                if ((*(param_1 + 0x40) < *(param_1 + 0x44)) || (cVar7 = fcn.004133ae(),  cVar7 != '\\0')) {\n                    puVar5 = *(param_1 + 0x40);\n                    uVar8 = *puVar5;\n                    *(param_1 + 0x40) = puVar5 + 1;\n                }\n                else {\n                    uVar8 = 0xff;\n                    *(param_1 + 0x60) = *(param_1 + 0x60) + 1;\n                }\n            }\n            else {\n                uVar8 = *(param_1 + 0x68);\n                *(param_1 + 0x68) = *(param_1 + 0x68) >> 8;\n                *(param_1 + 0x38) = *(param_1 + 0x38) + 8;\n            }\n            *(*(param_1 + 0x10) + *(param_1 + 0x14)) = uVar8;\n            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n            if (*(param_1 + 0x14) == *(param_1 + 0x18)) {\n                fcn.0041367e();\n            }\n            *(param_1 + 0xd3c) = *(param_1 + 0xd3c) + -1;\n            iStack4 = iStack4 + -1;\n        } while (*(param_1 + 0xd3c) != 0);\n        bVar14 = *(param_1 + 0xd3c) == 0;\n    }\n    *(param_1 + 0xd54) = bVar14;\n    goto code_r0x0040da22;\ncode_r0x0040da12:\n    *(param_1 + 0xd4c) = iVar12;\n    *(param_1 + 0xd50) = iVar13;\n    unaff_EBX = iVar9;\ncode_r0x0040da22:\n    if (iStack4 == 0) {\n        return 0;\n    }\n    goto code_r0x0040d7f0;\n}\n",
        "token_count": 2138
    },
    "0040da60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __thiscall fcn.0040da60(int32_t param_1, uint32_t param_2, uint32_t *param_3, int32_t *param_4)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    uint32_t var_8h;\n    uint32_t *var_ch;\n    int32_t *var_10h_2;\n    uint var_10h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uchar *puStack20;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x419af0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    puStack20 = &stack0xffffffa0;\n    var_4h = 0;\n    fcn.004135c9(var_8h);\n    var_24h._0_1_ = 1;\n    var_28h = param_1;\n    if (*(param_1 + 0xd4b) == '\\0') {\n        _var_30h = fcn.0040d050();\n    }\n    else {\n        _var_30h = 0;\n    }\n    uVar6 = fcn.00413566();\n    var_34h = uVar6 >> 0x20;\ncode_r0x0040dad0:\n    do {\n        var_14h = 0x40000;\n        if (var_ch != NULL) {\n            uVar7 = fcn.00413566();\n            uVar4 = *var_ch + uVar6;\n            uVar5 = uVar4 - uVar7;\n            if ((((var_ch[1] + var_34h + CARRY4(*var_ch, uVar6)) - (uVar7 >> 0x20) != uVar4 < uVar7) ||\n                (0x3ffff < uVar5)) || (var_14h = uVar5,  uVar5 != 0)) goto code_r0x0040db0f;\ncode_r0x0040db2d:\n            if ((*(param_1 + 0xd4c) == -1) && (*(param_1 + 0xd55) != '\\0')) {\n                iVar3 = *(param_1 + 0x38);\n                uVar4 = -iVar3 & 7;\n                *(param_1 + 0x38) = iVar3 + uVar4;\n                *(param_1 + 0x68) = *(param_1 + 0x68) >> uVar4;\n                for (iVar3 = 0; var_18h = iVar3,  iVar3 < 4; iVar3 = iVar3 + 1) {\n                    uVar1 = fcn.0040d000();\n                    *(iVar3 + 0xd56 + param_1) = uVar1;\n                }\n            }\n            var_24h._0_1_ = 0;\n            iVar3 = fcn.00413662(var_8h);\n            if ((iVar3 == 0) && (cVar2 = fcn.0040cfc0(),  cVar2 != '\\0')) {\n                fcn.0040d0f0();\n                *in_FS_OFFSET = var_ch_2;\n                return 1;\n            }\ncode_r0x0040dbf8:\n            fcn.0040d0f0();\n            *in_FS_OFFSET = var_ch_2;\n            return iVar3;\n        }\ncode_r0x0040db0f:\n        var_8h = var_14h;\n        iVar3 = fcn.0040d6e0();\n        if (iVar3 != 0) goto code_r0x0040dbf8;\n        if (*(param_1 + 0xd4c) == -1) goto code_r0x0040db2d;\n        if (var_10h_2 == NULL) goto code_r0x0040dad0;\n        iVar8 = fcn.0040d050();\n        _var_48h = iVar8 - _var_30h;\n        iVar8 = fcn.00413566();\n        _var_40h = iVar8 - (uVar6 & 0xffffffff | var_34h << 0x20);\n        iVar3 = (**(*var_10h_2 + 0xc))(var_10h_2, &var_48h, &var_40h);\n        if (iVar3 != 0) goto code_r0x0040dbf8;\n    } while( true );\n}\n",
        "token_count": 1161
    },
    "0040df80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040df80(uint *param_1, uint32_t param_2, uint8_t *param_3)\n\n{\n    uchar *puVar1;\n    uint16_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint16_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    uchar *puVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint8_t *puStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    int32_t iStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    \n    uStack48 = param_1[0xf];\n    uStack60 = param_1[0xe];\n    uStack44 = param_1[0x10];\n    uStack32 = param_1[0x11];\n    uVar3 = param_1[2];\n    uVar4 = param_1[1];\n    iVar5 = param_1[5];\n    uStack64 = param_1[0xd];\n    uVar6 = *param_1;\n    uVar7 = param_1[10];\n    uStack68 = param_1[0xb];\n    uStack72 = param_1[9];\n    uVar21 = param_1[8];\n    puStack76 = param_1[6];\n    iVar8 = param_1[4];\n    uVar9 = param_1[0xc];\n    uVar14 = param_1[7];\n    iStack52 = 0;\n    do {\n        uVar12 = uStack32;\n        uVar11 = uStack68 & (1 << (uVar3 & 0x1f)) - 1U;\n        puVar13 = iVar8 + (uStack64 * 0x10 + uVar11) * 2;\n        uVar2 = *puVar13;\n        uVar10 = uVar14;\n        if (uVar14 < 0x1000000) {\n            uVar10 = uVar14 << 8;\n            uVar21 = uVar21 << 8 | *puStack76;\n            puStack76 = puStack76 + 1;\n        }\n        uVar14 = (uVar10 >> 0xb) * uVar2;\n        if (uVar21 < uVar14) {\n            *puVar13 = (0x800 - uVar2 >> 5) + uVar2;\n            iVar18 = iVar8 + 0xe6c;\n            if ((uVar9 != 0) || (uStack68 != 0)) {\n                uVar12 = uStack72;\n                if (uStack72 == 0) {\n                    uVar12 = uVar7;\n                }\n                iVar18 = iVar18 + ((*((uVar12 - 1) + iVar5) >> (8 - uVar6 & 0x1f)) +\n                                  ((uStack68 & (1 << (uVar4 & 0x1f)) - 1U) << (uVar6 & 0x1f))) * 0x600;\n            }\n            if (uStack64 < 7) {\n                uVar11 = uStack64;\n                if (3 < uStack64) {\n                    uVar11 = 3;\n                }\n                uVar12 = 1;\n                do {\n                    uVar2 = *(iVar18 + uVar12 * 2);\n                    if (uVar14 < 0x1000000) {\n                        uVar14 = uVar14 << 8;\n                        uVar21 = uVar21 << 8 | *puStack76;\n                        puStack76 = puStack76 + 1;\n                    }\n                    uVar10 = (uVar14 >> 0xb) * uVar2;\n                    if (uVar21 < uVar10) {\n                        *(iVar18 + uVar12 * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                        uVar12 = uVar12 * 2;\n                        uVar14 = uVar10;\n                    }\n                    else {\n                        uVar14 = uVar14 - uVar10;\n                        uVar21 = uVar21 - uVar10;\n                        *(iVar18 + uVar12 * 2) = uVar2 - (uVar2 >> 5);\n                        uVar12 = uVar12 * 2 + 1;\n                    }\n                } while (uVar12 < 0x100);\n            }\n            else {\n                uVar19 = 0x100;\n                uVar10 = *(((-(uStack72 < uStack60) & uVar7) - uStack60) + param_1[5] + uStack72);\n                uVar11 = (-(uStack64 < 10) & 0xfffffffd) + 6;\n                uVar12 = 1;\n                do {\n                    uVar10 = uVar10 * 2;\n                    uVar15 = uVar19 & uVar10;\n                    puVar13 = iVar18 + (uVar15 + uVar19 + uVar12) * 2;\n                    uVar2 = *puVar13;\n                    if (uVar14 < 0x1000000) {\n                        uVar14 = uVar14 << 8;\n                        uVar21 = uVar21 << 8 | *puStack76;\n                        puStack76 = puStack76 + 1;\n                    }\n                    uVar20 = (uVar14 >> 0xb) * uVar2;\n                    if (uVar21 < uVar20) {\n                        *puVar13 = (0x800 - uVar2 >> 5) + uVar2;\n                        uVar12 = uVar12 * 2;\n                        uVar15 = ~uVar15;\n                        uVar14 = uVar20;\n                    }\n                    else {\n                        uVar14 = uVar14 - uVar20;\n                        uVar21 = uVar21 - uVar20;\n                        *puVar13 = uVar2 - (uVar2 >> 5);\n                        uVar12 = uVar12 * 2 + 1;\n                    }\n                    uVar19 = uVar19 & uVar15;\n                } while (uVar12 < 0x100);\n            }\n            uStack64 = uStack64 - uVar11;\n            *(uStack72 + iVar5) = uVar12;\n            uStack68 = uStack68 + 1;\n            uStack72 = uStack72 + 1;\n        }\n        else {\n            uVar10 = uVar10 - uVar14;\n            uVar21 = uVar21 - uVar14;\n            *puVar13 = uVar2 - (uVar2 >> 5);\n            uVar2 = *(iVar8 + 0x180 + uStack64 * 2);\n            if (uVar10 < 0x1000000) {\n                uVar10 = uVar10 * 0x100;\n                uVar21 = uVar21 * 0x100 | *puStack76;\n                puStack76 = puStack76 + 1;\n            }\n            uVar19 = (uVar10 >> 0xb) * uVar2;\n            if (uVar21 < uVar19) {\n                *(iVar8 + 0x180 + uStack64 * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                uStack64 = uStack64 + 0xc;\n                puVar13 = iVar8 + 0x664;\n            }\n            else {\n                uVar10 = uVar10 - uVar19;\n                uVar21 = uVar21 - uVar19;\n                *(iVar8 + 0x180 + uStack64 * 2) = uVar2 - (uVar2 >> 5);\n                if ((uVar9 == 0) && (uStack68 == 0)) {\n                    return 1;\n                }\n                uVar2 = *(iVar8 + 0x198 + uStack64 * 2);\n                if (uVar10 < 0x1000000) {\n                    uVar10 = uVar10 * 0x100;\n                    uVar21 = uVar21 * 0x100 | *puStack76;\n                    puStack76 = puStack76 + 1;\n                }\n                uVar19 = (uVar10 >> 0xb) * uVar2;\n                if (uVar21 < uVar19) {\n                    *(iVar8 + 0x198 + uStack64 * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                    puVar13 = iVar8 + ((uStack64 + 0xf) * 0x10 + uVar11) * 2;\n                    uVar2 = *puVar13;\n                    if (uVar19 < 0x1000000) {\n                        uVar19 = uVar19 * 0x100;\n                        uVar21 = uVar21 << 8 | *puStack76;\n                        puStack76 = puStack76 + 1;\n                    }\n                    uVar14 = (uVar19 >> 0xb) * uVar2;\n                    if (uVar21 < uVar14) {\n                        *puVar13 = (0x800 - uVar2 >> 5) + uVar2;\n                        uStack68 = uStack68 + 1;\n                        *(uStack72 + iVar5) = *(((-(uStack72 < uStack60) & uVar7) - uStack60) + uStack72 + iVar5);\n                        uStack64 = (-(uStack64 < 7) & 0xfffffffe) + 0xb;\n                        uStack72 = uStack72 + 1;\n                        goto code_r0x0040eb63;\n                    }\n                    uVar19 = uVar19 - uVar14;\n                    uVar21 = uVar21 - uVar14;\n                    *puVar13 = uVar2 - (uVar2 >> 5);\n                }\n                else {\n                    uVar10 = uVar10 - uVar19;\n                    uVar21 = uVar21 - uVar19;\n                    *(iVar8 + 0x198 + uStack64 * 2) = uVar2 - (uVar2 >> 5);\n                    uVar2 = *(iVar8 + 0x1b0 + uStack64 * 2);\n                    if (uVar10 < 0x1000000) {\n                        uVar10 = uVar10 * 0x100;\n                        uVar21 = uVar21 * 0x100 | *puStack76;\n                        puStack76 = puStack76 + 1;\n                    }\n                    uVar19 = (uVar10 >> 0xb) * uVar2;\n                    if (uVar21 < uVar19) {\n                        *(iVar8 + 0x1b0 + uStack64 * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                        uVar12 = uStack48;\n                    }\n                    else {\n                        uVar10 = uVar10 - uVar19;\n                        uVar21 = uVar21 - uVar19;\n                        *(iVar8 + 0x1b0 + uStack64 * 2) = uVar2 - (uVar2 >> 5);\n                        uVar2 = *(iVar8 + 0x1c8 + uStack64 * 2);\n                        if (uVar10 < 0x1000000) {\n                            uVar10 = uVar10 * 0x100;\n                            uVar21 = uVar21 * 0x100 | *puStack76;\n                            puStack76 = puStack76 + 1;\n                        }\n                        uVar14 = (uVar10 >> 0xb) * uVar2;\n                        if (uVar21 < uVar14) {\n                            *(iVar8 + 0x1c8 + uStack64 * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                            uVar19 = uVar14;\n                            uVar12 = uStack44;\n                        }\n                        else {\n                            uVar19 = uVar10 - uVar14;\n                            uVar21 = uVar21 - uVar14;\n                            *(iVar8 + 0x1c8 + uStack64 * 2) = uVar2 - (uVar2 >> 5);\n                            uStack32 = uStack44;\n                        }\n                        uStack44 = uStack48;\n                    }\n                    uStack48 = uStack60;\n                    uStack60 = uVar12;\n                }\n                uStack64 = (-(uStack64 < 7) & 0xfffffffd) + 0xb;\n                puVar13 = iVar8 + 0xa68;\n            }\n            uVar12 = uStack48;\n            uVar2 = *puVar13;\n            if (uVar19 < 0x1000000) {\n                uVar19 = uVar19 << 8;\n                uVar21 = uVar21 << 8 | *puStack76;\n                puStack76 = puStack76 + 1;\n            }\n            uVar14 = (uVar19 >> 0xb) * uVar2;\n            if (uVar21 < uVar14) {\n                *puVar13 = (0x800 - uVar2 >> 5) + uVar2;\n                puVar13 = puVar13 + uVar11 * 8 + 2;\n                iStack52 = 0;\n                uStack28 = 8;\n            }\n            else {\n                uVar19 = uVar19 - uVar14;\n                uVar21 = uVar21 - uVar14;\n                *puVar13 = uVar2 - (uVar2 >> 5);\n                uVar2 = puVar13[1];\n                if (uVar19 < 0x1000000) {\n                    uVar19 = uVar19 * 0x100;\n                    uVar21 = uVar21 * 0x100 | *puStack76;\n                    puStack76 = puStack76 + 1;\n                }\n                uVar10 = (uVar19 >> 0xb) * uVar2;\n                if (uVar21 < uVar10) {\n                    puVar13[1] = (0x800 - uVar2 >> 5) + uVar2;\n                    puVar13 = puVar13 + uVar11 * 8 + 0x82;\n                    iStack52 = 8;\n                    uStack28 = 8;\n                    uVar14 = uVar10;\n                }\n                else {\n                    uVar14 = uVar19 - uVar10;\n                    uVar21 = uVar21 - uVar10;\n                    puVar13[1] = uVar2 - (uVar2 >> 5);\n                    puVar13 = puVar13 + 0x102;\n                    iStack52 = 0x10;\n                    uStack28 = 0x100;\n                }\n            }\n            uVar10 = 1;\n            do {\n                uVar2 = puVar13[uVar10];\n                if (uVar14 < 0x1000000) {\n                    uVar14 = uVar14 << 8;\n                    uVar21 = uVar21 << 8 | *puStack76;\n                    puStack76 = puStack76 + 1;\n                }\n                uVar11 = (uVar14 >> 0xb) * uVar2;\n                if (uVar21 < uVar11) {\n                    puVar13[uVar10] = (0x800 - uVar2 >> 5) + uVar2;\n                    uVar10 = uVar10 * 2;\n                    uVar14 = uVar11;\n                }\n                else {\n                    uVar14 = uVar14 - uVar11;\n                    uVar21 = uVar21 - uVar11;\n                    puVar13[uVar10] = uVar2 - (uVar2 >> 5);\n                    uVar10 = uVar10 * 2 + 1;\n                }\n            } while (uVar10 < uStack28);\n            uVar10 = uVar10 + (iStack52 - uStack28);\n            if (0xb < uStack64) {\n                uVar11 = uVar10;\n                if (3 < uVar10) {\n                    uVar11 = 3;\n                }\n                iVar18 = uVar11 * 0x80 + 0x360 + iVar8;\n                uVar2 = *(iVar18 + 2);\n                if (uVar14 < 0x1000000) {\n                    uVar14 = uVar14 << 8;\n                    uVar21 = uVar21 << 8 | *puStack76;\n                    puStack76 = puStack76 + 1;\n                }\n                uVar11 = (uVar14 >> 0xb) * uVar2;\n                if (uVar21 < uVar11) {\n                    *(iVar18 + 2) = (0x800 - uVar2 >> 5) + uVar2;\n                    iVar16 = 2;\n                    uVar14 = uVar11;\n                }\n                else {\n                    uVar14 = uVar14 - uVar11;\n                    uVar21 = uVar21 - uVar11;\n                    *(iVar18 + 2) = uVar2 - (uVar2 >> 5);\n                    iVar16 = 3;\n                }\n                iVar16 = iVar16 * 2;\n                uVar2 = *(iVar18 + iVar16);\n                if (uVar14 < 0x1000000) {\n                    uVar14 = uVar14 << 8;\n                    uVar21 = uVar21 << 8 | *puStack76;\n                    puStack76 = puStack76 + 1;\n                }\n                uVar11 = (uVar14 >> 0xb) * uVar2;\n                if (uVar21 < uVar11) {\n                    *(iVar18 + iVar16) = (0x800 - uVar2 >> 5) + uVar2;\n                    uVar14 = uVar11;\n                }\n                else {\n                    uVar14 = uVar14 - uVar11;\n                    uVar21 = uVar21 - uVar11;\n                    *(iVar18 + iVar16) = uVar2 - (uVar2 >> 5);\n                    iVar16 = iVar16 + 1;\n                }\n                iVar16 = iVar16 * 2;\n                uVar2 = *(iVar18 + iVar16);\n                if (uVar14 < 0x1000000) {\n                    uVar14 = uVar14 << 8;\n                    uVar21 = uVar21 << 8 | *puStack76;\n                    puStack76 = puStack76 + 1;\n                }\n                uVar11 = (uVar14 >> 0xb) * uVar2;\n                if (uVar21 < uVar11) {\n                    *(iVar18 + iVar16) = (0x800 - uVar2 >> 5) + uVar2;\n                    uVar14 = uVar11;\n                }\n                else {\n                    uVar14 = uVar14 - uVar11;\n                    uVar21 = uVar21 - uVar11;\n                    *(iVar18 + iVar16) = uVar2 - (uVar2 >> 5);\n                    iVar16 = iVar16 + 1;\n                }\n                iVar16 = iVar16 * 2;\n                uVar2 = *(iVar18 + iVar16);\n                if (uVar14 < 0x1000000) {\n                    uVar14 = uVar14 << 8;\n                    uVar21 = uVar21 << 8 | *puStack76;\n                    puStack76 = puStack76 + 1;\n                }\n                uVar11 = (uVar14 >> 0xb) * uVar2;\n                if (uVar21 < uVar11) {\n                    *(iVar18 + iVar16) = (0x800 - uVar2 >> 5) + uVar2;\n                    uVar14 = uVar11;\n                }\n                else {\n                    uVar14 = uVar14 - uVar11;\n                    uVar21 = uVar21 - uVar11;\n                    *(iVar18 + iVar16) = uVar2 - (uVar2 >> 5);\n                    iVar16 = iVar16 + 1;\n                }\n                iVar16 = iVar16 * 2;\n                uVar2 = *(iVar18 + iVar16);\n                if (uVar14 < 0x1000000) {\n                    uVar14 = uVar14 << 8;\n                    uVar21 = uVar21 << 8 | *puStack76;\n                    puStack76 = puStack76 + 1;\n                }\n                uVar11 = (uVar14 >> 0xb) * uVar2;\n                if (uVar21 < uVar11) {\n                    *(iVar18 + iVar16) = (0x800 - uVar2 >> 5) + uVar2;\n                    uVar14 = uVar11;\n                }\n                else {\n                    uVar14 = uVar14 - uVar11;\n                    uVar21 = uVar21 - uVar11;\n                    *(iVar18 + iVar16) = uVar2 - (uVar2 >> 5);\n                    iVar16 = iVar16 + 1;\n                }\n                iVar16 = iVar16 * 2;\n                uVar2 = *(iVar18 + iVar16);\n                if (uVar14 < 0x1000000) {\n                    uVar14 = uVar14 << 8;\n                    uVar21 = uVar21 << 8 | *puStack76;\n                    puStack76 = puStack76 + 1;\n                }\n                uVar11 = (uVar14 >> 0xb) * uVar2;\n                if (uVar21 < uVar11) {\n                    *(iVar18 + iVar16) = (0x800 - uVar2 >> 5) + uVar2;\n                    uVar14 = uVar11;\n                }\n                else {\n                    uVar14 = uVar14 - uVar11;\n                    uVar21 = uVar21 - uVar11;\n                    *(iVar18 + iVar16) = uVar2 - (uVar2 >> 5);\n                    iVar16 = iVar16 + 1;\n                }\n                uVar11 = iVar16 - 0x40;\n                if (3 < uVar11) {\n                    uStack24 = (uVar11 >> 1) - 1;\n                    uVar19 = uVar11 & 1 | 2;\n                    if (uVar11 < 0xe) {\n                        uVar19 = uVar19 << (uStack24 & 0x1f);\n                        iVar18 = 1;\n                        uStack28 = 1;\n                        iVar16 = iVar8 + 0x55e + (uVar19 - uVar11) * 2;\n                        uVar11 = uVar19;\n                        do {\n                            uVar2 = *(iVar16 + iVar18 * 2);\n                            if (uVar14 < 0x1000000) {\n                                uVar14 = uVar14 << 8;\n                                uVar21 = uVar21 << 8 | *puStack76;\n                                puStack76 = puStack76 + 1;\n                            }\n                            uVar19 = (uVar14 >> 0xb) * uVar2;\n                            if (uVar21 < uVar19) {\n                                *(iVar16 + iVar18 * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                                iVar18 = iVar18 * 2;\n                                uVar14 = uVar19;\n                            }\n                            else {\n                                uVar14 = uVar14 - uVar19;\n                                uVar21 = uVar21 - uVar19;\n                                uVar11 = uVar11 | uStack28;\n                                *(iVar16 + iVar18 * 2) = uVar2 - (uVar2 >> 5);\n                                iVar18 = iVar18 * 2 + 1;\n                            }\n                            uStack28 = uStack28 << 1;\n                            uStack24 = uStack24 + -1;\n                        } while (uStack24 != 0);\n                    }\n                    else {\n                        iVar18 = (uVar11 >> 1) - 5;\n                        do {\n                            if (uVar14 < 0x1000000) {\n                                uVar14 = uVar14 << 8;\n                                uVar21 = uVar21 << 8 | *puStack76;\n                                puStack76 = puStack76 + 1;\n                            }\n                            uVar14 = uVar14 >> 1;\n                            uVar11 = uVar21 - uVar14 >> 0x1f;\n                            uVar19 = uVar11 + 1 + uVar19 * 2;\n                            uVar21 = (uVar21 - uVar14) + (uVar11 & uVar14);\n                            iVar18 = iVar18 + -1;\n                        } while (iVar18 != 0);\n                        uVar2 = *(iVar8 + 0x646);\n                        uVar11 = uVar19 * 0x10;\n                        if (uVar14 < 0x1000000) {\n                            uVar14 = uVar14 << 8;\n                            uVar21 = uVar21 * 0x100 | *puStack76;\n                            puStack76 = puStack76 + 1;\n                        }\n                        uVar19 = (uVar14 >> 0xb) * uVar2;\n                        if (uVar21 < uVar19) {\n                            *(iVar8 + 0x646) = (0x800 - uVar2 >> 5) + uVar2;\n                            iVar18 = 2;\n                            uVar14 = uVar19;\n                        }\n                        else {\n                            uVar14 = uVar14 - uVar19;\n                            uVar21 = uVar21 - uVar19;\n                            *(iVar8 + 0x646) = uVar2 - (uVar2 >> 5);\n                            iVar18 = 3;\n                            uVar11 = uVar11 | 1;\n                        }\n                        iVar18 = iVar18 * 2;\n                        uVar2 = *(iVar18 + 0x644 + iVar8);\n                        if (uVar14 < 0x1000000) {\n                            uVar14 = uVar14 << 8;\n                            uVar21 = uVar21 << 8 | *puStack76;\n                            puStack76 = puStack76 + 1;\n                        }\n                        uVar19 = (uVar14 >> 0xb) * uVar2;\n                        if (uVar21 < uVar19) {\n                            *(iVar18 + 0x644 + iVar8) = (0x800 - uVar2 >> 5) + uVar2;\n                            uVar14 = uVar19;\n                        }\n                        else {\n                            uVar14 = uVar14 - uVar19;\n                            uVar21 = uVar21 - uVar19;\n                            *(iVar18 + 0x644 + iVar8) = uVar2 - (uVar2 >> 5);\n                            iVar18 = iVar18 + 1;\n                            uVar11 = uVar11 | 2;\n                        }\n                        iVar18 = iVar18 * 2;\n                        uVar2 = *(iVar18 + 0x644 + iVar8);\n                        if (uVar14 < 0x1000000) {\n                            uVar14 = uVar14 << 8;\n                            uVar21 = uVar21 << 8 | *puStack76;\n                            puStack76 = puStack76 + 1;\n                        }\n                        uVar19 = (uVar14 >> 0xb) * uVar2;\n                        if (uVar21 < uVar19) {\n                            *(iVar18 + 0x644 + iVar8) = (0x800 - uVar2 >> 5) + uVar2;\n                            uVar14 = uVar19;\n                        }\n                        else {\n                            uVar14 = uVar14 - uVar19;\n                            uVar21 = uVar21 - uVar19;\n                            *(iVar18 + 0x644 + iVar8) = uVar2 - (uVar2 >> 5);\n                            iVar18 = iVar18 + 1;\n                            uVar11 = uVar11 | 4;\n                        }\n                        uVar2 = *(iVar8 + 0x644 + iVar18 * 2);\n                        if (uVar14 < 0x1000000) {\n                            uVar14 = uVar14 << 8;\n                            uVar21 = uVar21 << 8 | *puStack76;\n                            puStack76 = puStack76 + 1;\n                        }\n                        uVar19 = (uVar14 >> 0xb) * uVar2;\n                        if (uVar21 < uVar19) {\n                            *(iVar8 + 0x644 + iVar18 * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                            uVar14 = uVar19;\n                        }\n                        else {\n                            uVar14 = uVar14 - uVar19;\n                            uVar21 = uVar21 - uVar19;\n                            *(iVar8 + 0x644 + iVar18 * 2) = uVar2 - (uVar2 >> 5);\n                            uVar11 = uVar11 | 8;\n                        }\n                        if (uVar11 == 0xffffffff) {\n                            iStack52 = uVar10 + 0x112;\n                            uStack64 = uStack64 - 0xc;\ncode_r0x0040eba0:\n                            if (uVar14 < 0x1000000) {\n                                uVar14 = uVar14 << 8;\n                                uVar21 = uVar21 << 8 | *puStack76;\n                                puStack76 = puStack76 + 1;\n                            }\n                            param_1[7] = uVar14;\n                            param_1[6] = puStack76;\n                            param_1[9] = uStack72;\n                            param_1[0x12] = iStack52;\n                            param_1[0xe] = uStack60;\n                            param_1[0xb] = uStack68;\n                            param_1[8] = uVar21;\n                            param_1[0x10] = uStack44;\n                            param_1[0xf] = uStack48;\n                            param_1[0xd] = uStack64;\n                            param_1[0x11] = uStack32;\n                            return 0;\n                        }\n                    }\n                }\n                uStack32 = uStack44;\n                uStack48 = uStack60;\n                uStack44 = uVar12;\n                uStack60 = uVar11 + 1;\n                uVar12 = uVar9;\n                if (uVar9 == 0) {\n                    uVar12 = uStack68;\n                }\n                if (uVar12 <= uVar11) {\n                    return 1;\n                }\n                uStack64 = (-(uStack64 < 0x13) & 0xfffffffd) + 10;\n            }\n            uVar10 = uVar10 + 2;\n            if (param_2 == uStack72) {\n                return 1;\n            }\n            uStack24 = uVar10;\n            if (param_2 - uStack72 < uVar10) {\n                uStack24 = param_2 - uStack72;\n            }\n            uStack68 = uStack68 + uStack24;\n            iStack52 = uVar10 - uStack24;\n            uVar12 = ((-(uStack72 < uStack60) & uVar7) - uStack60) + uStack72;\n            if (uVar7 < uVar12 + uStack24) {\n                do {\n                    *(uStack72 + iVar5) = *(uVar12 + iVar5);\n                    uVar12 = uVar12 + 1;\n                    uStack72 = uStack72 + 1;\n                    if (uVar12 == uVar7) {\n                        uVar12 = 0;\n                    }\n                    uStack24 = uStack24 - 1;\n                } while (uStack24 != 0);\n            }\n            else {\n                iVar18 = uVar12 - uStack72;\n                puVar17 = iVar5 + uStack72;\n                uStack72 = uStack72 + uStack24;\n                puVar1 = puVar17 + uStack24;\n                do {\n                    *puVar17 = puVar17[iVar18];\n                    puVar17 = puVar17 + 1;\n                } while (puVar17 != puVar1);\n            }\n        }\ncode_r0x0040eb63:\n        if ((param_2 <= uStack72) || (param_3 <= puStack76)) goto code_r0x0040eba0;\n    } while( true );\n}\n",
        "token_count": 7240
    },
    "0040ec10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ec10(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t unaff_ESI;\n    \n    uVar1 = *(unaff_ESI + 0x48);\n    if ((uVar1 != 0) && (uVar1 < 0x112)) {\n        uVar2 = *(unaff_ESI + 0x28);\n        uVar5 = *(unaff_ESI + 0x24);\n        uVar3 = *(unaff_ESI + 0x38);\n        iVar4 = *(unaff_ESI + 0x14);\n        uVar6 = uVar1;\n        if (param_2 - uVar5 < uVar1) {\n            uVar6 = param_2 - uVar5;\n        }\n        if ((*(unaff_ESI + 0x30) == 0) && (*(unaff_ESI + 0xc) - *(unaff_ESI + 0x2c) <= uVar6)) {\n            *(unaff_ESI + 0x30) = *(unaff_ESI + 0xc);\n        }\n        *(unaff_ESI + 0x2c) = *(unaff_ESI + 0x2c) + uVar6;\n        *(unaff_ESI + 0x48) = uVar1 - uVar6;\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *(uVar5 + iVar4) = *(((-(uVar5 < uVar3) & uVar2) - uVar3) + uVar5 + iVar4);\n            uVar5 = uVar5 + 1;\n        }\n        *(unaff_ESI + 0x24) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "0040ec90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040ec90(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EDI;\n    \n    do {\n        iVar1 = fcn.0040df80();\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*(in_EAX + 0xc) <= *(in_EAX + 0x2c)) {\n            *(in_EAX + 0x30) = *(in_EAX + 0xc);\n        }\n        fcn.0040ec10();\n    } while (((*(in_EAX + 0x24) < unaff_EDI) && (*(in_EAX + 0x18) < unaff_EBX)) && (*(in_EAX + 0x48) < 0x112));\n    if (0x112 < *(in_EAX + 0x48)) {\n        *(in_EAX + 0x48) = 0x112;\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "0040ed00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040ed00(uint *param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    int32_t iStack16;\n    uint32_t uStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uVar5 = param_1[0xd];\n    uVar7 = param_1[7];\n    uVar10 = param_1[8];\n    puVar4 = param_2 + in_EAX;\n    iStack16 = param_1[4];\n    uVar8 = (1 << (param_1[2] & 0x1f)) - 1U & param_1[0xb];\n    if (uVar7 < 0x1000000) {\n        if (puVar4 <= param_2) {\n            return 0;\n        }\n        uVar7 = uVar7 << 8;\n        uVar10 = uVar10 << 8 | *param_2;\n        param_2 = param_2 + 1;\n    }\n    uVar1 = (uVar7 >> 0xb) * *(iStack16 + (uVar5 * 0x10 + uVar8) * 2);\n    if (uVar10 < uVar1) {\n        iStack16 = iStack16 + 0xe6c;\n        if ((param_1[0xc] != 0) || (param_1[0xb] != 0)) {\n            iVar2 = param_1[9];\n            if (iVar2 == 0) {\n                iVar2 = param_1[10];\n            }\n            iStack16 = iStack16 +\n                       ((*(param_1[5] + -1 + iVar2) >> (8U - *param_1 & 0x1f)) +\n                       (((1 << (param_1[1] & 0x1f)) - 1U & param_1[0xb]) << (*param_1 & 0x1f))) * 0x600;\n        }\n        if (uVar5 < 7) {\n            uVar5 = 1;\n            do {\n                if (uVar1 < 0x1000000) {\n                    if (puVar4 <= param_2) {\n                        return 0;\n                    }\n                    uVar1 = uVar1 << 8;\n                    uVar10 = uVar10 << 8 | *param_2;\n                    param_2 = param_2 + 1;\n                }\n                uVar7 = (uVar1 >> 0xb) * *(iStack16 + uVar5 * 2);\n                if (uVar10 < uVar7) {\n                    uVar5 = uVar5 * 2;\n                    uVar1 = uVar7;\n                }\n                else {\n                    uVar1 = uVar1 - uVar7;\n                    uVar10 = uVar10 - uVar7;\n                    uVar5 = uVar5 * 2 + 1;\n                }\n            } while (uVar5 < 0x100);\n        }\n        else {\n            if (param_1[9] < param_1[0xe]) {\n                iVar2 = param_1[10];\n            }\n            else {\n                iVar2 = 0;\n            }\n            uVar7 = *((param_1[5] - param_1[0xe]) + param_1[9] + iVar2);\n            uVar8 = 0x100;\n            uVar5 = 1;\n            do {\n                uVar7 = uVar7 * 2;\n                uVar3 = uVar8 & uVar7;\n                if (uVar1 < 0x1000000) {\n                    if (puVar4 <= param_2) {\n                        return 0;\n                    }\n                    uVar1 = uVar1 << 8;\n                    uVar10 = uVar10 << 8 | *param_2;\n                    param_2 = param_2 + 1;\n                }\n                uVar6 = (uVar1 >> 0xb) * *(iStack16 + (uVar3 + uVar5 + uVar8) * 2);\n                if (uVar10 < uVar6) {\n                    uVar5 = uVar5 * 2;\n                    uVar3 = ~uVar3;\n                    uVar1 = uVar6;\n                }\n                else {\n                    uVar1 = uVar1 - uVar6;\n                    uVar10 = uVar10 - uVar6;\n                    uVar5 = uVar5 * 2 + 1;\n                }\n                uVar8 = uVar8 & uVar3;\n            } while (uVar5 < 0x100);\n        }\n        uStack8 = 1;\n        goto code_r0x0040ee4e;\n    }\n    uVar7 = uVar7 - uVar1;\n    uVar10 = uVar10 - uVar1;\n    if (uVar7 < 0x1000000) {\n        if (puVar4 <= param_2) {\n            return 0;\n        }\n        uVar7 = uVar7 * 0x100;\n        uVar10 = uVar10 * 0x100 | *param_2;\n        param_2 = param_2 + 1;\n    }\n    uVar3 = (uVar7 >> 0xb) * *(iStack16 + 0x180 + uVar5 * 2);\n    if (uVar10 < uVar3) {\n        uStack4 = 0;\n        puVar11 = iStack16 + 0x664;\n        uStack8 = 2;\n    }\n    else {\n        uVar7 = uVar7 - uVar3;\n        uVar10 = uVar10 - uVar3;\n        uStack8 = 3;\n        if (uVar7 < 0x1000000) {\n            if (puVar4 <= param_2) {\n                return 0;\n            }\n            uVar7 = uVar7 * 0x100;\n            uVar10 = uVar10 * 0x100 | *param_2;\n            param_2 = param_2 + 1;\n        }\n        uVar1 = (uVar7 >> 0xb) * *(iStack16 + 0x198 + uVar5 * 2);\n        if (uVar10 < uVar1) {\n            if (uVar1 < 0x1000000) {\n                if (puVar4 <= param_2) {\n                    return 0;\n                }\n                uVar1 = uVar1 * 0x100;\n                uVar10 = uVar10 << 8 | *param_2;\n                param_2 = param_2 + 1;\n            }\n            uVar3 = (uVar1 >> 0xb) * *(iStack16 + ((uVar5 + 0xf) * 0x10 + uVar8) * 2);\n            if (uVar10 < uVar3) {\n                if ((uVar3 < 0x1000000) && (puVar4 <= param_2)) {\n                    return 0;\n                }\n                return 3;\n            }\ncode_r0x0040f0a8:\n            uVar10 = uVar10 - uVar3;\n            uVar3 = uVar1 - uVar3;\n        }\n        else {\n            uVar7 = uVar7 - uVar1;\n            uVar10 = uVar10 - uVar1;\n            if (uVar7 < 0x1000000) {\n                if (puVar4 <= param_2) {\n                    return 0;\n                }\n                uVar7 = uVar7 * 0x100;\n                uVar10 = uVar10 * 0x100 | *param_2;\n                param_2 = param_2 + 1;\n            }\n            uVar3 = (uVar7 >> 0xb) * *(iStack16 + 0x1b0 + uVar5 * 2);\n            if (uVar3 <= uVar10) {\n                uVar1 = uVar7 - uVar3;\n                uVar10 = uVar10 - uVar3;\n                if (uVar1 < 0x1000000) {\n                    if (puVar4 <= param_2) {\n                        return 0;\n                    }\n                    uVar1 = uVar1 * 0x100;\n                    uVar10 = uVar10 * 0x100 | *param_2;\n                    param_2 = param_2 + 1;\n                }\n                uVar3 = (uVar1 >> 0xb) * *(iStack16 + 0x1c8 + uVar5 * 2);\n                if (uVar3 <= uVar10) goto code_r0x0040f0a8;\n            }\n        }\n        uStack4 = 0xc;\n        puVar11 = iStack16 + 0xa68;\n    }\n    if (uVar3 < 0x1000000) {\n        if (puVar4 <= param_2) {\n            return 0;\n        }\n        uVar3 = uVar3 << 8;\n        uVar10 = uVar10 << 8 | *param_2;\n        param_2 = param_2 + 1;\n    }\n    uVar1 = (uVar3 >> 0xb) * *puVar11;\n    if (uVar10 < uVar1) {\n        puVar11 = puVar11 + uVar8 * 8 + 2;\n        iVar2 = 0;\n        uStack12 = 8;\n    }\n    else {\n        uVar3 = uVar3 - uVar1;\n        uVar10 = uVar10 - uVar1;\n        if (uVar3 < 0x1000000) {\n            if (puVar4 <= param_2) {\n                return 0;\n            }\n            uVar3 = uVar3 * 0x100;\n            uVar10 = uVar10 * 0x100 | *param_2;\n            param_2 = param_2 + 1;\n        }\n        uVar5 = (uVar3 >> 0xb) * puVar11[1];\n        if (uVar10 < uVar5) {\n            iVar2 = 8;\n            puVar11 = puVar11 + uVar8 * 8 + 0x82;\n            uStack12 = 8;\n            uVar1 = uVar5;\n        }\n        else {\n            uVar1 = uVar3 - uVar5;\n            uVar10 = uVar10 - uVar5;\n            puVar11 = puVar11 + 0x102;\n            iVar2 = 0x10;\n            uStack12 = 0x100;\n        }\n    }\n    uVar5 = 1;\n    do {\n        if (uVar1 < 0x1000000) {\n            if (puVar4 <= param_2) {\n                return 0;\n            }\n            uVar1 = uVar1 << 8;\n            uVar10 = uVar10 << 8 | *param_2;\n            param_2 = param_2 + 1;\n        }\n        uVar7 = (uVar1 >> 0xb) * puVar11[uVar5];\n        if (uVar10 < uVar7) {\n            uVar5 = uVar5 * 2;\n            uVar1 = uVar7;\n        }\n        else {\n            uVar1 = uVar1 - uVar7;\n            uVar10 = uVar10 - uVar7;\n            uVar5 = uVar5 * 2 + 1;\n        }\n    } while (uVar5 < uStack12);\n    uVar5 = uVar5 + (iVar2 - uStack12);\n    if (uStack4 < 4) {\n        if (3 < uVar5) {\n            uVar5 = 3;\n        }\n        uVar7 = 1;\n        do {\n            if (uVar1 < 0x1000000) {\n                if (puVar4 <= param_2) {\n                    return 0;\n                }\n                uVar1 = uVar1 << 8;\n                uVar10 = uVar10 << 8 | *param_2;\n                param_2 = param_2 + 1;\n            }\n            uVar8 = (uVar1 >> 0xb) * *(uVar5 * 0x80 + 0x360 + iStack16 + uVar7 * 2);\n            if (uVar10 < uVar8) {\n                uVar7 = uVar7 * 2;\n                uVar1 = uVar8;\n            }\n            else {\n                uVar1 = uVar1 - uVar8;\n                uVar10 = uVar10 - uVar8;\n                uVar7 = uVar7 * 2 + 1;\n            }\n        } while (uVar7 < 0x40);\n        uVar7 = uVar7 - 0x40;\n        if (3 < uVar7) {\n            iVar2 = (uVar7 >> 1) - 1;\n            if (uVar7 < 0xe) {\n                iStack16 = iStack16 + 0x55e + (((uVar7 & 1 | 2) << (iVar2 & 0x1f)) - uVar7) * 2;\n            }\n            else {\n                iVar2 = (uVar7 >> 1) - 5;\n                do {\n                    if (uVar1 < 0x1000000) {\n                        if (puVar4 <= param_2) {\n                            return 0;\n                        }\n                        uVar1 = uVar1 << 8;\n                        uVar10 = uVar10 << 8 | *param_2;\n                        param_2 = param_2 + 1;\n                    }\n                    uVar1 = uVar1 >> 1;\n                    uVar10 = uVar10 - (0xffffffffU - (uVar10 - uVar1 >> 0x1f) & uVar1);\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n                iStack16 = iStack16 + 0x644;\n                iVar2 = 4;\n            }\n            iVar9 = 1;\n            do {\n                if (uVar1 < 0x1000000) {\n                    if (puVar4 <= param_2) {\n                        return 0;\n                    }\n                    uVar1 = uVar1 << 8;\n                    uVar10 = uVar10 << 8 | *param_2;\n                    param_2 = param_2 + 1;\n                }\n                uVar5 = (uVar1 >> 0xb) * *(iStack16 + iVar9 * 2);\n                if (uVar10 < uVar5) {\n                    iVar9 = iVar9 * 2;\n                    uVar1 = uVar5;\n                }\n                else {\n                    uVar1 = uVar1 - uVar5;\n                    uVar10 = uVar10 - uVar5;\n                    iVar9 = iVar9 * 2 + 1;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\ncode_r0x0040ee4e:\n    if ((uVar1 < 0x1000000) && (puVar4 <= param_2)) {\n        return 0;\n    }\n    return uStack8;\n}\n",
        "token_count": 3471
    },
    "0040f380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.0040f380(uint *param_1, uint32_t param_2, uchar *param_3, uint32_t *param_4, int32_t param_5, uint *param_6)\n\n{\n    uchar uVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uStack8;\n    \n    uStack8 = *param_4;\n    *param_4 = 0;\n    fcn.0040ec10();\n    *param_6 = 0;\n    iVar4 = param_1[0x12];\n    do {\n        if (iVar4 == 0x112) {\n            if (param_1[8] == 0) {\n                *param_6 = 1;\n            }\n            return param_1[8] != 0;\n        }\n        if (param_1[0x13] != 0) {\n            while ((uStack8 != 0 && (param_1[0x16] < 5))) {\n                uVar1 = *param_3;\n                param_3 = param_3 + 1;\n                *(param_1[0x16] + 0x5c + param_1) = uVar1;\n                param_1[0x16] = param_1[0x16] + 1;\n                *param_4 = *param_4 + 1;\n                uStack8 = uStack8 - 1;\n            }\n            if (param_1[0x16] < 5) {\n                *param_6 = 3;\n                return false;\n            }\n            if (*(param_1 + 0x17) != '\\0') {\n                return true;\n            }\n            param_1[7] = 0xffffffff;\n            param_1[8] = CONCAT31(CONCAT21(CONCAT11(*(param_1 + 0x5d), *(param_1 + 0x5e)), *(param_1 + 0x5f)), \n                                  *(param_1 + 0x18));\n            param_1[0x13] = 0;\n            param_1[0x16] = 0;\n        }\n        bVar2 = false;\n        if (param_2 <= param_1[9]) {\n            if ((param_1[0x12] == 0) && (param_1[8] == 0)) {\n                *param_6 = 4;\n                return false;\n            }\n            if (param_5 == 0) {\n                *param_6 = 2;\n                return false;\n            }\n            if (param_1[0x12] != 0) goto code_r0x0040f62b;\n            bVar2 = true;\n        }\n        if (param_1[0x14] != 0) {\n            uVar3 = (0x300 << (param_1[1] + *param_1 & 0x1fU)) + 0x736;\n            if (uVar3 != 0) {\n                puVar6 = param_1[4];\n                for (uVar5 = uVar3 >> 1; uVar5 != 0; uVar5 = uVar5 - 1) {\n                    *puVar6 = 0x4000400;\n                    puVar6 = puVar6 + 1;\n                }\n                for (uVar3 = (uVar3 & 1) != 0; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar6 = 0x400;\n                    puVar6 = puVar6 + 2;\n                }\n            }\n            param_1[0x11] = 1;\n            param_1[0x10] = 1;\n            param_1[0xf] = 1;\n            param_1[0xe] = 1;\n            param_1[0xd] = 0;\n            param_1[0x14] = 0;\n        }\n        uVar3 = param_1[0x16];\n        if (uVar3 == 0) {\n            if ((uStack8 < 0x14) || (bVar2)) {\n                iVar4 = fcn.0040ed00(param_3);\n                if (iVar4 == 0) {\n                    sub.MSVCRT.dll_memcpy(param_1 + 0x17, param_3, uStack8);\n                    param_1[0x16] = uStack8;\n                    *param_4 = *param_4 + uStack8;\n                    *param_6 = 3;\n                    return false;\n                }\n                if ((bVar2) && (iVar4 != 2)) {\ncode_r0x0040f62b:\n                    *param_6 = 2;\n                    return true;\n                }\n            }\n            param_1[6] = param_3;\n            iVar4 = fcn.0040ec90();\n            if (iVar4 != 0) {\n                return true;\n            }\n            iVar4 = param_1[6] - param_3;\n            *param_4 = *param_4 + iVar4;\n        }\n        else {\n            for (uVar5 = 0; (uVar3 < 0x14 && (uVar5 < uStack8)); uVar5 = uVar5 + 1) {\n                *(param_1 + uVar3 + 0x5c) = param_3[uVar5];\n                uVar3 = uVar3 + 1;\n            }\n            param_1[0x16] = uVar3;\n            if ((uVar3 < 0x14) || (bVar2)) {\n                iVar4 = fcn.0040ed00(param_1 + 0x17);\n                if (iVar4 == 0) {\n                    *param_4 = *param_4 + uVar5;\n                    *param_6 = 3;\n                    return false;\n                }\n                if ((bVar2) && (iVar4 != 2)) {\n                    *param_6 = 2;\n                    return true;\n                }\n            }\n            param_1[6] = param_1 + 0x17;\n            iVar4 = fcn.0040ec90();\n            if (iVar4 != 0) {\n                return true;\n            }\n            iVar4 = (uVar5 - 0x5c) + ((param_1[6] - uVar3) - param_1);\n            *param_4 = *param_4 + iVar4;\n            param_1[0x16] = 0;\n        }\n        param_3 = param_3 + iVar4;\n        uStack8 = uStack8 - iVar4;\n        iVar4 = param_1[0x12];\n    } while( true );\n}\n",
        "token_count": 1507
    },
    "0040faf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040faf0(int32_t param_1, int32_t *param_2, uint param_3, int32_t *param_4)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint uVar8;\n    bool bVar9;\n    int32_t iStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    uint32_t uStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    if ((*(param_1 + 0x14) == 0) || (*(param_1 + 0x90) == '\\0')) {\n        return 1;\n    }\n    uStack16 = *(param_1 + 0xa0);\n    iStack12 = *(param_1 + 0xa4);\n    iStack32 = *(param_1 + 0x48);\n    if (*(param_1 + 0xb8) <= iStack32 - *(param_1 + 0x44)) {\n        iStack32 = *(param_1 + 0xb8) + *(param_1 + 0x44);\n    }\n    do {\n        piVar7 = param_1 + 0x1c;\n        if (*(param_1 + 0x18) == *piVar7) {\n            *piVar7 = 0;\n            *(param_1 + 0x18) = 0;\n            uVar5 = (**(*param_2 + 0xc))(param_2, *(param_1 + 0x14), *(param_1 + 0xb0), piVar7);\n            if (uVar5 != 0) {\n                return uVar5;\n            }\n        }\n        iVar2 = *(param_1 + 0x44);\n        uVar5 = iStack32 - iVar2;\n        uVar8 = 0;\n        if ((((*(param_1 + 0x91) != '\\0') &&\n             (uVar6 = *(param_1 + 0x98) - *(param_1 + 0xa8), \n             *(param_1 + 0x9c) - *(param_1 + 0xac) == *(param_1 + 0x98) < *(param_1 + 0xa8))) && (uVar6 <= uVar5)) &&\n           (uVar5 = uVar6,  *(param_1 + 0xc0) != '\\0')) {\n            uVar8 = 1;\n        }\n        uStack28 = *(param_1 + 0x1c) - *(param_1 + 0x18);\n        iStack24 = fcn.0040f380(param_1 + 0x20, uVar5 + iVar2, *(param_1 + 0x14) + *(param_1 + 0x18), &uStack28, uVar8, \n                                &iStack20);\n        *(param_1 + 0x18) = *(param_1 + 0x18) + uStack28;\n        iVar3 = *(param_1 + 0x44);\n        puVar1 = param_1 + 0xa0;\n        uVar5 = *puVar1;\n        *puVar1 = *puVar1 + uStack28;\n        *(param_1 + 0xa4) = *(param_1 + 0xa4) + CARRY4(uVar5, uStack28);\n        uVar6 = iVar3 - iVar2;\n        puVar1 = param_1 + 0xa8;\n        uVar5 = *puVar1;\n        *puVar1 = *puVar1 + uVar6;\n        *(param_1 + 0xac) = *(param_1 + 0xac) + CARRY4(uVar5, uVar6);\n        if ((uStack28 != 0) || (bVar4 = true,  uVar6 != 0)) {\n            bVar4 = false;\n        }\n        if (*(param_1 + 0x91) == '\\0') {\ncode_r0x0040fc5c:\n            bVar9 = false;\n        }\n        else {\n            uVar5 = *(param_1 + 0xac);\n            bVar9 = uVar5 < *(param_1 + 0x9c);\n            if ((bVar9) || ((bVar9 || uVar5 == *(param_1 + 0x9c) && (*(param_1 + 0xa8) < *(param_1 + 0x98)))))\n            goto code_r0x0040fc5c;\n            bVar9 = true;\n        }\n        if ((((iStack24 != 0) || (iVar3 == iStack32)) || (bVar4)) || (bVar9)) {\n            uStack28 = fcn.00413b29(param_3, *(param_1 + 0x34) + *(param_1 + 0xbc), iVar3 - *(param_1 + 0xbc));\n            iStack32 = *(param_1 + 0x48);\n            *(param_1 + 0xbc) = *(param_1 + 0x44);\n            if (*(param_1 + 0x44) == iStack32) {\n                *(param_1 + 0x44) = 0;\n                *(param_1 + 0xbc) = 0;\n            }\n            if (*(param_1 + 0xb8) <= iStack32 - *(param_1 + 0x44)) {\n                iStack32 = *(param_1 + 0xb8) + *(param_1 + 0x44);\n            }\n            if (iStack24 != 0) {\n                return 1;\n            }\n            if (uStack28 != 0) {\n                return uStack28;\n            }\n            if (bVar9) {\n                return 0;\n            }\n            if (bVar4) {\n                return iStack20 != 1;\n            }\n        }\n        if (param_4 != NULL) {\n            iStack8 = *(param_1 + 0xa0) - uStack16;\n            iStack4 = (*(param_1 + 0xa4) - iStack12) - (*(param_1 + 0xa0) < uStack16);\n            uVar5 = (**(*param_4 + 0xc))(param_4, &iStack8, param_1 + 0xa8);\n            if (uVar5 != 0) {\n                return uVar5;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1500
    },
    "00410b70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410b70(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint uStack12;\n    uint *puStack8;\n    \n    puVar5 = &uStack12;\n    *(param_2 + 0x2c) = 0xff;\n    uVar7 = 0;\n    puVar6 = param_2 + 0xf0;\n    do {\n        uVar1 = *(param_2 + 0x48 + uVar7);\n        puVar3 = *puVar6;\n        *puVar6 = 0;\n        while (puVar4 = puVar3,  puVar4 != NULL) {\n            puVar4[1] = puVar5;\n            puVar5[2] = puVar4;\n            puVar3 = *puVar4;\n            *puVar4 = 0;\n            *(puVar4 + 2) = uVar1;\n            puVar5 = puVar4;\n        }\n        uVar7 = uVar7 + 1;\n        puVar6 = puVar6 + 1;\n    } while (uVar7 < 0x26);\n    uStack12._0_2_ = 1;\n    puStack8 = puVar5;\n    puVar5[2] = &uStack12;\n    if (*(param_2 + 0x34) != *(param_2 + 0x38)) {\n        **(param_2 + 0x34) = 1;\n    }\n    if (puVar5 != &uStack12) {\n        do {\n            uVar7 = *(puVar5 + 2);\n            puVar6 = puVar5 + uVar7 * 3;\n            iVar2 = *puVar6;\n            for (uVar7 = uVar7 + *(puVar5 + uVar7 * 0xc + 2); (iVar2 == 0 && (uVar7 < 0x10000));\n                uVar7 = uVar7 + *(puVar5 + uVar7 * 0xc + 2)) {\n                *(puVar6[2] + 4) = puVar6[1];\n                *(puVar6[1] + 8) = puVar6[2];\n                *(puVar5 + 2) = uVar7;\n                puVar6 = puVar5 + uVar7 * 3;\n                iVar2 = *puVar6;\n            }\n            puVar5 = puVar5[1];\n        } while (puVar5 != &uStack12);\n    }\n    if (puStack8 != &uStack12) {\n        do {\n            uVar7 = *(puStack8 + 2);\n            puVar6 = puStack8[1];\n            if (0x80 < uVar7) {\n                iVar8 = (uVar7 - 0x81 >> 7) + 1;\n                do {\n                    *puStack8 = *(param_2 + 0x184);\n                    *(param_2 + 0x184) = puStack8;\n                    uVar7 = uVar7 - 0x80;\n                    puStack8 = puStack8 + 0x180;\n                    iVar8 = iVar8 + -1;\n                } while (iVar8 != 0);\n            }\n            uVar9 = *(param_2 + 0x6d + uVar7);\n            if (*(param_2 + 0x48 + uVar9) != uVar7) {\n                uVar10 = *(param_2 + 0x47 + uVar9);\n                uVar9 = uVar9 - 1;\n                iVar8 = uVar7 - uVar10;\n                puStack8[uVar10 * 3] = *(param_2 + 0xec + iVar8 * 4);\n                *(param_2 + 0xf0 + (iVar8 + -1) * 4) = puStack8 + uVar10 * 3;\n            }\n            *puStack8 = *(param_2 + 0xf0 + uVar9 * 4);\n            *(param_2 + 0xf0 + uVar9 * 4) = puStack8;\n            puStack8 = puVar6;\n        } while (puVar6 != &uStack12);\n    }\n    return;\n}\n",
        "token_count": 1013
    },
    "00410cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00410cf0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EDI;\n    \n    if (*(param_2 + 0x2c) == 0) {\n        fcn.00410b70();\n        puVar4 = *(extraout_EDX + 0xf0 + unaff_EDI * 4);\n        param_2 = extraout_EDX;\n        if (puVar4 != NULL) {\n            *(extraout_EDX + 0xf0 + unaff_EDI * 4) = *puVar4;\n            return puVar4;\n        }\n    }\n    piVar3 = param_2 + 0xf0 + unaff_EDI * 4;\n    iVar1 = unaff_EDI;\n    do {\n        iVar1 = iVar1 + 1;\n        piVar3 = piVar3 + 1;\n        if (iVar1 == 0x26) {\n            uVar2 = *(param_2 + 0x48 + unaff_EDI);\n            *(param_2 + 0x2c) = *(param_2 + 0x2c) + -1;\n            if (uVar2 * 0xc < *(param_2 + 0x40) - *(param_2 + 0x3c)) {\n                puVar4 = *(param_2 + 0x40) + uVar2 * -0xc;\n                *(param_2 + 0x40) = puVar4;\n                return puVar4;\n            }\n            return NULL;\n        }\n    } while (*piVar3 == 0);\n    puVar4 = *(param_2 + 0xf0 + iVar1 * 4);\n    *(param_2 + 0xf0 + iVar1 * 4) = *puVar4;\n    fcn.00410b00(puVar4, iVar1);\n    return puVar4;\n}\n",
        "token_count": 464
    },
    "00411020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t ** fcn.00411020(int16_t **param_1, int32_t param_2)\n\n{\n    int16_t **ppiVar1;\n    int16_t **ppiVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int16_t **ppiVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int16_t **ppiVar9;\n    char cVar10;\n    uint32_t uStack264;\n    int16_t iStack260;\n    int16_t *apiStack256 [64];\n    \n    piVar3 = param_1[2];\n    ppiVar5 = *(piVar3 + 1);\n    if (param_2 == 0) {\n        apiStack256[0] = piVar3;\n    }\n    uVar8 = param_2 == 0;\n    ppiVar9 = *param_1;\n    ppiVar2 = *(*param_1 + 8);\n    do {\n        if (ppiVar2 == NULL) {\ncode_r0x004110bc:\n            uStack264 = (ppiVar5 + 1) * 0x10000;\n            iStack260 = ppiVar5 + 1 >> 0x10;\n            if (*ppiVar9 == 1) {\n                cVar10 = *(ppiVar9 + 3);\n            }\n            else {\n                piVar3 = ppiVar9[1];\n                cVar10 = *piVar3;\n                while (cVar10 != *ppiVar5) {\n                    piVar3 = piVar3 + 3;\n                    cVar10 = *piVar3;\n                }\n                iVar4 = *(piVar3 + 1) - 1;\n                uVar7 = (*(ppiVar9 + 2) - *ppiVar9) - iVar4;\n                if (uVar7 < iVar4 * 2) {\n                    cVar10 = (uVar7 * 3 + -1 + iVar4 * 2) / (uVar7 * 2);\n                }\n                else {\n                    cVar10 = uVar7 < iVar4 * 5;\n                }\n                cVar10 = cVar10 + '\\x01';\n            }\n            uStack264._0_2_ = CONCAT11(cVar10, *ppiVar5);\n            uStack264 = uStack264 | uStack264;\n            do {\n                if (param_1[0xe] == param_1[0xd]) {\n                    if (param_1[0x3c] == NULL) {\n                        ppiVar5 = fcn.00410cf0();\n                        if (ppiVar5 == NULL) {\n                            return NULL;\n                        }\n                    }\n                    else {\n                        ppiVar5 = param_1[0x3c];\n                        param_1[0x3c] = *ppiVar5;\n                    }\n                }\n                else {\n                    ppiVar5 = param_1[0xe] + -6;\n                    param_1[0xe] = ppiVar5;\n                }\n                ppiVar5[2] = ppiVar9;\n                *(ppiVar5 + 2) = uStack264;\n                *(ppiVar5 + 6) = iStack260;\n                iVar4 = *(&iStack260 + uVar8 * 2);\n                uVar8 = uVar8 - 1;\n                *ppiVar5 = 1;\n                *(iVar4 + 4) = ppiVar5 >> 0x10;\n                *(iVar4 + 2) = ppiVar5;\n                ppiVar9 = ppiVar5;\n            } while (uVar8 != 0);\n            return ppiVar5;\n        }\n        if (*ppiVar2 == 1) {\n            piVar6 = ppiVar2 + 2;\n        }\n        else {\n            piVar6 = ppiVar2[1];\n            if (*piVar6 != *piVar3) {\n                do {\n                    piVar6 = piVar6 + 3;\n                } while (*piVar6 != *param_1[2]);\n            }\n        }\n        ppiVar9 = *(piVar6 + 1);\n        if (ppiVar9 != ppiVar5) {\n            if (uVar8 == 0) {\n                return ppiVar9;\n            }\n            goto code_r0x004110bc;\n        }\n        ppiVar1 = ppiVar2[2];\n        apiStack256[uVar8] = piVar6;\n        uVar8 = uVar8 + 1;\n        ppiVar9 = ppiVar2;\n        ppiVar2 = ppiVar1;\n    } while( true );\n}\n",
        "token_count": 1039
    },
    "004111c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.004111c0(void)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint16_t uVar6;\n    int16_t *piVar7;\n    uint uVar8;\n    uint16_t **ppuVar9;\n    int16_t iVar10;\n    uint16_t **in_EAX;\n    uint *puVar11;\n    uint16_t *puVar13;\n    uint32_t uVar14;\n    uint16_t **ppuVar15;\n    int16_t iVar16;\n    uint16_t **ppuVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint16_t **ppuVar21;\n    uint16_t *puVar22;\n    uint16_t *puStack32;\n    uint32_t uStack24;\n    uint16_t *puStack16;\n    uint *puVar12;\n    \n    puVar13 = in_EAX[2];\n    puStack32 = *(puVar13 + 1);\n    if ((*(puVar13 + 1) < 0x1f) && (piVar7 = *(*in_EAX + 4),  piVar7 != NULL)) {\n        if (*piVar7 == 1) {\n            if (*(piVar7 + 3) < 0x20) {\n                *(piVar7 + 3) = *(piVar7 + 3) + 1;\n            }\n        }\n        else {\n            puVar11 = *(piVar7 + 2);\n            if (*puVar11 != *puVar13) {\n                do {\n                    puVar12 = puVar11;\n                    puVar11 = puVar12 + 6;\n                } while (*puVar11 != *puVar13);\n                if (*(puVar12 + 1) <= *(puVar12 + 7)) {\n                    uVar8 = *puVar11;\n                    uVar3 = *(puVar12 + 10);\n                    *puVar11 = *puVar12;\n                    *(puVar12 + 10) = *(puVar12 + 1);\n                    *puVar12 = uVar8;\n                    *(puVar12 + 1) = uVar3;\n                    puVar11 = puVar12;\n                }\n            }\n            if (*(puVar11 + 1) < 0x73) {\n                *(puVar11 + 1) = *(puVar11 + 1) + 2;\n                piVar7[1] = piVar7[1] + 2;\n            }\n        }\n    }\n    if (in_EAX[3] == NULL) {\n        puVar13 = fcn.00411020();\n        in_EAX[1] = puVar13;\n        *in_EAX = puVar13;\n        if (puVar13 != NULL) {\n            puVar22 = in_EAX[2];\n            puVar22[1] = puVar13;\n            puVar22[2] = puVar13 >> 0x10;\n            return;\n        }\n    }\n    else {\n        *in_EAX[0xf] = *in_EAX[2];\n        in_EAX[0xf] = in_EAX[0xf] + 1;\n        puStack16 = in_EAX[0xf];\n        if (puStack16 < in_EAX[0x10]) {\n            if (puStack32 == NULL) {\n                puVar13 = in_EAX[2];\n                puVar13[1] = puStack16;\n                puVar13[2] = puStack16 >> 0x10;\n                puStack32 = *in_EAX;\n            }\n            else {\n                if ((puStack32 <= puStack16) && (puStack32 = fcn.00411020(),  puStack32 == NULL)) goto code_r0x00411269;\n                ppuVar15 = in_EAX + 3;\n                *ppuVar15 = *ppuVar15 + -1;\n                if (*ppuVar15 == NULL) {\n                    in_EAX[0xf] = in_EAX[0xf] - (in_EAX[1] != *in_EAX);\n                    puStack16 = puStack32;\n                }\n            }\n            puVar13 = *in_EAX;\n            uVar4 = puVar13[1];\n            uVar2 = *(in_EAX[2] + 1);\n            uVar19 = *puVar13;\n            puVar22 = in_EAX[1];\n            if (puVar22 != puVar13) {\n                do {\n                    uVar5 = *puVar22;\n                    uVar20 = uVar5;\n                    if (uVar20 == 1) {\n                        ppuVar15 = in_EAX[0x3c];\n                        if (ppuVar15 == NULL) {\n                            ppuVar15 = in_EAX[0xd];\n                            if (in_EAX[0xe] - ppuVar15 < *(in_EAX + 0x12) * 0xc) {\n                                ppuVar15 = fcn.00410cf0();\n                            }\n                            else {\n                                in_EAX[0xd] = ppuVar15 + *(in_EAX + 0x12) * 3;\n                            }\n                        }\n                        else {\n                            in_EAX[0x3c] = *ppuVar15;\n                        }\n                        if (ppuVar15 == NULL) goto code_r0x00411269;\n                        *ppuVar15 = *(puVar22 + 1);\n                        *(ppuVar15 + 1) = puVar22[3];\n                        *(puVar22 + 2) = ppuVar15;\n                        if (*(ppuVar15 + 1) < 0x1e) {\n                            *(ppuVar15 + 1) = *(ppuVar15 + 1) * '\\x02';\n                        }\n                        else {\n                            *(ppuVar15 + 1) = 0x78;\n                        }\n                        puVar22[1] = (3 < uVar19) + *(in_EAX + 4) + *(ppuVar15 + 1);\n                    }\n                    else {\n                        if ((uVar5 & 1) == 0) {\n                            uStack24 = uVar5 >> 1;\n                            uVar14 = *(uStack24 + 0x6d + in_EAX);\n                            if (uVar14 != *(uStack24 + 0x6e + in_EAX)) {\n                                ppuVar15 = fcn.00410d80();\n                                if (ppuVar15 == NULL) goto code_r0x00411269;\n                                ppuVar9 = *(puVar22 + 2);\n                                ppuVar17 = ppuVar9 + 2;\n                                ppuVar21 = ppuVar15;\n                                do {\n                                    *ppuVar21 = ppuVar17[-2];\n                                    ppuVar21[1] = ppuVar17[-1];\n                                    *(ppuVar17 + (ppuVar15 - ppuVar9)) = *ppuVar17;\n                                    ppuVar21 = ppuVar21 + 3;\n                                    ppuVar17 = ppuVar17 + 3;\n                                    uStack24 = uStack24 - 1;\n                                } while (uStack24 != 0);\n                                *ppuVar9 = in_EAX[uVar14 + 0x3c];\n                                in_EAX[uVar14 + 0x3c] = ppuVar9;\n                                *(puVar22 + 2) = ppuVar15;\n                            }\n                        }\n                        puVar22[1] = (puVar22[1] <= uVar20 * 8 && uVar20 * 4 <= uVar19) * 2 + (uVar20 * 2 < uVar19) +\n                                     puVar22[1];\n                    }\n                    uVar6 = puVar22[1];\n                    uVar18 = uVar6 + ((uVar4 - uVar2) - uVar19) + 1;\n                    uVar14 = *(in_EAX[2] + 1) * (uVar6 + 6) * 2;\n                    if (uVar14 < uVar18 * 6) {\n                        iVar10 = 3;\n                        iVar16 = (2 - (uVar14 < uVar18 * 4)) + (uVar18 < uVar14);\n                    }\n                    else {\n                        iVar10 = (-(uVar14 < uVar18 * 0xc) - (uVar14 < uVar18 * 0xf)) + (7 - (uVar14 < uVar18 * 9));\n                        iVar16 = iVar10;\n                    }\n                    puVar22[1] = uVar6 + iVar10;\n                    puVar1 = *(puVar22 + 2) + uVar20 * 6;\n                    *(puVar1 + 2) = puStack16;\n                    *(puVar1 + 4) = puStack16 >> 0x10;\n                    *puVar1 = *in_EAX[2];\n                    puVar1[1] = iVar16;\n                    *puVar22 = uVar5 + 1;\n                    puVar22 = *(puVar22 + 4);\n                } while (puVar22 != *in_EAX);\n            }\n            *in_EAX = puStack32;\n            in_EAX[1] = puStack32;\n            return;\n        }\n    }\ncode_r0x00411269:\n    fcn.00410e60();\n    return;\n}\n",
        "token_count": 2095
    },
    "00411540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00411540(void)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint8_t uVar6;\n    uint16_t **ppuVar7;\n    uint16_t **ppuVar8;\n    char *pcVar9;\n    uint16_t **ppuVar10;\n    uint uVar11;\n    uint8_t uVar12;\n    uint32_t uVar13;\n    uint16_t **ppuVar14;\n    uint16_t **ppuVar15;\n    int32_t iVar16;\n    uint16_t **unaff_ESI;\n    uint32_t uVar17;\n    uint32_t uStack20;\n    uint16_t *puStack16;\n    \n    ppuVar10 = *(*unaff_ESI + 2);\n    ppuVar7 = unaff_ESI[2];\n    iVar1 = *(ppuVar7 + 1);\n    puVar4 = *ppuVar7;\n    ppuVar8 = ppuVar7;\n    for (; ppuVar7 != ppuVar10; ppuVar7 = ppuVar7 + -6) {\n        *ppuVar7 = *(ppuVar8 + -6);\n        *(ppuVar7 + 1) = *(ppuVar8 + -2);\n        ppuVar8 = ppuVar8 + -6;\n    }\n    *ppuVar7 = puVar4;\n    *(ppuVar7 + 1) = iVar1;\n    uVar6 = *(ppuVar7 + 1);\n    uVar3 = (*unaff_ESI)[1];\n    uVar12 = uVar6 + 4;\n    *(ppuVar7 + 1) = uVar12;\n    uVar17 = uVar3 - uVar6;\n    puVar4 = unaff_ESI[3];\n    uStack20 = uVar12 + (puVar4 != NULL) >> 1;\n    *(ppuVar7 + 1) = uStack20;\n    iVar16 = **unaff_ESI - 1;\n    do {\n        ppuVar8 = ppuVar7;\n        ppuVar7 = ppuVar8 + 6;\n        uVar17 = uVar17 - *(ppuVar8 + 7);\n        uVar13 = *(ppuVar8 + 7) + (puVar4 != NULL) >> 1;\n        uStack20 = uStack20 + uVar13;\n        uVar6 = uVar13;\n        *(ppuVar8 + 7) = uVar6;\n        if (*(ppuVar8 + 1) <= uVar6 && uVar6 != *(ppuVar8 + 1)) {\n            iVar1 = *(ppuVar8 + 10);\n            puVar5 = *ppuVar7;\n            ppuVar15 = ppuVar7;\n            do {\n                ppuVar14 = ppuVar15;\n                *ppuVar14 = *(ppuVar14 + -6);\n                *(ppuVar14 + 1) = *(ppuVar14 + -2);\n                ppuVar15 = ppuVar14 + -6;\n                if (ppuVar15 == ppuVar10) break;\n                uVar6 = puVar5 >> 8;\n            } while (*(ppuVar14 + -0xb) <= uVar6 && uVar6 != *(ppuVar14 + -0xb));\n            *ppuVar15 = puVar5;\n            *(ppuVar14 + -2) = iVar1;\n        }\n        iVar16 = iVar16 + -1;\n        if (iVar16 == 0) {\n            pcVar9 = ppuVar8 + 7;\n            if (*pcVar9 == '\\0') {\n                puVar4 = *unaff_ESI;\n                uVar3 = *puVar4;\n                do {\n                    pcVar9 = pcVar9 + -6;\n                    iVar16 = iVar16 + 1;\n                } while (*pcVar9 == '\\0');\n                *puVar4 = *puVar4 - iVar16;\n                uVar17 = uVar17 + iVar16;\n                if (**unaff_ESI == 1) {\n                    puStack16 = *ppuVar10;\n                    uVar2 = *(ppuVar10 + 1);\n                    do {\n                        uVar6 = puStack16 >> 8;\n                        uVar17 = uVar17 >> 1;\n                        puStack16._0_2_ = CONCAT11(uVar6 - (uVar6 >> 1), puStack16._0_1_);\n                        puStack16 = puStack16 & 0xffff0000 | puStack16;\n                    } while (1 < uVar17);\n                    uVar17 = *((uVar3 + 1 >> 1) + 0x6d + unaff_ESI);\n                    *ppuVar10 = unaff_ESI[uVar17 + 0x3c];\n                    unaff_ESI[uVar17 + 0x3c] = ppuVar10;\n                    puVar4 = *unaff_ESI;\n                    ppuVar10 = puVar4 + 1;\n                    unaff_ESI[2] = ppuVar10;\n                    *ppuVar10 = puStack16;\n                    puVar4[3] = uVar2;\n                    return;\n                }\n                uVar13 = **unaff_ESI + 1 >> 1;\n                if (uVar3 + 1 >> 1 != uVar13) {\n                    uVar11 = fcn.00410dd0(uVar13);\n                    *(*unaff_ESI + 2) = uVar11;\n                }\n            }\n            (*unaff_ESI)[1] = (uVar17 - (uVar17 >> 1)) + uStack20;\n            unaff_ESI[2] = *(*unaff_ESI + 2);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1326
    },
    "004117a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004117a0(uint16_t **param_1)\n\n{\n    uchar *puVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int16_t *piVar5;\n    uint16_t **ppuVar6;\n    uint uVar7;\n    int16_t iVar8;\n    uint *puVar9;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint16_t **ppuVar14;\n    int16_t iVar15;\n    uint16_t **ppuVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint16_t **ppuVar20;\n    uint16_t *puVar21;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint16_t *puStack32;\n    uint32_t uStack24;\n    uint16_t *puStack16;\n    uint *puVar10;\n    \n    puVar9 = param_1[2];\n    *(puVar9 + 1) = *(puVar9 + 1) + '\\x04';\n    (*param_1)[1] = (*param_1)[1] + 4;\n    if (*(puVar9 + -5) <= *(puVar9 + 1) && *(puVar9 + 1) != *(puVar9 + -5)) {\n        uVar7 = *puVar9;\n        puVar10 = puVar9 + -6;\n        uVar3 = *(puVar9 + 1);\n        *puVar9 = *puVar10;\n        *(puVar9 + 1) = *(puVar9 + -2);\n        *puVar10 = uVar7;\n        *(puVar9 + -2) = uVar3;\n        param_1[2] = puVar10;\n        if (0x7c < *(puVar9 + -5)) {\n            fcn.00411540();\n        }\n    }\n    puVar11 = *(param_1[2] + 1);\n    if ((param_1[3] == NULL) && (param_1[0xf] <= puVar11 && puVar11 != param_1[0xf])) {\n        param_1[1] = puVar11;\n        *param_1 = puVar11;\n        return;\n    }\n    puVar11 = param_1[2];\n    puStack32 = *(puVar11 + 1);\n    if ((*(puVar11 + 1) < 0x1f) && (piVar5 = *(*param_1 + 4),  piVar5 != NULL)) {\n        if (*piVar5 == 1) {\n            if (*(piVar5 + 3) < 0x20) {\n                *(piVar5 + 3) = *(piVar5 + 3) + 1;\n            }\n        }\n        else {\n            puVar9 = *(piVar5 + 2);\n            if (*puVar9 != *puVar11) {\n                do {\n                    puVar10 = puVar9;\n                    puVar9 = puVar10 + 6;\n                } while (*puVar9 != *puVar11);\n                if (*(puVar10 + 1) <= *(puVar10 + 7)) {\n                    uVar7 = *puVar9;\n                    uVar2 = *(puVar10 + 10);\n                    *puVar9 = *puVar10;\n                    *(puVar10 + 10) = *(puVar10 + 1);\n                    *puVar10 = uVar7;\n                    *(puVar10 + 1) = uVar2;\n                    puVar9 = puVar10;\n                }\n            }\n            if (*(puVar9 + 1) < 0x73) {\n                *(puVar9 + 1) = *(puVar9 + 1) + 2;\n                piVar5[1] = piVar5[1] + 2;\n            }\n        }\n    }\n    if (param_1[3] == NULL) {\n        puVar11 = fcn.00411020(param_1, 1, unaff_EDI, unaff_ESI);\n        param_1[1] = puVar11;\n        *param_1 = puVar11;\n        if (puVar11 != NULL) {\n            puVar21 = param_1[2];\n            puVar21[1] = puVar11;\n            puVar21[2] = puVar11 >> 0x10;\n            return;\n        }\n    }\n    else {\n        *param_1[0xf] = *param_1[2];\n        param_1[0xf] = param_1[0xf] + 1;\n        puStack16 = param_1[0xf];\n        if (puStack16 < param_1[0x10]) {\n            if (puStack32 == NULL) {\n                puVar11 = param_1[2];\n                puVar11[1] = puStack16;\n                puVar11[2] = puStack16 >> 0x10;\n                puStack32 = *param_1;\n            }\n            else {\n                if ((puStack32 <= puStack16) &&\n                   (puStack32 = fcn.00411020(param_1, 0, unaff_EDI, unaff_ESI),  puStack32 == NULL))\n                goto code_r0x00411269;\n                ppuVar14 = param_1 + 3;\n                *ppuVar14 = *ppuVar14 + -1;\n                if (*ppuVar14 == NULL) {\n                    param_1[0xf] = param_1[0xf] - (param_1[1] != *param_1);\n                    puStack16 = puStack32;\n                }\n            }\n            puVar11 = *param_1;\n            uVar18 = *puVar11;\n            puVar21 = param_1[1];\n            iVar12 = ((puVar11[1] - *(param_1[2] + 1)) - uVar18) + 1;\n            if (puVar21 != puVar11) {\n                do {\n                    uVar3 = *puVar21;\n                    uVar19 = uVar3;\n                    if (uVar19 == 1) {\n                        ppuVar14 = param_1[0x3c];\n                        if (ppuVar14 == NULL) {\n                            ppuVar14 = param_1[0xd];\n                            if (param_1[0xe] - ppuVar14 < *(param_1 + 0x12) * 0xc) {\n                                ppuVar14 = fcn.00410cf0();\n                            }\n                            else {\n                                param_1[0xd] = ppuVar14 + *(param_1 + 0x12) * 3;\n                            }\n                        }\n                        else {\n                            param_1[0x3c] = *ppuVar14;\n                        }\n                        if (ppuVar14 == NULL) goto code_r0x00411269;\n                        *ppuVar14 = *(puVar21 + 1);\n                        *(ppuVar14 + 1) = puVar21[3];\n                        *(puVar21 + 2) = ppuVar14;\n                        if (*(ppuVar14 + 1) < 0x1e) {\n                            *(ppuVar14 + 1) = *(ppuVar14 + 1) * '\\x02';\n                        }\n                        else {\n                            *(ppuVar14 + 1) = 0x78;\n                        }\n                        puVar21[1] = (3 < uVar18) + *(param_1 + 4) + *(ppuVar14 + 1);\n                    }\n                    else {\n                        if ((uVar3 & 1) == 0) {\n                            uStack24 = uVar3 >> 1;\n                            uVar13 = *(uStack24 + 0x6d + param_1);\n                            if (uVar13 != *(uStack24 + 0x6e + param_1)) {\n                                ppuVar14 = fcn.00410d80();\n                                if (ppuVar14 == NULL) goto code_r0x00411269;\n                                ppuVar6 = *(puVar21 + 2);\n                                ppuVar16 = ppuVar6 + 2;\n                                ppuVar20 = ppuVar14;\n                                do {\n                                    *ppuVar20 = ppuVar16[-2];\n                                    ppuVar20[1] = ppuVar16[-1];\n                                    *(ppuVar16 + (ppuVar14 - ppuVar6)) = *ppuVar16;\n                                    ppuVar20 = ppuVar20 + 3;\n                                    ppuVar16 = ppuVar16 + 3;\n                                    uStack24 = uStack24 - 1;\n                                } while (uStack24 != 0);\n                                *ppuVar6 = param_1[uVar13 + 0x3c];\n                                param_1[uVar13 + 0x3c] = ppuVar6;\n                                *(puVar21 + 2) = ppuVar14;\n                            }\n                        }\n                        puVar21[1] = (puVar21[1] <= uVar19 * 8 && uVar19 * 4 <= uVar18) * 2 + (uVar19 * 2 < uVar18) +\n                                     puVar21[1];\n                    }\n                    uVar4 = puVar21[1];\n                    uVar17 = uVar4 + iVar12;\n                    uVar13 = *(param_1[2] + 1) * (uVar4 + 6) * 2;\n                    if (uVar13 < uVar17 * 6) {\n                        iVar8 = 3;\n                        iVar15 = (2 - (uVar13 < uVar17 * 4)) + (uVar17 < uVar13);\n                    }\n                    else {\n                        iVar8 = (-(uVar13 < uVar17 * 0xc) - (uVar13 < uVar17 * 0xf)) + (7 - (uVar13 < uVar17 * 9));\n                        iVar15 = iVar8;\n                    }\n                    puVar21[1] = uVar4 + iVar8;\n                    puVar1 = *(puVar21 + 2) + uVar19 * 6;\n                    *(puVar1 + 2) = puStack16;\n                    *(puVar1 + 4) = puStack16 >> 0x10;\n                    *puVar1 = *param_1[2];\n                    puVar1[1] = iVar15;\n                    *puVar21 = uVar3 + 1;\n                    puVar21 = *(puVar21 + 4);\n                } while (puVar21 != *param_1);\n            }\n            *param_1 = puStack32;\n            param_1[1] = puStack32;\n            return;\n        }\n    }\ncode_r0x00411269:\n    fcn.00410e60();\n    return;\n}\n",
        "token_count": 2423
    },
    "00411820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411820(uint16_t **param_1)\n\n{\n    uchar *puVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    uint16_t **ppuVar7;\n    int16_t iVar8;\n    uint *puVar9;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint16_t **ppuVar14;\n    int16_t iVar15;\n    uint16_t **ppuVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint16_t **ppuVar20;\n    uint16_t *puVar21;\n    uint16_t *puStack32;\n    uint32_t uStack24;\n    uint16_t *puStack16;\n    uint *puVar10;\n    \n    puVar11 = (*param_1)[1] < *(param_1[2] + 1) * 2;\n    param_1[8] = param_1[8] + puVar11;\n    param_1[5] = puVar11;\n    puVar11 = *param_1 + 1;\n    *puVar11 = *puVar11 + 4;\n    *(param_1[2] + 1) = *(param_1[2] + 1) + '\\x04';\n    if (0x7c < *(param_1[2] + 1)) {\n        fcn.00411540();\n    }\n    puVar11 = *(param_1[2] + 1);\n    if ((param_1[3] == NULL) && (param_1[0xf] <= puVar11 && puVar11 != param_1[0xf])) {\n        param_1[1] = puVar11;\n        *param_1 = puVar11;\n        return;\n    }\n    puVar11 = param_1[2];\n    puStack32 = *(puVar11 + 1);\n    if ((*(puVar11 + 1) < 0x1f) && (piVar5 = *(*param_1 + 4),  piVar5 != NULL)) {\n        if (*piVar5 == 1) {\n            if (*(piVar5 + 3) < 0x20) {\n                *(piVar5 + 3) = *(piVar5 + 3) + 1;\n            }\n        }\n        else {\n            puVar9 = *(piVar5 + 2);\n            if (*puVar9 != *puVar11) {\n                do {\n                    puVar10 = puVar9;\n                    puVar9 = puVar10 + 6;\n                } while (*puVar9 != *puVar11);\n                if (*(puVar10 + 1) <= *(puVar10 + 7)) {\n                    uVar6 = *puVar9;\n                    uVar2 = *(puVar10 + 10);\n                    *puVar9 = *puVar10;\n                    *(puVar10 + 10) = *(puVar10 + 1);\n                    *puVar10 = uVar6;\n                    *(puVar10 + 1) = uVar2;\n                    puVar9 = puVar10;\n                }\n            }\n            if (*(puVar9 + 1) < 0x73) {\n                *(puVar9 + 1) = *(puVar9 + 1) + 2;\n                piVar5[1] = piVar5[1] + 2;\n            }\n        }\n    }\n    if (param_1[3] == NULL) {\n        puVar11 = fcn.00411020(param_1, 1);\n        param_1[1] = puVar11;\n        *param_1 = puVar11;\n        if (puVar11 != NULL) {\n            puVar21 = param_1[2];\n            puVar21[1] = puVar11;\n            puVar21[2] = puVar11 >> 0x10;\n            return;\n        }\n    }\n    else {\n        *param_1[0xf] = *param_1[2];\n        param_1[0xf] = param_1[0xf] + 1;\n        puStack16 = param_1[0xf];\n        if (puStack16 < param_1[0x10]) {\n            if (puStack32 == NULL) {\n                puVar11 = param_1[2];\n                puVar11[1] = puStack16;\n                puVar11[2] = puStack16 >> 0x10;\n                puStack32 = *param_1;\n            }\n            else {\n                if ((puStack32 <= puStack16) && (puStack32 = fcn.00411020(param_1, 0),  puStack32 == NULL))\n                goto code_r0x00411269;\n                ppuVar14 = param_1 + 3;\n                *ppuVar14 = *ppuVar14 + -1;\n                if (*ppuVar14 == NULL) {\n                    param_1[0xf] = param_1[0xf] - (param_1[1] != *param_1);\n                    puStack16 = puStack32;\n                }\n            }\n            puVar11 = *param_1;\n            uVar18 = *puVar11;\n            puVar21 = param_1[1];\n            iVar12 = ((puVar11[1] - *(param_1[2] + 1)) - uVar18) + 1;\n            if (puVar21 != puVar11) {\n                do {\n                    uVar3 = *puVar21;\n                    uVar19 = uVar3;\n                    if (uVar19 == 1) {\n                        ppuVar14 = param_1[0x3c];\n                        if (ppuVar14 == NULL) {\n                            ppuVar14 = param_1[0xd];\n                            if (param_1[0xe] - ppuVar14 < *(param_1 + 0x12) * 0xc) {\n                                ppuVar14 = fcn.00410cf0();\n                            }\n                            else {\n                                param_1[0xd] = ppuVar14 + *(param_1 + 0x12) * 3;\n                            }\n                        }\n                        else {\n                            param_1[0x3c] = *ppuVar14;\n                        }\n                        if (ppuVar14 == NULL) goto code_r0x00411269;\n                        *ppuVar14 = *(puVar21 + 1);\n                        *(ppuVar14 + 1) = puVar21[3];\n                        *(puVar21 + 2) = ppuVar14;\n                        if (*(ppuVar14 + 1) < 0x1e) {\n                            *(ppuVar14 + 1) = *(ppuVar14 + 1) * '\\x02';\n                        }\n                        else {\n                            *(ppuVar14 + 1) = 0x78;\n                        }\n                        puVar21[1] = (3 < uVar18) + *(param_1 + 4) + *(ppuVar14 + 1);\n                    }\n                    else {\n                        if ((uVar3 & 1) == 0) {\n                            uStack24 = uVar3 >> 1;\n                            uVar13 = *(uStack24 + 0x6d + param_1);\n                            if (uVar13 != *(uStack24 + 0x6e + param_1)) {\n                                ppuVar14 = fcn.00410d80();\n                                if (ppuVar14 == NULL) goto code_r0x00411269;\n                                ppuVar7 = *(puVar21 + 2);\n                                ppuVar16 = ppuVar7 + 2;\n                                ppuVar20 = ppuVar14;\n                                do {\n                                    *ppuVar20 = ppuVar16[-2];\n                                    ppuVar20[1] = ppuVar16[-1];\n                                    *(ppuVar16 + (ppuVar14 - ppuVar7)) = *ppuVar16;\n                                    ppuVar20 = ppuVar20 + 3;\n                                    ppuVar16 = ppuVar16 + 3;\n                                    uStack24 = uStack24 - 1;\n                                } while (uStack24 != 0);\n                                *ppuVar7 = param_1[uVar13 + 0x3c];\n                                param_1[uVar13 + 0x3c] = ppuVar7;\n                                *(puVar21 + 2) = ppuVar14;\n                            }\n                        }\n                        puVar21[1] = (puVar21[1] <= uVar19 * 8 && uVar19 * 4 <= uVar18) * 2 + (uVar19 * 2 < uVar18) +\n                                     puVar21[1];\n                    }\n                    uVar4 = puVar21[1];\n                    uVar17 = uVar4 + iVar12;\n                    uVar13 = *(param_1[2] + 1) * (uVar4 + 6) * 2;\n                    if (uVar13 < uVar17 * 6) {\n                        iVar8 = 3;\n                        iVar15 = (2 - (uVar13 < uVar17 * 4)) + (uVar17 < uVar13);\n                    }\n                    else {\n                        iVar8 = (-(uVar13 < uVar17 * 0xc) - (uVar13 < uVar17 * 0xf)) + (7 - (uVar13 < uVar17 * 9));\n                        iVar15 = iVar8;\n                    }\n                    puVar21[1] = uVar4 + iVar8;\n                    puVar1 = *(puVar21 + 2) + uVar19 * 6;\n                    *(puVar1 + 2) = puStack16;\n                    *(puVar1 + 4) = puStack16 >> 0x10;\n                    *puVar1 = *param_1[2];\n                    puVar1[1] = iVar15;\n                    *puVar21 = uVar3 + 1;\n                    puVar21 = *(puVar21 + 4);\n                } while (puVar21 != *param_1);\n            }\n            *param_1 = puStack32;\n            param_1[1] = puStack32;\n            return;\n        }\n    }\ncode_r0x00411269:\n    fcn.00410e60();\n    return;\n}\n",
        "token_count": 2311
    },
    "00411890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411890(uint16_t **param_1)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int16_t *piVar6;\n    uint uVar7;\n    uint16_t **ppuVar8;\n    int16_t iVar9;\n    uint *puVar10;\n    uint16_t *puVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint16_t **ppuVar15;\n    int16_t iVar16;\n    uint16_t **ppuVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint16_t **ppuVar21;\n    uint16_t *puVar22;\n    uint16_t *puStack32;\n    uint32_t uStack24;\n    uint16_t *puStack16;\n    uint *puVar11;\n    \n    uVar2 = *(param_1[2] + 1);\n    *(param_1[2] + 1) = (uVar2 < 0x80) + uVar2;\n    param_1[8] = param_1[8] + 1;\n    param_1[5] = 0x1;\n    puVar12 = *(param_1[2] + 1);\n    if ((param_1[3] == NULL) && (param_1[0xf] <= puVar12 && puVar12 != param_1[0xf])) {\n        param_1[1] = puVar12;\n        *param_1 = puVar12;\n        return;\n    }\n    puVar12 = param_1[2];\n    puStack32 = *(puVar12 + 1);\n    if ((*(puVar12 + 1) < 0x1f) && (piVar6 = *(*param_1 + 4),  piVar6 != NULL)) {\n        if (*piVar6 == 1) {\n            if (*(piVar6 + 3) < 0x20) {\n                *(piVar6 + 3) = *(piVar6 + 3) + 1;\n            }\n        }\n        else {\n            puVar10 = *(piVar6 + 2);\n            if (*puVar10 != *puVar12) {\n                do {\n                    puVar11 = puVar10;\n                    puVar10 = puVar11 + 6;\n                } while (*puVar10 != *puVar12);\n                if (*(puVar11 + 1) <= *(puVar11 + 7)) {\n                    uVar7 = *puVar10;\n                    uVar3 = *(puVar11 + 10);\n                    *puVar10 = *puVar11;\n                    *(puVar11 + 10) = *(puVar11 + 1);\n                    *puVar11 = uVar7;\n                    *(puVar11 + 1) = uVar3;\n                    puVar10 = puVar11;\n                }\n            }\n            if (*(puVar10 + 1) < 0x73) {\n                *(puVar10 + 1) = *(puVar10 + 1) + 2;\n                piVar6[1] = piVar6[1] + 2;\n            }\n        }\n    }\n    if (param_1[3] == NULL) {\n        puVar12 = fcn.00411020(param_1, 1);\n        param_1[1] = puVar12;\n        *param_1 = puVar12;\n        if (puVar12 != NULL) {\n            puVar22 = param_1[2];\n            puVar22[1] = puVar12;\n            puVar22[2] = puVar12 >> 0x10;\n            return;\n        }\n    }\n    else {\n        *param_1[0xf] = *param_1[2];\n        param_1[0xf] = param_1[0xf] + 1;\n        puStack16 = param_1[0xf];\n        if (puStack16 < param_1[0x10]) {\n            if (puStack32 == NULL) {\n                puVar12 = param_1[2];\n                puVar12[1] = puStack16;\n                puVar12[2] = puStack16 >> 0x10;\n                puStack32 = *param_1;\n            }\n            else {\n                if ((puStack32 <= puStack16) && (puStack32 = fcn.00411020(param_1, 0),  puStack32 == NULL))\n                goto code_r0x00411269;\n                ppuVar15 = param_1 + 3;\n                *ppuVar15 = *ppuVar15 + -1;\n                if (*ppuVar15 == NULL) {\n                    param_1[0xf] = param_1[0xf] - (param_1[1] != *param_1);\n                    puStack16 = puStack32;\n                }\n            }\n            puVar12 = *param_1;\n            uVar19 = *puVar12;\n            puVar22 = param_1[1];\n            iVar13 = ((puVar12[1] - *(param_1[2] + 1)) - uVar19) + 1;\n            if (puVar22 != puVar12) {\n                do {\n                    uVar4 = *puVar22;\n                    uVar20 = uVar4;\n                    if (uVar20 == 1) {\n                        ppuVar15 = param_1[0x3c];\n                        if (ppuVar15 == NULL) {\n                            ppuVar15 = param_1[0xd];\n                            if (param_1[0xe] - ppuVar15 < *(param_1 + 0x12) * 0xc) {\n                                ppuVar15 = fcn.00410cf0();\n                            }\n                            else {\n                                param_1[0xd] = ppuVar15 + *(param_1 + 0x12) * 3;\n                            }\n                        }\n                        else {\n                            param_1[0x3c] = *ppuVar15;\n                        }\n                        if (ppuVar15 == NULL) goto code_r0x00411269;\n                        *ppuVar15 = *(puVar22 + 1);\n                        *(ppuVar15 + 1) = puVar22[3];\n                        *(puVar22 + 2) = ppuVar15;\n                        if (*(ppuVar15 + 1) < 0x1e) {\n                            *(ppuVar15 + 1) = *(ppuVar15 + 1) * '\\x02';\n                        }\n                        else {\n                            *(ppuVar15 + 1) = 0x78;\n                        }\n                        puVar22[1] = (3 < uVar19) + *(param_1 + 4) + *(ppuVar15 + 1);\n                    }\n                    else {\n                        if ((uVar4 & 1) == 0) {\n                            uStack24 = uVar4 >> 1;\n                            uVar14 = *(uStack24 + 0x6d + param_1);\n                            if (uVar14 != *(uStack24 + 0x6e + param_1)) {\n                                ppuVar15 = fcn.00410d80();\n                                if (ppuVar15 == NULL) goto code_r0x00411269;\n                                ppuVar8 = *(puVar22 + 2);\n                                ppuVar17 = ppuVar8 + 2;\n                                ppuVar21 = ppuVar15;\n                                do {\n                                    *ppuVar21 = ppuVar17[-2];\n                                    ppuVar21[1] = ppuVar17[-1];\n                                    *(ppuVar17 + (ppuVar15 - ppuVar8)) = *ppuVar17;\n                                    ppuVar21 = ppuVar21 + 3;\n                                    ppuVar17 = ppuVar17 + 3;\n                                    uStack24 = uStack24 - 1;\n                                } while (uStack24 != 0);\n                                *ppuVar8 = param_1[uVar14 + 0x3c];\n                                param_1[uVar14 + 0x3c] = ppuVar8;\n                                *(puVar22 + 2) = ppuVar15;\n                            }\n                        }\n                        puVar22[1] = (puVar22[1] <= uVar20 * 8 && uVar20 * 4 <= uVar19) * 2 + (uVar20 * 2 < uVar19) +\n                                     puVar22[1];\n                    }\n                    uVar5 = puVar22[1];\n                    uVar18 = uVar5 + iVar13;\n                    uVar14 = *(param_1[2] + 1) * (uVar5 + 6) * 2;\n                    if (uVar14 < uVar18 * 6) {\n                        iVar9 = 3;\n                        iVar16 = (2 - (uVar14 < uVar18 * 4)) + (uVar18 < uVar14);\n                    }\n                    else {\n                        iVar9 = (-(uVar14 < uVar18 * 0xc) - (uVar14 < uVar18 * 0xf)) + (7 - (uVar14 < uVar18 * 9));\n                        iVar16 = iVar9;\n                    }\n                    puVar22[1] = uVar5 + iVar9;\n                    puVar1 = *(puVar22 + 2) + uVar20 * 6;\n                    *(puVar1 + 2) = puStack16;\n                    *(puVar1 + 4) = puStack16 >> 0x10;\n                    *puVar1 = *param_1[2];\n                    puVar1[1] = iVar16;\n                    *puVar22 = uVar4 + 1;\n                    puVar22 = *(puVar22 + 4);\n                } while (puVar22 != *param_1);\n            }\n            *param_1 = puStack32;\n            param_1[1] = puStack32;\n            return;\n        }\n    }\ncode_r0x00411269:\n    fcn.00410e60();\n    return;\n}\n",
        "token_count": 2249
    },
    "00411a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t fcn.00411a30(uint16_t **param_1, code **param_2)\n\n{\n    uint16_t **ppuVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    int16_t *piVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    uint16_t **ppuVar13;\n    uint32_t uVar14;\n    uint32_t uStack1284;\n    uint8_t *apuStack1280 [64];\n    uint16_t *apuStack1024 [256];\n    \n    puVar8 = *param_1;\n    if (*puVar8 == 1) {\n        puVar11 = *(*param_1[2] + 0x388 + param_1);\n        puVar8 = *param_1;\n        param_1[7] = puVar11;\n        iVar12 = *(**(puVar8 + 4) + 0x287 + param_1) + 0x526 +\n                 (*(*(puVar8 + 1) + 0x388 + param_1) + *(puVar8 + 3) * 0x20) * 2 + (param_1[8] >> 0x1a & 0x20U) +\n                 param_1[5] + puVar11;\n        puVar8 = param_1 + iVar12 * 2;\n        iVar12 = (*param_2[2])(param_2, *(param_1 + iVar12 * 2));\n        uVar6 = *puVar8;\n        if (iVar12 == 0) {\n            *puVar8 = (uVar6 - (uVar6 + 0x20 >> 7)) + 0x80;\n            param_1[2] = *param_1 + 1;\n            uVar3 = *(*param_1 + 1);\n            fcn.00411890(param_1);\n            return uVar3;\n        }\n        uVar6 = uVar6 - (uVar6 + 0x20 >> 7);\n        *puVar8 = uVar6;\n        uVar7 = 0;\n        param_1[4] = *((uVar6 >> 10) + 0x41c1d0);\n        do {\n            apuStack1280[uVar7] = 0xffffffff;\n            apuStack1280[uVar7 + 1] = 0xffffffff;\n            apuStack1280[uVar7 + 2] = 0xffffffff;\n            apuStack1280[uVar7 + 3] = 0xffffffff;\n            apuStack1280[uVar7 + 4] = 0xffffffff;\n            apuStack1280[uVar7 + 5] = 0xffffffff;\n            apuStack1280[uVar7 + 6] = 0xffffffff;\n            apuStack1280[uVar7 + 7] = 0xffffffff;\n            uVar7 = uVar7 + 8;\n        } while (uVar7 < 0x40);\n        *(apuStack1280 + *(*param_1 + 1)) = 0;\n        param_1[5] = NULL;\n    }\n    else {\n        puVar11 = *(puVar8 + 2);\n        uVar7 = (**param_2)(param_2, puVar8[1]);\n        uVar10 = *(puVar11 + 1);\n        if (uVar7 < uVar10) {\n            (*param_2[1])(param_2, 0, uVar10);\n            param_1[2] = puVar11;\n            uVar3 = *puVar11;\n            fcn.00411820(param_1);\n            return uVar3;\n        }\n        param_1[5] = NULL;\n        iVar12 = **param_1 - 1;\n        do {\n            puVar8 = puVar11 + 3;\n            uVar10 = uVar10 + *(puVar11 + 7);\n            if (uVar7 < uVar10) {\n                (*param_2[1])(param_2, uVar10 - *(puVar11 + 7), *(puVar11 + 7));\n                param_1[2] = puVar8;\n                uVar3 = *puVar8;\n                fcn.004117a0(param_1);\n                return uVar3;\n            }\n            iVar12 = iVar12 + -1;\n            puVar11 = puVar8;\n        } while (iVar12 != 0);\n        if ((*param_1)[1] <= uVar7) {\n            return 0xfffffffe;\n        }\n        param_1[7] = *(*param_1[2] + 0x388 + param_1);\n        (*param_2[1])(param_2, uVar10, (*param_1)[1] - uVar10);\n        uVar7 = 0;\n        do {\n            apuStack1280[uVar7] = 0xffffffff;\n            apuStack1280[uVar7 + 1] = 0xffffffff;\n            apuStack1280[uVar7 + 2] = 0xffffffff;\n            apuStack1280[uVar7 + 3] = 0xffffffff;\n            apuStack1280[uVar7 + 4] = 0xffffffff;\n            apuStack1280[uVar7 + 5] = 0xffffffff;\n            apuStack1280[uVar7 + 6] = 0xffffffff;\n            apuStack1280[uVar7 + 7] = 0xffffffff;\n            uVar7 = uVar7 + 8;\n        } while (uVar7 < 0x40);\n        puVar11 = *param_1;\n        *(apuStack1280 + *puVar8) = 0;\n        iVar12 = *puVar11 - 1;\n        do {\n            puVar11 = puVar8 + -3;\n            puVar8 = puVar8 + -3;\n            iVar12 = iVar12 + -1;\n            *(apuStack1280 + *puVar11) = 0;\n        } while (iVar12 != 0);\n    }\n    while( true ) {\n        uVar7 = **param_1;\n        do {\n            param_1[3] = param_1[3] + 1;\n            puVar8 = *(*param_1 + 4);\n            if (puVar8 == NULL) {\n                return 0xffffffff;\n            }\n            *param_1 = puVar8;\n        } while (*puVar8 == uVar7);\n        uVar6 = *puVar8;\n        puVar8 = *(puVar8 + 2);\n        uVar10 = 0;\n        iVar12 = 0;\n        do {\n            cVar4 = *(apuStack1280 + *puVar8);\n            uVar3 = *(puVar8 + 1);\n            apuStack1024[iVar12] = puVar8;\n            iVar12 = iVar12 - cVar4;\n            uVar10 = uVar10 + (uVar3 & cVar4);\n            puVar8 = puVar8 + 3;\n        } while (iVar12 != uVar6 - uVar7);\n        piVar9 = fcn.004116f0(param_1, uVar7, &uStack1284);\n        uVar14 = uStack1284 + uVar10;\n        uStack1284 = uVar14;\n        uVar7 = (**param_2)(param_2, uVar14);\n        if (uVar7 < uVar10) break;\n        if (uVar14 <= uVar7) {\n            return 0xfffffffe;\n        }\n        (*param_2[1])(param_2, uVar10, uVar14 - uVar10);\n        *piVar9 = *piVar9 + uVar14;\n        do {\n            iVar5 = iVar12 + 0x3f;\n            iVar12 = iVar12 + -1;\n            *(apuStack1280 + *apuStack1280[iVar5]) = 0;\n        } while (iVar12 != 0);\n    }\n    ppuVar13 = apuStack1024;\n    for (uVar10 = *(apuStack1024[0] + 1); uVar10 <= uVar7; uVar10 = uVar10 + *(*ppuVar1 + 1)) {\n        ppuVar1 = ppuVar13 + 1;\n        ppuVar13 = ppuVar13 + 1;\n    }\n    puVar8 = *ppuVar13;\n    (*param_2[1])(param_2, uVar10 - *(puVar8 + 1), *(puVar8 + 1));\n    uVar3 = *(piVar9 + 1);\n    if (uVar3 < 7) {\n        pcVar2 = piVar9 + 3;\n        *pcVar2 = *pcVar2 + -1;\n        if (*pcVar2 == '\\0') {\n            *piVar9 = *piVar9 << 1;\n            *(piVar9 + 1) = uVar3 + 1;\n            *(piVar9 + 3) = '\\x03' << (uVar3 & 0x1f);\n        }\n    }\n    param_1[2] = puVar8;\n    uVar3 = *puVar8;\n    (*param_1)[1] = (*param_1)[1] + 4;\n    *(param_1[2] + 1) = *(param_1[2] + 1) + '\\x04';\n    if (0x7c < *(param_1[2] + 1)) {\n        fcn.00411540();\n    }\n    param_1[8] = param_1[9];\n    fcn.004111c0();\n    return uVar3;\n}\n",
        "token_count": 2212
    },
    "00411f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00411f80(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *(param_1 + 0x4b20);\n    if (iVar3 == 0) {\n        *(param_1 + 0x2c) = *(param_1 + 0x34);\n        *(param_1 + 0x30) = *(param_1 + 0x34);\n        *(param_1 + 0x40) = 0;\n        *(param_1 + 0x44) = 0;\n        *(param_1 + 0x48) = 0;\n        *(param_1 + 0x4c) = 0;\n        iVar3 = fcn.004118e0(param_1 + 0x10);\n        if (iVar3 == 0) {\n            *(param_1 + 0x4b20) = 3;\n            return 1;\n        }\n        *(param_1 + 0x4b20) = 1;\n        fcn.00410ff0(param_1 + 0x50, *(param_1 + 0x4b1c));\n    }\n    else {\n        if (iVar3 == 2) {\n            return 0;\n        }\n        if (iVar3 == 3) {\n            return 1;\n        }\n    }\n    if (((*(param_1 + 0x4b1d) != '\\0') &&\n        (uVar4 = *(param_1 + 0x4b28) - *(param_1 + 0x4b30), \n        *(param_1 + 0x4b2c) - *(param_1 + 0x4b34) == *(param_1 + 0x4b28) < *(param_1 + 0x4b30))) && (uVar4 < param_3)) {\n        param_3 = uVar4;\n    }\n    iVar3 = 0;\n    uVar4 = 0;\n    if (param_3 != 0) {\n        do {\n            iVar3 = fcn.00411a30(param_1 + 0x50, param_1 + 0x10);\n            if ((*(param_1 + 0x48) != '\\0') || (iVar3 < 0)) break;\n            *(uVar4 + param_2) = iVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 != param_3);\n    }\n    puVar1 = param_1 + 0x4b30;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    *(param_1 + 0x4b34) = *(param_1 + 0x4b34) + CARRY4(uVar2, uVar4);\n    if (*(param_1 + 0x48) == '\\0') {\n        if (iVar3 < 0) {\n            *(param_1 + 0x4b20) = (iVar3 < -1) + 2;\n        }\n        return 0;\n    }\n    *(param_1 + 0x4b20) = 3;\n    return *(param_1 + 0x4c);\n}\n",
        "token_count": 765
    },
    "0041289c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041289c(code *arg_8h, code *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    if (*0x420db8 != 0) {\n        do {\n            ppcVar1 = *(uVar4 * 4 + 0x420cb8);\n            if ((ppcVar1[2] == arg_8h) && (ppcVar1[3] == arg_ch)) {\n                if (arg_1ch == '\\0') {\n                    if (*ppcVar1 != NULL) {\n                        uVar2 = (**ppcVar1)();\n                        goto code_r0x004128e5;\n                    }\n                }\n                else if (ppcVar1[1] != NULL) {\n                    uVar2 = (*ppcVar1[1])();\ncode_r0x004128e5:\n                    if (*(ppcVar1 + 6) == '\\0') {\n                        if (ppcVar1[5] == 0x1) {\n                            fcn.004136a9(uVar2);\n                        }\n                        else {\n                            fcn.004136a9(uVar2);\n                        }\n                    }\n                    else {\n                        fcn.00410310();\n                    }\n                    break;\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *0x420db8);\n    }\n    if ((arg_20h != '\\0') && (*arg_10h != 0)) {\n        iVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x60);\n        if (iVar3 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00413200();\n        }\n        fcn.004136a9(uVar2);\n        fcn.00410310(*arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 478
    },
    "004129ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004129ea(char param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != '\\0') {\n        return 0;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (uVar1 == 0) {\n        return 0x80004005;\n    }\n    if (0 < uVar1) {\n        uVar1 = uVar1 & 0xffff | 0x80070000;\n    }\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "00412b45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412b45(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (((*(param_1 + 0x3c) != '\\0') &&\n        (uVar3 = *(param_1 + 0x40) - *(param_1 + 0x48), \n        *(param_1 + 0x44) - *(param_1 + 0x4c) == *(param_1 + 0x40) < *(param_1 + 0x48))) && (uVar3 < param_3)) {\n        param_3 = uVar3;\n    }\n    iVar2 = fcn.00413b29(param_2, *(param_1 + 0x24), param_3);\n    if (iVar2 == 0) {\n        puVar1 = param_1 + 0x48;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + param_3;\n        *(param_1 + 0x4c) = *(param_1 + 0x4c) + CARRY4(uVar3, param_3);\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00412c7e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412c7e(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.004013af(arg_ch, 0x41c414);\n    if ((iVar1 == 0) && (iVar1 = fcn.004013af(arg_ch, 0x41a3e0),  iVar1 == 0)) {\n        iVar1 = fcn.004013af(arg_ch, 0x41a420);\n        if (iVar1 == 0) {\n            iVar1 = fcn.004013af(arg_ch, 0x41a370);\n            if (iVar1 == 0) {\n                iVar1 = fcn.004013af(arg_ch, 0x41a430);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.004013af(arg_ch, 0x41a380);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.004013af(arg_ch, 0x41a3c0);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.004013af(arg_ch, 0x41a460);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.004013af(arg_ch, 0x41a3f0);\n                                if (iVar1 == 0) {\n                                    return -0x7fffbffe;\n                                }\n                                if ((arg_8h[0x15] == 0) &&\n                                   (iVar1 = (***arg_8h[0x16])(arg_8h[0x16], 0x41a3f0, arg_8h + 0x15),  iVar1 != 0)) {\n                                    return iVar1;\n                                }\n                                piVar2 = arg_8h + 7;\n                            }\n                            else {\n                                if ((arg_8h[0x14] == 0) &&\n                                   (iVar1 = (***arg_8h[0x16])(arg_8h[0x16], 0x41a460, arg_8h + 0x14),  iVar1 != 0)) {\n                                    return iVar1;\n                                }\n                                piVar2 = arg_8h + 6;\n                            }\n                            *arg_10h = piVar2;\n                            (**(*arg_8h + 4))(arg_8h);\n                            return 0;\n                        }\n                        piVar2 = arg_8h + 5;\n                    }\n                    else {\n                        piVar2 = arg_8h + 4;\n                    }\n                }\n                else {\n                    piVar2 = arg_8h + 3;\n                }\n            }\n            else {\n                piVar2 = arg_8h + 2;\n            }\n        }\n        else {\n            piVar2 = arg_8h + 1;\n        }\n        *arg_10h = -(arg_8h != NULL) & piVar2;\n    }\n    else {\n        *arg_10h = arg_8h;\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    return 0;\n}\n",
        "token_count": 711
    },
    "00412dbf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412dbf(int32_t arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    iVar4 = arg_8h;\n    iVar1 = fcn.00412b90();\n    if (iVar1 == 0) {\n        iVar1 = 0;\n        *(iVar4 + 0x3c) = arg_18h != NULL;\n        if (arg_18h != NULL) {\n            *(iVar4 + 0x40) = *arg_18h;\n            *(iVar4 + 0x44) = arg_18h[1];\n        }\n        while ((*(iVar4 + 0x3c) == '\\0' ||\n               ((uVar3 = *(iVar4 + 0x4c),  bVar6 = uVar3 < *(iVar4 + 0x44),  bVar6 || uVar3 == *(iVar4 + 0x44) &&\n                ((bVar6 || (*(iVar4 + 0x48) < *(iVar4 + 0x40)))))))) {\n            arg_8h = 0x20000 - iVar1;\n            iVar2 = fcn.00413ab5(arg_ch, *(iVar4 + 0x24) + iVar1, &arg_8h);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            uVar5 = iVar1 + arg_8h;\n            uVar3 = (**(**(iVar4 + 0x58) + 0x10))(*(iVar4 + 0x58), *(iVar4 + 0x24), uVar5);\n            if (uVar5 < uVar3) {\n                do {\n                    *(uVar5 + *(iVar4 + 0x24)) = 0;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < uVar3);\n                uVar3 = (**(**(iVar4 + 0x58) + 0x10))(*(iVar4 + 0x58), *(iVar4 + 0x24), uVar5);\n            }\n            if (uVar3 == 0) {\n                if (uVar5 != 0) {\n                    iVar4 = fcn.00412b45(arg_10h, uVar5);\n                    return iVar4;\n                }\n                break;\n            }\n            iVar1 = fcn.00412b45(arg_10h, uVar3);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            if ((arg_1ch != NULL) && (iVar1 = (**(*arg_1ch + 0xc))(arg_1ch, iVar4 + 0x48, iVar4 + 0x48),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = 0;\n            for (; uVar3 < uVar5; uVar3 = uVar3 + 1) {\n                *(*(iVar4 + 0x24) + iVar1) = *(*(iVar4 + 0x24) + uVar3);\n                iVar1 = iVar1 + 1;\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 770
    },
    "00412efc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412efc(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    if (arg_10h != 0) {\n        do {\n            uVar3 = 0x20000 - *(arg_8h + 0x20);\n            if (arg_10h < uVar3) {\n                uVar3 = arg_10h;\n            }\n            sub.MSVCRT.dll_memcpy(*(arg_8h + 0x14) + *(arg_8h + 0x20), arg_ch, uVar3);\n            arg_10h = arg_10h - uVar3;\n            if (arg_14h != NULL) {\n                *arg_14h = *arg_14h + uVar3;\n            }\n            arg_ch = arg_ch + uVar3;\n            uVar3 = *(arg_8h + 0x20) + uVar3;\n            uVar1 = (**(**(arg_8h + 0x48) + 0x10))(*(arg_8h + 0x48), *(arg_8h + 0x14), uVar3);\n            *(arg_8h + 0x20) = uVar1;\n            if (uVar1 == 0) {\n                *(arg_8h + 0x20) = uVar3;\n                return 0;\n            }\n            if (uVar3 < uVar1) {\n                if (arg_10h == 0) {\n                    return 0;\n                }\n                return -0x7fffbffb;\n            }\n            iVar2 = fcn.00412b45(*(arg_8h + 0x1c), uVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = 0;\n            while (*(arg_8h + 0x20) < uVar3) {\n                *(*(arg_8h + 0x14) + iVar2) = *(*(arg_8h + 0x14) + *(arg_8h + 0x20));\n                iVar2 = iVar2 + 1;\n                *(arg_8h + 0x20) = *(arg_8h + 0x20) + 1;\n            }\n            *(arg_8h + 0x20) = iVar2;\n        } while (arg_10h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 602
    },
    "0041336a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0041336a(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 1;\n    if (param_2 == 0) {\n        param_2 = 1;\n    }\n    if ((*(param_1 + 8) == 0) || (*(param_1 + 0x18) != param_2)) {\n        fcn.00413318();\n        *(param_1 + 0x18) = param_2;\n        uVar1 = fcn.00402a64(param_2);\n        *(param_1 + 8) = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 183
    },
    "004133ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004133ae(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if (*(param_1 + 7) == '\\0') {\n        uVar2 = *param_1 - param_1[2];\n        puVar1 = param_1 + 4;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + uVar2;\n        param_1[5] = param_1[5] + (uVar2 >> 0x1f) + CARRY4(uVar3, uVar2);\n        var_8h = param_1;\n        var_4h = param_1;\n        var_4h = (**(*param_1[3] + 0xc))(param_1[3], param_1[2], param_1[6], &var_8h);\n        if (var_4h != NULL) {\n            sub.MSVCRT.dll__CxxThrowException(&var_4h, 0x41c694);\n        }\n        *param_1 = param_1[2];\n        uVar3 = param_1[2] + var_8h;\n        param_1[1] = uVar3;\n        *(param_1 + 7) = var_8h == NULL;\n        uVar3 = uVar3 & 0xffffff00 | var_8h != NULL;\n    }\n    else {\n        uVar3 = in_EAX & 0xffffff00;\n    }\n    return uVar3;\n}\n",
        "token_count": 389
    },
    "0041358f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0041358f(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 1;\n    if (param_2 == 0) {\n        param_2 = 1;\n    }\n    if ((*param_1 == 0) || (param_1[4] != param_2)) {\n        fcn.0041353e();\n        param_1[4] = param_2;\n        uVar1 = fcn.00402a64(param_2);\n        *param_1 = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "00413707": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413707(int32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(arg_8h + 0x20);\n    var_4h = *(arg_8h + 0x24);\n    var_10h = *(arg_8h + 0x28);\n    var_ch = *(arg_8h + 0x2c);\n    if (arg_ch != NULL) {\n        bVar5 = CARRY4(var_8h, *arg_ch);\n        var_8h = var_8h + *arg_ch;\n        var_4h = var_4h + arg_ch[1] + bVar5;\n    }\n    if (arg_10h != NULL) {\n        bVar5 = CARRY4(var_10h, *arg_10h);\n        var_10h = var_10h + *arg_10h;\n        var_ch = var_ch + arg_10h[1] + bVar5;\n    }\n    if (((*(arg_8h + 0x30) != '\\0') && (piVar1 = *(arg_8h + 0xc),  piVar1 != NULL)) &&\n       (iVar3 = (**(*piVar1 + 0xc))(piVar1, &var_8h, &var_10h),  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar2 = *(arg_8h + 0x18);\n    bVar5 = CARRY4(var_8h, uVar2);\n    var_8h = var_8h + uVar2;\n    var_4h = var_4h + *(arg_8h + 0x1c) + bVar5;\n    bVar5 = CARRY4(var_10h, uVar2);\n    var_10h = var_10h + uVar2;\n    var_ch = var_ch + *(arg_8h + 0x1c) + bVar5;\n    if (*(arg_8h + 0x31) == '\\0') {\n        iVar3 = 0;\n    }\n    else {\n        puVar4 = &var_8h;\n        if (*(arg_8h + 0x10) == '\\0') {\n            puVar4 = &var_10h;\n        }\n        iVar3 = (**(**(arg_8h + 8) + 0x10))(*(arg_8h + 8), puVar4);\n    }\n    return iVar3;\n}\n",
        "token_count": 642
    },
    "00413a66": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413a66(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg_8h + 0xc) - *(arg_8h + 0x10);\n    if (arg_10h < uVar2) {\n        uVar2 = arg_10h;\n    }\n    sub.MSVCRT.dll_memcpy(*(arg_8h + 8) + *(arg_8h + 0x10), arg_ch, uVar2);\n    *(arg_8h + 0x10) = *(arg_8h + 0x10) + uVar2;\n    if (arg_14h != NULL) {\n        *arg_14h = uVar2;\n    }\n    if ((uVar2 == 0) && (arg_10h != 0)) {\n        uVar1 = 0x80004005;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 252
    },
    "00413baa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413baa(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 4;\n    if (((*piVar1 != 0) || (iVar3 = fcn.004075ed(piVar1),  iVar3 == 0)) &&\n       ((piVar2 = param_1 + 8,  *piVar2 != 0 || (iVar3 = fcn.004075ed(piVar2),  iVar3 == 0)))) {\n        fcn.004075b3(piVar1);\n        fcn.004075b3(piVar2);\n        *(param_1 + 0x10) = 0;\n        if (*(param_1 + 0xc) == 0) {\n            iVar3 = fcn.00407550(param_1 + 0xc, 0x413b76, param_1);\n        }\n        else {\n            iVar3 = 0;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 243
    },
    "00413c15": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413c15(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x10) = 1;\n    if (*(param_1 + 4) != 0) {\n        fcn.0040759f(param_1 + 4);\n    }\n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 != 0) {\n        fcn.00407543(iVar1);\n        fcn.00407519(param_1 + 0xc);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00413cbe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413cbe(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint32_t unaff_EDI;\n    \n    *arg_ch = 0;\n    if (*(in_ECX + 8) != 0) {\n        do {\n            uVar1 = *(*(in_ECX + 0xc) + 4 + *arg_ch * 8);\n            unaff_EDI = arg_8h;\n            if (arg_8h < uVar1) goto code_r0x00413cfe;\n            unaff_EDI = arg_8h - uVar1;\n            uVar1 = *arg_ch + 1;\n            *arg_ch = uVar1;\n            arg_8h = unaff_EDI;\n        } while (uVar1 < *(in_ECX + 8));\n    }\n    arg_ch = 0x1;\n    sub.MSVCRT.dll__CxxThrowException(&arg_ch, 0x41c660);\ncode_r0x00413cfe:\n    *arg_10h = unaff_EDI;\n    return;\n}\n",
        "token_count": 269
    },
    "00414476": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.00414476(int32_t *param_1, uint32_t param_2, int32_t *param_3, int32_t param_4, int32_t param_5, \n                      uint param_6, uint param_7, int32_t *param_8, uchar *param_9)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    char *pcVar12;\n    bool bVar13;\n    int32_t **ppiVar14;\n    uchar auStack280 [72];\n    uint *puStack208;\n    uint uStack180;\n    uchar auStack176 [24];\n    int32_t iStack152;\n    int32_t iStack148;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t *piStack32;\n    int32_t iStack28;\n    char *pcStack24;\n    int32_t *piStack20;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    int32_t *piStack8;\n    \n    iVar7 = param_5;\n    cVar5 = fcn.0041663f();\n    if (cVar5 == '\\0') {\n        return 0x80004001;\n    }\n    *param_9 = 0;\n    uStack72 = 0;\n    iStack68 = 0;\n    iStack64 = 0;\n    uStack60 = 4;\n    uStack76 = 0x41c32c;\n    uStack180 = 0;\n    fcn.004075fb(auStack176);\n    fcn.004136a9(param_1);\n    param_1 = NULL;\n    if (0 < *(iVar7 + 0x30)) {\n        do {\n            puVar6 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x18);\n            if (puVar6 == NULL) {\n                puVar6 = NULL;\n            }\n            else {\n                puVar6[1] = 0;\n                *puVar6 = 0x41c2f0;\n            }\n            fcn.0041333e(puVar6);\n            puVar6[2] = &uStack180;\n            puVar6[4] = param_2;\n            puVar6[5] = param_3;\n            puVar1 = param_4 + param_1 * 8;\n            bVar13 = CARRY4(param_2, *puVar1);\n            param_2 = param_2 + *puVar1;\n            param_3 = param_3 + bVar13 + puVar1[1];\n            puVar6 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x28);\n            if (puVar6 == NULL) {\n                puVar6 = NULL;\n            }\n            else {\n                puVar6[1] = 0;\n                *puVar6 = 0x41c30c;\n                puVar6[2] = 0;\n            }\n            fcn.0041333e(puVar6);\n            fcn.00410310(piStack8);\n            puVar6[4] = *puVar1;\n            puVar6[5] = puVar1[1];\n            ppiVar14 = &piStack20;\n            puVar6[6] = 0;\n            puVar6[7] = 0;\n            *(puVar6 + 8) = 0;\n            fcn.00413f9d();\n            if (piStack20 != NULL) {\n                (**(*piStack20 + 8))(piStack20);\n            }\n            if (piStack8 != NULL) {\n                (**(*piStack8 + 8))(piStack8, ppiVar14);\n            }\n            param_1 = param_1 + 1;\n        } while (param_1 < *(param_5 + 0x30));\n    }\n    iStack28 = *(param_5 + 8);\n    fcn.0041421a();\n    fcn.00414155(auStack280);\n    if ((*pcStack24 == '\\0') || (cVar5 = fcn.00413d2c(),  cVar5 == '\\0')) {\n        pcVar12 = pcStack24;\n        fcn.004127d6();\n        fcn.00413c8f();\n        if (pcVar12[0x68] != '\\0') {\n            iVar7 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x88);\n            if (iVar7 == 0) {\n                uVar8 = 0;\n            }\n            else {\n                uVar8 = fcn.0041423f();\n            }\n            *(pcVar12 + 0x6c) = uVar8;\n            fcn.004136a9(uVar8);\n            if (*(pcVar12 + 0x6c) == 0) {\n                iVar7 = 0;\n            }\n            else {\n                iVar7 = *(pcVar12 + 0x6c) + 4;\n            }\n            *(pcVar12 + 0x70) = iVar7;\n        }\n        piVar9 = (****(pcVar12 + 0x70))(auStack280);\n        if (piVar9 != NULL) goto code_r0x00414654;\n        piStack12 = NULL;\n        if (0 < iStack28) {\n            do {\n                puVar6 = *(*(param_5 + 0xc) + piStack12 * 4);\n                param_1 = NULL;\n                param_3 = NULL;\n                piStack20 = fcn.00412948(*puVar6, puVar6[1], &param_1, &param_3, 0);\n                if (piStack20 != NULL) {\n                    if (param_3 != NULL) {\n                        (**(*param_3 + 8))(param_3);\n                    }\n                    piVar9 = piStack20;\n                    if (param_1 != NULL) {\n                        (**(*param_1 + 8))(param_1);\n                        piVar9 = piStack20;\n                    }\n                    goto code_r0x00414654;\n                }\n                piStack16 = NULL;\n                if ((puVar6[5] == 1) && (puVar6[6] == 1)) {\n                    if (param_1 == NULL) {\n                        if (param_3 != NULL) {\n                            (**(*param_3 + 8))(param_3);\n                            goto code_r0x0041495d;\n                        }\ncode_r0x0041496a:\n                        piVar9 = 0x80004001;\n                        goto code_r0x00414654;\n                    }\n                    fcn.004136a9(param_1);\n                    if (pcVar12[0x68] != '\\0') {\n                        fcn.00418dac(param_1);\n                    }\n                }\n                else {\n                    if (param_3 == NULL) {\ncode_r0x0041495d:\n                        if (param_1 != NULL) {\n                            (**(*param_1 + 8))(param_1);\n                        }\n                        goto code_r0x0041496a;\n                    }\n                    fcn.004136a9(param_3);\n                    if (pcVar12[0x68] != '\\0') {\n                        fcn.00418dd1(param_3);\n                    }\n                }\n                fcn.00413f9d(&piStack16);\n                if (piStack16 != NULL) {\n                    (**(*piStack16 + 8))(piStack16);\n                }\n                if (param_3 != NULL) {\n                    (**(*param_3 + 8))(param_3);\n                }\n                if (param_1 != NULL) {\n                    (**(*param_1 + 8))(param_1);\n                }\n                piStack12 = piStack12 + 1;\n            } while (piStack12 < iStack28);\n        }\n        fcn.004143fe(auStack280);\n        *pcVar12 = '\\x01';\n    }\n    pcVar12 = pcStack24;\n    (**(**(pcStack24 + 0x70) + 4))();\n    iStack36 = 0;\n    iStack44 = 0;\n    piStack20 = NULL;\n    if (0 < iStack28) {\n        iStack40 = 0;\n        do {\n            iVar7 = *(*(param_5 + 0xc) + piStack20 * 4);\n            puVar3 = *(iStack40 + *(pcStack24 + 0x84));\n            puVar6 = *puVar3;\n            piStack32 = NULL;\n            (***puVar6)(puVar6, 0x41a3f0, &piStack32);\n            if (piStack32 != NULL) {\n                piStack8 = *(iVar7 + 0xc);\n                piVar9 = (**(*piStack32 + 0xc))(piStack32, *(iVar7 + 0x10), piStack8);\n                piStack8 = piVar9;\n                if (piVar9 != NULL) {\n                    if (piStack32 != NULL) {\n                        (**(*piStack32 + 8))(piStack32);\n                        piVar9 = piStack8;\n                    }\n                    goto code_r0x00414654;\n                }\n                if (piStack32 != NULL) {\n                    (**(*piStack32 + 8))(piStack32);\n                }\n            }\n            puVar3 = *puVar3;\n            piStack12 = NULL;\n            (***puVar3)(puVar3, 0x41a460, &piStack12);\n            if (piStack12 != NULL) {\n                if (param_8 == NULL) {\n                    (**(*piStack12 + 8))(piStack12);\ncode_r0x00414aae:\n                    piVar9 = 0x80004005;\n                }\n                else {\n                    piStack16 = NULL;\n                    piVar9 = (**(*param_8 + 0xc))(param_8, &piStack16);\n                    if (piVar9 == NULL) {\n                        uStack56 = 0x41be90;\n                        uStack52 = 0;\n                        puStack48 = NULL;\n                        *param_9 = 1;\n                        fcn.00402a9c(piStack16);\n                        iVar11 = iStack148;\n                        piStack8 = iStack148 * 2;\n                        fcn.0040b2a0(piStack8);\n                        if (0 < iVar11) {\n                            puVar10 = puStack48;\n                            do {\n                                uVar2 = *(puVar10 + (iStack152 - puStack48));\n                                *puVar10 = uVar2;\n                                puVar10[1] = uVar2 >> 8;\n                                puVar10 = puVar10 + 2;\n                                iVar11 = iVar11 + -1;\n                            } while (iVar11 != 0);\n                        }\n                        piVar9 = (**(*piStack12 + 0xc))(piStack12, puStack48, piStack8);\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack152);\n                        if (piVar9 == NULL) {\n                            uStack56 = 0x41be90;\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack48);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(piStack16);\n                            if (piStack12 != NULL) {\n                                (**(*piStack12 + 8))(piStack12);\n                            }\n                            goto code_r0x004148c7;\n                        }\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack48);\n                    }\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(piStack16);\n                    if (piStack12 != NULL) {\n                        (**(*piStack12 + 8))(piStack12);\n                    }\n                }\n                goto code_r0x00414654;\n            }\ncode_r0x004148c7:\n            piVar9 = *(iVar7 + 0x14);\n            iVar11 = *(iVar7 + 0x18);\n            iStack40 = iStack40 + 4;\n            uStack80 = 4;\n            uStack100 = 4;\n            uStack92 = 0;\n            uStack88 = 0;\n            uStack84 = 0;\n            uStack96 = 0x41c3e4;\n            uStack112 = 0;\n            uStack108 = 0;\n            uStack104 = 0;\n            uStack116 = 0x41c3e4;\n            fcn.0041270d(piVar9);\n            iVar7 = iVar11;\n            fcn.0041270d(iVar11);\n            iVar4 = param_5;\n            for (piStack8 = iVar11; piStack8 != NULL; piStack8 = piStack8 + -1) {\n                iVar7 = *(iVar4 + 0x48) + iStack44 * 8;\n                fcn.004027b7();\n                iStack44 = iStack44 + 1;\n            }\n            piStack8 = NULL;\n            if (piVar9 != NULL) {\n                do {\n                    iVar7 = fcn.00413f0b();\n                    if (iVar7 < 0) {\n                        iVar11 = fcn.00413f56(iStack36);\n                        iVar7 = param_4;\n                        if (iVar11 < 0) {\n                            fcn.00412875();\n                            fcn.00412875();\n                            goto code_r0x00414aae;\n                        }\n                    }\n                    else {\n                        iVar11 = *(*(iVar4 + 0x20) + 4 + iVar7 * 8);\n                        iVar7 = *(iVar4 + 0x48);\n                    }\n                    iVar7 = iVar7 + iVar11 * 8;\n                    fcn.004027b7(iVar7);\n                    piStack8 = piStack8 + 1;\n                    iStack36 = iStack36 + 1;\n                } while (piStack8 < piVar9);\n            }\n            piVar9 = piStack20;\n            (**(**(pcStack24 + 0x70) + 8))(piStack20, uStack84, uStack104, iVar7);\n            fcn.00412875();\n            fcn.00412875();\n            piStack20 = piVar9 + 1;\n            pcVar12 = pcStack24;\n        } while (piStack20 < iStack28);\n    }\n    fcn.00413cbe(*puStack208, &param_5, &param_9);\n    if (pcVar12[0x68] != '\\0') {\n        *(*(pcVar12 + 0x6c) + 0x70) = param_5;\n    }\n    piVar9 = NULL;\n    if (iStack28 != 0) {\n        uStack136 = 0;\n        uStack132 = 0;\n        uStack128 = 0;\n        uStack124 = 4;\n        uStack140 = 0x41c3e4;\n        iVar7 = iStack68;\n        fcn.0041270d(iStack68);\n        iVar11 = 0;\n        if (0 < iStack68) {\n            do {\n                iVar7 = **(iStack64 + iVar11 * 4);\n                fcn.004027b7();\n                iVar11 = iVar11 + 1;\n            } while (iVar11 < iStack68);\n        }\n        uStack120 = param_6;\n        piVar9 = (**(**(pcVar12 + 0x74) + 0xc))\n                           (*(pcVar12 + 0x74), uStack128, 0, iStack68, &uStack120, 0, 1, param_7, iVar7);\n        fcn.00412875();\n    }\ncode_r0x00414654:\n    fcn.00412875();\n    fcn.00413d09();\n    fcn.00413e70();\n    fcn.00413edf();\n    return piVar9;\n}\n",
        "token_count": 3725
    },
    "00415309": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00415309(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((param_2 < *(param_1 + 0x120)) && (*(param_2 + *(param_1 + 0x124)) != '\\0')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "00415431": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415431(int32_t param_1)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (*(*(param_1 + 0x28) + *(*(param_1 + 0x18) + 0xc)) == '\\0') {\n        var_4h = 2;\n    }\n    else {\n        var_4h = *(param_1 + 0x2c) != '\\0';\n    }\n    iVar5 = *(param_1 + 0x24) + *(param_1 + 0x28);\n    var_8h = NULL;\n    iVar4 = (**(**(param_1 + 0x1c) + 0x14))(*(param_1 + 0x1c), *(param_1 + 0x20) + iVar5, &var_8h, var_4h);\n    if (iVar4 == 0) {\n        fcn.004136a9(var_8h);\n        uVar1 = *(param_1 + 0x2d);\n        iVar4 = *(param_1 + 0xc);\n        *(iVar4 + 0x18) = 0xffffffff;\n        *(iVar4 + 0x10) = 0;\n        *(iVar4 + 0x14) = 0;\n        *(iVar4 + 0x1c) = uVar1;\n        *(param_1 + 0x2e) = 1;\n        puVar2 = *(*(*(param_1 + 0x14) + 0x70) + iVar5 * 4);\n        *(param_1 + 0x30) = *puVar2;\n        *(param_1 + 0x34) = puVar2[1];\n        if ((((var_4h == 0) && (var_8h == NULL)) && (cVar3 = fcn.00415309(iVar5),  cVar3 == '\\0')) &&\n           (*(puVar2 + 0x1d) == '\\0')) {\n            var_4h = 2;\n        }\n        iVar4 = (**(**(param_1 + 0x1c) + 0x18))(*(param_1 + 0x1c), var_4h);\n        if (var_8h != NULL) {\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    else if (var_8h != NULL) {\n        (**(*var_8h + 8))(var_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 612
    },
    "00415591": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415591(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    piVar3 = arg_14h;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    if (arg_10h != NULL) {\n        do {\n            if (*(arg_8h + 0x2e) == '\\0') {\n                iVar4 = fcn.00415552();\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n                if (*(arg_8h + 0x28) == *(*(arg_8h + 0x18) + 8)) {\n                    if (piVar3 == NULL) {\n                        return 0;\n                    }\n                    *piVar3 = *piVar3 + arg_10h;\n                    return 0;\n                }\n                iVar4 = fcn.00415431();\ncode_r0x0041563c:\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n            }\n            else {\n                arg_14h = arg_10h;\n                if ((*(arg_8h + 0x34) == 0) && (*(arg_8h + 0x30) <= arg_10h)) {\n                    arg_14h = *(arg_8h + 0x30);\n                }\n                iVar4 = (**(**(arg_8h + 0x10) + 0xc))(*(arg_8h + 0x10), arg_ch, arg_14h, &arg_14h);\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n                if (arg_14h == NULL) {\n                    return 0;\n                }\n                arg_ch = arg_ch + arg_14h;\n                arg_10h = arg_10h - arg_14h;\n                ppiVar1 = arg_8h + 0x30;\n                piVar2 = *ppiVar1;\n                *ppiVar1 = *ppiVar1 - arg_14h;\n                *(arg_8h + 0x34) = *(arg_8h + 0x34) - (piVar2 < arg_14h);\n                if (piVar3 != NULL) {\n                    *piVar3 = *piVar3 + arg_14h;\n                }\n                if ((*(arg_8h + 0x30) | *(arg_8h + 0x34)) == 0) {\n                    iVar4 = fcn.00415515();\n                    if (iVar4 != 0) {\n                        return iVar4;\n                    }\n                    iVar4 = fcn.00415552();\n                    goto code_r0x0041563c;\n                }\n            }\n        } while (arg_10h != NULL);\n    }\n    return 0;\n}\n",
        "token_count": 673
    },
    "0041569c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041569c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    do {\n        if (*(*(param_1 + 0x18) + 8) <= *(param_1 + 0x28)) {\n            return 0;\n        }\n        if (*(param_1 + 0x2e) == '\\0') {\n            iVar1 = fcn.00415431();\n        }\n        else {\n            iVar1 = fcn.004152e3(param_2);\n        }\n    } while (iVar1 == 0);\n    return iVar1;\n}\n",
        "token_count": 141
    },
    "0041586d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041586d(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    int32_t var_ch_2;\n    uint32_t uStack12;\n    \n    fcn.00416c04();\n    fcn.0041653e();\n    fcn.004127d6();\n    fcn.0041270d(*(param_1 + 0x44));\n    fcn.004127d6();\n    fcn.0041270d(*(param_1 + 0x6c));\n    iVar3 = 0;\n    uStack12 = 0;\n    var_ch_2 = 0;\n    if (0 < *(param_1 + 0x6c)) {\n        do {\n            uVar2 = *(*(param_1 + 0x70) + var_ch_2 * 4);\n            bVar4 = *(uVar2 + 0x1c) != '\\0';\n            if (bVar4) {\n                if (uStack12 == 0) {\n                    while( true ) {\n                        if (*(param_1 + 0x44) <= iVar3) {\n                            sub.MSVCRT.dll__CxxThrowException(&stack0xffffffd7, 0x41c8e8, iVar3, uVar2 & 0xffffff);\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                        fcn.004027b7();\n                        if (*(*(param_1 + 0x5c) + iVar3 * 4) != 0) break;\n                        iVar3 = iVar3 + 1;\n                        uVar2 = extraout_ECX;\n                    }\n                }\ncode_r0x00416ce0:\n                fcn.004027b7();\n                if ((bVar4) && (uStack12 = uStack12 + 1,  *(*(param_1 + 0x5c) + iVar3 * 4) <= uStack12)) {\n                    iVar3 = iVar3 + 1;\n                    uStack12 = 0;\n                }\n            }\n            else {\n                if (uStack12 != 0) goto code_r0x00416ce0;\n                fcn.004027b7();\n            }\n            var_ch_2 = var_ch_2 + 1;\n        } while (var_ch_2 < *(param_1 + 0x6c));\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "0041663f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041663f(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t in_EAX;\n    char *pcVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint32_t auStack176 [32];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    if ((*(param_1 + 8) < 0x21) && (*(param_1 + 0x1c) < 0x21)) {\n        iVar8 = 0;\n        uStack24 = 0;\n        uStack20 = 0;\n        iStack16 = 0;\n        uStack12 = 1;\n        uStack28 = 0x41c3e4;\n        fcn.0041641a(&uStack28);\n        iVar7 = 0;\n        if (0 < *(param_1 + 0x1c)) {\n            do {\n                uVar3 = *(*(param_1 + 0x20) + iVar7 * 8);\n                if ((uStack20 <= uVar3) ||\n                   (pcVar4 = uVar3 + iStack16,  cVar2 = *pcVar4,  *pcVar4 = '\\x01',  cVar2 != '\\0'))\n                goto code_r0x00416832;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < *(param_1 + 0x1c));\n        }\n        iVar7 = 0;\n        if (0 < *(param_1 + 0x30)) {\n            do {\n                uVar3 = *(*(param_1 + 0x34) + iVar7 * 4);\n                if ((uStack20 <= uVar3) ||\n                   (pcVar4 = uVar3 + iStack16,  cVar2 = *pcVar4,  *pcVar4 = '\\x01',  cVar2 != '\\0'))\n                goto code_r0x00416832;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < *(param_1 + 0x30));\n        }\n        fcn.0041641a(&uStack28);\n        iVar7 = 0;\n        if (0 < *(param_1 + 0x1c)) {\n            do {\n                uVar3 = *(*(param_1 + 0x20) + 4 + iVar7 * 8);\n                if ((uStack20 <= uVar3) ||\n                   (pcVar4 = uVar3 + iStack16,  cVar2 = *pcVar4,  *pcVar4 = '\\x01',  cVar2 != '\\0'))\n                goto code_r0x00416832;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < *(param_1 + 0x1c));\n        }\n        fcn.00412875();\n        iVar7 = *(param_1 + 8);\n        puVar5 = auStack176;\n        for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        uStack44 = 0;\n        uStack40 = 0;\n        iStack36 = 0;\n        uStack32 = 4;\n        uStack48 = 0x41c3e4;\n        uStack24 = 0;\n        uStack20 = 0;\n        iStack16 = 0;\n        uStack12 = 4;\n        uStack28 = 0x41c3e4;\n        if (0 < iVar7) {\n            do {\n                iVar7 = *(*(param_1 + 0xc) + iVar8 * 4);\n                uStack8 = 0;\n                if (*(iVar7 + 0x14) != 0) {\n                    do {\n                        fcn.004027b7(iVar8);\n                        uStack8 = uStack8 + 1;\n                    } while (uStack8 < *(iVar7 + 0x14));\n                }\n                uStack8 = 0;\n                if (*(iVar7 + 0x18) != 0) {\n                    do {\n                        fcn.004027b7(iVar8);\n                        uStack8 = uStack8 + 1;\n                    } while (uStack8 < *(iVar7 + 0x18));\n                }\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < *(param_1 + 8));\n        }\n        if (0 < *(param_1 + 0x1c)) {\n            piVar9 = *(param_1 + 0x20);\n            uStack8 = *(param_1 + 0x1c);\n            do {\n                iVar7 = *piVar9;\n                piVar1 = piVar9 + 1;\n                piVar9 = piVar9 + 2;\n                auStack176[*(iStack36 + iVar7 * 4)] =\n                     auStack176[*(iStack36 + iVar7 * 4)] | 1 << (*(iStack16 + *piVar1 * 4) & 0x1f);\n                uStack8 = uStack8 - 1;\n            } while (uStack8 != 0);\n        }\n        fcn.00412875();\n        fcn.00412875();\n        puVar5 = auStack176;\n        uStack8 = 0x20;\n        do {\n            iVar7 = 0;\n            do {\n                if ((*puVar5 & 1 << (iVar7 & 0x1f)) != 0) {\n                    *puVar5 = auStack176[iVar7] | *puVar5;\n                }\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < 0x20);\n            puVar5 = puVar5 + 1;\n            uStack8 = uStack8 + -1;\n        } while (uStack8 != 0);\n        iVar7 = 0;\n        while (in_EAX = 1 << (iVar7 & 0x1f),  (auStack176[iVar7] & in_EAX) == 0) {\n            iVar7 = iVar7 + 1;\n            if (0x1f < iVar7) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\ncode_r0x0041683a:\n    return in_EAX & 0xffffff00;\ncode_r0x00416832:\n    in_EAX = fcn.00412875();\n    goto code_r0x0041683a;\n}\n",
        "token_count": 1557
    },
    "00416843": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416843(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    ushort *puVar5;\n    uint32_t var_4h;\n    \n    puVar5 = *in_ECX + in_ECX[2];\n    uVar4 = in_ECX[1] - in_ECX[2] & 0xfffffffe;\n    var_4h = 0;\n    if (uVar4 != 0) {\n        do {\n            if ((*(var_4h + puVar5) == '\\0') && (*(var_4h + 1 + puVar5) == '\\0')) break;\n            var_4h = var_4h + 2;\n        } while (var_4h < uVar4);\n    }\n    uVar2 = var_4h;\n    if (var_4h != uVar4) goto code_r0x00416883;\n    do {\n        fcn.00416245();\n        uVar2 = extraout_ECX;\ncode_r0x00416883:\n        uVar4 = uVar2 >> 1;\n    } while ((uVar2 & 0xfffffffe) != uVar2);\n    iVar1 = fcn.00402ad5(uVar4);\n    iVar3 = 0;\n    if (uVar4 != 0) {\n        do {\n            *(iVar1 + iVar3 * 2) = *puVar5;\n            iVar3 = iVar3 + 1;\n            puVar5 = puVar5 + 1;\n        } while (iVar3 < uVar4);\n    }\n    *(*arg_8h + (uVar2 & 0xfffffffe)) = 0;\n    arg_8h[1] = uVar4;\n    in_ECX[2] = in_ECX[2] + var_4h + 2;\n    return;\n}\n",
        "token_count": 453
    },
    "00416e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416e20(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = arg_8h;\n    fcn.004127d6();\n    fcn.0041270d(*(arg_8h + 8));\n    _var_10h = CONCAT44(var_ch, var_10h);\n    while( true ) {\n        while( true ) {\n            iVar5 = fcn.004162e0();\n            _var_10h = iVar5;\n            if (iVar5 != 0xd) break;\n            iVar3 = 0;\n            if (0 < *(arg_8h + 8)) {\n                do {\n                    fcn.00416375();\n                    fcn.004027b7();\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < *(arg_8h + 8));\n            }\n        }\n        if (((iVar5 == 10) || (iVar5 == 9)) || (iVar5 == 0)) break;\n        fcn.00416444();\n    }\n    if ((*(arg_ch + 8) == 0) && (iVar3 = 0,  0 < *(arg_8h + 8))) {\n        do {\n            fcn.004027b7();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(arg_8h + 8));\n    }\n    var_4h = 0;\n    iVar5 = _var_10h;\n    if (0 < *(arg_ch + 8)) {\n        do {\n            uVar1 = *(*(arg_ch + 0xc) + var_4h * 4);\n            iVar3 = var_4h;\n            if (uVar1 != 0) {\n                _var_18h = 0;\n                if (1 < uVar1) {\n                    arg_8h = uVar1 - 1;\n                    _var_18h = 0;\n                    do {\n                        if (iVar5 == 9) {\n                            _var_10h = iVar5;\n                            iVar5 = fcn.004162e0();\n                            fcn.00413c65();\n                            _var_18h = iVar5 + _var_18h;\n                            iVar3 = var_4h;\n                            iVar5 = _var_10h;\n                        }\n                        arg_8h = arg_8h + -1;\n                    } while (arg_8h != 0);\n                }\n                _var_10h = iVar5;\n                iVar5 = fcn.00414ca4();\n                fcn.00413c65(iVar5 - _var_18h);\n                iVar5 = _var_10h;\n            }\n            var_4h = iVar3 + 1;\n        } while (var_4h < *(arg_ch + 8));\n    }\n    if (iVar5 == 9) {\n        _var_10h = iVar5;\n        iVar5 = fcn.004162e0();\n    }\n    iVar3 = 0;\n    var_4h = 0;\n    arg_8h = 0;\n    if (0 < *(iVar2 + 8)) {\n        do {\n            iVar4 = *(*(arg_ch + 0xc) + iVar3 * 4);\n            if ((iVar4 != 1) || (*(*(*(iVar2 + 0xc) + iVar3 * 4) + 0x54) == '\\0')) {\n                var_4h = var_4h + iVar4;\n            }\n            arg_8h = arg_8h + iVar4;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(iVar2 + 8));\n    }\n    do {\n        _var_10h = iVar5;\n        if (iVar5 == 10) {\n            var_3ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_24h = 0;\n            var_20h = 0;\n            var_30h = 1;\n            var_40h = 0x41c3e4;\n            var_1ch = 4;\n            var_2ch = 0x41c3e4;\n            fcn.00416ae2(var_4h, &var_40h, &var_2ch);\n            iVar3 = 0;\n            arg_10h = 0;\n            if (0 < *(iVar2 + 8)) {\n                do {\n                    iVar4 = *(*(arg_ch + 0xc) + iVar3 * 4);\n                    if (iVar4 != 1) goto joined_r0x00417028;\n                    if (*(*(*(iVar2 + 0xc) + iVar3 * 4) + 0x54) == '\\0') {\n                        do {\n                            fcn.00414af0(*(var_34h + arg_10h));\n                            fcn.004027b7();\n                            arg_10h = arg_10h + 1;\n                            iVar4 = iVar4 + -1;\njoined_r0x00417028:\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        fcn.00414af0(1);\n                        fcn.004027b7();\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < *(iVar2 + 8));\n            }\n            fcn.00412875();\n            fcn.00412875();\n        }\n        else {\n            if (iVar5 == 0) {\n                if (*(arg_14h + 8) == 0) {\n                    fcn.0041641a(arg_14h);\n                    fcn.004127d6();\n                    if (0 < arg_8h) {\n                        do {\n                            fcn.004027b7();\n                            arg_8h = arg_8h + -1;\n                        } while (arg_8h != 0);\n                    }\n                }\n                return;\n            }\n            fcn.00416444();\n        }\n        iVar5 = fcn.004162e0();\n    } while( true );\n}\n",
        "token_count": 1525
    },
    "0041712a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041712a(int32_t param_1)\n\n{\n    fcn.004126ec();\n    if (*(param_1 + 0xc) != 0) {\n        *(param_1 + 0x18) = *(*(param_1 + 0x10) + -4 + *(param_1 + 0xc) * 4);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004171a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004171a9(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != '\\0') {\n        fcn.0041712a();\n        *(param_1 + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "004172a2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004172a2(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *arg_8h_00;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    ulong uVar8;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uchar var_35h;\n    uint var_34h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t *var_ch;\n    uchar *var_8h;\n    uint32_t *var_4h;\n    \n    var_14h = fcn.00416375();\n    fcn.004127d6();\n    fcn.0041270d(var_14h);\n    var_4h = NULL;\n    var_18h = 0;\n    var_10h = 0;\n    if (var_14h != 0) {\n        do {\n            var_4ch = 0x41be90;\n            var_48h = 0;\n            var_44h = 0;\n            fcn.0041723f(&var_54h);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n            puVar7 = *(*(arg_8h + 0xc) + -4 + *(arg_8h + 8) * 4);\n            uVar5 = fcn.00416265();\n            uVar2 = uVar5 << 0x18;\n            var_ch = uVar5 & 0xf;\n            fcn.0041627c(&var_34h, var_ch);\n            puVar1 = var_ch;\n            if (8 < var_ch) goto code_r0x0041747e;\n            var_24h = 0;\n            var_20h = 0;\n            if (0 < var_ch) {\n                var_ch = NULL;\n                var_8h = &var_35h + puVar1;\n                var_1ch = puVar1;\n                do {\n                    uVar8 = fcn.004193c0();\n                    var_24h = var_24h | uVar8;\n                    var_20h = var_20h | uVar8 >> 0x20;\n                    var_8h = var_8h + -1;\n                    var_ch = var_ch + 2;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != NULL);\n            }\n            *puVar7 = var_24h;\n            puVar7[1] = var_20h;\n            if ((uVar2 & 0x10000000) == 0) {\n                uVar5 = 1;\n                puVar7[5] = 1;\n            }\n            else {\n                uVar5 = fcn.00416375();\n                puVar7[5] = uVar5;\n                uVar5 = fcn.00416375();\n            }\n            puVar7[6] = uVar5;\n            if ((uVar2 & 0x20000000) != 0) {\n                var_1ch = fcn.00416375();\n                fcn.0040b2a0(var_1ch);\n                fcn.0041627c(puVar7[4], var_1ch);\n            }\n            if ((uVar2 & 0x80000000) != 0) goto code_r0x0041747e;\n            var_4h = var_4h + puVar7[5];\n            var_18h = var_18h + puVar7[6];\n            var_10h = var_10h + 1;\n        } while (var_10h < var_14h);\n    }\n    arg_8h_00 = var_18h + -1;\n    fcn.004127d6();\n    fcn.0041270d(arg_8h_00);\n    puVar3 = arg_8h_00;\n    puVar1 = var_1ch;\n    puVar7 = var_4h;\n    while (var_1ch = puVar3,  var_4h = puVar7,  var_1ch != NULL) {\n        var_24h = fcn.00416375();\n        uVar4 = fcn.00416375();\n        fcn.00413c65(var_24h, uVar4);\n        puVar1 = var_1ch + -1;\n        puVar7 = var_4h;\n        puVar3 = puVar1;\n    }\n    var_1ch = puVar1;\n    if (puVar7 < arg_8h_00) goto code_r0x0041747e;\n    iVar6 = puVar7 - arg_8h_00;\n    fcn.0041270d(iVar6);\n    if (iVar6 == 1) {\n        puVar7 = NULL;\n        if (var_4h != NULL) {\n            do {\n                iVar6 = fcn.00413f0b(puVar7);\n                if (iVar6 < 0) goto code_r0x00417483;\n                puVar7 = puVar7 + 1;\n            } while (puVar7 < var_4h);\n        }\n        while (*(arg_8h + 0x30) != 1) {\ncode_r0x0041747e:\n            fcn.00416245();\ncode_r0x00417483:\n            fcn.004027b7(puVar7);\n        }\n    }\n    else {\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            fcn.00416375();\n            fcn.004027b7();\n        }\n    }\n    return;\n}\n",
        "token_count": 1348
    },
    "0041810e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nint32_t __cdecl fcn.0041810e(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t **in_ECX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int64_t iVar7;\n    uint var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    fcn.00415812();\n    *(arg_8h + 0x138) = in_ECX[8];\n    *(arg_8h + 0x13c) = in_ECX[9];\n    *(arg_8h + 0x130) = *(in_ECX + 0x36);\n    *(arg_8h + 0x131) = *(in_ECX + 0x37);\n    if (*(arg_8h + 0x130) == '\\0') goto code_r0x00418153;\n    do {\n        do {\n            do {\n                do {\n                    do {\n                        fcn.00416245();\ncode_r0x00418153:\n                        piVar3 = in_ECX[0xe];\n                        piVar4 = in_ECX[0x12];\n                        var_ch = in_ECX[0xf];\n                        var_8h = in_ECX[0x10];\n                        var_14h = in_ECX[0x11];\n                        var_4h = in_ECX[0x13];\n                        piVar2 = fcn.00418ef0();\n                    } while (piVar2 != piVar3);\n                    piVar3 = in_ECX[8];\n                    piVar2 = in_ECX[9];\n                    *(arg_8h + 0x140) = piVar3 + 8;\n                    iVar5 = piVar2 + (0xffffffdf < piVar3);\n                    *(arg_8h + 0x144) = iVar5;\n                    if ((var_14h | piVar4) == 0) {\n                        return 0;\n                    }\n                    if ((piVar4 != NULL) || ((var_8h < 1 && (var_8h < 0)))) {\n                        return 1;\n                    }\n                    piVar4 = *(arg_8h + 0x140) + var_ch;\n                    piVar3 = var_8h + CARRY4(*(arg_8h + 0x140), var_ch) + iVar5;\n                    bVar6 = in_ECX[0xb] <= piVar3;\n                    if (bVar6) {\n                        if (bVar6 && piVar3 != in_ECX[0xb]) {\n                            return 1;\n                        }\n                        if (in_ECX[10] <= piVar4 && piVar4 != in_ECX[10]) {\n                            return 1;\n                        }\n                    }\n                    iVar5 = (**(**in_ECX + 0x10))(*in_ECX, var_ch, var_8h, 1, 0);\n                    if (iVar5 != 0) {\n                        return iVar5;\n                    }\n                    var_18h = 0;\n                    var_20h = 0x41be90;\n                    var_1ch = 0x418212;\n                    piVar3 = var_14h;\n                    fcn.0040b2a0();\n                    var_1ch = var_14h;\n                    var_24h = *in_ECX;\n                    var_20h = var_18h;\n                    var_28h = 0x418220;\n                    iVar5 = fcn.00413b00(var_24h, var_18h, var_14h);\n                    if (iVar5 != 0) {\ncode_r0x00418229:\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h, piVar3);\n                        return iVar5;\n                    }\n                    ppiVar1 = in_ECX + 0x14;\n                    piVar3 = *ppiVar1;\n                    *ppiVar1 = *ppiVar1 + var_14h + 8;\n                    in_ECX[0x15] = in_ECX[0x15] + CARRY4(piVar3, var_14h + 8) + (0xffffffdf < var_14h);\n                    *(arg_8h + 0x1c8) = var_14h + var_ch + 0x20;\n                    *(arg_8h + 0x1cc) = var_8h + (0xffffffdf < var_14h + var_ch) + CARRY4(var_14h, var_ch);\n                    var_1ch = 0x41826d;\n                    piVar3 = fcn.00418ef0();\n                } while (piVar3 != var_4h);\n                var_1ch = &fcn.0041810e::var_20h;\n                var_8h = var_8h & 0xffffff00;\n                var_24h = 0x418287;\n                fcn.004171e2();\n                var_30h = 0;\n                var_2ch = NULL;\n                var_28h = 0;\n                var_34h = 0x41c3fc;\n                var_24h = 0x4182a8;\n                iVar7 = fcn.004162e0();\n                if (iVar7 == 1) goto code_r0x0041835b;\n            } while (iVar7 != 0x17);\n            var_24h = arg_10h;\n            var_2ch = &fcn.0041810e::var_34h;\n            var_28h = arg_ch;\n            var_30h = arg_8h + 0x150;\n            var_34h = *(arg_8h + 0x144);\n            piVar3 = *(arg_8h + 0x140);\n            iVar5 = fcn.004177e4();\n            if (iVar5 != 0) {\n                fcn.004165e1();\n                fcn.004171a9();\n                goto code_r0x00418229;\n            }\n            if (var_2ch == NULL) {\n                fcn.004165e1();\n                fcn.004171a9();\n                iVar5 = 0;\n                goto code_r0x00418229;\n            }\n        } while (1 < var_2ch);\n        fcn.004171a9();\n        fcn.004171e2();\n        iVar7 = fcn.004162e0();\n    } while (iVar7 != 1);\ncode_r0x0041835b:\n    *(arg_8h + 0x1c0) = in_ECX[0x14];\n    *(arg_8h + 0x1c4) = in_ECX[0x15];\n    iVar5 = fcn.00417ae6(arg_8h, arg_ch, arg_10h);\n    fcn.004165e1();\n    fcn.004171a9();\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    return iVar5;\n}\n",
        "token_count": 1719
    },
    "00418482": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418482(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint32_t unaff_EDI;\n    \n    *arg_ch = 0;\n    if (*(in_ECX + 8) != 0) {\n        do {\n            uVar1 = *(*(in_ECX + 0xc) + *arg_ch * 8);\n            unaff_EDI = arg_8h;\n            if (arg_8h < uVar1) goto code_r0x004184c1;\n            unaff_EDI = arg_8h - uVar1;\n            uVar1 = *arg_ch + 1;\n            *arg_ch = uVar1;\n            arg_8h = unaff_EDI;\n        } while (uVar1 < *(in_ECX + 8));\n    }\n    arg_ch = 0x1;\n    sub.MSVCRT.dll__CxxThrowException(&arg_ch, 0x41c660);\ncode_r0x004184c1:\n    *arg_10h = unaff_EDI;\n    return;\n}\n",
        "token_count": 265
    },
    "0041853e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041853e(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    fcn.004127d6();\n    fcn.004127d6();\n    uVar4 = 0;\n    if (*(param_1 + 0x1c) != 0) {\n        do {\n            piVar1 = *(param_1 + 0x58) + uVar4 * 4;\n            if (*piVar1 != 0) {\n                *piVar1 = *(param_1 + 0x30) + uVar4 * 8;\n            }\n            fcn.004027b7();\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + 0x1c));\n    }\n    uVar4 = 0;\n    if (*(param_1 + 0x20) != 0) {\n        do {\n            piVar1 = *(param_1 + 0x6c) + uVar4 * 4;\n            if (*piVar1 != 0) {\n                *piVar1 = *(param_1 + 0x44) + uVar4 * 8;\n            }\n            fcn.004027b7();\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + 0x20));\n    }\n    if (*(param_1 + 0x14) == NULL) {\n        uVar2 = (**(**(param_1 + 0x18) + 0xc))\n                          (*(param_1 + 0x18), *(param_1 + 0xac), *(param_1 + 0x58), *(param_1 + 0x1c), *(param_1 + 0xc0)\n                           , *(param_1 + 0x6c), *(param_1 + 0x20), param_2);\n    }\n    else {\n        uVar2 = (**(**(param_1 + 0x14) + 0xc))\n                          (*(param_1 + 0x14), **(param_1 + 0xac), **(param_1 + 0xc0), **(param_1 + 0x58), \n                           **(param_1 + 0x6c));\n    }\n    iVar3 = 0;\n    *(param_1 + 0x74) = uVar2;\n    if (0 < *(param_1 + 0x80)) {\n        do {\n            fcn.0040be60();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0x80));\n    }\n    iVar3 = 0;\n    if (0 < *(param_1 + 0x94)) {\n        do {\n            fcn.00413c8f();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 686
    },
    "00418706": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418706(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (0 < *(in_ECX + 0x7c)) {\n        do {\n            puVar1 = *(in_ECX + 0x18) + var_4h * 8;\n            fcn.004127d6();\n            var_8h = NULL;\n            if (*puVar1 != 0) {\n                var_14h = 0;\n                do {\n                    fcn.00413f9d(&var_14h);\n                    var_8h = var_8h + 1;\n                } while (var_8h < *puVar1);\n            }\n            fcn.004127d6();\n            var_8h = NULL;\n            if (puVar1[1] != 0) {\n                var_14h = 0;\n                do {\n                    fcn.00413f9d(&var_14h);\n                    var_8h = var_8h + 1;\n                } while (var_8h < puVar1[1]);\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0x7c));\n    }\n    var_4h = 0;\n    if (0 < *(in_ECX + 0x28)) {\n        do {\n            puVar2 = *(in_ECX + 0x2c) + var_4h * 8;\n            fcn.00418482(*puVar2, &var_1ch, &var_10h);\n            fcn.00413cbe(puVar2[1], &var_18h, &var_14h);\n            fcn.004139ec(*(*(*(var_1ch * 4 + *(in_ECX + 0x80)) + 0x84) + var_10h * 4), \n                         *(*(*(var_18h * 4 + *(in_ECX + 0x80)) + 0x98) + var_14h * 4));\n            var_ch = NULL;\n            var_8h = NULL;\n            fcn.004184cc(0x41a440, &var_ch);\n            uVar4 = 0x41a440;\n            fcn.004184cc();\n            if (var_ch == NULL) {\ncode_r0x00418877:\n                if (var_8h != NULL) {\n                    (**(*var_8h + 8))(var_8h, uVar4);\n                }\n            }\n            else if (var_8h != NULL) {\n                (**(*var_ch + 0xc))(var_ch, var_10h, 0x80000);\n                (**(*var_8h + 0x10))(var_8h, var_14h, 0x80000);\n                goto code_r0x00418877;\n            }\n            if (var_ch != NULL) {\n                (**(*var_ch + 8))(var_ch);\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0x28));\n    }\n    iVar3 = 0;\n    if (0 < *(in_ECX + 0x3c)) {\n        do {\n            fcn.00418482(*(*(in_ECX + 0x40) + iVar3 * 4), &var_1ch, &var_18h);\n            fcn.00410310();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(in_ECX + 0x3c));\n    }\n    iVar3 = 0;\n    if (0 < *(in_ECX + 0x50)) {\n        do {\n            fcn.00413cbe(*(*(in_ECX + 0x54) + iVar3 * 4), &arg_8h, &var_1ch);\n            fcn.004136a9();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(in_ECX + 0x50));\n    }\n    return 0;\n}\n",
        "token_count": 1018
    },
    "00418964": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00418964(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, uint arg_18h, uint noname_5, int32_t arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    if ((arg_14h == *(arg_8h + 0x3c)) && (arg_20h == *(arg_8h + 0x50))) {\n        fcn.00418706(arg_ch, arg_18h);\n        iVar4 = 0;\n        if (0 < *(arg_8h + 0x7c)) {\n            do {\n                if ((iVar4 != *(arg_8h + 0x70)) && (iVar2 = fcn.00413baa(),  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < *(arg_8h + 0x7c));\n        }\n        iVar4 = 0;\n        if (0 < *(arg_8h + 0x7c)) {\n            do {\n                if (iVar4 != *(arg_8h + 0x70)) {\n                    fcn.00413c06();\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < *(arg_8h + 0x7c));\n        }\n        fcn.0041853e(arg_24h);\n        iVar4 = 0;\n        if (0 < *(arg_8h + 0x7c)) {\n            do {\n                if (iVar4 != *(arg_8h + 0x70)) {\n                    fcn.00407543(*(*(*(arg_8h + 0x80) + iVar4 * 4) + 8));\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < *(arg_8h + 0x7c));\n        }\n        iVar4 = fcn.00418939(0x80004004);\n        if ((iVar4 == 0) && (iVar4 = fcn.00418939(0x8007000e),  iVar4 == 0)) {\n            iVar2 = *(arg_8h + 0x7c);\n            iVar4 = 0;\n            if (0 < iVar2) {\n                piVar3 = *(arg_8h + 0x80);\n                do {\n                    iVar1 = *(*piVar3 + 0x74);\n                    if (((iVar1 != 0) && (iVar1 != -0x7fffbffb)) && (iVar1 != 1)) {\n                        return iVar1;\n                    }\n                    iVar4 = iVar4 + 1;\n                    piVar3 = piVar3 + 1;\n                } while (iVar4 < iVar2);\n            }\n            iVar4 = fcn.00418939(1);\n            if (iVar4 == 0) {\n                iVar4 = 0;\n                if (0 < iVar2) {\n                    piVar3 = *(arg_8h + 0x80);\n                    do {\n                        if (*(*piVar3 + 0x74) != 0) {\n                            return *(*piVar3 + 0x74);\n                        }\n                        iVar4 = iVar4 + 1;\n                        piVar3 = piVar3 + 1;\n                    } while (iVar4 < iVar2);\n                }\n                iVar4 = 0;\n            }\n        }\n    }\n    else {\n        iVar4 = -0x7ff8ffa9;\n    }\n    return iVar4;\n}\n",
        "token_count": 818
    },
    "00418e79": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418e79(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    piVar2 = *(arg_8h + 8);\n    uVar5 = 0;\n    if (piVar2 != NULL) {\n        uVar5 = (**(*piVar2 + 0xc))(piVar2, arg_ch, arg_10h, &arg_10h);\n    }\n    if (*(arg_8h + 0x1c) != '\\0') {\n        uVar4 = fcn.00418ed0(arg_10h);\n        *(arg_8h + 0x18) = uVar4;\n    }\n    puVar1 = arg_8h + 0x10;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + arg_10h;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + CARRY4(uVar3, arg_10h);\n    if (arg_14h != NULL) {\n        *arg_14h = arg_10h;\n    }\n    return uVar5;\n}\n",
        "token_count": 312
    },
    "00419070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00419070(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint8_t in_AC;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    bool bVar2;\n    \n    uVar1 = (in_AC & 1) * 0x40000;\n    bVar2 = (((in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000) & 0x200000) != 0;\n    if ((((((uVar1 ^ 0x40000) & 0x40000) != 0) * 0x40000 ^ uVar1) & 0x40000) != 0) {\n        if (!bVar2 != bVar2) {\n            fcn.00419020(0, param_1, param_1 + 4, param_1 + 0xc, param_1 + 8);\n            fcn.00419020(1, param_1 + 0x10, param_1 + 0x14, param_1 + 0x18, param_1 + 0x1c);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 275
    },
    "004019e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004019e5(int32_t *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x1e8);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0041618b();\n    }\n    fcn.0041333e(uVar2);\n    var_4h = NULL;\n    (**(*arg_8h + 0x10))(arg_8h, 0, 0, 0, 0);\n    iVar1 = (***arg_8h)(arg_8h, 0x41a390, &var_4h);\n    if (iVar1 == 0) {\n        puVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0xc);\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n        }\n        else {\n            puVar3[1] = 0x41be80;\n            puVar3[2] = 0;\n            *puVar3 = 0x41a4e0;\n            puVar3[1] = 0x41a4d0;\n        }\n        iVar1 = fcn.0040113f(in_ECX, var_4h, 0x41b4a0, puVar3);\n        if (iVar1 == 0) {\n            if ((*0x41ea6c == 2) || (iVar1 = fcn.00403a96(*arg_ch),  iVar1 != 0)) {\n                iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x44);\n                if (iVar1 != 0) {\n                    fcn.004016e7();\n                }\n                fcn.004015d8(var_4h);\n                uVar2 = fcn.00401893(in_ECX, *arg_ch);\n                if (var_4h != NULL) {\n                    (**(*var_4h + 8))(var_4h);\n                }\n                if (in_ECX == NULL) {\n                    return uVar2;\n                }\n                (**(*in_ECX + 8))(in_ECX);\n                return uVar2;\n            }\n            goto code_r0x00401abe;\n        }\n    }\n    fcn.004095ee(0, (-(*0x41e970 != '\\0') & 0xb) + 8, arg_8h);\ncode_r0x00401abe:\n    if (var_4h != NULL) {\n        (**(*var_4h + 8))(var_4h);\n    }\n    if (in_ECX != NULL) {\n        (**(*in_ECX + 8))(in_ECX);\n    }\n    return 0x80004005;\n}\n",
        "token_count": 674
    },
    "00402726": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00402726(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        return 1;\n    }\n    iVar1 = fcn.00402678();\n    if (iVar1 == 9) {\n        if (param_1 == 2) {\n            fcn.004026f2();\n            return 1;\n        }\n    }\n    else if ((iVar1 == 0) && (param_1 == 1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "0040372c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040372c(uint lpFileName, uint lpFileTime2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpFindFileData;\n    uint lpFileTime1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(lpFileName);\n    if (uVar1 == 0xffffffff) {\n        return 0;\n    }\n    if ((uVar1 & 0x10) == 0) {\n        if (*0x41e9cc != 0) {\n            if (*0x41e9cc != 2) {\n                return 1;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n            if (iVar3 != -1) {\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n                iVar3 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(&lpFileTime1, lpFileTime2);\n                if (-1 < iVar3) {\n                    return 1;\n                }\n            }\n        }\n        uVar2 = fcn.004036ff(lpFileName);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_SetLastError)(0x10);\n    return 0xffffffff;\n}\n",
        "token_count": 294
    },
    "00403a96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a96(uint16_t *lpString)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint lpSystemTimeAsFileTime;\n    int32_t n;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    n = iVar3;\n    fcn.00402a9c(lpString);\n    if (var_10h < 1) {\n        fcn.004011b7(0);\n    }\n    if ((lpString[iVar3 + -1] == 0x5c) || (iVar6 = iVar3,  lpString[iVar3 + -1] == 0x2f)) {\n        *(var_18h + -2 + iVar3 * 2) = 0;\n        iVar3 = iVar3 + -1;\n        n = iVar3;\n        iVar6 = iVar3;\n    }\n    while (iVar4 = fcn.00401e7e(var_18h),  iVar4 == 0) {\n        for (; ((0 < iVar3 && (iVar2 = *(var_18h + iVar3 * 2),  iVar2 != 0x2f)) && (iVar2 != 0x5c)); iVar3 = iVar3 + -1)\n        {\n        }\n        if (iVar3 == 0) {\n            if (((iVar6 != 2) || ((*lpString | 0x20) < 0x61)) || ((0x7a < (*lpString | 0x20) || (lpString[1] != 0x3a))))\n            {\n                fcn.004095ee(1, 0xc, lpString);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n                return 0;\n            }\n            uVar7 = 1;\n            goto code_r0x00403bde;\n        }\n        *(var_18h + iVar3 * 2) = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&lpSystemTimeAsFileTime);\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(var_18h);\n    if (((uVar5 & 0x10) != 0) || (iVar4 = fcn.0040372c(var_18h, &lpSystemTimeAsFileTime),  iVar4 == 0)) {\n        iVar4 = fcn.00401e7e(var_18h);\n        if (iVar4 != 0) {\n            if (iVar3 < iVar6) {\n                do {\n                    piVar1 = var_18h + iVar3 * 2;\n                    sub.MSVCRT.dll_memcpy(piVar1, lpString + iVar3, (n - iVar3) + 1);\n                    if (*piVar1 == 0) goto code_r0x00403b93;\n                    do {\n                        iVar3 = iVar3 + 1;\ncode_r0x00403b93:\n                    } while (((*(var_18h + iVar3 * 2) != 0) && (iVar2 = *(var_18h + iVar3 * 2),  iVar2 != 0x5c)) &&\n                            (iVar2 != 0x2f));\n                    *(var_18h + iVar3 * 2) = 0;\n                    iVar6 = fcn.00401e7e(var_18h);\n                    if (iVar6 == 0) goto code_r0x00403b4c;\n                } while (iVar3 < n);\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n            return 1;\n        }\ncode_r0x00403b4c:\n        fcn.004095ee(1, 0xc, var_18h);\n    }\n    uVar7 = 0;\ncode_r0x00403bde:\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    return uVar7;\n}\n",
        "token_count": 936
    },
    "0040482e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040482e(int16_t *arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    var_4h = *0x41e9d0 | *0x41e9cc;\n    if ((*arg_8h != 0x2b) && (*arg_8h != 0x2d)) {\n        var_4h = 0;\n    }\n    fcn.00404772(arg_8h, &var_4h);\n    if ((var_4h & 7) < 3) {\n        *0x41e9cc = var_4h & 7;\n    }\n    *0x41e9d0 = var_4h & 0xfffffff8;\n    return;\n}\n",
        "token_count": 171
    },
    "00405758": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405758(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ushort *puVar3;\n    uint var_34h;\n    uint lpFileName;\n    uint var_1ch;\n    int32_t var_18h;\n    uint lpRootPathName;\n    ushort var_ch;\n    ushort var_ah;\n    int32_t lpNumberOfBytesWritten;\n    int32_t hObject;\n    \n    puVar3 = arg_8h;\n    if ((arg_8h[1] == 0x3a) && ((arg_8h[2] == 0x5c || (arg_8h[2] == 0x2f)))) {\n        lpRootPathName._0_2_ = *arg_8h;\n        lpRootPathName._2_2_ = 0x3a;\n        var_ch = 0x5c;\n        var_ah = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&lpRootPathName);\n        if (iVar1 == 3) {\n            fcn.00404a41(&lpFileName, L\"7ZSfx%03x.cmd\");\n            hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x40000000, 0, 0, 2, 0x80, 0);\n            if (hObject != -1) {\n                fcn.004014eb();\n                fcn.00401403(L\":Repeat\\r\\n\");\n                fcn.00402aed(L\"del \\\"\");\n                fcn.004014bc(&arg_8h);\n                fcn.00402aed(0x41b8fc);\n                fcn.00402aed(L\"if exist \\\"\");\n                fcn.004014bc(&arg_8h);\n                fcn.00402aed(L\"\\\" goto Repeat\\r\\n\");\n                fcn.00402aed(L\"del \\\"\");\n                fcn.004014bc(&lpFileName);\n                fcn.00402aed(0x41b8fc);\n                iVar1 = var_18h;\n                puVar2 = fcn.00402e4b(&var_34h, &var_1ch, 1);\n                iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hObject, *puVar2, iVar1, &lpNumberOfBytesWritten, 0);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_34h);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n                if ((iVar1 == 0) || (lpNumberOfBytesWritten != var_18h)) {\n                    fcn.0040331e(lpFileName);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpFileName);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(arg_8h);\n                    return;\n                }\n                (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(arg_8h, 0);\n                (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, L\"open\", lpFileName, 0, 0, 0);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                puVar3 = arg_8h;\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpFileName);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar3);\n            return;\n        }\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar3);\n    return;\n}\n",
        "token_count": 819
    },
    "004096e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004096e3(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004029db(param_1, L\"BeginPrompt\", 0);\n    if (iVar1 != 0) {\n        fcn.00401ee8(0x62);\n    }\n    if ((*0x41e3a4 & 0x100) != 0) {\n        fcn.00401ee8(99);\n    }\n    if ((*0x41e3a4 & 0xc0) == 0x80) {\n        fcn.00401ee8(0x70);\n    }\n    if (*0x41e9c4 != 2) {\n        fcn.00401ee8(0x65);\n    }\n    iVar1 = fcn.004029db(param_1, L\"ErrorTitle\", 0);\n    if (iVar1 != 0) {\n        fcn.00401ee8(0x7a);\n    }\n    iVar1 = fcn.004029db(param_1, L\"FinishMessage\", 0);\n    if (iVar1 != 0) {\n        fcn.00401ee8(0x66);\n    }\n    iVar1 = fcn.004029db(param_1, L\"HelpText\", 0);\n    if (iVar1 != 0) {\n        fcn.00401ee8(0x68);\n    }\n    iVar1 = fcn.004029db(param_1, L\"WarningTitle\", 0);\n    if (iVar1 != 0) {\n        fcn.00401ee8(0x77);\n    }\n    iVar1 = fcn.004029db(param_1, L\"PasswordTitle\", 0);\n    if ((iVar1 == 0) && (iVar1 = fcn.004029db(param_1, L\"PasswordText\", 0),  iVar1 == 0)) {\n        return 0;\n    }\n    fcn.00401ee8(0x78);\n    return 0;\n}\n",
        "token_count": 449
    },
    "004097de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004097de(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    char16_t *pcVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint unaff_ESI;\n    uint16_t *puVar5;\n    uint var_58h;\n    uint var_54h;\n    uint var_4h;\n    \n    uVar1 = **0x41ea70;\n    var_4h = 0;\n    puVar5 = *0x41ea70;\n    do {\n        if (uVar1 == 0) {\n            return var_4h;\n        }\n        uVar2 = uVar1;\n        if (uVar2 < 99) {\n            if (uVar2 != 0x62) {\n                if (0x48 < uVar2) {\n                    if (uVar2 == 0x50) goto code_r0x004099f4;\n                    iVar4 = uVar2 - 0x57;\n                    goto code_r0x004098af;\n                }\n                if (uVar2 == 0x48) {\ncode_r0x00409953:\n                    iVar4 = fcn.004029db(arg_8h, L\"HelpText\", 0);\n                    if ((iVar4 == 0) && ((*puVar5 != 0x48 || (iVar4 = fcn.00402490(0x18),  iVar4 == 0)))) {\n                        var_4h = 100;\n                    }\n                    fcn.00404544();\n                    fcn.00408433(0x11, *0x41e9b0, iVar4, 0);\ncode_r0x004099ed:\n                    fcn.004081a6();\n                    goto code_r0x00409a5c;\n                }\n                if (uVar2 != 0x42) {\n                    if (uVar2 != 0x43) {\n                        if (uVar2 != 0x45) {\n                            if (uVar2 != 0x46) goto code_r0x00409a5c;\n                            goto code_r0x0040983e;\n                        }\n                        goto code_r0x004099a4;\n                    }\n                    goto code_r0x004099c1;\n                }\n            }\n            pcVar3 = fcn.004029db(arg_8h, L\"BeginPrompt\", 0);\n            if (pcVar3 == NULL) {\n                if (*puVar5 == 0x42) {\n                    pcVar3 = L\"BeginPrompt\";\n                }\n                else {\n                    var_4h = 100;\n                }\n            }\n            fcn.00408bb8(*0x41e9b0, pcVar3);\n        }\n        else if (uVar2 < 0x71) {\n            if (uVar2 == 0x70) {\ncode_r0x004099f4:\n                if (((*0x41e3a4 & 0xc0) == 0x80) || (uVar1 == 0x50)) {\n                    fcn.00408c36(*0x41e9a8, *0x41e9a4);\n                    goto code_r0x00409a5c;\n                }\n            }\n            else {\n                if (uVar2 != 99) {\n                    if (uVar2 == 0x65) {\ncode_r0x004099a4:\n                        if ((*0x41e9c4 == 2) && (uVar1 != 0x45)) goto code_r0x00409a44;\n                        fcn.00408c92();\n                    }\n                    else {\n                        if (uVar2 == 0x66) {\ncode_r0x0040983e:\n                            pcVar3 = fcn.004029db(arg_8h, L\"FinishMessage\", 0);\n                            if ((pcVar3 == NULL) && (*puVar5 == 0x46)) {\n                                pcVar3 = L\"FinishMessage\";\n                            }\n                            if (*0x41e3b0 < 0) {\n                                *0x41e3b0 = 1;\n                            }\n                            if ((*0x41e3b0 != 0) || (*puVar5 == 0x46)) {\n                                fcn.00404903();\n                                fcn.00408433(0x11, *0x41e9b0, pcVar3, 0);\n                                goto code_r0x004099ed;\n                            }\n                            goto code_r0x00409a44;\n                        }\n                        if (uVar2 == 0x68) goto code_r0x00409953;\n                    }\n                    goto code_r0x00409a5c;\n                }\ncode_r0x004099c1:\n                if (((*0x41e3a4 & 0x100) != 0) || (uVar1 == 0x43)) {\n                    fcn.004083d2();\n                    fcn.004084ad(0);\n                    goto code_r0x004099ed;\n                }\n            }\ncode_r0x00409a44:\n            var_4h = 100;\n        }\n        else {\n            iVar4 = uVar2 - 0x77;\ncode_r0x004098af:\n            if (iVar4 == 0) {\n                iVar4 = fcn.004029db(arg_8h, L\"WarningTitle\", 0);\n                if ((iVar4 == 0) && (*puVar5 != 0x57)) goto code_r0x00409a44;\n                arg_8h_00 = fcn.00402490(0x2a);\n                fcn.00409581(arg_8h_00);\n            }\n            else if (iVar4 == 1) {\n                fcn.00401556();\n            }\n            else if (iVar4 == 3) {\n                iVar4 = fcn.004029db(arg_8h, L\"ErrorTitle\", 0);\n                if ((iVar4 == 0) && (*puVar5 != 0x5a)) goto code_r0x00409a44;\n                fcn.004095ee(0, 0xf, unaff_ESI);\n            }\n        }\ncode_r0x00409a5c:\n        puVar5 = puVar5 + 1;\n        uVar1 = *puVar5;\n    } while( true );\n}\n",
        "token_count": 1406
    },
    "004109b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004109b0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar2 = 0;\n    *(param_1 + 0x30) = 0;\n    iVar5 = 0;\n    do {\n        if (uVar2 < 0xc) {\n            iVar3 = (uVar2 >> 2) + 1;\n        }\n        else {\n            iVar3 = 4;\n        }\n        do {\n            *(param_1 + 0x6e + iVar5) = uVar2;\n            iVar5 = iVar5 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        *(param_1 + 0x48 + uVar2) = iVar5;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x26);\n    *(param_1 + 0x288) = 0;\n    *(param_1 + 0x289) = 2;\n    *(param_1 + 0x28a) = 0x4040404;\n    *(param_1 + 0x28e) = 0x4040404;\n    *(param_1 + 0x292) = 4;\n    sub.MSVCRT.dll_memset(param_1 + 0x293, 6, 0xf5);\n    uVar2 = 0;\n    do {\n        *(param_1 + 0x188 + uVar2) = uVar2;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 3);\n    iVar5 = 1;\n    uVar1 = uVar2;\n    for (; uVar2 < 0x100; uVar2 = uVar2 + 1) {\n        iVar5 = iVar5 + -1;\n        *(param_1 + 0x188 + uVar2) = uVar1;\n        uVar4 = uVar1;\n        if (iVar5 == 0) {\n            uVar4 = uVar1 + 1;\n            iVar5 = uVar1 - 1;\n        }\n        uVar1 = uVar4;\n    }\n    sub.MSVCRT.dll_memset(param_1 + 0x388, 0, 0x40);\n    sub.MSVCRT.dll_memset(param_1 + 0x3c8, 8, 0xc0);\n    return;\n}\n",
        "token_count": 576
    },
    "00412520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00412520(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    \n    uVar1 = *param_1;\n    if (uVar1 < 0x14) {\n        if ((0xf < uVar1) || ((1 < uVar1 && ((uVar1 < 8 || ((9 < uVar1 && (uVar1 < 0xc)))))))) {\ncode_r0x00412558:\n            *param_1 = 0;\n            param_1[1] = 0;\n            return 0;\n        }\n    }\n    else if ((0x14 < uVar1) && ((uVar1 < 0x18 || (uVar1 == 0x40)))) goto code_r0x00412558;\n    uVar2 = (*_sym.imp.OLEAUT32.dll_VariantCopy)(param_1);\n    return uVar2;\n}\n",
        "token_count": 209
    },
    "00412a5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412a5a(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint *arg_18h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (arg_14h < 3) {\n        uVar1 = fcn.004122f5(arg_ch, arg_10h, arg_14h, &arg_ch);\n        arg_14h = arg_14h & 0xffffff00 | uVar1;\n        if (arg_18h != NULL) {\n            *arg_18h = arg_ch;\n            arg_18h[1] = arg_10h;\n        }\n        uVar2 = fcn.004129ea(arg_14h);\n    }\n    else {\n        uVar2 = 0x80030001;\n    }\n    return uVar2;\n}\n",
        "token_count": 199
    },
    "00412afb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412afb(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint *arg_18h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (arg_14h < 3) {\n        uVar1 = fcn.004122f5(arg_ch, arg_10h, arg_14h, &arg_ch);\n        arg_14h = arg_14h & 0xffffff00 | uVar1;\n        if (arg_18h != NULL) {\n            *arg_18h = arg_ch;\n            arg_18h[1] = arg_10h;\n        }\n        uVar2 = fcn.004129ea(arg_14h);\n    }\n    else {\n        uVar2 = 0x80030001;\n    }\n    return uVar2;\n}\n",
        "token_count": 197
    },
    "00417ae6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00417f8b)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __thiscall fcn.00417ae6(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t arg_8h;\n    uint32_t uVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int64_t iVar11;\n    ulong uVar12;\n    uint64_t uVar13;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    int32_t iStack204;\n    uint uStack200;\n    uchar uStack192;\n    uchar uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    int32_t iStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    int32_t iStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    int32_t iStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    ulong uStack32;\n    ulong uStack24;\n    int32_t iStack16;\n    ulong uStack12;\n    \n    iVar3 = param_2;\n    iVar11 = fcn.004162e0();\n    if (iVar11 == 2) {\n        uStack12 = iVar11;\n        fcn.00416a96(param_2 + 0x130);\n        iVar11 = fcn.004162e0();\n    }\n    uStack56 = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    uStack44 = 4;\n    uStack60 = 0x41c3fc;\n    if (iVar11 == 3) {\n        uStack12 = iVar11;\n        iVar5 = fcn.004177e4(*(param_2 + 0x140), *(param_2 + 0x144), param_2 + 0x150, &uStack60, param_3, param_4);\n        if (iVar5 != 0) goto code_r0x00417b79;\n        puVar2 = param_2 + 0x150;\n        uVar9 = *puVar2;\n        *puVar2 = *puVar2 + *(param_2 + 0x140);\n        *(param_2 + 0x154) = *(param_2 + 0x154) + *(param_2 + 0x144) + CARRY4(uVar9, *(param_2 + 0x140));\n        iVar11 = fcn.004162e0();\n    }\n    uStack156 = 0;\n    uStack152 = 0;\n    iStack148 = 0;\n    uStack144 = 8;\n    uStack160 = 0x41c3e4;\n    uStack136 = 0;\n    uStack132 = 0;\n    iStack128 = 0;\n    uStack124 = 1;\n    uStack140 = 0x41c3e4;\n    uStack96 = 0;\n    iStack92 = 0;\n    iStack88 = 0;\n    uStack84 = 4;\n    uStack100 = 0x41c3e4;\n    uStack12 = iVar11;\n    if (iVar11 == 4) {\n        fcn.00417765(&uStack60, param_2 + 0x148, param_2, param_2 + 0x14, param_2 + 0x28, param_2 + 0x3c, param_2 + 0x50\n                     , &uStack160, &uStack140, &uStack100);\n        puVar2 = param_2 + 0x148;\n        uVar9 = *puVar2;\n        *puVar2 = *puVar2 + *(param_2 + 0x140);\n        *(param_2 + 0x14c) = *(param_2 + 0x14c) + *(param_2 + 0x144) + CARRY4(uVar9, *(param_2 + 0x140));\n        iVar11 = fcn.004162e0();\n        uStack12 = iVar11;\n    }\n    else {\n        piVar1 = param_2 + 0x44;\n        param_2 = 0;\n        if (0 < *piVar1) {\n            do {\n                fcn.004027b7(1);\n                iVar5 = *(*(iVar3 + 0x48) + param_2 * 4);\n                uVar12 = fcn.00414ca4();\n                fcn.00413c65(uVar12);\n                fcn.00414af0(*(iVar5 + 0x54));\n                fcn.004027b7();\n                param_2 = param_2 + 1;\n            } while (param_2 < *(iVar3 + 0x44));\n        }\n    }\n    fcn.004127d6();\n    iVar11 = CONCAT44(uStack32._4_4_, uStack32);\n    uVar13 = CONCAT44(uStack24._4_4_, uStack24);\n    if (uStack12 != 0) {\n        uStack24 = CONCAT44(uStack24._4_4_, uStack24);\n        if (uStack12 == 5) goto code_r0x00417ce4;\ncode_r0x00417cdf:\n        do {\n            fcn.00416245();\n            uVar13 = uStack24;\n            iVar11 = uStack32;\ncode_r0x00417ce4:\n            uStack24 = uVar13;\n            uStack32 = iVar11;\n            arg_8h = fcn.00416375();\n            uVar6 = arg_8h;\n            fcn.0041270d(arg_8h);\n            for (uVar9 = arg_8h; uVar9 != 0; uVar9 = uVar9 - 1) {\n                uVar6 = fcn.00416d8f();\n                fcn.004170c6();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack212);\n            }\n            fcn.00413c65(9, 0, uVar6);\n            if (*(iVar3 + 8) != 0) {\n                fcn.00413c65(6, 0);\n            }\n            if ((arg_8h != 0) && (iStack92 != 0)) {\n                fcn.00413c65(10, 0);\n            }\n            uStack76 = 0;\n            uStack72 = 0;\n            iStack68 = 0;\n            uStack64 = 1;\n            uStack80 = 0x41c3e4;\n            fcn.0041641a(&uStack80);\n            uStack176 = 0;\n            uStack172 = 0;\n            iStack168 = 0;\n            uStack164 = 1;\n            uStack180 = 0x41c3e4;\n            uStack116 = 0;\n            uStack112 = 0;\n            iStack108 = 0;\n            uStack104 = 1;\n            uStack120 = 0x41c3e4;\n            param_4 = 0;\n            uVar13 = uStack24;\n            do {\n                uStack24 = uVar13;\n                iVar11 = fcn.004162e0();\n                if (iVar11 == 0) {\n                    iVar5 = 0;\n                    uVar9 = 0;\n                    uStack12._4_4_ = 0;\n                    iStack16 = 0;\n                    if (param_4 != 0) {\n                        do {\n                            if (*(iStack108 + uVar9) != '\\0') {\n                                iStack16 = iStack16 + 1;\n                            }\n                            uVar9 = uVar9 + 1;\n                        } while (uVar9 < param_4);\n                    }\n                    param_3 = 0;\n                    if (arg_8h != 0) {\n                        do {\n                            bVar10 = *(iStack68 + param_3) == '\\0';\n                            puVar8 = *(*(iVar3 + 0x70) + param_3 * 4);\n                            *(puVar8 + 7) = bVar10;\n                            if (bVar10) {\n                                *(puVar8 + 0x1d) = 0;\n                                *puVar8 = *(iStack148 + iVar5 * 8);\n                                puVar8[1] = *(iStack148 + 4 + iVar5 * 8);\n                                puVar8[3] = *(iStack88 + iVar5 * 4);\n                                *(puVar8 + 0x1e) = *(iStack128 + iVar5);\n                                iVar5 = iVar5 + 1;\n                            }\n                            else {\n                                *(puVar8 + 0x1d) = *(iStack168 + uStack12._4_4_) == '\\0';\n                                uStack12._4_4_ = uStack12._4_4_ + 1;\n                                *puVar8 = 0;\n                                puVar8[1] = 0;\n                                *(puVar8 + 0x1e) = 0;\n                            }\n                            if (iStack16 != 0) {\n                                uStack32 = iVar11;\n                                fcn.00414af0();\n                                iVar11 = uStack32;\n                            }\n                            param_3 = param_3 + 1;\n                        } while (param_3 < arg_8h);\n                    }\n                    uStack32 = iVar11;\n                    fcn.00412875();\n                    fcn.00412875();\n                    fcn.00412875();\n                    fcn.00412875();\n                    fcn.00412875();\n                    fcn.00412875();\n                    fcn.004165e1();\n                    return 0;\n                }\n                uStack32 = iVar11;\n                uVar13 = fcn.004162e0();\n                iStack16 = *(*(param_1 + 0x18) + 8);\n                uStack24 = uVar13;\n                if ((uStack32._4_4_ != 0) || (0x40000000 < uStack32)) {\ncode_r0x00417f95:\n                    fcn.004162b3(uVar13);\n                    uVar13 = uStack24;\n                    goto code_r0x00417fa0;\n                }\n    // switch table (12 cases) at 0x4180de\n                switch(uStack32) {\n                case 0xe:\n                    fcn.00416457(arg_8h, &uStack80);\n                    uVar9 = 0;\n                    if (uStack72 != 0) {\n                        do {\n                            if (*(iStack68 + uVar9) != '\\0') {\n                                param_4 = param_4 + 1;\n                            }\n                            uVar9 = uVar9 + 1;\n                        } while (uVar9 < uStack72);\n                    }\n                    fcn.0041641a(&uStack180);\n                    fcn.0041641a(&uStack120);\n                    break;\n                case 0xf:\n                    puVar8 = &uStack180;\n                    goto code_r0x00417f14;\n                case 0x10:\n                    puVar8 = &uStack120;\ncode_r0x00417f14:\n                    fcn.00416457(param_4, puVar8);\n                    break;\n                case 0x11:\n                    uStack192 = 0;\n                    fcn.004171f8(param_1, &uStack60);\n                    param_3 = 0;\n                    if (0 < *(iVar3 + 0x6c)) {\n                        do {\n                            fcn.00416843(*(*(iVar3 + 0x70) + param_3 * 4) + 0x10);\n                            param_3 = param_3 + 1;\n                        } while (param_3 < *(iVar3 + 0x6c));\n                    }\n                    fcn.004171a9();\n                    break;\n                case 0x12:\n                    iVar5 = iVar3 + 0x78;\n                    goto code_r0x00417f2f;\n                case 0x13:\n                    iVar5 = iVar3 + 0xa0;\n                    goto code_r0x00417f2f;\n                case 0x14:\n                    iVar5 = iVar3 + 200;\n                    goto code_r0x00417f2f;\n                case 0x15:\n                    uStack212 = 0;\n                    uStack208 = 0;\n                    iStack204 = 0;\n                    uStack200 = 1;\n                    uStack216 = 0x41c3e4;\n                    fcn.004164ab(*(iVar3 + 0x6c), &uStack216);\n                    uStack184 = 0;\n                    fcn.004171f8(param_1, &uStack60);\n                    param_3 = 0;\n                    if (arg_8h != 0) {\n                        do {\n                            uStack12._4_4_ = *(*(iVar3 + 0x70) + param_3 * 4);\n                            cVar4 = *(iStack204 + param_3);\n                            *(uStack12._4_4_ + 0x1f) = cVar4;\n                            if (cVar4 != '\\0') {\n                                uVar7 = fcn.0041638b();\n                                *(uStack12._4_4_ + 8) = uVar7;\n                            }\n                            param_3 = param_3 + 1;\n                        } while (param_3 < arg_8h);\n                    }\n                    fcn.004171a9();\n                    fcn.00412875();\n                    break;\n                default:\n                    goto code_r0x00417f95;\n                case 0x18:\n                    iVar5 = iVar3 + 0xf0;\ncode_r0x00417f2f:\n                    fcn.004174b3(&uStack60, iVar5, arg_8h);\n                    break;\n                case 0x19:\n                    uStack40 = 0;\n                    iStack36 = 0;\n                    if (uVar13 != 0) {\n                        do {\n                            cVar4 = fcn.00416265();\n                            if (cVar4 != '\\0') goto code_r0x00417cdf;\n                            bVar10 = 0xfffffffe < uStack40;\n                            uStack40 = uStack40 + 1;\n                            iStack36 = iStack36 + bVar10;\n                            uVar13 = uStack24;\n                        } while (CONCAT44(iStack36, uStack40) < uStack24);\n                    }\n                    goto code_r0x00417fa0;\n                }\n                fcn.00413c65(uStack32);\n                uVar13 = uStack24;\ncode_r0x00417fa0:\n                uStack24._4_4_ = uVar13 >> 0x20;\n                uStack24._0_4_ = uVar13;\n            } while (((*(iVar3 + 0x130) == '\\0') && (*(iVar3 + 0x131) < 3)) ||\n                    ((uStack24 = uVar13,  *(*(param_1 + 0x18) + 8) - iStack16 == uStack24 && (uStack24._4_4_ == 0))));\n        } while( true );\n    }\n    fcn.00412875();\n    fcn.00412875();\n    fcn.00412875();\n    iVar5 = 0;\ncode_r0x00417b79:\n    fcn.004165e1();\n    return iVar5;\n}\n",
        "token_count": 3668
    },
    "0040bae0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040bae0(int32_t param_1, uint8_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + 0x7c);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (param_1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = param_1 + 0xc;\n    }\n    *(iVar2 + 0x30) = 0x41be90;\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(iVar2 + 0x38));\n    *(iVar2 + 4) = 0x41be94;\n    fcn.004127d6();\n    fcn.00412875();\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 242
    },
    "00413f7a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.00413f7a(int32_t **param_1, uint8_t param_2)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 120
    },
    "00414b44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00414b44(uint param_1, uint8_t param_2)\n\n{\n    fcn.00412875();\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 75
    },
    "0041532b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041532b(int32_t param_1, uint8_t param_2)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 8);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 120
    },
    "004159ed": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004159ed(int32_t param_1, uint8_t param_2)\n\n{\n    *(param_1 + 8) = 0x41be90;\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(param_1 + 0x10));\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 111
    },
    "00415a4c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00415a4c(int32_t param_1, uint8_t param_2)\n\n{\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(param_1 + 0x10));\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 96
    },
    "00418f10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.00418f10(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    do {\n        uVar1 = ~((uVar3 & 1) - 1) & 0xedb88320 ^ uVar3 >> 1;\n        uVar1 = ~((uVar1 & 1) - 1) & 0xedb88320 ^ uVar1 >> 1;\n        uVar1 = ~((uVar1 & 1) - 1) & 0xedb88320 ^ uVar1 >> 1;\n        uVar1 = ~((uVar1 & 1) - 1) & 0xedb88320 ^ uVar1 >> 1;\n        uVar1 = ~((uVar1 & 1) - 1) & 0xedb88320 ^ uVar1 >> 1;\n        uVar1 = ~((uVar1 & 1) - 1) & 0xedb88320 ^ uVar1 >> 1;\n        uVar1 = ~((uVar1 & 1) - 1) & 0xedb88320 ^ uVar1 >> 1;\n        *(uVar3 * 4 + 0x420de0) = ~((uVar1 & 1) - 1) & 0xedb88320 ^ uVar1 >> 1;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 0x100);\n    while (uVar3 < 0x800) {\n        uVar1 = *(uVar3 * 4 + 0x4209e0);\n        uVar3 = uVar3 + 1;\n        *(uVar3 * 4 + 0x420ddc) = uVar1 >> 8 ^ *((uVar1 & 0xff) * 4 + 0x420de0);\n    }\n    *0x420dbc = 0x4196b0;\n    iVar2 = fcn.00419140();\n    if (iVar2 == 0) {\n        *0x420dbc = 0x4195d0;\n    }\n    return;\n}\n",
        "token_count": 497
    },
    "00401e7e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00401e7e(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(param_1, 0);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar1 == 0xb7) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(unaff_ESI);\n        if (uVar2 == 0xffffffff) {\n            return 1;\n        }\n        if ((uVar2 & 0x10) != 0) {\n            return 1;\n        }\n        iVar1 = 0xb7;\n    }\n    (*_sym.imp.KERNEL32.dll_SetLastError)(iVar1);\n    return 0;\n}\n",
        "token_count": 204
    },
    "00402490": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402490(int32_t arg_8h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    bool bVar11;\n    uint lpLCData;\n    uint var_64h;\n    uint dwErrCode;\n    uint lpString2;\n    uint32_t var_4h;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_GetLastError;\n    iVar10 = 0;\n    if (*0x41e0b0 != 0) {\n        piVar4 = 0x41e0b0;\n        do {\n            if (*piVar4 == arg_8h) break;\n            iVar10 = iVar10 + 1;\n            piVar4 = iVar10 * 0x10 + 0x41e0b0;\n        } while (*piVar4 != 0);\n    }\n    iVar10 = iVar10 * 0x10;\n    if (*(iVar10 + 0x41e0b0) == 0) {\n        return 0x41a584;\n    }\n    dwErrCode = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    (*_sym.imp.USER32.dll_wsprintfW)(&var_64h, L\"SfxString%d\", arg_8h);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetEnvironmentVariableW;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(&var_64h, 0, 0);\n    iVar5 = (*pcVar3)();\n    if (iVar5 != 0) goto code_r0x00402588;\n    iVar1 = (var_4h + 2) * 2;\n    lpString2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(-(iVar1 >> 0x20 != 0) | iVar1);\n    uVar6 = (*pcVar2)(&var_64h, lpString2, var_4h + 1);\n    uVar8 = lpString2;\n    if ((uVar6 <= var_4h) && (iVar5 = (*pcVar3)(),  uVar8 = lpString2,  iVar5 == 0)) {\n        if (*(iVar10 + 0x41e0bc) == 0) {\n            *(iVar10 + 0x41e0bc) = lpString2;\n            goto code_r0x00402588;\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(iVar10 + 0x41e0bc), lpString2);\n        if (iVar5 != 0) {\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(iVar10 + 0x41e0bc));\n            *(iVar10 + 0x41e0bc) = uVar8;\n            goto code_r0x00402588;\n        }\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar8);\ncode_r0x00402588:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n    iVar5 = *(iVar10 + 0x41e0bc);\n    if (iVar5 == 0) {\n        iVar5 = *(iVar10 + 0x41e0b4);\n        if ((*(iVar10 + 0x41e0b8) != 0) && (iVar7 = fcn.0040243a(),  iVar7 == *0x41b41c)) {\n            iVar5 = *(iVar10 + 0x41e0b8);\n        }\n        iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar5);\n        iVar1 = (iVar7 + 3) * 2;\n        uVar8 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(-(iVar1 >> 0x20 != 0) | iVar1);\n        bVar11 = *0x41e084 == -1;\n        *(iVar10 + 0x41e0bc) = uVar8;\n        if (bVar11) {\n            *0x41e084 = 0;\n            iVar9 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(*0x41e980, 0x1004, &lpLCData, 0x1f);\n            if (0 < iVar9) {\n                *0x41e084 = (*_sym.imp.MSVCRT.dll__wtol)(&lpLCData);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(*0x41e084, 0, iVar5, iVar7 + 1, *(iVar10 + 0x41e0bc), iVar7 + 2);\n        iVar5 = *(iVar10 + 0x41e0bc);\n    }\n    return iVar5;\n}\n",
        "token_count": 1115
    },
    "00403211": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403211(uint lpPathName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpPathName_00;\n    uint lpFindFileData;\n    uint lpString1;\n    uint lpFileName;\n    \n    fcn.00402a9c(lpPathName);\n    fcn.00402aed(0x41a688);\n    lpPathName_00 = lpFileName;\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    pcVar1 = _sym.imp.KERNEL32.dll_SetFileAttributesW;\n    if (iVar2 != -1) {\n        do {\n            fcn.00401403(lpPathName);\n            fcn.004017a8(0x5c);\n            fcn.00402aed(&lpString1);\n            lpPathName_00 = lpFileName;\n            if ((lpFindFileData & 0x10) == 0) {\n                iVar3 = (*pcVar1)(lpFileName, 0);\n                if (iVar3 == 0) goto code_r0x00403310;\n                iVar3 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpPathName_00);\ncode_r0x004032cc:\n                if (iVar3 == 0) goto code_r0x00403310;\n            }\n            else {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, 0x41a684);\n                if ((iVar3 != 0) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, 0x41a67c),  iVar3 != 0)) {\n                    iVar3 = fcn.00403211(lpPathName_00);\n                    goto code_r0x004032cc;\n                }\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, &lpFindFileData);\n        } while (iVar3 != 0);\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n    }\n    iVar2 = (*pcVar1)(lpPathName, 0);\n    if ((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)(lpPathName),  iVar2 != 0)) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpPathName_00);\n        return 1;\n    }\ncode_r0x00403310:\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpPathName_00);\n    return 0;\n}\n",
        "token_count": 591
    },
    "004047d5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004047d5(int16_t *param_1)\n\n{\n    if ((*0x41e3a4 == -1) || ((*param_1 != 0x2b && (*param_1 != 0x2d)))) {\n        *0x41e3a4 = 0;\n    }\n    fcn.00404772(param_1, 0x41e3a4);\n    return;\n}\n",
        "token_count": 95
    },
    "00404a41": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00404a41(int32_t *arg_8h, uint ARG_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    piVar2 = arg_8h;\n    fcn.004014eb();\n    uVar3 = fcn.00402ad5(2);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTempPathW;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetTempPathW)(1, uVar3);\n    **arg_8h = 0;\n    arg_8h[1] = 0;\n    if (iVar4 != 0) {\n        uVar3 = fcn.00402ad5(iVar4 + 1);\n        (*pcVar1)(iVar4 + 1, uVar3);\n        iVar4 = *arg_8h;\n        iVar5 = fcn.00401184(iVar4);\n        *(iVar4 + iVar5 * 2) = 0;\n        arg_8h[1] = iVar5;\n    }\n    iVar4 = arg_8h[1];\n    arg_8h = NULL;\n    do {\n        iVar5 = fcn.00402ad5(iVar4 + 0xf);\n        (*_sym.imp.USER32.dll_wsprintfW)(iVar5 + iVar4 * 2, ARG_1, arg_8h);\n        iVar5 = *piVar2;\n        iVar6 = fcn.00401184(iVar5);\n        *(iVar5 + iVar6 * 2) = 0;\n        piVar2[1] = iVar6;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(*piVar2);\n        if (iVar5 == -1) {\n            return piVar2;\n        }\n        arg_8h = arg_8h + 1;\n    } while (arg_8h < 0xfff);\n    return piVar2;\n}\n",
        "token_count": 466
    },
    "004118e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004118e0(int32_t param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0xc) = 0xffffffff;\n    cVar1 = (***(param_1 + 0x14))(*(param_1 + 0x14));\n    if (cVar1 != '\\0') {\n        return false;\n    }\n    iVar3 = 4;\n    do {\n        uVar2 = (***(param_1 + 0x14))(*(param_1 + 0x14));\n        uVar2 = uVar2 & 0xff | *(param_1 + 0x10) << 8;\n        iVar3 = iVar3 + -1;\n        *(param_1 + 0x10) = uVar2;\n    } while (iVar3 != 0);\n    return uVar2 != 0xffffffff;\n}\n",
        "token_count": 222
    },
    "0041228a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041228a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        *param_1 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 92
    },
    "004122aa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004122aa(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    ulong uVar2;\n    uint *lpFileSizeHigh;\n    \n    lpFileSizeHigh = in_ECX;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*in_ECX, &lpFileSizeHigh);\n    if ((iVar1 == -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 != 0)) {\n        return 0;\n    }\n    uVar2 = fcn.00419380(lpFileSizeHigh, 0, 0, 1);\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar2 >> 0x20;\n    return 1;\n}\n",
        "token_count": 179
    },
    "004122f5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.004122f5(uint lDistanceToMove, int32_t arg_ch, uint dwMoveMethod, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint var_8h;\n    int32_t lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_ch;\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)\n                      (*in_ECX, lDistanceToMove, &lpDistanceToMoveHigh, dwMoveMethod, lDistanceToMove);\n    if ((iVar1 == -1) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0)) {\n        return 0;\n    }\n    *arg_14h = iVar1;\n    arg_14h[1] = lpDistanceToMoveHigh;\n    return 1;\n}\n",
        "token_count": 218
    },
    "0041235b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041235b(uint lpFileName, uint dwDesiredAccess, uint dwShareMode, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    \n    uVar1 = fcn.0041228a();\n    if (uVar1 != '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, dwDesiredAccess, dwShareMode, 0, arg_14h, arg_18h, 0);\n        *in_ECX = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "00401ec4": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint32_t fcn.00401ec4(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    \n    cVar1 = in_EAX;\n    if (cVar1 == '\\n') {\n        *0x41e080 = *0x41e080 + 1;\n        return in_EAX & 0xffffff00 | 1;\n    }\n    if ((((cVar1 != ' ') && (cVar1 != '\\r')) && (cVar1 != '\\0')) && (cVar1 != '\\t')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 133
    },
    "0040290e": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040290e(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    ulong uVar4;\n    \n    do {\n        iVar3 = param_2[1];\n        if (iVar3 <= *param_1) {\n            return 0;\n        }\n        iVar2 = *param_1;\n        cVar1 = *(iVar2 + *param_2);\n        uVar4 = fcn.00401ec4();\n        param_2 = uVar4 >> 0x20;\n        if (uVar4 == '\\0') {\n            if (cVar1 != ';') {\n                return 1;\n            }\n            if (iVar3 <= iVar2) {\n                return 0;\n            }\n            while (*(*extraout_ECX + *param_2) != '\\n') {\n                iVar3 = *extraout_ECX + 1;\n                *extraout_ECX = iVar3;\n                if (param_2[1] <= iVar3) {\n                    return 0;\n                }\n            }\n            *0x41e080 = *0x41e080 + 1;\n        }\n        *extraout_ECX = *extraout_ECX + 1;\n        param_1 = extraout_ECX;\n    } while( true );\n}\n",
        "token_count": 310
    },
    "00416b3a": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416b3a(uint *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    uVar3 = fcn.004162e0();\n    *arg_8h = uVar3;\n    arg_8h[1] = uVar3 >> 0x20;\n    arg_8h_00 = fcn.00416375();\n    fcn.00416ab3(9, 0);\n    fcn.004127d6();\n    iVar1 = arg_8h_00;\n    fcn.0041270d(arg_8h_00);\n    for (iVar2 = arg_8h_00; iVar2 != 0; iVar2 = iVar2 + -1) {\n        iVar1 = fcn.004162e0();\n        fcn.00413c65();\n    }\n    iVar4 = fcn.004162e0(iVar1);\n    while (iVar4 != 0) {\n        if (iVar4 == 10) {\n            fcn.00416ae2(arg_8h_00, arg_10h, arg_14h);\n        }\n        else {\n            fcn.00416444();\n        }\n        iVar4 = fcn.004162e0();\n    }\n    if (*(arg_10h + 8) == 0) {\n        fcn.0041641a(arg_10h);\n        fcn.0041270d(arg_8h_00);\n        fcn.004127d6();\n        for (; arg_8h_00 != 0; arg_8h_00 = arg_8h_00 + -1) {\n            fcn.004027b7();\n        }\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "004175cf": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004175cf(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint var_8ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.00416ab3(0xb, 0);\n    var_4h = fcn.00416375();\n    fcn.004171f8();\n    fcn.004127d6();\n    fcn.0041270d(var_4h);\n    if (var_4h != 0) {\n        arg_8h = var_4h;\n        do {\n            uVar2 = fcn.00416d1a();\n            fcn.004175a5(uVar2);\n            fcn.00415a88();\n            fcn.004172a2(*(*(arg_ch + 0xc) + -4 + *(arg_ch + 8) * 4));\n            arg_8h = arg_8h - 1;\n        } while (arg_8h != 0);\n    }\n    fcn.004171a9();\n    fcn.00416ab3(0xc, 0);\n    arg_8h = 0;\n    if (var_4h != 0) {\n        do {\n            iVar3 = fcn.00416d75();\n            fcn.0041270d(iVar3);\n            for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n                uVar5 = fcn.004162e0();\n                fcn.00413c65(uVar5);\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < var_4h);\n    }\n    while (iVar6 = fcn.004162e0(),  iVar6 != 0) {\n        if (iVar6 == 10) {\n            var_28h = 0;\n            var_24h = 0;\n            var_20h = 0;\n            var_1ch = 1;\n            var_2ch = 0x41c3e4;\n            var_14h = 0;\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 4;\n            var_18h = 0x41c3e4;\n            fcn.00416ae2(var_4h, &var_2ch, &var_18h);\n            uVar4 = 0;\n            if (var_4h != 0) {\n                do {\n                    iVar1 = *(*(arg_ch + 0xc) + uVar4 * 4);\n                    *(iVar1 + 0x54) = *(var_20h + uVar4);\n                    iVar3 = uVar4 * 4;\n                    uVar4 = uVar4 + 1;\n                    *(iVar1 + 0x50) = *(var_ch + iVar3);\n                } while (uVar4 < var_4h);\n            }\n            fcn.00412875();\n            fcn.00412875();\n        }\n        else {\n            fcn.00416444();\n        }\n    }\n    return;\n}\n",
        "token_count": 812
    },
    "00419140": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint fcn.00419140(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uchar auStack32 [16];\n    uint32_t uStack16;\n    \n    iVar1 = fcn.00419070(auStack32);\n    if (iVar1 == 0) {\n        return 1;\n    }\n    uVar2 = uStack16 >> 4 & 0xf00f;\n    uVar3 = uStack16 >> 8 & 0xff00f;\n    iVar1 = fcn.00419100(auStack32);\n    if (iVar1 == 0) {\n        if (uVar3 < 6) {\n            return 1;\n        }\n        if (uVar3 != 6) {\n            return 0;\n        }\n        bVar4 = uVar2 == 0x100c;\n    }\n    else {\n        if (iVar1 != 1) {\n            if (iVar1 != 2) {\n                return 1;\n            }\n            if (uVar3 < 6) {\n                return 1;\n            }\n            if (uVar3 != 6) {\n                return 0;\n            }\n            if (uVar2 < 0xf) {\n                return 1;\n            }\n            return 0;\n        }\n        if (uVar3 < 5) {\n            return 1;\n        }\n        if (uVar3 != 5) {\n            return 0;\n        }\n        if (uVar2 < 6) {\n            return 1;\n        }\n        bVar4 = uVar2 == 10;\n    }\n    if (bVar4) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 384
    },
    "00401f17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t fcn.00401f17(uint16_t param_1)\n\n{\n    if (param_1 - 0x30 < 10) {\n        return param_1 - 0x30;\n    }\n    if (param_1 - 0x61 < 0x1a) {\n        return param_1 - 0x57;\n    }\n    if (param_1 - 0x41 < 0x1a) {\n        return param_1 - 0x37;\n    }\n    return -1;\n}\n",
        "token_count": 118
    },
    "004026a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint fcn.004026a9(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00402678();\n    uVar2 = 0x41a634;\n    if (iVar1 == 9) {\n        uVar2 = 0x41a62c;\n    }\n    return uVar2;\n}\n",
        "token_count": 81
    },
    "00404038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00404038(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    int32_t var_10h;\n    char *var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar2 = fcn.00402678();\n    if (iVar2 == 0) {\n        var_10h = 0x41a7b8;\n        var_ch = 0x41a7b0;\n    }\n    else {\n        if (iVar2 != 9) {\n            var_10h = 0;\n            goto code_r0x00404077;\n        }\n        var_10h = 0x41a7c4;\n        var_ch = \"amd64\";\n    }\n    var_8h = 0;\ncode_r0x00404077:\n    fcn.00402b4e();\n    fcn.00402b4e();\n    fcn.00402b4e();\n    var_1h._0_1_ = 0;\n    fcn.00403f47(0, 0, &var_34h, &var_28h);\n    cVar1 = fcn.00402f19(arg_8h, var_34h, var_28h, &var_1ch);\n    if (cVar1 != '\\0') {\n        var_1h._0_1_ = 1;\n    }\n    fcn.00402c1e(&var_1ch);\n    piVar4 = &var_10h;\n    iVar2 = var_10h;\n    while (iVar2 != 0) {\n        fcn.00403f47(0, iVar2, &var_34h, &var_28h);\n        cVar1 = fcn.00402f19(arg_8h, var_34h, var_28h, &var_1ch);\n        if (cVar1 != '\\0') {\n            if (*(arg_ch + 4) != 0) {\n                fcn.00402c7e(0x41a7ac);\n            }\n            fcn.00402cb4(&var_1ch);\n            var_1h._0_1_ = 1;\n        }\n        piVar4 = piVar4 + 1;\n        iVar2 = *piVar4;\n    }\n    fcn.00403f47(*0x41e980, 0, &var_34h, &var_28h);\n    cVar1 = fcn.00402f19(arg_8h, var_34h, var_28h, &var_1ch);\n    if (cVar1 != '\\0') {\n        var_1h._0_1_ = 1;\n    }\n    fcn.00402cb4(&var_1ch);\n    piVar4 = &var_10h;\n    iVar2 = var_10h;\n    while (iVar2 != 0) {\n        fcn.00403f47(*0x41e980, iVar2, &var_34h, &var_28h);\n        cVar1 = fcn.00402f19(arg_8h, var_34h, var_28h, &var_1ch);\n        if (cVar1 != '\\0') {\n            if (*(arg_ch + 4) != 0) {\n                fcn.00402c7e(0x41a7ac);\n            }\n            fcn.00402cb4(&var_1ch);\n            var_1h._0_1_ = 1;\n        }\n        piVar4 = piVar4 + 1;\n        iVar2 = *piVar4;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_28h);\n    uVar3 = sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_34h);\n    return uVar3 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 962
    },
    "0040ca00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040ca00(uint *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint32_t uStack144;\n    int32_t aiStack132 [17];\n    int32_t aiStack64 [16];\n    \n    uVar5 = 0;\n    aiStack132[2] = 0;\n    aiStack132[3] = 0;\n    aiStack132[4] = 0;\n    aiStack132[5] = 0;\n    aiStack132[6] = 0;\n    aiStack132[7] = 0;\n    aiStack132[8] = 0;\n    aiStack132[9] = 0;\n    aiStack132[10] = 0;\n    aiStack132[11] = 0;\n    aiStack132[12] = 0;\n    aiStack132[13] = 0;\n    aiStack132[14] = 0;\n    aiStack132[15] = 0;\n    aiStack132[16] = 0;\n    uVar4 = 0;\n    puVar6 = param_1 + 0x20;\n    do {\n        if (0xf < *(uVar4 + param_2)) {\n            return 0;\n        }\n        aiStack132[*(uVar4 + param_2) + 1] = aiStack132[*(uVar4 + param_2) + 1] + 1;\n        *puVar6 = 0xffffffff;\n        uVar4 = uVar4 + 1;\n        puVar6 = puVar6 + 1;\n    } while (uVar4 < 0x120);\n    aiStack132[1] = 0;\n    *param_1 = 0;\n    param_1[0x10] = 0;\n    uVar4 = 0;\n    uStack144 = 0;\n    iVar7 = 1;\n    do {\n        uVar4 = uVar4 + (aiStack132[iVar7 + 1] << (0xfU - iVar7 & 0x1f));\n        if (0x8000 < uVar4) {\n            return uVar4 & 0xffffff00;\n        }\n        uVar1 = uVar4;\n        if (iVar7 == 0xf) {\n            uVar1 = 0x8000;\n        }\n        iVar2 = aiStack132[iVar7];\n        param_1[iVar7] = uVar1;\n        param_1[iVar7 + 0x10] = param_1[iVar7 + 0xf] + iVar2;\n        aiStack64[iVar7] = param_1[iVar7 + 0xf] + iVar2;\n        if ((iVar7 < 10) && (uVar5 < uVar1 >> 6)) {\n            iVar2 = (uVar1 >> 6) - uVar5;\n            sub.MSVCRT.dll_memset(uVar5 + 0x500 + param_1, iVar7, iVar2);\n            uVar5 = uStack144 + iVar2;\n            uStack144 = uVar5;\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x10);\n    iVar7 = 1;\n    puVar3 = param_2 + 1;\n    do {\n        uVar5 = puVar3[-1];\n        if (uVar5 != 0) {\n            iVar2 = aiStack64[uVar5];\n            param_1[iVar2 + 0x20] = puVar3 + (-1 - param_2);\n            aiStack64[uVar5] = iVar2 + 1;\n        }\n        uVar5 = *puVar3;\n        if (uVar5 != 0) {\n            iVar2 = aiStack64[uVar5];\n            param_1[iVar2 + 0x20] = iVar7;\n            aiStack64[uVar5] = iVar2 + 1;\n        }\n        uVar5 = puVar3[1];\n        if (uVar5 != 0) {\n            iVar2 = aiStack64[uVar5];\n            param_1[iVar2 + 0x20] = puVar3 + (1 - param_2);\n            aiStack64[uVar5] = iVar2 + 1;\n        }\n        uVar5 = puVar3[2];\n        if (uVar5 != 0) {\n            iVar2 = aiStack64[uVar5];\n            param_1[iVar2 + 0x20] = puVar3 + (2 - param_2);\n            aiStack64[uVar5] = iVar2 + 1;\n        }\n        uVar5 = puVar3[3];\n        if (uVar5 != 0) {\n            iVar2 = aiStack64[uVar5];\n            param_1[iVar2 + 0x20] = puVar3 + (3 - param_2);\n            aiStack64[uVar5] = iVar2 + 1;\n        }\n        uVar5 = puVar3[4];\n        if (uVar5 != 0) {\n            iVar2 = aiStack64[uVar5];\n            param_1[iVar2 + 0x20] = puVar3 + (4 - param_2);\n            aiStack64[uVar5] = iVar2 + 1;\n        }\n        puVar3 = puVar3 + 6;\n        iVar7 = iVar7 + 6;\n    } while (puVar3 + (-1 - param_2) < 0x120);\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 1271
    },
    "0040cc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040cc60(uint *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t aiStack132 [17];\n    int32_t aiStack64 [16];\n    \n    uVar6 = 0;\n    aiStack132[2] = 0;\n    aiStack132[3] = 0;\n    aiStack132[4] = 0;\n    aiStack132[5] = 0;\n    aiStack132[6] = 0;\n    aiStack132[7] = 0;\n    aiStack132[8] = 0;\n    aiStack132[9] = 0;\n    aiStack132[10] = 0;\n    aiStack132[11] = 0;\n    aiStack132[12] = 0;\n    aiStack132[13] = 0;\n    aiStack132[14] = 0;\n    aiStack132[15] = 0;\n    aiStack132[16] = 0;\n    uVar4 = 0;\n    puVar5 = param_1 + 0x20;\n    do {\n        if (0xf < *(uVar4 + param_2)) {\n            return 0;\n        }\n        aiStack132[*(uVar4 + param_2) + 1] = aiStack132[*(uVar4 + param_2) + 1] + 1;\n        *puVar5 = 0xffffffff;\n        uVar4 = uVar4 + 1;\n        puVar5 = puVar5 + 1;\n    } while (uVar4 < 0x20);\n    aiStack132[1] = 0;\n    *param_1 = 0;\n    param_1[0x10] = 0;\n    uVar4 = 0;\n    iVar7 = 1;\n    do {\n        uVar1 = aiStack132[iVar7 + 1] << (0xfU - iVar7 & 0x1f);\n        uVar4 = uVar4 + uVar1;\n        if (0x8000 < uVar4) {\n            return uVar1 & 0xffffff00;\n        }\n        uVar1 = 0x8000;\n        if (iVar7 != 0xf) {\n            uVar1 = uVar4;\n        }\n        iVar2 = aiStack132[iVar7];\n        param_1[iVar7] = uVar1;\n        param_1[iVar7 + 0x10] = param_1[iVar7 + 0xf] + iVar2;\n        aiStack64[iVar7] = param_1[iVar7 + 0xf] + iVar2;\n        if ((iVar7 < 10) && (uVar6 < uVar1 >> 6)) {\n            iVar2 = (uVar1 >> 6) - uVar6;\n            sub.MSVCRT.dll_memset(param_1 + uVar6 + 0x100, iVar7, iVar2);\n            uVar6 = uVar6 + iVar2;\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x10);\n    iVar7 = 1;\n    puVar3 = param_2 + 1;\n    do {\n        uVar4 = puVar3[-1];\n        if (uVar4 != 0) {\n            iVar2 = aiStack64[uVar4];\n            param_1[iVar2 + 0x20] = puVar3 + (-1 - param_2);\n            aiStack64[uVar4] = iVar2 + 1;\n        }\n        uVar4 = *puVar3;\n        if (uVar4 != 0) {\n            iVar2 = aiStack64[uVar4];\n            param_1[iVar2 + 0x20] = iVar7;\n            aiStack64[uVar4] = iVar2 + 1;\n        }\n        uVar4 = puVar3[1];\n        if (uVar4 != 0) {\n            iVar2 = aiStack64[uVar4];\n            param_1[iVar2 + 0x20] = puVar3 + (1 - param_2);\n            aiStack64[uVar4] = iVar2 + 1;\n        }\n        uVar4 = puVar3[2];\n        if (uVar4 != 0) {\n            iVar2 = aiStack64[uVar4];\n            param_1[iVar2 + 0x20] = puVar3 + (2 - param_2);\n            aiStack64[uVar4] = iVar2 + 1;\n        }\n        puVar3 = puVar3 + 4;\n        iVar7 = iVar7 + 4;\n    } while (puVar3 + (-1 - param_2) < 0x20);\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 1106
    },
    "0040ce50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040ce50(uint *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t auStack132 [17];\n    int32_t aiStack64 [16];\n    \n    uVar5 = 0;\n    auStack132[2] = 0;\n    auStack132[3] = 0;\n    auStack132[4] = 0;\n    auStack132[5] = 0;\n    auStack132[6] = 0;\n    auStack132[7] = 0;\n    auStack132[8] = 0;\n    auStack132[9] = 0;\n    auStack132[10] = 0;\n    auStack132[11] = 0;\n    auStack132[12] = 0;\n    auStack132[13] = 0;\n    auStack132[14] = 0;\n    auStack132[15] = 0;\n    auStack132[16] = 0;\n    uVar3 = 0;\n    puVar4 = param_1 + 0x20;\n    do {\n        if (0xf < *(uVar3 + param_2)) {\n            return 0;\n        }\n        auStack132[*(uVar3 + param_2) + 1] = auStack132[*(uVar3 + param_2) + 1] + 1;\n        *puVar4 = 0xffffffff;\n        uVar3 = uVar3 + 1;\n        puVar4 = puVar4 + 1;\n    } while (uVar3 < 0x13);\n    auStack132[1] = 0;\n    *param_1 = 0;\n    param_1[0x10] = 0;\n    auStack132[0] = 0;\n    iVar6 = 1;\n    do {\n        uVar3 = auStack132[iVar6 + 1] << (0xfU - iVar6 & 0x1f);\n        auStack132[0] = auStack132[0] + uVar3;\n        if (0x8000 < auStack132[0]) {\n            return uVar3 & 0xffffff00;\n        }\n        uVar3 = 0x8000;\n        if (iVar6 != 0xf) {\n            uVar3 = auStack132[0];\n        }\n        uVar1 = auStack132[iVar6];\n        param_1[iVar6] = uVar3;\n        param_1[iVar6 + 0x10] = param_1[iVar6 + 0xf] + uVar1;\n        aiStack64[iVar6] = param_1[iVar6 + 0xf] + uVar1;\n        if ((iVar6 < 10) && (uVar5 < uVar3 >> 6)) {\n            iVar2 = (uVar3 >> 6) - uVar5;\n            sub.MSVCRT.dll_memset(param_1 + uVar5 + 0xcc, iVar6, iVar2);\n            uVar5 = uVar5 + iVar2;\n        }\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x10);\n    uVar3 = 0;\n    do {\n        uVar5 = *(uVar3 + param_2);\n        if (uVar5 != 0) {\n            iVar6 = aiStack64[uVar5];\n            param_1[iVar6 + 0x20] = uVar3;\n            aiStack64[uVar5] = iVar6 + 1;\n        }\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 0x13);\n    return CONCAT31(uVar3 >> 8, 1);\n}\n",
        "token_count": 865
    },
    "00404f17": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f17(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint16_t *puVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = fcn.004029db(arg_8h, 0x41b554, 0);\n    if (iVar3 != 0) {\n        fcn.00401403(iVar3);\n        uVar4 = fcn.00402490(4);\n        fcn.00402aed(uVar4);\n        *0x41e9b8 = *0x41ea0c;\n        fcn.00401403(iVar3);\n        uVar4 = fcn.00402490(0x29);\n        fcn.00402aed(uVar4);\n        *0x41e9b4 = *0x41e9dc;\n        *0x41e9b0 = iVar3;\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"ErrorTitle\", 0);\n    if (iVar3 != 0) {\n        *0x41e9b8 = iVar3;\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"WarningTitle\", 0);\n    if (iVar3 != 0) {\n        *0x41e9b4 = iVar3;\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"ExtractTitle\", 0);\n    if (iVar3 != 0) {\n        *0x41e9ac = iVar3;\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"Progress\", 0);\n    if (iVar3 != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(iVar3, 0x41b81c);\n        if (iVar3 == 0) {\n            *0x41e9c4 = 2;\n        }\n    }\n    puVar5 = fcn.004029db(arg_8h, L\"GUIMode\", 0);\n    if (((puVar5 != NULL) && (uVar1 = *puVar5,  0x2f < uVar1)) && (uVar1 < 0x33)) {\n        *0x41e9c4 = uVar1 - 0x30;\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"OverwriteMode\", 0);\n    if (iVar3 != 0) {\n        fcn.0040482e(iVar3);\n    }\n    var_4h = 0;\n    iVar3 = fcn.004029db(arg_8h, L\"GUIFlags\", &var_4h);\n    while (iVar3 != 0) {\n        var_4h = var_4h + 1;\n        fcn.004047d5(iVar3);\n        iVar3 = fcn.004029db(arg_8h, L\"GUIFlags\", &var_4h);\n    }\n    var_4h = 0;\n    iVar3 = fcn.004029db(arg_8h, L\"MiscFlags\", &var_4h);\n    while (iVar3 != 0) {\n        var_4h = var_4h + 1;\n        fcn.00404806(iVar3);\n        iVar3 = fcn.004029db(arg_8h, L\"MiscFlags\", &var_4h);\n    }\n    *0x41e99c = fcn.004029db(arg_8h, L\"ExtractCancelText\", 0);\n    *0x41e998 = fcn.004029db(arg_8h, L\"ExtractDialogText\", 0);\n    iVar3 = fcn.004029db(arg_8h, L\"ExtractDialogWidth\", 0);\n    pcVar2 = _sym.imp.MSVCRT.dll__wtol;\n    if (iVar3 != 0) {\n        *0x41e3a8 = (*_sym.imp.MSVCRT.dll__wtol)(iVar3);\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"ExtractPathWidth\", 0);\n    if (iVar3 != 0) {\n        *0x41e3ac = (*pcVar2)(iVar3);\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"ExtractPathTitle\", 0);\n    if (iVar3 != 0) {\n        *0x41e9a8 = iVar3;\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"ExtractPathText\", 0);\n    if (iVar3 != 0) {\n        *0x41e9a4 = iVar3;\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"CancelPrompt\", 0);\n    if (iVar3 != 0) {\n        *0x41e9a0 = iVar3;\n    }\n    *0x41e9bc = fcn.004029db(arg_8h, L\"PasswordTitle\", 0);\n    if (*0x41e9bc == 0) {\n        *0x41e9bc = *0x41e9b0;\n    }\n    iVar3 = fcn.004029db(arg_8h, L\"PasswordText\", 0);\n    if (iVar3 == 0) {\n        iVar3 = fcn.00402490(0x2c);\n    }\n    *0x41e9c0 = iVar3;\n    return;\n}\n",
        "token_count": 1261
    },
    "004036ff": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.004036ff(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040331e(param_1);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar1 == 5) && ((*0x41e9d0 & 8) != 0)) {\n        return 1;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 110
    },
    "00405acb": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405acb(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    \n    piVar1 = arg_8h;\n    arg_10h_00 = arg_ch[1];\n    arg_8h_00 = 0;\n    if (0 < arg_8h[1]) {\n        arg_8h = arg_10h_00 * 2;\n        do {\n            if (*(*piVar1 + arg_8h_00 * 2) == 0x25) {\n                iVar2 = fcn.00401f7d(*piVar1 + 2 + arg_8h_00 * 2, *arg_ch, arg_10h_00);\n                if ((iVar2 == 0) && (*(*piVar1 + 2 + arg_8h) == 0x25)) {\n                    fcn.00402d03(arg_8h_00, arg_10h_00 + 2);\n                    fcn.0040362e(arg_8h_00, arg_10h);\n                }\n            }\n            arg_8h = arg_8h + 2;\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < piVar1[1]);\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "0040aed0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b081)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040aed0(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    bool bVar5;\n    char acStack128 [8];\n    uint32_t uStack120;\n    int32_t iStack116;\n    ulong uStack112;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    char acStack64 [64];\n    \n    if (*param_1 == 0x3f) {\n        uVar1 = 0;\n        if (param_1[1] != 0) {\n            do {\n                *(param_1 + uVar1 + 0x24) = *(param_1 + uVar1 + 8);\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < param_1[1]);\n        }\n        uVar2 = 0;\n        if (param_1[7] != 0) {\n            do {\n                if (0x1f < uVar1) {\n                    return;\n                }\n                *(uVar1 + 0x24 + param_1) = *(uVar2 + param_1[8]);\n                uVar2 = uVar2 + 1;\n                uVar1 = uVar1 + 1;\n            } while (uVar2 < param_1[7]);\n        }\n        if (uVar1 < 0x20) {\n            sub.MSVCRT.dll_memset(uVar1 + 0x24 + param_1, 0, 0x20 - uVar1);\n            return;\n        }\n    }\n    else {\n        uStack104 = 0x6a09e667;\n        uStack100 = 0xbb67ae85;\n        uStack96 = 0x3c6ef372;\n        uStack92 = 0xa54ff53a;\n        uStack88 = 0x510e527f;\n        uStack84 = 0x9b05688c;\n        uStack80 = 0x1f83d9ab;\n        uStack76 = 0x5be0cd19;\n        uStack72 = 0;\n        iStack68 = 0;\n        uStack112 = fcn.004193c0();\n        acStack128[0] = '\\0';\n        acStack128[1] = 0;\n        acStack128[2] = 0;\n        acStack128[3] = 0;\n        acStack128[4] = 0;\n        acStack128[5] = 0;\n        acStack128[6] = 0;\n        acStack128[7] = 0;\n        uStack120 = 0;\n        iStack116 = 0;\n        if (uStack112 != 0) {\n            do {\n                fcn.0040abc0(&uStack104, param_1 + 2, param_1[1]);\n                fcn.0040abc0(&uStack104, param_1[8], param_1[7]);\n                iVar3 = 8;\n                pcVar4 = acStack128;\n                uVar1 = uStack72 & 0x3f;\n                do {\n                    acStack64[uVar1] = *pcVar4;\n                    uVar1 = uVar1 + 1;\n                    pcVar4 = pcVar4 + 1;\n                    bVar5 = 0xfffffffe < uStack72;\n                    uStack72 = uStack72 + 1;\n                    iStack68 = iStack68 + bVar5;\n                    iVar3 = iVar3 + -1;\n                    if (uVar1 == 0x40) {\n                        uVar1 = 0;\n                        fcn.0040ab00();\n                    }\n                } while (iVar3 != 0);\n                iVar3 = 0;\n                do {\n                    pcVar4 = acStack128 + iVar3;\n                    *pcVar4 = *pcVar4 + '\\x01';\n                    if (*pcVar4 != '\\0') break;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < 8);\n                bVar5 = 0xfffffffe < uStack120;\n                uStack120 = uStack120 + 1;\n                iStack116 = iStack116 + bVar5;\n            } while (CONCAT44(iStack116, uStack120) < uStack112);\n        }\n        fcn.0040ac10(&uStack104, param_1 + 9);\n    }\n    return;\n}\n",
        "token_count": 1073
    },
    "00410e60": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.00410e60(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    char cVar7;\n    int32_t iVar8;\n    int32_t *unaff_ESI;\n    int32_t *piVar9;\n    uint32_t uStack8;\n    int32_t *piStack4;\n    \n    sub.MSVCRT.dll_memset(unaff_ESI + 0x3c, 0, 0x98);\n    iVar8 = unaff_ESI[10] + unaff_ESI[0x11] + unaff_ESI[0xc];\n    unaff_ESI[0xf] = unaff_ESI[0x11] + unaff_ESI[0xc];\n    iVar2 = iVar8 + ((unaff_ESI[10] >> 3) / 0xc) * -0x54;\n    unaff_ESI[0x10] = iVar2;\n    unaff_ESI[0xd] = iVar2;\n    uVar6 = unaff_ESI[6];\n    unaff_ESI[0xe] = iVar8;\n    unaff_ESI[0xb] = 0;\n    unaff_ESI[3] = uVar6;\n    if (0xb < uVar6) {\n        uVar6 = 0xc;\n    }\n    unaff_ESI[9] = -1 - uVar6;\n    unaff_ESI[8] = -1 - uVar6;\n    iVar2 = iVar8 + -0xc;\n    *unaff_ESI = iVar2;\n    unaff_ESI[0xe] = iVar2;\n    unaff_ESI[1] = iVar2;\n    unaff_ESI[5] = 0;\n    *(iVar8 + -4) = 0;\n    **unaff_ESI = 0x100;\n    *(*unaff_ESI + 2) = 0x101;\n    unaff_ESI[2] = unaff_ESI[0xd];\n    unaff_ESI[0xd] = unaff_ESI[0xd] + 0x600;\n    *(*unaff_ESI + 4) = unaff_ESI[2];\n    cVar7 = '\\0';\n    uVar6 = 0;\n    do {\n        pcVar3 = unaff_ESI[2] + uVar6;\n        *pcVar3 = cVar7;\n        uVar6 = uVar6 + 6;\n        cVar7 = cVar7 + '\\x01';\n        pcVar3[1] = '\\x01';\n        *(pcVar3 + 2) = 0;\n        *(pcVar3 + 4) = 0;\n    } while (uVar6 < 0x600);\n    piStack4 = unaff_ESI + 0x2b3;\n    uStack8 = 0;\n    do {\n        uVar6 = 0;\n        piVar9 = piStack4;\n        do {\n            uVar1 = *(uVar6 + 0x41c1e0);\n            uVar4 = 0;\n            do {\n                *(piVar9 + uVar4 * 2) = 0x4000 - uVar1 / (uStack8 + 2);\n                uVar4 = uVar4 + 8;\n            } while (uVar4 < 0x40);\n            uVar6 = uVar6 + 2;\n            piVar9 = piVar9 + 2;\n        } while (uVar6 < 0x10);\n        piStack4 = piStack4 + 0x20;\n        uStack8 = uStack8 + 1;\n    } while (uStack8 < 0x80);\n    uVar6 = 0;\n    puVar5 = unaff_ESI + 0x48f;\n    do {\n        iVar8 = 0x10;\n        do {\n            puVar5[-1] = 3;\n            *(puVar5 + -3) = (uVar6 * 5 + 10) * 8;\n            *puVar5 = 4;\n            puVar5 = puVar5 + 4;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 0x19);\n    return;\n}\n",
        "token_count": 990
    },
    "0040abc0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0040abc0(int32_t param_1, uchar *param_2, int32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *(param_1 + 0x20) & 0x3f;\n    if (param_3 != 0) {\n        do {\n            *(param_1 + 0x28 + uVar3) = *param_2;\n            uVar3 = uVar3 + 1;\n            param_2 = param_2 + 1;\n            puVar1 = param_1 + 0x20;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 + 1;\n            *(param_1 + 0x24) = *(param_1 + 0x24) + (0xfffffffe < uVar2);\n            param_3 = param_3 + -1;\n            if (uVar3 == 0x40) {\n                uVar3 = 0;\n                fcn.0040ab00();\n            }\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0040ac10": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0040ac10(uint *param_1, uchar *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = param_1[8];\n    iVar2 = param_1[9];\n    uVar3 = iVar2 << 3 | uVar1 >> 0x1d;\n    uVar4 = param_1[8] & 0x3f;\n    *(uVar4 + 0x28 + param_1) = 0x80;\n    while (uVar4 + 1 != 0x38) {\n        uVar4 = uVar4 + 1 & 0x3f;\n        if (uVar4 == 0) {\n            fcn.0040ab00();\n        }\n        *(param_1 + uVar4 + 0x28) = 0;\n    }\n    *(uVar4 + 0x29 + param_1) = (iVar2 << 3) >> 0x18;\n    *(uVar4 + 0x2a + param_1) = (uVar3 << 8) >> 0x18;\n    *(uVar4 + 0x2b + param_1) = (uVar3 << 0x10) >> 0x18;\n    *(uVar4 + 0x2c + param_1) = uVar3;\n    *(uVar4 + 0x2d + param_1) = uVar1 * 8 >> 0x18;\n    *(uVar4 + 0x2f + param_1) = (uVar1 << 0x13) >> 0x18;\n    *(uVar4 + 0x2e + param_1) = (uVar1 << 0xb) >> 0x18;\n    *(uVar4 + 0x30 + param_1) = (uVar1 << 0x1b) >> 0x18;\n    fcn.0040ab00();\n    *param_2 = *(param_1 + 3);\n    param_2[1] = *(param_1 + 2);\n    param_2[2] = *param_1 >> 8;\n    param_2[3] = *param_1;\n    param_2[4] = *(param_1 + 7);\n    param_2[5] = *(param_1 + 6);\n    param_2[6] = param_1[1] >> 8;\n    param_2[7] = *(param_1 + 1);\n    param_2[8] = *(param_1 + 0xb);\n    param_2[9] = *(param_1 + 10);\n    param_2[10] = param_1[2] >> 8;\n    param_2[0xb] = *(param_1 + 2);\n    param_2[0xc] = *(param_1 + 0xf);\n    param_2[0xd] = *(param_1 + 0xe);\n    param_2[0xe] = param_1[3] >> 8;\n    param_2[0xf] = *(param_1 + 3);\n    param_2[0x10] = *(param_1 + 0x13);\n    param_2[0x11] = *(param_1 + 0x12);\n    param_2[0x12] = param_1[4] >> 8;\n    param_2[0x13] = *(param_1 + 4);\n    param_2[0x14] = *(param_1 + 0x17);\n    param_2[0x15] = *(param_1 + 0x16);\n    param_2[0x16] = param_1[5] >> 8;\n    param_2[0x17] = *(param_1 + 5);\n    param_2[0x18] = *(param_1 + 0x1b);\n    param_2[0x19] = *(param_1 + 0x1a);\n    param_2[0x1a] = param_1[6] >> 8;\n    param_2[0x1b] = *(param_1 + 6);\n    param_2[0x1c] = *(param_1 + 0x1f);\n    param_2[0x1d] = *(param_1 + 0x1e);\n    param_2[0x1e] = param_1[7] >> 8;\n    param_2[0x1f] = *(param_1 + 7);\n    *param_1 = 0x6a09e667;\n    param_1[1] = 0xbb67ae85;\n    param_1[2] = 0x3c6ef372;\n    param_1[3] = 0xa54ff53a;\n    param_1[4] = 0x510e527f;\n    param_1[5] = 0x9b05688c;\n    param_1[6] = 0x1f83d9ab;\n    param_1[7] = 0x5be0cd19;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    return;\n}\n",
        "token_count": 1206
    },
    "0040d370": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040d370(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    piVar1 = param_1 + 0x38;\n    do {\n        uVar2 = fcn.0040d1c0();\n        if (uVar2 < 0x10) {\n            *(iVar4 + param_2) = uVar2;\n            iVar4 = iVar4 + 1;\n        }\n        else {\n            if (0x12 < uVar2) {\n                return 0;\n            }\n            if (uVar2 == 0x10) {\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                fcn.0040d080();\n                uVar2 = *(param_1 + 0x68);\n                *piVar1 = *piVar1 + 2;\n                *(param_1 + 0x68) = uVar2 >> 2;\n                iVar3 = (uVar2 & 3) + 3;\n                if (iVar3 != 0) {\n                    do {\n                        if (param_3 <= iVar4) {\n                            return 1;\n                        }\n                        *(iVar4 + param_2) = *(iVar4 + -1 + param_2);\n                        iVar3 = iVar3 + -1;\n                        iVar4 = iVar4 + 1;\n                    } while (0 < iVar3);\n                }\n            }\n            else {\n                if (uVar2 == 0x11) {\n                    fcn.0040d080();\n                    uVar2 = *(param_1 + 0x68);\n                    *piVar1 = *piVar1 + 3;\n                    *(param_1 + 0x68) = uVar2 >> 3;\n                    iVar3 = (uVar2 & 7) + 3;\n                }\n                else {\n                    fcn.0040d080();\n                    uVar2 = *(param_1 + 0x68);\n                    *piVar1 = *piVar1 + 7;\n                    *(param_1 + 0x68) = uVar2 >> 7;\n                    iVar3 = (uVar2 & 0x7f) + 0xb;\n                }\n                if (iVar3 != 0) {\n                    do {\n                        if (param_3 <= iVar4) {\n                            return 1;\n                        }\n                        *(iVar4 + param_2) = 0;\n                        iVar3 = iVar3 + -1;\n                        iVar4 = iVar4 + 1;\n                    } while (0 < iVar3);\n                }\n            }\n        }\n    } while (iVar4 < param_3);\n    return 1;\n}\n",
        "token_count": 623
    },
    "00409dc0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409dc0(uint32_t *param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    uVar4 = in_EAX[4] ^ *param_1;\n    uVar6 = in_EAX[6] ^ param_1[2];\n    iVar1 = *in_EAX;\n    uVar8 = in_EAX[5] ^ param_1[1];\n    uVar3 = in_EAX[7] ^ param_1[3];\n    uVar7 = *((uVar3 >> 8 & 0xff) * 4 + 0x41ff88) ^ *((uVar4 >> 0x10 & 0xff) * 4 + 0x420388) ^\n            *((uVar8 >> 0x18) * 4 + 0x420788) ^ *((uVar6 & 0xff) * 4 + 0x41fb88) ^ in_EAX[10];\n    uVar9 = *((uVar6 >> 0x10 & 0xff) * 4 + 0x420388) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x41ff88) ^\n            *((uVar3 >> 0x18) * 4 + 0x420788) ^ *((uVar4 & 0xff) * 4 + 0x41fb88) ^ in_EAX[8];\n    uVar5 = *((uVar8 >> 0x10 & 0xff) * 4 + 0x420388) ^ *((uVar4 >> 8 & 0xff) * 4 + 0x41ff88) ^\n            *((uVar6 >> 0x18) * 4 + 0x420788) ^ *((uVar3 & 0xff) * 4 + 0x41fb88) ^ in_EAX[0xb];\n    uVar3 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x420388) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x41ff88) ^\n            *((uVar4 >> 0x18) * 4 + 0x420788) ^ *((uVar8 & 0xff) * 4 + 0x41fb88) ^ in_EAX[9];\n    puVar2 = in_EAX + 8;\n    while (iVar1 = iVar1 + -1,  iVar1 != 0) {\n        uVar6 = *((uVar5 >> 8 & 0xff) * 4 + 0x41ff88) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x420388) ^\n                *((uVar3 >> 0x18) * 4 + 0x420788) ^ *((uVar7 & 0xff) * 4 + 0x41fb88) ^ puVar2[6];\n        uVar8 = *((uVar3 >> 8 & 0xff) * 4 + 0x41ff88) ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x420388) ^\n                *((uVar5 >> 0x18) * 4 + 0x420788) ^ *((uVar9 & 0xff) * 4 + 0x41fb88) ^ puVar2[4];\n        uVar4 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x420388) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x41ff88) ^\n                *((uVar7 >> 0x18) * 4 + 0x420788) ^ *((uVar5 & 0xff) * 4 + 0x41fb88) ^ puVar2[7];\n        uVar3 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x420388) ^ *((uVar7 >> 8 & 0xff) * 4 + 0x41ff88) ^\n                *((uVar9 >> 0x18) * 4 + 0x420788) ^ *((uVar3 & 0xff) * 4 + 0x41fb88) ^ puVar2[5];\n        uVar7 = *((uVar4 >> 8 & 0xff) * 4 + 0x41ff88) ^ *((uVar8 >> 0x10 & 0xff) * 4 + 0x420388) ^\n                *((uVar3 >> 0x18) * 4 + 0x420788) ^ *((uVar6 & 0xff) * 4 + 0x41fb88) ^ puVar2[10];\n        uVar9 = *((uVar6 >> 0x10 & 0xff) * 4 + 0x420388) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x41ff88) ^\n                *((uVar4 >> 0x18) * 4 + 0x420788) ^ *((uVar8 & 0xff) * 4 + 0x41fb88) ^ puVar2[8];\n        uVar5 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x420388) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x41ff88) ^\n                *((uVar6 >> 0x18) * 4 + 0x420788) ^ *((uVar4 & 0xff) * 4 + 0x41fb88) ^ puVar2[0xb];\n        uVar3 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x420388) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x41ff88) ^\n                *((uVar8 >> 0x18) * 4 + 0x420788) ^ *((uVar3 & 0xff) * 4 + 0x41fb88) ^ puVar2[9];\n        puVar2 = puVar2 + 8;\n    }\n    *param_2 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar5 >> 0x18], str.cw[uVar7 >> 0x10 & 0xff]), \n                                 str.cw[uVar3 >> 8 & 0xff]), str.cw[uVar9 & 0xff]) ^ puVar2[4];\n    param_2[1] = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar9 >> 0x18], str.cw[uVar5 >> 0x10 & 0xff]), \n                                   str.cw[uVar7 >> 8 & 0xff]), str.cw[uVar3 & 0xff]) ^ puVar2[5];\n    param_2[2] = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 >> 0x18], str.cw[uVar9 >> 0x10 & 0xff]), \n                                   str.cw[uVar5 >> 8 & 0xff]), str.cw[uVar7 & 0xff]) ^ puVar2[6];\n    param_2[3] = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar7 >> 0x18], str.cw[uVar3 >> 0x10 & 0xff]), \n                                   str.cw[uVar9 >> 8 & 0xff]), str.cw[uVar5 & 0xff]) ^ puVar2[7];\n    return;\n}\n",
        "token_count": 1789
    },
    "0040a260": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040a260(uint32_t *param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    iVar1 = *in_EAX;\n    uVar4 = in_EAX[iVar1 * 8 + 6] ^ param_1[2];\n    uVar6 = in_EAX[iVar1 * 8 + 4] ^ *param_1;\n    uVar3 = in_EAX[iVar1 * 8 + 7] ^ param_1[3];\n    uVar8 = in_EAX[iVar1 * 8 + 5] ^ param_1[1];\n    uVar7 = *((uVar3 >> 8 & 0xff) * 4 + 0x41ef80) ^ *((uVar4 >> 0x10 & 0xff) * 4 + 0x41f380) ^\n            *((uVar8 >> 0x18) * 4 + 0x41f780) ^ *((uVar6 & 0xff) * 4 + 0x41eb80) ^ in_EAX[iVar1 * 8];\n    uVar9 = *((uVar8 >> 8 & 0xff) * 4 + 0x41ef80) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x41f380) ^\n            *((uVar3 >> 0x18) * 4 + 0x41f780) ^ *((uVar4 & 0xff) * 4 + 0x41eb80) ^ in_EAX[iVar1 * 8 + 2];\n    uVar5 = *((uVar4 >> 8 & 0xff) * 4 + 0x41ef80) ^ *((uVar8 >> 0x10 & 0xff) * 4 + 0x41f380) ^\n            *((uVar6 >> 0x18) * 4 + 0x41f780) ^ *((uVar3 & 0xff) * 4 + 0x41eb80) ^ in_EAX[iVar1 * 8 + 3];\n    uVar3 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x41f380) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x41ef80) ^\n            *((uVar4 >> 0x18) * 4 + 0x41f780) ^ *((uVar8 & 0xff) * 4 + 0x41eb80) ^ in_EAX[iVar1 * 8 + 1];\n    puVar2 = in_EAX + iVar1 * 8 + -4;\n    while (iVar1 = iVar1 + -1,  iVar1 != 0) {\n        uVar6 = *((uVar5 >> 8 & 0xff) * 4 + 0x41ef80) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x41f380) ^\n                *((uVar3 >> 0x18) * 4 + 0x41f780) ^ *((uVar7 & 0xff) * 4 + 0x41eb80) ^ *puVar2;\n        uVar8 = *((uVar3 >> 8 & 0xff) * 4 + 0x41ef80) ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x41f380) ^\n                *((uVar5 >> 0x18) * 4 + 0x41f780) ^ *((uVar9 & 0xff) * 4 + 0x41eb80) ^ puVar2[2];\n        uVar4 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x41f380) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x41ef80) ^\n                *((uVar7 >> 0x18) * 4 + 0x41f780) ^ *((uVar5 & 0xff) * 4 + 0x41eb80) ^ puVar2[3];\n        uVar3 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x41f380) ^ *((uVar7 >> 8 & 0xff) * 4 + 0x41ef80) ^\n                *((uVar9 >> 0x18) * 4 + 0x41f780) ^ *((uVar3 & 0xff) * 4 + 0x41eb80) ^ puVar2[1];\n        uVar7 = *((uVar4 >> 8 & 0xff) * 4 + 0x41ef80) ^ *((uVar8 >> 0x10 & 0xff) * 4 + 0x41f380) ^\n                *((uVar3 >> 0x18) * 4 + 0x41f780) ^ *((uVar6 & 0xff) * 4 + 0x41eb80) ^ puVar2[-4];\n        uVar9 = *((uVar3 >> 8 & 0xff) * 4 + 0x41ef80) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x41f380) ^\n                *((uVar4 >> 0x18) * 4 + 0x41f780) ^ *((uVar8 & 0xff) * 4 + 0x41eb80) ^ puVar2[-2];\n        uVar5 = *((uVar8 >> 8 & 0xff) * 4 + 0x41ef80) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x41f380) ^\n                *((uVar6 >> 0x18) * 4 + 0x41f780) ^ *((uVar4 & 0xff) * 4 + 0x41eb80) ^ puVar2[-1];\n        uVar3 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x41f380) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x41ef80) ^\n                *((uVar8 >> 0x18) * 4 + 0x41f780) ^ *((uVar3 & 0xff) * 4 + 0x41eb80) ^ puVar2[-3];\n        puVar2 = puVar2 + -8;\n    }\n    *param_2 = CONCAT31(CONCAT21(CONCAT11(*((uVar3 >> 0x18) + 0x41ea80), *((uVar9 >> 0x10 & 0xff) + 0x41ea80)), \n                                 *((uVar5 >> 8 & 0xff) + 0x41ea80)), *((uVar7 & 0xff) + 0x41ea80)) ^ *puVar2;\n    param_2[1] = CONCAT31(CONCAT21(CONCAT11(*((uVar9 >> 0x18) + 0x41ea80), *((uVar5 >> 0x10 & 0xff) + 0x41ea80)), \n                                   *((uVar7 >> 8 & 0xff) + 0x41ea80)), *((uVar3 & 0xff) + 0x41ea80)) ^ puVar2[1];\n    param_2[2] = CONCAT31(CONCAT21(CONCAT11(*((uVar5 >> 0x18) + 0x41ea80), *((uVar7 >> 0x10 & 0xff) + 0x41ea80)), \n                                   *((uVar3 >> 8 & 0xff) + 0x41ea80)), *((uVar9 & 0xff) + 0x41ea80)) ^ puVar2[2];\n    param_2[3] = CONCAT31(CONCAT21(CONCAT11(*((uVar7 >> 0x18) + 0x41ea80), *((uVar3 >> 0x10 & 0xff) + 0x41ea80)), \n                                   *((uVar9 >> 8 & 0xff) + 0x41ea80)), *((uVar5 & 0xff) + 0x41ea80)) ^ puVar2[3];\n    return;\n}\n",
        "token_count": 1960
    },
    "0040ab00": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ab00(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    uint auStack64 [16];\n    \n    uVar4 = 0;\n    puVar3 = param_2 + 0x29;\n    do {\n        uVar1 = puVar3[4];\n        auStack64[uVar4] = CONCAT31(CONCAT21(CONCAT11(puVar3[-1], *puVar3), puVar3[1]), puVar3[2]);\n        uVar2 = puVar3[8];\n        auStack64[uVar4 + 1] = CONCAT31(CONCAT21(CONCAT11(puVar3[3], uVar1), puVar3[5]), puVar3[6]);\n        uVar1 = puVar3[0xc];\n        auStack64[uVar4 + 2] = CONCAT31(CONCAT21(CONCAT11(puVar3[7], uVar2), puVar3[9]), puVar3[10]);\n        auStack64[uVar4 + 3] = CONCAT31(CONCAT21(CONCAT11(puVar3[0xb], uVar1), puVar3[0xd]), puVar3[0xe]);\n        uVar4 = uVar4 + 4;\n        puVar3 = puVar3 + 0x10;\n    } while (uVar4 < 0x10);\n    fcn.0040a8f0(param_2, auStack64);\n    return;\n}\n",
        "token_count": 353
    },
    "0040be80": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040be80(uint8_t **param_1)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    fcn.0041332a();\n    param_1[9] = NULL;\n    param_1[8] = 0xffffffff;\n    iVar3 = 5;\n    do {\n        puVar1 = *param_1;\n        if (puVar1 < param_1[1]) {\n            uVar2 = *puVar1;\n            *param_1 = puVar1 + 1;\n        }\n        else {\n            uVar2 = fcn.00413417();\n        }\n        iVar3 = iVar3 + -1;\n        param_1[9] = param_1[9] << 8 | uVar2;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 198
    },
    "0040bed0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040bed0(uint32_t *param_1, uint8_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    \n    puVar1 = (param_2[8] >> 0xb) * *param_1;\n    if (param_2[9] < puVar1) {\n        param_2[8] = puVar1;\n        *param_1 = (0x800 - *param_1 >> 5) + *param_1;\n        if (param_2[8] < 0x1000000) {\n            puVar1 = *param_2;\n            if (puVar1 < param_2[1]) {\n                uVar2 = *puVar1;\n                *param_2 = puVar1 + 1;\n            }\n            else {\n                uVar2 = fcn.00413417();\n            }\n            param_2[8] = param_2[8] << 8;\n            param_2[9] = param_2[9] << 8 | uVar2 & 0xff;\n        }\n        return 0;\n    }\n    param_2[8] = param_2[8] + -puVar1;\n    param_2[9] = param_2[9] + -puVar1;\n    *param_1 = *param_1 - (*param_1 >> 5);\n    if (param_2[8] < 0x1000000) {\n        puVar1 = *param_2;\n        if (puVar1 < param_2[1]) {\n            uVar2 = *puVar1;\n            *param_2 = puVar1 + 1;\n        }\n        else {\n            uVar2 = fcn.00413417();\n        }\n        param_2[8] = param_2[8] << 8;\n        param_2[9] = param_2[9] << 8 | uVar2 & 0xff;\n    }\n    return 1;\n}\n",
        "token_count": 454
    },
    "0040d080": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d080(uint32_t *param_1)\n\n{\n    uint8_t **ppuVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    \n    if (7 < *param_1) {\n        ppuVar1 = param_1 + 2;\n        do {\n            if ((*ppuVar1 < param_1[3]) || (cVar2 = fcn.004133ae(),  cVar2 != '\\0')) {\n                uVar4 = **ppuVar1;\n                *ppuVar1 = *ppuVar1 + 1;\n            }\n            else {\n                uVar4 = 0xff;\n                param_1[10] = param_1[10] + 1;\n            }\n            uVar3 = *param_1 - 8;\n            param_1[0xc] = param_1[0xc] | uVar4 << (0x20U - *param_1 & 0x1f);\n            param_1[1] = *(uVar4 + 0x420bb0) | param_1[1] << 8;\n            *param_1 = uVar3;\n        } while (7 < uVar3);\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "0040a8f0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0040a8f0(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    int32_t *piStack120;\n    uint32_t uStack116;\n    uint32_t uStack112;\n    int32_t iStack104;\n    uint32_t auStack96 [4];\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint32_t auStack64 [16];\n    \n    auStack96[0] = *param_1;\n    auStack96[1] = param_1[1];\n    auStack96[2] = param_1[2];\n    auStack96[3] = param_1[3];\n    uStack80 = param_1[4];\n    uStack76 = param_1[5];\n    uStack72 = param_1[6];\n    uStack68 = param_1[7];\n    uStack116 = 0;\n    do {\n        puVar4 = auStack64;\n        piStack120 = uStack116 * 4 + 0x41bd80;\n        uStack112 = 1;\n        uVar3 = 0xfffffffc;\n        iStack104 = 0x10;\n        do {\n            if (uStack116 == 0) {\n                uVar5 = *((param_2 - auStack64) + puVar4);\n                *puVar4 = uVar5;\n            }\n            else {\n                uVar5 = auStack64[uStack112 & 0xf];\n                uVar2 = auStack64[uStack112 - 3 & 0xf];\n                puVar1 = auStack64 + (uStack112 - 1 & 0xf);\n                *puVar1 = *puVar1 + ((uVar5 >> 0x12 | uVar5 << 0xe) ^ (uVar5 >> 7 | uVar5 << 0x19) ^ uVar5 >> 3) +\n                                    ((uVar2 >> 0x13 | uVar2 << 0xd) ^ (uVar2 >> 0x11 | uVar2 << 0xf) ^ uVar2 >> 10) +\n                                    auStack64[uStack112 - 8 & 0xf];\n                uVar5 = *puVar1;\n            }\n            uVar2 = auStack96[uVar3 & 7];\n            puVar1 = auStack96 + (uVar3 + 3 & 7);\n            *puVar1 = *puVar1 + ((uVar2 >> 0x19 | uVar2 << 7) ^ (uVar2 >> 0xb | uVar2 << 0x15) ^\n                                (uVar2 >> 6 | uVar2 << 0x1a)) +\n                                ((auStack96[uVar3 + 1 & 7] ^ auStack96[uVar3 + 2 & 7]) & uVar2 ^\n                                auStack96[uVar3 + 2 & 7]) + *piStack120 + uVar5;\n            auStack96[uVar3 - 1 & 7] = auStack96[uVar3 - 1 & 7] + *puVar1;\n            uVar5 = auStack96[uVar3 - 4 & 7];\n            piStack120 = piStack120 + 1;\n            *puVar1 = *puVar1 + ((uVar5 >> 0x16 | uVar5 << 10) ^ (uVar5 >> 0xd | uVar5 << 0x13) ^\n                                (uVar5 >> 2 | uVar5 << 0x1e)) +\n                                (auStack96[uVar3 - 2 & 7] & (auStack96[uVar3 - 3 & 7] | uVar5) |\n                                auStack96[uVar3 - 3 & 7] & uVar5);\n            uStack112 = uStack112 + 1;\n            puVar4 = puVar4 + 1;\n            uVar3 = uVar3 - 1;\n            iStack104 = iStack104 + -1;\n        } while (iStack104 != 0);\n        uStack116 = uStack116 + 0x10;\n    } while (uStack116 < 0x40);\n    *param_1 = *param_1 + auStack96[0];\n    param_1[1] = param_1[1] + auStack96[1];\n    param_1[2] = param_1[2] + auStack96[2];\n    param_1[3] = param_1[3] + auStack96[3];\n    param_1[4] = param_1[4] + uStack80;\n    param_1[5] = param_1[5] + uStack76;\n    param_1[6] = param_1[6] + uStack72;\n    param_1[7] = param_1[7] + uStack68;\n    return;\n}\n",
        "token_count": 1149
    },
    "0040d050": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d050(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = param_1[2] - param_1[4];\n    uVar4 = 0x20U - *param_1 >> 3;\n    uVar2 = uVar1 - uVar4;\n    uVar3 = uVar2 + param_1[10];\n    return CONCAT44(((uVar1 >> 0x1f) - (uVar1 < uVar4)) + CARRY4(uVar2, param_1[10]) + param_1[7] +\n                    CARRY4(uVar3, param_1[6]), uVar3 + param_1[6]);\n}\n",
        "token_count": 190
    },
    "0040d120": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d120(int32_t param_1)\n\n{\n    char cVar1;\n    char unaff_retaddr;\n    \n    cVar1 = fcn.0041336a(0x20000);\n    if (cVar1 == '\\0') {\n        return 0x8007000e;\n    }\n    if (unaff_retaddr != '\\0') {\n        fcn.0041332a();\n        *(param_1 + 0x38) = 0x20;\n        *(param_1 + 0x3c) = 0;\n        *(param_1 + 0x60) = 0;\n        *(param_1 + 0x68) = 0;\n        *(param_1 + 0xd4b) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "0040de40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040de40(uint *param_1, uchar param_2, uchar param_3)\n\n{\n    param_1[1] = 0x41be80;\n    param_1[2] = 0;\n    *param_1 = 0x41c0fc;\n    param_1[1] = 0x41c120;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[9] = 0;\n    param_1[0xc] = 0;\n    fcn.00413357();\n    *(param_1 + 0x352) = param_3;\n    *(param_1 + 0xd4a) = 0;\n    *(param_1 + 0xd55) = 0;\n    *(param_1 + 0xd49) = param_2;\n    *(param_1 + 0xd4b) = 1;\n    return param_1;\n}\n",
        "token_count": 224
    },
    "004127de": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004127de(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *(param_1 + 4);\n    if (*(param_1 + 8) == uVar1) {\n        uVar2 = 1;\n        if (uVar1 < 0x40) {\n            if (7 < uVar1) {\n                uVar2 = 8;\n            }\n        }\n        else {\n            uVar2 = uVar1 >> 2;\n        }\n        fcn.0041270d(uVar1 + uVar2);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "004162e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004162e0(int32_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t extraout_ECX;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    uVar3 = param_1[2];\n    piVar6 = param_1;\n    if (uVar3 < param_1[1]) {\n        uVar1 = *(*param_1 + uVar3);\n        piVar6 = param_1 & 0xffffff00 | uVar1;\n        uVar3 = uVar3 + 1;\n        param_1[2] = uVar3;\n        var_2h._1_1_ = 0x80;\n        var_14h = 0;\n        var_8h = 0;\n        while( true ) {\n            if ((var_2h._1_1_ & piVar6) == 0) {\n                iVar5 = fcn.004193c0();\n                return iVar5 + var_14h;\n            }\n            if (param_1[1] <= uVar3) break;\n            uVar4 = fcn.004193c0();\n            var_14h = var_14h | uVar4;\n            var_2h._1_1_ = var_2h._1_1_ >> 1;\n            var_8h = var_8h + 8;\n            uVar3 = uVar3 + 1;\n            param_1[2] = uVar3;\n            if (0x3f < var_8h) {\n                return var_14h;\n            }\n            piVar6 = extraout_ECX & 0xffffff00 | uVar1;\n        }\n    }\n    sub.MSVCRT.dll__CxxThrowException(&stack0xffffffd7, 0x41c8e8, param_1, piVar6 & 0xffffff);\n    pcVar2 = swi(3);\n    uVar3 = (*pcVar2)();\n    return uVar3;\n}\n",
        "token_count": 537
    },
    "00416457": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416457(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    fcn.004127d6();\n    fcn.0041270d(arg_8h);\n    uVar1 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (uVar1 == 0) {\n                fcn.00416265();\n                uVar1 = 0x80;\n            }\n            fcn.00414af0();\n            uVar1 = uVar1 >> 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "004123b1": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid fcn.004123b1(uint param_1, char param_2)\n\n{\n    fcn.00412394(param_1, -(param_2 != '\\0') & 2U | 1, 3, 0x80);\n    return;\n}\n",
        "token_count": 59
    },
    "004163c7": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t fcn.004163c7(void)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar2 = 0;\n    do {\n        pcVar1 = iVar2 + 0x41e468;\n        if (pcVar1[unaff_EDI + -0x41e468] != *pcVar1) {\n            return pcVar1 & 0xffffff00;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 6);\n    iVar2 = fcn.00418ef0();\n    return iVar2 == *(unaff_EDI + 8);\n}\n",
        "token_count": 149
    },
    "004177e4": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004177e4(int32_t *param_1, uint32_t param_2, int32_t param_3, uint32_t *param_4, int32_t param_5)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    int32_t iStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    int32_t iStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    int32_t *piStack12;\n    int32_t iStack8;\n    \n    uStack188 = 0x41c3e4;\n    uStack148 = 0x41c3e4;\n    uStack88 = 0x41c3e4;\n    uStack64 = 0x41c3e4;\n    uStack108 = 0x41c3e4;\n    uStack172 = 4;\n    uStack28 = 4;\n    uStack132 = 4;\n    uStack72 = 4;\n    uStack60 = 0;\n    uStack56 = 0;\n    iStack52 = 0;\n    uStack48 = 8;\n    uStack164 = 0;\n    uStack160 = 0;\n    uStack156 = 0;\n    uStack152 = 1;\n    uStack168 = 0x41c3e4;\n    uStack184 = 0;\n    uStack180 = 0;\n    uStack176 = 0;\n    uStack40 = 0;\n    iStack36 = 0;\n    iStack32 = 0;\n    uStack44 = 0x41c390;\n    uStack144 = 0;\n    uStack140 = 0;\n    uStack136 = 0;\n    uStack104 = 0;\n    uStack100 = 0;\n    uStack96 = 0;\n    uStack92 = 8;\n    uStack124 = 0;\n    uStack120 = 0;\n    uStack116 = 0;\n    uStack112 = 1;\n    uStack128 = 0x41c3e4;\n    uStack84 = 0;\n    uStack80 = 0;\n    uStack76 = 0;\n    fcn.00417765(0, param_4, &uStack64, &uStack168, &uStack188, &uStack44, &uStack148, &uStack108, &uStack128, &uStack88\n                );\n    iStack24 = 0;\n    fcn.00414318(1);\n    uStack20 = *param_4 + param_2;\n    iStack16 = param_4[1] + param_3 + CARRY4(*param_4, param_2);\n    param_3 = 0;\n    if (0 < iStack36) {\n        uStack212 = 0;\n        uStack208 = 0;\n        uStack216 = 0x41be90;\n        do {\n            iVar2 = *(iStack32 + param_3 * 4);\n            puVar5 = &uStack216;\n            fcn.0041714e();\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n            iStack8 = *(*(param_5 + 0xc) + -4 + *(param_5 + 8) * 4);\n            uVar9 = fcn.00414ca4();\n            uStack204 = uVar9;\n            if (uVar9 >> 0x20 != 0) {\ncode_r0x00417a84:\n                fcn.00416245(puVar5);\ncode_r0x00417a89:\n                if (piStack12 != NULL) {\n                    (**(*piStack12 + 8))(piStack12);\n                }\n                fcn.00414c1d();\n                fcn.00412875();\n                fcn.00412875();\n                fcn.00412875();\n                fcn.00412875();\n                fcn.0041598f();\n                fcn.00412875();\n                fcn.00412875();\n                fcn.00412875();\n                return iStack68;\n            }\n            fcn.0040b2a0(uStack204);\n            puVar5 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x14);\n            if (puVar5 == NULL) {\n                puVar5 = NULL;\n            }\n            else {\n                puVar5[1] = 0;\n                *puVar5 = 0x41c3ec;\n            }\n            fcn.0041333e(puVar5);\n            iVar7 = iStack24;\n            puVar5[2] = *(iStack8 + 8);\n            puVar5[3] = uStack204;\n            puVar5[4] = 0;\n            puVar5 = *param_1;\n            iStack68 = fcn.00414476();\n            if (iStack68 != 0) goto code_r0x00417a89;\n            if ((*(iVar2 + 0x54) != '\\0') && (iVar6 = fcn.00418ef0(),  iVar6 != *(iVar2 + 0x50))) goto code_r0x00417a84;\n            iStack8 = 0;\n            if (0 < *(iVar2 + 0x30)) {\n                do {\n                    iStack192 = *(iStack52 + 4 + iVar7 * 8);\n                    uVar3 = *(iStack52 + iVar7 * 8);\n                    iVar7 = iVar7 + 1;\n                    bVar8 = CARRY4(uStack20, uVar3);\n                    uStack20 = uStack20 + uVar3;\n                    iStack16 = iStack16 + iStack192 + bVar8;\n                    puVar1 = param_1 + 0x14;\n                    uVar4 = *puVar1;\n                    *puVar1 = *puVar1 + uVar3;\n                    param_1[0x15] = param_1[0x15] + iStack192 + CARRY4(uVar4, uVar3);\n                    iStack8 = iStack8 + 1;\n                    iStack24 = iVar7;\n                } while (iStack8 < *(iVar2 + 0x30));\n            }\n            if (piStack12 != NULL) {\n                (**(*piStack12 + 8))(piStack12);\n            }\n            param_3 = param_3 + 1;\n        } while (param_3 < iStack36);\n    }\n    fcn.00414c1d();\n    fcn.00412875();\n    fcn.00412875();\n    fcn.00412875();\n    fcn.00412875();\n    fcn.0041598f();\n    fcn.00412875();\n    fcn.00412875();\n    fcn.00412875();\n    return 0;\n}\n",
        "token_count": 1837
    },
    "00401000": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(uint *arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint lpString1;\n    uint lpString2;\n    uint32_t var_4h;\n    \n    // [00] -r-x section size 102400 named .text\n    if (*0x41e960 == NULL) {\n        uVar2 = fcn.00402490(0x27);\n        pcVar1 = _sym.imp.USER32.dll_wsprintfW;\n        (*_sym.imp.USER32.dll_wsprintfW)(&lpString1, uVar2, *arg_8h, arg_8h[3]);\n        var_4h = 0;\n        if (arg_8h[4] != 0) {\n            puVar3 = arg_8h + 5;\n            do {\n                (*pcVar1)(&lpString2, L\"\\t0x%p\\n\", *puVar3);\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, &lpString2);\n                var_4h = var_4h + 1;\n                puVar3 = puVar3 + 1;\n            } while (var_4h < arg_8h[4]);\n        }\n        fcn.0040950a(&lpString1);\n    }\n    else {\n        if (*0x41e962 != 0) {\n            *0x41e960 = (**0x41e960)();\n        }\n        uVar2 = fcn.00402490(*0x41e960);\n        fcn.0040950a(uVar2);\n    }\n    fcn.0040491c();\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(10);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 410
    },
    "00401472": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401472(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(param_1 + 8);\n    iVar3 = (iVar1 - *(param_1 + 4)) + -1;\n    if (iVar3 < param_2) {\n        if (iVar1 < 0x41) {\n            iVar2 = ((iVar1 < 9) - 1 & 0xc) + 4;\n        }\n        else {\n            iVar2 = iVar1 / 2;\n        }\n        if (iVar2 + iVar3 < param_2) {\n            iVar2 = param_2 - iVar3;\n        }\n        fcn.004011b7(iVar1 + iVar2);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "004015d8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004015d8(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint var_14h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    if (*0x41e970 == '\\0') {\n        iVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x1e8);\n        if (iVar3 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.0041618b();\n        }\n        fcn.0041333e(uVar2);\n        (**(*arg_8h + 0x10))(arg_8h, 0, 0, 0, 0);\n        puVar4 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0xc);\n        piVar1 = var_4h;\n        if (puVar4 == NULL) {\n            puVar4 = NULL;\n        }\n        else {\n            puVar4[1] = 0x41be80;\n            puVar4[2] = 0;\n            *puVar4 = 0x41a4e0;\n            puVar4[1] = 0x41a4d0;\n        }\n        iVar3 = fcn.0040113f(var_4h, arg_8h, 0x41b4a0, puVar4);\n        if (iVar3 == 0) {\n            if (*0x41e970 == '\\0') {\n                (**(*piVar1 + 0x14))(piVar1, &var_4h);\n                piVar5 = NULL;\n                if (var_4h != NULL) {\n                    do {\n                        var_14h._0_2_ = 0;\n                        var_14h._2_2_ = 0;\n                        iVar3 = (**(*piVar1 + 0x18))(piVar1, piVar5, 0xf, &var_14h);\n                        if (((iVar3 == 0) && (var_14h == 0xb)) && (var_ch != 0)) {\n                            uVar2 = fcn.00401556();\n                            fcn.00412564();\n                            (**(*piVar1 + 8))(piVar1);\n                            return uVar2;\n                        }\n                        fcn.00412564();\n                        piVar5 = piVar5 + 1;\n                    } while (piVar5 < var_4h);\n                }\n            }\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(piVar1);\n            }\n            uVar2 = 1;\n        }\n        else {\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(piVar1);\n            }\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 689
    },
    "0040202a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040202a(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0);\n    iVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)(0, 0x41a574, 0x41a584, 0, 0xfffffff6, 0xfffffff6, 5, 5, 0, 0, uVar1);\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_SetTimer)(iVar2, 1, 1, 0);\n        (*_sym.imp.USER32.dll_GetMessageW)(&lpMsg, 0, 0, 0);\n        (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n        (*_sym.imp.USER32.dll_KillTimer)(iVar2, 1);\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar2);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00402886": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402886(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(param_1 + 8);\n    iVar3 = (iVar1 - *(param_1 + 4)) + -1;\n    if (iVar3 < param_2) {\n        if (iVar1 < 0x41) {\n            iVar2 = ((iVar1 < 9) - 1 & 0xc) + 4;\n        }\n        else {\n            iVar2 = iVar1 / 2;\n        }\n        if (iVar2 + iVar3 < param_2) {\n            iVar2 = param_2 - iVar3;\n        }\n        fcn.0040283a(iVar1 + iVar2);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00402d38": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d38(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_4h;\n    \n    iVar1 = in_ECX[1];\n    if (iVar1 < arg_ch + arg_10h) {\n        arg_10h = iVar1 - arg_ch;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar1)) {\n        fcn.00402b96();\n    }\n    else {\n        var_4h = in_ECX;\n        fcn.00402b4e();\n        fcn.0040283a(arg_10h);\n        iVar1 = 0;\n        if (0 < arg_10h) {\n            do {\n                *(var_10h + iVar1) = *(*var_4h + iVar1 + arg_ch);\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_10h);\n        }\n        *(var_10h + arg_10h) = 0;\n        var_ch = arg_10h;\n        fcn.00402b96(&var_10h);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 317
    },
    "00402f19": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: s1\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00402f19(int32_t *arg_8h, uint arg_ch, uint s2, uint *arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint *unaff_ESI;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_1020h;\n    uint uStack76;\n    uint *puStack72;\n    int32_t iStack68;\n    int32_t *piStack64;\n    int32_t *piStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    int32_t n;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *s1;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x402f26;\n    fcn.00419290();\n    var_10h = 0;\n    var_14h = 0;\n    n = 0;\n    var_1ch = 0;\n    var_20h = arg_8h;\n    uStack40 = 0x402f38;\n    s1 = unaff_ESI;\n    _auStack8 = unaff_EBX;\n    (**(*arg_8h + 0x10))();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    uStack40 = arg_ch;\n    arg_14h[1] = 0;\n    **arg_14h = 0;\n    uStack44 = 0x402f4d;\n    var_ch = (*pcVar1)();\n    uStack44 = s2;\n    puStack48 = 0x402f55;\n    n = (*pcVar1)();\n    iVar4 = 0;\n    _auStack8 = _auStack8 & 0xffffff;\n    var_14h = 0;\n    var_10h = 0;\n    do {\n        puStack48 = &fcn.00402f19::var_1ch;\n        iStack52 = 0x1000 - iVar4;\n        iStack56 = &fcn.00402f19::var_1020h + iVar4;\n        piStack64 = 0x402f82;\n        piStack60 = arg_8h;\n        uVar2 = (**(*arg_8h + 0xc))();\n        if ((uVar2 != 0) || (uVar2 = var_1ch,  var_1ch == 0)) {\ncode_r0x00403054:\n            return uVar2 & 0xffffff00;\n        }\n        iVar4 = iVar4 + var_1ch;\n        s1 = &fcn.00402f19::var_1020h;\n        uVar5 = 0;\n        while( true ) {\n            while (var_1h == '\\0') {\n                if (iVar4 - var_ch < uVar5) goto code_r0x00403010;\n                piStack64 = var_ch;\n                iStack68 = arg_ch;\n                puStack72 = s1;\n                uStack76 = 0x402ffb;\n                iVar3 = sub.MSVCRT.dll_memcmp();\n                if (iVar3 != 0) goto code_r0x00402fe0;\n                uVar5 = uVar5 + var_ch;\n                s1 = s1 + var_ch;\n                _auStack8 = CONCAT13(1, auStack8);\n            }\n            if (iVar4 - n < uVar5) break;\n            piStack64 = n;\n            iStack68 = s2;\n            puStack72 = s1;\n            uStack76 = 0x402fbe;\n            iVar3 = sub.MSVCRT.dll_memcmp();\n            if (iVar3 == 0) {\n                return 1;\n            }\n            uVar2 = s1 & 0xffffff00;\n            var_20h = var_20h & 0xffffff00 | *s1;\n            if (*s1 == 0) goto code_r0x00403054;\n            piStack64 = var_20h;\n            iStack68 = 0x402fe0;\n            fcn.00402c56();\ncode_r0x00402fe0:\n            uVar5 = uVar5 + 1;\n            s1 = s1 + 1;\n        }\ncode_r0x00403010:\n        iVar4 = iVar4 - uVar5;\n        bVar6 = CARRY4(var_14h, uVar5);\n        var_14h = var_14h + uVar5;\n        iStack68 = &fcn.00402f19::var_1020h + uVar5;\n        var_10h = var_10h + bVar6;\n        puStack72 = &fcn.00402f19::var_1020h;\n        uStack76 = 0x40302e;\n        piStack64 = iVar4;\n        (*_sym.imp.MSVCRT.dll_memmove)();\n        if ((var_10h != 0) || (0x100000 < var_14h)) {\n            return arg_14h[1] != 0;\n        }\n    } while( true );\n}\n",
        "token_count": 1265
    },
    "00403458": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403458(uint hWnd)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint lpClassName;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 0x40);\n    if (((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"STATIC\"),  iVar2 == 0)) &&\n       (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0),  (uVar3 & 0xe) == 0)) {\n        fcn.00403415(&var_18h, hWnd);\n        iVar2 = fcn.00401f7d(var_18h, 0x41a6b4, 5);\n        if ((iVar2 == 0) && (var_4h = (*_sym.imp.USER32.dll_GetParent)(hWnd),  var_4h != 0)) {\n            (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"riched20\");\n            fcn.00402096(hWnd, &var_34h);\n            uVar4 = (*_sym.imp.USER32.dll_GetMenu)(hWnd);\n            (*_sym.imp.KERNEL32.dll_SetThreadLocale)(0x419);\n            iVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (0, L\"RichEdit20W\", 0x41a584, 0x50000804, var_34h, var_30h, var_2ch - var_34h, \n                               var_28h - var_30h, var_4h, uVar4, 0, 0);\n            if (iVar2 != 0) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(hWnd);\n                pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x459, 0x22, 0);\n                uVar4 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n                (*pcVar1)(iVar2, 0x443, 0, uVar4);\n                var_8h = 0xfde9;\n                var_ch = 0;\n                fcn.00402e4b(&var_24h, &var_18h, 0xfde9);\n                (*pcVar1)(iVar2, 0x461, &var_ch, var_24h);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_24h);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n                return iVar2;\n            }\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    }\n    return 0;\n}\n",
        "token_count": 720
    },
    "00403c03": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "get common file path",
            "create shortcut via IShellLink"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c03(int32_t *ppv)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint lpszPath;\n    uint var_70h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_4h;\n    \n    piVar5 = ppv;\n    pcVar1 = _sym.imp.MSVCRT.dll__wtol;\n    uVar2 = *ppv;\n    if ((uVar2 < 0x30) || (0x39 < uVar2)) {\n        uVar2 = uVar2 | 0x20;\n        if (uVar2 == 100) {\n            iVar3 = (-((*(ppv + 2) | 0x20) != 0x75) & 9) + 0x10;\n        }\n        else if (uVar2 == 0x70) {\n            iVar3 = (-((*(ppv + 2) | 0x20) != 0x75) & 0x15) + 2;\n        }\n        else if (uVar2 == 0x73) {\n            iVar3 = (-((*(ppv + 2) | 0x20) != 0x75) & 0xb) + 0xb;\n        }\n        else {\n            if (uVar2 != 0x74) {\n                return 0;\n            }\n            iVar3 = (-((*(ppv + 2) | 0x20) != 0x75) & 0x11) + 7;\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.MSVCRT.dll__wtol)(ppv);\n    }\n    while( true ) {\n        if (*piVar5 == 0x2c) {\n            iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)(0, &lpszPath, iVar3, 0);\n            if (iVar3 != 0) {\n                fcn.00402a9c(&lpszPath);\n                fcn.004014eb();\n                fcn.004014eb();\n                fcn.004014eb();\n                fcn.004014eb();\n                fcn.004014eb();\n                fcn.004014eb();\n                fcn.004014eb();\n                fcn.004014eb();\n                uVar4 = fcn.00403368(piVar5, &var_64h);\n                if (var_60h == 0) {\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_70h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_58h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_40h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_28h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_34h);\n                }\n                else {\n                    uVar4 = fcn.00403368(uVar4, &var_34h);\n                    uVar4 = fcn.00403368(uVar4, &var_4ch);\n                    uVar4 = fcn.00403368(uVar4, &var_28h);\n                    uVar4 = fcn.00403368(uVar4, &var_10h);\n                    uVar4 = fcn.00403368(uVar4, &var_40h);\n                    uVar4 = fcn.00403368(uVar4, &var_58h);\n                    fcn.00403368(uVar4, &var_70h);\n                    uVar4 = (*pcVar1)(var_70h);\n                    if (var_ch == 0) {\n                        iVar3 = fcn.004033f2(&var_64h);\n                        fcn.00401403(var_64h + 2 + iVar3 * 2);\n                        iVar3 = fcn.00402b23(0x2e);\n                        if (-1 < iVar3) {\n                            *(var_10h + iVar3 * 2) = 0;\n                            var_ch = iVar3;\n                        }\n                    }\n                    uVar6 = 0x5c;\n                    fcn.004017a8();\n                    if (var_48h != 0) {\n                        fcn.004014bc(&var_4ch);\n                        uVar6 = 0x5c;\n                        fcn.004017a8(0x5c);\n                    }\n                    iVar3 = fcn.00403a96(var_1ch);\n                    if (iVar3 != 0) {\n                        fcn.004014bc(&var_10h, uVar6);\n                        fcn.00402aed(L\".lnk\");\n                        ppv = NULL;\n                        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x41c444, 0, 1, 0x41c404, &ppv);\n                        if (-1 < iVar3) {\n                            var_4h = NULL;\n                            (**(*ppv + 0x50))(ppv, var_64h);\n                            if (var_24h != 0) {\n                                (**(*ppv + 0x1c))(ppv, var_28h);\n                            }\n                            if (var_30h != 0) {\n                                (**(*ppv + 0x2c))(ppv, var_34h);\n                            }\n                            if (var_3ch != 0) {\n                                (**(*ppv + 0x24))(ppv, var_40h);\n                            }\n                            if (var_54h != 0) {\n                                (**(*ppv + 0x44))(ppv, var_58h, uVar4);\n                            }\n                            iVar3 = (***ppv)(ppv, 0x41c434, &var_4h);\n                            if (-1 < iVar3) {\n                                (**(*var_4h + 0x18))(var_4h, var_1ch, 1);\n                                (**(*var_4h + 8))(var_4h);\n                            }\n                            (**(*ppv + 8))(ppv);\n                        }\n                    }\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_70h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_58h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_40h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_28h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_34h);\n                }\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_64h);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n            }\n            return 0;\n        }\n        if (*piVar5 == 0) break;\n        piVar5 = piVar5 + 2;\n    }\n    return 0;\n}\n",
        "token_count": 1718
    },
    "00404af0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "set environment variable"
        ],
        "decompiled_code": "\nvoid fcn.00404af0(void)\n\n{\n    int32_t iVar1;\n    uint lpValue;\n    \n    iVar1 = 0;\n    if (0 < *0x41e3e4) {\n        do {\n            fcn.004013d1(*(*0x41e3e8 + iVar1 * 4) + 0xc);\n            fcn.00404680(&lpValue);\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(**(*0x41e3e8 + iVar1 * 4), lpValue);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpValue);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *0x41e3e4);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00404d44": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404d44(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    iVar1 = in_ECX[1];\n    if (iVar1 < arg_ch + arg_10h) {\n        arg_10h = iVar1 - arg_ch;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar1)) {\n        fcn.004013d1();\n    }\n    else {\n        fcn.004014eb();\n        fcn.004011b7(arg_10h);\n        iVar1 = 0;\n        if (0 < arg_10h) {\n            arg_ch = arg_ch * 2;\n            do {\n                *(var_ch + iVar1 * 2) = *(arg_ch + *in_ECX);\n                iVar1 = iVar1 + 1;\n                arg_ch = arg_ch + 2;\n            } while (iVar1 < arg_10h);\n        }\n        *(var_ch + arg_10h * 2) = 0;\n        var_8h = arg_10h;\n        fcn.004013d1(&var_ch);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 312
    },
    "004052e7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004052e7(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint ARG_0;\n    uint var_60h;\n    uint var_ch;\n    \n    *0x41e3a4 = 8;\n    fcn.004083d2();\n    var_60h = 0x41b4a8;\n    uVar1 = fcn.00402490(1);\n    fcn.00402a9c(uVar1);\n    uVar2 = 0;\n    if (*0x420db8 != 0) {\n        do {\n            if (uVar2 != 0) {\n                fcn.00402aed();\n            }\n            fcn.00402aed(*(*(uVar2 * 4 + 0x420cb8) + 0x10));\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *0x420db8);\n    }\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x41b838, 1, 0xff, 0x1f, 0x2ff, 7);\n    fcn.00402aed(&ARG_0);\n    fcn.00402aed(0x41b834);\n    fcn.00408433(0x11, *0x41e9b0, var_ch, 0);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    fcn.004081a6();\n    return;\n}\n",
        "token_count": 341
    },
    "00405b3b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b3b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_ch;\n    \n    fcn.00402a9c(arg_8h);\n    fcn.00404261(&var_18h, 0x41e9e8);\n    fcn.0040431c(&var_18h, 0x41e9f4);\n    fcn.004043d7(&var_18h, 0x41ea00);\n    fcn.00404492(&var_18h);\n    iVar1 = 0;\n    if (0 < *0x41e3e4) {\n        do {\n            fcn.004035a8(&var_ch, **(*0x41e3e8 + iVar1 * 4));\n            fcn.00402e9c(&var_ch);\n            fcn.00404261(&var_ch, 0x41e9e8);\n            fcn.0040431c(&var_ch, 0x41e9f4);\n            fcn.004043d7(&var_ch, 0x41ea00);\n            fcn.00404492(&var_ch);\n            fcn.00405acb(&var_18h, *(*0x41e3e8 + iVar1 * 4), &var_ch);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *0x41e3e4);\n    }\n    fcn.00403c03(var_18h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    return;\n}\n",
        "token_count": 382
    },
    "00407957": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00407957(uint arg_8h, uint *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = false;\n    iVar3 = (*_sym.imp.USER32.dll_GetDC)(*(in_ECX + 4));\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar3 != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n        iVar5 = (*pcVar2)(0x3d);\n        iVar5 = iVar5 + (-0x3c - iVar4);\n        iVar4 = (*pcVar2)(0x3e);\n        arg_ch[3] = 0;\n        arg_ch[1] = 0;\n        *arg_ch = 0;\n        arg_ch[2] = iVar5;\n        uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, arg_10h);\n        iVar7 = (*_sym.imp.USER32.dll_DrawTextW)(iVar3, arg_8h, 0xffffffff, arg_ch, arg_14h | 0x400);\n        bVar1 = 0 < iVar7;\n        if (iVar5 < arg_ch[2]) {\n            arg_ch[2] = iVar5;\n        }\n        if (iVar4 + -0x78 < arg_ch[3]) {\n            arg_ch[3] = iVar4 + -0x78;\n        }\n        (*_sym.imp.GDI32.dll_SelectObject)(iVar3, uVar6);\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(in_ECX + 4), iVar3);\n    }\n    return bVar1;\n}\n",
        "token_count": 448
    },
    "00407d1e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d1e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = (**(*in_ECX + 8))(arg_ch, &var_20h, in_ECX[0xd], 0x20);\n    if (iVar1 != 0) {\n        var_18h = var_18h + 0x20;\n        fcn.00407908(arg_8h, &var_10h);\n        if (var_8h - var_10h < var_18h) {\n            iVar1 = ((var_10h - var_8h) + 1 + var_18h) / 2;\n            fcn.00407a11(arg_8h, var_10h - iVar1, var_ch, (iVar1 * 2 - var_10h) + var_8h, var_4h - var_ch, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "004081b6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004081b6(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    param_1[0xb] = 0;\n    param_1[10] = 0;\n    param_1[9] = 0;\n    param_1[8] = 0;\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (param_1[0xc] != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n        iVar4 = iVar4 + 0xb;\n        iVar3 = (*pcVar1)(0xc);\n        iVar3 = iVar3 + 2;\n    }\n    iVar2 = (**(*param_1 + 8))(param_1[4], param_1 + 8, param_1[0xd], 0x850);\n    if (iVar2 != 0) {\n        iVar4 = iVar4 + param_1[10];\n        if (iVar3 < param_1[0xb]) {\n            iVar3 = param_1[0xb];\n        }\n    }\n    iVar2 = fcn.004077e6(param_1[3], &var_8h);\n    if (iVar2 != 0) {\n        if (iVar4 < var_8h) {\n            iVar4 = var_8h;\n        }\n        iVar3 = iVar3 + var_4h;\n    }\n    fcn.00407908(0x4b3, &var_18h);\n    param_1[5] = iVar4 + 0x1a;\n    param_1[6] = (var_ch - var_14h) + 0x26 + iVar3;\n    return;\n}\n",
        "token_count": 459
    },
    "00408286": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408286(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    fcn.004081b6();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n    if (*(param_1 + 0x14) < *0x41e3ac - iVar2) {\n        iVar2 = (*pcVar1)(7);\n        *(param_1 + 0x14) = *0x41e3ac - iVar2;\n    }\n    fcn.00407908(0x4b6, &var_10h);\n    *(param_1 + 0x18) = *(param_1 + 0x18) + (var_4h - var_ch) + 0xe;\n    return;\n}\n",
        "token_count": 219
    },
    "00408585": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408585(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    \n    if (arg_8h == 0x4b3) {\n        uVar1 = fcn.00408166(&var_ch, 0x4b6);\n        fcn.0040143c(uVar1);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    fcn.0040773a(arg_8h);\n    return;\n}\n",
        "token_count": 117
    },
    "00408677": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408677(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_ch;\n    \n    if ((((arg_8h != 0) && (*0x41ea4c == 0)) && (*0x41ea50 == 0)) && (*0x41ea48 == 0)) {\n        arg_8h_00 = 0x4b3;\n        if (arg_8h < 0) {\n            arg_8h_00 = 0x4b4;\n            arg_8h = -arg_8h;\n        }\n        *0x41ea48 = in_ECX;\n        *(in_ECX + 0x48) = arg_8h;\n        *(in_ECX + 0x4c) = arg_8h_00;\n        uVar1 = fcn.00408166(&var_ch, arg_8h_00);\n        fcn.0040143c(uVar1);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n        fcn.00408611();\n        fcn.00407773(arg_8h_00);\n        if (*(in_ECX + 0x38) == 0) {\n            fcn.00408166(&var_ch, arg_8h_00);\n            fcn.00407d1e(arg_8h_00, var_ch);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n        }\n        (*_sym.imp.USER32.dll_SetTimer)(*(in_ECX + 4), 1, 1000, 0);\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "004087a1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004087a1(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    \n    if (arg_8h == 0x4b7) {\n        fcn.004084ec();\n    }\n    else if (arg_8h == 0x4b3) {\n        uVar1 = fcn.00408166(&var_ch, 0x4b6);\n        fcn.0040143c(uVar1);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    fcn.0040773a(arg_8h);\n    return;\n}\n",
        "token_count": 145
    },
    "004095ee": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004095ee(int32_t hMem, uint arg_ch, uint arglist)\n\n{\n    ushort *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint ARG_0;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar4 = fcn.00402490(arg_ch);\n    var_4h = &arglist;\n    (*_sym.imp.USER32.dll_wvsprintfW)(&ARG_0, uVar4, var_4h);\n    if (hMem == 0) {\ncode_r0x004096d1:\n        fcn.0040950a(&ARG_0);\n    }\n    else {\n        var_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar3 = _sym.imp.KERNEL32.dll_FormatMessageW;\n        iVar5 = (*_sym.imp.KERNEL32.dll_FormatMessageW)(0x1100, 0, var_8h, *0x41e980, &hMem, 0, &var_4h);\n        if (iVar5 == 0) {\n            iVar5 = (*pcVar3)(0x1100, 0, var_8h, 0, &hMem, 0, &var_4h);\n            if (iVar5 == 0) goto code_r0x004096d1;\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&ARG_0);\n        iVar6 = (*pcVar3)(hMem);\n        iVar2 = (iVar6 + 2 + iVar5) * 2;\n        iVar6 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(-(iVar2 >> 0x20 != 0) | iVar2);\n        pcVar3 = _sym.imp.KERNEL32.dll_lstrcpyW;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(iVar6, &ARG_0);\n        puVar1 = iVar6 + iVar5 * 2;\n        *puVar1 = 10;\n        (*pcVar3)(puVar1 + 1, hMem);\n        fcn.0040950a(iVar6);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar6);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n    }\n    return;\n}\n",
        "token_count": 554
    },
    "0040cfc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040cfc0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (*(param_1 + 0x60) == 0) {\n        return 0;\n    }\n    uVar1 = *(param_1 + 0x60) * 8;\n    return uVar1 & 0xffffff00 | 0x20U - *(param_1 + 0x38) < uVar1;\n}\n",
        "token_count": 107
    },
    "0040d1c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040d1c0(int32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    fcn.0040d080();\n    uVar2 = (param_2[1] >> (8U - *param_2 & 0x1f)) >> 9 & 0x7fff;\n    if (uVar2 < *(param_1 + 0x24)) {\n        uVar3 = *((uVar2 >> 6) + 0xcc + param_1);\n    }\n    else {\n        uVar3 = 10;\n        uVar1 = *(param_1 + 0x28);\n        while (uVar1 <= uVar2) {\n            uVar3 = uVar3 + 1;\n            uVar1 = *(param_1 + uVar3 * 4);\n        }\n    }\n    param_2[0xc] = param_2[0xc] >> (uVar3 & 0x1f);\n    *param_2 = *param_2 + uVar3;\n    uVar2 = (uVar2 - *(param_1 + -4 + uVar3 * 4) >> (0xf - uVar3 & 0x1f)) + *(param_1 + 0x40 + uVar3 * 4);\n    if (uVar2 < 0x13) {\n        return *(param_1 + 0x80 + uVar2 * 4);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 357
    },
    "0040d250": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040d250(int32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    fcn.0040d080();\n    uVar2 = (param_2[1] >> (8U - *param_2 & 0x1f)) >> 9 & 0x7fff;\n    if (uVar2 < *(param_1 + 0x24)) {\n        uVar3 = *((uVar2 >> 6) + 0x500 + param_1);\n    }\n    else {\n        uVar3 = 10;\n        uVar1 = *(param_1 + 0x28);\n        while (uVar1 <= uVar2) {\n            uVar3 = uVar3 + 1;\n            uVar1 = *(param_1 + uVar3 * 4);\n        }\n    }\n    param_2[0xc] = param_2[0xc] >> (uVar3 & 0x1f);\n    *param_2 = *param_2 + uVar3;\n    uVar2 = (uVar2 - *(param_1 + -4 + uVar3 * 4) >> (0xf - uVar3 & 0x1f)) + *(param_1 + 0x40 + uVar3 * 4);\n    if (uVar2 < 0x120) {\n        return *(param_1 + 0x80 + uVar2 * 4);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 356
    },
    "0040d2e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040d2e0(int32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    fcn.0040d080();\n    uVar2 = (param_2[1] >> (8U - *param_2 & 0x1f)) >> 9 & 0x7fff;\n    if (uVar2 < *(param_1 + 0x24)) {\n        uVar3 = *((uVar2 >> 6) + 0x100 + param_1);\n    }\n    else {\n        uVar3 = 10;\n        uVar1 = *(param_1 + 0x28);\n        while (uVar1 <= uVar2) {\n            uVar3 = uVar3 + 1;\n            uVar1 = *(param_1 + uVar3 * 4);\n        }\n    }\n    param_2[0xc] = param_2[0xc] >> (uVar3 & 0x1f);\n    *param_2 = *param_2 + uVar3;\n    uVar2 = (uVar2 - *(param_1 + -4 + uVar3 * 4) >> (0xf - uVar3 & 0x1f)) + *(param_1 + 0x40 + uVar3 * 4);\n    if (uVar2 < 0x20) {\n        return *(param_1 + 0x80 + uVar2 * 4);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 358
    },
    "00410b00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410b00(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    uVar4 = *(param_1 + 0x48 + in_EAX);\n    uVar2 = *(param_1 + 0x48 + param_3) - uVar4;\n    puVar1 = param_2 + uVar4 * 0xc;\n    uVar4 = *(uVar2 + 0x6d + param_1);\n    if (*(uVar4 + 0x48 + param_1) != uVar2) {\n        uVar5 = *(uVar4 + 0x47 + param_1);\n        uVar4 = uVar4 - 1;\n        iVar3 = (uVar2 - uVar5) + -1;\n        puVar1[uVar5 * 3] = *(param_1 + 0xf0 + iVar3 * 4);\n        *(param_1 + 0xf0 + iVar3 * 4) = puVar1 + uVar5 * 3;\n    }\n    *puVar1 = *(param_1 + 0xf0 + uVar4 * 4);\n    *(param_1 + 0xf0 + uVar4 * 4) = puVar1;\n    return;\n}\n",
        "token_count": 340
    },
    "00410d80": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410d80(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    \n    puVar1 = *(param_2 + 0xf0 + in_EAX * 4);\n    if (puVar1 != NULL) {\n        *(param_2 + 0xf0 + in_EAX * 4) = *puVar1;\n        return;\n    }\n    uVar2 = *(param_2 + 0x48 + in_EAX) * 0xc;\n    if (uVar2 <= *(param_2 + 0x38) - *(param_2 + 0x34)) {\n        *(param_2 + 0x34) = uVar2 + *(param_2 + 0x34);\n        return;\n    }\n    fcn.00410cf0();\n    return;\n}\n",
        "token_count": 206
    },
    "004116f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t ** fcn.004116f0(uint16_t **param_1, uint32_t param_2, int32_t *param_3)\n\n{\n    uint16_t **ppuVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    puVar2 = *param_1;\n    uVar4 = *puVar2 - param_2;\n    if (*puVar2 != 0x100) {\n        iVar5 = (uVar4 < **(puVar2 + 4) - *puVar2) +\n                ((puVar2[1] < *puVar2 * 0xb) + ((uVar4 < param_2) + *(uVar4 + 0x187 + param_1) * 4) * 2) * 2 +\n                param_1[7];\n        ppuVar1 = param_1 + iVar5 + 0x123;\n        uVar3 = *ppuVar1 >> (*(param_1 + iVar5 * 4 + 0x48e) & 0x1f);\n        *ppuVar1 = *ppuVar1 - uVar3;\n        *param_3 = (uVar3 == 0) + uVar3;\n        return ppuVar1;\n    }\n    *param_3 = 1;\n    return param_1 + 0x122;\n}\n",
        "token_count": 322
    },
    "00413098": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413098(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg_10h;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    if (arg_10h == 0) {\n        return 0;\n    }\ncode_r0x004130b5:\n    uVar2 = *(arg_8h + 0x30);\n    if (*(arg_8h + 0x2c) != uVar2) {\n        uVar2 = *(arg_8h + 0x30) - *(arg_8h + 0x2c);\n        if (uVar2 <= uVar3) {\n            uVar3 = uVar2;\n        }\n        sub.MSVCRT.dll_memcpy(arg_ch, *(arg_8h + 0x1c) + *(arg_8h + 0x2c), uVar3);\n        *(arg_8h + 0x2c) = *(arg_8h + 0x2c) + uVar3;\n        if (arg_14h == NULL) {\n            return 0;\n        }\n        *arg_14h = *arg_14h + uVar3;\n        return 0;\n    }\n    iVar1 = 0;\n    while (uVar2 < *(arg_8h + 0x28)) {\n        *(*(arg_8h + 0x1c) + iVar1) = *(*(arg_8h + 0x30) + *(arg_8h + 0x1c) + iVar1);\n        iVar1 = iVar1 + 1;\n        uVar2 = *(arg_8h + 0x30) + iVar1;\n    }\n    *(arg_8h + 0x30) = 0;\n    *(arg_8h + 0x2c) = 0;\n    arg_10h = 0x20000 - iVar1;\n    *(arg_8h + 0x28) = iVar1;\n    iVar1 = fcn.00413ab5(*(arg_8h + 0x20), *(arg_8h + 0x1c) + iVar1, &arg_10h);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    *(arg_8h + 0x28) = *(arg_8h + 0x28) + arg_10h;\n    uVar2 = (**(**(arg_8h + 0x50) + 0x10))(*(arg_8h + 0x50), *(arg_8h + 0x1c), *(arg_8h + 0x28));\n    *(arg_8h + 0x30) = uVar2;\n    if (uVar2 != 0) goto code_r0x00413137;\n    iVar1 = *(arg_8h + 0x28);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    goto code_r0x00413166;\ncode_r0x00413137:\n    if (*(arg_8h + 0x28) < uVar2) {\n        do {\n            *(*(arg_8h + 0x28) + *(arg_8h + 0x1c)) = 0;\n            *(arg_8h + 0x28) = *(arg_8h + 0x28) + 1;\n        } while (*(arg_8h + 0x28) < *(arg_8h + 0x30));\n        iVar1 = (**(**(arg_8h + 0x50) + 0x10))(*(arg_8h + 0x50), *(arg_8h + 0x1c), *(arg_8h + 0x28));\ncode_r0x00413166:\n        *(arg_8h + 0x30) = iVar1;\n    }\n    goto code_r0x004130b5;\n}\n",
        "token_count": 934
    },
    "00413566": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00413566(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    \n    uVar1 = *(param_1 + 0xc);\n    uVar2 = *(param_1 + 4);\n    uVar3 = *(param_1 + 0x18) - uVar1;\n    uVar4 = uVar3 + uVar2;\n    iVar5 = (*(param_1 + 0x1c) - (*(param_1 + 0x18) < uVar1)) + CARRY4(uVar3, uVar2);\n    if (uVar2 < uVar1) {\n        bVar6 = CARRY4(uVar4, *(param_1 + 0x10));\n        uVar4 = uVar4 + *(param_1 + 0x10);\n        iVar5 = iVar5 + bVar6;\n    }\n    return CONCAT44(iVar5, uVar4);\n}\n",
        "token_count": 246
    },
    "004135d1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004135d1(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar4 = param_1[1];\n    if (uVar4 <= param_1[3]) {\n        uVar4 = param_1[4];\n    }\n    uVar4 = uVar4 - param_1[3];\n    var_8h = 0;\n    if (param_1[8] != 0) {\n        var_4h = param_1;\n        (*_sym.imp.MSVCRT.dll_memmove)(param_1[8], *param_1 + param_1[3], uVar4);\n        param_1[8] = param_1[8] + uVar4;\n    }\n    piVar2 = param_1[5];\n    var_4h = uVar4;\n    if (piVar2 != NULL) {\n        var_4h = NULL;\n        var_8h = (**(*piVar2 + 0xc))(piVar2, *param_1 + param_1[3], uVar4, &var_4h);\n    }\n    param_1[3] = param_1[3] + var_4h;\n    uVar4 = param_1[4];\n    if (param_1[3] == uVar4) {\n        param_1[3] = 0;\n    }\n    if (param_1[1] == uVar4) {\n        *(param_1 + 9) = 1;\n        param_1[1] = 0;\n    }\n    uVar3 = param_1[3];\n    if (param_1[1] <= uVar3 && uVar3 != param_1[1]) {\n        uVar4 = uVar3;\n    }\n    puVar1 = param_1 + 6;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + var_4h;\n    param_1[2] = uVar4;\n    param_1[7] = param_1[7] + CARRY4(uVar3, var_4h);\n    return var_8h;\n}\n",
        "token_count": 527
    },
    "0041627c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041627c(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_1[1] - param_1[2] < param_3) {\n        fcn.00416245();\n        param_1 = extraout_ECX;\n    }\n    uVar1 = 0;\n    if (param_3 != 0) {\n        do {\n            *(uVar1 + param_2) = *(*param_1 + param_1[2]);\n            param_1[2] = param_1[2] + 1;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_3);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "004162b3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004162b3(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 8);\n    if ((param_3 != 0) || (*(param_1 + 4) - iVar1 < param_2)) {\n        fcn.00416245();\n        param_1 = extraout_ECX;\n        iVar1 = extraout_EDX;\n    }\n    *(param_1 + 8) = iVar1 + param_2;\n    return;\n}\n",
        "token_count": 150
    },
    "004168ca": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.004168ca(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    char *pcVar6;\n    char *pcVar7;\n    bool bVar8;\n    uint var_1ch;\n    uint var_18h;\n    uint s2;\n    int32_t var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    iVar2 = fcn.00413b00(arg_8h, in_ECX + 0x30, 0x20);\n    if (iVar2 == 0) {\n        cVar1 = fcn.004163c7();\n        if (cVar1 == '\\0') {\n            fcn.0040b2a0(0x10000);\n            sub.MSVCRT.dll_memcpy(0, in_ECX + 0x30, 0x20);\n            var_ch = *(in_ECX + 0x24);\n            pcVar6 = *(in_ECX + 0x20);\n            while( true ) {\n                if (arg_ch != NULL) {\n                    uVar5 = pcVar6 - *(in_ECX + 0x20);\n                    uVar3 = (var_ch - *(in_ECX + 0x24)) - (pcVar6 < *(in_ECX + 0x20));\n                    bVar8 = arg_ch[1] <= uVar3;\n                    if ((bVar8 && uVar3 != arg_ch[1]) || ((bVar8 && (*arg_ch <= uVar5 && uVar5 != *arg_ch)))) {\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n                        return 1;\n                    }\n                }\n                iVar2 = (**(*arg_8h + 0xc))(arg_8h, 0x20, 0xffe0, &var_8h);\n                if (iVar2 != 0) goto code_r0x00416a16;\n                if (var_8h == NULL) break;\n                var_4h = 0x1;\n                pcVar4 = var_8h;\n                if (var_8h != NULL) {\n                    do {\n                        for (; *var_4h != '7'; var_4h = var_4h + 1) {\n                            if (pcVar4 < var_4h) goto code_r0x004169ac;\n                        }\n                        if (pcVar4 < var_4h) break;\n                        cVar1 = fcn.004163c7();\n                        pcVar4 = var_4h;\n                        if (cVar1 != '\\0') {\n                            sub.MSVCRT.dll_memcpy(in_ECX + 0x30, var_4h, 0x20);\n                            pcVar7 = pcVar6 + pcVar4;\n                            var_ch = var_ch + CARRY4(pcVar6, pcVar4);\n                            *(in_ECX + 0x20) = pcVar7;\n                            *(in_ECX + 0x24) = var_ch;\n                            iVar2 = (**(*arg_8h + 0x10))(arg_8h, pcVar7 + 0x20, var_ch + (0xffffffdf < pcVar7), 0, 0);\n                            goto code_r0x00416a16;\n                        }\n                        var_4h = var_4h + 1;\n                        pcVar4 = var_8h;\n                    } while (var_4h <= var_8h);\n                }\ncode_r0x004169ac:\n                bVar8 = CARRY4(pcVar6, pcVar4);\n                pcVar6 = pcVar6 + pcVar4;\n                var_ch = var_ch + bVar8;\n                (*_sym.imp.MSVCRT.dll_memmove)(0, pcVar4, 0x20);\n            }\n            iVar2 = 1;\ncode_r0x00416a16:\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n        }\n        else {\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 945
    },
    "00418bd4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418bd4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    fcn.0041434d(arg_8h);\n    fcn.004127d6();\n    arg_8h = 0;\n    if (0 < *(in_ECX + 0x24)) {\n        do {\n            fcn.004184e9();\n            fcn.004142f8();\n            iVar1 = fcn.00413811();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < *(in_ECX + 0x24));\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "004012fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012fc(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t arglist;\n    \n    (*_sym.imp.KERNEL32.dll_SetLastError)(arg_10h);\n    if (arg_ch == 0x6a) {\n        arglist = arg_8h[10];\n        arg_ch_00 = 0x1e;\n    }\n    else {\n        if (arg_ch != 0x69) goto code_r0x0040132e;\n        arglist = arg_8h[10];\n        arg_ch_00 = 0x1f;\n    }\n    fcn.004095ee(1, arg_ch_00, arglist);\ncode_r0x0040132e:\n    (**(*arg_8h + 0x1c))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 204
    },
    "004013af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.004013af(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.MSVCRT.dll_memcmp(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "004014bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004014bc(int32_t *param_1, uint *param_2)\n\n{\n    fcn.00401472(param_2[1]);\n    fcn.0040116c(*param_1 + param_1[1] * 2, *param_2);\n    param_1[1] = param_1[1] + param_2[1];\n    return param_1;\n}\n",
        "token_count": 98
    },
    "00402096": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402096(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetParent)(param_1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(unaff_retaddr, param_1);\n    pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n    (*_sym.imp.USER32.dll_ScreenToClient)(iVar2, param_1);\n    (*pcVar1)(iVar2, param_1 + 8);\n    return 1;\n}\n",
        "token_count": 152
    },
    "004022e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004022e6(uint hWnd)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint lpClassName;\n    uint lpvObject;\n    uint cx;\n    uint cy;\n    int32_t *var_10h;\n    int32_t *lpPictDesc;\n    uint32_t dwBytes;\n    int32_t lParam;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 0x40);\n    if (((iVar1 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"STATIC\"),  iVar1 == 0)) &&\n       (uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0),  (uVar2 & 0xe) != 0)) {\n        uVar3 = hWnd;\n        uVar2 = (*_sym.imp.USER32.dll_GetMenu)(hWnd, &dwBytes);\n        iVar1 = fcn.004020d2(\"IMAGES\", uVar2 & 0xffff, uVar3);\n        if ((iVar1 != 0) && (0xf < dwBytes)) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n            sub.MSVCRT.dll_memcpy(uVar3, iVar1, dwBytes);\n            (*_sym.imp.ole32.dll_CoInitialize)(0);\n            iVar1 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(uVar3, 0, &lpPictDesc);\n            if ((iVar1 == 0) && (lpPictDesc != NULL)) {\n                (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(lpPictDesc, 0, 0, 0x41c424, &var_10h);\n                (**(*lpPictDesc + 8))(lpPictDesc);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar3);\n                if (var_10h != NULL) {\n                    lParam = 0;\n                    (**(*var_10h + 0xc))(var_10h, &lParam);\n                    if (lParam != 0) {\n                        lParam = fcn.004021bb(lParam);\n                        (*_sym.imp.GDI32.dll_GetObjectW)(lParam, 0x18, &lpvObject);\n                        (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, 0, 0, cx, cy, 6);\n                        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x172, 0, lParam);\n                    }\n                    (**(*var_10h + 8))(var_10h);\n                    return 1;\n                }\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar3);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 653
    },
    "004028d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004028d0(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    (*_sym.imp.MSVCRT.dll_memmove)(*param_1 + param_2 * 2, *param_1 + param_3 * 2, (param_1[1] - param_3) * 2 + 2);\n    return;\n}\n",
        "token_count": 94
    },
    "004029db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004029db(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040295b(param_1, param_2, param_3);\n    if (iVar1 != 0) {\n        return *(iVar1 + 0xc);\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "00402aed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00402aed(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00401184(param_2);\n    fcn.00401472(iVar1);\n    fcn.0040116c(*param_1 + param_1[1] * 2, unaff_retaddr);\n    param_1[1] = param_1[1] + iVar1;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "00402cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t * __thiscall fcn.00402cb4(int32_t *param_1, char **param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    fcn.00402886(param_2[1]);\n    pcVar3 = *param_2;\n    pcVar2 = param_1[1] + *param_1;\n    do {\n        cVar1 = *pcVar3;\n        *pcVar2 = cVar1;\n        pcVar2 = pcVar2 + 1;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    param_1[1] = param_1[1] + param_2[1];\n    return param_1;\n}\n",
        "token_count": 186
    },
    "00402ce2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402ce2(uint param_1, int32_t param_2)\n\n{\n    fcn.004013d1(param_2);\n    fcn.004013d1(param_2 + 0xc);\n    return param_1;\n}\n",
        "token_count": 60
    },
    "00402dbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402dbb(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (*param_2 != iVar1 && iVar1 <= *param_2) {\n        *param_2 = iVar1;\n    }\n    fcn.00401472(param_3);\n    fcn.004028d0(*param_2 + param_3, *param_2);\n    return;\n}\n",
        "token_count": 122
    },
    "00403101": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403101(int16_t **arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    fcn.004014eb();\n    piVar6 = *arg_8h;\n    iVar1 = *piVar6;\n    if (iVar1 != 0) {\n        piVar5 = piVar6 + 2;\n        do {\n            if (iVar1 == 0x7e) {\n                if ((piVar6[1] == 0x78) && (iVar2 = fcn.00401f4f(piVar5),  -1 < iVar2)) {\n                    fcn.00402b66(iVar2);\n                    fcn.004014eb();\n                    uVar3 = fcn.00402e03(&var_34h, &var_28h, 0);\n                    fcn.0040143c(uVar3);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_34h);\n                    fcn.004014bc(&var_1ch);\n                    piVar6 = piVar6 + 4;\n                    piVar5 = piVar5 + 4;\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_28h);\n                }\n                else {\n                    if ((piVar6[1] != 0x58) ||\n                       ((var_4h = fcn.00401f4f(piVar5),  var_4h < 0 || (uVar4 = fcn.00401f4f(piVar6 + 4),  uVar4 < 0))))\n                    goto code_r0x004031de;\n                    fcn.004017a8((var_4h & 0xff) << 8 | uVar4);\n                    piVar6 = piVar6 + 6;\n                    piVar5 = piVar5 + 6;\n                }\n            }\n            else {\ncode_r0x004031de:\n                fcn.004017a8(iVar1);\n                piVar6 = piVar6 + 1;\n                piVar5 = piVar5 + 1;\n            }\n            iVar1 = *piVar6;\n        } while (iVar1 != 0);\n    }\n    fcn.0040143c(&var_10h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n    return;\n}\n",
        "token_count": 611
    },
    "00403368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * fcn.00403368(uint16_t *param_1, uint *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint uVar3;\n    \n    param_2[1] = 0;\n    **param_2 = 0;\n    uVar3 = 2;\n    for (; (*param_1 != 0 && (*param_1 < 0x21)); param_1 = param_1 + 1) {\n    }\n    if (*param_1 != 0x2c) goto code_r0x004033a7;\n    while( true ) {\n        param_1 = param_1 + 1;\ncode_r0x004033a7:\n        uVar1 = *param_1;\n        if (uVar1 == 0x7b) break;\n        if ((uVar1 == 0) || (uVar1 == 0x2c)) {\n            return param_1;\n        }\n    }\n    do {\n        puVar2 = param_1 + 1;\n        uVar1 = *puVar2;\n        if (uVar1 == 0) {\n            return puVar2;\n        }\n        if (uVar1 == 0x7b) {\n            if (param_1[2] == 0x7b) goto code_r0x004033d5;\n        }\n        else if (uVar1 == 0x7d) {\n            if (param_1[2] != 0x7d) {\n                return param_1 + 2;\n            }\ncode_r0x004033d5:\n            puVar2 = param_1 + 2;\n        }\n        fcn.004017a8(uVar3, *puVar2);\n        param_1 = puVar2;\n    } while( true );\n}\n",
        "token_count": 406
    },
    "0040362e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040362e(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    iVar2 = in_ECX[1];\n    if (iVar2 < arg_8h) {\n        arg_8h = iVar2;\n    }\n    iVar1 = arg_ch[1];\n    if (iVar1 != 0) {\n        fcn.00402dbb(&arg_8h, iVar1);\n        iVar2 = 0;\n        if (0 < iVar1) {\n            arg_8h = arg_8h * 2;\n            do {\n                *(arg_8h + *in_ECX) = *(*arg_ch + iVar2 * 2);\n                iVar2 = iVar2 + 1;\n                arg_8h = arg_8h + 2;\n            } while (iVar2 < iVar1);\n        }\n        in_ECX[1] = in_ECX[1] + iVar1;\n        iVar2 = in_ECX[1];\n    }\n    return iVar2;\n}\n",
        "token_count": 250
    },
    "004044c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004044c1(uint hWnd)\n\n{\n    uint uVar1;\n    uint var_24h;\n    uint var_18h;\n    uint lpString;\n    \n    fcn.00403415(&lpString, hWnd);\n    fcn.00404680(&lpString);\n    fcn.00402a9c(0x41a840);\n    fcn.00402a9c(0x41a838);\n    fcn.004041e6(&var_18h, &var_24h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_24h);\n    uVar1 = (*_sym.imp.USER32.dll_SetWindowTextW)(hWnd, lpString);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpString);\n    return uVar1;\n}\n",
        "token_count": 201
    },
    "0040455d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0040455d(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpszPath;\n    uint ARG_0;\n    \n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    fcn.00418f10();\n    fcn.0040243a();\n    *0x41e9b8 = fcn.00402490(3);\n    *0x41e9b4 = fcn.00402490(0x28);\n    *0x41e9b0 = fcn.00402490(2);\n    *0x41e9ac = fcn.00402490(5);\n    *0x41e9a8 = fcn.00402490(0x15);\n    *0x41e9a4 = fcn.00402490(0x16);\n    *0x41e9a0 = fcn.00402490(0x17);\n    *0x41e998 = 0;\n    *0x41e99c = 0;\n    iVar3 = 0;\n    do {\n        iVar1 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)(0, &lpszPath, iVar3, 0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x41b4d8, iVar3);\n            fcn.00403685(&ARG_0, &lpszPath, 1);\n            uVar2 = 0;\n            do {\n                if (*(uVar2 + 0x41e3b4) == iVar3) {\n                    fcn.00403685(*(uVar2 + 0x41e3b8), &lpszPath, 0);\n                }\n                uVar2 = uVar2 + 8;\n            } while (uVar2 < 0x28);\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x40);\n    return;\n}\n",
        "token_count": 457
    },
    "0040464c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040464c(uint param_1)\n\n{\n    fcn.00402e9c(param_1);\n    fcn.0040431c(param_1, 0x41e9f4);\n    fcn.004043d7(param_1, 0x41ea00);\n    fcn.00404492(param_1);\n    fcn.00402e9c(param_1);\n    return;\n}\n",
        "token_count": 96
    },
    "00404680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404680(uint param_1)\n\n{\n    fcn.00402e9c(param_1);\n    fcn.00404261(param_1, 0x41e9e8);\n    fcn.0040464c(param_1);\n    return;\n}\n",
        "token_count": 63
    },
    "004046a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004046a3(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_2);\n    iVar4 = unaff_retaddr;\n    iVar3 = (*pcVar1)(unaff_retaddr);\n    if ((iVar2 <= iVar3) && (iVar4 = (*_sym.imp.MSVCRT.dll__wcsnicmp)(unaff_retaddr, iVar4, iVar2),  iVar4 == 0)) {\n        return unaff_retaddr + iVar2 * 2;\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "004046dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * fcn.004046dd(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    puVar1 = fcn.004046a3(param_1, param_2);\n    if (puVar1 != NULL) {\n        if (param_3 == 1) {\n            if (((0x2f < *puVar1) && (*puVar1 < 0x3a)) && (puVar1[1] == 0x3a)) {\ncode_r0x0040476e:\n                return puVar1 + 2;\n            }\n        }\n        else {\n            if (param_3 == 2) {\n                uVar2 = *puVar1;\n                if (uVar2 < 0x30) {\n                    return NULL;\n                }\n                if (0x39 < uVar2) {\n                    return NULL;\n                }\n                do {\n                    if (0x39 < uVar2) break;\n                    puVar1 = puVar1 + 1;\n                    uVar2 = *puVar1;\n                } while (0x2f < uVar2);\n            }\n            else if (param_3 == 3) {\n                if (puVar1[1] != 0x3a) {\n                    return NULL;\n                }\n                uVar2 = *puVar1;\n                if (((uVar2 < 0x30) || (0x39 < uVar2)) && ((uVar2 < 0x61 || (0x7a < uVar2)))) {\n                    if (uVar2 < 0x41) {\n                        return NULL;\n                    }\n                    if (0x5a < uVar2) {\n                        return NULL;\n                    }\n                }\n                goto code_r0x0040476e;\n            }\n            if (*puVar1 == 0x3a) {\n                return puVar1 + 1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 441
    },
    "00404880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint16_t * fcn.00404880(int16_t *param_1, uint param_2)\n\n{\n    uint16_t *puVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint unaff_retaddr;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar2 = *param_1;\n    piVar6 = param_1;\n    if (iVar2 == 0x2d) {\n        if (param_1[1] == 0x2d) {\n            piVar6 = param_1 + 1;\n        }\n        iVar2 = *piVar6;\n        if (iVar2 == 0x2d) goto code_r0x004048a9;\n    }\n    if (iVar2 != 0x2f) {\n        return NULL;\n    }\ncode_r0x004048a9:\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_2);\n    arg_10h = (*pcVar3)(param_1);\n    iVar5 = fcn.00401f7d(piVar6 + 1, unaff_retaddr, arg_10h);\n    if (iVar5 == 0) {\n        puVar1 = piVar6 + iVar4 + 1;\n        if (*puVar1 < 0x21) {\n            return puVar1;\n        }\n        if (*puVar1 == 0x3a) {\n            return puVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 364
    },
    "00404965": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404965(int32_t param_1, int32_t param_2, int32_t *param_3)\n\n{\n    if (*(param_1 + 8) < *param_3 + param_2) {\n        *param_3 = *(param_1 + 8) - param_2;\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00404c42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c42(uint arg_8h)\n\n{\n    uint var_ch;\n    \n    fcn.00402a9c(arg_8h);\n    fcn.00404680(&var_ch);\n    fcn.0040331e(var_ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 81
    },
    "00404e52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e52(uint param_1, int32_t *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    param_2[1] = 0;\n    **param_2 = 0;\n    iVar2 = fcn.004029db(param_1, L\"Directory\", 0);\n    if (iVar2 != 0) {\n        fcn.00401403(iVar2);\n        fcn.00404680(param_2);\n        iVar1 = *(*param_2 + -2 + param_2[1] * 2);\n        if ((iVar1 != 0x5c) && (iVar1 != 0x2f)) {\n            fcn.004017a8(0x5c);\n        }\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0040519e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040519e(uint arg_8h, uint16_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    \n    fcn.00402a9c(arg_8h);\n    uVar2 = 0x41b828;\n    fcn.00402aed(0x41b828);\n    for (; uVar1 = *arg_ch,  0x20 < *arg_ch; arg_ch = arg_ch + 1) {\n        fcn.004017a8();\n        uVar2 = uVar1;\n    }\n    fcn.00402aed(0x41b824, uVar2);\n    fcn.00404b47(var_ch, arg_10h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 199
    },
    "004053bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004053bb(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    uint pExecInfo;\n    uint var_50h;\n    char16_t *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint hObject;\n    uint var_18h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    fcn.004014eb();\n    fcn.004014eb();\n    sub.MSVCRT.dll_memset(&pExecInfo, 0, 0x3c);\n    uVar3 = 1;\n    bVar4 = (arg_ch & 1) != 0;\n    pExecInfo = 0x3c;\n    var_3ch = arg_10h;\n    var_50h = 0x740;\n    if (bVar4) {\n        var_50h = 0x8740;\n    }\n    var_38h = !bVar4;\n    if ((arg_ch & 2) != 0) {\n        var_48h = L\"runas\";\n    }\n    uVar1 = fcn.00404ea8(arg_8h, &var_ch);\n    fcn.00401403(uVar1);\n    if (var_8h == 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    }\n    else {\n        var_44h = var_ch;\n        var_40h = var_18h;\n        iVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            if ((arg_ch & 0x10000) == 0) {\n                (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hObject, 0xffffffff);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return uVar3;\n}\n",
        "token_count": 526
    },
    "004056fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004056fb(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if (*param_1 == 0x3a) {\n        uVar1 = param_1[1];\n        if ((0x2f < uVar1) && (uVar1 < 0x3a)) {\n            uVar2 = (*_sym.imp.MSVCRT.dll__wtol)(param_1 + 1);\n            for (; 0x20 < *param_1; param_1 = param_1 + 1) {\n            }\n            for (; (*param_1 != 0 && (*param_1 < 0x21)); param_1 = param_1 + 1) {\n            }\n        }\n    }\n    iVar3 = fcn.004053bb(param_1, uVar2, 0);\n    if (iVar3 != 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x0040574f. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    return uVar2;\n}\n",
        "token_count": 283
    },
    "00405915": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405915(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        var_4h = arg_ch;\n        do {\n            iVar1 = *(iVar2 + *(in_ECX + 0xc));\n            if (iVar1 != 0) {\n                fcn.004028f8();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar1);\n            }\n            iVar2 = iVar2 + 4;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    fcn.00412823(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 218
    },
    "00407550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407550(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.MSVCRT.dll__beginthreadex)(0, 0, arg_ch, arg_10h, 0, &var_4h);\n    *arg_8h = uVar1;\n    fcn.00407503(uVar1);\n    return;\n}\n",
        "token_count": 109
    },
    "004075da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004075da(uint param_1, uint param_2)\n\n{\n    fcn.00407579(param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 41
    },
    "004076ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004076ff(int32_t param_1)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_1 + 4), &var_10h);\n    *0x41ea40 = (var_8h - var_10h) / 2 + var_10h;\n    *0x41ea44 = (var_4h - var_ch) / 2 + var_ch;\n    return;\n}\n",
        "token_count": 135
    },
    "004077e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004077e6(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint pvParam;\n    int32_t var_1f8h;\n    int32_t var_1f4h;\n    uint var_1f0h;\n    uint var_14h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    var_4h = 0;\n    pvParam = 500;\n    iVar1 = (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x29, 500, &pvParam, 0);\n    if (iVar1 != 0) {\n        var_1f8h = in_ECX[7] + -0x1a + var_1f8h;\n        if ((*0x41e3a4 & 0x200) == 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x31);\n            var_1f8h = var_1f8h + iVar1;\n        }\n        iVar1 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(&var_1f0h);\n        if (iVar1 != 0) {\n            iVar2 = (**(*in_ECX + 8))(arg_8h, &var_14h, iVar1, 0x860);\n            if (iVar2 != 0) {\n                var_1f8h = var_1f8h + var_ch;\n                var_4h = 1;\n            }\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar1);\n        }\n        *arg_ch = var_1f8h;\n        arg_ch[1] = var_1f4h;\n    }\n    return var_4h;\n}\n",
        "token_count": 410
    },
    "00407de9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407de9(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint var_358h;\n    uint var_1c0h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_164h;\n    int16_t var_144h;\n    uint var_142h;\n    uint var_4h;\n    \n    sub.MSVCRT.dll_memcpy(&var_164h, 0x41e470, 0x160);\n    var_358h = 500;\n    iVar1 = (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x29, 0, &var_358h, 0);\n    if (iVar1 != 0) {\n        var_4h = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(var_4h, 0x5a);\n        var_144h = (*_sym.imp.KERNEL32.dll_MulDiv)(var_1c0h, 0x48, uVar2);\n        var_144h = -var_144h;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, var_4h);\n        var_142h._0_2_ = var_1b0h;\n        var_142h._2_1_ = var_1ach;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if (*(in_ECX + 0x38) != 0) {\n        puVar3 = fcn.004020d2(5, *(in_ECX + 0x38), 0);\n        if (puVar3 != NULL) goto code_r0x00407ead;\n    }\n    puVar3 = &var_164h;\n    *(in_ECX + 0x38) = 0;\ncode_r0x00407ead:\n    (*_sym.imp.USER32.dll_DialogBoxIndirectParamW)(uVar2, puVar3, arg_8h, fcn.0040762b);\n    return;\n}\n",
        "token_count": 502
    },
    "00407ec5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ec5(int32_t param_1)\n\n{\n    int32_t arg_14h;\n    uint lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00407a40();\n    fcn.00407908(0x4b3, &var_10h);\n    fcn.00407908(0x4b6, &lpRect);\n    var_ch = var_ch + -0x12 + (var_1ch - var_14h);\n    var_10h = 0xc;\n    var_4h = (var_ch - var_1ch) + var_14h;\n    (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 4), &lpRect);\n    var_8h = (var_18h - *(param_1 + 0x58)) + -0xd;\n    fcn.00407a11(0x4b6, var_10h, var_ch, var_8h - var_10h, var_4h - var_ch, 0);\n    arg_14h = *(param_1 + 0x58);\n    fcn.00407a11(0x4b7, (var_18h - arg_14h) + -0xb, var_ch + -1, arg_14h, arg_14h, 0);\n    return;\n}\n",
        "token_count": 360
    },
    "0040831a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040831a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    fcn.00408286();\n    param_1[0x1a] = 0;\n    param_1[0x19] = 0;\n    param_1[0x18] = 0;\n    param_1[0x17] = 0;\n    fcn.00408166(&var_ch, 0x4b5);\n    iVar1 = (**(*param_1 + 8))(var_ch, param_1 + 0x17, param_1[0xd], 0x850);\n    if (iVar1 != 0) {\n        if (param_1[5] < param_1[0x19] + 0x1a) {\n            param_1[5] = param_1[0x19] + 0x1a;\n        }\n        param_1[6] = param_1[6] + param_1[0x1a] + 9;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 261
    },
    "004084ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004084ec(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint pszPath;\n    uint var_24h;\n    uint var_14h;\n    int32_t *var_4h;\n    \n    sub.MSVCRT.dll_memset(&var_24h, 0, 0x20);\n    var_24h = *(param_1 + 4);\n    var_14h = 0x41;\n    iVar1 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&var_24h);\n    if (iVar1 != 0) {\n        pszPath._0_2_ = 0;\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(iVar1, &pszPath);\n        if (iVar2 != 0) {\n            fcn.00401403(&pszPath);\n            fcn.004082db();\n        }\n        var_4h = NULL;\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetMalloc)(&var_4h);\n        if ((iVar2 == 0) && (var_4h != NULL)) {\n            (**(*var_4h + 0x14))(var_4h, iVar1);\n            (**(*var_4h + 8))(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00408bb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408bb8(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    uint var_6ch;\n    uint var_50h;\n    \n    uVar2 = -((*0x41e3a4 & 0x1000) != 0) & 3;\n    if ((*0x41e3a4 & 0x800) == 0) {\n        if ((*0x41e3a4 & 0x1000) == 0) {\n            arg_8h_00 = uVar2 + 8;\n        }\n        else {\n            arg_8h_00 = uVar2 + 0x10;\n        }\n    }\n    else {\n        arg_8h_00 = uVar2 + 4;\n    }\n    if ((*0x41e3a4 & 0x40) == 0) {\n        fcn.004085c6();\n        uVar1 = fcn.00408433(arg_8h_00, arg_8h, arg_ch, 0);\n    }\n    else {\n        fcn.004085df();\n        uVar1 = fcn.00408433(arg_8h_00, arg_8h, arg_ch, 0);\n    }\n    fcn.004081a6();\n    return uVar1;\n}\n",
        "token_count": 314
    },
    "0040b2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040b2a0(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    if (param_2 != *(param_1 + 4)) {\n        if (param_2 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(param_2);\n            uVar2 = *(param_1 + 4);\n            if (uVar2 != 0) {\n                if (param_2 <= uVar2) {\n                    uVar2 = param_2;\n                }\n                (*_sym.imp.MSVCRT.dll_memmove)(uVar1, *(param_1 + 8), uVar2);\n            }\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(param_1 + 8));\n        *(param_1 + 8) = uVar1;\n        *(param_1 + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0040b3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040b3f0(char **param_1, char **param_2)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    char **in_EAX;\n    \n    pcVar1 = param_1[1];\n    if ((pcVar1 != param_2[1]) || (in_EAX = *param_1,  in_EAX != *param_2)) {\n        return in_EAX & 0xffffff00;\n    }\n    if (pcVar1 != NULL) {\n        in_EAX = param_1 + 2;\n        do {\n            if (*in_EAX != *(in_EAX + (param_2 - param_1))) goto code_r0x0040b458;\n            in_EAX = in_EAX + 1;\n        } while ((-8 - param_1) + in_EAX < pcVar1);\n    }\n    ppcVar2 = param_1[7];\n    if (ppcVar2 == param_2[7]) {\n        in_EAX = NULL;\n        if (ppcVar2 != NULL) {\n            do {\n                if (param_1[8][in_EAX] != param_2[8][in_EAX]) goto code_r0x0040b458;\n                in_EAX = in_EAX + 1;\n            } while (in_EAX < ppcVar2);\n        }\n        return CONCAT31(in_EAX >> 8, 1);\n    }\ncode_r0x0040b458:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 347
    },
    "0040b5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040b5a0(uint *param_1, int32_t param_2)\n\n{\n    *param_1 = 0x41be90;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n    param_1[2] = 0;\n    param_1[1] = 0;\n    if (*(param_2 + 4) != 0) {\n        fcn.0040b2a0(*(param_2 + 4));\n        (*_sym.imp.MSVCRT.dll_memmove)(param_1[2], *(param_2 + 8), *(param_2 + 4));\n    }\n    return param_1;\n}\n",
        "token_count": 179
    },
    "0040b670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040b670(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    param_1[2] = param_2[2];\n    param_1[3] = param_2[3];\n    param_1[4] = param_2[4];\n    param_1[5] = param_2[5];\n    fcn.0040b5a0(param_2 + 6);\n    puVar2 = param_2 + 9;\n    puVar3 = param_1 + 9;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 239
    },
    "0040b790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040b790(int32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBX;\n    uint *puVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint *puVar10;\n    \n    iVar8 = *(param_1 + 0xc);\n    if (0 < iVar8) {\n        piVar3 = *(param_1 + 0x10);\n        do {\n            puVar7 = *piVar3;\n            puVar10 = puVar7;\n            cVar2 = fcn.0040b3f0();\n            if (cVar2 != '\\0') {\n                piVar3 = param_2 + 9;\n                iVar8 = 0x20;\n                do {\n                    *piVar3 = *((puVar7 - param_2) + piVar3);\n                    piVar3 = piVar3 + 1;\n                    iVar8 = iVar8 + -1;\n                } while (iVar8 != 0);\n                if (unaff_EBX != 0) {\n                    piVar3 = 0x4;\n                    puVar4 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x44);\n                    if (puVar4 == NULL) {\n                        puVar4 = NULL;\n                    }\n                    else {\n                        *puVar4 = *puVar7;\n                        puVar4[1] = puVar7[1];\n                        puVar4[2] = puVar7[2];\n                        puVar4[3] = puVar7[3];\n                        puVar4[4] = puVar7[4];\n                        puVar4[5] = puVar7[5];\n                        puVar4[6] = 0x41be90;\n                        puVar4[7] = 0;\n                        puVar4[8] = 0;\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n                        puVar4[8] = 0;\n                        puVar4[7] = 0;\n                        uVar1 = puVar7[7];\n                        if (uVar1 != 0) {\n                            uVar5 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(uVar1);\n                            uVar6 = puVar4[7];\n                            if (uVar6 != 0) {\n                                if (uVar1 <= uVar6) {\n                                    uVar6 = uVar1;\n                                }\n                                (*_sym.imp.MSVCRT.dll_memmove)(uVar5, puVar4[8], uVar6);\n                            }\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar4[8]);\n                            puVar4[8] = uVar5;\n                            puVar4[7] = uVar1;\n                            (*_sym.imp.MSVCRT.dll_memmove)(puVar4[8], puVar7[8], puVar7[7]);\n                            piVar3 = param_2;\n                        }\n                        puVar7 = puVar7 + 9;\n                        puVar9 = puVar4 + 9;\n                        for (iVar8 = 8; iVar8 != 0; iVar8 = iVar8 + -1) {\n                            *puVar9 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                        iVar8 = 0;\n                    }\n                    fcn.00412806(iVar8, puVar10);\n                    *piVar3[3] = puVar4;\n                    (**(*piVar3 + 4))(unaff_EBX + 1, 1);\n                }\n                return 1;\n            }\n            unaff_EBX = unaff_EBX + 1;\n            piVar3 = piVar3 + 1;\n        } while (unaff_EBX < iVar8);\n    }\n    return 0;\n}\n",
        "token_count": 898
    },
    "0040b900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040b900(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.0040b790(param_2);\n    if (cVar1 == '\\0') {\n        if (*param_1 <= param_1[3]) {\n            fcn.004126ec();\n        }\n        iVar2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x44);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040b670(param_2);\n            fcn.00412806(0);\n            *param_1[4] = uVar3;\n            return;\n        }\n        fcn.00412806(0);\n        *param_1[4] = 0;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0040c550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c550(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    fcn.0041353e();\n    piVar1 = *(param_1 + 0x4b4);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    fcn.00413318();\n    piVar1 = *(param_1 + 0x7c);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    fcn.00413318();\n    piVar1 = *(param_1 + 0x5c);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    fcn.00413318();\n    piVar1 = *(param_1 + 0x3c);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    fcn.00413318();\n    piVar1 = *(param_1 + 0x1c);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "0040c930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c930(int32_t param_1)\n\n{\n    sub.MSVCRT.dll_memset(param_1, 8, 0x90);\n    sub.MSVCRT.dll_memset(param_1 + 0x90, 9, 0x70);\n    *(param_1 + 0x100) = 0x7070707;\n    *(param_1 + 0x104) = 0x7070707;\n    *(param_1 + 0x108) = 0x7070707;\n    *(param_1 + 0x10c) = 0x7070707;\n    *(param_1 + 0x110) = 0x7070707;\n    *(param_1 + 0x114) = 0x7070707;\n    *(param_1 + 0x118) = 0x8080808;\n    *(param_1 + 0x11c) = 0x8080808;\n    *(param_1 + 0x120) = 0x5050505;\n    *(param_1 + 0x124) = 0x5050505;\n    *(param_1 + 0x128) = 0x5050505;\n    *(param_1 + 300) = 0x5050505;\n    *(param_1 + 0x130) = 0x5050505;\n    *(param_1 + 0x134) = 0x5050505;\n    *(param_1 + 0x138) = 0x5050505;\n    *(param_1 + 0x13c) = 0x5050505;\n    return;\n}\n",
        "token_count": 375
    },
    "0040d000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0040d000(int32_t *param_1)\n\n{\n    uchar uVar1;\n    uchar *puVar2;\n    char cVar3;\n    \n    if (*param_1 != 0x20) {\n        uVar1 = *(param_1 + 0xc);\n        param_1[0xc] = param_1[0xc] >> 8;\n        *param_1 = *param_1 + 8;\n        return uVar1;\n    }\n    if (param_1[3] <= param_1[2]) {\n        cVar3 = fcn.004133ae();\n        if (cVar3 == '\\0') {\n            param_1[10] = param_1[10] + 1;\n            return 0xff;\n        }\n    }\n    puVar2 = param_1[2];\n    uVar1 = *puVar2;\n    param_1[2] = puVar2 + 1;\n    return uVar1;\n}\n",
        "token_count": 220
    },
    "0040df30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040df30(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 0x14) == 0) || (*(param_1 + 0xb4) != *(param_1 + 0xb0))) {\n        fcn.0040201c(*(param_1 + 0x14));\n        iVar1 = fcn.00402a87(*(param_1 + 0xb4));\n        *(param_1 + 0x14) = iVar1;\n        if (iVar1 == 0) {\n            return 0x8007000e;\n        }\n        *(param_1 + 0xb0) = *(param_1 + 0xb4);\n    }\n    return 0;\n}\n",
        "token_count": 173
    },
    "0040f6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0040f6a0(int32_t param_1, int32_t param_2)\n\n{\n    (**(param_2 + 4))(param_2, *(param_1 + 0x10));\n    *(param_1 + 0x10) = 0;\n    (**(param_2 + 4))(param_2, *(param_1 + 0x14));\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 108
    },
    "0040f850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f850(uint *param_1)\n\n{\n    int32_t *piVar1;\n    \n    *param_1 = 0x41c160;\n    param_1[1] = 0x41c150;\n    param_1[2] = 0x41c13c;\n    (**0x41e80c)(0x41e808, param_1[0xc]);\n    param_1[0xc] = 0;\n    (**0x41e80c)(0x41e808, param_1[0xd]);\n    param_1[0xd] = 0;\n    fcn.0040201c(param_1[5]);\n    piVar1 = param_1[4];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "004108e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004108e0(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 0xc) == 0) || (param_2 != *(param_1 + 0x10))) {\n        fcn.00402003(*(param_1 + 0xc));\n        *(param_1 + 0xc) = 0;\n        uVar1 = fcn.00402a64(param_2);\n        *(param_1 + 0xc) = uVar1;\n        *(param_1 + 4) = uVar1;\n        *(param_1 + 8) = uVar1;\n        *(param_1 + 0x10) = param_2;\n    }\n    return *(param_1 + 0xc) != 0;\n}\n",
        "token_count": 190
    },
    "00410dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410dd0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *puVar2;\n    uint *unaff_EBX;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    uVar3 = *(param_1 + 0x6d + in_EAX);\n    uVar1 = *(param_1 + 0x6d + param_2);\n    if (uVar3 != uVar1) {\n        puVar4 = *(param_1 + 0xf0 + uVar1 * 4);\n        if (puVar4 != NULL) {\n            *(param_1 + 0xf0 + uVar1 * 4) = *puVar4;\n            puVar2 = unaff_EBX + 2;\n            iVar5 = puVar4 - unaff_EBX;\n            do {\n                *puVar4 = puVar2[-2];\n                puVar4[1] = puVar2[-1];\n                *(iVar5 + puVar2) = *puVar2;\n                puVar4 = puVar4 + 3;\n                puVar2 = puVar2 + 3;\n                param_2 = param_2 + -1;\n            } while (param_2 != 0);\n            *unaff_EBX = *(param_1 + 0xf0 + uVar3 * 4);\n            *(param_1 + 0xf0 + uVar3 * 4) = unaff_EBX;\n            return;\n        }\n        fcn.00410b00();\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "00411e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411e10(uint *param_1)\n\n{\n    *param_1 = 0x41c200;\n    param_1[1] = 0x41c1f0;\n    fcn.00402003(param_1[3]);\n    (**0x41e85c)(0x41e858, param_1[0x20]);\n    param_1[0x1e] = 0;\n    param_1[0x20] = 0;\n    fcn.00402003(param_1[0xd]);\n    param_1[0xd] = 0;\n    return;\n}\n",
        "token_count": 141
    },
    "00412569": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00412569(ushort *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00412520();\n    if (-1 < iVar1) {\n        sub.MSVCRT.dll_memcpy(param_2, param_1, 0x10);\n        *param_1 = 0;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 99
    },
    "0041270d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041270d(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t unaff_EDI;\n    \n    if (arg_8h != *(in_ECX + 4)) {\n        uVar1 = unaff_EDI;\n        if (arg_8h < 0x80000000) goto code_r0x0041273d;\n        do {\n            do {\n                sub.MSVCRT.dll__CxxThrowException();\n                uVar1 = unaff_EDI;\ncode_r0x0041273d:\n                unaff_EDI = *(in_ECX + 0x10);\n                uVar2 = unaff_EDI * arg_8h;\n            } while (uVar2 / unaff_EDI != arg_8h);\n            unaff_EDI = 0;\n            if (uVar2 == 0) goto code_r0x00412791;\n            unaff_EDI = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(uVar2, uVar1);\n        } while (unaff_EDI == 0);\n        uVar1 = *(in_ECX + 8);\n        if (arg_8h <= *(in_ECX + 8)) {\n            uVar1 = arg_8h;\n        }\n        sub.MSVCRT.dll_memcpy(unaff_EDI, *(in_ECX + 0xc), *(in_ECX + 0x10) * uVar1);\ncode_r0x00412791:\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(in_ECX + 0xc));\n        *(in_ECX + 0xc) = unaff_EDI;\n        *(in_ECX + 4) = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "004127a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004127a7(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x10);\n    (*_sym.imp.MSVCRT.dll_memmove)\n              (iVar1 * param_2 + *(param_1 + 0xc), iVar1 * param_3 + *(param_1 + 0xc), \n               (*(param_1 + 8) - param_3) * iVar1);\n    return;\n}\n",
        "token_count": 126
    },
    "00412948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412948(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    uVar1 = fcn.0041289c(arg_8h, arg_ch, &var_4h, arg_10h, arg_14h, arg_18h, 1);\n    if (var_4h != NULL) {\n        (**(*var_4h + 8))(var_4h);\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "00412982": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412982(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.004122f5(0, 0, 1, &var_8h);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.004124e5(arg_ch, arg_10h);\n        if ((cVar2 == '\\0') || (cVar2 = fcn.00412340(var_8h, var_4h, &var_10h),  cVar2 == '\\0')) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        return (-uVar1 & 0x7fffbffb) + 0x80004005;\n    }\n    return -0x7fffbffb;\n}\n",
        "token_count": 229
    },
    "00412a11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00412a11(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x41b804;\n    param_1[1] = 0x41b7f4;\n    iVar1 = param_1[3];\n    if (iVar1 != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        param_1[3] = -1;\n    }\n    return 1;\n}\n",
        "token_count": 130
    },
    "00412a26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412a26(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = fcn.0041240e(arg_ch, arg_10h, &arg_10h);\n    arg_ch = arg_ch & 0xffffff00 | uVar1;\n    if (arg_14h != NULL) {\n        *arg_14h = arg_10h;\n    }\n    fcn.004129ea(arg_ch);\n    return;\n}\n",
        "token_count": 127
    },
    "00412abe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412abe(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    \n    uVar3 = fcn.0041249c(arg_ch, arg_10h, &arg_10h);\n    arg_ch = arg_ch & 0xffffff00 | uVar3;\n    puVar1 = arg_8h + 0x10;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + arg_10h;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + CARRY4(uVar2, arg_10h);\n    if (arg_14h != NULL) {\n        *arg_14h = arg_10h;\n    }\n    fcn.004129ea(arg_ch);\n    return;\n}\n",
        "token_count": 227
    },
    "004133a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004133a6(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 4))(param_2);\n    }\n    piVar1 = *(param_1 + 0xc);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    *(param_1 + 0xc) = param_2;\n    return param_2;\n}\n",
        "token_count": 129
    },
    "00413417": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00413417(uint *param_1)\n\n{\n    uint32_t *puVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    \n    cVar4 = fcn.004133ae();\n    if (cVar4 == '\\0') {\n        puVar1 = param_1 + 4;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + 1;\n        param_1[5] = param_1[5] + (0xfffffffe < uVar3);\n        return 0xff;\n    }\n    uVar2 = **param_1;\n    *param_1 = *param_1 + 1;\n    return uVar2;\n}\n",
        "token_count": 169
    },
    "00413455": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413455(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    iVar2 = fcn.00413438(*(arg_8h + 0x10) - *(arg_8h + 0x18), \n                         (*(arg_8h + 0x14) - *(arg_8h + 0x1c)) - (*(arg_8h + 0x10) < *(arg_8h + 0x18)), arg_10h, 0);\n    uVar3 = 0;\n    uVar4 = 0;\n    if (iVar2 != 0) {\n        uVar3 = (**(**(arg_8h + 8) + 0xc))(*(arg_8h + 8), arg_ch, iVar2, &var_4h);\n        puVar1 = arg_8h + 0x18;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 + var_4h;\n        *(arg_8h + 0x1c) = *(arg_8h + 0x1c) + CARRY4(uVar4, var_4h);\n        uVar4 = var_4h;\n        if (var_4h == 0) {\n            *(arg_8h + 0x20) = 1;\n        }\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = uVar4;\n    }\n    return uVar3;\n}\n",
        "token_count": 399
    },
    "00413502": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413502(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    fcn.004134b7(*(arg_8h + 0x10), *(arg_8h + 0x14), arg_ch, arg_10h, &var_4h);\n    puVar1 = arg_8h + 0x10;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + var_4h;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + CARRY4(uVar2, var_4h);\n    if (arg_14h != NULL) {\n        *arg_14h = var_4h;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "004135c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004135c9(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 4))(param_2);\n    }\n    piVar1 = *(param_1 + 0x14);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    *(param_1 + 0x14) = param_2;\n    return param_2;\n}\n",
        "token_count": 131
    },
    "00413811": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413811(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004075c7(param_1, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004075c7(param_1 + 4, 0);\n        if (iVar1 == 0) {\n            fcn.004075c7(param_1 + 8, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00413ab5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413ab5(int32_t *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    puVar1 = arg_10h;\n    uVar4 = *arg_10h;\n    *arg_10h = 0;\n    while( true ) {\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar2 = 0x80000000;\n        if (uVar4 < 0x80000000) {\n            uVar2 = uVar4;\n        }\n        iVar3 = (**(*arg_8h + 0xc))(arg_8h, arg_ch, uVar2, &arg_10h);\n        *puVar1 = *puVar1 + arg_10h;\n        arg_ch = arg_ch + arg_10h;\n        uVar4 = uVar4 - arg_10h;\n        if (iVar3 != 0) break;\n        if (arg_10h == NULL) {\n            return 0;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 276
    },
    "00413b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00413b00(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = arg_10h;\n    uVar2 = fcn.00413ab5(arg_8h, arg_ch, &arg_10h);\n    if (uVar2 == 0) {\n        uVar2 = iVar1 != arg_10h;\n    }\n    return uVar2;\n}\n",
        "token_count": 116
    },
    "00413b29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413b29(int32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg_10h;\n    if (arg_10h != 0) {\n        do {\n            uVar1 = uVar3;\n            if (0x7fffffff < uVar3) {\n                uVar1 = 0x80000000;\n            }\n            iVar2 = (**(*arg_8h + 0xc))(arg_8h, arg_ch, uVar1, &arg_10h);\n            arg_ch = arg_ch + arg_10h;\n            uVar3 = uVar3 - arg_10h;\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_10h == 0) {\n                return -0x7fffbffb;\n            }\n        } while (uVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "00413c06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413c06(int32_t param_1)\n\n{\n    *(param_1 + 0x10) = 0;\n    fcn.0040759f(param_1 + 4);\n    return;\n}\n",
        "token_count": 53
    },
    "00413d2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00413d2c(void)\n\n{\n    int32_t in_EAX;\n    unkuint3 Var1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    uint var_8h;\n    int32_t var_4h;\n    \n    Var1 = in_EAX >> 8;\n    if (*(in_EAX + 8) != *(unaff_ESI + 8)) {\n        return Var1 << 8;\n    }\n    var_4h = 0;\n    if (0 < *(in_EAX + 8)) {\n        piVar2 = *(in_EAX + 0xc);\n        iVar4 = *(unaff_ESI + 0xc) - piVar2;\n        piVar3 = *(unaff_ESI + 0xc) + 4;\n        do {\n            if ((*piVar2 != *(iVar4 + piVar2)) || (piVar2[1] != *piVar3)) goto code_r0x00413df7;\n            var_4h = var_4h + 1;\n            piVar3 = piVar3 + 2;\n            piVar2 = piVar2 + 2;\n        } while (var_4h < *(in_EAX + 8));\n    }\n    if (*(in_EAX + 0x1c) == *(unaff_ESI + 0x1c)) {\n        var_4h = 0;\n        if (0 < *(in_EAX + 0x1c)) {\n            piVar2 = *(in_EAX + 0x20);\n            iVar4 = *(unaff_ESI + 0x20) - piVar2;\n            piVar3 = *(unaff_ESI + 0x20) + 4;\n            do {\n                if ((*piVar2 != *(iVar4 + piVar2)) || (piVar2[1] != *piVar3)) goto code_r0x00413df7;\n                var_4h = var_4h + 1;\n                piVar3 = piVar3 + 2;\n                piVar2 = piVar2 + 2;\n            } while (var_4h < *(in_EAX + 0x1c));\n        }\n        var_4h = 0;\n        if (0 < *(in_EAX + 0x58)) {\n            piVar3 = *(unaff_ESI + 0x5c);\n            iVar4 = *(in_EAX + 0x5c) - piVar3;\n            do {\n                if ((*(iVar4 + piVar3) != *piVar3) || (*(iVar4 + 4 + piVar3) != piVar3[1])) goto code_r0x00413df7;\n                var_4h = var_4h + 1;\n                piVar3 = piVar3 + 2;\n            } while (var_4h < *(in_EAX + 0x58));\n        }\n        if (*(in_EAX + 0x30) == *(unaff_ESI + 0x30)) {\n            return *(in_EAX + 0x44) & 0xffffff00 | *(in_EAX + 0x44) == *(unaff_ESI + 0x44);\n        }\n    }\ncode_r0x00413df7:\n    return Var1 << 8;\n}\n",
        "token_count": 752
    },
    "00413f0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00413f0b(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x1c)) {\n        piVar2 = *(param_1 + 0x20);\n        do {\n            if (*piVar2 == param_2) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 2;\n        } while (iVar1 < *(param_1 + 0x1c));\n    }\n    return -1;\n}\n",
        "token_count": 156
    },
    "00413f2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00413f2f(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x1c)) {\n        piVar2 = *(param_1 + 0x20) + 4;\n        do {\n            if (*piVar2 == param_2) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 2;\n        } while (iVar1 < *(param_1 + 0x1c));\n    }\n    return -1;\n}\n",
        "token_count": 160
    },
    "00413f56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00413f56(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x30)) {\n        piVar2 = *(param_1 + 0x34);\n        do {\n            if (*piVar2 == param_2) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 < *(param_1 + 0x30));\n    }\n    return -1;\n}\n",
        "token_count": 153
    },
    "00413fc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413fc7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            if (*(iVar2 + *(in_ECX + 0xc)) != 0) {\n                fcn.00413f7a(1);\n            }\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.00412823(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 197
    },
    "0041406a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041406a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0041270d(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.004027b7();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004140a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004140a3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0041270d(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.00413c65();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004140e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004140e0(uint *param_1)\n\n{\n    *param_1 = 0x41c334;\n    fcn.00413c15();\n    fcn.00407519(param_1 + 3);\n    fcn.00407519(param_1 + 2);\n    fcn.00407519(param_1 + 1);\n    return;\n}\n",
        "token_count": 86
    },
    "00414155": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414155(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00413c44();\n    fcn.004127d6();\n    iVar2 = 0;\n    if (0 < *(unaff_EDI + 0x1c)) {\n        do {\n            fcn.00413c65();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_EDI + 0x1c));\n    }\n    var_4h = 0;\n    var_8h = 0;\n    if (0 < *(unaff_EDI + 8)) {\n        do {\n            iVar2 = *(*(unaff_EDI + 0xc) + var_8h * 4);\n            iVar1 = *(iVar2 + 0x18);\n            iVar3 = iVar1;\n            fcn.00413c65(*(iVar2 + 0x14), iVar1);\n            fcn.00413c65();\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                iVar2 = fcn.00413f2f(iVar3, var_4h);\n                if (iVar2 < 0) {\n                    fcn.004027b7();\n                }\n                var_4h = var_4h + 1;\n            }\n            var_8h = var_8h + 1;\n        } while (var_8h < *(unaff_EDI + 8));\n    }\n    iVar2 = 0;\n    if (0 < *(unaff_EDI + 0x30)) {\n        do {\n            fcn.004027b7();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_EDI + 0x30));\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "004142f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004142f8(int32_t param_1)\n\n{\n    fcn.00407519(param_1 + 8);\n    fcn.00407519(param_1 + 4);\n    fcn.00407519(param_1);\n    return;\n}\n",
        "token_count": 62
    },
    "0041434d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041434d(uint param_1, int32_t param_2)\n\n{\n    fcn.004142e1(param_2);\n    fcn.004142e1(param_2 + 0x14);\n    fcn.004142ca(param_2 + 0x28);\n    fcn.004142ca(param_2 + 0x3c);\n    return param_1;\n}\n",
        "token_count": 94
    },
    "00414386": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414386(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        var_4h = arg_ch;\n        do {\n            iVar1 = *(iVar2 + *(in_ECX + 0xc));\n            if (iVar1 != 0) {\n                fcn.0041410e();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar1);\n            }\n            iVar2 = iVar2 + 4;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    fcn.00412823(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 218
    },
    "004143fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004143fe(uint param_1, int32_t param_2)\n\n{\n    fcn.0041434d(param_2);\n    fcn.004142e1(param_2 + 0x50);\n    return param_1;\n}\n",
        "token_count": 60
    },
    "0041441f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041441f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        var_4h = arg_ch;\n        do {\n            iVar1 = *(iVar2 + *(in_ECX + 0xc));\n            if (iVar1 != 0) {\n                fcn.004142f8();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar1);\n            }\n            iVar2 = iVar2 + 4;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    fcn.00412823(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 219
    },
    "00414b63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414b63(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0041270d(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.00414af0();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00414c3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414c3e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            if (*(iVar2 + *(in_ECX + 0xc)) != 0) {\n                fcn.00414b44(1);\n            }\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.00412823(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 197
    },
    "004152e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004152e3(int32_t param_1, uint param_2)\n\n{\n    fcn.00413c8f();\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    *(param_1 + 0x2e) = 0;\n    (**(**(param_1 + 0x1c) + 0x1c))(*(param_1 + 0x1c), param_2);\n    return;\n}\n",
        "token_count": 117
    },
    "00415515": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415515(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = *(*(*(param_1 + 0x14) + 0x70) + (*(param_1 + 0x28) + *(param_1 + 0x24)) * 4);\n    if ((((*(iVar1 + 0x1d) == '\\0') && (*(iVar1 + 0x1e) != '\\0')) && (*(param_1 + 0x2d) != '\\0')) &&\n       (*(iVar1 + 0xc) != ~*(*(param_1 + 0xc) + 0x18))) {\n        uVar2 = 3;\n    }\n    else {\n        uVar2 = 0;\n    }\n    fcn.004152e3(uVar2);\n    return;\n}\n",
        "token_count": 195
    },
    "00415552": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415552(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    \n    do {\n        if ((*(*(param_1 + 0x18) + 8) <= *(param_1 + 0x28)) ||\n           (puVar1 = *(*(*(param_1 + 0x14) + 0x70) + (*(param_1 + 0x24) + *(param_1 + 0x28)) * 4), \n           (*puVar1 | puVar1[1]) != 0)) {\n            return 0;\n        }\n        iVar2 = fcn.00415431();\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = fcn.00415515();\n    } while (iVar2 == 0);\n    return iVar2;\n}\n",
        "token_count": 198
    },
    "004158f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004158f5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(*(in_ECX + 0xc) + iVar2));\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.00412823(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 190
    },
    "00415bd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415bd5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            if (*(iVar2 + *(in_ECX + 0xc)) != 0) {\n                fcn.004159ed(1);\n            }\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.00412823(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 195
    },
    "00415c24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415c24(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            if (*(iVar2 + *(in_ECX + 0xc)) != 0) {\n                fcn.00415a4c(1);\n            }\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.00412823(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 197
    },
    "004160b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004160b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        var_4h = arg_ch;\n        do {\n            iVar1 = *(iVar2 + *(in_ECX + 0xc));\n            if (iVar1 != 0) {\n                fcn.00415a88();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar1);\n            }\n            iVar2 = iVar2 + 4;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    fcn.00412823(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 219
    },
    "0041653e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041653e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.004127d6();\n    fcn.0041270d(*(param_1 + 8));\n    iVar1 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            fcn.00413c65();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00416593": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416593(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    iVar2 = arg_8h;\n    fcn.00404965(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar3 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            puVar1 = *(iVar3 + *(in_ECX + 0xc));\n            if (puVar1 != NULL) {\n                (***puVar1)(1);\n            }\n            iVar3 = iVar3 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.00412823(iVar2, arg_ch);\n    return;\n}\n",
        "token_count": 208
    },
    "00416c04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416c04(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.004127d6();\n    fcn.0041270d(*(param_1 + 0x44));\n    iVar1 = 0;\n    if (0 < *(param_1 + 0x44)) {\n        do {\n            fcn.004027b7();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0x44));\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00416d75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00416d75(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 8);\n    iVar1 = 0;\n    if (0 < iVar3) {\n        piVar2 = *(param_1 + 0xc);\n        do {\n            iVar1 = iVar1 + *(*piVar2 + 0x18);\n            piVar2 = piVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "00417269": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417269(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0041270d(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.0041723f();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00418939": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00418939(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0x7c)) {\n        piVar1 = *(param_1 + 0x80);\n        do {\n            if (*(*piVar1 + 0x74) == param_2) {\n                return param_2;\n            }\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 < *(param_1 + 0x7c));\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "00418a96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418a96(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0041270d(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.00413f9d();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00418c41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00418c41(int32_t param_1, int32_t param_2)\n\n{\n    fcn.00413ca3(param_2);\n    fcn.00413ca3(param_2 + 4);\n    *(param_1 + 8) = *(param_2 + 8);\n    *(param_1 + 0xc) = *(param_2 + 0xc);\n    fcn.00416df6(param_2 + 0x10);\n    fcn.00416df6(param_2 + 0x24);\n    fcn.00418b93(param_2 + 0x38);\n    fcn.00418b93(param_2 + 0x4c);\n    return param_1;\n}\n",
        "token_count": 170
    },
    "00418cc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00418cc8(uint *param_1, int32_t param_2)\n\n{\n    fcn.00418c41(-(param_2 != 0) & param_2 + 0x14U);\n    fcn.00418517(param_2);\n    *param_1 = 0x41c338;\n    param_1[0x1d] = *(param_2 + 0x74);\n    fcn.00418c9e(param_2 + 0x78);\n    fcn.00418c9e(param_2 + 0x8c);\n    fcn.00418b93(param_2 + 0xa0);\n    fcn.00418b93(param_2 + 0xb4);\n    return param_1;\n}\n",
        "token_count": 177
    },
    "00418d6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418d6e(int32_t param_1)\n\n{\n    uint *puVar1;\n    uchar auStack204 [200];\n    \n    puVar1 = *(param_1 + 0x18) + *(param_1 + 0x7c) * 8;\n    fcn.00418acf(*puVar1, puVar1[1]);\n    fcn.00418d41(auStack204);\n    fcn.0041410e();\n    return;\n}\n",
        "token_count": 111
    },
    "00418dac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418dac(uint param_1)\n\n{\n    fcn.00418d6e();\n    fcn.004136a9(param_1);\n    return;\n}\n",
        "token_count": 40
    },
    "00418dd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418dd1(uint param_1)\n\n{\n    fcn.00418d6e();\n    fcn.004136a9(param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "00419020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419020(code *param_1, uint *param_2, uint *param_3, uint *param_4, uint *param_5)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    if (param_1 == NULL) {\n        puVar1 = cpuid_basic_info(0);\n    }\n    else if (param_1 == 0x1) {\n        puVar1 = cpuid_Version_info(1);\n    }\n    else if (param_1 == 0x2) {\n        puVar1 = cpuid_cache_tlb_info(2);\n    }\n    else if (param_1 == 0x3) {\n        puVar1 = cpuid_serial_info(3);\n    }\n    else if (param_1 == 0x4) {\n        puVar1 = cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (param_1 == 0x5) {\n        puVar1 = cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (param_1 == 0x6) {\n        puVar1 = cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (param_1 == 0x7) {\n        puVar1 = cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (param_1 == 0x9) {\n        puVar1 = cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (param_1 == 0xa) {\n        puVar1 = cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (param_1 == 0xb) {\n        puVar1 = cpuid_Extended_Topology_info(0xb);\n    }\n    else if (param_1 == 0xd) {\n        puVar1 = cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (param_1 == 0xf) {\n        puVar1 = cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (param_1 == reloc.OLEAUT32.dll_SysReAllocString) {\n        puVar1 = cpuid_brand_part1_info(0x80000002);\n    }\n    else if (param_1 == 0x80000003) {\n        puVar1 = cpuid_brand_part2_info(0x80000003);\n    }\n    else if (param_1 == 0x80000004) {\n        puVar1 = cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        puVar1 = cpuid(param_1);\n    }\n    uVar4 = puVar1[1];\n    uVar3 = puVar1[2];\n    uVar2 = puVar1[3];\n    *param_2 = *puVar1;\n    *param_3 = uVar4;\n    *param_4 = uVar2;\n    *param_5 = uVar3;\n    return;\n}\n",
        "token_count": 678
    },
    "00419100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00419100(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    \n    iVar1 = 0;\n    piVar2 = 0x41e90c;\n    uVar3 = 0;\n    while (((piVar2[-2] != *(param_1 + 4) || (piVar2[-1] != *(param_1 + 8))) || (*piVar2 != *(param_1 + 0xc)))) {\n        uVar3 = uVar3 + 0xc;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 3;\n        if (0x23 < uVar3) {\n            return -1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 184
    },
    "00407543": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00407543(uint param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1, 0xffffffff);\n    return;\n}\n",
        "token_count": 41
    },
    "004138e4": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004138e4(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpHandles;\n    uint var_4h;\n    \n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    if (arg_ch != 0) {\n        in_ECX[5] = arg_8h;\n        in_ECX[4] = arg_ch;\n        fcn.004075b3();\n        fcn.0040759f(in_ECX + 1);\n        lpHandles = *in_ECX;\n        var_4h = in_ECX[2];\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &lpHandles, 0, 0xffffffff);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "004126bd": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.004126bd(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    \n    while( true ) {\n        uVar1 = *param_1;\n        uVar2 = *param_2;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n        if (uVar1 < uVar2) {\n            return 0xffffffff;\n        }\n        if (uVar2 < uVar1) break;\n        if (uVar1 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 151
    },
    "00402a64": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid fcn.00402a64(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004029fa(param_1);\n    if (iVar1 == 0) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x1000, 4);\n    return;\n}\n",
        "token_count": 84
    },
    "00416a25": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00416a25(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *arg_ch;\n    \n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x54) = 0;\n    fcn.00413c8f();\n    iVar1 = (**(*param_2 + 0x10))(param_2, 0, 0, 1, param_1 + 0x20);\n    if (iVar1 == 0) {\n        arg_ch = param_2;\n        iVar1 = (**(*param_2 + 0x10))(param_2, 0, 0, 2, param_1 + 0x28);\n        if (iVar1 == 0) {\n            iVar1 = (**(*param_2 + 0x10))(param_2, *(param_1 + 0x20), *(param_1 + 0x24), 0, 0);\n            if (iVar1 == 0) {\n                iVar1 = fcn.004168ca(param_2, arg_ch);\n                if (iVar1 == 0) {\n                    fcn.004136a9(param_2);\n                    iVar1 = 0;\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 303
    },
    "00407773": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407773(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), 0x4b3);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar3, 0xf4, 0, 1);\n    uVar5 = 0x4b4;\n    uVar3 = (*pcVar1)(*(param_1 + 4), 0x4b4);\n    uVar4 = 0xf4;\n    (*pcVar2)(uVar3, 0xf4, 0, 1);\n    (*pcVar2)(*(param_1 + 4), 0x401, uVar5, 0);\n    uVar3 = (*pcVar1)(*(param_1 + 4), uVar4);\n    (*pcVar2)(uVar3, 0xf4, 1, 1);\n    uVar3 = (*pcVar1)(*(param_1 + 4), uVar4);\n    (*_sym.imp.USER32.dll_SetFocus)(uVar3);\n    return;\n}\n",
        "token_count": 315
    },
    "00408e5e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408e5e(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint unaff_EDI;\n    uint uVar7;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    *0x41e9d8 = 0;\n    if ((*0x41e3a4 & 0x200) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0x65);\n        (*_sym.imp.USER32.dll_LoadIconW)(uVar3);\n        pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n        uVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x32, 0);\n        iVar4 = (*pcVar2)(0x31, uVar3);\n        uVar3 = (*pcVar1)(0, 0x65, 1, iVar4);\n        iVar5 = (*_sym.imp.USER32.dll_LoadImageW)(uVar3);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if (iVar5 == 0) {\n            iVar5 = iVar4;\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(param_1[1], 0x80, 1, iVar4);\n        (*pcVar1)(param_1[1], 0x80, 0, iVar5);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    if ((*0x41e3a4 & 0x4000) != 0) {\n        uVar7 = 0x4b2;\n        (*_sym.imp.USER32.dll_GetDlgItem)(param_1[1], 0x4b2);\n        (*pcVar1)(param_1[1], 0x4b2);\n        uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(unaff_EDI, 0xfffffff0);\n        uVar3 = 0xfffffff0;\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar7, 0xfffffff0, uVar6 | 0x80);\n        iVar5 = param_1[1];\n        (*pcVar1)(iVar5, 0x4b5);\n        (*pcVar1)(param_1[1], 0x4b5);\n        uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar3, 0xfffffff0);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(iVar5, 0xfffffff0, uVar6 | 0x80);\n    }\n    fcn.00408186(0x4b2, param_1[4]);\n    fcn.00408751(param_1[3]);\n    uVar6 = param_1[2] & 3;\n    if (uVar6 == 0) {\n        uVar3 = fcn.00402490(0x1b);\n        fcn.00408258(0x4b3, uVar3);\n        uVar3 = 0x1c;\ncode_r0x00409005:\n        uVar3 = fcn.00402490(uVar3);\n        fcn.00408258(0x4b4, uVar3);\n    }\n    else if (uVar6 == 1) {\n        uVar3 = fcn.00402490(0x19);\n        fcn.00408258(0x4b3, uVar3);\n        fcn.00407925(0x4b4, 0);\n    }\n    else if (uVar6 == 2) {\n        uVar3 = fcn.00402490(0x1a);\n        fcn.00408258(0x4b4, uVar3);\n        fcn.00407925(0x4b3, 0);\n        fcn.00407773(0x4b4);\n    }\n    else if (uVar6 == 3) {\n        uVar3 = fcn.00402490(0x19);\n        fcn.00408258(0x4b3, uVar3);\n        uVar3 = 0x1a;\n        goto code_r0x00409005;\n    }\n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    if (param_1[0xe] != 0) {\n        uVar3 = 5;\n        iVar5 = param_1[1];\n        while( true ) {\n            iVar5 = (*pcVar2)(iVar5, uVar3);\n            if (iVar5 == 0) break;\n            fcn.004044c1(iVar5);\n            uVar3 = 2;\n        }\n        do {\n            uVar3 = 5;\n            iVar5 = param_1[1];\n            while( true ) {\n                iVar5 = (*pcVar2)(iVar5, uVar3);\n                if (iVar5 == 0) {\n                    uVar3 = 5;\n                    iVar5 = param_1[1];\n                    while( true ) {\n                        iVar5 = (*pcVar2)(iVar5, uVar3);\n                        if (iVar5 == 0) break;\n                        fcn.004022e6(iVar5);\n                        uVar3 = 2;\n                    }\n                    if ((*0x41e3a4 & 8) == 0) {\n                        fcn.00407d94();\n                    }\n                    goto code_r0x00409129;\n                }\n                iVar4 = fcn.00403458(iVar5);\n                if (iVar4 != 0) break;\n                uVar3 = 2;\n            }\n        } while( true );\n    }\n    uVar6 = param_1[2] & 0x1c;\n    if (uVar6 == 4) {\n        uVar7 = 0x65;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0x65);\ncode_r0x004090d1:\n        iVar5 = (*_sym.imp.USER32.dll_LoadIconW)(uVar3, uVar7);\n        if (iVar5 != 0) {\n            param_1[0xc] = 1;\n            uVar3 = (*pcVar1)(param_1[1], 0x4b1, 0x172, 1, iVar5);\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar3);\n            goto code_r0x0040910b;\n        }\n    }\n    else {\n        if (uVar6 == 8) {\n            uVar7 = 0x7f02;\ncode_r0x004090af:\n            uVar3 = 0;\n            goto code_r0x004090d1;\n        }\n        if (uVar6 == 0xc) {\n            uVar7 = 0x7f01;\n            goto code_r0x004090af;\n        }\n        if (uVar6 == 0x10) {\n            uVar7 = 0x7f04;\n            goto code_r0x004090af;\n        }\n        if (uVar6 == 0x14) {\n            uVar7 = 0x7f03;\n            goto code_r0x004090af;\n        }\n    }\n    param_1[0xc] = 0;\n    fcn.00407925(0x4b1, 0);\ncode_r0x0040910b:\n    if ((*0x41e3a4 & 8) == 0) {\n        fcn.00407d94();\n    }\n    (**(*param_1 + 0x28))();\n    (**(*param_1 + 0x24))();\ncode_r0x00409129:\n    fcn.0040788f();\n    return 0;\n}\n",
        "token_count": 1763
    },
    "0040a8a0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data using SHA256"
        ],
        "decompiled_code": "\nvoid fcn.0040a8a0(uint *param_1)\n\n{\n    *param_1 = 0x6a09e667;\n    param_1[1] = 0xbb67ae85;\n    param_1[2] = 0x3c6ef372;\n    param_1[3] = 0xa54ff53a;\n    param_1[4] = 0x510e527f;\n    param_1[5] = 0x9b05688c;\n    param_1[6] = 0x1f83d9ab;\n    param_1[7] = 0x5be0cd19;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    return;\n}\n",
        "token_count": 175
    },
    "00412ba5": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412ba5(uint *param_1)\n\n{\n    int32_t *piVar1;\n    \n    *param_1 = 0x41c2b0;\n    param_1[1] = 0x41c29c;\n    param_1[2] = 0x41c28c;\n    param_1[3] = 0x41c278;\n    param_1[4] = 0x41c268;\n    param_1[5] = 0x41c258;\n    param_1[6] = 0x41c248;\n    param_1[7] = 0x41c238;\n    fcn.00402003(param_1[9]);\n    piVar1 = param_1[0x16];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    piVar1 = param_1[0x15];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    piVar1 = param_1[0x14];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    piVar1 = param_1[0xb];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    piVar1 = param_1[10];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00413200": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00413200(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *var_4h;\n    \n    param_1[1] = 0x41c224;\n    param_1[2] = 0x41be80;\n    param_1[3] = 0x41c224;\n    param_1[4] = 0x41be80;\n    param_1[5] = 0x41be80;\n    param_1[6] = 0x41be80;\n    param_1[7] = 0x41be80;\n    param_1[8] = 0;\n    *param_1 = 0x41c2b0;\n    param_1[1] = 0x41c29c;\n    param_1[2] = 0x41c28c;\n    param_1[3] = 0x41c278;\n    param_1[4] = 0x41c268;\n    param_1[5] = 0x41c258;\n    param_1[6] = 0x41c248;\n    param_1[7] = 0x41c238;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    param_1[0x14] = 0;\n    param_1[0x15] = 0;\n    param_1[0x16] = 0;\n    var_4h = param_1;\n    iVar1 = fcn.00402a64(0x20000);\n    param_1[9] = iVar1;\n    if (iVar1 == 0) {\n        var_4h = 0x1;\n        sub.MSVCRT.dll__CxxThrowException(&var_4h, 0x41c660);\n    }\n    return param_1;\n}\n",
        "token_count": 427
    },
    "004139ec": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004139ec(int32_t *arg_8h, int32_t **arg_ch)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    *(in_ECX + 0xc) = 1;\n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    *(in_ECX + 0x18) = 0;\n    *(in_ECX + 0x1c) = 0;\n    puVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        puVar1[1] = 0;\n        *puVar1 = 0x41c2e0;\n        puVar1[2] = in_ECX;\n    }\n    fcn.0041333e(puVar1);\n    *arg_8h = in_ECX;\n    puVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        puVar1[1] = 0;\n        *puVar1 = 0x41c2d0;\n        puVar1[2] = in_ECX;\n    }\n    fcn.0041333e(puVar1);\n    *arg_ch = arg_8h;\n    return;\n}\n",
        "token_count": 344
    },
    "00413e1b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413e1b(uint *param_1)\n\n{\n    *param_1 = 0x41c3e4;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 8;\n    param_1[9] = 8;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[5] = 0x41c3e4;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[0xe] = 4;\n    param_1[10] = 0x41c3e4;\n    param_1[0x13] = 4;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    param_1[0xf] = 0x41c3e4;\n    return;\n}\n",
        "token_count": 278
    },
    "00415707": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00415707(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x14) = arg_8h;\n    *(in_ECX + 0x20) = arg_ch;\n    *(in_ECX + 0x24) = arg_10h;\n    *(in_ECX + 0x18) = arg_14h;\n    fcn.004136a9(arg_18h);\n    *(in_ECX + 0x28) = 0;\n    *(in_ECX + 0x2c) = arg_1ch;\n    *(in_ECX + 0x2d) = arg_20h;\n    *(in_ECX + 0x2e) = 0;\n    fcn.00415552();\n    return;\n}\n",
        "token_count": 218
    },
    "00415aab": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415aab(uint *param_1)\n\n{\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 8;\n    *param_1 = 0x41c3e4;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 1;\n    param_1[5] = 0x41c3e4;\n    return;\n}\n",
        "token_count": 141
    },
    "00415c73": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00415c73(uint *param_1)\n\n{\n    param_1[4] = 8;\n    *param_1 = 0x41c3e4;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 1;\n    param_1[5] = 0x41c3e4;\n    param_1[10] = 0x41c3e4;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[0xe] = 4;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    param_1[0x13] = 4;\n    param_1[0xf] = 0x41c390;\n    param_1[0x14] = 0x41c3e4;\n    param_1[0x15] = 0;\n    param_1[0x16] = 0;\n    param_1[0x17] = 0;\n    param_1[0x18] = 4;\n    param_1[0x1a] = 0;\n    param_1[0x1b] = 0;\n    param_1[0x1c] = 0;\n    param_1[0x1d] = 4;\n    param_1[0x19] = 0x41c398;\n    fcn.00415aab();\n    fcn.00415aab();\n    fcn.00415aab();\n    fcn.00415aab();\n    param_1[0x47] = 0;\n    param_1[0x48] = 0;\n    param_1[0x49] = 0;\n    param_1[0x4a] = 1;\n    param_1[0x46] = 0x41c3e4;\n    return param_1;\n}\n",
        "token_count": 527
    },
    "00416d1a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416d1a(uint *param_1)\n\n{\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    *param_1 = 0x41c3a8;\n    param_1[4] = 4;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[5] = 0x41c3e4;\n    param_1[9] = 8;\n    param_1[0xe] = 4;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[10] = 0x41c3e4;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    param_1[0x13] = 8;\n    param_1[0xf] = 0x41c3e4;\n    *(param_1 + 0x15) = 0;\n    return;\n}\n",
        "token_count": 293
    },
    "00417178": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00417178(uint *param_1, uint *param_2)\n\n{\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    fcn.0040b5a0(param_2 + 2);\n    param_1[5] = param_2[5];\n    param_1[6] = param_2[6];\n    return param_1;\n}\n",
        "token_count": 102
    },
    "0040918f": {
        "rules": [
            "get file system object information",
            "get common file path"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040918f(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_4d0h;\n    uint lpBuffer;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    fcn.00407908(0x4b6, &var_10h);\n    *(param_1 + 0x58) = (var_4h - var_ch) + 2;\n    fcn.00407925(0x4b6, 1);\n    fcn.00407925(0x4b7, 1);\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpBuffer, 0x104);\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoW)(&lpBuffer, 0, &var_4d0h, 0x2b4, 0x103);\n    *(param_1 + 0x50) = var_4d0h;\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), 0x4b7);\n    uVar1 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xfffffffc, fcn.00407f6e);\n    *(param_1 + 0x54) = uVar1;\n    uVar1 = fcn.00408e5e();\n    fcn.004082db();\n    return uVar1;\n}\n",
        "token_count": 335
    },
    "004136d0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004136d0(int32_t param_1, uint param_2)\n\n{\n    uchar unaff_SI;\n    \n    fcn.00413c8f();\n    fcn.004136a9(param_2);\n    (****(param_1 + 8))(*(param_1 + 8), 0x41a3d0, param_1 + 0xc);\n    *(param_1 + 0x10) = unaff_SI;\n    return;\n}\n",
        "token_count": 110
    },
    "00418acf": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00418acf(uint *param_1, uint param_2, uint param_3)\n\n{\n    fcn.004183e2(param_2, param_3);\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    *param_1 = 0x41c338;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x1e] = 0x41c32c;\n    param_1[0x22] = 4;\n    param_1[0x27] = 4;\n    param_1[0x24] = 0;\n    param_1[0x25] = 0;\n    param_1[0x26] = 0;\n    param_1[0x23] = 0x41c32c;\n    param_1[0x2c] = 4;\n    param_1[0x29] = 0;\n    param_1[0x2a] = 0;\n    param_1[0x2b] = 0;\n    param_1[0x28] = 0x41c3e4;\n    param_1[0x2e] = 0;\n    param_1[0x2f] = 0;\n    param_1[0x30] = 0;\n    param_1[0x31] = 4;\n    param_1[0x2d] = 0x41c3e4;\n    fcn.0041270d(param_1[7]);\n    fcn.0041270d(param_1[7]);\n    fcn.0041270d(param_1[8]);\n    fcn.0041270d(param_1[8]);\n    return param_1;\n}\n",
        "token_count": 444
    },
    "0040116c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040116c(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    \n    do {\n        iVar1 = *param_2;\n        *param_1 = iVar1;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 93
    },
    "004011b7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004011b7(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_2 + 1;\n    if (uVar3 != param_1[2]) {\n        iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n        iVar2 = 0;\n        if (0 < param_1[2]) {\n            if (0 < param_1[1]) {\n                do {\n                    *(iVar1 + iVar2 * 2) = *(*param_1 + iVar2 * 2);\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < param_1[1]);\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*param_1);\n        }\n        *param_1 = iVar1;\n        *(iVar1 + param_1[1] * 2) = 0;\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "004027d9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004027d9(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_8h[1];\n    if (iVar2 != 0) {\n        if (arg_ch < in_ECX[1]) {\n            do {\n                iVar1 = 0;\n                if (0 < iVar2) {\n                    iVar2 = arg_ch * 2;\n                    do {\n                        if ((in_ECX[1] <= iVar1 + arg_ch) || (*(iVar2 + *in_ECX) != *(*arg_8h + iVar1 * 2))) break;\n                        iVar1 = iVar1 + 1;\n                        iVar2 = iVar2 + 2;\n                    } while (iVar1 < arg_8h[1]);\n                }\n                iVar2 = arg_8h[1];\n                if (iVar1 == iVar2) {\n                    return arg_ch;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_ch < in_ECX[1]);\n        }\n        arg_ch = -1;\n    }\n    return arg_ch;\n}\n",
        "token_count": 264
    },
    "0040283a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040283a(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    param_2 = param_2 + 1;\n    if (param_2 != param_1[2]) {\n        iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(param_2);\n        iVar2 = 0;\n        if (0 < param_1[2]) {\n            if (0 < param_1[1]) {\n                do {\n                    *(iVar2 + iVar1) = *(iVar2 + *param_1);\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < param_1[1]);\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*param_1);\n        }\n        *param_1 = iVar1;\n        *(iVar1 + param_1[1]) = 0;\n        param_1[2] = param_2;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0040295b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040295b(int32_t param_1, uint param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_3 == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *param_3;\n    }\n    while( true ) {\n        if (*(param_1 + 8) <= iVar2) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(**(*(param_1 + 0xc) + iVar2 * 4), param_2);\n        if (iVar1 == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    if (param_3 != NULL) {\n        *param_3 = iVar2;\n    }\n    return *(*(param_1 + 0xc) + iVar2 * 4);\n}\n",
        "token_count": 207
    },
    "004029a3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004029a3(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < param_1[2]) {\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(**(param_1[3] + iVar2 * 4), param_2);\n            if (iVar1 == 0) {\n                (**(*param_1 + 4))(iVar2, 1);\n                iVar2 = iVar2 + -1;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < param_1[2]);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00402b23": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402b23(int16_t **param_1, int16_t param_2)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[1] == NULL) {\ncode_r0x00402b48:\n        iVar3 = -1;\n    }\n    else {\n        piVar1 = *param_1;\n        for (piVar2 = piVar1 + param_1[1] + -1; *piVar2 != param_2; piVar2 = piVar2 + -1) {\n            if (piVar2 == piVar1) goto code_r0x00402b48;\n        }\n        iVar3 = piVar2 - piVar1 >> 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 188
    },
    "00402b96": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar ** __thiscall fcn.00402b96(char **param_1, char **param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    *param_1 = NULL;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    fcn.0040283a(param_2[1]);\n    pcVar3 = *param_2;\n    pcVar2 = *param_1;\n    do {\n        cVar1 = *pcVar3;\n        *pcVar2 = cVar1;\n        pcVar2 = pcVar2 + 1;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    param_1[1] = param_2[1];\n    return param_1;\n}\n",
        "token_count": 188
    },
    "00402c1e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar ** __thiscall fcn.00402c1e(char **param_1, char **param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    if (param_2 != param_1) {\n        param_1[1] = NULL;\n        **param_1 = '\\0';\n        fcn.0040283a(param_2[1]);\n        pcVar3 = *param_2;\n        pcVar2 = *param_1;\n        do {\n            cVar1 = *pcVar3;\n            *pcVar2 = cVar1;\n            pcVar2 = pcVar2 + 1;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        param_1[1] = param_2[1];\n    }\n    return param_1;\n}\n",
        "token_count": 194
    },
    "00404772": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t * fcn.00404772(uint16_t *param_1, uint32_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    \n    while ((((uVar1 = *param_1,  0x2f < uVar1 && (uVar1 < 0x3a)) || (uVar1 == 0x2b)) || (uVar1 == 0x2d))) {\n        uVar2 = (*_sym.imp.MSVCRT.dll__wtol)(param_1);\n        for (; (*param_1 == 0x2d || (*param_1 == 0x2b)); param_1 = param_1 + 1) {\n        }\n        for (; (0x2f < *param_1 && (*param_1 < 0x3a)); param_1 = param_1 + 1) {\n        }\n        if (uVar2 < 1) {\n            *param_2 = *param_2 & uVar2 - 1;\n        }\n        else {\n            *param_2 = *param_2 | uVar2;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 264
    },
    "004049eb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004049eb(int16_t **param_1, uint *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    \n    piVar4 = *param_1;\n    iVar1 = *piVar4;\n    piVar3 = NULL;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = fcn.00412683(*param_2, iVar1);\n            if (iVar2 < 0) {\n                piVar3 = NULL;\n            }\n            else if (piVar3 == NULL) {\n                piVar3 = piVar4;\n            }\n            piVar4 = piVar4 + 1;\n            iVar1 = *piVar4;\n        } while (iVar1 != 0);\n        if (piVar3 != NULL) {\n            iVar2 = piVar3 - *param_1 >> 1;\n            fcn.00402d03(iVar2, param_1[1] - iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00407d94": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407d94(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"uxtheme\");\n    if ((iVar2 != 0) &&\n       (pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"SetWindowTheme\"), \n       pcVar1 = _sym.imp.USER32.dll_GetWindow,  pcVar3 != NULL)) {\n        for (iVar2 = (*_sym.imp.USER32.dll_GetWindow)(*(param_1 + 4), 5); iVar2 != 0; iVar2 = (*pcVar1)(iVar2, 2)) {\n            (*pcVar3)(iVar2, 0x41b980, 0x41b980);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00408751": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408751(uint16_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint16_t uVar1;\n    uint var_ch;\n    \n    fcn.004014eb();\n    for (; uVar1 = *arg_8h,  uVar1 != 0; arg_8h = arg_8h + 1) {\n        if (uVar1 < 0x20) {\n            uVar1 = 0x20;\n        }\n        fcn.004017a8(uVar1);\n    }\n    fcn.004078ed(*(in_ECX + 4), var_ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 163
    },
    "00412683": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00412683(int16_t *param_1, int16_t param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = *param_1;\n    piVar2 = param_1;\n    while( true ) {\n        if (iVar1 == param_2) {\n            return piVar2 - param_1 >> 1;\n        }\n        if (iVar1 == 0) break;\n        piVar2 = piVar2 + 1;\n        iVar1 = *piVar2;\n    }\n    return -1;\n}\n",
        "token_count": 133
    },
    "00412fbd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412fbd(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = arg_8h;\n    if (*(arg_8h + 0x1c) != 0) {\n        uVar1 = (**(**(arg_8h + 0x44) + 0x10))(*(arg_8h + 0x44), *(arg_8h + 0x10), *(arg_8h + 0x1c));\n        if (*(iVar4 + 0x1c) < uVar1) {\n            do {\n                *(*(iVar4 + 0x10) + *(iVar4 + 0x1c)) = 0;\n                *(iVar4 + 0x1c) = *(iVar4 + 0x1c) + 1;\n            } while (*(iVar4 + 0x1c) < uVar1);\n            uVar2 = (**(**(iVar4 + 0x44) + 0x10))(*(iVar4 + 0x44), *(iVar4 + 0x10), uVar1);\n            if (uVar2 != uVar1) {\n                return -0x7fffbffb;\n            }\n        }\n        iVar3 = fcn.00412b45(*(iVar4 + 0x18), *(iVar4 + 0x1c));\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        *(iVar4 + 0x1c) = 0;\n    }\n    arg_8h = NULL;\n    (****(iVar4 + 0x18))(*(iVar4 + 0x18), 0x41a3c0, &arg_8h);\n    if (arg_8h == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = (**(*arg_8h + 0xc))(arg_8h);\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 489
    },
    "00413662": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413662(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    do {\n        if (*(param_1 + 0xc) == *(param_1 + 4)) {\n            return 0;\n        }\n        iVar1 = fcn.004135d1();\n    } while (iVar1 == 0);\n    return iVar1;\n}\n",
        "token_count": 87
    },
    "00414ca4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00414ca4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t var_4h;\n    \n    iVar2 = *(param_1 + 0x44);\n    var_4h = param_1;\n    iVar1 = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        do {\n            iVar1 = iVar1 + -1;\n            if (iVar1 < 0) {\n                var_4h = 1;\n                sub.MSVCRT.dll__CxxThrowException(&var_4h, 0x41c660);\n                break;\n            }\n            iVar2 = fcn.00413f2f();\n        } while (-1 < iVar2);\n        iVar2 = *(*(param_1 + 0x48) + iVar1 * 8);\n        uVar3 = *(*(param_1 + 0x48) + 4 + iVar1 * 8);\n    }\n    return CONCAT44(uVar3, iVar2);\n}\n",
        "token_count": 249
    },
    "0041641a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041641a(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004127d6();\n    fcn.0041270d(in_EAX);\n    if (0 < in_EAX) {\n        do {\n            fcn.00414af0();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "004164ab": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004164ab(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00416265();\n    if (cVar1 == '\\0') {\n        fcn.00416457(arg_8h, arg_ch);\n    }\n    else {\n        fcn.004127d6();\n        fcn.0041270d(arg_8h);\n        if (0 < arg_8h) {\n            do {\n                fcn.00414af0();\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00416a96": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416a96(void)\n\n{\n    int64_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.004162e0();\n        if (iVar1 == 0) break;\n        fcn.00416444();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00416ab3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416ab3(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    while( true ) {\n        iVar2 = fcn.004162e0();\n        if (iVar2 == CONCAT44(param_2, param_1)) {\n            return;\n        }\n        if (iVar2 == 0) break;\n        fcn.00416444();\n    }\n    fcn.00416245();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 124
    },
    "00416ae2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416ae2(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.004164ab(arg_8h, arg_ch);\n    fcn.004127d6();\n    fcn.0041270d(arg_8h);\n    iVar1 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*(iVar1 + *(arg_ch + 0xc)) != '\\0') {\n                fcn.0041638b();\n            }\n            fcn.004027b7();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004174b3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004174b3(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004164ab(arg_10h, arg_ch + 0x14);\n    fcn.004171f8();\n    iVar1 = arg_10h;\n    fcn.0041270d(arg_10h);\n    iVar2 = 0;\n    if (0 < arg_10h) {\n        do {\n            iVar1 = 0;\n            if (*(iVar2 + *(arg_ch + 0x20)) != '\\0') {\n                iVar1 = fcn.004163a6();\n            }\n            fcn.00413c65();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < arg_10h);\n    }\n    fcn.004171a9(iVar1);\n    return;\n}\n",
        "token_count": 223
    },
    "00417765": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00417765(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    \n    uVar2 = fcn.004162e0();\n    while ((uVar1 = uVar2,  uVar2 >> 0x20 == 0 && (uVar1 < 0x40000001))) {\n        if (uVar1 == 0) {\n            return;\n        }\n        if (uVar1 == 6) {\n            fcn.00416b3a(arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n        else if (uVar1 == 7) {\n            fcn.004175cf(arg_8h, arg_1ch);\n        }\n        else {\n            if (uVar1 != 8) break;\n            fcn.00416e20(arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n        }\n        uVar2 = fcn.004162e0();\n    }\n    fcn.00416245();\n    return;\n}\n",
        "token_count": 300
    },
    "00418657": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418657(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.004127d6();\n    fcn.004127d6();\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            if ((unaff_EBX == 0) || (puVar1 = *(unaff_EBX + uVar2 * 4),  puVar1 == NULL)) {\n                fcn.00413c65(0, 0);\n                iVar3 = 0;\n            }\n            else {\n                fcn.00413c65(*puVar1, puVar1[1]);\n                iVar3 = *(unaff_ESI + 0xc) + -8 + *(unaff_ESI + 8) * 8;\n            }\n            fcn.004027b7(iVar3);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "00401ee8": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ee8(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h._0_3_ = CONCAT12(10, CONCAT11(0xd, arg_8h));\n    arg_8h = arg_8h & 0xff000000 | arg_8h;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff5, &arg_8h, 3, &var_4h, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(uVar1);\n    return;\n}\n",
        "token_count": 143
    },
    "0041249c": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041249c(uint lpBuffer, uint32_t nNumberOfBytesToWrite, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint lpNumberOfBytesWritten;\n    \n    if (*0x41e880 < nNumberOfBytesToWrite) {\n        nNumberOfBytesToWrite = *0x41e880;\n    }\n    lpNumberOfBytesWritten = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*in_ECX, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n    *arg_10h = lpNumberOfBytesWritten;\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 167
    },
    "00402678": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort fcn.00402678(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint var_24h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32\", \"GetNativeSystemInfo\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (pcVar2 != NULL) {\n        (*pcVar2)(&var_24h);\n        return var_24h;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "004026f2": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004026f2(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *0x41e984 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32\", \"Wow64DisableWow64FsRedirection\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x41e988);\n        *0x41e984 = 1;\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "004035a8": {
        "rules": [
            "query environment variable"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004035a8(int32_t *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetEnvironmentVariableW;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(arg_ch, &var_4h, 1);\n    fcn.004014eb();\n    fcn.00402ad5(iVar2 + 2);\n    uVar3 = fcn.00402ad5(iVar2 + 2, iVar2 + 1);\n    (*pcVar1)(arg_ch, uVar3);\n    iVar2 = *arg_8h;\n    iVar4 = fcn.00401184(iVar2);\n    *(iVar2 + iVar4 * 2) = 0;\n    arg_8h[1] = iVar4;\n    return arg_8h;\n}\n",
        "token_count": 229
    },
    "00402757": {
        "rules": [
            "get token membership"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00402757(void)\n\n{\n    int32_t iVar1;\n    uint pIdentifierAuthority;\n    uchar var_ch;\n    uchar var_bh;\n    int32_t IsMember;\n    uint SidToCheck;\n    \n    IsMember = 0;\n    SidToCheck = 0;\n    pIdentifierAuthority._0_1_ = 0;\n    pIdentifierAuthority._1_1_ = 0;\n    pIdentifierAuthority._2_1_ = 0;\n    pIdentifierAuthority._3_1_ = 0;\n    var_ch = 0;\n    var_bh = 5;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                      (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &SidToCheck);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, SidToCheck, &IsMember);\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(SidToCheck);\n        iVar1 = IsMember;\n    }\n    return iVar1;\n}\n",
        "token_count": 268
    },
    "00403415": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nint32_t * fcn.00403415(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    fcn.004014eb();\n    iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthW)(param_2);\n    if (0 < iVar1) {\n        uVar2 = fcn.00402ad5(iVar1 + 1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextW)(unaff_retaddr, uVar2);\n        *(*param_1 + iVar1 * 2) = 0;\n        param_1[1] = iVar1;\n    }\n    return param_1;\n}\n",
        "token_count": 165
    },
    "00407687": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00407687(int32_t *param_1, int32_t param_2, ushort param_3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (param_2 == 2) {\n        if (*0x41ea4c != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*0x41ea4c);\n            *0x41ea4c = 0;\n        }\n        if (*0x41ea50 != 0) {\n            (*pcVar1)(*0x41ea50);\n            *0x41ea50 = 0;\n        }\n        *0x41ea48 = 0;\n        (**(*param_1 + 0x10))();\n    }\n    else {\n        if (param_2 == 0x110) {\n            uVar2 = (**(*param_1 + 0xc))();\n            return uVar2;\n        }\n        if (param_2 == 0x111) {\n            (**(*param_1 + 0x14))(param_3);\n        }\n        else if (param_2 == 0x113) {\n            (**(*param_1 + 0x20))();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 295
    },
    "0041240e": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041240e(uint lpBuffer, uint32_t nNumberOfBytesToRead, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint lpNumberOfBytesRead;\n    \n    if (*0x41e880 < nNumberOfBytesToRead) {\n        nNumberOfBytesToRead = *0x41e880;\n    }\n    lpNumberOfBytesRead = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    *arg_10h = lpNumberOfBytesRead;\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 167
    }
}