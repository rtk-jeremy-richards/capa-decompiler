{
    "00fc1180": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.00fc1180(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    fcn.00fc1110(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00fc1b24": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00fc1b24(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(in_EAX + -4);\n    if ((uVar1 & 0x80000002) != 0x80000002) {\n        *0xfdc5b0 = 4;\n    }\n    uVar3 = uVar1 & 0x7ffffffc;\n    puVar2 = in_EAX - uVar3;\n    if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {\n        *0xfdc5b0 = 5;\n    }\n    if ((*puVar2 & 1) != 0) {\n        uVar1 = puVar2[-1];\n        if (uVar1 != *(puVar2 + (8 - uVar1))) {\n            *0xfdc5b0 = 6;\n        }\n        fcn.00fc1a14();\n        uVar3 = uVar3 + uVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 257
    },
    "00fc20ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00fc20ec(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    *0xfdc5b0 = 0;\n    if (*0xfdc5ac == '\\0') {\n        puStack24 = 0xfc210a;\n        cVar2 = fcn.00fc1870();\n        if (cVar2 == '\\0') {\n            *0xfdc5b0 = 8;\n            return 8;\n        }\n    }\n    uStack28 = 0xfc227e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0xfdc035 != '\\0') {\n        uStack36 = 0xfdc5b4;\n        puStack24 = &stack0xfffffffc;\n        fcn.00fc11cc();\n    }\n    puVar5 = in_EAX + -4;\n    uVar4 = *puVar5;\n    if ((uVar4 & 2) == 0) {\n        *0xfdc5b0 = 9;\n        goto code_r0x00fc2255;\n    }\n    *0xfdc59c = *0xfdc59c + -1;\n    *0xfdc5a0 = *0xfdc5a0 - ((uVar4 & 0x7ffffffc) - 4);\n    if ((uVar4 & 1) != 0) {\n        uVar1 = *(in_EAX + -8);\n        if ((uVar1 < 0xc) || ((uVar1 & 0x80000003) != 0)) {\n            *0xfdc5b0 = 10;\n            goto code_r0x00fc2255;\n        }\n        puVar5 = puVar5 - uVar1;\n        if (uVar1 != puVar5[2]) {\n            *0xfdc5b0 = 10;\n            goto code_r0x00fc2255;\n        }\n        uVar4 = uVar4 + uVar1;\n        fcn.00fc1a14();\n    }\n    uVar4 = uVar4 & 0x7ffffffc;\n    puVar5 = puVar5 + uVar4;\n    if (puVar5 == *0xfdc608) {\n        *0xfdc608 = *0xfdc608 - uVar4;\n        *0xfdc604 = *0xfdc604 + uVar4;\n        if (0x3c00 < *0xfdc604) {\n            fcn.00fc1d04();\n        }\n        fcn.00fc303c();\n        return 0;\n    }\n    if ((*puVar5 & 2) == 0) {\n        if (((puVar5[1] == 0) || (*puVar5 == 0)) || (puVar5[2] < 0xc)) {\n            *0xfdc5b0 = 0xb;\n            goto code_r0x00fc2255;\n        }\n        fcn.00fc1a14();\n    }\n    else {\n        if ((*puVar5 & 0x7ffffffc) < 4) {\n            *0xfdc5b0 = 0xb;\n            goto code_r0x00fc2255;\n        }\n        *puVar5 = *puVar5 | 1;\n    }\n    fcn.00fc1c7c();\ncode_r0x00fc2255:\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0xfc2285;\n    if (*0xfdc035 != '\\0') {\n        uStack32 = 0xfdc5b4;\n        uVar3 = fcn.00fc11d4();\n    }\n    return uVar3;\n}\n",
        "token_count": 913
    },
    "00fc45cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00fc45cc(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        bVar6 = param_2 < 0;\n        if (bVar6) {\n            bVar4 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar4 - param_2;\n        }\n        if (param_4 < 0) {\n            bVar4 = param_3 != 0;\n            param_3 = -param_3;\n            param_4 = -bVar4 - param_4;\n            bVar6 = !bVar6;\n        }\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (bVar6) {\n            bVar6 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar6 - param_2;\n        }\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 561
    },
    "00fc11e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.00fc11e4(void)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    if (*0xfdc5d0 == NULL) {\n        puVar2 = fcn.00fc11a4(0, 0x644);\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n        *puVar2 = *0xfdc5cc;\n        iVar4 = 0;\n        *0xfdc5cc = puVar2;\n        do {\n            ppiVar1 = puVar2 + iVar4 * 4 + 1;\n            *ppiVar1 = *0xfdc5d0;\n            iVar4 = iVar4 + 1;\n            *0xfdc5d0 = ppiVar1;\n        } while (iVar4 != 100);\n    }\n    piVar3 = *0xfdc5d0;\n    *0xfdc5d0 = **0xfdc5d0;\n    return piVar3;\n}\n",
        "token_count": 240
    },
    "00fc12f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00fc12f4(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iStack20;\n    \n    piVar6 = in_EAX;\n    while( true ) {\n        uVar1 = *param_2;\n        uVar4 = piVar6[2];\n        if ((uVar4 <= uVar1) && (uVar1 + param_2[1] <= uVar4 + piVar6[3])) break;\n        piVar6 = *piVar6;\n        if (in_EAX == piVar6) {\n            uVar5 = 0;\ncode_r0x00fc1380:\n            return CONCAT44(iStack20, uVar5);\n        }\n    }\n    if (uVar1 == uVar4) {\n        piVar6[2] = piVar6[2] + param_2[1];\n        uVar4 = param_2[1];\n        piVar6[3] = piVar6[3] - uVar4;\n        if (piVar6[3] == 0) {\n            uVar4 = fcn.00fc126c();\n        }\n    }\n    else if (uVar1 + param_2[1] == uVar4 + piVar6[3]) {\n        piVar6[3] = piVar6[3] - param_2[1];\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = param_2[1];\n        iStack20 = (piVar6[2] + piVar6[3]) - (uVar2 + uVar3);\n        piVar6[3] = uVar1 - uVar4;\n        uVar4 = fcn.00fc123c(uVar2 + uVar3);\n        if (uVar4 == '\\0') {\n            uVar5 = 0;\n            goto code_r0x00fc1380;\n        }\n    }\n    uVar5 = CONCAT31(uVar4 >> 8, 1);\n    goto code_r0x00fc1380;\n}\n",
        "token_count": 513
    },
    "00fc13ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc13ec(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0x100000;\n    iVar2 = fcn.00fc11b4();\n    *param_1 = iVar2;\n    if (iVar2 == 0) {\n        param_1[1] = param_2 + 0xffffU & 0xffff0000;\n        iVar2 = fcn.00fc11b4();\n        *param_1 = iVar2;\n    }\n    if (*param_1 != 0) {\n        cVar1 = fcn.00fc123c();\n        if (cVar1 == '\\0') {\n            fcn.00fc11bc(*param_1, 0, 0x8000);\n            *param_1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00fc1464": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc1464(uint32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    \n    uStack28 = 0xffffffff;\n    uStack24 = 0;\n    puVar1 = *0xfdc5d4;\n    while (puVar4 = puVar1,  puVar4 != 0xfdc5d4) {\n        puVar1 = *puVar4;\n        uVar2 = puVar4[2];\n        if ((in_EAX <= uVar2) && (uVar2 + puVar4[3] <= param_2 + in_EAX)) {\n            if (uVar2 < uStack28) {\n                uStack28 = uVar2;\n            }\n            if (uStack24 < uVar2 + puVar4[3]) {\n                uStack24 = uVar2 + puVar4[3];\n            }\n            iVar3 = fcn.00fc11bc(uVar2, 0, 0x8000);\n            if (iVar3 == 0) {\n                *0xfdc5b0 = 1;\n            }\n            fcn.00fc126c();\n        }\n    }\n    *param_1 = 0;\n    if (uStack24 != 0) {\n        *param_1 = uStack28;\n        param_1[1] = uStack24 - uStack28;\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00fc1630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc1630(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iStack24;\n    \n    puVar1 = *0xfdc5e4;\n    do {\n        for (; puVar1 != 0xfdc5e4; puVar1 = *puVar1) {\n            if ((in_EAX + 0x3fffU & 0xffffc000) <= puVar1[3]) {\n                fcn.00fc151c();\n                if (*param_2 == 0) {\n                    return;\n                }\n                puVar1[2] = puVar1[2] + param_2[1];\n                puVar1[3] = puVar1[3] - param_2[1];\n                if (puVar1[3] != 0) {\n                    return;\n                }\n                fcn.00fc126c();\n                return;\n            }\n        }\n        fcn.00fc1388();\n        if (*param_2 == 0) {\n            return;\n        }\n        fcn.00fc1284();\n        puVar1 = *0xfdc5e4;\n    } while (iStack24 != 0);\n    fcn.00fc1464();\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 300
    },
    "00fc16c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc16c0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    uVar2 = param_2 + 0x3fffU & 0xffffc000;\n    puVar1 = *0xfdc5e4;\ncode_r0x00fc16e6:\n    do {\n        for (; (puVar1 != 0xfdc5e4 && (in_EAX != puVar1[2])); puVar1 = *puVar1) {\n        }\n        if (in_EAX == puVar1[2]) {\n            if (uVar2 <= puVar1[3]) goto code_r0x00fc1793;\n            fcn.00fc13ec();\n            if (iStack32 != 0) {\n                fcn.00fc1284();\n                puVar1 = *0xfdc5e4;\n                if (iStack24 == 0) {\n                    fcn.00fc1464();\n                    *param_1 = 0;\n                    return;\n                }\n                goto code_r0x00fc16e6;\n            }\n        }\n        fcn.00fc13ec();\n        if (iStack32 == 0) {\ncode_r0x00fc1793:\n            if ((in_EAX != puVar1[2]) || (puVar1[3] < uVar2)) {\n                *param_1 = 0;\n                return;\n            }\n            fcn.00fc151c();\n            if (*param_1 == 0) {\n                return;\n            }\n            puVar1[2] = puVar1[2] + param_1[1];\n            puVar1[3] = puVar1[3] - param_1[1];\n            if (puVar1[3] != 0) {\n                return;\n            }\n            fcn.00fc126c();\n            return;\n        }\n        fcn.00fc1284();\n        puVar1 = *0xfdc5e4;\n        if (iStack24 == 0) {\n            fcn.00fc1464();\n            *param_1 = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 517
    },
    "00fc17e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc17e4(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    if ((in_EAX + 0x3fffU & 0xffffc000) < (param_2 + in_EAX & 0xffffc000U)) {\n        fcn.00fc15b0();\n        fcn.00fc1284();\n        if (iStack28 != 0) {\n            fcn.00fc1464();\n            iStack28 = iStack20;\n        }\n        if (iStack28 != 0) {\n            fcn.00fc12f4();\n        }\n    }\n    else {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00fc1870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc1870(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0xfc1926;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    fcn.00fc11c4(0xfdc5b4);\n    if (*0xfdc035 != '\\0') {\n        fcn.00fc11cc(0xfdc5b4);\n    }\n    fcn.00fc1234();\n    fcn.00fc1234();\n    fcn.00fc1234();\n    uVar2 = 0;\n    *0xfdc60c = fcn.00fc11a4(0, 0xff8);\n    if (*0xfdc60c != 0) {\n        iVar1 = 3;\n        do {\n            *(*0xfdc60c + -0xc + iVar1 * 4) = 0;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n        *0xfdc5f8 = 0xfdc5f4;\n        *0xfdc5f4 = 0xfdc5f4;\n        *0xfdc600 = 0xfdc5f4;\n        *0xfdc5ac = 1;\n    }\n    *in_FS_OFFSET = uVar2;\n    if (*0xfdc035 != '\\0') {\n        fcn.00fc11d4(0xfdc5b4, 0xfc192d);\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00fc1934": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc1934(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*0xfdc5ac == '\\0') {\n        return;\n    }\n    uStack16 = 0xfc1a0a;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puVar1 = &stack0xfffffffc;\n    if (*0xfdc035 != '\\0') {\n        fcn.00fc11cc(0xfdc5b4);\n        puVar1 = puStack12;\n    }\n    puStack12 = puVar1;\n    *0xfdc5ac = 0;\n    puVar3 = *0xfdc60c;\n    fcn.00fc11ac();\n    *0xfdc60c = NULL;\n    for (puVar2 = *0xfdc5d4; puVar2 != 0xfdc5d4; puVar2 = *puVar2) {\n        puVar3 = puVar2[2];\n        fcn.00fc11bc();\n    }\n    fcn.00fc1234();\n    fcn.00fc1234();\n    fcn.00fc1234();\n    while (puVar2 = *0xfdc5cc,  puVar2 != NULL) {\n        *0xfdc5cc = *puVar2;\n        fcn.00fc11ac();\n        puVar3 = puVar2;\n    }\n    *0xfdc5cc = puVar2;\n    *in_FS_OFFSET = puVar3;\n    uStack20 = 0xfc1a11;\n    if (*0xfdc035 != '\\0') {\n        fcn.00fc11d4(0xfdc5b4);\n    }\n    fcn.00fc11dc(0xfdc5b4);\n    return;\n}\n",
        "token_count": 451
    },
    "00fc1d04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc1d04(void)\n\n{\n    if (0 < *0xfdc604) {\n        if (*0xfdc604 < 0xc) {\n            *0xfdc5b0 = 7;\n        }\n        else {\n            **0xfdc608 = *0xfdc604 | 2;\n            fcn.00fc1ad8();\n            *0xfdc608 = NULL;\n            *0xfdc604 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00fc1ddc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00fc1ddc(void)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    uint uStack8;\n    \n    fcn.00fc1630();\n    if (iStack12 != 0) {\n        uVar1 = fcn.00fc1d50();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00fc1e03;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00fc1e03:\n    return CONCAT44(uStack8, uVar1);\n}\n",
        "token_count": 143
    },
    "00fc1e08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00fc1e08(void)\n\n{\n    uint uVar1;\n    int32_t iStack16;\n    uint uStack12;\n    \n    fcn.00fc16c0();\n    if (iStack16 != 0) {\n        uVar1 = fcn.00fc1d50();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00fc1e34;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00fc1e34:\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 144
    },
    "00fc1f5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t * fcn.00fc1f5c(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0xfdc5ac == '\\0') {\n        puStack28 = 0xfc1f75;\n        cVar2 = fcn.00fc1870();\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    if (0x7ffffff8 < in_EAX) {\n        return NULL;\n    }\n    uStack32 = 0xfc20d8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (*0xfdc035 != '\\0') {\n        uStack40 = 0xfdc5b4;\n        puStack28 = &stack0xfffffffc;\n        fcn.00fc11cc();\n    }\n    puVar4 = *0xfdc608;\n    uVar5 = in_EAX + 7U & 0xfffffffc;\n    if (uVar5 < 0xc) {\n        uVar5 = 0xc;\n    }\n    if (uVar5 < 0x1001) {\n        uVar3 = uVar5;\n        if (uVar5 < 0) {\n            uVar3 = uVar5 + 3;\n        }\n        puVar1 = *(*0xfdc60c + -0xc + (uVar3 >> 2) * 4);\n        if (puVar1 != NULL) {\n            *(puVar1 + uVar5) = *(puVar1 + uVar5) & 0xfffffffe;\n            puVar4 = puVar1[1];\n            if (puVar1 == puVar4) {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0xfdc60c + -0xc + (uVar3 >> 2) * 4) = 0;\n            }\n            else {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0xfdc60c + -0xc + (uVar3 >> 2) * 4) = puVar4;\n                uVar3 = *puVar1;\n                *(uVar3 + 4) = puVar4;\n                *puVar4 = uVar3;\n            }\n            *puVar1 = puVar1[2] | 2;\n            *0xfdc59c = *0xfdc59c + 1;\n            *0xfdc5a0 = *0xfdc5a0 + (uVar5 - 4);\n            fcn.00fc303c();\n            return puVar1 + 1;\n        }\n    }\n    if (*0xfdc604 < uVar5) {\n        fcn.00fc1e68();\n        puVar4 = NULL;\n        *in_FS_OFFSET = uStack40;\n        uStack32 = 0xfc20df;\n        if (*0xfdc035 != '\\0') {\n            uStack36 = 0xfdc5b4;\n            puVar4 = fcn.00fc11d4();\n        }\n        return puVar4;\n    }\n    *0xfdc604 = *0xfdc604 - uVar5;\n    if (*0xfdc604 < 0xc) {\n        uVar5 = uVar5 + *0xfdc604;\n        *0xfdc604 = 0;\n    }\n    *0xfdc608 = *0xfdc608 + uVar5;\n    *puVar4 = uVar5 | 2;\n    *0xfdc59c = *0xfdc59c + 1;\n    *0xfdc5a0 = *0xfdc5a0 + (uVar5 - 4);\n    fcn.00fc303c();\n    return puVar4 + 1;\n}\n",
        "token_count": 964
    },
    "00fc246c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00fc246c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0xfdc5ac == '\\0') {\n        puStack24 = 0xfc2485;\n        cVar1 = fcn.00fc1870();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    uStack28 = 0xfc251d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0xfdc035 != '\\0') {\n        uStack36 = 0xfdc5b4;\n        puStack24 = &stack0xfffffffc;\n        fcn.00fc11cc();\n    }\n    cVar1 = fcn.00fc2290();\n    if ((cVar1 == '\\0') && (iVar2 = fcn.00fc1f5c(),  iVar2 != 0)) {\n        fcn.00fc2628();\n        fcn.00fc20ec();\n    }\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0xfc2524;\n    if (*0xfdc035 != '\\0') {\n        uStack32 = 0xfdc5b4;\n        uVar3 = fcn.00fc11d4();\n    }\n    return uVar3;\n}\n",
        "token_count": 363
    },
    "00fc2614": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc2614(void)\n\n{\n    if (*0xfdc008 != NULL) {\n        (**0xfdc008)();\n    }\n    fcn.00fc25c0();\n    return;\n}\n",
        "token_count": 46
    },
    "00fc2668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00fc2668(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = fcn.00fc10d8();\n        }\n        puVar4 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (0x20 < *puVar4) {\n        if (*puVar4 == 0x22) {\n            puVar2 = fcn.00fc10d8(puVar4);\n            puVar3 = puVar4;\n            for (; (*puVar2 != 0 && (*puVar2 != 0x22)); puVar2 = fcn.00fc10d8(puVar3, puVar2)) {\n            }\n            puVar4 = puVar2;\n            if (*puVar2 != 0) {\n                puVar4 = fcn.00fc10d8(puVar3, puVar2);\n            }\n        }\n        else {\n            puVar4 = fcn.00fc10d8();\n        }\n    }\n    fcn.00fc3b1c();\n    iVar1 = *param_2;\n    iVar5 = 0;\n    while (0x20 < *in_EAX) {\n        if (*in_EAX == 0x22) {\n            puVar4 = in_EAX;\n            in_EAX = fcn.00fc10d8(in_EAX);\n            while ((*in_EAX != 0 && (*in_EAX != 0x22))) {\n                puVar3 = fcn.00fc10d8(puVar4, in_EAX);\n                for (; in_EAX < puVar3; in_EAX = in_EAX + 1) {\n                    *(iVar1 + iVar5) = *in_EAX;\n                    iVar5 = iVar5 + 1;\n                }\n            }\n            if (*in_EAX != 0) {\n                in_EAX = fcn.00fc10d8(puVar4, in_EAX);\n            }\n        }\n        else {\n            puVar4 = fcn.00fc10d8();\n            for (; in_EAX < puVar4; in_EAX = in_EAX + 1) {\n                *(iVar1 + iVar5) = *in_EAX;\n                iVar5 = iVar5 + 1;\n            }\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 625
    },
    "00fc2754": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc2754(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.00fc34e4();\n    if (in_EAX == 0) {\n        fcn.00fc1108(0, auStack276, 0x105);\n        fcn.00fc35d4();\n    }\n    else {\n        fcn.00fc10f8();\n        while( true ) {\n            fcn.00fc2668();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00fc2d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc2d80(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0xfdb01c != '\\0') {\n        auStack12[0] = param_2;\n        (**0xfdc010)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00fc2dbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00fc2dbc(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0xfdb01c) {\n        uVar1 = 0;\n        (**0xfdc010)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 88
    },
    "00fc2df0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc2df0(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0xfdb01c) {\n        uStack16 = 0xfc2e01;\n        uStack8 = param_2;\n        fcn.00fc2dd0();\n        (**0xfdc010)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00fc2e34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00fc2e34(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0xfdb01c) {\n        (**0xfdc010)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 113
    },
    "00fc3368": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc3368(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0xfdc034 != '\\0') {\n        if ((*0xfdc208 == -0x284e) && (*0xfdc210 != 0)) {\n            uStack8 = 0xfc3391;\n            (**0xfdc220)();\n        }\n        puStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        uStack16 = 0x1e;\n        uStack20 = 0xfdb060;\n        uStack24 = 0xfffffff5;\n        uStack28 = 0xfc33a6;\n        uStack28 = fcn.00fc10b0();\n        fcn.00fc10d0();\n        uVar1 = fcn.00fc10b0(0xfffffff5, 0xfc33f0, 2, &stack0xffffffe4, 0);\n        fcn.00fc10d0(uVar1);\n        return;\n    }\n    if (*0xfdb024 == '\\0') {\n        uStack8 = 0;\n        puStack12 = 0xfdb058;\n        uStack16 = 0xfdb060;\n        uStack20 = 0;\n        uStack24 = 0xfc33e5;\n        fcn.00fc10e8();\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "00fc33f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc33f4(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0xfdc650 == 0) && (*0xfdc030 != NULL)) {\n        do {\n            pcVar1 = *0xfdc030;\n            *0xfdc030 = NULL;\n            (*pcVar1)();\n        } while (*0xfdc030 != NULL);\n    }\n    if (*0xfdb004 != 0) {\n        fcn.00fc32dc();\n        fcn.00fc3368();\n        *0xfdb004 = 0;\n    }\n    do {\n        if ((*0xfdc650 == 2) && (*0xfdb000 == 0)) {\n            *0xfdc634 = 0;\n        }\n        fcn.00fc31dc();\n        if (((*0xfdc650 < 2) || (*0xfdb000 != 0)) && (*0xfdc638 != 0)) {\n            fcn.00fc48ec();\n            iVar2 = *(*0xfdc638 + 0x10);\n            if ((iVar2 != *(*0xfdc638 + 4)) && (iVar2 != 0)) {\n                fcn.00fc10f0(iVar2);\n            }\n        }\n        fcn.00fc31b4();\n        if (*0xfdc650 == 1) {\n            (**0xfdc64c)();\n        }\n        if (*0xfdc650 != 0) {\n            fcn.00fc3338();\n        }\n        if (*0xfdc628 == NULL) {\n            if (*0xfdc018 != NULL) {\n                (**0xfdc018)();\n            }\n            fcn.00fc10e0(*0xfdb000);\n        }\n        puVar3 = *0xfdc628;\n        puVar4 = 0xfdc628;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 486
    },
    "00fc3b1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3b1c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00fc2570();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.00fc35a8();\n        if (*in_EAX != 0) {\n            fcn.00fc2628();\n        }\n    }\n    fcn.00fc34e4();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 200
    },
    "00fc3f44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fc3f44(uint arg_8h)\n\n{\n    fcn.00fc3da8();\n    fcn.00fc3cd0();\n    return;\n}\n",
        "token_count": 43
    },
    "00fc3f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3f90(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00fc3da8(param_1);\n    if ((((0 < iVar1) && (0 < param_2)) && (param_2 <= iVar1)) && (0 < param_1)) {\n        param_2 = param_2 + -1;\n        param_1 = (iVar1 - param_2) - param_1;\n        if (param_1 < 0) {\n            param_1 = 0;\n        }\n        if ((param_2 == 0) && (param_1 == 0)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00fc3bb4();\n            if (0 < param_2) {\n                fcn.00fc2628(uVar2);\n            }\n            if (0 < param_1) {\n                fcn.00fc2628(uVar2);\n            }\n        }\n        fcn.00fc3bcc(uVar2);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00fc4020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc4020(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00fc3da8();\n    if (0 < iVar1) {\n        iVar1 = fcn.00fc3da8();\n        if (param_1 < 1) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = param_1 + -1;\n            if (iVar1 < param_1 + -1) {\n                iVar2 = iVar1;\n            }\n        }\n        fcn.00fc3bb4();\n        if (0 < iVar2) {\n            fcn.00fc2628();\n        }\n        fcn.00fc2628();\n        if (iVar2 < iVar1) {\n            fcn.00fc2628();\n        }\n        fcn.00fc3bcc();\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00fc4268": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc4268(void)\n\n{\n    if (*0xfdb010 != NULL) {\n        (**0xfdb010)();\n        return;\n    }\n    fcn.00fc2614();\n    return;\n}\n",
        "token_count": 48
    },
    "00fc4280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc25ec)\n\nvoid __fastcall fcn.00fc4280(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00fc34e4();\n            }\n            else {\n                fcn.00fc3508();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00fc3bdc();\n            }\n            else {\n                fcn.00fc3bf4();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00fc4268();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00fc4280();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00fc4234();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00fc495c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0xfdc008 != NULL) {\n                    (**0xfdc008)();\n                }\n                fcn.00fc25c0();\n                return;\n            }\n            do {\n                fcn.00fc4810();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 587
    },
    "00fc436c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc436c(void)\n\n{\n    if (*0xfdb014 != NULL) {\n        (**0xfdb014)();\n        return;\n    }\n    fcn.00fc2614();\n    return;\n}\n",
        "token_count": 48
    },
    "00fc4678": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fc4678(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00fc2614();\n        }\n        fcn.00fc4670();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00fc2614();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.00fc4668();\n            }\n            fcn.00fc2570();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00fc2530();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.00fc2628();\n            }\n            else {\n                fcn.00fc28e0();\n                fcn.00fc4658(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00fc28e0();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.00fc4678(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 640
    },
    "00fc4880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc4880(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0xfdb02c;\n    if (*0xfdb02c != NULL) {\n        do {\n            uStack32 = 0xfc48bb;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00fc49d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00fc49d0(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 655
    },
    "00fc4ba8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc4ba8(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_bh;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0xfc4c0e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = 7;\n    fcn.00fc1100();\n    fcn.00fc3748();\n    fcn.00fc2988();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00fc34e4(0xfc4c15, uVar1);\n    return;\n}\n",
        "token_count": 185
    },
    "00fc5194": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc5194(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0xfc51a6;\n    fcn.00fc3980();\n    uStack28 = 0xfc524f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar3 = -1;\n    puStack24 = &stack0xfffffffc;\n    iVar1 = fcn.00fc4648();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00fc3ad4();\n            if (iVar2 != 0) {\n                iVar3 = 0;\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    if (iVar3 != 0) {\n        iVar1 = fcn.00fc4648();\n        fcn.00fc4804(iVar1 + 1);\n        fcn.00fc4648();\n        fcn.00fc3538();\n        fcn.00fc5114();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0xfc5256;\n    uStack28 = 0xfc524e;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 336
    },
    "00fc6004": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00fc6004(uint arg_8h)\n\n{\n    char *pcVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char in_CL;\n    char *in_EDX;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint8_t var_ah;\n    uint var_9h;\n    uint var_4h;\n    \n    iVar2 = fcn.00fc5f80();\n    if (iVar2 == 0) {\n        pcVar3 = fcn.00fc5fa8();\n        var_ah = pcVar3;\n    }\n    else {\n        pcVar4 = fcn.00fc3790();\n        var_ah = 0;\n        iVar5 = iVar2 + -1;\n        pcVar3 = pcVar4;\n        pcVar7 = pcVar4;\n        pcVar1 = in_EDX;\n        var_18h = in_EAX;\n        if (iVar5 <= pcVar4) {\n            for (; 0 < iVar5; iVar5 = iVar5 + -1) {\n                if ((*pcVar1 != in_CL) && (pcVar3 = pcVar7 & 0xffffff00,  *pcVar1 != *var_18h)) goto code_r0x00fc6138;\n                pcVar7 = pcVar7 & 0xffffff00;\n                pcVar1 = pcVar1 + 1;\n                var_18h = var_18h + 1;\n            }\n            var_10h = pcVar4 - (iVar2 + -1);\ncode_r0x00fc6091:\n            for (; in_EDX[iVar2 + -1] == arg_8h; iVar2 = iVar2 + 1) {\n            }\n            iVar5 = fcn.00fc5f80();\n            if (iVar5 == 0) {\n                iVar5 = fcn.00fc3790();\n                pcVar3 = (iVar5 - iVar2) + 1;\n                if (pcVar3 <= var_10h) {\n                    iVar6 = fcn.00fc3790();\n                    pcVar3 = iVar6 + -1;\n                    pcVar7 = in_EAX + pcVar3;\n                    goto joined_r0x00fc6116;\n                }\n            }\n            else {\n                while( true ) {\n                    pcVar7 = in_EDX + iVar2 + -1;\n                    iVar6 = iVar5 - iVar2;\n                    pcVar3 = in_EDX;\n                    pcVar1 = var_18h;\n                    if (var_10h < iVar6) break;\n                    while( true ) {\n                        if (iVar6 < 1) {\n                            var_10h = var_10h - (iVar5 - iVar2);\n                            iVar2 = iVar5;\n                            var_18h = pcVar1;\n                            goto code_r0x00fc6091;\n                        }\n                        if ((*pcVar7 != in_CL) && (*pcVar7 != *pcVar1)) break;\n                        iVar6 = iVar6 + -1;\n                        pcVar7 = pcVar7 + 1;\n                        pcVar1 = pcVar1 + 1;\n                    }\n                    var_18h = var_18h + 1;\n                    var_10h = var_10h + -1;\n                }\n            }\n        }\n    }\ncode_r0x00fc6138:\n    return pcVar3 & 0xffffff00 | var_ah;\njoined_r0x00fc6116:\n    if (iVar5 < iVar2) goto code_r0x00fc6134;\n    pcVar3 = in_EDX & 0xffffff00;\n    if ((in_EDX[iVar5 + -1] != in_CL) && (in_EDX[iVar5 + -1] != *pcVar7)) goto code_r0x00fc6138;\n    iVar5 = iVar5 + -1;\n    pcVar7 = pcVar7 + -1;\n    goto joined_r0x00fc6116;\ncode_r0x00fc6134:\n    var_ah = 1;\n    goto code_r0x00fc6138;\n}\n",
        "token_count": 940
    },
    "00fc6678": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00fc6678(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xfc66c4;\n    uStack16 = 0xfc66d4;\n    iStack20 = 0xfc6689;\n    iStack20 = fcn.00fc4e88();\n    pcVar2 = fcn.00fc4e98();\n    iStack20 = 0;\n    if (pcVar2 != NULL) {\n        uVar3 = fcn.00fc4e68(&stack0xffffffec);\n        iVar4 = (*pcVar2)(uVar3);\n        if ((iVar4 == 0) || (iStack20 == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        iStack20 = -uVar1;\n    }\n    return CONCAT44(iStack20, iStack20 != 0);\n}\n",
        "token_count": 244
    },
    "00fc6724": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc6724(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0xfc6737;\n    fcn.00fc4150();\n    uStack24 = 0xfc67ab;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    uVar2 = 0xfc6759;\n    iVar1 = fcn.00fc40bc();\n    if (iVar1 != 0) {\n        uVar2 = 0xfc6765;\n        iVar1 = fcn.00fc3da8();\n        if (-1 < iVar1) {\n            do {\n                if (*(in_EAX + -2 + iVar1 * 2) == 0x2e) {\n                    fcn.00fc3da8();\n                    fcn.00fc3f44(param_2);\n                    uVar2 = param_2;\n                    break;\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack24 = 0xfc67b2;\n    uStack28 = 0xfc67aa;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 353
    },
    "00fc6ce8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00fc6ce8(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY72;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 7;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0xfc6e52;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    if (*0xfdb0c0 == 0) {\n        var_14h = unaff_ESI;\n        var_10h = unaff_EBX;\n        fcn.00fc6f30();\n        fcn.00fc377c();\n        fcn.00fc6bd8();\n        fcn.00fc377c();\n        fcn.00fc65f0();\n        fcn.00fc377c();\n        fcn.00fc6634();\n        fcn.00fc377c();\n        fcn.00fc627c();\n        fcn.00fc627c(var_28h);\n        fcn.00fc627c(var_2ch);\n        fcn.00fc627c(var_30h);\n        iStackY72 = var_ch;\n        fcn.00fc3850(var_14h, var_10h, var_ch, var_8h, var_34h);\n        fcn.00fc627c();\n        fcn.00fc3850();\n        iVar1 = fcn.00fc3790();\n        uVar3 = iVar1 - 1;\n        if (0 < uVar3) {\n            do {\n                uVar2 = uVar3 & 0x80000007;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                }\n                if (uVar2 == 0) {\n                    fcn.00fc3a78();\n                }\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n        }\n        fcn.00fc3538();\n    }\n    else {\n        var_18h = &stack0xfffffffc;\n        fcn.00fc3538();\n    }\n    *in_FS_OFFSET = iStackY72;\n    fcn.00fc3508(0xfc6e59);\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 847
    },
    "00fc7108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc7108(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0xfc711f;\n    fcn.00fc4150();\n    uStack28 = 0xfc716d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00fc377c();\n    fcn.00fc2988();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0xfc7174;\n    uStack28 = 0xfc7164;\n    fcn.00fc34e4();\n    uStack28 = 0xfc716c;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 208
    },
    "00fc74e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fc74e8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY44;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack28 = 0xfc7504;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.00fc3980();\n    puStack28 = 0xfc750c;\n    fcn.00fc3980();\n    puStack28 = 0xfc7514;\n    fcn.00fc3980();\n    uStack32 = 0xfc75ae;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    if (((var_4h != 0) && (var_8h != 0)) && (in_ECX != 0)) {\n        iVar1 = fcn.00fc3ad4();\n        if (iVar1 != 0) {\n            fcn.00fc3790();\n            fcn.00fc3790(&fcn.00fc74e8::var_8h);\n            fcn.00fc39f0();\n            uStackY44 = 0xfc757c;\n            iVar1 = fcn.00fc3ad4();\n            if (0 < iVar1) {\n                uStackY44 = arg_8h;\n                fcn.00fc39f0();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY44;\n    uStack36 = 0xfc75b5;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 433
    },
    "00fc75c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00fc75c0(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack552;\n    uint uStack548;\n    uchar *puStack544;\n    uint var_214h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack544 = 0xfc75da;\n    fcn.00fc4150();\n    puStack544 = 0xfc75e2;\n    fcn.00fc4150();\n    uStack548 = 0xfc76a3;\n    uStack552 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd8;\n    var_10h = 0xfe;\n    var_214h._0_2_ = 0;\n    if (arg_ch == '\\x01') {\n        puStack544 = &stack0xfffffffc;\n        fcn.00fc3d98(0, 0x20119, &fcn.00fc75c0::var_14h);\n        (***0xfdb1a4)();\n    }\n    else {\n        puStack544 = &stack0xfffffffc;\n        fcn.00fc3d98(0, 0x20019, &fcn.00fc75c0::var_14h);\n        (***0xfdb1a4)();\n    }\n    uVar1 = fcn.00fc3d98(0, &fcn.00fc75c0::var_ch, &fcn.00fc75c0::var_214h, &fcn.00fc75c0::var_10h);\n    (***0xfdb398)(var_14h, uVar1);\n    fcn.00fc3d6c();\n    (***0xfdb1fc)();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00fc3bf4(0xfc76aa);\n    return;\n}\n",
        "token_count": 459
    },
    "00fc77c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc77c8(uint param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0xfc77db;\n    fcn.00fc4150();\n    uStack24 = 0xfc7846;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    uVar3 = 0xfc77f8;\n    iVar2 = fcn.00fc3da8();\n    if (0 < iVar2) {\n        do {\n            iVar1 = *(in_EAX + -2 + iVar2 * 2);\n            if ((iVar1 == 0x2f) || (iVar1 == 0x5c)) {\n                fcn.00fc3da8();\n                fcn.00fc3f44(param_2);\n                uVar3 = param_2;\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack24 = 0xfc784d;\n    uStack28 = 0xfc7845;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 344
    },
    "00fc7854": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc7854(uint param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0xfc7867;\n    fcn.00fc4150();\n    uStack24 = 0xfc78cc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    uVar3 = 0xfc7884;\n    iVar2 = fcn.00fc3da8();\n    if (0 < iVar2) {\n        do {\n            iVar1 = *(in_EAX + -2 + iVar2 * 2);\n            if ((iVar1 == 0x2f) || (iVar1 == 0x5c)) {\n                fcn.00fc3f44(param_2);\n                uVar3 = param_2;\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack24 = 0xfc78d3;\n    uStack28 = 0xfc78cb;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 333
    },
    "00fc79ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00fc79ac(int32_t param_1, int32_t param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack20;\n    \n    if (param_1 == 1) {\n        iVar1 = fcn.00fc3ad4();\n        iStack20 = param_1;\n    }\n    else {\n        iVar2 = fcn.00fc3790();\n        iVar1 = fcn.00fc3790();\n        iStack20 = (iVar1 - iVar2) + 1;\n        iVar1 = param_1;\n        if (param_1 <= iStack20) {\n            do {\n                if (*(param_2 + -1 + iVar1) == *in_EAX) {\n                    for (iVar3 = 1; (iVar3 < iVar2 && (*(param_2 + -1 + iVar3 + iVar1) == in_EAX[iVar3]));\n                        iVar3 = iVar3 + 1) {\n                    }\n                    if (iVar2 == iVar3) goto code_r0x00fc7a12;\n                }\n                iVar1 = iVar1 + 1;\n            } while (iVar1 <= iStack20);\n        }\n        iVar1 = 0;\n    }\ncode_r0x00fc7a12:\n    return CONCAT44(iStack20, iVar1);\n}\n",
        "token_count": 310
    },
    "00fc7b08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc7b08(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0xfc7bea;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.00fc3538();\n    iVar1 = fcn.00fc7b00();\n    if (*(iVar1 + 0xc0) == 0) {\n        fcn.00fc357c();\n    }\n    else {\n        fcn.00fc357c();\n    }\n    fcn.00fc7af0();\n    iVar1 = fcn.00fc7af8();\n    iVar1 = *(iVar1 + 0x264);\n    fcn.00fc709c();\n    fcn.00fc709c(0xfc7c24, 0);\n    fcn.00fc3e78();\n    fcn.00fc377c();\n    if (iVar1 != 1) {\n        fcn.00fc3798();\n    }\n    *in_FS_OFFSET = 0;\n    fcn.00fc3bf4(0xfc7bf1);\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 329
    },
    "00fc7c34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00fc7c34(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_7h;\n    uint var_3h;\n    \n    var_7h = *0xfdb0c4;\n    var_3h._0_2_ = *0xfdb0c8;\n    puStack28 = &fcn.00fc7c34::var_ch;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0;\n    uStack52 = 0;\n    uStack60 = 0x20;\n    uStack64 = 2;\n    puStack68 = &fcn.00fc7c34::var_7h;\n    puStack72 = 0xfc7c73;\n    iVar1 = (***0xfdb274)();\n    var_3h._2_1_ = '\\x01' - (iVar1 == 0);\n    if (in_EAX == 0x4eb1c2) {\n        puStack72 = &fcn.00fc7c34::var_ch;\n        uStack76 = 0;\n        uStack80 = 0;\n        iVar1 = (***0xfdb274)(&fcn.00fc7c34::var_7h, 2, 0x12, 0, 0, 0, 0, 0);\n        var_3h._2_1_ = '\\x01' - (iVar1 == 0);\n    }\n    uStack76 = 0xfc7d02;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (var_3h._2_1_ != '\\0') {\n        puStack72 = &fcn.00fc7c34::var_3h + 3;\n        iVar1 = (***0xfdb160)(0, var_ch, &fcn.00fc7c34::var_10h);\n        if (iVar1 == 0) {\n            var_3h._2_1_ = '\\0';\n        }\n        else {\n            var_3h._2_1_ = '\\x01' - (var_10h == 0);\n        }\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0xfc7d09;\n    uStack76 = var_ch;\n    uStack80 = 0xfc7d01;\n    fcn.00fc4e10();\n    return;\n}\n",
        "token_count": 693
    },
    "00fc7d14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00fc7d14(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint *puStack40;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ah;\n    ushort var_6h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_ah = *0xfdb0d0;\n    var_6h = *0xfdb0d4;\n    puStack40 = &fcn.00fc7d14::var_18h;\n    uStack44 = 0;\n    uStack48 = 0;\n    uStack52 = 0;\n    uStack56 = 0;\n    uStack60 = 0;\n    uStack64 = 0;\n    uStack68 = 0;\n    uStack72 = *0xfdb0cc;\n    uStack76 = 1;\n    puStack80 = &fcn.00fc7d14::var_ah;\n    puStack84 = 0xfc7d5a;\n    (***0xfdb274)();\n    if (var_18h != 0) {\n        uStack88 = 0xfc7dd2;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_10h = 0;\n        var_14h = 0;\n        puStack84 = &stack0xfffffffc;\n        (***0xfdb108)(0, var_18h, 0, &fcn.00fc7d14::var_10h, 0, &fcn.00fc7d14::var_14h, &fcn.00fc7d14::var_1ch);\n        uVar2 = 0;\n        iVar1 = (***0xfdb160)(0, var_18h, &fcn.00fc7d14::var_20h);\n        if (iVar1 == 0) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = var_20h;\n        }\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.00fc4e10(var_18h, 0xfc7dd9);\n        return uVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 615
    },
    "00fc7e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc7e90(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack124 = &stack0xfffffffc;\n    var_4h = 0;\n    var_ch = 0;\n    uStack128 = 0xfc7fa6;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack132;\n    uVar1 = fcn.00fc4ec0(0xfc7fd4, 0xfc7fb4);\n    pcVar2 = fcn.00fc4e98(uVar1);\n    uVar1 = fcn.00fc4ec0(0xfc7ff8, 0xfc7fe4);\n    pcVar3 = fcn.00fc4e98(uVar1);\n    uVar1 = fcn.00fc4ec0(0xfc8020, 0xfc8008);\n    pcVar4 = fcn.00fc4e98(uVar1);\n    fcn.00fc2754();\n    fcn.00fc3d88();\n    fcn.00fc4f5c();\n    var_64h = 0x44;\n    var_5ch = 0;\n    uVar1 = (*pcVar2)();\n    iVar5 = (*pcVar3)(uVar1, &var_8h);\n    if (iVar5 != 0) {\n        (*pcVar4)(&var_10h, var_8h, 0xffffffff);\n        uVar6 = fcn.00fc3d98(0, 0, 0, 0x400, var_10h, 0, &var_64h, &var_20h);\n        uVar6 = fcn.00fc3d98(uVar6);\n        (***0xfdb32c)(var_8h, uVar6);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc34e4(0xfc7fad);\n    fcn.00fc3bdc();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 567
    },
    "00fc802c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fc802c(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    for (iVar5 = in_ECX * 2 + 1; -1 < iVar5; iVar5 = iVar5 + -1) {\n    }\n    puVar1 = &stack0xffffffe4;\n    puStack32 = 0xfc8056;\n    fcn.00fc3980();\n    uStack36 = 0xfc8126;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_8h = NULL;\n    puStack32 = &stack0xfffffffc;\n    if (in_ECX != -1 && -1 < in_ECX + 1) {\n        puStack44 = 0xfc8078;\n        puStack32 = &stack0xfffffffc;\n        var_8h = fcn.00fc2530();\n    }\n    if (-1 < in_ECX) {\n        iVar5 = in_ECX + 1;\n        puVar4 = var_8h;\n        do {\n            *puVar4 = *puVar1;\n            puVar4 = puVar4 + 1;\n            puVar1 = puVar1 + 2;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    puStack44 = 0xfc80a0;\n    iVar2 = fcn.00fc2530();\n    uStack48 = 0xfc80e2;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    uVar3 = fcn.00fc3990(var_8h);\n    iVar5 = iVar2;\n    (***0xfdb23c)(iVar2, uVar3);\n    fcn.00fc35d4();\n    *in_FS_OFFSET = iVar5;\n    if (var_8h != NULL) {\n        fcn.00fc2550();\n    }\n    if (iVar2 != 0) {\n        fcn.00fc2550();\n    }\n    *in_FS_OFFSET = iStack52;\n    puStack44 = 0xfc812d;\n    uStack48 = 0xfc8125;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 618
    },
    "00fc9668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fc9668(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0xfc967f;\n    fcn.00fc3980();\n    uStack40 = 0xfc9963;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *0xfdb0d8 = 0;\n    puStack36 = &stack0xfffffffc;\n    fcn.00fc62fc();\n    fcn.00fc3c18();\n    uVar2 = fcn.00fc3d98(0);\n    fcn.00fc4e30(uVar2);\n    fcn.00fc94e0();\n    fcn.00fc3e14();\n    cVar1 = fcn.00fc776c();\n    if (cVar1 == '\\0') {\n        fcn.00fc62fc();\n        fcn.00fc3c18();\n        uVar2 = fcn.00fc3d98(0);\n        fcn.00fc4e30(uVar2);\n        fcn.00fc94e0();\n    }\n    uVar2 = fcn.00fc3d98();\n    (***0xfdb3ac)(0xfc99b4, uVar2);\n    uVar2 = fcn.00fc3d98();\n    (***0xfdb320)(uVar2);\n    fcn.00fc3e14(0, 8);\n    uVar2 = fcn.00fc3d98();\n    *0xfdca58 = fcn.00fc4ed0(uVar2);\n    if (*0xfdca58 != 0) {\n        uVar2 = fcn.00fc3990();\n        *0xfdca20 = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca24 = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca28 = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca2c = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca30 = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca34 = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca38 = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca3c = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca40 = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca44 = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca48 = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        *0xfdca4c = fcn.00fc4e98(*0xfdca58, uVar2);\n        uVar2 = fcn.00fc3990();\n        in_stack_ffffff44 = *0xfdca58;\n        *0xfdca50 = fcn.00fc4e98(*0xfdca58, uVar2);\n        if (((((*0xfdca20 != 0) && (*0xfdca24 != 0)) && (*0xfdca28 != 0)) &&\n            (((*0xfdca2c != 0 && (*0xfdca30 != 0)) && ((*0xfdca34 != 0 && ((*0xfdca38 != 0 && (*0xfdca3c != 0)))))))) &&\n           ((*0xfdca40 != 0 && ((((*0xfdca44 != 0 && (*0xfdca48 != 0)) && (*0xfdca4c != 0)) && (*0xfdca50 != 0)))))) {\n            *0xfdb0d8 = 1;\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff44;\n    fcn.00fc3bf4(0xfc996a);\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 1150
    },
    "00fc9ef0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00fc9ef0(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    int32_t var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_264h;\n    uint uStackY76;\n    uint uStackY72;\n    int32_t var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uchar *var_20h;\n    uchar auStack32 [3];\n    uint var_19h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0x56;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_8h = 0;\n    var_20h = 0xfc9f15;\n    _auStack32 = unaff_EDI;\n    var_14h = unaff_EBX;\n    var_4h = in_EDX;\n    fcn.00fc4150();\n    var_20h = 0xfc9f1d;\n    fcn.00fc3980();\n    var_20h = 0xfc9f25;\n    fcn.00fc3980();\n    var_24h = 0xfca36b;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fc9ef0::var_28h;\n    var_2ch = NULL;\n    var_30h = 0xfc9f48;\n    var_20h = &stack0xfffffffc;\n    fcn.00fc4804();\n    _auStack32 = CONCAT13(1, auStack32);\n    var_2ch = &fcn.00fc9ef0::var_290h;\n    var_30h = 0xfc9f69;\n    fcn.00fc3e14();\n    var_30h = 0xfc9f74;\n    var_30h = fcn.00fc3d98();\n    var_34h = 0xfc9f7e;\n    *NULL = (***0xfdb2d8)();\n    do {\n        var_34h = var_4h;\n        var_38h = 0xfc9f9a;\n        fcn.00fc3d6c();\n        var_38h = var_29ch;\n        var_3ch = 0xfca390;\n        var_40h = **0xfdb438;\n        uStackY72 = 0xfc9fbc;\n        fcn.00fc3e78();\n        uStackY72 = 0xfc9fc7;\n        uStackY72 = fcn.00fc3d98();\n        uStackY76 = 0xfc9fd1;\n        iVar1 = (***0xfdb358)();\n        if (iVar1 != -1) {\n            var_24h = var_4h;\n            var_28h = 0xfc9ff3;\n            fcn.00fc3d6c();\n            var_28h = var_2a4h;\n            var_2ch = 0xfca390;\n            var_30h = **0xfdb438;\n            var_34h = 0xfca015;\n            fcn.00fc3e78();\n            var_34h = 0xfca023;\n            fcn.00fc9c28();\n            if (var_19h == '\\0') break;\n            var_34h = 0xfca035;\n            iVar1 = fcn.00fc4648();\n            if (-1 < iVar1 + -1) {\n                do {\n                    var_34h = 0xfca051;\n                    fcn.00fc377c();\n                    var_34h = &fcn.00fc9ef0::var_2a8h;\n                    var_38h = 0xfca06e;\n                    fcn.00fc3760();\n                    var_34h = 0xfca07a;\n                    fcn.00fc3798();\n                    var_34h = 0xfca085;\n                    var_34h = fcn.00fc3990();\n                    var_38h = 0xfca08f;\n                    iVar2 = (***0xfdb314)();\n                    if (iVar2 != 0) goto code_r0x00fca290;\n                    var_34h = 0xfca0a1;\n                    var_ch = (***0xfdb2b8)();\n                    if (var_ch == 0) goto code_r0x00fca290;\n                    var_34h = NULL;\n                    var_38h = 0x1;\n                    var_40h = 0xfca0bf;\n                    var_3ch = var_ch;\n                    iVar2 = (***0xfdb404)();\n                    if (iVar2 != 0) goto code_r0x00fca290;\n                    var_34h = 0xfca0d7;\n                    fcn.00fc4f5c();\n                    var_34h = 0xfca0e4;\n                    fcn.00fc4f5c();\n                    var_34h = 0xfca0f6;\n                    fcn.00fc69a8();\n                    var_34h = 0xfca103;\n                    var_30h = fcn.00fc39e8();\n                    var_34h = 0xfca10e;\n                    var_2ch = fcn.00fc3790();\n                    var_34h = 0xfca119;\n                    fcn.00fc34e4();\n                    var_34h = NULL;\n                    var_38h = &fcn.00fc9ef0::var_40h;\n                    var_3ch = &fcn.00fc9ef0::var_34h;\n                    var_40h = 0xfca12c;\n                    iVar2 = (***0xfdb3b4)();\n                    if ((iVar2 == 0) && (-1 < var_38h + -1)) {\n                        var_24h = 0;\n                        puVar3 = var_38h;\n                        do {\n                            var_34h = 0xfca157;\n                            fcn.00fc36cc();\n                            var_34h = 0xfca165;\n                            fcn.00fc3798();\n                            var_24h = var_24h + 1;\n                            puVar3 = puVar3 + -1;\n                        } while (puVar3 != NULL);\n                    }\n                    var_34h = 0xfca173;\n                    fcn.00fc34e4();\n                    var_34h = 0xfca180;\n                    fcn.00fc4f5c();\n                    var_34h = 0xfca18d;\n                    fcn.00fc4f5c();\n                    var_34h = 0xfca19f;\n                    fcn.00fc69a8();\n                    var_34h = 0xfca1ac;\n                    var_30h = fcn.00fc39e8();\n                    var_34h = 0xfca1b7;\n                    var_2ch = fcn.00fc3790();\n                    var_34h = 0xfca1c2;\n                    fcn.00fc34e4();\n                    var_34h = NULL;\n                    var_38h = &fcn.00fc9ef0::var_40h;\n                    var_3ch = &fcn.00fc9ef0::var_34h;\n                    var_40h = 0xfca1d5;\n                    iVar2 = (***0xfdb3b4)();\n                    if ((iVar2 == 0) && (-1 < var_38h + -1)) {\n                        var_24h = 0;\n                        puVar3 = var_38h;\n                        do {\n                            var_34h = 0xfca200;\n                            fcn.00fc36cc();\n                            var_34h = 0xfca20e;\n                            fcn.00fc3798();\n                            var_24h = var_24h + 1;\n                            puVar3 = puVar3 + -1;\n                        } while (puVar3 != NULL);\n                    }\n                    var_34h = 0xfca21c;\n                    fcn.00fc34e4();\n                    var_34h = var_10h;\n                    var_38h = var_14h;\n                    var_3ch = 0xfca23a;\n                    fcn.00fc3760();\n                    var_3ch = var_2b8h;\n                    var_40h = 0xfca255;\n                    fcn.00fc525c(var_2b8h, var_38h, var_34h);\n                    var_40h = var_ch;\n                    uStackY72 = 0xfca262;\n                    (***0xfdb488)();\n                    var_40h = 0xfca26c;\n                    (***0xfdb2ec)();\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n        }\n        var_34h = &fcn.00fc9ef0::var_290h;\n        var_38h = stack0xffffffe4;\n        var_3ch = 0xfca288;\n        iVar1 = (***0xfdb198)();\n    } while (iVar1 != 0);\ncode_r0x00fca290:\n    if ((*0x10 != 0x10) && (var_ch != 0)) {\n        var_38h = 0xfca2c3;\n        var_3ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00fc9ef0::var_3ch;\n        var_40h = var_ch;\n        uStackY72 = 0xfca2b8;\n        var_34h = &stack0xfffffffc;\n        (***0xfdb488)();\n        *in_FS_OFFSET = var_3ch;\n    }\n    if (**0xfdb2ec != NULL) {\n        var_38h = 0xfca2f8;\n        var_3ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00fc9ef0::var_3ch;\n        var_40h = 0xfca2ee;\n        var_34h = &stack0xfffffffc;\n        (***0xfdb2ec)();\n        *in_FS_OFFSET = var_3ch;\n    }\n    *in_FS_OFFSET = var_30h;\n    var_28h = 0xfca372;\n    var_2ch = 0xfca31f;\n    fcn.00fc3508();\n    var_2ch = 0xfca32f;\n    fcn.00fc3bf4();\n    var_2ch = 0xfca337;\n    fcn.00fc34e4();\n    var_2ch = 0xfca345;\n    fcn.00fc4810();\n    var_2ch = 0xfca352;\n    fcn.00fc3508();\n    var_2ch = 0xfca35a;\n    fcn.00fc34e4();\n    var_2ch = 0xfca362;\n    fcn.00fc3bdc();\n    var_2ch = 0xfca36a;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 2773
    },
    "00fca394": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid fcn.00fca394(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_48h;\n    uint *var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = &stack0xfffffffc;\n    iVar2 = 9;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_10h = 0xfca5aa;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fca394::var_14h;\n    puVar1 = &stack0xfffffffc;\n    if (**0xfdb33c != '\\0') {\n        var_18h = 0xfca5c0;\n        var_1ch = &fcn.00fca394::var_4h;\n        var_20h = 0xfca3d7;\n        fcn.00fc62fc();\n        var_20h = var_8h;\n        var_24h = 0xfca3eb;\n        fcn.00fc377c();\n        var_20h = 0xfca3f9;\n        fcn.00fc9ef0(var_1ch, var_18h);\n        var_20h = 0xfca5d4;\n        var_24h = &fcn.00fca394::var_10h;\n        var_28h = 0xfca411;\n        fcn.00fc62fc();\n        var_28h = var_14h;\n        var_2ch = 0xfca425;\n        fcn.00fc377c();\n        var_28h = 0xfca433;\n        fcn.00fc9ef0(var_24h, var_20h);\n        var_28h = 0xfca5c0;\n        var_2ch = &fcn.00fca394::var_1ch;\n        var_30h = 0xfca44b;\n        fcn.00fc62fc();\n        var_30h = var_20h;\n        var_34h = 0xfca45f;\n        fcn.00fc377c();\n        var_30h = 0xfca46d;\n        fcn.00fc9ef0(var_2ch, var_28h);\n        var_30h = 0xfca5c0;\n        var_34h = &fcn.00fca394::var_28h;\n        var_38h = 0xfca485;\n        fcn.00fc62fc();\n        var_38h = var_2ch;\n        var_3ch = 0xfca499;\n        fcn.00fc377c();\n        var_38h = 0xfca4a7;\n        fcn.00fc9ef0(var_34h, var_30h);\n        var_38h = 0xfca5c0;\n        var_3ch = &fcn.00fca394::var_34h;\n        var_40h = 0xfca4bf;\n        fcn.00fc62fc();\n        var_40h = var_38h;\n        fcn.00fc377c();\n        var_40h = 0xfca4e1;\n        fcn.00fc9ef0(var_3ch, var_38h);\n        var_40h = 0xfca5c0;\n        var_44h = &fcn.00fca394::var_40h;\n        fcn.00fc62fc();\n        fcn.00fc377c(var_44h);\n        fcn.00fc9ef0(var_44h, var_40h);\n        puVar1 = var_ch;\n    }\n    var_ch = puVar1;\n    *in_FS_OFFSET = var_44h;\n    var_3ch = 0xfca5b4;\n    var_40h = 0xfca530;\n    fcn.00fc34e4();\n    var_40h = 0xfca538;\n    fcn.00fc3bdc();\n    var_40h = 0xfca545;\n    fcn.00fc3508();\n    var_40h = 0xfca54d;\n    fcn.00fc3bdc();\n    var_40h = 0xfca55a;\n    fcn.00fc3508();\n    var_40h = 0xfca562;\n    fcn.00fc3bdc();\n    var_40h = 0xfca56f;\n    fcn.00fc3508();\n    var_40h = 0xfca577;\n    fcn.00fc3bdc();\n    var_40h = 0xfca584;\n    fcn.00fc3508();\n    var_40h = 0xfca58c;\n    fcn.00fc3bdc();\n    var_40h = 0xfca599;\n    fcn.00fc3508();\n    var_40h = 0xfca5a1;\n    fcn.00fc3bdc();\n    var_40h = 0xfca5a9;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 1492
    },
    "00fcac08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fcac08(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = &stack0xfffffffc;\n    iVar1 = 0x20;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_10h = 0xfcb121;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fcac08::var_14h;\n    if (**0xfdb33c != '\\0') {\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n        fcn.00fc62fc();\n        fcn.00fca9e4();\n    }\n    *in_FS_OFFSET = var_14h;\n    var_ch = 0xfcb128;\n    var_10h = 0xfcb120;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 1263
    },
    "00fcb66c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fcb66c(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = 0xfcb68b;\n    fcn.00fc3980();\n    puStack60 = 0xfcb693;\n    fcn.00fc3980();\n    uStack64 = 0xfcb7c3;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    fcn.00fc4f54();\n    fcn.00fc4f54();\n    fcn.00fc4f54();\n    if (-1 < var_14h + -1) {\n        do {\n            fcn.00fc4f54();\n            fcn.00fc4f54();\n            fcn.00fc2530();\n            cVar1 = fcn.00fcb634();\n            if (cVar1 == '\\x01') {\n                fcn.00fc370c(in_ECX, arg_ch, *arg_8h);\n                uStack68 = in_ECX;\n                fcn.00fc3850();\n            }\n            else {\n                fcn.00fc370c(*arg_8h);\n                uStack68 = 0xfcb7dc;\n                fcn.00fc3850();\n            }\n            var_14h = var_14h + -1;\n        } while (var_14h != 0);\n    }\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0xfcb7ca;\n    uStack64 = 0xfcb7b2;\n    fcn.00fc3508();\n    uStack64 = 0xfcb7ba;\n    fcn.00fc34e4();\n    uStack64 = 0xfcb7c2;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 533
    },
    "00fcbb90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fcbb90(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0xfcbba2;\n    fcn.00fc3980();\n    uStack20 = 0xfcbbe0;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    cVar1 = fcn.00fcbaf0();\n    if (cVar1 == '\\x01') {\n        fcn.00fcba38();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0xfcbbe7;\n    uStack20 = 0xfcbbdf;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 213
    },
    "00fcce7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fcce7c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *puStack52;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack40 = 0xfccfa5;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00fccd68();\n    iVar1 = fcn.00fc3790();\n    if (iVar1 < 5) {\n        fcn.00fc34e4();\n    }\n    else {\n        iVar1 = fcn.00fc3790();\n        if (0 < iVar1) {\n            iVar3 = 1;\n            do {\n                iVar2 = fcn.00fc39e8();\n                *(iVar2 + -1 + iVar3) = *(*arg_8h + -1 + iVar3) ^ 0x5c;\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00fc3a30();\n        fcn.00fc3a30();\n        puStack52 = 0xfccf2b;\n        fcn.00fc39f0(arg_8h);\n        if (*arg_8h != 0) {\n            iVar1 = fcn.00fc3790();\n            iVar3 = fcn.00fc3790();\n            uVar4 = iVar1 + iVar3 == 0;\n            puStack52 = &fcn.00fcce7c::var_ch;\n            fcn.00fc39f0();\n            fcn.00fc37dc(var_ch);\n            fcn.00fc38dc();\n            if (uVar4) {\n                fcn.00fc3a30();\n            }\n            else {\n                fcn.00fc34e4();\n            }\n        }\n    }\n    *in_FS_OFFSET = puStack52;\n    iStack44 = 0xfccfac;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 536
    },
    "00fccfb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00fccfb8(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint var_858h;\n    uint var_854h;\n    uint var_850h;\n    uint var_84ch;\n    uint var_848h;\n    uint var_844h;\n    uint var_840h;\n    uint var_83ch;\n    uint var_838h;\n    uint var_834h;\n    uint var_830h;\n    uint var_82ch;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint uStackY100;\n    uint arg_ch;\n    uint arg_10h;\n    uint *puVar2;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar1 = 0x10b;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    uStack28 = 0xfcd289;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_ch = unaff_EBX;\n    fcn.00fc3c3c();\n    fcn.00fc3d98();\n    iVar1 = (***0xfdb474)();\n    if (iVar1 == 0) {\n        while (iVar1 = (***0xfdb248)(),  iVar1 == 0) {\n            uVar3 = 0;\n            puVar2 = &fcn.00fccfb8::var_ch;\n            fcn.00fc3d6c();\n            fcn.00fc3e14();\n            fcn.00fc75c0(puVar2, uVar3);\n            iVar1 = fcn.00fc3da8();\n            if (1 < iVar1) {\n                fcn.00fc3d6c();\n                fcn.00fc3e14();\n                fcn.00fc76b4();\n                uVar3 = 0;\n                puVar2 = &fcn.00fccfb8::var_10h;\n                fcn.00fc3d6c();\n                fcn.00fc3e14();\n                fcn.00fc75c0(puVar2, uVar3);\n                uVar3 = 0;\n                puVar2 = &fcn.00fccfb8::var_14h;\n                fcn.00fc3d6c();\n                fcn.00fc3e14();\n                fcn.00fc75c0(puVar2, uVar3);\n                puVar2 = &fcn.00fccfb8::var_838h;\n                fcn.00fc377c();\n                fcn.00fc377c();\n                fcn.00fc377c();\n                fcn.00fcce7c(puVar2);\n                fcn.00fc3d88();\n                fcn.00fc377c();\n                fcn.00fc377c();\n                arg_ch = 0xfcd35c;\n                arg_10h = var_ch;\n                fcn.00fc709c();\n                uStackY100 = 0xfcd1e1;\n                uVar3 = var_858h;\n                fcn.00fc3e78();\n                uStackY100 = 0xfcd1f2;\n                fcn.00fc377c();\n                uStackY100 = 0xfcd207;\n                fcn.00fc525c(uVar3, arg_ch, arg_10h);\n            }\n        }\n    }\n    (***0xfdb1fc)();\n    *in_FS_OFFSET = var_8h;\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bf4();\n    fcn.00fc3bf4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 959
    },
    "00fcf7a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00fcf7a8(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0x54;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puStack36 = 0xfcf7d0;\n    fcn.00fc4150();\n    puStack36 = 0xfcf7d8;\n    fcn.00fc4150();\n    puStack36 = 0xfcf7e0;\n    fcn.00fc4150();\n    uStack40 = 0xfcfae2;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00fcf7a8::var_264h;\n    uStack52 = 0xfcf808;\n    puStack36 = &stack0xfffffffc;\n    fcn.00fc3e14();\n    uStack52 = 0xfcf813;\n    uStack52 = fcn.00fc3d98();\n    uStack56 = 0xfcf81d;\n    uStack56 = (***0xfdb2d8)();\n    do {\n        uStack60 = 0xfcfb0c;\n        uStack64 = 0xfcf83e;\n        fcn.00fc3d6c();\n        uStack68 = 0xfcfb14;\n        puStack72 = 0xfcf859;\n        fcn.00fc3e78();\n        puStack72 = 0xfcf864;\n        cVar1 = fcn.00fc776c();\n        if (cVar1 != '\\0') {\n            uStack76 = 0xfcfa18;\n            uStack80 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb0;\n            puStack72 = &stack0xfffffffc;\n            if (arg_8h == 0) {\n                uStack88 = 0xfcfb0c;\n                uStack92 = 0xfcf8a2;\n                puStack72 = &stack0xfffffffc;\n                fcn.00fc3d6c();\n                uStack96 = 0xfcfb14;\n                uStack100 = 0xfcf8bd;\n                fcn.00fc3e78();\n                uStack100 = 0xfcf8ce;\n                fcn.00fceda8();\n                uStack100 = 0xfcf8df;\n                fcn.00fc377c();\n                uStack104 = 0;\n                uStack108 = 0xfcfb0c;\n                uStack116 = 0xfcfb2c;\n                uStack120 = 0xfcf90c;\n                puStack112 = in_EDX;\n                fcn.00fc3d6c();\n                uStack120 = var_28ch;\n                uStack124 = 0xfcfb34;\n                uStack128 = 0xfcf927;\n                fcn.00fc3e78();\n                uStack128 = 0xfcf938;\n                fcn.00fc377c();\n                uStack124 = 0xfcf944;\n                fcn.00fce6d4();\n            }\n            if (arg_8h == 1) {\n                uStack128 = 0xfcfb0c;\n                uStack132 = 0xfcf96c;\n                uStack124 = in_EAX;\n                fcn.00fc3d6c();\n                uStack136 = 0xfcfb14;\n                uStack140 = 0xfcf987;\n                fcn.00fc3e78();\n                uStack140 = 0xfcf998;\n                fcn.00fcf300();\n                uStack140 = 0xfcf9a9;\n                fcn.00fc377c();\n                uStack144 = 0;\n                uStack148 = 0xfcfb0c;\n                uStack156 = 0xfcfb2c;\n                uStack160 = 0xfcf9d6;\n                fcn.00fc3d6c();\n                uStack164 = 0xfcfb34;\n                uStack168 = 0xfcf9f1;\n                fcn.00fc3e78();\n                uStack168 = 0xfcfa02;\n                fcn.00fc377c();\n                uStack164 = 0xfcfa0e;\n                fcn.00fce6d4();\n            }\n            *in_FS_OFFSET = uStack120;\n        }\n        puStack112 = &fcn.00fcf7a8::var_264h;\n        uStack120 = 0xfcfa36;\n        uStack116 = uStack56;\n        iVar2 = (***0xfdb198)();\n    } while (iVar2 != 0);\n    uStack60 = 0xfcfa4b;\n    (***0xfdb3ec)();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0xfcfaec;\n    uStack52 = 0xfcfa68;\n    fcn.00fc3bf4();\n    uStack52 = 0xfcfa73;\n    fcn.00fc34e4();\n    uStack52 = 0xfcfa83;\n    fcn.00fc3bf4();\n    uStack52 = 0xfcfa8e;\n    fcn.00fc34e4();\n    uStack52 = 0xfcfa9e;\n    fcn.00fc3bf4();\n    uStack52 = 0xfcfaa9;\n    fcn.00fc34e4();\n    uStack52 = 0xfcfab9;\n    fcn.00fc3bf4();\n    uStack52 = 0xfcfac4;\n    fcn.00fc34e4();\n    uStack52 = 0xfcfad4;\n    fcn.00fc3bf4();\n    uStack52 = 0xfcfae1;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 1715
    },
    "00fcfb40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fcfb40(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack764;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint *puStack684;\n    uint uStack680;\n    uint uStack676;\n    uchar *puStack672;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack672 = 0xfcfb9b;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    puStack672 = 0xfcfba3;\n    fcn.00fc4150();\n    puStack672 = 0xfcfbab;\n    fcn.00fc4150();\n    uStack676 = 0xfcfdbb;\n    uStack680 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd58;\n    puStack684 = &fcn.00fcfb40::var_264h;\n    uStack688 = 0xfcfbd3;\n    puStack672 = &stack0xfffffffc;\n    fcn.00fc3e14();\n    uStack688 = 0xfcfbde;\n    uStack688 = fcn.00fc3d98();\n    uStack692 = 0xfcfbe8;\n    var_14h = (***0xfdb2d8)();\n    do {\n        uStack692 = var_4h;\n        uStack696 = 0xfcfde4;\n        uStack700 = 0xfcfc09;\n        fcn.00fc3d6c();\n        uStack700 = 0;\n        uStack704 = 0xfcfde4;\n        uStack708 = **0xfdb204;\n        puStack712 = 0xfcfc2b;\n        fcn.00fc3e78();\n        puStack712 = 0xfcfc36;\n        cVar1 = fcn.00fc776c();\n        if (cVar1 != '\\0') {\n            uStack716 = 0xfcfd27;\n            uStack720 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd30;\n            puStack712 = &stack0xfffffffc;\n            if (arg_8h == 0) {\n                puStack712 = &stack0xfffffffc;\n                fcn.00fc3d6c(0xfcfde4, var_4h);\n                fcn.00fc3e78(**0xfdb204, 0xfcfde4, 0);\n                fcn.00fce954();\n                fcn.00fc377c();\n                fcn.00fc3d6c(0xfcfdec, var_8h, 0xfcfde4, var_ch, 0);\n                uStack764 = 0;\n                fcn.00fc3e78(0xfcfdf4);\n                fcn.00fc377c();\n                fcn.00fce6d4();\n            }\n            *in_FS_OFFSET = uStack764;\n        }\n        uStack764 = 0xfcfd45;\n        iVar2 = (***0xfdb198)(var_14h, &fcn.00fcfb40::var_264h);\n    } while (iVar2 != 0);\n    uStack692 = var_14h;\n    uStack696 = 0xfcfd5a;\n    (***0xfdb3ec)();\n    *in_FS_OFFSET = uStack692;\n    puStack684 = 0xfcfdc2;\n    uStack688 = 0xfcfd77;\n    fcn.00fc3bf4();\n    uStack688 = 0xfcfd82;\n    fcn.00fc34e4();\n    uStack688 = 0xfcfd92;\n    fcn.00fc3bf4();\n    uStack688 = 0xfcfd9d;\n    fcn.00fc34e4();\n    uStack688 = 0xfcfdad;\n    fcn.00fc3bf4();\n    uStack688 = 0xfcfdba;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 1063
    },
    "00fd0304": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00fd0304(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uchar *var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uchar *var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x2d;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_18h = 0xfd0321;\n    var_14h = unaff_EDI;\n    var_ch = unaff_EBX;\n    fcn.00fc3980();\n    var_1ch = 0xfd0d3f;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd0304::var_20h;\n    var_24h = 0xfd033e;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc62fc();\n    var_24h = var_ch;\n    var_28h = 0xfd034d;\n    fcn.00fc3d88();\n    var_24h = 0xfd035e;\n    fcn.00fd006c();\n    var_24h = 0xfd036d;\n    fcn.00fc62fc();\n    var_24h = var_14h;\n    var_28h = 0xfd037c;\n    fcn.00fc3d88();\n    var_24h = 0xfd038d;\n    fcn.00fd006c();\n    var_24h = 0xfd039c;\n    fcn.00fc62fc();\n    var_24h = var_1ch;\n    var_28h = 0xfd03ab;\n    fcn.00fc3d88();\n    var_24h = 0xfd03bc;\n    fcn.00fd006c();\n    var_24h = 0xfd03cb;\n    fcn.00fc62fc();\n    var_28h = 0xfd03da;\n    fcn.00fc3d88();\n    var_24h = 0xfd03eb;\n    fcn.00fd006c();\n    var_24h = 0xfd03fa;\n    fcn.00fc62fc();\n    var_24h = var_2ch;\n    var_28h = 0xfd0409;\n    fcn.00fc3d88();\n    var_24h = 0xfd041a;\n    fcn.00fd006c();\n    var_24h = 0xfd0429;\n    fcn.00fc62fc();\n    var_24h = var_34h;\n    var_28h = 0xfd0438;\n    fcn.00fc3d88();\n    var_24h = 0xfd0449;\n    fcn.00fd006c();\n    var_24h = 0xfd0458;\n    fcn.00fc62fc();\n    var_24h = var_3ch;\n    var_28h = 0xfd0467;\n    fcn.00fc3d88();\n    var_24h = 0xfd0478;\n    fcn.00fd006c();\n    if (**0xfdb33c != '\\0') {\n        var_24h = 0;\n        var_28h = 0xfd0497;\n        fcn.00fc62fc();\n        var_28h = var_44h;\n        var_2ch = 0xfd04a6;\n        fcn.00fc3d88();\n        var_28h = 0xfd04b7;\n        fcn.00fcf7a8(var_24h);\n        var_28h = 0;\n        var_2ch = 0xfd04c8;\n        fcn.00fc62fc();\n        var_2ch = var_4ch;\n        var_30h = 0xfd04d7;\n        fcn.00fc3d88();\n        var_2ch = 0xfd04e8;\n        fcn.00fcf7a8(var_28h);\n        var_2ch = 1;\n        var_30h = 0xfd04f9;\n        fcn.00fc62fc();\n        var_30h = var_54h;\n        var_34h = 0xfd0508;\n        fcn.00fc3d88();\n        var_30h = 0xfd0519;\n        fcn.00fcf7a8(var_2ch);\n        var_30h = 0;\n        var_34h = 0xfd052a;\n        fcn.00fc62fc();\n        var_34h = var_5ch;\n        var_38h = 0xfd0539;\n        fcn.00fc3d88();\n        var_34h = 0xfd054a;\n        fcn.00fcf7a8(var_30h);\n        var_34h = 0;\n        var_38h = 0xfd055b;\n        fcn.00fc62fc();\n        var_38h = var_64h;\n        var_3ch = 0xfd056a;\n        fcn.00fc3d88();\n        var_38h = 0xfd057b;\n        fcn.00fcf7a8(var_34h);\n        var_38h = 0;\n        var_3ch = 0xfd058c;\n        fcn.00fc62fc();\n        var_3ch = var_6ch;\n        var_40h = 0xfd059b;\n        fcn.00fc3d88();\n        var_3ch = 0xfd05ac;\n        fcn.00fcf7a8(var_38h);\n        var_3ch = 0;\n        var_40h = 0xfd05bd;\n        fcn.00fc62fc();\n        var_40h = var_74h;\n        var_44h = 0xfd05cc;\n        fcn.00fc3d88();\n        var_40h = 0xfd05dd;\n        fcn.00fcf7a8(var_3ch);\n        var_40h = 0;\n        var_44h = 0xfd05ee;\n        fcn.00fc62fc();\n        var_44h = var_7ch;\n        var_48h = 0xfd05fd;\n        fcn.00fc3d88();\n        var_44h = 0xfd060e;\n        fcn.00fcf7a8(var_40h);\n        var_44h = 0;\n        var_48h = 0xfd0622;\n        fcn.00fc62fc();\n        var_48h = var_84h;\n        var_4ch = 0xfd0637;\n        fcn.00fc3d88();\n        var_48h = 0xfd064b;\n        fcn.00fcf7a8(var_44h);\n        var_48h = 0;\n        var_4ch = 0xfd065f;\n        fcn.00fc62fc();\n        var_4ch = var_8ch;\n        var_50h = 0xfd0674;\n        fcn.00fc3d88();\n        var_4ch = 0xfd0688;\n        fcn.00fcf7a8(var_48h);\n        var_4ch = 0;\n        var_50h = 0xfd069c;\n        fcn.00fc62fc();\n        var_50h = var_94h;\n        var_54h = 0xfd06b1;\n        fcn.00fc3d88();\n        var_50h = 0xfd06c5;\n        fcn.00fcf7a8(var_4ch);\n        var_50h = 1;\n        var_54h = 0xfd06d9;\n        fcn.00fc62fc();\n        var_54h = var_9ch;\n        var_58h = 0xfd06ee;\n        fcn.00fc3d88();\n        var_54h = 0xfd0702;\n        fcn.00fcf7a8(var_50h);\n        var_54h = 0;\n        var_58h = 0xfd0716;\n        fcn.00fc62fc();\n        var_58h = var_a4h;\n        var_5ch = 0xfd072b;\n        fcn.00fc3d88();\n        var_58h = 0xfd073f;\n        fcn.00fcf7a8(var_54h);\n        var_58h = NULL;\n        var_5ch = 0xfd0753;\n        fcn.00fc62fc();\n        var_5ch = var_ach;\n        var_60h = 0xfd0768;\n        fcn.00fc3d88();\n        var_5ch = 0xfd077c;\n        fcn.00fcf7a8(var_58h);\n        var_5ch = 0;\n        var_60h = 0xfd0790;\n        fcn.00fc62fc();\n        var_64h = 0xfd07a5;\n        fcn.00fc3d88();\n        var_60h = 0xfd07b9;\n        fcn.00fcf7a8(var_5ch);\n        var_60h = 0;\n        var_64h = 0xfd07cd;\n        fcn.00fc62fc();\n        var_68h = 0xfd07e2;\n        fcn.00fc3d88();\n        var_64h = 0xfd07f6;\n        fcn.00fcf7a8(var_60h);\n        var_64h = 0;\n        var_68h = 0xfd080a;\n        fcn.00fc62fc();\n        var_6ch = 0xfd081f;\n        fcn.00fc3d88();\n        var_68h = 0xfd0833;\n        fcn.00fcf7a8(var_64h);\n        var_68h = 0;\n        var_6ch = 0xfd0847;\n        fcn.00fc62fc();\n        var_70h = 0xfd085c;\n        fcn.00fc3d88();\n        var_6ch = 0xfd0870;\n        fcn.00fcf7a8(var_68h);\n        var_6ch = 0;\n        var_70h = 0xfd0884;\n        fcn.00fc62fc();\n        var_74h = 0xfd0899;\n        fcn.00fc3d88();\n        var_70h = 0xfd08ad;\n        fcn.00fcf7a8(var_6ch);\n        var_70h = 0;\n        var_74h = 0xfd08c1;\n        fcn.00fc62fc();\n        var_78h = 0xfd08d6;\n        fcn.00fc3d88();\n        var_74h = 0xfd08ea;\n        fcn.00fcf7a8(var_70h);\n        var_74h = 0;\n        var_78h = 0xfd08fe;\n        fcn.00fc62fc();\n        var_7ch = 0xfd0913;\n        fcn.00fc3d88();\n        var_78h = 0xfd0927;\n        fcn.00fcf7a8(var_74h);\n        var_78h = 0;\n        var_7ch = 0xfd093b;\n        fcn.00fc62fc();\n        var_80h = 0xfd0950;\n        fcn.00fc3d88();\n        var_7ch = 0xfd0964;\n        fcn.00fcf7a8(var_78h);\n        var_7ch = 0;\n        var_80h = 0xfd0978;\n        fcn.00fc62fc();\n        var_84h = 0xfd098d;\n        fcn.00fc3d88();\n        var_80h = 0xfd09a1;\n        fcn.00fcf7a8(var_7ch);\n        var_80h = 0;\n        var_84h = 0xfd09b5;\n        fcn.00fc62fc();\n        var_88h = 0xfd09ca;\n        fcn.00fc3d88();\n        var_84h = 0xfd09de;\n        fcn.00fcf7a8(var_80h);\n        var_84h = 0;\n        var_88h = 0xfd09f2;\n        fcn.00fc62fc();\n        var_8ch = 0xfd0a07;\n        fcn.00fc3d88();\n        var_88h = 0xfd0a1b;\n        fcn.00fcf7a8(var_84h);\n        var_88h = 0;\n        var_8ch = 0xfd0a2f;\n        fcn.00fc62fc();\n        var_90h = 0xfd0a44;\n        fcn.00fc3d88();\n        var_8ch = 0xfd0a58;\n        fcn.00fcf7a8(var_88h);\n        var_8ch = 0;\n        var_90h = 0xfd0a6c;\n        fcn.00fc62fc();\n        var_94h = 0xfd0a81;\n        fcn.00fc3d88();\n        var_90h = 0xfd0a95;\n        fcn.00fcf7a8(var_8ch);\n        var_90h = 0;\n        var_94h = 0xfd0aa9;\n        fcn.00fc62fc();\n        var_98h = 0xfd0abe;\n        fcn.00fc3d88();\n        var_94h = 0xfd0ad2;\n        fcn.00fcf7a8(var_90h);\n        var_94h = 0;\n        var_98h = 0xfd0ae6;\n        fcn.00fc62fc();\n        var_9ch = 0xfd0afb;\n        fcn.00fc3d88();\n        var_98h = 0xfd0b0f;\n        fcn.00fcf7a8(var_94h);\n        var_98h = 0;\n        var_9ch = 0xfd0b23;\n        fcn.00fc62fc();\n        var_a0h = 0xfd0b38;\n        fcn.00fc3d88();\n        var_9ch = 0xfd0b4c;\n        fcn.00fcf7a8(var_98h);\n        var_9ch = 0;\n        var_a0h = 0xfd0b60;\n        fcn.00fc62fc();\n        var_a4h = 0xfd0b75;\n        fcn.00fc3d88();\n        var_a0h = 0xfd0b89;\n        fcn.00fcf7a8(var_9ch);\n        var_a0h = 0;\n        var_a4h = 0xfd0b9d;\n        fcn.00fc62fc();\n        var_a8h = 0xfd0bb2;\n        fcn.00fc3d88();\n        var_a4h = 0xfd0bc6;\n        fcn.00fcf7a8(var_a0h);\n        var_a8h = 0xfd0c1b;\n        var_ach = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00fd0304::var_ach;\n        var_a4h = &stack0xfffffffc;\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_144h);\n        fcn.00fcfb40(0);\n        *in_FS_OFFSET = 0;\n        var_a8h = 0;\n        var_ach = 0xfd0c39;\n        fcn.00fc62fc();\n        fcn.00fc3d88();\n        var_ach = 0xfd0c62;\n        fcn.00fcfb40(var_a8h);\n        var_ach = 0;\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_154h);\n        fcn.00fcfb40(var_ach);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_15ch);\n        fcn.00fcfb40(0);\n        var_b4h = 0;\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_164h);\n        fcn.00fcfb40(0);\n    }\n    *in_FS_OFFSET = var_b4h;\n    var_ach = 0xfd0d46;\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 5007
    },
    "00fd160c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00fd160c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0x54;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puStack36 = 0xfd1634;\n    fcn.00fc4150();\n    puStack36 = 0xfd163c;\n    fcn.00fc4150();\n    puStack36 = 0xfd1644;\n    fcn.00fc4150();\n    uStack40 = 0xfd195e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00fd160c::var_264h;\n    uStack52 = 0xfd166c;\n    puStack36 = &stack0xfffffffc;\n    fcn.00fc3e14();\n    uStack52 = 0xfd1677;\n    uStack52 = fcn.00fc3d98();\n    uStack56 = 0xfd167d;\n    uVar2 = fcn.00fc4e50();\n    do {\n        uStack60 = 0xfd1988;\n        uStack64 = 0xfd169e;\n        fcn.00fc3d6c();\n        uStack68 = 0xfd1988;\n        uStack72 = **0xfdb180;\n        puStack76 = 0xfd16c0;\n        fcn.00fc3e78();\n        puStack76 = 0xfd16cb;\n        cVar1 = fcn.00fc776c();\n        if (cVar1 != '\\0') {\n            uStack80 = 0xfd189c;\n            uStack84 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffac;\n            puStack76 = &stack0xfffffffc;\n            if (arg_8h == 0) {\n                uStack92 = 0xfd1988;\n                uStack96 = 0xfd1709;\n                puStack76 = &stack0xfffffffc;\n                fcn.00fc3d6c();\n                uStack100 = 0xfd1988;\n                uStack104 = **0xfdb180;\n                uStack108 = 0xfd172b;\n                fcn.00fc3e78();\n                uStack108 = 0xfd173c;\n                fcn.00fd1034();\n                uStack108 = 0xfd174d;\n                fcn.00fc377c();\n                uStack112 = 0;\n                uStack116 = 0xfd1988;\n                uStack124 = 0xfd1990;\n                uStack128 = 0xfd177a;\n                fcn.00fc3d6c();\n                uStack128 = var_28ch;\n                uStack132 = 0xfd1998;\n                uStack136 = 0xfd1795;\n                fcn.00fc3e78();\n                uStack136 = 0xfd17a6;\n                fcn.00fc377c();\n                uStack132 = 0xfd17b2;\n                fcn.00fce6d4();\n                uStack136 = 0xfd1988;\n                uStack140 = 0xfd17da;\n                fcn.00fc3d6c();\n                uStack144 = 0xfd1988;\n                uStack148 = **0xfdb180;\n                uStack152 = 0xfd17fc;\n                fcn.00fc3e78();\n                uStack152 = 0xfd180d;\n                fcn.00fd12d0();\n                uStack152 = 0xfd181e;\n                fcn.00fc377c();\n                uStack156 = 0;\n                uStack160 = 0xfd1988;\n                uStack168 = 0xfd1990;\n                uStack172 = 0xfd184b;\n                fcn.00fc3d6c();\n                uStack176 = 0xfd1990;\n                uStack180 = 0xfd19a8;\n                uStack184 = 0xfd19a8;\n                uStack188 = 0xfd1998;\n                uStack192 = 0xfd1875;\n                fcn.00fc3e78();\n                uStack192 = 0xfd1886;\n                fcn.00fc377c();\n                uStack188 = 0xfd1892;\n                fcn.00fce6d4();\n            }\n            *in_FS_OFFSET = uStack128;\n        }\n        puStack120 = &fcn.00fd160c::var_264h;\n        uStack128 = 0xfd18b6;\n        uStack52 = uVar2;\n        iVar3 = fcn.00fc4e58();\n    } while (iVar3 != 0);\n    uStack132 = 0xfd18c7;\n    uStack128 = uVar2;\n    fcn.00fc4e48();\n    *in_FS_OFFSET = uStack128;\n    puStack120 = 0xfd1968;\n    uStack52 = 0xfd18e4;\n    fcn.00fc3bf4();\n    uStack124 = 0xfd18ef;\n    fcn.00fc34e4();\n    uStack124 = 0xfd18ff;\n    fcn.00fc3bf4();\n    uStack124 = 0xfd190a;\n    fcn.00fc34e4();\n    uStack124 = 0xfd191a;\n    fcn.00fc3bf4();\n    uStack124 = 0xfd1925;\n    fcn.00fc34e4();\n    uStack124 = 0xfd1935;\n    fcn.00fc3bf4();\n    uStack124 = 0xfd1940;\n    fcn.00fc34e4();\n    uStack124 = 0xfd1950;\n    fcn.00fc3bf4();\n    uStack124 = 0xfd195d;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 1741
    },
    "00fd1c54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00fd1c54(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uchar *var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uchar *var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x26;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_18h = 0xfd1c71;\n    var_14h = unaff_EDI;\n    var_ch = unaff_EBX;\n    fcn.00fc3980();\n    var_1ch = 0xfd24f2;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd1c54::var_20h;\n    var_18h = &stack0xfffffffc;\n    if (**0xfdb33c != '\\0') {\n        var_24h = 0;\n        var_28h = 0xfd1c9e;\n        var_18h = &stack0xfffffffc;\n        fcn.00fc62fc();\n        var_28h = var_ch;\n        var_2ch = 0xfd1cad;\n        fcn.00fc3d88();\n        var_28h = 0xfd1cbe;\n        fcn.00fd160c(var_24h);\n        var_28h = 0;\n        var_2ch = 0xfd1ccf;\n        fcn.00fc62fc();\n        var_2ch = var_14h;\n        var_30h = 0xfd1cde;\n        fcn.00fc3d88();\n        var_2ch = 0xfd1cef;\n        fcn.00fd160c(var_28h);\n        var_2ch = 1;\n        var_30h = 0xfd1d00;\n        fcn.00fc62fc();\n        var_30h = var_1ch;\n        var_34h = 0xfd1d0f;\n        fcn.00fc3d88();\n        var_30h = 0xfd1d20;\n        fcn.00fd160c(var_2ch);\n        var_30h = 0;\n        var_34h = 0xfd1d31;\n        fcn.00fc62fc();\n        var_34h = var_24h;\n        var_38h = 0xfd1d40;\n        fcn.00fc3d88();\n        var_34h = 0xfd1d51;\n        fcn.00fd160c(var_30h);\n        var_34h = 0;\n        var_38h = 0xfd1d62;\n        fcn.00fc62fc();\n        var_38h = var_2ch;\n        var_3ch = 0xfd1d71;\n        fcn.00fc3d88();\n        var_38h = 0xfd1d82;\n        fcn.00fd160c(var_34h);\n        var_38h = 0;\n        var_3ch = 0xfd1d93;\n        fcn.00fc62fc();\n        var_3ch = var_34h;\n        var_40h = 0xfd1da2;\n        fcn.00fc3d88();\n        var_3ch = 0xfd1db3;\n        fcn.00fd160c(var_38h);\n        var_3ch = 0;\n        var_40h = 0xfd1dc4;\n        fcn.00fc62fc();\n        var_40h = var_3ch;\n        var_44h = 0xfd1dd3;\n        fcn.00fc3d88();\n        var_40h = 0xfd1de4;\n        fcn.00fd160c(var_3ch);\n        var_40h = 0;\n        var_44h = 0xfd1df5;\n        fcn.00fc62fc();\n        var_48h = 0xfd1e04;\n        fcn.00fc3d88();\n        var_44h = 0xfd1e15;\n        fcn.00fd160c(var_40h);\n        var_44h = 0;\n        var_48h = 0xfd1e26;\n        fcn.00fc62fc();\n        var_48h = var_4ch;\n        var_4ch = 0xfd1e35;\n        fcn.00fc3d88();\n        var_48h = 0xfd1e46;\n        fcn.00fd160c(var_44h);\n        var_48h = 0;\n        var_4ch = 0xfd1e57;\n        fcn.00fc62fc();\n        var_4ch = var_54h;\n        var_50h = 0xfd1e66;\n        fcn.00fc3d88();\n        var_4ch = 0xfd1e77;\n        fcn.00fd160c(var_48h);\n        var_4ch = 0;\n        var_50h = 0xfd1e88;\n        fcn.00fc62fc();\n        var_50h = var_5ch;\n        var_54h = 0xfd1e97;\n        fcn.00fc3d88();\n        var_50h = 0xfd1ea8;\n        fcn.00fd160c(var_4ch);\n        var_50h = 0;\n        var_54h = 0xfd1eb9;\n        fcn.00fc62fc();\n        var_54h = var_64h;\n        var_58h = 0xfd1ec8;\n        fcn.00fc3d88();\n        var_54h = 0xfd1ed9;\n        fcn.00fd160c(var_50h);\n        var_54h = 0;\n        var_58h = 0xfd1eea;\n        fcn.00fc62fc();\n        var_58h = var_6ch;\n        var_5ch = 0xfd1ef9;\n        fcn.00fc3d88();\n        var_58h = 0xfd1f0a;\n        fcn.00fd160c(var_54h);\n        var_58h = 0;\n        var_5ch = 0xfd1f1b;\n        fcn.00fc62fc();\n        var_5ch = var_74h;\n        var_60h = 0xfd1f2a;\n        fcn.00fc3d88();\n        var_5ch = 0xfd1f3b;\n        fcn.00fd160c(var_58h);\n        var_5ch = 0;\n        var_60h = 0xfd1f4c;\n        fcn.00fc62fc();\n        var_60h = var_7ch;\n        var_64h = 0xfd1f5b;\n        fcn.00fc3d88();\n        var_60h = 0xfd1f6c;\n        fcn.00fd160c(var_5ch);\n        var_60h = 0;\n        var_64h = 0xfd1f80;\n        fcn.00fc62fc();\n        var_64h = var_84h;\n        var_68h = 0xfd1f95;\n        fcn.00fc3d88();\n        var_64h = 0xfd1fa9;\n        fcn.00fd160c(var_60h);\n        var_64h = 0;\n        var_68h = 0xfd1fbd;\n        fcn.00fc62fc();\n        var_68h = var_8ch;\n        var_6ch = 0xfd1fd2;\n        fcn.00fc3d88();\n        var_68h = 0xfd1fe6;\n        fcn.00fd160c(var_64h);\n        var_68h = 0;\n        var_6ch = 0xfd1ffa;\n        fcn.00fc62fc();\n        var_6ch = var_94h;\n        var_70h = 0xfd200f;\n        fcn.00fc3d88();\n        var_6ch = 0xfd2023;\n        fcn.00fd160c(var_68h);\n        var_6ch = 0;\n        var_70h = 0xfd2037;\n        fcn.00fc62fc();\n        var_70h = var_9ch;\n        var_74h = 0xfd204c;\n        fcn.00fc3d88();\n        var_70h = 0xfd2060;\n        fcn.00fd160c(var_6ch);\n        var_70h = 0;\n        var_74h = 0xfd2074;\n        fcn.00fc62fc();\n        var_74h = var_a4h;\n        var_78h = 0xfd2089;\n        fcn.00fc3d88();\n        var_74h = 0xfd209d;\n        fcn.00fd160c(var_70h);\n        var_74h = NULL;\n        var_78h = 0xfd20b1;\n        fcn.00fc62fc();\n        var_78h = var_ach;\n        var_7ch = 0xfd20c6;\n        fcn.00fc3d88();\n        var_78h = 0xfd20da;\n        fcn.00fd160c(var_74h);\n        var_78h = 0;\n        var_7ch = 0xfd20ee;\n        fcn.00fc62fc();\n        var_80h = 0xfd2103;\n        fcn.00fc3d88();\n        var_7ch = 0xfd2117;\n        fcn.00fd160c(var_78h);\n        var_7ch = 0;\n        var_80h = 0xfd212b;\n        fcn.00fc62fc();\n        var_84h = 0xfd2140;\n        fcn.00fc3d88();\n        var_80h = 0xfd2154;\n        fcn.00fd160c(var_7ch);\n        var_80h = 0;\n        var_84h = 0xfd2168;\n        fcn.00fc62fc();\n        var_88h = 0xfd217d;\n        fcn.00fc3d88();\n        var_84h = 0xfd2191;\n        fcn.00fd160c(var_80h);\n        var_84h = 0;\n        var_88h = 0xfd21a5;\n        fcn.00fc62fc();\n        var_8ch = 0xfd21ba;\n        fcn.00fc3d88();\n        var_88h = 0xfd21ce;\n        fcn.00fd160c(var_84h);\n        var_88h = 0;\n        var_8ch = 0xfd21e2;\n        fcn.00fc62fc();\n        var_90h = 0xfd21f7;\n        fcn.00fc3d88();\n        var_8ch = 0xfd220b;\n        fcn.00fd160c(var_88h);\n        var_8ch = 0;\n        var_90h = 0xfd221f;\n        fcn.00fc62fc();\n        var_94h = 0xfd2234;\n        fcn.00fc3d88();\n        var_90h = 0xfd2248;\n        fcn.00fd160c(var_8ch);\n        var_90h = 0;\n        var_94h = 0xfd225c;\n        fcn.00fc62fc();\n        var_98h = 0xfd2271;\n        fcn.00fc3d88();\n        var_94h = 0xfd2285;\n        fcn.00fd160c(var_90h);\n        var_94h = 0;\n        var_98h = 0xfd2299;\n        fcn.00fc62fc();\n        var_9ch = 0xfd22ae;\n        fcn.00fc3d88();\n        var_98h = 0xfd22c2;\n        fcn.00fd160c(var_94h);\n        var_98h = 0;\n        var_9ch = 0xfd22d6;\n        fcn.00fc62fc();\n        var_a0h = 0xfd22eb;\n        fcn.00fc3d88();\n        var_9ch = 0xfd22ff;\n        fcn.00fd160c(var_98h);\n        var_9ch = 0;\n        var_a0h = 0xfd2313;\n        fcn.00fc62fc();\n        var_a4h = 0xfd2328;\n        fcn.00fc3d88();\n        var_a0h = 0xfd233c;\n        fcn.00fd160c(var_9ch);\n        var_a0h = 0;\n        var_a4h = 0xfd2350;\n        fcn.00fc62fc();\n        var_a8h = 0xfd2365;\n        fcn.00fc3d88();\n        var_a4h = 0xfd2379;\n        fcn.00fd160c(var_a0h);\n        var_a8h = 0xfd23ce;\n        var_ach = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00fd1c54::var_ach;\n        var_a4h = &stack0xfffffffc;\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_10ch);\n        fcn.00fd19ac();\n        *in_FS_OFFSET = 0;\n        var_a8h = 0;\n        var_ach = 0xfd23ec;\n        fcn.00fc62fc();\n        fcn.00fc3d88();\n        var_ach = 0xfd2415;\n        fcn.00fd19ac();\n        var_ach = 0;\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_11ch);\n        fcn.00fd19ac();\n        fcn.00fc62fc(0);\n        fcn.00fc3d88(var_124h);\n        fcn.00fd19ac();\n        var_b4h = 0;\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_12ch);\n        fcn.00fd19ac();\n    }\n    *in_FS_OFFSET = var_b4h;\n    var_ach = 0xfd24f9;\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 4384
    },
    "00fd2d6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fd2d6c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack760;\n    uint uVar3;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint *puStack684;\n    uint uStack680;\n    uint uStack676;\n    uchar *puStack672;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack672 = 0xfd2dc7;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    puStack672 = 0xfd2dcf;\n    fcn.00fc4150();\n    puStack672 = 0xfd2dd7;\n    fcn.00fc4150();\n    uStack676 = 0xfd2fd4;\n    uStack680 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd58;\n    puStack684 = &fcn.00fd2d6c::var_264h;\n    uStack688 = 0xfd2dff;\n    puStack672 = &stack0xfffffffc;\n    fcn.00fc3e14();\n    uStack688 = 0xfd2e0a;\n    uStack688 = fcn.00fc3d98();\n    uStack692 = 0xfd2e10;\n    var_14h = fcn.00fc4e50();\n    do {\n        uStack692 = var_4h;\n        uStack696 = 0xfd2ffc;\n        uStack700 = 0xfd2e31;\n        fcn.00fc3d6c();\n        uStack700 = 0;\n        uStack704 = 0xfd2ffc;\n        uStack708 = **0xfdb180;\n        puStack712 = 0xfd2e53;\n        fcn.00fc3e78();\n        puStack712 = 0xfd2e5e;\n        cVar1 = fcn.00fc776c();\n        if (cVar1 != '\\0') {\n            uStack716 = 0xfd2f48;\n            uStack720 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd30;\n            puStack712 = &stack0xfffffffc;\n            if (arg_8h == 0) {\n                puStack712 = &stack0xfffffffc;\n                fcn.00fc3d6c(0xfd2ffc, var_4h);\n                fcn.00fc3e78(0xfd3004, 0);\n                fcn.00fd2974();\n                fcn.00fc377c();\n                fcn.00fc3d6c(0xfd301c, var_8h, 0xfd2ffc, var_ch, 0);\n                uStack760 = 0;\n                fcn.00fc3e78(0xfd3024);\n                fcn.00fc377c();\n                fcn.00fce6d4();\n            }\n            *in_FS_OFFSET = uStack760;\n        }\n        uStack688 = var_14h;\n        uStack760 = 0xfd2f62;\n        iVar2 = fcn.00fc4e58();\n        uVar3 = var_14h;\n    } while (iVar2 != 0);\n    fcn.00fc4e48();\n    *in_FS_OFFSET = uVar3;\n    uVar3 = 0xfd2fdb;\n    uStack688 = 0xfd2f90;\n    fcn.00fc3bf4();\n    fcn.00fc34e4(uVar3);\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 998
    },
    "00fd32f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00fd32f8(void)\n\n{\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x25;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_14h = 0xfd3314;\n    var_10h = unaff_EBX;\n    fcn.00fc3980();\n    var_18h = 0xfd3b6d;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd32f8::var_1ch;\n    var_14h = &stack0xfffffffc;\n    if (**0xfdb33c != '\\0') {\n        var_14h = &stack0xfffffffc;\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_8h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_10h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_18h);\n        fcn.00fd2d6c(1);\n        fcn.00fc62fc();\n        fcn.00fc3d88(0);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(1);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(0);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(0);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(0xfd3498);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_48h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_50h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_58h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_60h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_68h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_70h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_78h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_80h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_88h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_90h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_98h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_a0h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_a8h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_b0h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_b8h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_c0h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_c8h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_d0h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_d8h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_e0h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_e8h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_f0h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_f8h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_100h);\n        fcn.00fd2d6c(0);\n        fcn.00fc62fc(0);\n        fcn.00fc3d88(var_108h);\n        fcn.00fd3030();\n        fcn.00fc62fc(0);\n        fcn.00fc3d88(var_110h);\n        fcn.00fd3030();\n        fcn.00fc62fc(0);\n        fcn.00fc3d88(var_118h);\n        fcn.00fd3030();\n        fcn.00fc62fc(0);\n        fcn.00fc3d88(var_120h);\n        fcn.00fd3030();\n        var_b0h = 0;\n        fcn.00fc62fc();\n        fcn.00fc3d88(var_128h);\n        fcn.00fd3030();\n    }\n    *in_FS_OFFSET = var_b0h;\n    fcn.00fc3bf4(0xfd3b74);\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 2682
    },
    "00fd3f58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00fd3f58(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar7;\n    uint var_314h;\n    uint var_310h;\n    uint var_30ch;\n    uint var_308h;\n    uint var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint32_t var_284h;\n    int32_t var_268h;\n    uint32_t var_264h;\n    uint var_258h;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    uint *puStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = 0x62;\n    do {\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    var_ch = 0;\n    var_1ch = 0xfd3f7f;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    fcn.00fc4150();\n    var_1ch = 0xfd3f87;\n    fcn.00fc4150();\n    var_1ch = 0xfd3f8f;\n    fcn.00fc4150();\n    var_1ch = 0xfd3f97;\n    fcn.00fc4150();\n    var_20h = 0xfd475d;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd3f58::var_24h;\n    var_10h = 0;\n    var_28h = 0xfd3fb8;\n    var_1ch = &stack0xfffffffc;\n    fcn.00fc62fc();\n    var_28h = 0xfd3fc6;\n    fcn.00fc3c3c();\n    var_28h = 0xfd3fd4;\n    fcn.00fc377c();\n    var_28h = 0xfd3fe7;\n    fcn.00fc7a18();\n    var_28h = 0xfd3ff5;\n    fcn.00fc377c();\n    var_28h = 0xfd4008;\n    fcn.00fc7a18();\n    var_28h = 0xfd4010;\n    iVar5 = fcn.00fc4648();\n    if (iVar5 != 0) {\n        var_28h = 0xfd4020;\n        iVar5 = fcn.00fc4648();\n        var_28h = iVar5 + 1;\n        var_2ch = 0xfd4035;\n        fcn.00fc4804();\n        var_28h = 0xfd4040;\n        iVar5 = fcn.00fc4648();\n        var_28h = var_14h + -4 + iVar5 * 4;\n        var_2ch = 0xfd4056;\n        fcn.00fc78d8();\n        var_28h = 0xfd4062;\n        fcn.00fc3c18();\n        while( true ) {\n            var_28h = 0xfd4621;\n            iVar5 = fcn.00fc4648();\n            if (iVar5 < 1) break;\n            uVar2 = **0xfdb218 - 0x4b000;\n            uVar6 = (*0xfdb218)[1] - (**0xfdb218 < 0x4b000);\n            if (uVar6 == (*0xfdb3fc)[1]) {\n                if (uVar2 < **0xfdb3fc || uVar2 == **0xfdb3fc) break;\n            }\n            else if (uVar6 <= (*0xfdb3fc)[1]) break;\n            var_28h = 0xfd409b;\n            fcn.00fc4648();\n            var_28h = 0xfd40aa;\n            fcn.00fc78d8();\n            var_28h = 0xfd40b2;\n            fcn.00fc4648();\n            var_28h = 0xfd40be;\n            fcn.00fc3bdc();\n            var_28h = 0xfd40c6;\n            iVar5 = fcn.00fc4648();\n            var_28h = iVar5 + -1;\n            var_2ch = 0xfd40db;\n            fcn.00fc4804();\n            var_28h = &fcn.00fd3f58::var_284h;\n            var_2ch = 0xfd40f8;\n            fcn.00fc3e14();\n            var_2ch = 0xfd4109;\n            fcn.00fc78d8();\n            var_2ch = 0xfd4114;\n            var_2ch = fcn.00fc3d98();\n            var_30h = 0xfd411a;\n            uVar3 = fcn.00fc4e50();\n            do {\n                var_30h = var_18h;\n                uStack56 = 0xfd479c;\n                uStack60 = 0xfd413a;\n                fcn.00fc3d6c();\n                uStack64 = 0xfd4150;\n                fcn.00fc3e78();\n                uStack64 = 0xfd415e;\n                fcn.00fc78d8();\n                uStack64 = 0xfd4169;\n                fcn.00fc77c8();\n                if (((var_284h & 0x10) != 0x10) && (var_268h == 0)) {\n                    uStack68 = var_264h >> 10;\n                    uStack64 = 0;\n                    if (arg_14h < 0) {\n                        if (-1 < arg_14h >> 0x1f) goto code_r0x00fd41b4;\n                    }\n                    else if (uStack68 <= arg_14h) {\ncode_r0x00fd41b4:\n                        uStack64 = 0xfd41bc;\n                        iVar5 = fcn.00fc4648();\n                        if (-1 < iVar5 + -1) {\n                            do {\n                                uStack64 = 0xfd41d8;\n                                fcn.00fc377c();\n                                uStack64 = 0xfd41eb;\n                                cVar1 = fcn.00fc6144();\n                                if (cVar1 != '\\0') {\n                                    uStack64 = 0xfd4201;\n                                    fcn.00fc78d8();\n                                    uStack64 = 0xfd420f;\n                                    fcn.00fc3c3c();\n                                    uStack64 = 0xfd421a;\n                                    fcn.00fc78d8();\n                                    uStack64 = 0xfd4222;\n                                    fcn.00fc3da8();\n                                    uStack64 = 0xfd4231;\n                                    fcn.00fc3f90();\n                                    uStack64 = var_ch;\n                                    uStack68 = 0xfd479c;\n                                    uStack72 = var_2ch;\n                                    puStack76 = 0xfd424c;\n                                    fcn.00fc3e78();\n                                    puStack76 = 0xfd425d;\n                                    fcn.00fc78d8();\n                                    puStack76 = 0xfd426e;\n                                    fcn.00fc377c();\n                                    iStack80 = 0xfd4283;\n                                    fcn.00fc78d8();\n                                    puStack76 = 0xfd428f;\n                                    fcn.00fce79c();\n                                    var_10h = var_10h + 1;\n                                    if (arg_8h == '\\x01') {\n                                        **0xfdb3f8 = **0xfdb3f8 + 1;\n                                    }\n                                    break;\n                                }\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                    }\n                }\n                if (arg_ch == '\\x01') {\n                    puStack76 = 0xfd42c1;\n                    fcn.00fc377c();\n                    puStack76 = 0xfd42d2;\n                    fcn.00fc633c();\n                    puStack76 = 0xfd42e2;\n                    iVar5 = fcn.00fc3ad4();\n                    if (iVar5 != 0) {\n                        puStack76 = 0xfd42f5;\n                        fcn.00fd3d08();\n                        puStack76 = 0xfd42fd;\n                        iVar5 = fcn.00fc6910();\n                        if (iVar5 <= arg_14h) {\n                            puStack76 = 0xfd430e;\n                            iVar5 = fcn.00fc4648();\n                            if (-1 < iVar5 + -1) {\n                                do {\n                                    puStack76 = 0xfd432a;\n                                    fcn.00fc77c8();\n                                    puStack76 = 0xfd433b;\n                                    fcn.00fc377c();\n                                    puStack76 = 0xfd434e;\n                                    cVar1 = fcn.00fc6144();\n                                    if (cVar1 != '\\0') {\n                                        puStack76 = 0xfd4364;\n                                        fcn.00fc78d8();\n                                        puStack76 = 0xfd4372;\n                                        fcn.00fc3c3c();\n                                        puStack76 = 0xfd4380;\n                                        fcn.00fc78d8();\n                                        puStack76 = 0xfd438e;\n                                        fcn.00fc3c3c();\n                                        puStack76 = 0xfd439c;\n                                        fcn.00fc78d8();\n                                        puStack76 = 0xfd43aa;\n                                        fcn.00fc3c3c();\n                                        puStack76 = var_1ch;\n                                        iStack80 = 0xfd47b4;\n                                        uStack84 = 0xfd43c0;\n                                        fcn.00fc77c8();\n                                        uStack84 = var_2dch;\n                                        uStack88 = 0xfd43d3;\n                                        fcn.00fc3e78();\n                                        uStack88 = 0xfd43db;\n                                        fcn.00fc3da8();\n                                        uStack88 = 0xfd43ea;\n                                        fcn.00fc3f90();\n                                        uStack88 = var_ch;\n                                        uStack92 = 0xfd479c;\n                                        uStack96 = var_2ch;\n                                        uStack100 = 0xfd4405;\n                                        fcn.00fc3e78();\n                                        uStack100 = 0xfd4416;\n                                        fcn.00fc78d8();\n                                        uStack100 = 0xfd4427;\n                                        fcn.00fc377c();\n                                        uStack104 = 0xfd443c;\n                                        fcn.00fc78d8();\n                                        uStack100 = 0xfd4448;\n                                        fcn.00fce79c();\n                                        var_10h = var_10h + 1;\n                                        if (arg_8h == '\\x01') {\n                                            **0xfdb3f8 = **0xfdb3f8 + 1;\n                                        }\n                                        break;\n                                    }\n                                    iVar5 = iVar5 + -1;\n                                } while (iVar5 != 0);\n                            }\n                        }\n                    }\n                }\n                uVar7 = arg_10h == '\\x01';\n                if (uVar7) {\n                    puStack76 = 0xfd4482;\n                    fcn.00fc3d6c();\n                    puStack76 = 0xfd4492;\n                    fcn.00fc3ec0();\n                    if (!uVar7) {\n                        puStack76 = 0xfd44ae;\n                        fcn.00fc3d6c();\n                        puStack76 = 0xfd44be;\n                        fcn.00fc3ec0();\n                        if (((!uVar7) && ((var_284h & 0x10) == 0x10)) && ((var_284h & 0x400) != 0x400)) {\n                            puStack76 = 0xfd44f6;\n                            fcn.00fc78d8();\n                            puStack76 = 0xfd4501;\n                            puStack76 = fcn.00fc3d98();\n                            iStack80 = 0xfd4507;\n                            iVar5 = fcn.00fc4e78();\n                            if (iVar5 != -1) {\n                                uStack56 = uStack56 & 0xffffff;\n                                iStack80 = 0xfd451c;\n                                iVar5 = fcn.00fc4648();\n                                if (-1 < iVar5 + -1) {\n                                    do {\n                                        iStack80 = 0xfd4538;\n                                        fcn.00fc78d8();\n                                        iStack80 = 0xfd4549;\n                                        fcn.00fc377c();\n                                        iStack80 = 0xfd455a;\n                                        fcn.00fc633c();\n                                        uStack84 = 0xfd4572;\n                                        fcn.00fc3d88();\n                                        uStack84 = 0xfd4583;\n                                        fcn.00fc78d8();\n                                        uStack84 = 0xfd4594;\n                                        fcn.00fc377c();\n                                        uStack84 = 0xfd45a5;\n                                        fcn.00fc633c();\n                                        iStack80 = 0xfd45b1;\n                                        iVar4 = fcn.00fc3ad4();\n                                        if (iVar4 != 0) {\n                                            uStack56 = CONCAT13(1, uStack56);\n                                        }\n                                        iVar5 = iVar5 + -1;\n                                    } while (iVar5 != 0);\n                                }\n                                if (uStack56._3_1_ == '\\0') {\n                                    iStack80 = 0xfd45cf;\n                                    iStack80 = fcn.00fc4648();\n                                    iStack80 = iStack80 + 1;\n                                    uStack84 = 0xfd45e4;\n                                    fcn.00fc4804();\n                                    iStack80 = 0xfd45ef;\n                                    fcn.00fc4648();\n                                    iStack80 = 0xfd45fe;\n                                    fcn.00fc3c18();\n                                }\n                            }\n                        }\n                    }\n                }\n                puStack76 = &fcn.00fd3f58::var_284h;\n                uStack84 = 0xfd460b;\n                var_2ch = uVar3;\n                iVar5 = fcn.00fc4e58();\n            } while (iVar5 != 0);\n            uStack88 = 0xfd4619;\n            var_24h = uVar3;\n            fcn.00fc4e48();\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0xfd4767;\n    var_20h = 0xfd4646;\n    fcn.00fc3bf4();\n    var_20h = 0xfd4656;\n    fcn.00fc3508();\n    var_20h = 0xfd4661;\n    fcn.00fc3bdc();\n    var_20h = 0xfd4671;\n    fcn.00fc3508();\n    var_20h = 0xfd4681;\n    fcn.00fc3bf4();\n    var_20h = 0xfd468c;\n    fcn.00fc34e4();\n    var_20h = 0xfd469c;\n    fcn.00fc3bf4();\n    var_20h = 0xfd46ac;\n    fcn.00fc3508();\n    var_20h = 0xfd46bc;\n    fcn.00fc3bf4();\n    var_20h = 0xfd46c7;\n    fcn.00fc34e4();\n    var_20h = 0xfd46d2;\n    fcn.00fc3bdc();\n    var_20h = 0xfd46dd;\n    fcn.00fc34e4();\n    var_20h = 0xfd46ed;\n    fcn.00fc3bf4();\n    var_20h = 0xfd46fd;\n    fcn.00fc3508();\n    var_20h = 0xfd4708;\n    fcn.00fc3bdc();\n    var_20h = 0xfd4716;\n    fcn.00fc4810();\n    var_20h = 0xfd471e;\n    fcn.00fc3bdc();\n    var_20h = 0xfd472c;\n    fcn.00fc4810();\n    var_20h = 0xfd4739;\n    fcn.00fc3bf4();\n    var_20h = 0xfd4747;\n    fcn.00fc4810();\n    var_20h = 0xfd4754;\n    fcn.00fc3bf4();\n    var_20h = 0xfd475c;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 4210
    },
    "00fd4de8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00fd4de8(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint uStackY224;\n    uint uStackY220;\n    uint *puStackY216;\n    uint uStackY212;\n    uint uStackY208;\n    uint uStackY204;\n    uint uStackY200;\n    uint uStackY196;\n    uint uStackY192;\n    uint uStackY188;\n    uint uStackY184;\n    uint uStackY180;\n    uint uStackY176;\n    uint uStackY172;\n    uint uStackY168;\n    uint uStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    uint uStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint uStackY136;\n    uint uStackY132;\n    uint uStackY128;\n    uint uStackY124;\n    uint uStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0x5e;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    puStack28 = 0xfd4e05;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    piVar1 = *0xfdb2c4;\n    uStack32 = 0xfd53e2;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00fc62fc();\n    fcn.00fc3e14();\n    fcn.00fc3d98();\n    uVar3 = (***0xfdb2d8)();\n    do {\n        fcn.00fc3d6c();\n        fcn.00fc3e78();\n        cVar2 = fcn.00fc776c();\n        if (cVar2 != '\\0') {\n            fcn.00fc3d6c();\n            fcn.00fc3e78();\n            fcn.00fc377c();\n            fcn.00fc3d6c();\n            fcn.00fc3e78();\n            fcn.00fce79c();\n            *piVar1 = *piVar1 + 1;\n        }\n        uStackY112 = 0xfd4f57;\n        fcn.00fc3d6c();\n        uStackY116 = 0xfd5420;\n        uStackY120 = 0xfd5454;\n        uStackY124 = 0xfd4f77;\n        fcn.00fc3e78();\n        uStackY124 = 0xfd4f82;\n        cVar2 = fcn.00fc776c();\n        if (cVar2 != '\\0') {\n            uStackY124 = var_4h;\n            uStackY128 = 0xfd5420;\n            uStackY132 = 0xfd4fa5;\n            fcn.00fc3d6c();\n            uStackY136 = 0xfd5470;\n            uStackY140 = 0xfd4fc0;\n            fcn.00fc3e78();\n            uStackY140 = 0xfd4fd1;\n            fcn.00fc377c();\n            uStackY144 = var_8h;\n            uStackY148 = 0xfd5420;\n            uStackY152 = 0xfd4ff3;\n            fcn.00fc3d6c();\n            uStackY156 = 0xfd5420;\n            uStackY160 = 0xfd5454;\n            uStackY164 = 0xfd5013;\n            fcn.00fc3e78();\n            uStackY160 = 0xfd501f;\n            fcn.00fce79c();\n            *piVar1 = *piVar1 + 1;\n        }\n        uStackY160 = var_8h;\n        uStackY164 = 0xfd5420;\n        uStackY168 = 0xfd503c;\n        fcn.00fc3d6c();\n        uStackY172 = 0xfd5420;\n        uStackY176 = 0xfd548c;\n        uStackY180 = 0xfd505c;\n        fcn.00fc3e78();\n        uStackY180 = 0xfd5067;\n        cVar2 = fcn.00fc776c();\n        if (cVar2 != '\\0') {\n            uStackY180 = var_4h;\n            uStackY184 = 0xfd5420;\n            uStackY188 = 0xfd508a;\n            fcn.00fc3d6c();\n            uStackY192 = 0xfd54ac;\n            uStackY196 = 0xfd50a5;\n            fcn.00fc3e78();\n            uStackY196 = 0xfd50b6;\n            fcn.00fc377c();\n            uStackY200 = var_8h;\n            uStackY204 = 0xfd5420;\n            uStackY208 = 0xfd50d8;\n            fcn.00fc3d6c();\n            uStackY212 = 0xfd5420;\n            puStackY216 = 0xfd548c;\n            uStackY220 = 0xfd50f8;\n            fcn.00fc3e78();\n            puStackY216 = 0xfd5104;\n            fcn.00fce79c();\n            *piVar1 = *piVar1 + 1;\n        }\n        uStackY224 = 0xfd5111;\n        uStackY220 = uVar3;\n        puStackY216 = &fcn.00fd4de8::var_260h;\n        iVar4 = (***0xfdb198)();\n    } while (iVar4 != 0);\n    (***0xfdb3ec)();\n    fcn.00fc75c0(&fcn.00fd4de8::var_ch, 0);\n    iVar4 = fcn.00fc3da8();\n    if (2 < iVar4) {\n        cVar2 = fcn.00fc776c();\n        if (cVar2 != '\\0') {\n            fcn.00fc77c8();\n            fcn.00fc3e78();\n            fcn.00fc377c();\n            fcn.00fce79c();\n            fcn.00fc77c8();\n            fcn.00fc3e78();\n            fcn.00fc377c();\n            fcn.00fc3e14();\n            fcn.00fce79c();\n            fcn.00fc77c8();\n            fcn.00fc3e78();\n            fcn.00fc377c();\n            fcn.00fc3e14();\n            fcn.00fce79c();\n            *piVar1 = *piVar1 + 1;\n        }\n    }\n    arg_8h = &fcn.00fd4de8::var_10h;\n    uStackY112 = 0xfd5295;\n    fcn.00fc75c0(arg_8h, 0);\n    uStackY112 = 0xfd529d;\n    iVar4 = fcn.00fc3da8();\n    if (2 < iVar4) {\n        uStackY112 = 0xfd52aa;\n        cVar2 = fcn.00fc776c();\n        if (cVar2 != '\\0') {\n            uStackY112 = 0xfd52c1;\n            fcn.00fc3e14();\n            uStackY112 = 0xfd52d2;\n            fcn.00fc377c();\n            uStackY116 = 0xfd52ec;\n            fcn.00fc3e14();\n            uStackY112 = 0xfd52f8;\n            fcn.00fce79c();\n            *piVar1 = *piVar1 + 1;\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 2328
    },
    "00fd60ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fd60ec(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0xfd6269;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    fcn.00fc34e4();\n    iVar1 = fcn.00fc4648();\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if ((*(*(arg_8h + -4) + 0x20 + iVar2 * 0x22c) == 0) &&\n               (-1 < in_EAX && in_EAX == *(*(arg_8h + -4) + 0x18 + iVar2 * 0x22c))) {\n                if (*(*(arg_8h + -4) + 8 + iVar2 * 0x22c) == *(arg_8h + -8)) {\n                    fcn.00fc3b80(*in_ECX);\n                    fcn.00fc3760(0);\n                    uStack60 = 0xfd628c;\n                    fcn.00fc3850();\n                }\n                else {\n                    fcn.00fc3b80(*in_ECX);\n                    fcn.00fc3760(0);\n                    uStack60 = 0xfd628c;\n                    fcn.00fc3850();\n                }\n                fcn.00fd60ec(arg_8h);\n                fcn.00fc3798();\n                *(*(arg_8h + -4) + 0x20 + iVar2 * 0x22c) = 2;\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0xfd6270;\n    uStack56 = 0xfd6268;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 553
    },
    "00fd6290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00fd6290(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint *in_FS_OFFSET;\n    uint uStack636;\n    uint uStack632;\n    uchar *puStack628;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    int32_t var_18h;\n    uint var_14h;\n    char var_dh;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack628 = &stack0xfffffffc;\n    var_4h = 0;\n    var_14h = 0;\n    uStack632 = 0xfd65c6;\n    uStack636 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack636;\n    fcn.00fc69a8();\n    uVar1 = fcn.00fc3990();\n    uVar1 = fcn.00fc4ec0(0xfd6600, uVar1);\n    pcVar2 = fcn.00fc4e98(uVar1);\n    fcn.00fc69a8();\n    uVar1 = fcn.00fc3990();\n    uVar1 = fcn.00fc4ec0(0xfd6600, uVar1);\n    pcVar3 = fcn.00fc4e98(uVar1);\n    fcn.00fc69a8();\n    uVar1 = fcn.00fc3990();\n    fcn.00fc69a8(uVar1);\n    uVar1 = fcn.00fc3990();\n    uVar1 = fcn.00fc4ec0(uVar1);\n    pcVar4 = fcn.00fc4e98(uVar1);\n    fcn.00fc34e4();\n    uVar1 = 2;\n    iVar5 = (*pcVar2)(2, 0);\n    if (iVar5 != -1) {\n        var_244h = 0x22c;\n        iVar6 = (*pcVar3)(iVar5, &var_244h);\n        while (iVar6 != 0) {\n            iVar6 = fcn.00fc4648();\n            fcn.00fc4804(iVar6 + 1);\n            iVar6 = fcn.00fc4648();\n            puVar8 = &var_244h;\n            puVar9 = var_4h + -0x22c + iVar6 * 0x22c;\n            for (iVar7 = 0x8b; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar9 = *puVar8;\n                puVar8 = puVar8 + 1;\n                puVar9 = puVar9 + 1;\n            }\n            iVar6 = fcn.00fc4648();\n            *(var_4h + -0x20c + iVar6 * 0x22c) = 0;\n            iVar6 = (*pcVar4)(iVar5, &var_244h);\n        }\n        (***0xfdb1b4)(iVar5);\n    }\n    iVar5 = fcn.00fc4648();\n    if (-1 < iVar5 + -1) {\n        iVar6 = 0;\n        var_18h = iVar5;\n        do {\n            var_dh = '\\x01';\n            iVar5 = fcn.00fc4648();\n            if (-1 < iVar5 + -1) {\n                iVar7 = 0;\n                do {\n                    if (*(var_4h + 0x18 + iVar6 * 0x22c) == *(var_4h + 8 + iVar7 * 0x22c)) {\n                        var_dh = '\\0';\n                    }\n                    iVar7 = iVar7 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            if (*(var_4h + 0x18 + iVar6 * 0x22c) == *(var_4h + 8 + iVar6 * 0x22c)) {\n                var_dh = '\\x01';\n            }\n            if (var_dh == '\\x01') {\n                *(var_4h + 0x20 + iVar6 * 0x22c) = 1;\n            }\n            iVar6 = iVar6 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    var_8h = fcn.00fc4e70();\n    iVar5 = fcn.00fc4648();\n    if (-1 < iVar5 + -1) {\n        iVar6 = 0;\n        var_18h = iVar5;\n        do {\n            if (*(var_4h + 0x20 + iVar6 * 0x22c) == 1) {\n                if (*(var_4h + 8 + iVar6 * 0x22c) == var_8h) {\n                    fcn.00fc3760(var_14h);\n                    uVar1 = 0xfd6680;\n                    fcn.00fc3850();\n                }\n                else {\n                    fcn.00fc3760(var_14h);\n                    uVar1 = 0xfd6680;\n                    fcn.00fc3850();\n                }\n                fcn.00fd60ec(&stack0xfffffffc);\n                fcn.00fc3798();\n            }\n            fcn.00fc3538();\n            iVar6 = iVar6 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc3508(0xfd65cd);\n    fcn.00fc34e4();\n    fcn.00fc4810();\n    return;\n}\n",
        "token_count": 1372
    },
    "00fd6edc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fd6edc(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puVar4;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0xfd6f9f;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack40;\n    uVar3 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    puVar4 = &var_4h;\n    (**0xfdcb14)(puVar4, &var_8h);\n    if (var_8h != 0) {\n        fcn.00fc4804(var_8h);\n        (**0xfdcb18)(var_4h, var_8h, 0);\n        for (; uVar3 < var_4h; uVar3 = uVar3 + 1) {\n            iVar2 = (**0xfdcb04)(*(uVar3 * 0x4c + 0x30));\n            if (iVar2 == 0) break;\n        }\n        if (uVar3 < var_4h) {\n            puVar1 = uVar3 * 0x4c;\n            *param_2 = *puVar1;\n            param_2[1] = puVar1[1];\n            param_2[2] = puVar1[2];\n            param_2[3] = puVar1[3];\n        }\n    }\n    *in_FS_OFFSET = puVar4;\n    iStack40 = 0xfd6fa6;\n    fcn.00fc4810();\n    return;\n}\n",
        "token_count": 434
    },
    "00fd6fb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fd6fb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint var_b0h;\n    uint var_ach;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint var_9ch;\n    uint var_98h;\n    uint *var_94h;\n    uint var_90h;\n    uint var_80h;\n    uint var_78h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack196 = &stack0xfffffffc;\n    var_18h = NULL;\n    uStack200 = 0xfd71d7;\n    uStack204 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff34;\n    if ((((((*0xfdcb04 != 0) && (*0xfdcb08 != NULL)) && (*0xfdcb0c != NULL)) &&\n         ((*0xfdcb10 != NULL && (*0xfdcb14 != 0)))) &&\n        ((*0xfdcb18 != 0 && ((*0xfdcb1c != NULL && (*0xfdcb20 != NULL)))))) &&\n       ((*0xfdcb24 != NULL && (*0xfdcb28 != NULL)))) {\n        var_38h = 1;\n        var_34h = 0;\n        var_30h = 0;\n        var_2ch = 0;\n        var_8h = in_EDX;\n        var_4h = in_EAX;\n        iVar1 = (**0xfdcb08)(&fcn.00fd6fb0::var_10h, &fcn.00fd6fb0::var_38h, 0);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00fc4f28(0);\n            uVar3 = fcn.00fc4f00(0);\n            uVar4 = fcn.00fc4ef8(uVar2, var_4h, var_8h);\n            fcn.00fc4f18(uVar3, uVar4);\n            fcn.00fc4ef0(uVar3, 0, 0, var_4h, var_8h, uVar2, var_ch, arg_14h, 0xcc0020);\n            uVar5 = fcn.00fc495c();\n            (**0xfdcb24)(0, 0xffffffff, uVar5);\n            (**0xfdcb10)(uVar4, 0, &fcn.00fd6fb0::var_14h);\n            fcn.00fd6edc();\n            var_b0h = 1;\n            var_ach = *0xfdb0ec;\n            uStack172 = *0xfdb0f0;\n            uStack168 = *0xfdb0f4;\n            uStack164 = *0xfdb0f8;\n            var_9ch = 1;\n            var_98h = 4;\n            var_94h = &fcn.00fd6fb0::arg_10h;\n            (**0xfdcb20)(var_14h, var_18h, &fcn.00fd6fb0::var_90h, &fcn.00fd6fb0::var_b0h);\n            (**(*var_18h + 0x30))(var_18h, &fcn.00fd6fb0::var_80h, 1);\n            (**0xfdcb28)(var_18h, &fcn.00fd6fb0::var_1ch);\n            fcn.00fc4eb0(var_1ch);\n            fcn.00fc35d4();\n            (**0xfdcb1c)(var_14h);\n            fcn.00fc4eb8(var_1ch);\n            fcn.00fc4f10(uVar4);\n            fcn.00fc4f08(uVar3);\n            fcn.00fc4f38(0, uVar2);\n            (**0xfdcb0c)(var_10h);\n        }\n    }\n    *in_FS_OFFSET = uStack204;\n    puStack196 = 0xfd71de;\n    uStack200 = 0xfd71d6;\n    fcn.00fc495c();\n    return;\n}\n",
        "token_count": 1067
    },
    "00fd7820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00fd7820(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *puVar5;\n    int32_t iStack1512;\n    uint uStack1508;\n    uchar *puStack1504;\n    uint var_5d0h;\n    uint var_5cch;\n    uint var_5c8h;\n    uint var_5c4h;\n    uint var_5c0h;\n    uint var_5bch;\n    uint var_1bch;\n    uint32_t var_1b8h;\n    uint var_1ach;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    puStack1504 = 0xfd7868;\n    var_8h = in_EDX;\n    fcn.00fc3980();\n    puStack1504 = 0xfd7870;\n    fcn.00fc3980();\n    puStack1504 = 0xfd7878;\n    fcn.00fc3980();\n    puStack1504 = 0xfd7880;\n    fcn.00fc3980();\n    puStack1504 = 0xfd7888;\n    fcn.00fc3980();\n    uStack1508 = 0xfd7c31;\n    iStack1512 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffa18;\n    puStack1504 = &stack0xfffffffc;\n    fcn.00fc357c();\n    uVar1 = fcn.00fc39e8();\n    puVar2 = fcn.00fc4e90(uVar1);\n    if (puVar2 == NULL) {\n        uVar1 = fcn.00fc39e8();\n        puVar2 = fcn.00fc4ec8(uVar1);\n    }\n    iVar3 = fcn.00fc39e8();\n    *0xfdcb38 = fcn.00fc4e98(puVar2, iVar3 + 0xc);\n    iVar3 = fcn.00fc39e8();\n    *0xfdcb3c = fcn.00fc4e98(puVar2, iVar3 + 0x17);\n    iVar3 = fcn.00fc39e8();\n    *0xfdcb40 = fcn.00fc4e98(puVar2, iVar3 + 0x25);\n    iVar3 = fcn.00fc39e8();\n    *0xfdcb44 = fcn.00fc4e98(puVar2, iVar3 + 0x2c);\n    iVar3 = fcn.00fc39e8();\n    *0xfdcb48 = fcn.00fc4e98(puVar2, iVar3 + 0x31);\n    iVar3 = fcn.00fc39e8();\n    *0xfdcb4c = fcn.00fc4e98(puVar2, iVar3 + 0x36);\n    iVar3 = fcn.00fc39e8();\n    *0xfdcb50 = fcn.00fc4e98(puVar2, iVar3 + 0x3c);\n    iVar3 = fcn.00fc39e8();\n    puVar5 = puVar2;\n    *0xfdcb54 = fcn.00fc4e98(puVar2, iVar3 + 0x44);\n    if ((((((puVar2 != NULL) && (*0xfdcb38 != NULL)) && (*0xfdcb3c != NULL)) &&\n         ((*0xfdcb40 != NULL && (*0xfdcb44 != NULL)))) &&\n        ((*0xfdcb48 != NULL && ((*0xfdcb4c != NULL && (*0xfdcb50 != NULL)))))) && (*0xfdcb54 != NULL)) {\n        fcn.00fc34e4();\n        uVar1 = fcn.00fc4f40(&fcn.00fd7820::var_1ach);\n        iVar3 = (**0xfdcb38)(uVar1);\n        if (iVar3 == 0) {\n            iVar3 = (**0xfdcb40)(2, 1, 0);\n            if (iVar3 != -1) {\n                var_1bch._0_2_ = 2;\n                uVar1 = fcn.00fc3990();\n                iVar4 = (**0xfdcb3c)(uVar1);\n                if (iVar4 != 0) {\n                    var_1b8h = ***(iVar4 + 0xc);\n                    var_1bch._2_2_ = (**0xfdcb4c)(var_1b8h & 0xffff0000 | arg_ch & 0xffff);\n                    iVar4 = (**0xfdcb50)(iVar3, &fcn.00fd7820::var_1bch, 0x10);\n                    if (iVar4 == 0) {\n                        fcn.00fc3850(0xfd7d50, 0xfd7cd4, 0xfd7d14, 0xfd7cfc, 0xfd7ce0, 0xfd7cd4, arg_14h, 0xfd7cc4, \n                                     0xfd7cb0, var_8h, 0xfd7ca4, var_ch);\n                        fcn.00fc3d88();\n                        fcn.00fc3790(0);\n                        fcn.00fd745c();\n                        fcn.00fc3d88(0xfd7d68, 0);\n                        fcn.00fc3e78(0);\n                        fcn.00fc377c();\n                        uVar1 = fcn.00fc3790(0);\n                        uVar1 = fcn.00fc39e8(uVar1);\n                        (**0xfdcb44)(iVar3, uVar1);\n                        fcn.00fc34e4();\n                        do {\n                            fcn.00fc34e4();\n                            fcn.00fc28e0();\n                            iVar4 = (**0xfdcb48)(iVar3, &fcn.00fd7820::var_5bch, 0x400, 0);\n                            fcn.00fc35d4();\n                            fcn.00fc3798();\n                        } while (0 < iVar4);\n                        (**0xfdcb54)(iVar3);\n                        puVar5 = &fcn.00fd7820::var_14h;\n                        iVar3 = fcn.00fc3ad4();\n                        fcn.00fc3790(iVar3 + 4);\n                        fcn.00fc39f0();\n                        fcn.00fc3538();\n                    }\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = puVar5;\n    fcn.00fc3bf4(0xfd7c38);\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 1643
    },
    "00fd7d84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00fd7d84(uint arg_8h)\n\n{\n    code *pcVar1;\n    ushort extraout_var;\n    int32_t iVar2;\n    uint32_t arg_ch;\n    int32_t iVar3;\n    uint32_t in_EDX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uchar auStackY69412 [65636];\n    uint var_ebch;\n    uint *puStackY3772;\n    uint uStackY3768;\n    uint *puStackY3760;\n    uint uStackY3756;\n    uint16_t uStackY3752;\n    uint *puStackY3748;\n    uint uStackY3744;\n    uint *puStackY3740;\n    uint uStackY3736;\n    uint *puStackY3732;\n    uint uStackY3728;\n    uint *puStackY3724;\n    uint uStackY3720;\n    uint var_e80h;\n    uint var_a80h;\n    uint var_280h;\n    uint var_200h;\n    uint var_180h;\n    uint uStackY280;\n    int32_t iStackY276;\n    int32_t iStackY272;\n    uchar *puStackY268;\n    uint uStackY264;\n    uint *puStackY260;\n    uint32_t uStackY256;\n    uint uStackY252;\n    uint *puStackY248;\n    uint uStackY244;\n    uint uStackY240;\n    uint uStackY236;\n    uint32_t uStackY232;\n    uint32_t uStackY228;\n    int32_t iStackY224;\n    uint *puStackY220;\n    uint uStackY216;\n    uint uStackY212;\n    uint uStackY208;\n    uint uStackY204;\n    uint uStackY200;\n    uint uStackY196;\n    int32_t iStackY192;\n    uint uStackY188;\n    uint *puStackY184;\n    uint *arg_8h_00;\n    uint var_80h;\n    uint uStack128;\n    uint *puStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint32_t uStack104;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    int32_t var_58h;\n    uint32_t var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uchar auStack76 [3];\n    uint32_t var_45h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    code *var_2ch;\n    code *var_28h;\n    code *var_24h;\n    code *var_20h;\n    code *var_1ch;\n    code *var_18h;\n    code *var_14h;\n    code *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = 0x21e7;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_ch = 0;\n    var_1ch = 0xfd7dab;\n    var_8h = in_EDX;\n    fcn.00fc3980();\n    var_1ch = 0xfd7db3;\n    fcn.00fc3980();\n    var_1ch = 0xfd7dbb;\n    fcn.00fc3980();\n    var_20h = 0xfd8292;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd7d84::var_24h;\n    var_1ch = &stack0xfffffffc;\n    if (var_ch == 0) {\n        var_28h = 0xfd7de2;\n        var_1ch = &stack0xfffffffc;\n        fcn.00fc357c();\n    }\n    var_28h = 0xfd7dea;\n    fcn.00fc34e4();\n    var_28h = 0xfd7df5;\n    fcn.00fc357c();\n    _auStack76 = _auStack76 & 0xffffff;\n    var_28h = 0xfd7e06;\n    fcn.00fc357c();\n    var_28h = 0xfd7e0e;\n    var_28h = fcn.00fc39e8();\n    var_2ch = 0xfd7e14;\n    uStack120 = fcn.00fc4e90();\n    if (uStack120 == 0) {\n        var_2ch = 0xfd7e22;\n        var_2ch = fcn.00fc39e8();\n        var_30h = 0xfd7e28;\n        uStack120 = fcn.00fc4ec8();\n    }\n    var_30h = 0xfd7e32;\n    var_30h = fcn.00fc39e8();\n    var_30h = var_30h + 0xc;\n    var_38h = 0xfd7e3c;\n    var_34h = uStack120;\n    var_10h = fcn.00fc4e98();\n    var_38h = 0xfd7e47;\n    var_38h = fcn.00fc39e8();\n    var_38h = var_38h + 0x1a;\n    var_40h = 0xfd7e51;\n    var_3ch = uStack120;\n    var_14h = fcn.00fc4e98();\n    var_40h = 0xfd7e5c;\n    var_40h = fcn.00fc39e8();\n    var_40h = var_40h + 0x2b;\n    _auStack76 = 0xfd7e66;\n    unique0x10000606 = uStack120;\n    var_18h = fcn.00fc4e98();\n    _auStack76 = 0xfd7e71;\n    iVar3 = fcn.00fc39e8();\n    _auStack76 = iVar3 + 0x3c;\n    var_50h = 0xfd7e7b;\n    var_4ch = uStack120;\n    var_1ch = fcn.00fc4e98();\n    var_50h = 0xfd7e86;\n    var_50h = fcn.00fc39e8();\n    var_50h = var_50h + 0x53;\n    var_58h = 0xfd7e90;\n    var_54h = uStack120;\n    var_20h = fcn.00fc4e98();\n    var_58h = 0xfd7e9b;\n    var_58h = fcn.00fc39e8();\n    var_58h = var_58h + 100;\n    var_60h = 0xfd7ea5;\n    var_5ch = uStack120;\n    var_24h = fcn.00fc4e98();\n    var_60h = 0xfd7eb0;\n    var_60h = fcn.00fc39e8();\n    var_60h = var_60h + 0x75;\n    iStack108 = 0xfd7eba;\n    uStack104 = uStack120;\n    pcVar1 = fcn.00fc4e98();\n    iStack108 = 0xfd7ec4;\n    iStack108 = fcn.00fc39e8();\n    iStack108 = iStack108 + 0x89;\n    iStack116 = 0xfd7ed0;\n    uStack112 = uStack120;\n    var_28h = fcn.00fc4e98();\n    iStack116 = 0xfd7edb;\n    iStack116 = fcn.00fc39e8();\n    iStack116 = iStack116 + 0x9b;\n    puStack124 = 0xfd7ee7;\n    var_2ch = fcn.00fc4e98();\n    puStack124 = 0xfd7ef7;\n    fcn.00fc4f5c();\n    puStack124 = 0xfd7f07;\n    fcn.00fc4f5c();\n    puStack124 = 0xfd7f17;\n    fcn.00fc4f5c();\n    puStack124 = 0xfd7f27;\n    fcn.00fc4f5c();\n    puStack124 = 0xfd7f37;\n    fcn.00fc4f5c();\n    puStack124 = 0xfd7f47;\n    fcn.00fc4f5c();\n    puStack124 = 0xfd7f53;\n    fcn.00fc4f5c();\n    var_ebch = 0x3c;\n    puStackY3772 = &fcn.00fd7d84::var_80h;\n    uStackY3768 = 0x20;\n    puStackY3760 = &fcn.00fd7d84::var_180h;\n    uStackY3756 = 0x100;\n    puStackY3748 = &fcn.00fd7d84::var_200h;\n    uStackY3744 = 0x80;\n    puStackY3740 = &fcn.00fd7d84::var_280h;\n    uStackY3736 = 0x80;\n    puStackY3732 = &fcn.00fd7d84::var_a80h;\n    uStackY3728 = 0x800;\n    puStackY3724 = &fcn.00fd7d84::var_e80h;\n    uStackY3720 = 0x400;\n    uStack128 = 0x90000000;\n    var_80h = 0xfd7fc4;\n    puStack124 = &fcn.00fd7d84::var_ebch;\n    var_80h = fcn.00fc3790();\n    fcn.00fc3990();\n    (*var_28h)();\n    fcn.00fc36dc();\n    fcn.00fc3790();\n    fcn.00fc39f0();\n    iVar3 = fcn.00fc3ad4();\n    if (iVar3 != 0) {\n        _auStack76 = CONCAT13(1, auStack76);\n        fcn.00fc36dc();\n        fcn.00fc37dc();\n        fcn.00fd7668();\n        puStackY3760 = fcn.00fc3990();\n    }\n    iVar3 = (*var_10h)();\n    if (iVar3 != 0) {\n        var_50h = 3000000;\n        (*var_2ch)();\n        puStackY184 = &fcn.00fd7d84::var_50h;\n        uStackY188 = 5;\n        uStackY196 = 0xfd808b;\n        iStackY192 = iVar3;\n        (*var_2ch)();\n        uStackY196 = 0;\n        uStackY200 = 0;\n        uStackY204 = 3;\n        uStackY208 = 0;\n        uStackY212 = 0;\n        uStackY216 = CONCAT22(extraout_var, uStackY3752);\n        puStackY220 = puStackY3760;\n        uStackY228 = 0xfd80a2;\n        iStackY224 = iVar3;\n        var_3ch = (*var_14h)();\n        if (var_3ch != 0) {\n            var_4ch = 0x84003300;\n            uStackY228 = 0xfd80c4;\n            fcn.00fc36dc();\n            uStackY228 = 0xfd80d4;\n            iVar2 = fcn.00fc3ad4();\n            if (iVar2 != 0) {\n                var_4ch = var_4ch | 0x800000;\n            }\n            uStackY228 = 0;\n            uStackY232 = var_4ch;\n            uStackY236 = 0;\n            uStackY240 = 0;\n            uStackY244 = 0;\n            puStackY248 = puStackY3732;\n            uStackY252 = 0xfd80f7;\n            uStackY252 = fcn.00fc3990();\n            uStackY256 = var_3ch;\n            puStackY260 = 0xfd80ff;\n            var_40h = (*var_18h)();\n            if (var_40h != 0) {\n                if (var_45h != '\\0') {\n                    puStackY260 = 0xa0000000;\n                    uStackY264 = 0xfd811f;\n                    uStackY264 = fcn.00fc3790();\n                    puStackY268 = 0xfd8128;\n                    puStackY268 = fcn.00fc3990();\n                    iStackY272 = var_40h;\n                    iStackY276 = 0xfd8130;\n                    (*var_1ch)();\n                }\n                puStackY260 = 0xfd8138;\n                puStackY260 = fcn.00fc3790();\n                uStackY264 = 0xfd8141;\n                uStackY264 = fcn.00fc3990();\n                puStackY268 = NULL;\n                iStackY272 = 0xfd83cc;\n                iStackY276 = var_40h;\n                uStackY280 = 0xfd8150;\n                iVar2 = (*var_20h)();\n                do {\n                    if (iVar2 == 0) break;\n                    puStackY260 = 0xfd8164;\n                    fcn.00fc4f5c();\n                    puStackY260 = &fcn.00fd7d84::var_38h;\n                    uStackY264 = 0x10064;\n                    puStackY268 = &stack0xfffef0dc;\n                    iStackY272 = var_40h;\n                    iStackY276 = 0xfd817b;\n                    *NULL = (*var_24h)();\n                    puStackY260 = 0xfd818f;\n                    fcn.00fc35d4();\n                    puStackY260 = 0xfd819a;\n                    fcn.00fc3798();\n                    iVar2 = var_38h;\n                } while (stack0xffffffb8 != 0);\n            }\n            puStackY260 = var_40h;\n            uStackY264 = 0xfd81b1;\n            (*pcVar1)();\n        }\n        uStackY228 = var_3ch;\n        uStackY232 = 0xfd81b7;\n        (*pcVar1)();\n    }\n    (*pcVar1)();\n    uVar4 = var_58h == 0;\n    if (uVar4) {\n        arg_ch = var_8h & 0xffff0000 | uStackY3752;\n        arg_8h_00 = &fcn.00fd7d84::var_58h;\n        puStackY184 = 0xfd81df;\n        iVar2 = var_60h;\n        fcn.00fc36dc();\n        uStackY188 = 0xfd81f4;\n        fcn.00fc36dc();\n        puStackY184 = 0xfd8203;\n        fcn.00fd7820(arg_8h_00, arg_ch, var_8h, iVar2);\n    }\n    fcn.00fc38dc();\n    if (uVar4) {\n        fcn.00fc627c();\n        fcn.00fc38dc();\n    }\n    fcn.00fc3538();\n    fcn.00fc34e4();\n    *in_FS_OFFSET = iVar3;\n    fcn.00fc3508();\n    fcn.00fc3508();\n    fcn.00fc3508();\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 3627
    },
    "00fd86c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_52h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_144h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00fd86c4(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    bool bVar6;\n    uint8_t uVar7;\n    uchar uVar8;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint *var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint32_t var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint32_t var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint *var_1dch;\n    uint var_1d8h;\n    int32_t var_1d4h;\n    uint var_1d0h;\n    uint *var_1cch;\n    uint *var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint32_t var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    int32_t var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint *var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    int32_t var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint *var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint *var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    int32_t var_130h;\n    uint var_12ch;\n    uint *var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uchar auStack244 [3];\n    uint var_edh;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uchar auStack88 [2];\n    int32_t var_52h;\n    uint *var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    int32_t *var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar3 = 0x50;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0xfd86e1;\n    var_14h = unaff_EDI;\n    var_4h = in_EAX;\n    fcn.00fc3980();\n    var_1ch = 0xfd985e;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd86c4::var_20h;\n    var_24h = 0xfd86f7;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc34e4();\n    _auStack88 = auStack88;\n    var_24h = 0xfd870c;\n    fcn.00fc357c();\n    var_24h = 0xfd8711;\n    fcn.00fc5668();\n    var_24h = 0xfd871c;\n    fcn.00fc7de0();\n    var_24h = &fcn.00fd86c4::var_130h;\n    var_28h = 0xfd872e;\n    fcn.00fc6ce8();\n    var_24h = 0xfd873a;\n    fcn.00fc3798();\n    var_24h = 0xfd8745;\n    var_24h = fcn.00fc3990();\n    var_28h = 0;\n    var_2ch = NULL;\n    var_30h = 0xfd8753;\n    (***0xfdb39c)();\n    var_30h = 0xfd875f;\n    iVar3 = (***0xfdb12c)();\n    if (iVar3 != 0xb7) {\n        var_30h = 0xfd8777;\n        fcn.00fc357c();\n        var_30h = 0xfd8789;\n        fcn.00fd6dd4();\n        var_30h = 0xfd8797;\n        fcn.00fc69a8();\n        var_30h = 0xfd87a5;\n        fcn.00fc357c();\n        var_30h = 0xfd87b0;\n        fcn.00fc6ce8();\n        var_30h = 0xfd87c1;\n        fcn.00fc6834();\n        var_30h = 0xfd87d4;\n        fcn.00fc37dc();\n        var_30h = 0xfd87e4;\n        fcn.00fd6dd4();\n        var_30h = &fcn.00fd86c4::var_10h;\n        var_34h = 0xfd87f5;\n        fcn.00fd7d84(var_30h);\n        var_34h = 0xfd8805;\n        fcn.00fd6dd4();\n        var_34h = 0xfd880d;\n        iVar3 = fcn.00fc3790();\n        bVar6 = iVar3 == 10000;\n        if (9999 < iVar3) {\n            var_34h = 0xfd8825;\n            fcn.00fc38dc();\n            if (!bVar6) {\n                var_34h = &fcn.00fd86c4::var_144h;\n                var_38h = 0xfd8844;\n                fcn.00fc74e8(var_34h);\n                var_38h = 0xfd8852;\n                fcn.00fc69a8();\n                var_38h = &fcn.00fd86c4::var_148h;\n                var_3ch = 0xfd886b;\n                fcn.00fc74e8(var_38h);\n                var_3ch = 0xfd8879;\n                fcn.00fc6b08();\n                var_3ch = 0xfd8889;\n                fcn.00fc7a18();\n                var_3ch = &fcn.00fd86c4::var_150h;\n                var_40h = 0xfd88a2;\n                fcn.00fc74e8(var_3ch);\n                var_40h = 0xfd88b3;\n                fcn.00fc69a8();\n                var_40h = 0xfd88be;\n                fcn.00fc8180();\n                var_40h = 0xfd88c6;\n                fcn.00fc9668();\n                var_40h = 0xfd88cd;\n                fcn.00fce630();\n                var_40h = 0xfd88d5;\n                iVar3 = fcn.00fc4648();\n                if (-1 < iVar3 + -1) {\n                    iVar4 = 0;\n                    do {\n                        var_30h = 0xfd88ee;\n                        iVar1 = fcn.00fc3790();\n                        if (4 < iVar1) {\n                            if (iVar4 == 0) {\n                                if (*(*var_2ch + 1) == '+') {\n                                    var_30h = 0xfd8910;\n                                    fcn.00fce1dc();\n                                    var_30h = 0xfd891b;\n                                    fcn.00fc5424();\n                                    var_30h = 0xfd892b;\n                                    fcn.00fce6d4();\n                                }\n                                if (*(*var_2ch + 2) == '+') {\n                                    var_30h = 0xfd893c;\n                                    fcn.00fd3bb4();\n                                    var_30h = 0xfd8947;\n                                    fcn.00fc5574();\n                                    var_30h = 0xfd895a;\n                                    fcn.00fce6d4();\n                                }\n                                if (*(*var_2ch + 9) == '+') {\n                                    var_30h = 0xfd896b;\n                                    fcn.00fd3be8();\n                                }\n                                if (*(*var_2ch + 3) == '+') {\n                                    var_30h = 0xfd8985;\n                                    fcn.00fd4de8();\n                                    var_30h = NULL;\n                                    var_34h = 0x7d0;\n                                    var_38h = 0x1;\n                                    var_3ch = NULL;\n                                    var_40h = 0;\n                                    var_44h = 0xfd89a6;\n                                    iVar1 = fcn.00fd3f58(0, 0, 1, 2000, 0);\n                                    **0xfdb2c4 = **0xfdb2c4 + iVar1;\n                                    var_44h = 0;\n                                    var_48h = 2000;\n                                    var_4ch = 0x1;\n                                    stack0xffffffac = 0;\n                                    _auStack88 = 0;\n                                    var_58h = 0xfd89cf;\n                                    iVar1 = fcn.00fd3f58(0, 0, 1, 2000, 0);\n                                    **0xfdb2c4 = **0xfdb2c4 + iVar1;\n                                    var_58h = 0;\n                                    var_5ch = 5000;\n                                    var_60h = 1;\n                                    var_64h = 0;\n                                    var_68h = NULL;\n                                    iVar1 = fcn.00fd3f58(0, 0, 1, 5000, 0);\n                                    **0xfdb2c4 = **0xfdb2c4 + iVar1;\n                                    iVar1 = fcn.00fd3f58(0, 0, 1, 5000, 0);\n                                    if (0 < iVar1) {\n                                        **0xfdb2c4 = **0xfdb2c4 + 1;\n                                    }\n                                    iVar1 = fcn.00fd3f58(0, 0, 1, 5000, 0);\n                                    if (0 < iVar1) {\n                                        **0xfdb2c4 = **0xfdb2c4 + 1;\n                                    }\n                                    uStack172 = 0xfd8a79;\n                                    iVar1 = fcn.00fd3f58(0, 0, 1, 5000, 0);\n                                    if (0 < iVar1) {\n                                        **0xfdb2c4 = **0xfdb2c4 + 1;\n                                    }\n                                    if (0 < **0xfdb2c4) {\n                                        uStack172 = 0xfd8a98;\n                                        fcn.00fc5114();\n                                    }\n                                }\n                                if (*(*var_2ch + 4) == '+') {\n                                    var_30h = 0xfd8aae;\n                                    fcn.00fd4808();\n                                }\n                                if (*(*var_2ch + 5) == '+') {\n                                    var_30h = NULL;\n                                    var_34h = 0x3e8;\n                                    var_38h = 0x1;\n                                    var_3ch = NULL;\n                                    var_40h = 0;\n                                    var_44h = 0xfd8adb;\n                                    fcn.00fd3f58(0, 0, 1, 1000, 0);\n                                }\n                                if (*(*var_2ch + 6) == '+') {\n                                    var_30h = 0xfd8af1;\n                                    fcn.00fd4a90();\n                                }\n                                if (*(*var_2ch + 7) == '+') {\n                                    var_30h = NULL;\n                                    var_34h = 0x32;\n                                    var_38h = 0xfd9d84;\n                                    var_3ch = &fcn.00fd86c4::var_40h;\n                                    var_40h = 1;\n                                    var_44h = 0xfd8b11;\n                                    var_44h = fcn.00fc4f30();\n                                    var_48h = 0;\n                                    var_4ch = 0xfd8b19;\n                                    fcn.00fc4f30();\n                                    var_48h = 0xfd8b21;\n                                    fcn.00fd6fb0(var_44h, var_40h, var_3ch, var_38h);\n                                    var_48h = 0xfd8b2e;\n                                    fcn.00fce6d4();\n                                }\n                                if (*(*var_2ch + 8) == '+') {\n                                    _auStack88 = CONCAT12(1, auStack88);\n                                    _auStack88 = _auStack88 & 0xff000000 | _auStack88;\n                                }\n                            }\n                            if (*var_2ch[iVar4] == 'F') {\n                                var_30h = 0xfd8b60;\n                                fcn.00fc7a18();\n                                var_30h = 0xfd8b6e;\n                                fcn.00fc357c();\n                                var_30h = 0xfd8b7b;\n                                iVar1 = fcn.00fc3ad4();\n                                uVar7 = iVar1 == 1;\n                                if (uVar7) {\n                                    var_30h = &fcn.00fd86c4::var_68h;\n                                    var_34h = 0xfd8b98;\n                                    fcn.00fc74e8(var_30h);\n                                    var_34h = &fcn.00fd86c4::var_edh;\n                                    var_38h = 0x81;\n                                    var_3ch = 0xfd8bad;\n                                    iVar1 = (***0xfdb240)();\n                                    if (iVar1 == 0) goto code_r0x00fd965c;\n                                    for (puVar5 = &fcn.00fd86c4::var_edh; *puVar5 != '\\0'; puVar5 = puVar5 + 1) {\n                                        var_34h = 0xfd8bca;\n                                        var_30h = puVar5;\n                                        (***0xfdb114)();\n                                        var_30h = 0xfd8bd5;\n                                        fcn.00fc709c();\n                                        var_30h = 0xfd8be6;\n                                        fcn.00fc377c();\n                                        var_30h = 0xfd8bf4;\n                                        iVar1 = fcn.00fc3ad4();\n                                        if (iVar1 != 0) {\n                                            var_30h = &fcn.00fd86c4::var_164h;\n                                            var_34h = 0xfd8c10;\n                                            fcn.00fc3cf4();\n                                            var_34h = var_168h;\n                                            var_38h = 0xfd9dc0;\n                                            var_3ch = var_68h;\n                                            var_40h = 0xfd9ddc;\n                                            var_44h = 0xfd8c34;\n                                            fcn.00fc3850();\n                                            var_44h = 0xfd8c45;\n                                            fcn.00fc3d88();\n                                            var_44h = var_16ch;\n                                            var_48h = 0xfd8c5a;\n                                            fcn.00fc3d88();\n                                            var_40h = 0xfd8c67;\n                                            fcn.00fc717c(var_3ch);\n                                            var_40h = 0xfd8c75;\n                                            fcn.00fc377c();\n                                            var_40h = 0xfd8c7d;\n                                            fcn.00fc34e4();\n                                            var_40h = var_30h[1];\n                                            var_44h = 0xfd9de8;\n                                            var_48h = var_64h;\n                                            var_4ch = 0xfd8c98;\n                                            fcn.00fc3850();\n                                            var_4ch = &fcn.00fd86c4::var_178h;\n                                            stack0xffffffac = 0xfd8cad;\n                                            fcn.00fc3d88();\n                                            uVar7 = 1;\n                                            stack0xffffffac = 0xfd8cbf;\n                                            fcn.00fc717c(var_4ch);\n                                            stack0xffffffac = 0xfd8ccf;\n                                            fcn.00fc3db4();\n                                            stack0xffffffac = 0xfd8cdd;\n                                            fcn.00fc377c();\n                                            stack0xffffffac = 0xfd8ceb;\n                                            fcn.00fc3d88();\n                                            stack0xffffffac = 0xfd8cfc;\n                                            fcn.00fc78d8();\n                                            stack0xffffffac = 0xfd8d0a;\n                                            fcn.00fc377c();\n                                            stack0xffffffac = 0xfd8d1b;\n                                            fcn.00fc3d88();\n                                            stack0xffffffac = var_188h;\n                                            _auStack88 = 0xfd8d33;\n                                            fcn.00fc3d88();\n                                            _auStack88 = 0xfd8d3e;\n                                            _auStack88 = fcn.00fc7108();\n                                            var_58h = 0xfd8d4f;\n                                            uVar2 = fcn.00fc38dc();\n                                            var_58h = uVar2 & 0xffffff00 | uVar7;\n                                            var_5ch = 0xfd8d63;\n                                            uVar2 = fcn.00fc38dc();\n                                            var_5ch = uVar2 & 0xffffff00 | uVar7;\n                                            var_60h = 1;\n                                            var_64h = 0xfd8d7c;\n                                            fcn.00fc37dc();\n                                            var_64h = 0xfd8d8d;\n                                            fcn.00fc3d88();\n                                            var_64h = var_190h;\n                                            var_68h = 0xfd8da5;\n                                            fcn.00fc3d88();\n                                            var_68h = var_198h;\n                                            fcn.00fc37dc();\n                                            fcn.00fc3d88();\n                                            var_64h = 0xfd8ddd;\n                                            fcn.00fd3f58(var_2ch, var_5ch, var_58h, _auStack88, stack0xffffffac);\n                                        }\n                                    }\n                                }\n                                else {\n                                    var_30h = 0xfd8dff;\n                                    fcn.00fc3d88();\n                                    var_30h = var_1a4h;\n                                    var_34h = 0xfd8e17;\n                                    fcn.00fc3d88();\n                                    var_34h = 0xfd8e22;\n                                    var_34h = fcn.00fc7108();\n                                    var_38h = 0xfd8e33;\n                                    uVar2 = fcn.00fc38dc();\n                                    var_38h = uVar2 & 0xffffff00 | uVar7;\n                                    var_3ch = 0xfd8e47;\n                                    uVar2 = fcn.00fc38dc();\n                                    var_3ch = uVar2 & 0xffffff00 | uVar7;\n                                    var_40h = 1;\n                                    var_44h = 0xfd9e10;\n                                    var_48h = *(var_30h + 4);\n                                    var_4ch = 0xfd9de8;\n                                    stack0xffffffac = 0xfd8e6d;\n                                    fcn.00fc3850();\n                                    stack0xffffffac = 0xfd8e7e;\n                                    fcn.00fc3d88();\n                                    stack0xffffffac = var_1ach;\n                                    _auStack88 = 0xfd8e96;\n                                    fcn.00fc3d88();\n                                    _auStack88 = var_1b4h;\n                                    var_58h = 0xfd8eb3;\n                                    fcn.00fc37dc();\n                                    var_58h = 0xfd8ec4;\n                                    fcn.00fc3d88();\n                                    stack0xffffffac = 0xfd8ed1;\n                                    fcn.00fd3f58(var_2ch, var_48h, var_44h, var_40h, var_3ch);\n                                }\n                            }\n                            if (*var_2ch[iVar4] == 'L') {\n                                var_30h = var_48h;\n                                var_34h = var_2ch[iVar4];\n                                var_38h = 0xfd9988;\n                                var_3ch = 0xfd8ef7;\n                                fcn.00fc3850();\n                            }\n                            uVar8 = *var_2ch[iVar4] == 'I';\n                            if (uVar8) {\n                                var_30h = 0xfd8f19;\n                                fcn.00fc7a18();\n                                var_30h = 0xfd8f29;\n                                fcn.00fc38dc();\n                                if (uVar8) {\n                                    _auStack88 = CONCAT13(1, _auStack88);\n                                    var_30h = &fcn.00fd86c4::var_1ch;\n                                    var_34h = 0xfd8f44;\n                                    fcn.00fd7d84(var_30h);\n                                    var_34h = &fcn.00fd86c4::var_4ch;\n                                    var_38h = 0xfd8f5a;\n                                    fcn.00fc74e8(var_34h);\n                                    var_38h = &fcn.00fd86c4::var_52h + 2;\n                                    var_3ch = 0xfd8f70;\n                                    fcn.00fc74e8(var_38h);\n                                    var_3ch = var_4ch;\n                                    var_40h = 0xfd9e90;\n                                    var_44h = stack0xffffffac;\n                                    var_48h = 0xfd8f8b;\n                                    fcn.00fc3850();\n                                    var_48h = 0xfd8f9b;\n                                    fcn.00fce6d4();\n                                }\n                                else {\n                                    var_30h = 0xfd8fad;\n                                    fcn.00fce6d4();\n                                }\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                var_30h = var_4h;\n                var_34h = 0xfd9988;\n                var_38h = 0xfd8fc8;\n                fcn.00fd698c();\n                var_38h = var_1c8h;\n                var_3ch = 0xfd8fde;\n                fcn.00fc3850();\n                var_3ch = 0xfd8fee;\n                fcn.00fce6d4();\n                var_3ch = 0xfd8ff9;\n                fcn.00fc6ce8();\n                var_3ch = 0xfd900a;\n                fcn.00fc6834();\n                var_3ch = var_1cch;\n                var_40h = 0xfd9ec0;\n                var_44h = 0xfd9020;\n                fcn.00fc7b08();\n                var_44h = 0xfd9031;\n                fcn.00fc6834();\n                var_44h = var_1d4h;\n                var_48h = 0xfd9ec0;\n                var_4ch = 0xfd9047;\n                fcn.00fc6bd8();\n                var_4ch = 0xfd9058;\n                fcn.00fc377c();\n                var_4ch = 0xfd9069;\n                fcn.00fc6834();\n                var_4ch = var_1dch;\n                stack0xffffffac = 0xfd9ec0;\n                _auStack88 = 0xfd907f;\n                fcn.00fc66e4();\n                _auStack88 = 0xfd9090;\n                fcn.00fc377c();\n                _auStack88 = 0xfd90a1;\n                fcn.00fc6834();\n                _auStack88 = var_1e8h;\n                var_58h = 0xfd9ec0;\n                var_5ch = 0xfd90b7;\n                fcn.00fc6634();\n                var_5ch = 0xfd90c8;\n                fcn.00fc377c();\n                var_5ch = 0xfd90d9;\n                fcn.00fc6834();\n                var_5ch = var_1f4h;\n                var_60h = 0xfd9ec0;\n                var_64h = 0xfd90ef;\n                fcn.00fc65f0();\n                var_64h = 0xfd9100;\n                fcn.00fc377c();\n                var_64h = 0xfd9111;\n                fcn.00fc6834();\n                var_64h = var_200h;\n                var_68h = 0xfd9ec0;\n                fcn.00fc709c();\n                fcn.00fc377c();\n                fcn.00fc6834();\n                fcn.00fc709c();\n                fcn.00fc377c();\n                fcn.00fc6834();\n                fcn.00fc709c();\n                fcn.00fc377c();\n                fcn.00fc6834();\n                fcn.00fc709c();\n                fcn.00fc377c();\n                fcn.00fc6834();\n                fcn.00fc6834();\n                fcn.00fc7de0();\n                fcn.00fc6834();\n                fcn.00fc3850();\n                uStack172 = 0xfd9ee8;\n                uStack176 = **0xfdb350;\n                uStack180 = 0xfd9edc;\n                uStack184 = 0xfd9988;\n                uStack188 = 0xfd9ef8;\n                uStack192 = **0xfdb350;\n                uStack196 = 0xfd9edc;\n                uStack200 = 0xfd92a6;\n                fcn.00fc63c8();\n                uStack200 = var_248h;\n                uStack204 = 0xfd9f08;\n                uStack208 = **0xfdb350;\n                uStack212 = 0xfd9edc;\n                uStack216 = 0xfd9988;\n                uStack220 = 0xfd9f18;\n                uStack224 = **0xfdb350;\n                uStack228 = 0xfd9edc;\n                uStack232 = 0xfd92de;\n                fcn.00fc6560();\n                uStack232 = var_24ch;\n                uStack236 = 0xfd9f28;\n                unique0x00007a00 = **0xfdb350;\n                _auStack244 = 0xfd9edc;\n                uStack248 = 0xfd9988;\n                uStack252 = 0xfd9f38;\n                uStack256 = **0xfdb350;\n                uStack260 = 0xfd9edc;\n                uStack264 = 0xfd9316;\n                fcn.00fce8d0();\n                uStack264 = var_250h;\n                uStack268 = 0xfd9f48;\n                uStack272 = **0xfdb350;\n                var_110h = 0xfd9edc;\n                var_114h = 0xfd9988;\n                var_118h = 0xfd933f;\n                fcn.00fc3850();\n                if (var_52h._1_1_ == '\\x01') {\n                    var_118h = var_14h;\n                    var_11ch = 0xfd9f58;\n                    var_120h = **0xfdb350;\n                    var_124h = 0xfd9edc;\n                    var_128h = var_4ch;\n                    var_12ch = 0xfd9e90;\n                    var_130h = stack0xffffffac;\n                    var_134h = 0xfd9f64;\n                    var_138h = **0xfdb350;\n                    var_13ch = 0xfd9edc;\n                    var_140h = 0xfd9988;\n                    var_144h = 0xfd9387;\n                    fcn.00fc3850();\n                }\n                var_144h = 0xfd9397;\n                fcn.00fd6dd4();\n                var_144h = &fcn.00fd86c4::var_254h;\n                var_148h = 0xfd93ab;\n                fcn.00fd7d84(var_144h);\n                var_148h = var_20ch;\n                var_14ch = 0xfd93b8;\n                (***0xfdb3a0)();\n                var_30h = 0xfd93c2;\n                fcn.00fc5114();\n                var_30h = 0xfd93ca;\n                iVar3 = fcn.00fc3790();\n                uVar8 = iVar3 == 3;\n                if (3 < iVar3) {\n                    var_30h = 0xfd93e3;\n                    fcn.00fc7a18();\n                    var_30h = 0xfd93eb;\n                    iVar3 = fcn.00fc4648();\n                    uVar8 = iVar3 == 1;\n                    if (-1 < iVar3 + -1) {\n                        do {\n                            var_30h = NULL;\n                            var_34h = 0xfd940e;\n                            fcn.00fc4804();\n                            var_30h = 0xfd9424;\n                            fcn.00fc7a18();\n                            var_30h = 0xfd942c;\n                            iVar4 = fcn.00fc4648();\n                            bVar6 = iVar4 == 4;\n                            if (bVar6) {\n                                var_30h = 0xfd9444;\n                                fcn.00fc38dc();\n                                if (bVar6) {\n                                    var_30h = 0xfd945d;\n                                    fcn.00fc7a18();\n                                    _auStack88 = _auStack88 & 0xffff00ff;\n                                    var_30h = 0xfd9469;\n                                    iVar4 = fcn.00fc4648();\n                                    if (-1 < iVar4 + -1) {\n                                        var_44h = 0;\n                                        do {\n                                            var_30h = 0xfd948c;\n                                            fcn.00fc633c();\n                                            var_30h = 0xfd949f;\n                                            iVar1 = fcn.00fc3ad4();\n                                            auStack88 = CONCAT11(iVar1 != 0, auStack88[0]);\n                                            _auStack88 = _auStack88 & 0xffff0000 | auStack88;\n                                            auStack88[1] = auStack88 >> 8;\n                                            if (auStack88[1] == '\\x01') break;\n                                            var_44h = var_44h + 1;\n                                            iVar4 = iVar4 + -1;\n                                        } while (iVar4 != 0);\n                                    }\n                                    if (auStack88[1] == '\\x01') {\n                                        var_30h = 0xfd94c7;\n                                        fcn.00fc38dc();\n                                        var_30h = 0xfd94d5;\n                                        fcn.00fd841c();\n                                    }\n                                }\n                            }\n                            iVar3 = iVar3 + -1;\n                            uVar8 = iVar3 == 0;\n                        } while (!uVar8);\n                    }\n                }\n                var_30h = 0xfd94e2;\n                fcn.00fc99c0();\n                var_30h = 0xfd94ed;\n                fcn.00fc7de0();\n                var_30h = 0xfd94fd;\n                fcn.00fc38dc();\n                if (uVar8) {\n                    var_30h = 0xfd950c;\n                    fcn.00fc38dc();\n                    if (uVar8) {\n                        var_30h = 0xfd9513;\n                        fcn.00fc7e90();\n                        goto code_r0x00fd965c;\n                    }\n                }\n                var_30h = 0xfd9525;\n                fcn.00fc38dc();\n                if ((uVar8) && (var_52h == '\\x01')) {\n                    var_30h = 0xfd9547;\n                    fcn.00fc28e0();\n                    var_12ch = 0x3c;\n                    var_128h = 0x1c0;\n                    var_124h = 0;\n                    var_120h = 0;\n                    var_30h = 0xfd957b;\n                    fcn.00fc62fc();\n                    var_30h = 0xfd9586;\n                    var_11ch = fcn.00fc3d98();\n                    var_30h = 0xfd959c;\n                    fcn.00fc62fc();\n                    var_34h = 0xfd95af;\n                    fcn.00fc2754();\n                    var_34h = 0xfd95c0;\n                    fcn.00fc3d88();\n                    var_34h = 0xfd95d1;\n                    fcn.00fc77c8();\n                    var_34h = var_26ch;\n                    var_38h = 0xfda02c;\n                    var_3ch = 0xfd95ec;\n                    fcn.00fc3e78();\n                    var_3ch = 0xfd95f7;\n                    var_118h = fcn.00fc3d98();\n                    var_3ch = 0xfd960a;\n                    fcn.00fc2754();\n                    var_3ch = 0xfd961b;\n                    fcn.00fc3d88();\n                    var_3ch = 0xfd962c;\n                    fcn.00fc7854();\n                    var_3ch = 0xfd9637;\n                    var_114h = fcn.00fc3d98();\n                    var_110h = 0;\n                    var_3ch = &fcn.00fd86c4::var_12ch;\n                    var_40h = 0xfd9655;\n                    (***0xfdb150)();\n                    var_2ch = NULL;\n                    var_30h = 0xfd965c;\n                    fcn.00fc4e40();\n                }\n            }\n        }\n    }\ncode_r0x00fd965c:\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0xfd9868;\n    var_28h = 0xfd9674;\n    fcn.00fc34e4();\n    var_28h = 0xfd9684;\n    fcn.00fc3bf4();\n    var_28h = 0xfd968f;\n    fcn.00fc34e4();\n    var_28h = 0xfd969f;\n    fcn.00fc3bf4();\n    var_28h = 0xfd96af;\n    fcn.00fc3508();\n    var_28h = 0xfd96ba;\n    fcn.00fc3bdc();\n    var_28h = 0xfd96ca;\n    fcn.00fc3508();\n    var_28h = 0xfd96d5;\n    fcn.00fc3bdc();\n    var_28h = 0xfd96e5;\n    fcn.00fc3508();\n    var_28h = 0xfd96f0;\n    fcn.00fc3bdc();\n    var_28h = 0xfd9700;\n    fcn.00fc3508();\n    var_28h = 0xfd970b;\n    fcn.00fc3bdc();\n    var_28h = 0xfd971b;\n    fcn.00fc3508();\n    var_28h = 0xfd9726;\n    fcn.00fc3bdc();\n    var_28h = 0xfd9736;\n    fcn.00fc3508();\n    var_28h = 0xfd9741;\n    fcn.00fc3bdc();\n    var_28h = 0xfd9751;\n    fcn.00fc3508();\n    var_28h = 0xfd975c;\n    fcn.00fc3bdc();\n    var_28h = 0xfd976c;\n    fcn.00fc3508();\n    var_28h = 0xfd9777;\n    fcn.00fc3bdc();\n    var_28h = 0xfd9787;\n    fcn.00fc3508();\n    var_28h = 0xfd9797;\n    fcn.00fc3bf4();\n    var_28h = 0xfd97a2;\n    fcn.00fc34e4();\n    var_28h = 0xfd97b2;\n    fcn.00fc3bf4();\n    var_28h = 0xfd97bd;\n    fcn.00fc34e4();\n    var_28h = 0xfd97cd;\n    fcn.00fc3bf4();\n    var_28h = 0xfd97d8;\n    fcn.00fc34e4();\n    var_28h = 0xfd97e8;\n    fcn.00fc3bf4();\n    var_28h = 0xfd97f3;\n    fcn.00fc34e4();\n    var_28h = 0xfd9803;\n    fcn.00fc3bf4();\n    var_28h = 0xfd9813;\n    fcn.00fc3508();\n    var_28h = 0xfd981b;\n    fcn.00fc34e4();\n    var_28h = 0xfd982e;\n    fcn.00fc4280();\n    var_28h = 0xfd983b;\n    fcn.00fc3508();\n    var_28h = 0xfd9843;\n    fcn.00fc34e4();\n    var_28h = 0xfd9850;\n    fcn.00fc3508();\n    var_28h = 0xfd985d;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 9485
    },
    "00fc2dd0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc2dd0(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "00fc303c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00fc303c(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "00fc1aa8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc1aa8(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    \n    puVar1 = (param_2 - 4) + in_EAX;\n    if (0xf < param_2) {\n        *puVar1 = 0x80000007;\n        fcn.00fc1c7c();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n        *puVar1 = param_2 | 0x80000002;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00fc1ad8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00fc1ad8(void)\n\n{\n    int32_t in_EAX;\n    \n    *0xfdc59c = *0xfdc59c + 1;\n    *0xfdc5a0 = *0xfdc5a0 + ((*(in_EAX + -4) & 0x7ffffffc) - 4);\n    fcn.00fc20ec();\n    return;\n}\n",
        "token_count": 91
    },
    "00fc1bcc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.00fc1bcc(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uStack28;\n    int32_t iStack27;\n    int32_t iStack23;\n    \n    uStack28 = 0;\n    uVar1 = fcn.00fc1a78();\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (in_EAX - *(uVar1 + 8) < 0xc) {\n            uVar2 = fcn.00fc17e4();\n        }\n        else {\n            uVar2 = fcn.00fc17e4();\n        }\n        if (iStack27 != 0) {\n            fcn.00fc1aa8();\n            if (iStack27 + iStack23 < *(uVar1 + 8) + *(uVar1 + 0xc)) {\n                fcn.00fc1afc();\n            }\n            uVar2 = fcn.00fc12f4();\n            uStack28 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uStack28;\n}\n",
        "token_count": 265
    },
    "00fc1d50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00fc1d50(void)\n\n{\n    uint32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    uStack28 = *in_EAX;\n    uStack24 = in_EAX[1];\n    fcn.00fc1d04();\n    fcn.00fc1284();\n    if (uStack20 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (uStack20 < uStack28) {\n            iVar2 = fcn.00fc1b24();\n            uStack28 = uStack28 - iVar2;\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack28 + uStack24 < uStack20 + iStack16) {\n            iVar2 = fcn.00fc1b94();\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack20 + iStack16 == uStack28 + uStack24) {\n            fcn.00fc1aa8();\n            uStack24 = uStack24 - 4;\n        }\n        *0xfdc608 = uStack28;\n        *0xfdc604 = uStack24;\n        uVar1 = CONCAT31(uStack24 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 322
    },
    "00fc1e68": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.00fc1e68(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    while ((puVar1 = *0xfdc600,  puVar3 = *0xfdc5f8,  (*0xfdc5f8)[2] < in_EAX &&\n           (uVar4 = (*0xfdc600)[2],  puVar3 = *0xfdc600,  uVar4 < in_EAX))) {\n        (*0xfdc600)[2] = in_EAX;\n        puVar3 = puVar1;\n        do {\n            puVar3 = puVar3[1];\n        } while (puVar3[2] < in_EAX);\n        (*0xfdc600)[2] = uVar4;\n        puVar1 = puVar3;\n        if ((puVar3 != *0xfdc600) ||\n           ((in_EAX < 0x1001 && (puVar3 = fcn.00fc1e3c(),  puVar1 = *0xfdc600,  puVar3 != NULL)))) break;\n        cVar2 = fcn.00fc1ddc();\n        puVar3 = *0xfdc608;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        if (in_EAX <= *0xfdc604) {\n            *0xfdc604 = *0xfdc604 - in_EAX;\n            if (*0xfdc604 < 0xc) {\n                in_EAX = in_EAX + *0xfdc604;\n                *0xfdc604 = 0;\n            }\n            *0xfdc608 = *0xfdc608 + in_EAX;\n            *puVar3 = in_EAX | 2;\n            *0xfdc59c = *0xfdc59c + 1;\n            *0xfdc5a0 = *0xfdc5a0 + (in_EAX - 4);\n            return puVar3 + 1;\n        }\n    }\n    *0xfdc600 = puVar1;\n    fcn.00fc1a14();\n    uVar4 = puVar3[2];\n    if (uVar4 - in_EAX < 0xc) {\n        if (puVar3 == *0xfdc600) {\n            *0xfdc600 = puVar3[1];\n        }\n        *(puVar3 + uVar4) = *(puVar3 + uVar4) & 0xfffffffe;\n    }\n    else {\n        fcn.00fc1c7c();\n        uVar4 = in_EAX;\n    }\n    *puVar3 = uVar4 | 2;\n    *0xfdc59c = *0xfdc59c + 1;\n    *0xfdc5a0 = *0xfdc5a0 + (uVar4 - 4);\n    return puVar3 + 1;\n}\n",
        "token_count": 665
    },
    "00fc2290": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00fc2290(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    uVar7 = param_2 + 7U & 0xfffffffc;\n    if (uVar7 < 0xc) {\n        uVar7 = 0xc;\n    }\n    puVar6 = in_EAX + -4;\n    uVar9 = *puVar6 & 0x7ffffffc;\n    puVar3 = puVar6 + uVar9;\n    if (uVar9 == uVar7) {\n        uVar4 = CONCAT31(puVar3 >> 8, 1);\n    }\n    else {\n        uVar8 = uVar7;\n        if (uVar7 < uVar9) {\n            uStack24 = uVar9 - uVar7;\n            if (puVar3 == *0xfdc608) {\n                *0xfdc608 = *0xfdc608 + -uStack24;\n                *0xfdc604 = *0xfdc604 + uStack24;\n                if (*0xfdc604 < 0xc) {\n                    *0xfdc608 = *0xfdc608 + uStack24;\n                    *0xfdc604 = *0xfdc604 - uStack24;\n                    uVar8 = uVar9;\n                }\n            }\n            else {\n                if ((*puVar3 & 2) == 0) {\n                    uStack24 = uStack24 + *(puVar3 + 8);\n                    fcn.00fc1a14();\n                }\n                uVar8 = uVar9;\n                if (0xb < uStack24) {\n                    *(puVar6 + uVar7) = uStack24 | 2;\n                    fcn.00fc1ad8();\n                    uVar8 = uVar7;\n                }\n            }\ncode_r0x00fc244a:\n            *0xfdc5a0 = *0xfdc5a0 + (uVar8 - uVar9);\n            uVar7 = *puVar6;\n            *puVar6 = uVar8 | uVar7 & 0x80000003;\n            uVar4 = CONCAT31((uVar7 & 0x80000003) >> 8, 1);\n        }\n        else {\n            do {\n                iStack20 = uVar7 - uVar9;\n                if (puVar6 + uVar9 == *0xfdc608) {\n                    if (iStack20 <= *0xfdc604) {\n                        *0xfdc604 = *0xfdc604 - iStack20;\n                        *0xfdc608 = *0xfdc608 + iStack20;\n                        if (*0xfdc604 < 0xc) {\n                            *0xfdc608 = *0xfdc608 + *0xfdc604;\n                            uVar7 = uVar7 + *0xfdc604;\n                            *0xfdc604 = 0;\n                        }\n                        *0xfdc5a0 = *0xfdc5a0 + (uVar7 - uVar9);\n                        uVar9 = *puVar6;\n                        *puVar6 = uVar7 | uVar9 & 0x80000003;\n                        uVar4 = CONCAT31((uVar9 & 0x80000003) >> 8, 1);\n                        goto code_r0x00fc2463;\n                    }\n                    fcn.00fc1d04();\n                }\n                puVar5 = puVar6 + uVar9;\n                if ((*puVar5 & 2) == 0) {\n                    uVar1 = puVar5[2];\n                    if (iStack20 <= uVar1) {\n                        fcn.00fc1a14();\n                        if (uVar1 - iStack20 < 0xc) {\n                            uVar8 = uVar7 + (uVar1 - iStack20);\n                            puVar5 = puVar6 + uVar8;\n                            *puVar5 = *puVar5 & 0xfffffffe;\n                        }\n                        else {\n                            fcn.00fc1c7c();\n                        }\n                        goto code_r0x00fc244a;\n                    }\n                    puVar5 = puVar5 + uVar1;\n                    iStack20 = iStack20 - uVar1;\n                }\n            } while (((*puVar5 & 0x80000000) != 0) && (cVar2 = fcn.00fc1e08(),  cVar2 != '\\0'));\n            uVar4 = 0;\n        }\n    }\ncode_r0x00fc2463:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 1095
    },
    "00fc2870": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00fc2870(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00fc28a0:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00fc28a0;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 327
    },
    "00fc2c08": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc2c3d)\n// WARNING: Removing unreachable block (ram,0x00fc2c43)\n// WARNING: Removing unreachable block (ram,0x00fc2c4a)\n// WARNING: Removing unreachable block (ram,0x00fc2c50)\n// WARNING: Removing unreachable block (ram,0x00fc2c56)\n\nvoid __fastcall fcn.00fc2c08(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00fc38dc": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc38dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00fc3ec0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3ec0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "00fc28e0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc28e0(uchar param_1, uint32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_2 >> 2;\n    if (-1 < iVar1) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *in_EAX = CONCAT22(CONCAT11(param_1, param_1), CONCAT11(param_1, param_1));\n            in_EAX = in_EAX + 1;\n        }\n        for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n            *in_EAX = param_1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00fc2900": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint fcn.00fc2900(void)\n\n{\n    uint32_t in_EAX;\n    \n    *0xfdb008 = *0xfdb008 * 0x8088405 + 1;\n    return in_EAX * *0xfdb008 >> 0x20;\n}\n",
        "token_count": 62
    },
    "00fc291c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc291c(char *param_1, int32_t param_2)\n\n{\n    uint64_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char acStack37 [21];\n    int32_t iStack16;\n    \n    iStack16 = param_2;\n    uVar2 = (in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f);\n    iVar4 = 0;\n    do {\n        iVar3 = iVar4;\n        uVar1 = uVar2;\n        uVar2 = uVar2 / 10;\n        acStack37[iVar3 + 1] = uVar1 % 10 + '0';\n        iVar4 = iVar3 + 1;\n    } while (uVar2 != 0);\n    if (in_EAX < 0) {\n        acStack37[iVar3 + 2] = '-';\n        iVar4 = iVar3 + 2;\n    }\n    *param_1 = iVar4;\n    pcVar5 = param_1 + 1;\n    if (0xff < iStack16) {\n        iStack16 = 0xff;\n    }\n    iVar3 = iStack16 - iVar4;\n    if (iVar3 != 0 && iVar4 <= iStack16) {\n        *param_1 = *param_1 + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *pcVar5 = ' ';\n            pcVar5 = pcVar5 + 1;\n        }\n    }\n    do {\n        *pcVar5 = acStack37[iVar4];\n        pcVar5 = pcVar5 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 422
    },
    "00fc32dc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00fc32dc(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0xfdb000;\n    do {\n        *((uVar2 & 0xff) + 0xfdb060) = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0xfdb004;\n    do {\n        *((uVar3 & 0xff) + 0xfdb060) = *((uVar2 & 0xf) + 0xfdb080);\n        uVar2 = uVar2 >> 4;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 216
    },
    "00fc67c0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00fc67ca: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00fc67cf)\n\nvoid __fastcall fcn.00fc67c0(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            in_EAX = -in_EAX;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "00fc2988": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc2988(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00fc29fe:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00fc2a0e:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00fc2a0e;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00fc2a13:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00fc2a07;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00fc2a07;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00fc2a50:\n                iVar7 = 0;\n                goto code_r0x00fc2a53;\n            }\n            goto code_r0x00fc29fe;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00fc29da;\n            goto code_r0x00fc2a07;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00fc2a13;\n        while (uVar3 != 0) {\ncode_r0x00fc29da:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00fc2a07;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00fc2a50;\n        }\n        else if (-1 < uVar2) goto code_r0x00fc2a50;\n    }\ncode_r0x00fc2a07:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00fc2a53:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 881
    },
    "00fcfe00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00fcfe00(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 6;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0xfcfe20;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    var_1ch = 0xfd0007;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fcfe00::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc34e4();\n    fcn.00fc7228();\n    fcn.00fc7a18();\n    iVar3 = 0;\n    iVar2 = fcn.00fc4648();\n    if ((9 < iVar2) && (iVar2 = fcn.00fc4648(),  -1 < iVar2 + -1)) {\n        do {\n            if (iVar3 == 8) {\n                fcn.00fc357c();\n                iVar1 = fcn.00fc3ad4();\n                if (iVar1 != 0) {\n                    fcn.00fc3ad4();\n                    var_28h = 0xfcfec4;\n                    fcn.00fc39f0();\n                }\n                fcn.00fc357c();\n                fcn.00fc357c();\n                iVar1 = fcn.00fc3ad4();\n                if (iVar1 == 0) {\n                    fcn.00fc357c();\n                }\n                else {\n                    fcn.00fc3ad4();\n                    fcn.00fc3790();\n                    fcn.00fc39f0();\n                }\n                fcn.00fc357c();\n                fcn.00fc357c();\n                fcn.00fc357c();\n                fcn.00fc357c();\n                var_4h = 0xfcfe9f;\n                var_8h = 0xfd005c;\n                var_ch = var_28h;\n                var_10h = 0xfd005c;\n                var_18h = 0xfd005c;\n                var_1ch = var_30h;\n                var_20h = 0xfd0068;\n                fcn.00fc3850();\n                fcn.00fc5194();\n            }\n            iVar3 = iVar3 + 1;\n            if (8 < iVar3) {\n                iVar3 = 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00fc3538();\n    fcn.00fc4810();\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0xfd000e;\n    var_1ch = 0xfcfff0;\n    fcn.00fc3508();\n    var_1ch = 0xfcfffe;\n    fcn.00fc4810();\n    var_1ch = 0xfd0006;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 887
    },
    "00fc2a94": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00fc2a94(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.00fc2a8c(0);\n    if (iVar1 == 7) {\n        uVar2 = fcn.00fc2a8c(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 141
    },
    "00fc2ac4": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00fc2ac4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *0xfdb018;\n    puStack20 = &fcn.00fc2ac4::var_4h;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0xfc2b5c;\n    uStack36 = 0x80000002;\n    puStack40 = 0xfc2aeb;\n    iVar1 = fcn.00fc1130();\n    if (iVar1 == 0) {\n        uStack44 = 0xfc2b35;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = var_4h;\n        puStack40 = &stack0xfffffffc;\n        fcn.00fc1138(var_4h, 0xfc2b78, 0, 0, &fcn.00fc2ac4::var_8h, &fcn.00fc2ac4::var_ch);\n        *in_FS_OFFSET = uVar2;\n        fcn.00fc1128(var_4h, 0xfc2b3c);\n        return;\n    }\n    *0xfdb018 = *0xfdb018 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 406
    },
    "00fc3054": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fc3054(int32_t *arg_8h)\n\n{\n    fcn.00fc25c0();\n    return;\n}\n",
        "token_count": 35
    },
    "00fc4f40": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.00fc4f40(uint param_1, uint32_t param_2)\n\n{\n    uint16_t in_AX;\n    \n    return in_AX & 0xff | (param_2 & 0xff) << 8;\n}\n",
        "token_count": 58
    },
    "00fc69a8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00fc69a8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = 0xfc69c7;\n    fcn.00fc3980();\n    uStack48 = 0xfc6aab;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    iVar3 = 0;\n    iVar1 = fcn.00fc3790();\n    if (0 < iVar1) {\n        do {\n            fcn.00fc36cc();\n            iVar2 = fcn.00fc3ad4();\n            if (iVar2 + -1 < 0) break;\n            iVar2 = iVar3 + 6;\n            if (7 < iVar2) {\n                iVar2 = iVar3 + -2;\n                fcn.00fc36cc();\n                fcn.00fc3798();\n            }\n            iVar1 = iVar1 + -1;\n            iVar3 = iVar2;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0xfc6ab2;\n    uStack48 = 0xfc6aa2;\n    fcn.00fc3508();\n    uStack48 = 0xfc6aaa;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 389
    },
    "00fc31b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00fc31b4(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0xfdc62c != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0xfdc62c == ppiVar1) {\n            *in_FS_OFFSET = **0xfdc62c;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0xfdc62c) {\n                *ppiVar1 = **0xfdc62c;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00fc6910": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00fc6910(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 3;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0xfc693a;\n    uStack48 = fcn.00fc3d98();\n    puStack52 = 0xfc6944;\n    iVar1 = (***0xfdb3c8)();\n    if (iVar1 != -1) {\n        uStack56 = 0xfc698a;\n        iStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        iVar2 = iVar1;\n        puStack52 = &stack0xfffffffc;\n        (***0xfdb264)(iVar1, &fcn.00fc6910::var_4h);\n        *in_FS_OFFSET = iVar2;\n        iStack60 = 0xfc6991;\n        (***0xfdb1b4)(iVar1);\n        return;\n    }\n    puStack52 = NULL;\n    uStack56 = 0x400;\n    iStack60 = 0xfc69a3;\n    fcn.00fc45cc();\n    return;\n}\n",
        "token_count": 390
    },
    "00fc7228": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc7228(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    int32_t iStack84;\n    uint *puStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0xfc7242;\n    var_8h = param_2;\n    fcn.00fc4150();\n    uStack40 = 0xfc7353;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack48 = 0xfc7258;\n    puStack36 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    uStack48 = 0xfc7260;\n    fcn.00fc34e4();\n    uStack48 = 0;\n    iStack52 = 0xfc726a;\n    iVar1 = fcn.00fc3d98();\n    uStack56 = 0xfc7276;\n    iStack52 = iVar1;\n    uStack56 = (***0xfdb358)();\n    uStack60 = 3;\n    uStack64 = 0;\n    uStack68 = 1;\n    uStack72 = 0x80000000;\n    puStack80 = 0xfc728c;\n    iStack76 = iVar1;\n    var_14h = (***0xfdb3c8)();\n    if (var_14h == -1) {\n        puStack80 = NULL;\n        puStack88 = 0xfc72a1;\n        iStack84 = iVar1;\n        puStack88 = (***0xfdb358)();\n        uStack92 = 3;\n        iStack96 = 0;\n        var_14h = (***0xfdb3c8)(iVar1, 0x80000000, 3);\n        if (var_14h == -1) {\n            *in_FS_OFFSET = iStack76;\n            uStack68 = 0xfc735a;\n            uStack72 = 0xfc734a;\n            fcn.00fc34e4();\n            uStack72 = 0xfc7352;\n            fcn.00fc3bdc();\n            return;\n        }\n    }\n    puStack80 = &fcn.00fc7228::var_ch;\n    iStack84 = var_14h;\n    puStack88 = 0xfc72d1;\n    var_ch = (***0xfdb264)();\n    puStack88 = 0xfc72df;\n    fcn.00fc3b1c();\n    uStack92 = 0xfc7323;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    iVar1 = var_14h;\n    puStack88 = &stack0xfffffffc;\n    (***0xfdb470)(var_14h, 0, var_ch, &fcn.00fc7228::var_10h, 0);\n    *in_FS_OFFSET = iVar1;\n    (***0xfdb1b4)(var_14h, 0xfc732a);\n    return;\n}\n",
        "token_count": 811
    },
    "00fc776c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00fc776c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0xfc777c;\n    fcn.00fc4150();\n    uStack20 = 0xfc77b8;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.00fc3d98();\n    (***0xfdb358)();\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0xfc77bf;\n    uStack24 = 0xfc77b7;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 187
    },
    "00fcd988": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00fcd988(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_230h;\n    uint uStackY96;\n    uint uStackY92;\n    uint arg_8h;\n    int32_t iStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uchar *puStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    iVar4 = 0x53;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    puStack36 = 0xfcdd42;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0xfcd9b4;\n    fcn.00fc34e4();\n    puStack44 = 0xfcd9c1;\n    fcn.00fc62fc();\n    puStack48 = 0xfcdb2b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = &fcn.00fcd988::var_25ch;\n    uStack60 = 0xfcd9e9;\n    puStack44 = &stack0xfffffffc;\n    fcn.00fc3e14();\n    uStack60 = 0xfcd9f4;\n    uStack60 = fcn.00fc3d98();\n    puStack64 = 0xfcd9fe;\n    puVar1 = (***0xfdb2d8)();\n    while( true ) {\n        puStack64 = &fcn.00fcd988::var_25ch;\n        iStack72 = 0xfcdb19;\n        puStack68 = puVar1;\n        iVar2 = (***0xfdb198)();\n        if (iVar2 == 0) break;\n        uStack52 = 0xfcda1f;\n        puStack48 = iVar4;\n        fcn.00fc3d6c();\n        uStack52 = var_268h;\n        puStack56 = 0xfcdda0;\n        uStack60 = 0xfcda3a;\n        fcn.00fc3e78();\n        uStack60 = 0xfcda45;\n        uStack60 = fcn.00fc3d98();\n        puStack64 = 0xfcda4f;\n        iVar2 = (***0xfdb358)();\n        if (iVar2 != -1) {\n            puStack68 = 0xfcdafb;\n            iStack72 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb8;\n            puStack64 = &stack0xfffffffc;\n            fcn.00fc3d6c();\n            uVar3 = 0xfcdda0;\n            uStackY92 = 0xfcdaa1;\n            fcn.00fc3e78();\n            uStackY92 = 0xfcdab2;\n            fcn.00fc7228();\n            uStackY92 = var_270h;\n            uStackY96 = 0xfcdacf;\n            fcn.00fc3760();\n            uStackY92 = 0xfcdae0;\n            fcn.00fcd5d4(uVar3);\n            uStackY92 = 0xfcdaee;\n            fcn.00fc3798();\n            *in_FS_OFFSET = uVar3;\n        }\n    }\n    *in_FS_OFFSET = puStack44;\n    puStack36 = 0xfcdb42;\n    fcn.00fc62fc();\n    iStack40 = 0xfcdcac;\n    puStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00fcd988::var_25ch;\n    uStack52 = 0xfcdb6a;\n    puStack36 = &stack0xfffffffc;\n    fcn.00fc3e14();\n    uStack52 = 0xfcdb75;\n    uStack52 = fcn.00fc3d98();\n    puStack56 = 0xfcdb7f;\n    uVar3 = (***0xfdb2d8)();\n    while( true ) {\n        puStack56 = &fcn.00fcd988::var_25ch;\n        puStack64 = 0xfcdc9a;\n        uStack60 = uVar3;\n        iVar2 = (***0xfdb198)();\n        if (iVar2 == 0) break;\n        puStack44 = 0xfcdba0;\n        iStack40 = iVar4;\n        fcn.00fc3d6c();\n        puStack44 = var_288h;\n        puStack48 = 0xfcdda0;\n        uStack52 = 0xfcdbbb;\n        fcn.00fc3e78();\n        uStack52 = 0xfcdbc6;\n        uStack52 = fcn.00fc3d98();\n        puStack56 = 0xfcdbd0;\n        iVar2 = (***0xfdb358)();\n        if (iVar2 != -1) {\n            uStack60 = 0xfcdc7c;\n            puStack64 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc0;\n            puStack68 = &fcn.00fcd988::var_28ch;\n            iStack72 = iVar4;\n            puStack56 = &stack0xfffffffc;\n            fcn.00fc3d6c();\n            arg_8h = 0xfcdda0;\n            fcn.00fc3e78();\n            fcn.00fc7228();\n            fcn.00fc3760();\n            fcn.00fcd5d4(arg_8h);\n            fcn.00fc3798();\n            *in_FS_OFFSET = arg_8h;\n        }\n    }\n    *in_FS_OFFSET = puStack36;\n    *in_FS_OFFSET = unaff_ESI;\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bf4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 1599
    },
    "00fd3c48": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00fd3c48(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0xfd3c58;\n    fcn.00fc4150();\n    uStack20 = 0xfd3c90;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.00fc3d98();\n    fcn.00fc4e78();\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0xfd3c97;\n    uStack24 = 0xfd3c8f;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 193
    },
    "00fc370c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc370c(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x00fc3735:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x00fc3732:\n                piVar2 = piVar2 + 1;\n                goto code_r0x00fc3735;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x00fc3732;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00fc34e4(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00fc3604(arg_8h),  -1 < iVar1)) {\n        fcn.00fc35d4();\n    }\n    else {\n        fcn.00fc3b1c();\n        fcn.00fc3604(arg_8h);\n        fcn.00fc3b1c();\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "00fc377c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc377c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00fc34e4(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00fc3604(arg_8h),  -1 < iVar1)) {\n        fcn.00fc35d4();\n    }\n    else {\n        fcn.00fc3b1c();\n        fcn.00fc3604(arg_8h);\n        fcn.00fc3b1c();\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00fc3c18": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc25ec)\n\nvoid __fastcall fcn.00fc3c18(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (*(param_2 + -4) >> 1 != 0)) {\n        iVar1 = fcn.00fc1150();\n        if (iVar1 != 0) {\n            return;\n        }\n        if (*0xfdc008 != NULL) {\n            (**0xfdc008)();\n        }\n        fcn.00fc25c0();\n        return;\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        *in_EAX = 0;\n        fcn.00fc1158(iVar1);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00fc3d24": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc25ec)\n\nvoid __fastcall fcn.00fc3d24(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00fc3d4d:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00fc3d4a:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00fc3d4d;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00fc3d4a;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            fcn.00fc1158(iVar2);\n        }\n        return;\n    }\n    iVar2 = fcn.00fc1148(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        fcn.00fc1158(iVar1);\n        return;\n    }\n    if (*0xfdc008 != NULL) {\n        (**0xfdc008)();\n    }\n    fcn.00fc25c0();\n    return;\n}\n",
        "token_count": 447
    },
    "00fc3da8": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00fc3da8(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "00fc3e78": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3e78(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    \n    iVar2 = param_2;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uVar1 = fcn.00fc3bb4();\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.00fc2628(uVar1);\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    fcn.00fc3bcc();\n    // WARNING: Could not recover jumptable at 0x00fc3ebd. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 218
    },
    "00fc40bc": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00fc40bc(uint param_1, int16_t *param_2)\n\n{\n    int16_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = (*(in_EAX + -2) >> 1) - 1;\n        if (-1 < iVar3) {\n            iVar1 = (*(param_2 + -2) >> 1) - iVar3;\n            bVar7 = iVar1 == 0;\n            piVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -2) >> 1) {\ncode_r0x00fc40e3:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        piVar4 = piVar5 + 1;\n                        bVar7 = *in_EAX == *piVar5;\n                        piVar5 = piVar4;\n                        if (!bVar7) goto code_r0x00fc40e3;\n                    }\n                    iVar2 = iVar3;\n                    piVar4 = in_EAX + 1;\n                    piVar6 = piVar5;\n                    if (!bVar7) goto code_r0x00fc40f9;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *piVar4 == *piVar6;\n                        iVar2 = iVar2 + -1;\n                        piVar4 = piVar4 + 1;\n                        piVar6 = piVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = piVar5 - param_2 >> 1;\n                goto code_r0x00fc410b;\n            }\n        }\ncode_r0x00fc40f9:\n        in_EAX = NULL;\n    }\ncode_r0x00fc410b:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 494
    },
    "00fc4150": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc25ec)\n\nvoid fcn.00fc4150(void)\n\n{\n    int32_t **in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *in_EAX;\n    if (piVar2 != NULL) {\n        iVar1 = fcn.00fc1148(piVar2, piVar2[-1] >> 1);\n        if (iVar1 == 0) {\n            if (*0xfdc008 != NULL) {\n                (**0xfdc008)();\n            }\n            fcn.00fc25c0();\n            return;\n        }\n        *piVar2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00fc41a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc25ec)\n\nvoid __fastcall fcn.00fc41a0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00fc41a0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00fc4170();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0xfdc008 != NULL) {\n                (**0xfdc008)();\n            }\n            fcn.00fc25c0();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 515
    },
    "00fc4384": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc25ec)\n\nvoid __fastcall fcn.00fc4384(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.00fc2628();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.00fc3538();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00fc3c18();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00fc436c();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00fc44a0(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00fc4384();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00fc4974();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0xfdc008 != NULL) {\n                    (**0xfdc008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.00fc25c0();\n                return;\n            }\n            fcn.00fc484c();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.00fc2628();\n    }\n    return;\n}\n",
        "token_count": 563
    },
    "00fc44a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc25ec)\n\nvoid __thiscall fcn.00fc44a0(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.00fc3538();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00fc3c18();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00fc436c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00fc44a0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00fc4384();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00fc4974();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0xfdc008 != NULL) {\n                (**0xfdc008)();\n            }\n            fcn.00fc25c0();\n            return;\n        }\n        do {\n            fcn.00fc484c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "00fd3d08": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00fd3d08(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 5;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_14h = 0xfd3d26;\n    var_10h = unaff_EBX;\n    fcn.00fc4150();\n    var_18h = 0xfd3eed;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd3d08::var_1ch;\n    var_20h = 0xfd3d3b;\n    var_14h = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    var_20h = 0xfd3d46;\n    fcn.00fc7228();\n    var_20h = 0xfd3d53;\n    iVar2 = fcn.00fc3ad4();\n    if (iVar2 != 0) {\n        var_20h = 0xfd3d68;\n        fcn.00fc3ad4();\n        var_20h = 0xfd3d77;\n        fcn.00fc3a30();\n        var_20h = 0xfd3d84;\n        iVar2 = fcn.00fc3ad4();\n        if (iVar2 != 3 && -1 < iVar2 + -3) {\n            var_20h = 0xfd3d9f;\n            fcn.00fc3a30();\n            var_20h = 0xfd3da7;\n            iVar2 = fcn.00fc3790();\n            if (9 < iVar2) {\n                var_20h = &fcn.00fd3d08::var_ch;\n                fcn.00fc36cc();\n                fcn.00fc74e8(var_20h);\n                fcn.00fc3d88();\n                cVar1 = fcn.00fd3c48();\n                if (cVar1 != '\\0') {\n                    fcn.00fc3d88();\n                    cVar1 = fcn.00fd3ca0();\n                    if (cVar1 == '\\0') {\n                        fcn.00fc3d88();\n                        goto code_r0x00fd3ea3;\n                    }\n                }\n                fcn.00fc74e8(&fcn.00fd3d08::var_10h);\n                in_stack_ffffffc8 = 0xfd3f20;\n                fcn.00fc3850(0xfd3f20, var_10h, 0xfd3f2c, &fcn.00fd3d08::var_20h);\n                fcn.00fc74e8(in_stack_ffffffc8);\n                fcn.00fc357c();\n                fcn.00fc37dc();\n                fcn.00fc3d88();\n                cVar1 = fcn.00fd3c48();\n                if (cVar1 != '\\0') {\n                    fcn.00fc3d88();\n                    cVar1 = fcn.00fd3ca0();\n                    if (cVar1 == '\\0') {\n                        fcn.00fc3d88();\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00fd3ea3:\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    fcn.00fc3bf4(0xfd3ef4);\n    fcn.00fc3508();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 980
    },
    "00fcd3b4": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.00fcd3b4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack64 = 0xfcd3df;\n    fcn.00fc3980();\n    uStack68 = 0xfcd5c2;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    iVar1 = fcn.00fc3790();\n    if ((iVar1 != 0) && (iVar1 = fcn.00fc3790(),  iVar1 != 0)) {\n        var_10h = fcn.00fc3790();\n        if (var_10h < 0) {\n            var_10h = var_10h + 3;\n        }\n        var_10h = var_10h >> 2;\n        iVar1 = 1;\n        if (0 < var_10h) {\n            do {\n                fcn.00fc2864();\n                fcn.00fc2834();\n                fcn.00fc3d60();\n                iVar2 = fcn.00fc7108();\n                iVar2 = iVar2 << 0xc;\n                fcn.00fc2864(iVar2);\n                fcn.00fc2834();\n                fcn.00fc3d60();\n                iVar3 = fcn.00fc7108();\n                iVar2 = iVar2 + iVar3 * 0x100;\n                fcn.00fc2864(iVar2);\n                fcn.00fc2834();\n                fcn.00fc3d60();\n                iVar3 = fcn.00fc7108();\n                fcn.00fc2864(iVar2 + iVar3 * 0x10);\n                fcn.00fc2834();\n                fcn.00fc3d60();\n                fcn.00fc7108();\n                iVar2 = fcn.00fc3790();\n                if (iVar2 < iVar1) {\n                    iVar1 = 1;\n                }\n                fcn.00fc36cc();\n                fcn.00fc3798();\n                iVar1 = iVar1 + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0xfcd5c9;\n    uStack68 = 0xfcd5a4;\n    fcn.00fc34e4();\n    uStack68 = 0xfcd5b1;\n    fcn.00fc3bf4();\n    uStack68 = 0xfcd5b9;\n    fcn.00fc3bdc();\n    uStack68 = 0xfcd5c1;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 744
    },
    "00fc6204": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nvoid fcn.00fc6204(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0xfc6215;\n    fcn.00fc3980();\n    uStack24 = 0xfc626e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00fc3790();\n    if (0 < iVar1) {\n        do {\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0xfc6275;\n    uStack24 = 0xfc626d;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 210
    },
    "00fc1284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc1284(int32_t *param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    \n    puVar3 = *in_EAX;\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    do {\n        puVar1 = *puVar3;\n        if (*param_1 == puVar3[2] + puVar3[3]) {\n            fcn.00fc126c();\n            *param_1 = puVar3[2];\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        else if (*param_1 + param_1[1] == puVar3[2]) {\n            fcn.00fc126c();\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        puVar3 = puVar1;\n    } while (in_EAX != puVar1);\n    cVar2 = fcn.00fc123c();\n    if (cVar2 == '\\0') {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00fc1388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc1388(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (in_EAX < 0x100000) {\n        uVar3 = 0x100000;\n    }\n    else {\n        uVar3 = in_EAX + 0xffffU & 0xffff0000;\n    }\n    param_2[1] = uVar3;\n    iVar2 = fcn.00fc11b4(0, uVar3, 0x2000, 1);\n    *param_2 = iVar2;\n    if (iVar2 != 0) {\n        cVar1 = fcn.00fc123c();\n        if (cVar1 == '\\0') {\n            fcn.00fc11bc(*param_2, 0, 0x8000);\n            *param_2 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00fc151c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc151c(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    \n    uVar5 = in_EAX & 0xfffff000;\n    uVar3 = in_EAX + param_2 + 0xfff & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar3 - uVar5;\n    puVar6 = *0xfdc5d4;\n    do {\n        if (puVar6 == 0xfdc5d4) {\n            return;\n        }\n        uVar1 = puVar6[2];\n        uVar4 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar4 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar3 < puVar6[3] + uVar1) {\n            uVar7 = uVar3;\n        }\n        if (uVar4 < uVar7) {\n            puVar8 = uVar7 - uVar4;\n            iVar2 = fcn.00fc11b4(uVar4, puVar8, 0x1000, 4);\n            if (iVar2 == 0) {\n                *puVar8 = 0;\n                return;\n            }\n        }\n        puVar6 = *puVar6;\n    } while( true );\n}\n",
        "token_count": 384
    },
    "00fc15b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc15b0(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    \n    uVar5 = in_EAX + 0xfffU & 0xfffff000;\n    uVar4 = in_EAX + param_2 & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar4 - uVar5;\n    for (puVar6 = *0xfdc5d4; puVar6 != 0xfdc5d4; puVar6 = *puVar6) {\n        uVar1 = puVar6[2];\n        uVar3 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar3 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar4 < puVar6[3] + uVar1) {\n            uVar7 = uVar4;\n        }\n        if (uVar3 < uVar7) {\n            iVar2 = fcn.00fc11bc(uVar3, uVar7 - uVar3, 0x4000);\n            if (iVar2 == 0) {\n                *0xfdc5b0 = 2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00fc1a14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc1a14(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX == *0xfdc600) {\n        *0xfdc600 = in_EAX[1];\n    }\n    piVar1 = in_EAX[1];\n    iVar2 = in_EAX[2];\n    if (iVar2 < 0x1001) {\n        if (in_EAX != piVar1) {\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + 3;\n            }\n            *(*0xfdc60c + -0xc + (iVar2 >> 2) * 4) = piVar1;\n            iVar2 = *in_EAX;\n            *piVar1 = iVar2;\n            *(iVar2 + 4) = piVar1;\n            return;\n        }\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + 3;\n        }\n        *(*0xfdc60c + -0xc + (iVar2 >> 2) * 4) = 0;\n    }\n    else {\n        iVar2 = *in_EAX;\n        *piVar1 = iVar2;\n        *(iVar2 + 4) = piVar1;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00fc1a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00fc1a78(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = *0xfdc610;\n    while( true ) {\n        if (puVar1 == 0xfdc610) {\n            *0xfdc5b0 = 3;\n            return NULL;\n        }\n        if ((puVar1[2] <= in_EAX) && (in_EAX < puVar1[2] + puVar1[3])) break;\n        puVar1 = *puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 133
    },
    "00fc1afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc1afc(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    \n    if (0xb < param_2) {\n        *in_EAX = param_2 | 2;\n        fcn.00fc1ad8();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n    }\n    *(in_EAX + param_2) = *(in_EAX + param_2) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 132
    },
    "00fc1b94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00fc1b94(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = *in_EAX;\n    if ((uVar1 & 0x80000000) != 0) {\n        uVar3 = uVar1 & 0x7ffffffc;\n        in_EAX = in_EAX + uVar3;\n        uVar1 = *in_EAX;\n    }\n    if ((uVar1 & 2) == 0) {\n        fcn.00fc1a14();\n        uVar3 = uVar3 + in_EAX[2];\n        puVar2 = in_EAX + in_EAX[2];\n        *puVar2 = *puVar2 & 0xfffffffe;\n    }\n    return uVar3;\n}\n",
        "token_count": 208
    },
    "00fc1c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc1c7c(uint param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t **in_EAX;\n    \n    in_EAX[2] = param_2;\n    *(in_EAX + param_2 + -4) = param_2;\n    if (param_2 < 0x1001) {\n        if (param_2 < 0) {\n            param_2 = param_2 + 3;\n        }\n        ppiVar1 = *(*0xfdc60c + -0xc + (param_2 >> 2) * 4);\n        if (ppiVar1 == NULL) {\n            *(*0xfdc60c + -0xc + (param_2 >> 2) * 4) = in_EAX;\n            in_EAX[1] = in_EAX;\n            *in_EAX = in_EAX;\n        }\n        else {\n            piVar2 = *ppiVar1;\n            in_EAX[1] = ppiVar1;\n            *in_EAX = piVar2;\n            *ppiVar1 = in_EAX;\n            piVar2[1] = in_EAX;\n        }\n    }\n    else {\n        if ((0x3bff < param_2) && (cVar4 = fcn.00fc1bcc(),  cVar4 != '\\0')) {\n            return;\n        }\n        ppiVar1 = *0xfdc600;\n        piVar2 = **0xfdc600;\n        ppiVar3 = in_EAX;\n        in_EAX[1] = *0xfdc600;\n        *0xfdc600 = ppiVar3;\n        *in_EAX = piVar2;\n        *ppiVar1 = in_EAX;\n        piVar2[1] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 433
    },
    "00fc1e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00fc1e3c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (in_EAX < 0) {\n        in_EAX = in_EAX + 3;\n    }\n    iVar1 = in_EAX >> 2;\n    if (iVar1 < 0x401) {\n        do {\n            iVar2 = *(*0xfdc60c + -0xc + iVar1 * 4);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n    }\n    return iVar2;\n}\n",
        "token_count": 165
    },
    "00fc2628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc2628(uint32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar1 = param_1 >> 2;\n    if (in_EAX < param_2) {\n        puVar2 = (param_1 - 4) + in_EAX;\n        param_2 = (param_1 - 4) + param_2;\n        if (-1 < iVar1) {\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *param_2 = *puVar2;\n                puVar2 = puVar2 + -1;\n                param_2 = param_2 + -1;\n            }\n            puVar3 = puVar2 + 3;\n            puVar4 = param_2 + 3;\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n            }\n        }\n    }\n    else if ((param_2 != in_EAX) && (-1 < iVar1)) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "00fc27b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc27b4(void)\n\n{\n    int32_t iVar1;\n    uchar auStack8 [8];\n    \n    iVar1 = fcn.00fc1170();\n    if (iVar1 != 0) {\n        *0xfdb008 = auStack8;\n        return;\n    }\n    *0xfdb008 = fcn.00fc1178();\n    return;\n}\n",
        "token_count": 86
    },
    "00fc2834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc2834(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    \n    uVar3 = *param_2;\n    uVar2 = *in_EAX + uVar3;\n    if (((!CARRY1(*in_EAX, uVar3)) && (uVar2 <= param_1)) ||\n       (uVar3 = param_1 - *in_EAX,  uVar2 = param_1,  *in_EAX <= param_1 && uVar3 != 0)) {\n        uVar1 = *in_EAX;\n        *in_EAX = uVar2;\n        puVar5 = param_2 + 1;\n        puVar6 = in_EAX + uVar1 + 1;\n        for (uVar4 = uVar3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "00fc2bc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00fc2bc4(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 35
    },
    "00fc2bcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc2bcc(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00fc2cec();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.00fc2d44();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00fc3508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3508(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00fc2550();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "00fc35a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00fc35a8(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00fc2530();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 119
    },
    "00fc36dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc36dc(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.00fc35a8();\n    if (param_2 != NULL) {\n        fcn.00fc2628();\n    }\n    fcn.00fc34e4();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 187
    },
    "00fc3748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3748(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.00fc35a8();\n    if (param_2 != NULL) {\n        fcn.00fc2628();\n    }\n    fcn.00fc34e4();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 180
    },
    "00fc3760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3760(uint32_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t arg_8h;\n    int16_t *piVar3;\n    bool bVar4;\n    \n    bVar4 = true;\n    uVar2 = param_1;\n    piVar3 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        bVar4 = *piVar3 == 0;\n        piVar3 = piVar3 + 1;\n    } while (!bVar4);\n    if (bVar4) {\n        uVar2 = ~uVar2;\n    }\n    arg_8h = uVar2 + param_1;\n    if (arg_8h < 1) {\n        fcn.00fc34e4(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00fc3604(arg_8h),  -1 < iVar1)) {\n        fcn.00fc35d4();\n    }\n    else {\n        fcn.00fc3b1c();\n        fcn.00fc3604(arg_8h);\n        fcn.00fc3b1c();\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "00fc3798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3798(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    if (*in_EAX != 0) {\n        if (param_2 == *in_EAX) {\n            fcn.00fc3b1c();\n        }\n        else {\n            fcn.00fc3b1c();\n        }\n        fcn.00fc2628();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.00fc35a8(param_2);\n            fcn.00fc2628();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00fc2550();\n        }\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00fc37dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc37dc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                iVar3 = fcn.00fc35a8();\n                fcn.00fc2628();\n                fcn.00fc2628();\n                if (iVar3 != 0) {\n                    *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                }\n                fcn.00fc3538();\n                return;\n            }\n            fcn.00fc3538();\n        }\n        if (param_1 == 0) {\n            return;\n        }\n        iVar3 = param_1;\n        if (*in_EAX != 0) {\n            if (param_1 == *in_EAX) {\n                fcn.00fc3b1c();\n            }\n            else {\n                fcn.00fc3b1c();\n            }\n            fcn.00fc2628();\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.00fc35a8(iVar3);\n            fcn.00fc2628();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00fc2550();\n        }\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "00fc3850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3850(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar3 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    iVar2 = param_2;\n    if ((piVar1 != NULL) && (*in_EAX == piVar1)) {\n        iVar2 = param_2 + -1;\n        piVar3 = piVar1;\n    }\n    do {\n        if ((*(&stack0x00000000 + iVar2 * 4) != NULL) && (piVar3 == *(&stack0x00000000 + iVar2 * 4))) {\n            piVar3 = NULL;\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (piVar3 == NULL) {\n        iStack24 = fcn.00fc35a8();\n    }\n    else {\n        fcn.00fc3b1c();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar3 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.00fc2628();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar3 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.00fc3538();\n    }\n    // WARNING: Could not recover jumptable at 0x00fc38d7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 470
    },
    "00fc39f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc39f0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.00fc34e4();\n    }\n    else {\n        fcn.00fc35d4();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00fc3a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3a30(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00fc39e0();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.00fc2628();\n            fcn.00fc3b1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00fc3a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc3a78(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00fc3b1c();\n        fcn.00fc2628();\n        fcn.00fc2628();\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00fc3bf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3bf4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            fcn.00fc1158(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 126
    },
    "00fc3d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3d88(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4);\n    }\n    if (arg_8h < 1) {\n        fcn.00fc3bdc(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00fc3624(arg_8h),  0 < iVar1)) {\n        fcn.00fc3cd0();\n    }\n    else {\n        fcn.00fc410c();\n        fcn.00fc3624(arg_8h);\n        fcn.00fc410c();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00fc3cf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc3cf4(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    char *pcVar2;\n    \n    arg_8h = 0;\n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 4) {\n            if (pcVar2[1] == '\\0') {\ncode_r0x00fc3d15:\n                pcVar2 = pcVar2 + 1;\n                break;\n            }\n            if (pcVar2[2] == '\\0') {\ncode_r0x00fc3d14:\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00fc3d15;\n            }\n            if (pcVar2[3] == '\\0') {\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00fc3d14;\n            }\n        }\n        arg_8h = pcVar2 - param_2;\n    }\n    if (arg_8h < 1) {\n        fcn.00fc3bdc(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00fc3624(arg_8h),  0 < iVar1)) {\n        fcn.00fc3cd0();\n    }\n    else {\n        fcn.00fc410c();\n        fcn.00fc3624(arg_8h);\n        fcn.00fc410c();\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "00fc3d6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc25ec)\n\nuint * __fastcall fcn.00fc3d6c(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *in_EAX;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    \n    bVar6 = true;\n    uVar4 = param_1;\n    piVar5 = param_2;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        bVar6 = *piVar5 == 0;\n        piVar5 = piVar5 + 2;\n    } while (!bVar6);\n    if (bVar6) {\n        uVar4 = ~uVar4;\n    }\n    if (uVar4 + param_1 != 0) {\n        iVar2 = fcn.00fc1148(param_2, uVar4 + param_1);\n        if (iVar2 != 0) {\n            iVar1 = *param_2;\n            *param_2 = iVar2;\n            puVar3 = fcn.00fc1158(iVar1);\n            return puVar3;\n        }\n        if (*0xfdc008 != NULL) {\n            (**0xfdc008)();\n        }\n        puVar3 = fcn.00fc25c0();\n        return puVar3;\n    }\n    puVar3 = *in_EAX;\n    if (puVar3 != NULL) {\n        *in_EAX = 0;\n        in_EAX = puVar3;\n        fcn.00fc1158();\n    }\n    return in_EAX;\n}\n",
        "token_count": 391
    },
    "00fc3db4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc3db4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00fc3da8();\n    if (iVar1 != 0) {\n        iVar1 = fcn.00fc3da8();\n        fcn.00fc3bb4();\n        if (0 < iVar1) {\n            fcn.00fc2628();\n        }\n        fcn.00fc2628();\n        fcn.00fc3bcc();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00fc3e14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc3e14(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00fc3da8();\n    iVar2 = fcn.00fc3da8();\n    if ((iVar1 != 0) || (iVar2 != 0)) {\n        fcn.00fc3bb4();\n        fcn.00fc2628();\n        fcn.00fc2628();\n        fcn.00fc3bcc();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00fc410c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc410c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00fc3bb4();\n        iVar1 = fcn.00fc3da8();\n        if (0 < iVar1) {\n            fcn.00fc2628();\n        }\n    }\n    fcn.00fc3bcc();\n    return;\n}\n",
        "token_count": 100
    },
    "00fc4170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc4170(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00fc41a0();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 125
    },
    "00fc4234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc4234(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00fc4280();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00fc4804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc4804(void)\n\n{\n    fcn.00fc4678(&stack0x00000004);\n    return;\n}\n",
        "token_count": 32
    },
    "00fc5088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc5088(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0xfc509c;\n    fcn.00fc3980();\n    uStack28 = 0xfc5107;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00fc3538();\n    iVar2 = fcn.00fc3790();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            cVar1 = *(*param_2 + -1 + iVar4);\n            if ((cVar1 + 0x9fU < 0x1a) || (cVar1 + 0x20U < 0x20)) {\n                iVar3 = fcn.00fc39e8();\n                *(iVar3 + -1 + iVar4) = *(*param_2 + -1 + iVar4) + -0x20;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0xfc510e;\n    uStack28 = 0xfc5106;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 367
    },
    "00fc5114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc5114(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0xfc512a;\n    fcn.00fc3980();\n    uStack20 = 0xfc517b;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00fc5088(*0xfdc66c);\n    uVar1 = 0xfc5190;\n    fcn.00fc3850(0xfc5190, var_8h);\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc3508(0xfc5182);\n    return;\n}\n",
        "token_count": 206
    },
    "00fc525c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fc525c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0xfc5276;\n    fcn.00fc3980();\n    puStack36 = 0xfc527e;\n    fcn.00fc3980();\n    puStack36 = 0xfc5286;\n    fcn.00fc3980();\n    puStack36 = 0xfc528e;\n    fcn.00fc3980();\n    puStack36 = 0xfc5296;\n    fcn.00fc3980();\n    puStack36 = 0xfc529e;\n    fcn.00fc3980();\n    uStack40 = 0xfc5413;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    var_10h = fcn.00fc4648();\n    if (-1 < var_10h + -1) {\n        bVar2 = true;\n        do {\n            fcn.00fc38dc();\n            if (bVar2) {\n                fcn.00fc38dc();\n                if (bVar2) {\n                    fcn.00fc38dc();\n                    if (bVar2) {\n                        fcn.00fc38dc();\n                        if (bVar2) {\n                            fcn.00fc38dc();\n                            if (bVar2) {\n                                fcn.00fc38dc();\n                                if (bVar2) goto code_r0x00fc53eb;\n                            }\n                        }\n                    }\n                }\n            }\n            var_10h = var_10h + -1;\n            bVar2 = var_10h == 0;\n        } while (!bVar2);\n    }\n    iVar1 = fcn.00fc4648();\n    fcn.00fc4804(iVar1 + 1);\n    fcn.00fc4648();\n    fcn.00fc3538();\n    fcn.00fc4648();\n    fcn.00fc3538();\n    fcn.00fc4648();\n    fcn.00fc3538();\n    fcn.00fc4648();\n    fcn.00fc3538();\n    fcn.00fc4648();\n    fcn.00fc3538();\n    fcn.00fc4648();\n    fcn.00fc3538();\n    *0xfdb0b8 = *0xfdb0b8 + 1;\n    fcn.00fc5114();\ncode_r0x00fc53eb:\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0xfc541a;\n    uStack40 = 0xfc5405;\n    fcn.00fc3508();\n    uStack40 = 0xfc5412;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 695
    },
    "00fc5f18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc5f18(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0xfdc770 = *0xfdc770 + 1;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 85
    },
    "00fc5f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00fc5f80(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    bool bVar4;\n    \n    if (in_EAX != 0) {\n        param_1 = param_1 + -1;\n        iVar1 = *(in_EAX + -4) - param_1;\n        if (iVar1 != 0 && param_1 <= *(in_EAX + -4)) {\n            bVar4 = in_EAX + param_1 == NULL;\n            pcVar2 = in_EAX + param_1;\n            do {\n                pcVar3 = pcVar2;\n                if (iVar1 == 0) break;\n                iVar1 = iVar1 + -1;\n                pcVar3 = pcVar2 + 1;\n                bVar4 = param_2 == *pcVar2;\n                pcVar2 = pcVar3;\n            } while (!bVar4);\n            if (bVar4) {\n                return pcVar3 - in_EAX;\n            }\n        }\n        in_EAX = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 268
    },
    "00fc6144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc6144(char param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0xfc6164;\n    fcn.00fc3980();\n    puStack32 = 0xfc616c;\n    fcn.00fc3980();\n    uStack36 = 0xfc61f4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = fcn.00fc3790();\n    uVar3 = 0xfc618c;\n    iVar2 = fcn.00fc3790();\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        if (param_1 == '\\0') {\n            fcn.00fc633c();\n            fcn.00fc357c();\n            fcn.00fc633c();\n            fcn.00fc357c();\n        }\n        uVar3 = 0x2a;\n        fcn.00fc6004(0x2a);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack36 = 0xfc61fb;\n    uStack40 = 0xfc61f3;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 351
    },
    "00fc633c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc633c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0xfc6350;\n    fcn.00fc3980();\n    uStack28 = 0xfc63bb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00fc3538();\n    iVar2 = fcn.00fc3790();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            cVar1 = *(*param_2 + -1 + iVar4);\n            if ((cVar1 + 0x9fU < 0x1a) || (cVar1 + 0x20U < 0x20)) {\n                iVar3 = fcn.00fc39e8();\n                *(iVar3 + -1 + iVar4) = *(*param_2 + -1 + iVar4) + -0x20;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0xfc63c2;\n    uStack28 = 0xfc63ba;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 368
    },
    "00fc65f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc65f0(void)\n\n{\n    int32_t iVar1;\n    uint uStack520;\n    uchar auStack516 [512];\n    \n    uStack520 = 0xff;\n    iVar1 = (***0xfdb380)(auStack516, &uStack520);\n    if (iVar1 == 0) {\n        fcn.00fc3bdc();\n    }\n    else {\n        fcn.00fc3d6c();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00fc6634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc6634(void)\n\n{\n    int32_t iVar1;\n    uint uStack520;\n    uchar auStack516 [512];\n    \n    uStack520 = 0x100;\n    iVar1 = (***0xfdb454)(auStack516, &uStack520);\n    if (iVar1 == 0) {\n        fcn.00fc3bdc();\n    }\n    else {\n        fcn.00fc3d6c();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00fc680c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc680c(uint param_1)\n\n{\n    fcn.00fc67c0(param_1);\n    fcn.00fc35d4();\n    return;\n}\n",
        "token_count": 44
    },
    "00fc6834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc6834(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0xfc684d;\n    fcn.00fc3980();\n    uStack36 = 0xfc68f5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    iVar2 = fcn.00fc3790();\n    if (0 < iVar2) {\n        iVar3 = 1;\n        do {\n            cVar1 = *(in_EAX + -1 + iVar3);\n            if ((cVar1 + 0xbfU < 0x1a) || (cVar1 + 0x9fU < 0x1a)) {\n                fcn.00fc36cc();\n                fcn.00fc3798();\n            }\n            else {\n                fcn.00fc680c(0xfc690c, *param_2);\n                uStack40 = 0;\n                fcn.00fc3850();\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0xfc68fc;\n    uStack36 = 0xfc68ec;\n    fcn.00fc3508();\n    uStack36 = 0xfc68f4;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 418
    },
    "00fc6b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fc6b08(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0xfc6b24;\n    fcn.00fc3980();\n    uStack40 = 0xfc6bb8;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00fc357c();\n    iVar1 = fcn.00fc3790();\n    iVar2 = fcn.00fc3790();\n    iVar4 = 1;\n    if (0 < iVar1) {\n        iVar5 = 1;\n        do {\n            iVar3 = fcn.00fc39e8();\n            *(iVar3 + -1 + iVar5) = *(in_EAX + -1 + iVar5) ^ *(iVar4 + -1);\n            iVar4 = iVar4 + 1;\n            if (iVar2 < iVar4) {\n                iVar4 = 1;\n            }\n            iVar5 = iVar5 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.00fc3538();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0xfc6bbf;\n    uStack40 = 0xfc6baf;\n    fcn.00fc34e4();\n    uStack40 = 0xfc6bb7;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 419
    },
    "00fc6bd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc6bd8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uchar *puStack532;\n    uint uStack528;\n    uchar auStack524 [4];\n    uint uStack520;\n    \n    puStack532 = &stack0xfffffdf4;\n    uStack520 = 0x100;\n    uStack528 = 0xfc6bf5;\n    fcn.00fc3c18();\n    uStack528 = 0;\n    uStack536 = 0;\n    uStack540 = 0x20019;\n    uStack544 = 0;\n    uStack548 = 0;\n    uStack552 = 0;\n    uStack556 = 0xfc6c74;\n    uVar2 = 0x80000002;\n    iVar1 = (***0xfdb194)(0x80000002);\n    if (iVar1 == 0) {\n        iVar1 = (***0xfdb398)(uVar2, 0xfc6cd0, 0, 0, &stack0xfffffdd8, &stack0xfffffdd4);\n        if (iVar1 == 0) {\n            fcn.00fc3d6c();\n        }\n        (***0xfdb1fc)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00fc6e6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00fc6e6c(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack552;\n    uint uStack548;\n    uchar *puStack544;\n    uint var_214h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack544 = 0xfc6e86;\n    fcn.00fc4150();\n    puStack544 = 0xfc6e8e;\n    fcn.00fc4150();\n    uStack548 = 0xfc6f1f;\n    uStack552 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd8;\n    var_10h = 0xfe;\n    var_214h._0_2_ = 0;\n    puStack544 = &stack0xfffffffc;\n    fcn.00fc3d98(0, 0x20119, &fcn.00fc6e6c::var_14h);\n    (***0xfdb1a4)();\n    uVar1 = fcn.00fc3d98(0, &fcn.00fc6e6c::var_ch, &fcn.00fc6e6c::var_214h, &fcn.00fc6e6c::var_10h);\n    (***0xfdb398)(var_14h, uVar1);\n    fcn.00fc3d6c();\n    *in_FS_OFFSET = var_14h;\n    fcn.00fc3bf4(0xfc6f26);\n    return;\n}\n",
        "token_count": 379
    },
    "00fc709c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fc709c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0xfc70f9;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    fcn.00fc297c();\n    fcn.00fc3d60();\n    fcn.00fc3c18();\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0xfc7100;\n    uStack280 = 0xfc70f8;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 175
    },
    "00fc717c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fc717c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0xfc7194;\n    fcn.00fc4150();\n    puStack24 = 0xfc719c;\n    fcn.00fc4150();\n    puStack24 = 0xfc71a4;\n    fcn.00fc4150();\n    uStack28 = 0xfc7217;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while( true ) {\n        iVar1 = fcn.00fc40bc();\n        if (iVar1 == 0) break;\n        fcn.00fc40bc();\n        fcn.00fc3da8();\n        fcn.00fc3f90();\n        fcn.00fc4020();\n    }\n    fcn.00fc3c18();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0xfc721e;\n    uStack28 = 0xfc7216;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 302
    },
    "00fc7360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc7360(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0xfc7375;\n    var_8h = param_2;\n    fcn.00fc4150();\n    puStack24 = 0xfc737d;\n    fcn.00fc3980();\n    uStack28 = 0xfc73f4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    uVar1 = fcn.00fc3d98(0xc0000000, 3, 0, 2, 0, 0);\n    uVar1 = (***0xfdb3c8)(uVar1);\n    uVar2 = fcn.00fc3790(&fcn.00fc7360::var_ch, 0);\n    uVar2 = fcn.00fc39e8(uVar2);\n    fcn.00fc4ee8(uVar1, uVar2);\n    (***0xfdb1b4)();\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc34e4(0xfc73fb);\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 338
    },
    "00fc7400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fc7400(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint in_stack_ffffffd4;\n    uint *arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0xfc741c;\n    fcn.00fc4150();\n    puStack28 = 0xfc7424;\n    fcn.00fc4150();\n    puStack28 = 0xfc742c;\n    fcn.00fc4150();\n    uStack32 = 0xfc74d8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    bVar2 = true;\n    fcn.00fc3ec0();\n    if (!bVar2) {\n        bVar2 = true;\n        fcn.00fc3ec0();\n        if (!bVar2) {\n            bVar2 = true;\n            fcn.00fc3ec0();\n            if (!bVar2) {\n                iVar1 = fcn.00fc40bc();\n                if (iVar1 != 0) {\n                    fcn.00fc3da8();\n                    arg_8h_00 = &fcn.00fc7400::var_8h;\n                    fcn.00fc3da8();\n                    fcn.00fc3f44(arg_8h_00);\n                    in_stack_ffffffd4 = 0xfc74a6;\n                    iVar1 = fcn.00fc40bc();\n                    if (0 < iVar1) {\n                        fcn.00fc3f44(arg_8h);\n                        in_stack_ffffffd4 = arg_8h;\n                    }\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0xfc74df;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 476
    },
    "00fc76b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc76b4(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = 0xfc76cc;\n    var_4h = param_2;\n    fcn.00fc4150();\n    puStack40 = 0xfc76d4;\n    fcn.00fc4150();\n    uStack44 = 0xfc775a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_10h = 0xffffffff;\n    var_ch = 4;\n    puStack40 = &stack0xfffffffc;\n    fcn.00fc3d98(0, 0x20019, &fcn.00fc76b4::var_14h);\n    (***0xfdb1a4)();\n    uVar1 = fcn.00fc3d98(0, &fcn.00fc76b4::var_ch, &fcn.00fc76b4::var_18h, &fcn.00fc76b4::var_10h);\n    (***0xfdb398)(var_14h, uVar1);\n    (***0xfdb1fc)();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00fc3bf4(0xfc7761);\n    return;\n}\n",
        "token_count": 368
    },
    "00fc7a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc7a18(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00fc4804(0);\n    fcn.00fc3790();\n    while( true ) {\n        iVar1 = fcn.00fc79ac();\n        if (iVar1 < 1) break;\n        iVar1 = fcn.00fc4648();\n        fcn.00fc4804(iVar1 + 1);\n        fcn.00fc4648();\n        fcn.00fc39f0();\n    }\n    iVar1 = fcn.00fc4648();\n    fcn.00fc4804(iVar1 + 1);\n    iVar1 = fcn.00fc4648();\n    fcn.00fc3790(*param_1 + -4 + iVar1 * 4);\n    fcn.00fc39f0();\n    return;\n}\n",
        "token_count": 201
    },
    "00fc8180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "access PEB ldr_data",
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d"
        ],
        "decompiled_code": "\nvoid fcn.00fc8180(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0xfc8196;\n    fcn.00fc3980();\n    uStack20 = 0xfc8def;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00fc7a18();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3d88();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3d88();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3538();\n    fcn.00fc3d88();\n    fcn.00fc3d88();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0xfc8df6;\n    uStack20 = 0xfc8de6;\n    fcn.00fc4810();\n    uStack20 = 0xfc8dee;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 1830
    },
    "00fc99c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fc99c0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint uStack640;\n    uint uStack636;\n    uchar *puStack632;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    \n    puStack632 = &stack0xfffffffc;\n    uVar4 = 1;\n    uStack636 = 0xfc9b45;\n    uStack640 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack640;\n    fcn.00fc4e60(*0xfdca58);\n    fcn.00fc3e14(&var_250h);\n    uVar1 = fcn.00fc3d98();\n    uVar1 = (***0xfdb2d8)(uVar1);\n    do {\n        fcn.00fc3d6c();\n        fcn.00fc3ec0();\n        if (!uVar4) {\n            fcn.00fc3d6c();\n            fcn.00fc3ec0();\n            if (!uVar4) {\n                fcn.00fc3d6c(0xfc9b78, *0xfdca5c);\n                fcn.00fc3e78(0);\n                uVar2 = fcn.00fc3d98();\n                (***0xfdb3e8)(uVar2);\n            }\n        }\n        iVar3 = (***0xfdb198)(uVar1, &var_250h);\n        uVar4 = iVar3 == 0;\n    } while (!uVar4);\n    (***0xfdb3ec)(uVar1);\n    fcn.00fc62fc();\n    uVar1 = fcn.00fc3d98();\n    (***0xfdb320)(uVar1);\n    uVar1 = fcn.00fc3d98();\n    (***0xfdb11c)();\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc3bf4(0xfc9b4c);\n    return;\n}\n",
        "token_count": 499
    },
    "00fc9c28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00fc9c28(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint arg_8h_00;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 8;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0xfc9c47;\n    fcn.00fc4150();\n    puVar1 = *0xfdb3cc;\n    var_1ch = 0xfc9e88;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fc9c28::var_20h;\n    var_24h = NULL;\n    var_28h = 0xfc9c75;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc4804();\n    var_24h = 0xfc9c83;\n    fcn.00fc7228();\n    var_24h = &fcn.00fc9c28::var_1ch;\n    var_28h = 0xfc9ea0;\n    var_2ch = **0xfdb1f0;\n    var_30h = 0xfc9eac;\n    fcn.00fc3850();\n    fcn.00fc74e8(var_30h);\n    fcn.00fc357c();\n    while( true ) {\n        fcn.00fc3850(0xfc9ed4, *puVar1, 0xfc9ea0);\n        iVar2 = fcn.00fc3ad4();\n        if (iVar2 == 0) break;\n        fcn.00fc37dc(&fcn.00fc9c28::var_ch);\n        arg_8h_00 = *puVar1;\n        fcn.00fc3850(0xfc9ed4, arg_8h_00, 0xfc9ea0, var_24h);\n        fcn.00fc74e8(arg_8h_00);\n        fcn.00fc3ad4(&fcn.00fc9c28::var_10h);\n        fcn.00fc39f0();\n        arg_8h = &fcn.00fc9c28::var_14h;\n        fcn.00fc37dc();\n        fcn.00fc74e8(arg_8h);\n        var_30h = &fcn.00fc9c28::var_30h;\n        fcn.00fc37dc();\n        fcn.00fc74e8(var_30h);\n        fcn.00fc37dc();\n        fcn.00fc37dc();\n        fcn.00fc3ad4();\n        fcn.00fc3a30();\n        iVar2 = fcn.00fc3790();\n        if (0 < iVar2) {\n            fcn.00fc37dc();\n            iVar2 = fcn.00fc3790();\n            if (0 < iVar2) {\n                iVar2 = fcn.00fc4648();\n                fcn.00fc4804(iVar2 + 1);\n            }\n        }\n        fcn.00fc4648();\n        fcn.00fc3538();\n        fcn.00fc4648();\n        fcn.00fc3538();\n        fcn.00fc4648();\n        fcn.00fc3538();\n    }\n    *in_FS_OFFSET = 0xfc9ed4;\n    fcn.00fc3508(0xfc9e8f);\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 1033
    },
    "00fca610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fca610(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint auStack20 [2];\n    uchar auStack12 [8];\n    \n    uVar2 = 0;\n    auStack20[0] = param_2;\n    iVar1 = (**0xfdca64)(auStack20, 0, 0, 0, 0, 1, auStack12);\n    if (iVar1 == 0) {\n        fcn.00fc3538();\n    }\n    else {\n        fcn.00fc36dc();\n        fcn.00fc3b1c();\n        fcn.00fc4ed8(uVar2);\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00fca6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00fca6f0(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 10;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_ch = 0;\n    var_18h = 0xfca716;\n    var_14h = unaff_EBX;\n    fcn.00fc4150();\n    var_18h = 0xfca71e;\n    fcn.00fc4150();\n    var_18h = 0xfca726;\n    fcn.00fc4150();\n    var_1ch = 0xfca99b;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fca6f0::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc34e4();\n    (***0xfdb1c4)();\n    fcn.00fc709c();\n    fcn.00fc6fdc(var_34h);\n    fcn.00fc3e78(0xfca9b0, var_38h);\n    fcn.00fc78d8();\n    fcn.00fc62fc();\n    fcn.00fc3e78(var_38h, 0xfca9d4, var_40h);\n    fcn.00fc78d8();\n    uVar2 = fcn.00fc3d98();\n    arg_8h_00 = fcn.00fc3d98();\n    (***0xfdb44c)();\n    fcn.00fc377c();\n    fcn.00fc4b58();\n    fcn.00fc3d88();\n    cVar1 = fcn.00fc776c();\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.00fc3990(&fcn.00fca6f0::var_10h);\n        iVar4 = (***0xfdb140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00fc3990(0xffffffff, &fcn.00fca6f0::var_14h, &fcn.00fca6f0::var_18h);\n            iVar4 = (***0xfdb2d4)(var_10h, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0xfdb384)(var_14h),  iVar4 == 100) {\n                    uVar3 = (***0xfdb414)(var_14h, 2);\n                    (***0xfdb1dc)(var_14h, 2, uVar3);\n                    fcn.00fca610();\n                    iVar4 = fcn.00fc3790();\n                    uVar3 = var_14h;\n                    if (iVar4 != 0) {\n                        (***0xfdb1dc)(var_14h, 1);\n                        fcn.00fc36dc();\n                        fcn.00fc377c(var_1ch, uVar3);\n                        (***0xfdb1dc)(var_14h, 0, 0xfca8b4);\n                        fcn.00fc36dc();\n                        fcn.00fc377c(0);\n                        fcn.00fc525c(arg_8h_00, uVar2, 0xffffffff);\n                    }\n                }\n            }\n        }\n        (***0xfdb46c)(var_14h);\n        (***0xfdb20c)(var_10h);\n        fcn.00fc3d88();\n        uVar2 = fcn.00fc3d98();\n        (***0xfdb3e8)(uVar2);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00fc3508(0xfca9a2);\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3508();\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 1371
    },
    "00fca9e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fca9e4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack704;\n    uint uStack700;\n    uchar *puStack696;\n    uint uStack692;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint *puStack668;\n    uint uStack664;\n    uint uStack660;\n    uchar *puStack656;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_234h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_270h = 0;\n    var_268h = 0;\n    var_26ch = 0;\n    var_264h = 0;\n    puStack656 = 0xfcaa2d;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    puStack656 = 0xfcaa35;\n    fcn.00fc4150();\n    uStack660 = 0xfcabd6;\n    uStack664 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd68;\n    puStack668 = 0xfcaa4b;\n    puStack656 = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    puStack668 = &fcn.00fca9e4::var_260h;\n    uStack672 = 0xfcaa65;\n    fcn.00fc3e14();\n    uStack672 = 0xfcaa70;\n    uStack672 = fcn.00fc3d98();\n    uStack676 = 0xfcaa7a;\n    var_10h = (***0xfdb2d8)();\n    do {\n        uStack676 = var_4h;\n        uStack680 = 0xfcabf8;\n        uStack684 = 0xfcaa9b;\n        fcn.00fc3d6c();\n        uStack684 = var_26ch;\n        uStack688 = 0xfcabf8;\n        uStack692 = **0xfdb3d8;\n        puStack696 = 0xfcaabd;\n        fcn.00fc3e78();\n        puStack696 = 0xfcaac8;\n        cVar1 = fcn.00fc776c();\n        if (cVar1 != '\\0') {\n            uStack700 = 0xfcab78;\n            uStack704 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd40;\n            puStack696 = &stack0xfffffffc;\n            fcn.00fc3d6c(&fcn.00fca9e4::var_270h, *var_ch);\n            fcn.00fc3d6c(0xfcabf8, var_4h, 0);\n            uVar3 = 0xfcabf8;\n            fcn.00fc3e78(**0xfdb3d8, 0xfcabf8, 0);\n            fcn.00fca6f0(uVar3);\n            uVar3 = 0xfcac00;\n            fcn.00fc3e78(0xfcac00, var_270h);\n            *in_FS_OFFSET = uVar3;\n        }\n        iVar2 = (***0xfdb198)(var_10h, &fcn.00fca9e4::var_260h);\n    } while (iVar2 != 0);\n    uStack676 = var_10h;\n    uStack680 = 0xfcabab;\n    (***0xfdb3ec)();\n    *in_FS_OFFSET = uStack676;\n    puStack668 = 0xfcabdd;\n    uStack672 = 0xfcabc8;\n    fcn.00fc3bf4();\n    uStack672 = 0xfcabd5;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 958
    },
    "00fcb25c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fcb25c(void)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar4;\n    int32_t *piStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = NULL;\n    var_ch = 0;\n    uStack80 = 0xfcb3a9;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    fcn.00fcb1a4(0);\n    iVar3 = 0;\n    fcn.00fc4804(1);\n    fcn.00fcb224();\n    fcn.00fc49a0();\n    uVar1 = fcn.00fc495c();\n    (**(**0xfdca78 + 0x1c))(*0xfdca78, uVar1);\n    piVar4 = var_4h;\n    (**(*var_4h + 0x1c))(var_4h, 0xfcb3cc, 0);\n    while( true ) {\n        iVar2 = (**(*var_4h + 0xc))(var_4h, 1, &var_34h, &var_8h);\n        if (iVar2 != 0) break;\n        iVar3 = iVar3 + 1;\n        fcn.00fc4804(iVar3);\n        fcn.00fc370c();\n        iVar2 = fcn.00fc3ad4();\n        if (iVar2 != 0) {\n            piVar4 = &var_ch;\n            fcn.00fc3ad4();\n            fcn.00fc39f0();\n        }\n        fcn.00fc3790();\n        uVar1 = fcn.00fc2530();\n        *(*in_EAX + -4 + iVar3 * 4) = uVar1;\n        fcn.00fc3790();\n        fcn.00fc4594();\n    }\n    *in_FS_OFFSET = piVar4;\n    fcn.00fc495c(0xfcb3b0);\n    fcn.00fc34e4();\n    fcn.00fc495c();\n    return;\n}\n",
        "token_count": 562
    },
    "00fcb47c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00fcb47c(void)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_28h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_ch = 0;\n    uStack64 = 0xfcb613;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    uVar2 = 0;\n    fcn.00fc34e4();\n    (***0xfdb27c)(&var_4h, 0, 0, 1, 0xf0000000);\n    arg_8h = var_4h;\n    iVar1 = (***0xfdb144)(var_4h, 0x8004, 0, 0, &var_8h);\n    if (iVar1 != 0) {\n        fcn.00fc3d24(0);\n        fcn.00fc3da8();\n        iVar1 = (***0xfdb3f0)(var_8h);\n        if (iVar1 != 0) {\n            var_10h = 0x14;\n            fcn.00fc4804(0x14);\n            iVar1 = (***0xfdb484)(var_8h, 2, var_ch, &var_10h, 0);\n            if (iVar1 != 0) {\n                (***0xfdb3e0)(var_8h);\n                (***0xfdb3b0)(var_4h, 0);\n                if (-1 < var_10h + -1) {\n                    var_14h = var_10h;\n                    iVar1 = 0;\n                    do {\n                        uVar2 = uVar2 + *(var_ch + iVar1);\n                        var_24h = *(var_ch + iVar1);\n                        var_20h._0_1_ = 0;\n                        fcn.00fc802c(&var_1ch);\n                        fcn.00fc3798();\n                        iVar1 = iVar1 + 1;\n                        var_14h = var_14h + -1;\n                    } while (var_14h != 0);\n                }\n                arg_8h = &var_28h;\n                var_24h = uVar2;\n                var_20h._0_1_ = 0;\n                fcn.00fc802c(arg_8h);\n                fcn.00fc3798();\n            }\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00fc34e4(0xfcb61a);\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    fcn.00fc4810();\n    return;\n}\n",
        "token_count": 746
    },
    "00fcb634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00fcb634(void)\n\n{\n    uint16_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((in_EAX & 1) != 0);\n    }\n    uVar1 = in_EAX / *0xfcb668 == iVar2;\n    if (uVar1 != 0) {\n        return CONCAT44(in_EAX, CONCAT31(iVar2 >> 8 & 0xffff00 | in_EAX / *0xfcb668 < iVar2 | (uVar1 << 0xe) >> 8, 1));\n    }\n    return in_EAX << 0x20;\n}\n",
        "token_count": 174
    },
    "00fcb804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00fcb804(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_44h = 0;\n    var_40h = 0;\n    var_ch = 0;\n    var_14h = 0;\n    puStack92 = 0xfcb82e;\n    var_4h = in_EAX;\n    fcn.00fc4874();\n    puStack92 = 0xfcb836;\n    fcn.00fc3980();\n    uStack96 = 0xfcba26;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    var_10h = 0;\n    puVar7 = &fcn.00fcb804::var_18h;\n    uVar6 = 1;\n    uVar5 = 0;\n    iVar1 = (***0xfdb1a4)(0x80000001);\n    if (iVar1 == 0) {\n        var_1ch = 0x400;\n        uVar2 = fcn.00fc2530();\n        while( true ) {\n            iVar1 = (***0xfdb3a4)(var_18h, var_10h, uVar2, &fcn.00fcb804::var_1ch, 0, 0, 0, 0);\n            if (iVar1 == 0x103) break;\n            var_1ch = 0x400;\n            iVar1 = fcn.00fc4650();\n            if (-1 < iVar1) {\n                iVar1 = iVar1 + 1;\n                iVar4 = 0;\n                do {\n                    fcn.00fcb47c();\n                    (***0xfdb398)(var_18h, uVar2, 0, &fcn.00fcb804::var_20h, 0, &fcn.00fcb804::var_24h);\n                    fcn.00fc4804(var_24h);\n                    iVar3 = (***0xfdb398)(var_18h, uVar2, 0, &fcn.00fcb804::var_20h, var_ch, &fcn.00fcb804::var_24h);\n                    if (iVar3 == 0) {\n                        var_28h = var_ch;\n                        var_2ch = var_24h;\n                        var_38h = *(var_4h + iVar4 * 4);\n                        fcn.00fc3d24();\n                        iVar3 = fcn.00fc3da8();\n                        var_3ch = (iVar3 + 1) * 2;\n                        iVar3 = (***0xfdb338)(&fcn.00fcb804::var_2ch, 0, &fcn.00fcb804::var_3ch, 0, 0, 1, \n                                              &fcn.00fcb804::var_34h);\n                        if (iVar3 != 0) {\n                            fcn.00fc370c();\n                            fcn.00fcb66c(&fcn.00fcb804::var_44h, 0);\n                            fcn.00fc3798();\n                        }\n                    }\n                    iVar4 = iVar4 + 1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            fcn.00fc4f5c();\n            var_10h = var_10h + 1;\n        }\n    }\n    (***0xfdb1fc)();\n    *in_FS_OFFSET = var_18h;\n    fcn.00fc3508(0xfcba2d, uVar5, uVar6, puVar7);\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc4810();\n    fcn.00fc34e4();\n    fcn.00fc4810();\n    return;\n}\n",
        "token_count": 1081
    },
    "00fcba38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fcba38(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0xfcba51;\n    fcn.00fc3980();\n    uStack24 = 0xfcbaac;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    fcn.00fcb25c();\n    fcn.00fc3d98();\n    fcn.00fcb804(param_2);\n    *in_FS_OFFSET = param_2;\n    uStack24 = 0xfcbab3;\n    uStack28 = 0xfcbaa3;\n    fcn.00fc4810();\n    uStack28 = 0xfcbaab;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 238
    },
    "00fcbc24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fcbc24(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puVar2;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack48 = 0xfcbe02;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    fcn.00fc357c();\n    fcn.00fcbb90();\n    iVar1 = fcn.00fc3790();\n    if (iVar1 != 0) {\n        while (iVar1 = fcn.00fc3ad4(),  iVar1 != 0) {\n            fcn.00fc3ad4(&fcn.00fcbc24::var_8h);\n            fcn.00fc39f0();\n            fcn.00fc3ad4();\n            fcn.00fc3a30();\n            fcn.00fc3ad4(&fcn.00fcbc24::var_ch);\n            fcn.00fc39f0();\n            fcn.00fc3ad4();\n            fcn.00fc3790();\n            fcn.00fc3a30();\n            fcn.00fc3ad4(&fcn.00fcbc24::var_10h);\n            fcn.00fc39f0();\n            fcn.00fc3ad4();\n            fcn.00fc3790();\n            fcn.00fc3a30();\n            puVar2 = &fcn.00fcbc24::var_14h;\n            fcn.00fc3ad4();\n            fcn.00fc39f0();\n            fcn.00fc3ad4();\n            fcn.00fc3790();\n            fcn.00fc3a30();\n            iVar1 = fcn.00fc3790();\n            if ((iVar1 != 0) && (iVar1 = fcn.00fc3790(),  iVar1 != 0)) {\n                puVar2 = NULL;\n                fcn.00fc525c(0, var_14h, var_10h);\n            }\n        }\n    }\n    *in_FS_OFFSET = puVar2;\n    *in_FS_OFFSET = iStack52;\n    puStack44 = 0xfcbe09;\n    uStack48 = 0xfcbe01;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 640
    },
    "00fcbebc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fcbebc(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    uStack96 = 0xfcc0de;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack100;\n    uVar1 = fcn.00fc3990();\n    uVar1 = fcn.00fc3990(uVar1);\n    uVar1 = fcn.00fc4ec0(uVar1);\n    pcVar2 = fcn.00fc4e98(uVar1);\n    fcn.00fc3d88(&var_30h);\n    uVar1 = fcn.00fc3d98();\n    (*pcVar2)(uVar1);\n    fcn.00fc3d88(&var_40h);\n    uVar1 = fcn.00fc3d98();\n    (*pcVar2)(uVar1);\n    uVar1 = fcn.00fc3990();\n    iVar3 = fcn.00fc4ec0();\n    if (iVar3 != 0) {\n        uVar4 = fcn.00fc3990();\n        pcVar2 = fcn.00fc4e98(iVar3, uVar4);\n        uVar4 = fcn.00fc3990();\n        pcVar5 = fcn.00fc4e98(iVar3, uVar4);\n        uVar4 = fcn.00fc3990();\n        var_4h = fcn.00fc4e98(iVar3, uVar4);\n        var_8h = 0;\n        iVar3 = (*pcVar2)(&var_30h, 0, &var_ch);\n        if (iVar3 == 0) {\n            iVar3 = (*pcVar5)(var_ch, 0x200, &var_8h, &var_10h);\n            if ((iVar3 == 0) && (-1 < var_8h + -1)) {\n                iVar7 = 0;\n                iVar3 = var_8h;\n                do {\n                    fcn.00fc4810();\n                    iVar6 = (*var_4h)(var_ch, &var_40h, *(var_10h + 0x14 + iVar7 * 0x38), \n                                      *(var_10h + 0x18 + iVar7 * 0x38), 0, 0, 0, &var_14h);\n                    if (iVar6 == 0) {\n                        fcn.00fc370c();\n                        fcn.00fc370c();\n                        fcn.00fc370c();\n                        iVar6 = fcn.00fc3790();\n                        if (iVar6 != 0) {\n                            iVar6 = fcn.00fc3790();\n                            if (iVar6 != 0) {\n                                uVar1 = 0xfcc0f4;\n                                fcn.00fc525c(0xfcc0f4, var_20h, var_1ch);\n                            }\n                        }\n                    }\n                    iVar7 = iVar7 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc3bf4(0xfcc0e5);\n    fcn.00fc3508();\n    fcn.00fc4280();\n    return;\n}\n",
        "token_count": 947
    },
    "00fcc170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fcc170(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint auStack20 [2];\n    uchar auStack12 [8];\n    \n    uVar2 = 0;\n    auStack20[0] = param_2;\n    iVar1 = (***0xfdb338)(auStack20, 0, 0, 0, 0, 1, auStack12);\n    if (iVar1 == 0) {\n        fcn.00fc3538();\n    }\n    else {\n        fcn.00fc370c();\n        fcn.00fc3b1c();\n        (***0xfdb2cc)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00fcc208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00fcc208(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_10c0h;\n    uint var_10bch;\n    uint var_10b8h;\n    uint var_10b4h;\n    uint var_10b0h;\n    uint var_10ach;\n    uint var_10a8h;\n    uint var_10a4h;\n    uint var_10a0h;\n    uint var_109ch;\n    uint var_1098h;\n    uint var_1094h;\n    uint var_1090h;\n    uint var_108ch;\n    uint var_1088h;\n    uint var_1084h;\n    uint var_1080h;\n    uint var_107ch;\n    uint var_1078h;\n    uint var_1074h;\n    uint var_1070h;\n    uint var_106ch;\n    uint var_1068h;\n    uint var_1064h;\n    uint var_1060h;\n    uint var_105ch;\n    uint var_1058h;\n    uint var_1054h;\n    uint var_1050h;\n    uint var_104ch;\n    uint var_1048h;\n    uint var_1044h;\n    uint var_1040h;\n    uint var_103ch;\n    uint var_c3ch;\n    uint var_83ch;\n    uint uStackY268;\n    uint uStackY264;\n    uint uStackY260;\n    uint uStackY256;\n    uint *puStackY252;\n    uint *puStackY248;\n    uint *puStackY244;\n    uint uStackY240;\n    uint uStackY236;\n    uint uStackY232;\n    uint uStackY228;\n    uint uStackY224;\n    uint uVar3;\n    uint uVar4;\n    uint *arg_10h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0x218;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0xfcc225;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    var_18h = 0xfcc23b;\n    fcn.00fc41a0();\n    var_1ch = 0xfcc8bc;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fcc208::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc357c();\n    fcn.00fc357c();\n    fcn.00fc357c();\n    fcn.00fc357c();\n    fcn.00fc3d98();\n    iVar2 = (***0xfdb474)();\n    if (iVar2 == 0) {\n        while (iVar2 = (***0xfdb248)(),  iVar2 == 0) {\n            fcn.00fc4804();\n            fcn.00fc3d6c();\n        }\n    }\n    (***0xfdb1fc)();\n    iVar2 = fcn.00fc4648();\n    if (-1 < iVar2 + -1) {\n        iVar2 = 0;\n        do {\n            fcn.00fc3e78();\n            fcn.00fc3d98();\n            iVar1 = (***0xfdb474)();\n            if (iVar1 == 0) {\n                while (iVar1 = (***0xfdb248)(),  iVar1 == 0) {\n                    var_18h = 0x400;\n                    fcn.00fc3d6c();\n                    fcn.00fc3e78();\n                    fcn.00fc3d98();\n                    iVar1 = (***0xfdb474)();\n                    if (iVar1 == 0) {\n                        uVar4 = 0xfcc8d4;\n                        fcn.00fc3d6c();\n                        uVar3 = var_1064h;\n                        fcn.00fc3e78();\n                        fcn.00fc75c0(uVar3, uVar4);\n                        iVar1 = fcn.00fc3da8();\n                        if (1 < iVar1) {\n                            var_38h = 3;\n                            do {\n                                fcn.00fc37dc();\n                                fcn.00fc3d88();\n                                uVar3 = *(var_10h + iVar2 * 4);\n                                uVar4 = 0xfcc8d4;\n                                fcn.00fc3d6c();\n                                fcn.00fc3e78();\n                                fcn.00fc75c0(uVar4, uVar3);\n                                iVar1 = fcn.00fc3da8();\n                                if (1 < iVar1) {\n                                    fcn.00fc3d88();\n                                    uVar4 = 0xfcc8d4;\n                                    fcn.00fc3d6c();\n                                    uVar3 = var_1080h;\n                                    fcn.00fc3e78();\n                                    fcn.00fc75c0(uVar3, uVar4);\n                                    uVar4 = 0xfcc8d4;\n                                    fcn.00fc3d6c();\n                                    uVar3 = var_1088h;\n                                    fcn.00fc3e78();\n                                    fcn.00fc3e14();\n                                    fcn.00fc75c0(uVar3, uVar4);\n                                    uVar4 = 0xfcc8d4;\n                                    fcn.00fc3d6c();\n                                    uStackY224 = 0xfcc60b;\n                                    uVar3 = var_1094h;\n                                    fcn.00fc3e78();\n                                    uStackY228 = 0xfcc625;\n                                    fcn.00fc3e14();\n                                    uStackY224 = 0xfcc636;\n                                    fcn.00fc75c0(uVar3, uVar4);\n                                    uStackY224 = var_4h;\n                                    uStackY228 = 0xfcc8d4;\n                                    uStackY232 = *(var_10h + iVar2 * 4);\n                                    uStackY236 = 0xfcc8d4;\n                                    uStackY240 = 0xfcc65f;\n                                    fcn.00fc3d6c();\n                                    puStackY244 = 0xfcc675;\n                                    fcn.00fc3e78();\n                                    puStackY248 = 0xfcc68f;\n                                    fcn.00fc3e14();\n                                    puStackY244 = 0xfcc6a0;\n                                    fcn.00fc76b4();\n                                    puStackY244 = &fcn.00fcc208::var_18h;\n                                    puStackY248 = &fcn.00fcc208::var_103ch;\n                                    puStackY252 = &fcn.00fcc208::var_14h;\n                                    uStackY256 = 0;\n                                    uStackY260 = 0xfcc6c7;\n                                    fcn.00fc3e14();\n                                    uStackY260 = 0xfcc6d2;\n                                    uStackY260 = fcn.00fc3d98();\n                                    uStackY264 = var_ch;\n                                    uStackY268 = 0xfcc6e0;\n                                    iVar1 = (***0xfdb398)();\n                                    if (iVar1 == 0) {\n                                        fcn.00fc4f54();\n                                        fcn.00fcc170();\n                                        fcn.00fc3ad4();\n                                        fcn.00fc39f0();\n                                        fcn.00fc3d88();\n                                    }\n                                    fcn.00fc377c();\n                                    fcn.00fc377c();\n                                    fcn.00fc377c();\n                                    uVar4 = 0xfcc960;\n                                    arg_10h = &fcn.00fcc208::var_8h;\n                                    fcn.00fc709c();\n                                    uVar3 = var_10c0h;\n                                    fcn.00fc3e78();\n                                    fcn.00fc377c();\n                                    fcn.00fc525c(uVar3, uVar4, arg_10h);\n                                }\n                                var_38h = var_38h + -1;\n                            } while (var_38h != 0);\n                        }\n                    }\n                    (***0xfdb1fc)();\n                }\n            }\n            (***0xfdb1fc)();\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    *in_FS_OFFSET = var_8h;\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc4280();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc4810();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 2162
    },
    "00fcca24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00fcca24(void)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    bool bVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar1 = 0x10;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_1ch = 0xfccd0c;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fcca24::var_20h;\n    var_24h = 0xfcca65;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    fcn.00fc62fc();\n    var_24h = 0xfcca70;\n    fcn.00fc7228();\n    var_24h = 0xfcca7b;\n    fcn.00fc3d88();\n    var_24h = &fcn.00fcca24::var_24h;\n    var_28h = 0xfcca8f;\n    fcn.00fc3d88();\n    var_2ch = 0xfccaa3;\n    fcn.00fc3d88();\n    var_28h = 0xfccaaf;\n    fcn.00fc7400(var_24h);\n    var_28h = 0xfccaba;\n    fcn.00fc3c3c();\n    while( true ) {\n        var_28h = 0xfccc95;\n        fcn.00fc3d88();\n        var_28h = 0xfccca0;\n        iVar1 = fcn.00fc40bc();\n        if (iVar1 == 0) break;\n        var_28h = &fcn.00fcca24::var_ch;\n        var_2ch = 0xfccacd;\n        fcn.00fc3d88();\n        var_2ch = var_30h;\n        var_30h = 0xfccadb;\n        fcn.00fc3d88();\n        var_2ch = 0xfccae7;\n        fcn.00fc7400(var_28h);\n        var_2ch = 0xfccaf1;\n        fcn.00fc3d88();\n        var_2ch = 0xfccafc;\n        fcn.00fc40bc();\n        var_2ch = 0xfccb0e;\n        fcn.00fc3f90();\n        var_2ch = &fcn.00fcca24::var_10h;\n        var_30h = 0xfccb22;\n        fcn.00fc3d88();\n        var_30h = var_3ch;\n        var_34h = 0xfccb36;\n        fcn.00fc3d88();\n        var_30h = 0xfccb42;\n        fcn.00fc7400(var_2ch);\n        var_30h = &fcn.00fcca24::var_14h;\n        var_34h = 0xfccb56;\n        fcn.00fc3d88();\n        var_34h = var_44h;\n        var_38h = 0xfccb6a;\n        fcn.00fc3d88();\n        var_34h = 0xfccb76;\n        fcn.00fc7400(var_30h);\n        var_34h = &fcn.00fcca24::var_18h;\n        var_38h = 0xfccb8a;\n        fcn.00fc3d88();\n        var_38h = var_4ch;\n        var_3ch = 0xfccb9e;\n        fcn.00fc3d88();\n        var_38h = 0xfccbaa;\n        fcn.00fc7400(var_34h);\n        var_38h = &fcn.00fcca24::var_1ch;\n        var_3ch = 0xfccbb8;\n        fcn.00fc3d88();\n        var_3ch = var_54h;\n        var_40h = 0xfccbcc;\n        fcn.00fc3d88();\n        var_3ch = 0xfccbd8;\n        fcn.00fc7400(var_38h);\n        bVar2 = true;\n        var_3ch = 0xfccbe2;\n        fcn.00fc3ec0();\n        if (bVar2) {\n            var_3ch = &fcn.00fcca24::var_64h;\n            var_40h = 0xfccbf2;\n            fcn.00fc3d88();\n            var_44h = 0xfccc06;\n            fcn.00fc3d88();\n            var_40h = 0xfccc12;\n            fcn.00fc7400(var_3ch);\n            var_40h = 0xfccc1d;\n            fcn.00fc377c();\n            var_40h = 0xfccc28;\n            fcn.00fc69a8();\n            var_40h = 0xfccc33;\n            fcn.00fc3d88();\n        }\n        var_40h = 0xfccc3e;\n        fcn.00fc377c();\n        var_44h = 0xfccc4d;\n        fcn.00fc377c();\n        var_44h = var_74h;\n        var_48h = 0;\n        var_4ch = var_10h;\n        var_50h = 0xfccd20;\n        var_24h = var_14h;\n        var_58h = 0xfccc6b;\n        fcn.00fc3e78();\n        var_58h = 0xfccc76;\n        fcn.00fc377c();\n        var_58h = 0xfccc8b;\n        fcn.00fc525c(var_24h, var_50h, var_4ch);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0xfccd13;\n    var_20h = 0xfcccc2;\n    fcn.00fc3bf4();\n    var_20h = 0xfccccf;\n    fcn.00fc3508();\n    var_20h = 0xfcccdc;\n    fcn.00fc3bf4();\n    var_20h = 0xfccce9;\n    fcn.00fc3508();\n    var_20h = 0xfcccf6;\n    fcn.00fc3bf4();\n    var_20h = 0xfcccfe;\n    fcn.00fc34e4();\n    var_20h = 0xfccd0b;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 1957
    },
    "00fccd68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fccd68(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack44 = 0xfcce61;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0xfccd90;\n    var_4h = param_2;\n    fcn.00fc34e4();\n    puStack52 = 0xfccd97;\n    uVar1 = fcn.00fc3790();\n    iVar2 = uVar1 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar1 & 1) != 0);\n    }\n    if (0 < iVar2) {\n        do {\n            uStack56 = 0xfcce15;\n            iStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            fcn.00fc39f0();\n            fcn.00fc37dc();\n            fcn.00fc3d88();\n            fcn.00fc7108();\n            fcn.00fc36cc();\n            fcn.00fc3798();\n            *in_FS_OFFSET = &fcn.00fccd68::var_14h;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = iStack48;\n    puStack40 = 0xfcce68;\n    uStack44 = 0xfcce50;\n    fcn.00fc3508();\n    uStack44 = 0xfcce58;\n    fcn.00fc3bdc();\n    uStack44 = 0xfcce60;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 539
    },
    "00fcd5d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00fcd5d4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint var_4ch;\n    uint *var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0xc;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_ch = 0;\n    var_18h = 0xfcd5fa;\n    fcn.00fc3980();\n    var_18h = 0xfcd602;\n    fcn.00fc3980();\n    var_18h = 0xfcd60a;\n    fcn.00fc3980();\n    var_1ch = 0xfcd882;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fcd5d4::var_20h;\n    var_18h = &stack0xfffffffc;\n    while( true ) {\n        var_24h = 0xfcd661;\n        iVar2 = fcn.00fc3ad4();\n        if (iVar2 == 0) break;\n        var_24h = 0xfcd627;\n        iVar2 = fcn.00fc3ad4();\n        var_24h = 0xfcd636;\n        iVar1 = fcn.00fc3ad4();\n        var_24h = (iVar2 - iVar1) + 0xf;\n        var_28h = 0xfcd649;\n        fcn.00fc3ad4();\n        var_24h = 0xfcd654;\n        fcn.00fc3a30();\n    }\n    iVar2 = -1;\n    do {\n        iVar3 = iVar2;\n        iVar2 = iVar3 + 1;\n        var_24h = 0xfcd8c8;\n        var_28h = 0xfcd678;\n        fcn.00fc709c();\n        var_28h = var_1ch;\n        var_20h = 0xfcd8d4;\n        var_30h = 0xfcd68d;\n        fcn.00fc3e78();\n        var_30h = 0xfcd698;\n        fcn.00fc377c();\n        var_30h = 0xfcd6a3;\n        iVar1 = fcn.00fc3ad4();\n    } while (iVar1 != 0);\n    if (iVar2 == 0) {\n        var_30h = 0xfcd6b3;\n        fcn.00fc34e4();\n    }\n    else if (-1 < iVar3) {\n        do {\n            var_24h = &fcn.00fcd5d4::var_20h;\n            var_28h = 0xfcd8dc;\n            var_2ch = 0xfcd6d9;\n            fcn.00fc709c();\n            var_2ch = var_28h;\n            var_30h = 0xfcd8d4;\n            var_34h = 0xfcd6ee;\n            fcn.00fc3e78();\n            var_34h = var_24h;\n            var_38h = 0xfcd8c8;\n            var_3ch = 0xfcd701;\n            fcn.00fc709c();\n            var_3ch = var_30h;\n            var_40h = 0xfcd8d4;\n            var_44h = 0xfcd716;\n            fcn.00fc3e78();\n            var_44h = var_2ch;\n            var_48h = 0xfcd725;\n            fcn.00fc3d88();\n            var_40h = 0xfcd72f;\n            fcn.00fc7400(var_3ch);\n            var_40h = 0xfcd73a;\n            fcn.00fc377c();\n            var_40h = &fcn.00fcd5d4::var_3ch;\n            var_44h = 0xfcd749;\n            fcn.00fc3d88();\n            var_44h = 0xfcd75b;\n            fcn.00fc7400(var_40h);\n            var_44h = 0xfcd766;\n            fcn.00fc377c();\n            var_44h = var_38h;\n            var_48h = &fcn.00fcd5d4::var_54h;\n            var_4ch = 0xfcd779;\n            fcn.00fc3d88();\n            var_4ch = 0xfcd78b;\n            fcn.00fc7400(var_48h);\n            var_4ch = 0xfcd796;\n            fcn.00fc377c();\n            var_4ch = var_50h;\n            var_50h = &fcn.00fcd5d4::var_60h;\n            var_54h = 0xfcd7a9;\n            fcn.00fc3d88();\n            var_54h = 0xfcd7bb;\n            fcn.00fc7400(var_50h);\n            var_54h = 0xfcd7c6;\n            fcn.00fc377c();\n            var_50h = 0xfcd7d2;\n            fcn.00fcd3b4();\n            var_50h = 0xfcd7dd;\n            fcn.00fc3d88();\n            var_50h = 0xfcd7e8;\n            fcn.00fc377c();\n            var_50h = var_44h;\n            var_20h = 0;\n            var_58h = 0xfcd7fe;\n            fcn.00fc525c(0, var_44h, var_4ch);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0xfcd889;\n    var_1ch = 0xfcd820;\n    fcn.00fc3bf4();\n    var_1ch = 0xfcd828;\n    fcn.00fc34e4();\n    var_1ch = 0xfcd835;\n    fcn.00fc3bf4();\n    var_1ch = 0xfcd842;\n    fcn.00fc3508();\n    var_1ch = 0xfcd84a;\n    fcn.00fc3bdc();\n    var_1ch = 0xfcd852;\n    fcn.00fc34e4();\n    var_1ch = 0xfcd85f;\n    fcn.00fc3bf4();\n    var_1ch = 0xfcd867;\n    fcn.00fc34e4();\n    var_1ch = 0xfcd874;\n    fcn.00fc3bf4();\n    var_1ch = 0xfcd881;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 1873
    },
    "00fce318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00fce318(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00fc2cec();\n        param_2 = extraout_DL;\n    }\n    fcn.00fc2bcc();\n    *(in_EAX + 0x10) = 0;\n    *0xfdcaac = 0x4034b50;\n    *0xfdcab0 = 0x2014b50;\n    *0xfdcab4 = 0x6054b50;\n    if (param_2 != '\\0') {\n        fcn.00fc2d44();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 197
    },
    "00fce398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fce398(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint var_64h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ah;\n    uint var_36h;\n    uint var_32h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack120 = 0xfce3bc;\n    fcn.00fc3980();\n    puStack120 = 0xfce3c4;\n    fcn.00fc3980();\n    uStack124 = 0xfce546;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStack120 = &stack0xfffffffc;\n    fcn.00fc357c();\n    fcn.00fc357c();\n    fcn.00fc3790();\n    fcn.00fc3790();\n    fcn.00fc3b1c();\n    fcn.00fc3b1c();\n    fcn.00fc39e8();\n    fcn.00fce308();\n    fcn.00fc3790();\n    fcn.00fc35d4();\n    fcn.00fc3850(0, 0, 0, *(in_EAX + 4));\n    fcn.00fc34e4();\n    fcn.00fc35d4();\n    uVar1 = 0;\n    fcn.00fc3850(0, 0, *(in_EAX + 8));\n    fcn.00fc34e4();\n    *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc3508(0xfce54d);\n    return;\n}\n",
        "token_count": 491
    },
    "00fce554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fce554(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ah;\n    uint var_16h;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0xfce5ea;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00fc3790();\n    fcn.00fc3790();\n    fcn.00fc35d4();\n    uVar1 = 0;\n    fcn.00fc3850(0, *(in_EAX + 8), *(in_EAX + 4));\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc34e4(0xfce5f1);\n    return;\n}\n",
        "token_count": 217
    },
    "00fce6d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fce6d4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack20 = 0xfce6ed;\n    var_8h = param_2;\n    fcn.00fc3980();\n    puStack20 = 0xfce6f5;\n    fcn.00fc3980();\n    uStack24 = 0xfce78f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00fc3790();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00fc3790();\n        iVar1 = (uVar2 >> 0x1f) + *0xfdcac0 + CARRY4(uVar2, *0xfdcabc);\n        if (iVar1 == *0xfdcac8) {\n            if (*0xfdcac4 < uVar2 + *0xfdcabc) goto code_r0x00fce774;\n        }\n        else if (*0xfdcac8 < iVar1) goto code_r0x00fce774;\n        uVar2 = fcn.00fc3790();\n        bVar3 = CARRY4(uVar2, *0xfdcabc);\n        *0xfdcabc = uVar2 + *0xfdcabc;\n        *0xfdcac0 = (uVar2 >> 0x1f) + *0xfdcac0 + bVar3;\n        fcn.00fce694();\n        fcn.00fce398();\n    }\ncode_r0x00fce774:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0xfce796;\n    uStack24 = 0xfce78e;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 484
    },
    "00fce954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00fce954(uint param_1, uint param_2)\n\n{\n    code **ppcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    char *var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    char *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0x2f;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0xfce974;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00fc4150();\n    ppcVar1 = *0xfdb1dc;\n    var_1ch = 0xfced34;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fce954::var_20h;\n    var_24h = 0xfce990;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    var_28h = 0xfceca8;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fce954::var_2ch;\n    var_24h = &stack0xfffffffc;\n    (***0xfdb1c4)();\n    fcn.00fc709c();\n    fcn.00fc6fdc(var_48h);\n    fcn.00fc3e78(0xfced48, var_4ch);\n    fcn.00fc78d8();\n    fcn.00fc62fc();\n    var_44h = var_1ch;\n    fcn.00fc3e78(var_1ch, 0xfced6c, var_54h);\n    fcn.00fc78d8();\n    uVar3 = fcn.00fc3d98(0xffffffff);\n    var_50h = fcn.00fc3d98(uVar3);\n    (***0xfdb44c)();\n    fcn.00fc377c();\n    fcn.00fc4b58();\n    fcn.00fc3d88();\n    cVar2 = fcn.00fc776c();\n    if (cVar2 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar3 = fcn.00fc3990(&fcn.00fce954::var_ch);\n        iVar4 = (***0xfdb140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00fc3990(0xffffffff, &fcn.00fce954::var_10h, &fcn.00fce954::var_14h);\n            iVar4 = (***0xfdb2d4)(var_ch, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0xfdb384)(var_10h),  iVar4 == 100) {\n                    (**ppcVar1)(var_10h, 0);\n                    fcn.00fc36dc();\n                    fcn.00fc357c();\n                    iVar4 = fcn.00fc3790();\n                    if ((0 < iVar4) && (*var_24h == '.')) {\n                        fcn.00fc357c();\n                    }\n                    (**ppcVar1)(var_10h, 1);\n                    fcn.00fc36dc();\n                    (**ppcVar1)(var_10h, 2);\n                    fcn.00fc2a5c();\n                    bVar5 = var_15ch == 0xffffffff;\n                    fcn.00fc2870();\n                    if (bVar5) {\n                        fcn.00fc357c();\n                    }\n                    else {\n                        fcn.00fc357c();\n                    }\n                    (**ppcVar1)(var_10h, 3);\n                    fcn.00fc36dc();\n                    (**ppcVar1)(var_10h, 4);\n                    fcn.00fc36dc();\n                    (**ppcVar1)(var_10h, 5);\n                    var_18h = 0xfceba4;\n                    fcn.00fc36dc();\n                    var_1ch = 0xfcebb5;\n                    fcn.00fc3d88();\n                    var_1ch = var_160h;\n                    var_20h = 0xfced98;\n                    var_24h = 0xfcebce;\n                    fcn.00fc3d88();\n                    var_24h = var_164h;\n                    var_28h = 0xfced98;\n                    var_2ch = 0xfcebe7;\n                    fcn.00fc3d88();\n                    var_2ch = var_168h;\n                    fcn.00fc3d88(0xfced98);\n                    fcn.00fc3d88(0xfced98, var_16ch);\n                    fcn.00fc3d88(0xfced98, var_170h);\n                    var_44h = var_174h;\n                    fcn.00fc3d88(0xfced98);\n                    var_50h = 0xfceda0;\n                    fcn.00fc3e78(0xfceda0, var_178h);\n                    fcn.00fc5194();\n                }\n            }\n        }\n        (***0xfdb46c)(var_10h);\n        (***0xfdb20c)(var_ch);\n        *in_FS_OFFSET = var_50h;\n        fcn.00fc3c18();\n        uVar3 = fcn.00fc3d98();\n        (***0xfdb3e8)(uVar3);\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00fc3bf4(0xfced3b);\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 1839
    },
    "00fceda8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00fceda8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    char **in_FS_OFFSET;\n    bool bVar5;\n    uint var_180h;\n    char *var_17ch;\n    uint var_178h;\n    uint var_174h;\n    char *var_170h;\n    char *var_16ch;\n    uchar *var_168h;\n    uint var_164h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    char *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    char *var_2ch;\n    uint var_28h;\n    char *var_24h;\n    char *var_20h;\n    uchar *var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0x30;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0xfcedc8;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00fc4150();\n    var_1ch = 0xfcf276;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fceda8::var_20h;\n    var_24h = 0xfcedde;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    var_28h = 0xfcf1d7;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fceda8::var_2ch;\n    var_24h = &stack0xfffffffc;\n    (***0xfdb1c4)();\n    fcn.00fc709c();\n    fcn.00fc6fdc(var_50h);\n    fcn.00fc3e78(0xfcf288, var_54h);\n    fcn.00fc78d8();\n    fcn.00fc62fc();\n    var_44h = var_24h;\n    fcn.00fc3e78(var_24h, 0xfcf2ac, var_5ch);\n    fcn.00fc78d8();\n    uVar2 = fcn.00fc3d98(0xffffffff);\n    var_50h = fcn.00fc3d98(uVar2);\n    (***0xfdb44c)();\n    fcn.00fc377c();\n    fcn.00fc4b58();\n    fcn.00fc3d88();\n    cVar1 = fcn.00fc776c();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar2 = fcn.00fc3990(&fcn.00fceda8::var_ch);\n        iVar4 = (***0xfdb140)(uVar2);\n        if (iVar4 == 0) {\n            uVar2 = fcn.00fc3990(0xffffffff, &fcn.00fceda8::var_10h, &fcn.00fceda8::var_14h);\n            iVar4 = (***0xfdb2d4)(var_ch, uVar2);\n            if (iVar4 != 0) {\n                uVar2 = fcn.00fc3990(0xffffffff, &fcn.00fceda8::var_10h, &fcn.00fceda8::var_14h);\n                iVar4 = (***0xfdb2d4)(var_ch, uVar2);\n            }\n            if (iVar4 == 0) {\n                while (iVar4 = (***0xfdb384)(var_10h),  iVar4 == 100) {\n                    fcn.00fc34e4();\n                    fcn.00fc34e4();\n                    uVar2 = (***0xfdb414)(var_10h, 2);\n                    (***0xfdb1dc)(var_10h, 2, uVar2);\n                    fcn.00fca610();\n                    (***0xfdb1dc)(var_10h, 3);\n                    fcn.00fc36dc();\n                    iVar4 = fcn.00fc3790();\n                    iVar3 = fcn.00fc3790();\n                    if (iVar3 < iVar4) {\n                        fcn.00fc357c();\n                    }\n                    iVar4 = fcn.00fc3790();\n                    if (iVar4 != 0) {\n                        (***0xfdb1dc)(var_10h, 0);\n                        fcn.00fc36dc();\n                        fcn.00fc357c();\n                        iVar4 = fcn.00fc3790();\n                        if ((0 < iVar4) && (*var_2ch == '.')) {\n                            fcn.00fc357c();\n                        }\n                        (***0xfdb1dc)(var_10h, 4);\n                        fcn.00fc36dc();\n                        (***0xfdb1dc)(var_10h, 5);\n                        fcn.00fc2a5c();\n                        bVar5 = var_164h == 0xffffffff;\n                        fcn.00fc2870();\n                        if (bVar5) {\n                            fcn.00fc357c();\n                        }\n                        else {\n                            fcn.00fc357c();\n                        }\n                        (***0xfdb1dc)(var_10h, 6);\n                        fcn.00fc36dc();\n                        (***0xfdb1dc)(var_10h, 1);\n                        var_18h = 0xfcf0aa;\n                        fcn.00fc36dc();\n                        var_18h = 0xfcf0b5;\n                        fcn.00fc357c();\n                        var_18h = 0xfcf0c2;\n                        iVar4 = fcn.00fc3ad4();\n                        if (iVar4 != 0) {\n                            var_18h = 0xfcf0d3;\n                            fcn.00fc357c();\n                        }\n                        var_18h = var_1ch;\n                        var_1ch = 0xfcf0e4;\n                        fcn.00fc3d88();\n                        var_1ch = var_168h;\n                        var_20h = 0xfcf2f0;\n                        var_24h = 0xfcf0fd;\n                        fcn.00fc3d88();\n                        var_24h = var_16ch;\n                        var_28h = 0xfcf2f0;\n                        var_2ch = 0xfcf116;\n                        fcn.00fc3d88();\n                        var_2ch = var_170h;\n                        fcn.00fc3d88(0xfcf2f0);\n                        fcn.00fc3d88(0xfcf2f0, var_174h);\n                        fcn.00fc3d88(0xfcf2f0, var_178h);\n                        var_44h = var_17ch;\n                        fcn.00fc3d88(0xfcf2f0);\n                        var_50h = 0xfcf2f8;\n                        fcn.00fc3e78(0xfcf2f8, var_180h);\n                        fcn.00fc5194();\n                    }\n                }\n            }\n            (***0xfdb46c)(var_10h);\n            (***0xfdb20c)(var_ch);\n        }\n        *in_FS_OFFSET = var_50h;\n        fcn.00fc3c18();\n        uVar2 = fcn.00fc3d98();\n        (***0xfdb3e8)(uVar2);\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00fc3bf4(0xfcf27d);\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 2260
    },
    "00fcf300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00fcf300(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    char **in_FS_OFFSET;\n    bool bVar4;\n    uint var_180h;\n    char *var_17ch;\n    uint var_178h;\n    uint var_174h;\n    char *var_170h;\n    char *var_16ch;\n    uchar *var_168h;\n    uint var_164h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    char *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    char *var_2ch;\n    uint var_28h;\n    char *var_24h;\n    char *var_20h;\n    uchar *var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0x30;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0xfcf320;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00fc4150();\n    var_1ch = 0xfcf736;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fcf300::var_20h;\n    var_24h = 0xfcf336;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    var_28h = 0xfcf697;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fcf300::var_2ch;\n    var_24h = &stack0xfffffffc;\n    (***0xfdb1c4)();\n    fcn.00fc709c();\n    fcn.00fc6fdc(var_50h);\n    fcn.00fc3e78(0xfcf748, var_54h);\n    fcn.00fc78d8();\n    fcn.00fc62fc();\n    var_44h = var_24h;\n    fcn.00fc3e78(var_24h, 0xfcf76c, var_5ch);\n    fcn.00fc78d8();\n    uVar2 = fcn.00fc3d98(0xffffffff);\n    var_50h = fcn.00fc3d98(uVar2);\n    (***0xfdb44c)();\n    fcn.00fc377c();\n    fcn.00fc4b58();\n    fcn.00fc3d88();\n    cVar1 = fcn.00fc776c();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar2 = fcn.00fc3990(&fcn.00fcf300::var_ch);\n        iVar3 = (***0xfdb140)(uVar2);\n        if (iVar3 == 0) {\n            uVar2 = fcn.00fc3990(0xffffffff, &fcn.00fcf300::var_10h, &fcn.00fcf300::var_14h);\n            iVar3 = (***0xfdb2d4)(var_ch, uVar2);\n            if (iVar3 == 0) {\n                while (iVar3 = (***0xfdb384)(var_10h),  iVar3 == 100) {\n                    fcn.00fc34e4();\n                    fcn.00fc34e4();\n                    (***0xfdb1dc)(var_10h, 3);\n                    fcn.00fc36dc();\n                    iVar3 = fcn.00fc3790();\n                    if (iVar3 != 0) {\n                        (***0xfdb1dc)(var_10h, 0);\n                        fcn.00fc36dc();\n                        fcn.00fc357c();\n                        iVar3 = fcn.00fc3790();\n                        if ((0 < iVar3) && (*var_2ch == '.')) {\n                            fcn.00fc357c();\n                        }\n                        (***0xfdb1dc)(var_10h, 4);\n                        fcn.00fc36dc();\n                        (***0xfdb1dc)(var_10h, 5);\n                        fcn.00fc2a5c();\n                        bVar4 = var_164h == 0xffffffff;\n                        fcn.00fc2870();\n                        if (bVar4) {\n                            fcn.00fc357c();\n                        }\n                        else {\n                            fcn.00fc357c();\n                        }\n                        (***0xfdb1dc)(var_10h, 6);\n                        fcn.00fc36dc();\n                        (***0xfdb1dc)(var_10h, 1);\n                        var_18h = 0xfcf588;\n                        fcn.00fc36dc();\n                        var_18h = 0xfcf593;\n                        fcn.00fc357c();\n                        var_18h = var_1ch;\n                        var_1ch = 0xfcf5a4;\n                        fcn.00fc3d88();\n                        var_1ch = var_168h;\n                        var_20h = 0xfcf798;\n                        var_24h = 0xfcf5bd;\n                        fcn.00fc3d88();\n                        var_24h = var_16ch;\n                        var_28h = 0xfcf798;\n                        var_2ch = 0xfcf5d6;\n                        fcn.00fc3d88();\n                        var_2ch = var_170h;\n                        fcn.00fc3d88(0xfcf798);\n                        fcn.00fc3d88(0xfcf798, var_174h);\n                        fcn.00fc3d88(0xfcf798, var_178h);\n                        var_44h = var_17ch;\n                        fcn.00fc3d88(0xfcf798);\n                        var_50h = 0xfcf7a0;\n                        fcn.00fc3e78(0xfcf7a0, var_180h);\n                        fcn.00fc5194();\n                    }\n                }\n            }\n        }\n        (***0xfdb46c)(var_10h);\n        (***0xfdb20c)(var_ch);\n        *in_FS_OFFSET = var_50h;\n        fcn.00fc3c18();\n        uVar2 = fcn.00fc3d98();\n        (***0xfdb3e8)(uVar2);\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00fc3bf4(0xfcf73d);\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 1998
    },
    "00fd0d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00fd0d88(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 9;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0xfd0da8;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00fc4150();\n    var_1ch = 0xfd0fe1;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd0d88::var_20h;\n    var_24h = 0xfd0dbe;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc34e4();\n    var_28h = 0xfd0f66;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd0d88::var_2ch;\n    var_24h = &stack0xfffffffc;\n    fcn.00fc4ea8();\n    fcn.00fc709c();\n    uVar1 = var_2ch;\n    fcn.00fc6fdc(var_2ch);\n    fcn.00fc3e78(0xfd0ff4, uVar1);\n    fcn.00fc78d8();\n    fcn.00fc62fc();\n    uVar1 = var_1ch;\n    var_44h = var_1ch;\n    fcn.00fc3e78(var_1ch, 0xfd1018, 0xfd0ff4);\n    fcn.00fc78d8();\n    uStack80 = fcn.00fc3d98();\n    uVar3 = fcn.00fc3d98();\n    fcn.00fc4e28();\n    fcn.00fc377c();\n    fcn.00fc4b58();\n    fcn.00fc3d88();\n    cVar2 = fcn.00fc776c();\n    if (cVar2 == '\\0') {\n        *in_FS_OFFSET = uVar3;\n    }\n    else {\n        uVar3 = fcn.00fc3990(&fcn.00fd0d88::var_ch);\n        iVar4 = (***0xfdb140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00fc3990(0xffffffff, &fcn.00fd0d88::var_10h, &fcn.00fd0d88::var_14h);\n            iVar4 = (***0xfdb2d4)(var_ch, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0xfdb384)(var_10h),  iVar4 == 100) {\n                    (***0xfdb1dc)(var_10h, 0, var_18h);\n                    fcn.00fc36dc();\n                    (***0xfdb1dc)(var_10h, 1, 0xfd1024, uVar1);\n                    fcn.00fc36dc();\n                    uStack80 = 0xffffffff;\n                    fcn.00fc3850(0xfd1030);\n                }\n            }\n        }\n        (***0xfdb46c)(var_10h);\n        (***0xfdb20c)(var_ch);\n        *in_FS_OFFSET = uStack80;\n        fcn.00fc3d88();\n        var_44h = fcn.00fc3d98();\n        fcn.00fc4e38();\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00fc3508(0xfd0fe8);\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 1223
    },
    "00fd1034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00fd1034(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 9;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0xfd1054;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00fc4150();\n    var_1ch = 0xfd1282;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd1034::var_20h;\n    var_24h = 0xfd106a;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    var_28h = 0xfd1212;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd1034::var_2ch;\n    var_24h = &stack0xfffffffc;\n    fcn.00fc4ea8();\n    fcn.00fc709c();\n    uVar1 = var_2ch;\n    fcn.00fc6fdc(var_2ch);\n    fcn.00fc3e78(0xfd1294, uVar1);\n    fcn.00fc78d8();\n    fcn.00fc62fc();\n    uVar1 = var_1ch;\n    var_44h = var_1ch;\n    fcn.00fc3e78(var_1ch, 0xfd12b8, 0xfd1294);\n    fcn.00fc78d8();\n    uStack80 = fcn.00fc3d98();\n    uVar3 = fcn.00fc3d98();\n    fcn.00fc4e28();\n    fcn.00fc377c();\n    fcn.00fc4b58();\n    fcn.00fc3d88();\n    cVar2 = fcn.00fc776c();\n    if (cVar2 == '\\0') {\n        *in_FS_OFFSET = uVar3;\n    }\n    else {\n        uVar3 = fcn.00fc3990(&fcn.00fd1034::var_ch);\n        iVar4 = (***0xfdb140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00fc3990(0xffffffff, &fcn.00fd1034::var_10h, &fcn.00fd1034::var_14h);\n            iVar4 = (***0xfdb2d4)(var_ch, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0xfdb384)(var_10h),  iVar4 == 100) {\n                    (***0xfdb1dc)(var_10h, 0, var_18h);\n                    fcn.00fc3cf4();\n                    (***0xfdb1dc)(var_10h, 1, 0xfd12c0, uVar1);\n                    fcn.00fc3cf4();\n                    uStack80 = 0xffffffff;\n                    fcn.00fc3e78(0xfd12c8);\n                }\n            }\n        }\n        (***0xfdb46c)(var_10h);\n        (***0xfdb20c)(var_ch);\n        *in_FS_OFFSET = uStack80;\n        fcn.00fc3c18();\n        var_44h = fcn.00fc3d98();\n        fcn.00fc4e38();\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00fc3bf4(0xfd1289);\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 1198
    },
    "00fd12d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.00fd12d0(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uchar *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 10;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0xfd12f1;\n    var_18h = unaff_EDI;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    fcn.00fc4150();\n    var_20h = 0xfd15ab;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd12d0::var_24h;\n    var_28h = 0xfd1307;\n    var_1ch = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    var_2ch = 0xfd1526;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd12d0::var_30h;\n    var_28h = &stack0xfffffffc;\n    fcn.00fc4ea8();\n    fcn.00fc709c();\n    uVar3 = var_30h;\n    fcn.00fc6fdc(var_30h);\n    fcn.00fc3e78(0xfd15c0, uVar3);\n    fcn.00fc78d8();\n    fcn.00fc62fc();\n    puVar1 = var_1ch;\n    var_48h = var_1ch;\n    fcn.00fc3e78(var_1ch, 0xfd15e4, 0xfd15c0);\n    fcn.00fc78d8();\n    var_50h = fcn.00fc3d98(0xffffffff);\n    var_54h = fcn.00fc3d98();\n    fcn.00fc4e28();\n    fcn.00fc377c();\n    fcn.00fc4b58();\n    fcn.00fc3d88();\n    cVar2 = fcn.00fc776c();\n    if (cVar2 == '\\0') {\n        *in_FS_OFFSET = var_54h;\n    }\n    else {\n        uVar3 = fcn.00fc3990(&fcn.00fd12d0::var_ch);\n        iVar4 = (***0xfdb140)(uVar3);\n        if (iVar4 == 0) {\n            uVar3 = fcn.00fc3990(0xffffffff, &fcn.00fd12d0::var_10h, &fcn.00fd12d0::var_14h);\n            iVar4 = (***0xfdb2d4)(var_ch, uVar3);\n            if (iVar4 == 0) {\n                while (iVar4 = (***0xfdb384)(var_10h),  iVar4 == 100) {\n                    uVar3 = (***0xfdb414)(var_10h, 3);\n                    (***0xfdb1dc)(var_10h, 3, uVar3);\n                    fcn.00fca610();\n                    fcn.00fc3d88(var_18h);\n                    (***0xfdb1dc)(var_10h, 0, 0xfd15ec, puVar1);\n                    fcn.00fc3cf4();\n                    (***0xfdb1dc)(var_10h, 1, 0xfd15ec, 0xffffffff);\n                    fcn.00fc3cf4();\n                    (***0xfdb1dc)(var_10h, 2, 0xfd15f8, var_50h);\n                    fcn.00fc3cf4();\n                    var_50h = var_54h;\n                    var_54h = 0xfd1600;\n                    fcn.00fc3e78();\n                    **0xfdb1cc = **0xfdb1cc + 1;\n                }\n            }\n        }\n        (***0xfdb46c)(var_10h);\n        (***0xfdb20c)(var_ch);\n        *in_FS_OFFSET = var_50h;\n        fcn.00fc3c18();\n        var_48h = fcn.00fc3d98();\n        fcn.00fc4e38();\n    }\n    *in_FS_OFFSET = var_48h;\n    fcn.00fc3bf4(0xfd15b2);\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 1407
    },
    "00fd19ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fd19ac(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint *puStack684;\n    uint uStack680;\n    uint uStack676;\n    uchar *puStack672;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack672 = 0xfd1a07;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    puStack672 = 0xfd1a0f;\n    fcn.00fc4150();\n    puStack672 = 0xfd1a17;\n    fcn.00fc4150();\n    uStack676 = 0xfd1c11;\n    uStack680 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd58;\n    puStack684 = &fcn.00fd19ac::var_264h;\n    uStack688 = 0xfd1a3f;\n    puStack672 = &stack0xfffffffc;\n    fcn.00fc3e14();\n    uStack688 = 0xfd1a4a;\n    uStack688 = fcn.00fc3d98();\n    uStack692 = 0xfd1a50;\n    var_14h = fcn.00fc4e50();\n    do {\n        uStack692 = var_4h;\n        uStack696 = 0xfd1c38;\n        uStack700 = 0xfd1a71;\n        fcn.00fc3d6c();\n        uStack700 = 0;\n        uStack704 = 0xfd1c38;\n        uStack708 = **0xfdb3bc;\n        puStack712 = 0xfd1a93;\n        fcn.00fc3e78();\n        puStack712 = 0xfd1a9e;\n        cVar1 = fcn.00fc776c();\n        if (cVar1 != '\\0') {\n            uStack716 = 0xfd1b85;\n            uStack720 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd30;\n            puStack712 = &stack0xfffffffc;\n            fcn.00fc3d6c(0xfd1c38, var_4h);\n            fcn.00fc3e78(**0xfdb3bc, 0xfd1c38, 0);\n            fcn.00fd0d88();\n            fcn.00fc377c();\n            fcn.00fc3d6c(0xfd1c40, var_8h, 0xfd1c38, var_ch, 0);\n            fcn.00fc3e78(0xfd1c48);\n            fcn.00fc377c();\n            fcn.00fce6d4();\n            *in_FS_OFFSET = 0;\n        }\n        uStack688 = var_14h;\n        iVar2 = fcn.00fc4e58();\n        uVar3 = var_14h;\n    } while (iVar2 != 0);\n    fcn.00fc4e48();\n    *in_FS_OFFSET = uVar3;\n    uVar3 = 0xfd1c18;\n    uStack688 = 0xfd1bcd;\n    fcn.00fc3bf4();\n    fcn.00fc34e4(uVar3);\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 957
    },
    "00fd253c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00fd253c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = var_44h;\n    iVar3 = 0xb;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0xfd255c;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00fc4150();\n    var_1ch = 0xfd2809;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd253c::var_20h;\n    var_24h = 0xfd2572;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    var_28h = 0xfd277f;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd253c::var_2ch;\n    var_24h = &stack0xfffffffc;\n    fcn.00fc4ea8();\n    fcn.00fc709c();\n    fcn.00fc6fdc(var_38h);\n    fcn.00fc3e78(0xfd281c, var_3ch);\n    fcn.00fc78d8();\n    fcn.00fc62fc();\n    var_44h = var_1ch;\n    fcn.00fc3e78(var_1ch, 0xfd2840, uVar2);\n    fcn.00fc78d8();\n    var_4ch = fcn.00fc3d98(0xffffffff);\n    var_50h = fcn.00fc3d98();\n    fcn.00fc4e28();\n    fcn.00fc377c();\n    fcn.00fc4b58();\n    fcn.00fc3d88();\n    cVar1 = fcn.00fc776c();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar2 = fcn.00fc3990(&fcn.00fd253c::var_ch);\n        iVar3 = (***0xfdb140)(uVar2);\n        if ((iVar3 == 0) &&\n           (iVar3 = (***0xfdb2d4)(var_ch, 0xfd2844, 0xffffffff, &fcn.00fd253c::var_10h, &fcn.00fd253c::var_14h), \n           iVar3 == 0)) {\n            while (iVar3 = (***0xfdb384)(var_10h),  iVar3 == 100) {\n                fcn.00fc34e4();\n                fcn.00fc34e4();\n                fcn.00fc34e4();\n                (***0xfdb1dc)(var_10h, 0);\n                fcn.00fc36dc();\n                (***0xfdb1dc)(var_10h, 1);\n                fcn.00fc36dc();\n                var_4ch = var_10h;\n                (***0xfdb1dc)(var_10h, 2);\n                fcn.00fc36dc();\n                fcn.00fc3d88(0xfd2948, var_18h);\n                fcn.00fc3d88(0xfd2950, var_50h);\n                fcn.00fc3d88(0xfd295c, 2);\n                var_50h = 0xfd2968;\n                fcn.00fc3e78();\n            }\n        }\n        (***0xfdb46c)(var_10h);\n        (***0xfdb20c)(var_ch);\n        *in_FS_OFFSET = var_4ch;\n        fcn.00fc3c18();\n        var_44h = fcn.00fc3d98();\n        fcn.00fc4e38();\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00fc3bf4(0xfd2810);\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 1369
    },
    "00fd2974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00fd2974(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = var_44h;\n    iVar3 = 0xb;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0xfd2994;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = param_2;\n    fcn.00fc4150();\n    var_1ch = 0xfd2c41;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd2974::var_20h;\n    var_24h = 0xfd29aa;\n    var_18h = &stack0xfffffffc;\n    fcn.00fc3bdc();\n    var_28h = 0xfd2bb7;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fd2974::var_2ch;\n    var_24h = &stack0xfffffffc;\n    fcn.00fc4ea8();\n    fcn.00fc709c();\n    fcn.00fc6fdc(var_38h);\n    fcn.00fc3e78(0xfd2c54, var_3ch);\n    fcn.00fc78d8();\n    fcn.00fc62fc();\n    var_44h = var_1ch;\n    fcn.00fc3e78(var_1ch, 0xfd2c78, uVar2);\n    fcn.00fc78d8();\n    var_4ch = fcn.00fc3d98(0xffffffff);\n    var_50h = fcn.00fc3d98();\n    fcn.00fc4e28();\n    fcn.00fc377c();\n    fcn.00fc4b58();\n    fcn.00fc3d88();\n    cVar1 = fcn.00fc776c();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = var_50h;\n    }\n    else {\n        uVar2 = fcn.00fc3990(&fcn.00fd2974::var_ch);\n        iVar3 = (***0xfdb140)(uVar2);\n        if ((iVar3 == 0) &&\n           (iVar3 = (***0xfdb2d4)(var_ch, 0xfd2c7c, 0xffffffff, &fcn.00fd2974::var_10h, &fcn.00fd2974::var_14h), \n           iVar3 == 0)) {\n            while (iVar3 = (***0xfdb384)(var_10h),  iVar3 == 100) {\n                fcn.00fc34e4();\n                fcn.00fc34e4();\n                fcn.00fc34e4();\n                (***0xfdb1dc)(var_10h, 0);\n                fcn.00fc36dc();\n                (***0xfdb1dc)(var_10h, 1);\n                fcn.00fc36dc();\n                var_4ch = var_10h;\n                (***0xfdb1dc)(var_10h, 2);\n                fcn.00fc36dc();\n                fcn.00fc3d88(0xfd2d40, var_18h);\n                fcn.00fc3d88(0xfd2d48, var_50h);\n                fcn.00fc3d88(0xfd2d54, 2);\n                var_50h = 0xfd2d60;\n                fcn.00fc3e78();\n            }\n        }\n        (***0xfdb46c)(var_10h);\n        (***0xfdb20c)(var_ch);\n        *in_FS_OFFSET = var_4ch;\n        fcn.00fc3c18();\n        var_44h = fcn.00fc3d98();\n        fcn.00fc4e38();\n    }\n    *in_FS_OFFSET = var_44h;\n    fcn.00fc3bf4(0xfd2c48);\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 1380
    },
    "00fd3030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fd3030(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack720;\n    uint uStack716;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint *puStack684;\n    uint uStack680;\n    uint uStack676;\n    uchar *puStack672;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_238h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack672 = 0xfd308b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    puStack672 = 0xfd3093;\n    fcn.00fc4150();\n    puStack672 = 0xfd309b;\n    fcn.00fc4150();\n    uStack676 = 0xfd328e;\n    uStack680 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd58;\n    puStack684 = &fcn.00fd3030::var_264h;\n    uStack688 = 0xfd30c3;\n    puStack672 = &stack0xfffffffc;\n    fcn.00fc3e14();\n    uStack688 = 0xfd30ce;\n    uStack688 = fcn.00fc3d98();\n    uStack692 = 0xfd30d4;\n    var_14h = fcn.00fc4e50();\n    do {\n        uStack692 = var_4h;\n        uStack696 = 0xfd32b8;\n        uStack700 = 0xfd30f5;\n        fcn.00fc3d6c();\n        uStack700 = 0;\n        uStack704 = 0xfd32b8;\n        uStack708 = **0xfdb3bc;\n        puStack712 = 0xfd3117;\n        fcn.00fc3e78();\n        puStack712 = 0xfd3122;\n        cVar1 = fcn.00fc776c();\n        if (cVar1 != '\\0') {\n            uStack716 = 0xfd3202;\n            uStack720 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd30;\n            puStack712 = &stack0xfffffffc;\n            fcn.00fc3d6c(0xfd32b8, var_4h);\n            fcn.00fc3e78(0xfd32c0, 0);\n            fcn.00fd253c();\n            fcn.00fc377c();\n            fcn.00fc3d6c(0xfd32e4, var_8h, 0xfd32b8, var_ch, 0);\n            fcn.00fc3e78(0xfd32ec);\n            fcn.00fc377c();\n            fcn.00fce6d4();\n            *in_FS_OFFSET = 0;\n        }\n        uStack688 = var_14h;\n        iVar2 = fcn.00fc4e58();\n        uVar3 = var_14h;\n    } while (iVar2 != 0);\n    fcn.00fc4e48();\n    *in_FS_OFFSET = uVar3;\n    uVar3 = 0xfd3295;\n    uStack688 = 0xfd324a;\n    fcn.00fc3bf4();\n    fcn.00fc34e4(uVar3);\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 935
    },
    "00fd4808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fd4808(void)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack656;\n    uint uStack652;\n    uchar *puStack648;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack648 = 0xfd4853;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    uStack652 = 0xfd49e5;\n    uStack656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd70;\n    puStack648 = &stack0xfffffffc;\n    fcn.00fc62fc();\n    fcn.00fc3e14(&fcn.00fd4808::var_258h);\n    uVar2 = fcn.00fc3d98();\n    uVar2 = (***0xfdb2d8)(uVar2);\n    do {\n        fcn.00fc3d6c(0xfd4a28, var_8h);\n        fcn.00fc3e78(0xfd4a30, 0xfd4a28, 0);\n        cVar1 = fcn.00fc776c();\n        if (cVar1 != '\\0') {\n            fcn.00fc3d6c(0xfd4a28, var_4h);\n            fcn.00fc3e78(0xfd4a44, 0);\n            fcn.00fc377c();\n            fcn.00fc3d6c(0xfd4a28, var_8h, 0);\n            fcn.00fc3e78(0xfd4a30, 0xfd4a28, 0);\n            fcn.00fce79c();\n        }\n        iVar3 = (***0xfdb198)(uVar2, &fcn.00fd4808::var_258h);\n    } while (iVar3 != 0);\n    (***0xfdb3ec)();\n    *in_FS_OFFSET = uVar2;\n    fcn.00fc3bf4(0xfd49ec);\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 582
    },
    "00fd5ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fd5ca0(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    \n    puStack84 = &stack0xfffffffc;\n    uStack88 = 0xfd5d2a;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack92;\n    uVar1 = fcn.00fc4ec0(0xfd5d50, 0xfd5d38);\n    pcVar2 = fcn.00fc4e98(uVar1);\n    fcn.00fc28e0();\n    var_40h = 0x40;\n    (*pcVar2)(&var_40h);\n    uVar1 = 0x100000;\n    fcn.00fc45cc(0x100000, 0);\n    fcn.00fc709c();\n    fcn.00fc377c();\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc3bdc(0xfd5d31);\n    return;\n}\n",
        "token_count": 279
    },
    "00fd5d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fd5d60(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint var_b0h;\n    uint var_ach;\n    uint var_88h;\n    code *var_4h;\n    \n    puStack196 = &stack0xfffffffc;\n    uStack200 = 0xfd5e07;\n    uStack204 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff34;\n    uVar1 = fcn.00fc4ec0(0xfd5e2c, 0xfd5e18);\n    var_4h = fcn.00fc4e98(uVar1);\n    var_ach = 0xa8;\n    iVar3 = 0;\n    while( true ) {\n        iVar2 = (*var_4h)(0, iVar3, &fcn.00fd5d60::var_ach, 0);\n        if (iVar2 == 0) break;\n        iVar3 = iVar3 + 1;\n        fcn.00fc3748(*in_EAX);\n        fcn.00fc3850(0xfd5e40, 0);\n    }\n    *in_FS_OFFSET = uStack204;\n    puStack196 = 0xfd5e0e;\n    uStack200 = 0xfd5e06;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 343
    },
    "00fd6684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fd6684(void)\n\n{\n    fcn.00fc4e80();\n    fcn.00fc3748();\n    return;\n}\n",
        "token_count": 35
    },
    "00fd66b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fd66b4(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack332;\n    uint uStack328;\n    uchar *puStack324;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_28h;\n    \n    puStack324 = &stack0xfffffffc;\n    uStack328 = 0xfd6777;\n    uStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack332;\n    uVar3 = 0x28;\n    iVar1 = (***0xfdb3f4)(0x28, &var_28h);\n    if (-1 < iVar1 + -1) {\n        puVar2 = &var_28h;\n        do {\n            (***0xfdb2b0)(*puVar2, 0x59, &var_128h, 0x100);\n            uStack332 = *in_EAX;\n            fcn.00fc3748();\n            fcn.00fc633c();\n            uVar3 = 0xfd6790;\n            fcn.00fc3850(0xfd6790, 0);\n            puVar2 = puVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack332 = 0xfd677e;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 351
    },
    "00fd6794": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fd6794(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    \n    puStack204 = &stack0xfffffffc;\n    uStack208 = 0xfd686c;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack212;\n    (***0xfdb304)(&var_ach);\n    fcn.00fc709c(0xfd6880);\n    fcn.00fc709c(0xfd6890, 0);\n    fcn.00fc3e78();\n    fcn.00fc377c();\n    *in_FS_OFFSET = 0;\n    fcn.00fc3bf4(0xfd6873);\n    return;\n}\n",
        "token_count": 200
    },
    "00fd6dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fd6dd4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0xfd6ded;\n    fcn.00fc3980();\n    uStack36 = 0xfd6e6b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = fcn.00fc3790();\n    iVar2 = fcn.00fc3790();\n    if (param_1 <= iVar1) {\n        iVar1 = param_1;\n    }\n    iVar4 = 1;\n    if (0 < iVar1) {\n        iVar5 = 1;\n        do {\n            iVar3 = fcn.00fc39e8();\n            *(iVar3 + -1 + iVar5) = *(*in_EAX + -1 + iVar5) ^ *(param_2 + -1 + iVar4);\n            iVar4 = iVar4 + 1;\n            if (iVar2 < iVar4) {\n                iVar4 = 1;\n            }\n            iVar5 = iVar5 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0xfd6e72;\n    uStack36 = 0xfd6e6a;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 413
    },
    "00fd745c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00fd745c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0xfd74b9;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    fcn.00fc297c();\n    fcn.00fc3d60();\n    fcn.00fc3c18();\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0xfd74c0;\n    uStack280 = 0xfd74b8;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 176
    },
    "00fd757c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fd757c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0xfd7593;\n    var_8h = param_2;\n    fcn.00fc3980();\n    uStack36 = 0xfd761e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar1 = fcn.00fc4ec0(0xfd763c, 0xfd7630);\n    pcVar2 = fcn.00fc4e98();\n    if (pcVar2 != NULL) {\n        var_ch = 0;\n        puVar3 = fcn.00fc2530();\n        var_ch = fcn.00fc2530();\n        *puVar3 = 1;\n        puVar3[1] = var_8h;\n        uVar4 = fcn.00fc3990(1, 0, puVar3, &fcn.00fd757c::var_ch, 0);\n        (*pcVar2)(uVar4);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc34e4(0xfd7625);\n    return;\n}\n",
        "token_count": 349
    },
    "00fd7668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "access PEB ldr_data",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fd7668(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0xfd7687;\n    fcn.00fc3980();\n    uStack40 = 0xfd77e3;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00fc34e4();\n    fcn.00fc4804(0x11);\n    _pe_dos_header = 0x99935097;\n    *0x4 = 0x2c89d95b;\n    *0x8 = 0x6df8e950;\n    *0xc = 0xdf4eff82;\n    *0x10 = 0xe8ead4ad;\n    *0x14 = 0xbb07f9ad;\n    *0x18 = 0xb746652e;\n    *0x1c = 0x7f612d05;\n    *0x20 = 0xd7520332;\n    *0x24 = 0x20278d52;\n    *0x28 = 0xfe2bf75e;\n    *0x2c = 0xba2aac6b;\n    *0x30 = 0xd1823480;\n    *0x34 = 0x5ef1f8a2;\n    *0x38 = 0x2ac162ac;\n    *0x3c = 0x6ea634c0;\n    *0x40 = 0xf10ecec6;\n    iVar2 = 0x11;\n    do {\n        iVar1 = fcn.00fd757c();\n        if (iVar1 != 0) break;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (iVar1 == 0) {\n        fcn.00fc37dc();\n        fcn.00fd7d84(param_2);\n    }\n    else {\n        param_2 = 0xfd77b7;\n        fcn.00fd74c8();\n    }\n    *in_FS_OFFSET = param_2;\n    uStack40 = 0xfd77ea;\n    uStack44 = 0xfd77cc;\n    fcn.00fc34e4();\n    uStack44 = 0xfd77da;\n    fcn.00fc4810();\n    uStack44 = 0xfd77e2;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 626
    },
    "00fc3338": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.00fc3338(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0xfdb000;\n    *0xfdb000 = 0;\n    puVar3 = *0xfdc628;\n    puVar4 = 0xfdc628;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 167
    },
    "00fc5424": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00fc5424(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00fc4648();\n    if (0 < iVar1) {\n        iVar1 = fcn.00fc4648();\n        if (-1 < iVar1 + -1) {\n            iVar2 = 0;\n            do {\n                fcn.00fc3850(0xfc5520, *(*0xfdc664 + 4 + iVar2 * 0x18), 0xfc5510, *in_EAX);\n                fcn.00fc3850(0xfc5520, *(*0xfdc664 + 8 + iVar2 * 0x18), 0xfc552c, *in_EAX);\n                fcn.00fc3850(0xfc5520, *(*0xfdc664 + 0xc + iVar2 * 0x18), 0xfc553c, *in_EAX);\n                fcn.00fc3850(0xfc5520, *(*0xfdc664 + 0x10 + iVar2 * 0x18), 0xfc554c, *in_EAX);\n                fcn.00fc3850();\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "00fc63c8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00fc63c8(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0xfc6539;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.00fc34e4();\n    iVar1 = fcn.00fc4648();\n    if ((0 < iVar1) && (var_4h = fcn.00fc4648(),  -1 < var_4h + -1)) {\n        do {\n            fcn.00fc6834(*in_EAX);\n            fcn.00fc3850(0xfc6550, 0);\n            fcn.00fc6834(*in_EAX);\n            fcn.00fc3850(0xfc6550, 0);\n            fcn.00fc6834(*in_EAX);\n            fcn.00fc3850(0xfc6550, 0);\n            fcn.00fc6834(*in_EAX);\n            fcn.00fc3850(0xfc6550, 0);\n            fcn.00fc6834(*in_EAX);\n            fcn.00fc3850(0xfc6550, 0);\n            fcn.00fc6834(*in_EAX);\n            uStack56 = 0xfc655c;\n            fcn.00fc3850();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0xfc6540;\n    uStack52 = 0xfc6538;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 465
    },
    "00fc7af0": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00fc7af0(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 35
    },
    "00fd6894": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00fd6894(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uchar auStack16 [2];\n    uint var_ah;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    _auStack16 = 5;\n    do {\n        var_4h = 0;\n        _auStack16 = _auStack16 + -1;\n    } while (_auStack16 != 0);\n    var_18h = 0xfd6967;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_1ch;\n    (***0xfdb26c)(&var_10h);\n    fcn.00fc709c();\n    uVar2 = var_18h;\n    fcn.00fc709c(0xfd6978, var_18h);\n    uVar1 = var_1ch;\n    fcn.00fc709c(0xfd6978);\n    fcn.00fc709c(0xfd6980, &var_10h);\n    fcn.00fc709c(0xfd6988, uVar2);\n    fcn.00fc709c(0xfd6988, 0xfd6978);\n    fcn.00fc3e78();\n    fcn.00fc377c();\n    *in_FS_OFFSET = uVar1;\n    fcn.00fc3bf4(0xfd696e);\n    return;\n}\n",
        "token_count": 450
    },
    "00fc2a68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc2a68(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 178
    },
    "00fc2c60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fc2c60(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.00fc4234();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 97
    },
    "00fc31dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fc31dc(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0xfdc634;\n    puStack20 = &stack0xfffffffc;\n    if (*0xfdc630 != 0) {\n        iVar1 = *(*0xfdc630 + 4);\n        uStack24 = 0xfc3222;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0xfdc634 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00fc323c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fc323c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0xfdc630 != NULL) {\n        iVar1 = **0xfdc630;\n        iVar4 = 0;\n        iVar2 = (*0xfdc630)[1];\n        uStack24 = 0xfc3282;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0xfdc634 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00fc3ad4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00fc3ad4(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = *(in_EAX + -4) + -1;\n        if (-1 < iVar3) {\n            iVar1 = *(param_2 + -4) - iVar3;\n            bVar7 = iVar1 == 0;\n            pcVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -4)) {\ncode_r0x00fc3af4:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        pcVar4 = pcVar5 + 1;\n                        bVar7 = *in_EAX == *pcVar5;\n                        pcVar5 = pcVar4;\n                        if (!bVar7) goto code_r0x00fc3af4;\n                    }\n                    iVar2 = iVar3;\n                    pcVar4 = in_EAX + 1;\n                    pcVar6 = pcVar5;\n                    if (!bVar7) goto code_r0x00fc3b08;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *pcVar4 == *pcVar6;\n                        iVar2 = iVar2 + -1;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = pcVar5 + -param_2;\n                goto code_r0x00fc3b18;\n            }\n        }\ncode_r0x00fc3b08:\n        in_EAX = NULL;\n    }\ncode_r0x00fc3b18:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 473
    },
    "00fc4668": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00fc25ec)\n\nvoid __fastcall fcn.00fc4668(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00fc34e4();\n            }\n            else {\n                fcn.00fc3508();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00fc3bdc();\n            }\n            else {\n                fcn.00fc3bf4();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00fc4268();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00fc4280();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00fc4234();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00fc495c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0xfdc008 != NULL) {\n                    (**0xfdc008)();\n                }\n                fcn.00fc25c0();\n                return;\n            }\n            do {\n                fcn.00fc4810();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 587
    },
    "00fc48ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fc48ec(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0xfc4950;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.00fc4880();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0xfdb028;\n    if (var_4h == *0xfdb028) {\n        *0xfdb028 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00fc5574": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fc5574(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.00fc34e4();\n    iVar1 = fcn.00fc4648();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00fc3850();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00fc5fa8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00fc5fa8(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (in_EAX != 0) {\n        if ((param_2 != 0) && (*(in_EAX + -4) == *(param_2 + -4))) {\n            iVar2 = *(in_EAX + -4) + -1;\n            if (iVar2 < 0) {\n                return 0;\n            }\n            do {\n                while (cVar1 = *(iVar2 + param_2),  iVar3 = iVar2,  param_1 != cVar1) {\ncode_r0x00fc5fef:\n                    if (cVar1 != *(iVar3 + in_EAX)) {\n                        return 0;\n                    }\n                    iVar2 = iVar3 + -1;\n                    if (iVar2 < 0) {\n                        return 1;\n                    }\n                }\n                iVar3 = iVar2 + -1;\n                if (iVar3 < 0) {\n                    return 1;\n                }\n                cVar1 = *(iVar3 + param_2);\n                if (param_1 != cVar1) goto code_r0x00fc5fef;\n                iVar3 = iVar2 + -2;\n                if (iVar3 < 0) {\n                    return 1;\n                }\n                cVar1 = *(iVar3 + param_2);\n                if (param_1 != cVar1) goto code_r0x00fc5fef;\n                iVar3 = iVar2 + -3;\n                if (iVar3 < 0) {\n                    return 1;\n                }\n                cVar1 = *(iVar3 + param_2);\n                if (param_1 != cVar1) goto code_r0x00fc5fef;\n                iVar2 = iVar2 + -4;\n                if (iVar2 < 0) {\n                    return 1;\n                }\n            } while( true );\n        }\n        in_EAX = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 460
    },
    "00fc627c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fc627c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0xfc628e;\n    fcn.00fc3980();\n    uStack20 = 0xfc62e2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00fc6204();\n    fcn.00fc680c();\n    while( true ) {\n        iVar1 = fcn.00fc3790();\n        if (7 < iVar1) break;\n        fcn.00fc37dc();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0xfc62e9;\n    uStack20 = 0xfc62e1;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 224
    },
    "00fc6560": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fc6560(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0xfc65d7;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00fc34e4();\n    iVar1 = fcn.00fc4648();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00fc6834(*in_EAX);\n            uStack32 = 0xfc65ec;\n            fcn.00fc3850();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0xfc65de;\n    uStack28 = 0xfc65d6;\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 245
    },
    "00fc94e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fc94e0(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puStack44 = 0xfc94fc;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    puStack44 = 0xfc9504;\n    fcn.00fc3980();\n    uStack48 = 0xfc9629;\n    puStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00fc7a18();\n    iVar1 = fcn.00fc4648();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00fc3ad4(&fcn.00fc94e0::var_10h);\n            fcn.00fc39f0();\n            puStack52 = &fcn.00fc94e0::var_14h;\n            iVar2 = fcn.00fc3ad4();\n            iVar3 = fcn.00fc3790(iVar2);\n            fcn.00fc3ad4(iVar3 - iVar2);\n            fcn.00fc39f0();\n            iVar2 = fcn.00fc3790();\n            if (1 < iVar2) {\n                fcn.00fc3d88(0xfc9664, var_4h);\n                puStack52 = NULL;\n                fcn.00fc3e78();\n                fcn.00fc7360();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack52;\n    puStack44 = 0xfc9630;\n    uStack48 = 0xfc95fd;\n    fcn.00fc3bf4();\n    uStack48 = 0xfc960a;\n    fcn.00fc3508();\n    uStack48 = 0xfc9618;\n    fcn.00fc4810();\n    uStack48 = 0xfc9620;\n    fcn.00fc34e4();\n    uStack48 = 0xfc9628;\n    fcn.00fc3bdc();\n    return;\n}\n",
        "token_count": 618
    },
    "00fcde44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00fcde44(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 6;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_10h = 0xfcde5f;\n    fcn.00fc3980();\n    var_14h = 0xfcdfde;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00fcde44::var_18h;\n    var_10h = &stack0xfffffffc;\n    while( true ) {\n        var_1ch = 0xfcdf6f;\n        iVar1 = fcn.00fc3ad4();\n        if (iVar1 == 0) break;\n        var_1ch = 0xfcde7a;\n        fcn.00fc34e4();\n        var_1ch = &fcn.00fcde44::var_ch;\n        var_20h = 0xfcde89;\n        fcn.00fc3d88();\n        var_20h = 0xfcde9b;\n        fcn.00fc7400(var_1ch);\n        var_20h = 0xfcdea6;\n        fcn.00fc377c();\n        var_20h = &fcn.00fcde44::var_18h;\n        var_24h = 0xfcdeb5;\n        fcn.00fc3d88();\n        var_24h = 0xfcdec7;\n        fcn.00fc7400(var_20h);\n        var_24h = 0xfcded2;\n        fcn.00fc377c();\n        var_24h = var_14h;\n        var_28h = &fcn.00fcde44::var_24h;\n        var_2ch = 0xfcdee5;\n        fcn.00fc3d88();\n        var_2ch = 0xfcdef7;\n        fcn.00fc7400(var_28h);\n        var_2ch = 0xfcdf02;\n        fcn.00fc377c();\n        var_2ch = var_20h;\n        var_30h = 0;\n        var_18h = &fcn.00fcde44::var_30h;\n        fcn.00fc3d88();\n        fcn.00fc7400(var_18h);\n        fcn.00fc377c();\n        fcn.00fc525c(var_18h, var_30h, var_2ch);\n        fcn.00fc3ad4();\n        fcn.00fc3a30();\n    }\n    *in_FS_OFFSET = var_18h;\n    var_10h = 0xfcdfe5;\n    var_14h = 0xfcdf91;\n    fcn.00fc3bf4();\n    var_14h = 0xfcdf99;\n    fcn.00fc34e4();\n    var_14h = 0xfcdfa6;\n    fcn.00fc3bf4();\n    var_14h = 0xfcdfae;\n    fcn.00fc34e4();\n    var_14h = 0xfcdfbb;\n    fcn.00fc3bf4();\n    var_14h = 0xfcdfc3;\n    fcn.00fc34e4();\n    var_14h = 0xfcdfd0;\n    fcn.00fc3bf4();\n    var_14h = 0xfcdfdd;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 986
    },
    "00fd006c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00fd006c(uint param_1, uint *param_2)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint *puStack68;\n    uint uStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0x50;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puStack36 = 0xfd0094;\n    fcn.00fc4150();\n    puStack36 = 0xfd009c;\n    fcn.00fc4150();\n    puStack36 = 0xfd00a4;\n    fcn.00fc4150();\n    ppcVar1 = *0xfdb198;\n    uStack40 = 0xfd02aa;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack52 = 0xfd00d2;\n    puStack48 = &fcn.00fd006c::var_260h;\n    puStack36 = &stack0xfffffffc;\n    fcn.00fc3e14();\n    uStack52 = 0xfd00dd;\n    uStack52 = fcn.00fc3d98();\n    uStack56 = 0xfd00e7;\n    uStack56 = (***0xfdb2d8)();\n    do {\n        puStack60 = 0xfd02d0;\n        uStack64 = 0xfd0104;\n        fcn.00fc3d6c();\n        puStack68 = 0xfd011a;\n        fcn.00fc3e78();\n        puStack68 = 0xfd012b;\n        fcn.00fcfe00();\n        puStack68 = 0xfd0139;\n        fcn.00fc3798();\n        uStack76 = 0xfd013f;\n        uStack72 = uStack56;\n        puStack68 = &fcn.00fd006c::var_260h;\n        iVar2 = (**ppcVar1)();\n    } while (iVar2 != 0);\n    puStack60 = 0xfd014d;\n    (***0xfdb3ec)();\n    puStack68 = 0xfd02d8;\n    uStack72 = 0xfd02ec;\n    uStack76 = 0xfd016b;\n    puStack60 = &fcn.00fd006c::var_260h;\n    fcn.00fc3e78();\n    uStack76 = 0xfd0176;\n    uStack76 = fcn.00fc3d98();\n    uStack80 = 0xfd0180;\n    uStack80 = (***0xfdb2d8)();\n    do {\n        uStack84 = 0xfd02d0;\n        uStack88 = 0xfd019d;\n        fcn.00fc3d6c();\n        uStack88 = var_280h;\n        puStack92 = 0xfd01b3;\n        fcn.00fc3e78();\n        puStack92 = 0xfd01c4;\n        fcn.00fcfe00();\n        puStack92 = 0xfd01d2;\n        fcn.00fc3798();\n        uStack100 = 0xfd01d8;\n        uStack96 = uStack80;\n        puStack92 = &fcn.00fd006c::var_260h;\n        iVar2 = (**ppcVar1)();\n    } while (iVar2 != 0);\n    uStack84 = 0xfd01e6;\n    (***0xfdb3ec)();\n    uStack84 = 0xfd01ee;\n    iVar2 = fcn.00fc3790();\n    if (1 < iVar2) {\n        uStack84 = 0;\n        uStack88 = 0xfd02d0;\n        uStack96 = 0xfd02f8;\n        uStack100 = 0xfd0211;\n        puStack92 = param_2;\n        fcn.00fc3e78();\n        uStack100 = 0xfd0222;\n        fcn.00fc377c();\n        uStack100 = 0xfd0230;\n        fcn.00fce6d4();\n    }\n    *in_FS_OFFSET = uStack80;\n    uStack72 = 0xfd02b1;\n    uStack76 = 0xfd0248;\n    fcn.00fc3bdc();\n    uStack76 = 0xfd0253;\n    fcn.00fc34e4();\n    uStack76 = 0xfd0263;\n    fcn.00fc3bf4();\n    uStack76 = 0xfd026e;\n    fcn.00fc34e4();\n    uStack76 = 0xfd027e;\n    fcn.00fc3bf4();\n    uStack76 = 0xfd0289;\n    fcn.00fc34e4();\n    uStack76 = 0xfd0294;\n    fcn.00fc3bdc();\n    uStack76 = 0xfd029c;\n    fcn.00fc34e4();\n    uStack76 = 0xfd02a9;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 1329
    },
    "00fd4a90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fd4a90(void)\n\n{\n    code **ppcVar1;\n    uint in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint uStackY108;\n    uint uStackY104;\n    uint *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uint *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint *puStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint *puStackY56;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0x51;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puStack32 = 0xfd4aae;\n    var_4h = in_EAX;\n    fcn.00fc4150();\n    ppcVar1 = *0xfdb198;\n    uStack36 = 0xfd4cfc;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00fc75c0(&fcn.00fd4a90::var_8h, 0);\n    puStackY56 = 0xfd4afb;\n    fcn.00fc717c(&fcn.00fd4a90::var_25ch);\n    puStackY56 = 0xfd4b09;\n    fcn.00fc3c3c();\n    uStackY60 = 0xfd4b1d;\n    puStackY56 = &fcn.00fd4a90::var_258h;\n    fcn.00fc3e14();\n    uStackY60 = 0xfd4b28;\n    uStackY60 = fcn.00fc3d98();\n    uStackY64 = 0xfd4b32;\n    uVar2 = (***0xfdb2d8)();\n    do {\n        uStackY64 = var_4h;\n        puStackY68 = 0xfd4d58;\n        uStackY72 = 0xfd4b4f;\n        fcn.00fc3d6c();\n        uStackY76 = 0xfd4b65;\n        fcn.00fc3e78();\n        uStackY76 = 0xfd4b76;\n        fcn.00fc377c();\n        uStackY80 = var_8h;\n        uStackY84 = 0xfd4d58;\n        puStackY88 = 0xfd4b98;\n        fcn.00fc3d6c();\n        uStackY92 = 0xfd4bae;\n        fcn.00fc3e78();\n        puStackY88 = 0xfd4bba;\n        fcn.00fce79c();\n        uStackY96 = 16600000;\n        uStackY92 = uVar2;\n        puStackY88 = &fcn.00fd4a90::var_258h;\n        iVar3 = (**ppcVar1)();\n    } while (iVar3 != 0);\n    puStackY68 = 0xfd4bd2;\n    uStackY64 = uVar2;\n    (***0xfdb3ec)();\n    uStackY72 = 0xfd4be6;\n    puStackY68 = &fcn.00fd4a90::var_258h;\n    fcn.00fc3e14();\n    uStackY72 = 0xfd4bf1;\n    uStackY72 = fcn.00fc3d98();\n    uStackY76 = 0xfd4bfb;\n    uVar2 = (***0xfdb2d8)();\n    do {\n        uStackY76 = var_4h;\n        uStackY80 = 0xfd4d9c;\n        uStackY84 = 0xfd4c18;\n        fcn.00fc3d6c();\n        puStackY88 = 0xfd4c2e;\n        fcn.00fc3e78();\n        puStackY88 = 0xfd4c3f;\n        fcn.00fc377c();\n        puStackY88 = var_27ch;\n        uStackY92 = var_8h;\n        uStackY96 = 0xfd4d9c;\n        puStackY100 = 0xfd4c61;\n        fcn.00fc3d6c();\n        uStackY104 = 0xfd4c77;\n        fcn.00fc3e78();\n        puStackY100 = 0xfd4c83;\n        fcn.00fce79c();\n        uStackY108 = 0xfd4c89;\n        uStackY104 = uVar2;\n        puStackY100 = &fcn.00fd4a90::var_258h;\n        iVar3 = (**ppcVar1)();\n    } while (iVar3 != 0);\n    uStackY80 = 0xfd4c9b;\n    uStackY76 = uVar2;\n    (***0xfdb3ec)();\n    *in_FS_OFFSET = uStackY76;\n    puStackY68 = 0xfd4d03;\n    uStackY72 = 0xfd4cb8;\n    fcn.00fc3bf4();\n    uStackY72 = 0xfd4cc3;\n    fcn.00fc34e4();\n    uStackY72 = 0xfd4cd3;\n    fcn.00fc3bf4();\n    uStackY72 = 0xfd4cde;\n    fcn.00fc34e4();\n    uStackY72 = 0xfd4cee;\n    fcn.00fc3bf4();\n    uStackY72 = 0xfd4cfb;\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 1432
    },
    "00fd564c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00fd564c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_458h;\n    uint var_454h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint var_3edh;\n    uint uStackY148;\n    uint *puStackY144;\n    uint uStackY140;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar1 = 0x8f;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    uStack32 = 0xfd5b6e;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00fc34e4();\n    fcn.00fc69a8();\n    fcn.00fc3990();\n    fcn.00fc4e20();\n    while( true ) {\n        iVar1 = fcn.00fc4e18();\n        if (iVar1 != 0) break;\n        fcn.00fc3d88();\n        uVar3 = 0;\n        puVar2 = &fcn.00fd564c::var_400h;\n        fcn.00fc69a8();\n        fcn.00fc3990();\n        fcn.00fc3cf4();\n        fcn.00fc69a8();\n        fcn.00fc3748();\n        fcn.00fc3798();\n        fcn.00fc3990();\n        fcn.00fc3cf4();\n        fcn.00fc75c0(puVar2, uVar3);\n        uVar3 = 0;\n        puVar2 = &fcn.00fd564c::var_418h;\n        fcn.00fc69a8();\n        fcn.00fc3990();\n        fcn.00fc3cf4();\n        fcn.00fc69a8();\n        fcn.00fc3748();\n        fcn.00fc3798();\n        fcn.00fc3990();\n        fcn.00fc3cf4();\n        fcn.00fc75c0(puVar2, uVar3);\n        fcn.00fc3e78();\n        fcn.00fc377c();\n    }\n    fcn.00fc69a8();\n    fcn.00fc3990();\n    fcn.00fc4e20();\n    while( true ) {\n        iVar1 = fcn.00fc4e18();\n        if (iVar1 != 0) break;\n        fcn.00fc3d88();\n        uVar3 = 0;\n        puVar2 = &fcn.00fd564c::var_43ch;\n        fcn.00fc69a8();\n        fcn.00fc3990();\n        fcn.00fc3cf4();\n        fcn.00fc69a8();\n        fcn.00fc3748();\n        fcn.00fc3798();\n        fcn.00fc3990();\n        fcn.00fc3cf4();\n        fcn.00fc75c0(puVar2, uVar3);\n        uVar3 = 0;\n        puVar2 = &fcn.00fd564c::var_454h;\n        uStackY140 = 0xfd5943;\n        fcn.00fc69a8();\n        uStackY140 = 0xfd594e;\n        fcn.00fc3990();\n        uStackY140 = 0xfd595b;\n        fcn.00fc3cf4();\n        uStackY140 = var_458h;\n        puStackY144 = 0xfd5972;\n        fcn.00fc69a8();\n        puStackY144 = &fcn.00fd564c::var_464h;\n        uStackY148 = 0xfd598b;\n        fcn.00fc3748();\n        puStackY144 = 0xfd5997;\n        fcn.00fc3798();\n        puStackY144 = 0xfd59a2;\n        fcn.00fc3990();\n        puStackY144 = 0xfd59af;\n        fcn.00fc3cf4();\n        uStackY140 = 0xfd59c0;\n        fcn.00fc75c0(puVar2, uVar3);\n        uStackY140 = var_454h;\n        uStackY148 = 0xfd59db;\n        fcn.00fc3e78();\n        uStackY148 = 0xfd59e8;\n        fcn.00fc377c();\n    }\n    puVar2 = &fcn.00fd564c::var_46ch;\n    fcn.00fc3d88();\n    fcn.00fc717c(puVar2);\n    fcn.00fc377c();\n    puVar2 = &fcn.00fd564c::var_474h;\n    fcn.00fc3d88();\n    fcn.00fc717c(puVar2);\n    fcn.00fc377c();\n    *in_FS_OFFSET = puVar2;\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    return;\n}\n",
        "token_count": 1558
    },
    "00fd5e44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.00fd5e44(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint uStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *var_10h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 0xb;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    uStack24 = 0xfd5fd0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = &fcn.00fd5e44::var_24h;\n    uStack36 = 0xfd5e6d;\n    fcn.00fc4ea0();\n    uStack36 = 0xfd5e77;\n    fcn.00fc3d88();\n    uStack36 = var_2ch;\n    var_24h = 0xfd5fe0;\n    var_28h = 0;\n    var_2ch = &fcn.00fd5e44::var_30h;\n    var_30h = 0xfd5e92;\n    fcn.00fc69a8();\n    var_30h = 0xfd5e9d;\n    fcn.00fc3d88();\n    fcn.00fc69a8();\n    fcn.00fc3d88();\n    var_30h = 0xfd5ec7;\n    fcn.00fc75c0(var_2ch, var_28h);\n    fcn.00fc3e78(0xfd6070);\n    fcn.00fc377c();\n    fcn.00fc37dc();\n    fcn.00fc3d88();\n    fcn.00fc709c(var_48h);\n    fcn.00fc3e78(0xfd6070, var_50h);\n    fcn.00fc377c();\n    fcn.00fd5ca0(0xfd6094, *in_EAX);\n    fcn.00fc3850(0xfd60a8, var_54h);\n    fcn.00fd5d60(0xfd60b4, *in_EAX);\n    uVar2 = 0xfd60a8;\n    fcn.00fc3850(0xfd60a8, 0xfd60b4);\n    *in_FS_OFFSET = uVar2;\n    fcn.00fc3508(0xfd5fd7);\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bdc();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    return;\n}\n",
        "token_count": 937
    },
    "00fd698c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00fd698c(void)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar4 = 0xc;\n    do {\n        var_4h = 0;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_14h = 0xfd6c78;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00fc6ce8(0xfd6c8c);\n    uVar3 = var_4h;\n    fcn.00fc3850(0xfd6ca4, var_4h);\n    uVar1 = *in_EAX;\n    fcn.00fd6684(0xfd6cb0, uVar1);\n    fcn.00fc3850(0xfd6cc8, var_8h);\n    fcn.00fc7b08(0xfd6cd8, *in_EAX);\n    fcn.00fc3850(0xfd6cf0, var_18h);\n    fcn.00fc3d88();\n    puVar2 = var_10h;\n    fcn.00fc66e4(var_10h);\n    fcn.00fc6bd8(0xfd6cf8, 0xfd6c8c);\n    fcn.00fc3e78(0xfd6d00, uVar3);\n    fcn.00fc377c();\n    fcn.00fc37dc();\n    fcn.00fc3d88();\n    fcn.00fc6634(uVar1);\n    fcn.00fc65f0(0xfd6d2c, var_8h);\n    fcn.00fc3e78(0xfd6d00, 0xfd6d34, 0xfd6cc8);\n    fcn.00fc377c();\n    fcn.00fc37dc();\n    fcn.00fc3d88();\n    fcn.00fc4f30(0, 0xfd6cd8);\n    fcn.00fc709c();\n    fcn.00fc4f30(1, 0xfd6d50, 0xfd6cf0);\n    fcn.00fc709c();\n    fcn.00fc3e78(0xfd6d00, puVar2);\n    fcn.00fc377c();\n    fcn.00fd66b4(0xfd6d5c, *in_EAX);\n    fcn.00fc3850(0xfd6ca4, 0xfd6c8c);\n    fcn.00fd6894(0xfd6d70, *in_EAX);\n    fcn.00fc3850(0xfd6ca4, 0xfd6cf8);\n    fcn.00fd6794(0xfd6d84, *in_EAX);\n    fcn.00fc3850(0xfd6cc8, uVar3);\n    fcn.00fd5e44(*in_EAX);\n    fcn.00fc3850(0xfd6cc8, 0xfd6d00);\n    fcn.00fc4ee0(1);\n    fcn.00fd6290(*in_EAX);\n    fcn.00fc3850(0xfd6ca4, 0xfd6ca4, uVar1);\n    fcn.00fc4ee0(1);\n    fcn.00fc3850(0xfd6ca4, 0xfd6d94, *in_EAX);\n    fcn.00fc4ee0();\n    fcn.00fd564c();\n    fcn.00fc3798();\n    *in_FS_OFFSET = 1;\n    fcn.00fc3508(0xfd6c7f);\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc34e4();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    fcn.00fc3bf4();\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 1424
    },
    "00fd841c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.00fd841c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint32_t var_88h;\n    uint var_68h;\n    uint var_58h;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    uint var_2ch;\n    uint *var_28h;\n    uint *puStackY40;\n    uint uStack32;\n    uint uStack28;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0x18;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_14h = 0xfd843a;\n    fcn.00fc3980();\n    uStack28 = 0xfd8666;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY40 = 0xfd8466;\n    var_14h = &stack0xfffffffc;\n    fcn.00fd7d84(&fcn.00fd841c::var_8h);\n    puStackY40 = 0xfd8474;\n    fcn.00fc3d88();\n    puStackY40 = 0xfd8482;\n    fcn.00fc77c8();\n    puStackY40 = 0xfd8492;\n    fcn.00fc62fc();\n    puStackY40 = 0xfd84a3;\n    fcn.00fc3e14();\n    puStackY40 = 0xfd84ae;\n    fcn.00fc7360();\n    puStackY40 = 0xfd84b6;\n    cVar1 = fcn.00fc776c();\n    if (cVar1 == '\\0') {\n        puStackY40 = 0xfd84ca;\n        fcn.00fc62fc();\n        puStackY40 = 0xfd84db;\n        fcn.00fc3e14();\n        puStackY40 = 0xfd84e6;\n        fcn.00fc7360();\n    }\n    puStackY40 = 0xfd84f1;\n    fcn.00fc6724();\n    puStackY40 = 0xfd84ff;\n    fcn.00fc377c();\n    puStackY40 = 0xfd8510;\n    fcn.00fc633c();\n    puStackY40 = 0xfd8520;\n    iVar2 = fcn.00fc3ad4();\n    if (iVar2 == 0) {\n        puStackY40 = 0xfd859f;\n        fcn.00fc28e0();\n        var_a4h = 0x3c;\n        var_a0h = 0x1c0;\n        var_9ch = 0;\n        var_98h = 0;\n        puStackY40 = 0xfd85cb;\n        var_94h = fcn.00fc3d98();\n        var_90h = 0;\n        puStackY40 = 0xfd85e7;\n        fcn.00fc7854();\n        puStackY40 = 0xfd85f2;\n        var_8ch = fcn.00fc3d98();\n        puStackY40 = &fcn.00fd841c::var_a4h;\n        var_28h = 0xfd860e;\n        var_88h = param_2 != '\\0';\n        (***0xfdb150)();\n    }\n    else {\n        puStackY40 = 0xfd8533;\n        fcn.00fc28e0();\n        var_58h = 0x44;\n        puStackY40 = &fcn.00fd841c::var_68h;\n        var_28h = &fcn.00fd841c::var_58h;\n        var_2ch = 0xfd855b;\n        fcn.00fc7854();\n        var_2ch = 0xfd8566;\n        var_2ch = fcn.00fc3d98();\n        uStackY52 = 0;\n        uStackY56 = 0x4000410;\n        uStackY60 = 0;\n        uStackY64 = 0;\n        uStackY68 = 0;\n        uStackY72 = 0;\n        uStackY76 = 0xfd857e;\n        uStackY76 = fcn.00fc3d98();\n        uStackY80 = 0xfd8588;\n        (***0xfdb420)();\n    }\n    *in_FS_OFFSET = uStackY76;\n    uStackY68 = 0xfd866d;\n    uStackY72 = 0xfd862b;\n    fcn.00fc3bf4();\n    uStackY72 = 0xfd863b;\n    fcn.00fc3508();\n    uStackY72 = 0xfd864b;\n    fcn.00fc3bf4();\n    uStackY72 = 0xfd8658;\n    fcn.00fc3bf4();\n    uStackY72 = 0xfd8665;\n    fcn.00fc3508();\n    return;\n}\n",
        "token_count": 1331
    }
}