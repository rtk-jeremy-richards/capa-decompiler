{
    "0089a609": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0089a609(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint16_t unaff_BX;\n    uchar *unaff_EBP;\n    uint unaff_ESI;\n    uchar *puVar5;\n    code *UNRECOVERED_JUMPTABLE;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint var_80h;\n    \n    if (unaff_EBP <= &stack0x00000060) {\n        iVar2 = 0x40;\n        iVar1 = 0xf;\n        if (unaff_BX != 0) {\n            for (; unaff_BX >> iVar1 == 0; iVar1 = iVar1 + -1) {\n            }\n        }\n        uVar3 = unaff_EBP + -0x80 & 0xfffffffc;\n        puVar4 = uVar3 - 0x40;\n        *(uVar3 - 0x44) = UNRECOVERED_JUMPTABLE;\n        *(uVar3 - 0x48) = unaff_ESI;\n        *(uVar3 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar3, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar4 < 0) * 0x80 | (puVar4 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar4 & 0xff) & 1U) == 0) * 4 | uVar3 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar5 = *0x10;\n        for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        UNRECOVERED_JUMPTABLE = *(uVar3 - 0x44);\n    }\n    // WARNING: Could not recover jumptable at 0x008d126d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 673
    },
    "008022da": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.008022da(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    uint unaff_ESI;\n    uchar *unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    if (unaff_EDI <= &stack0x00000060) {\n        uVar2 = unaff_EDI + -0x80 & 0xfffffffc;\n        puVar3 = uVar2 - 0x40;\n        *(uVar2 - 0x44) = unaff_EDI;\n        *(uVar2 - 0x48) = unaff_ESI;\n        *(uVar2 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar2, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar2 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = **0x10;\n            *0x10 = *0x10 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x009a23c9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 562
    },
    "00857b42": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00857b42(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_ESI;\n    uchar *puVar4;\n    code *UNRECOVERED_JUMPTABLE;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    if (unaff_ESI <= &stack0x00000060) {\n        uVar2 = unaff_ESI + -0x80 & 0xfffffffc;\n        puVar3 = uVar2 - 0x40;\n        *(uVar2 - 0x44) = UNRECOVERED_JUMPTABLE;\n        *(uVar2 - 0x48) = unaff_ESI;\n        *(uVar2 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar2, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar2 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar4 = *0x10;\n        for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        UNRECOVERED_JUMPTABLE = *(uVar2 - 0x44);\n    }\n    // WARNING: Could not recover jumptable at 0x00db391d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 594
    },
    "0092c8f0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0092c8f0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    uint32_t unaff_ESI;\n    uchar *unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    if (unaff_EDI <= &stack0x00000060) {\n        iVar1 = 0x1f;\n        if (unaff_ESI != 0) {\n            for (; unaff_ESI >> iVar1 == 0; iVar1 = iVar1 + -1) {\n            }\n        }\n        uVar2 = unaff_EDI + -0x80 & 0xfffffffc;\n        puVar3 = uVar2 - 0x40;\n        *(uVar2 - 0x44) = unaff_EDI;\n        *(uVar2 - 0x48) = unaff_ESI;\n        *(uVar2 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar2, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar2 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = **0x10;\n            *0x10 = *0x10 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00837b16. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 616
    },
    "00da89bf": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00da89bf(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00d8643f": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00d8643f(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *unaff_ESI;\n    bool in_CF;\n    uint8_t uVar4;\n    bool in_ZF;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uchar uStack0000000c;\n    uint32_t in_stack_00000030;\n    uint32_t in_stack_00000034;\n    \n    if (in_CF || in_ZF) {\n        return;\n    }\n    do {\n    } while ((in_stack_00000030 & 0x16bd0d30) == 0);\n    uStack0000000c = 1;\n    uVar7 = (in_stack_00000034 & 0x4000) != 0;\n    uVar6 = (in_stack_00000034 & 0x200) != 0;\n    uVar5 = (in_stack_00000034 & 0x100) != 0;\n    uVar4 = (in_stack_00000034 & 0x10) != 0;\n    uVar11 = (in_stack_00000034 & 0x200000) != 0;\n    uVar8 = (in_stack_00000034 & 0x40000) != 0;\n    uVar10 = 0;\n    uVar9 = 0;\n    fcn.007f007b();\n    uVar1 = *unaff_ESI;\n    uVar2 = unaff_ESI[1];\n    uVar3 = uVar1 + uVar2;\n    unaff_ESI[1] = uVar3;\n    *unaff_ESI = (uVar7 & 1) * 0x4000 | SCARRY4(uVar1, uVar2) * 0x800 | ((in_stack_00000034 & 0x400) != 0) * 0x400 |\n                 (uVar6 & 1) * 0x200 | (uVar5 & 1) * 0x100 | (uVar3 < 0) * 0x80 | (uVar3 == 0) * 0x40 |\n                 (uVar4 & 1) * 0x10 | ((POPCOUNT(uVar3 & 0xff) & 1U) == 0) * 4 | CARRY4(uVar1, uVar2) |\n                 (uVar11 & 1) * 0x200000 | (uVar10 & 1) * 0x100000 | (uVar9 & 1) * 0x80000 | (uVar8 & 1) * 0x40000;\n    return;\n}\n",
        "token_count": 653
    },
    "0092dfba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nchar * __thiscall fcn.0092dfba(uint32_t param_1, int16_t param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    int32_t arg_ch;\n    uchar *unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t unaff_EDI;\n    bool in_CF;\n    uint8_t in_AF;\n    bool in_ZF;\n    char in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar7;\n    uint16_t in_stack_00000020;\n    int32_t in_stack_00000038;\n    \n    uVar5 = unaff_EDI * 4 + 0x16846deb;\n    if (!in_ZF && in_OF == in_SF) {\n        if (in_CF || in_ZF) {\n            fcn.0092dfba();\n            if (-1 < param_2 + -0x250a) {\n                pcVar2 = fcn.008114ae();\n                return pcVar2;\n            }\n            pcVar2 = fcn.00982f41();\n            return pcVar2;\n        }\n        if (in_OF) {\n            return in_EAX;\n        }\n        if (-1 < (in_stack_00000020 & uVar5 - 0x59fU)) {\n            uVar7 = fcn.00d10096();\n            pcVar2 = uVar7;\n            if (unaff_EBP <= &stack0x00000060) {\n                uVar5 = unaff_EBP + -0x80 & 0xfffffffc;\n                pcVar2 = uVar5 - 0x40;\n                *(uVar5 - 0x44) = in_stack_00000038 + (uVar7 >> 0x20) + -1;\n                *(uVar5 - 0x48) = unaff_ESI;\n                *(uVar5 - 0x4c) =\n                     (in_NT & 1) * 0x4000 | SBORROW4(uVar5, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                     (pcVar2 < 0) * 0x80 | (pcVar2 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n                     ((POPCOUNT(pcVar2 & 0xff) & 1U) == 0) * 4 | uVar5 < 0x40 | (in_ID & 1) * 0x200000 |\n                     (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n                pcVar6 = pcVar2;\n                for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *pcVar6 = **0x10;\n                    *0x10 = *0x10 + 1;\n                    pcVar6 = pcVar6 + 1;\n                }\n            }\n            return pcVar2;\n        }\n        return in_EAX;\n    }\n    if (!in_ZF) {\n        iVar3 = -0x114 - in_EAX;\n        do {\n            if (*in_EAX == '\\0') break;\n            in_EAX[unaff_EBP + iVar3] = *in_EAX;\n            uVar5 = uVar5 + 1;\n            in_EAX = in_EAX + 1;\n        } while (uVar5 < param_1);\n    }\n    unaff_EBP[uVar5 - 0x114] = 0;\n    iVar3 = (**0x7b802c)();\n    if ((iVar3 == 0) && (iVar3 = (**0x7b8028)(),  iVar3 == 0)) {\n        return NULL;\n    }\n    if (iVar3 != *(unaff_EBP + 8)) {\n        if (*(unaff_ESI + 1) != '#') {\n            pcVar2 = fcn.0082f627(iVar3, unaff_ESI + 1);\n            return pcVar2;\n        }\n        pcVar2 = unaff_ESI + 2;\n        arg_ch = 0;\n        cVar1 = *(unaff_ESI + 2);\n        while ((cVar1 != '\\0' && (pcVar2 = pcVar2 + 1,  cVar1 - 0x30U < 10))) {\n            arg_ch = cVar1 + -0x30 + arg_ch * 10;\n            cVar1 = *pcVar2;\n        }\n        pcVar2 = fcn.0082f627(iVar3, arg_ch);\n        return pcVar2;\n    }\n    if (unaff_EBP[0x10] == '\\0') {\n        pcVar2 = (**0x7b8030)();\n        return pcVar2;\n    }\n    iVar3 = *(unaff_EBP + 0xc);\n    uVar5 = 0;\n    do {\n        uVar4 = uVar5 & 0x1f;\n        uVar4 = uVar5 + (0x2eb859b0 << uVar4 | 0x2eb859b0 >> 0x20 - uVar4) ^\n                (unaff_EBP + (uVar5 - 0x114))[iVar3 - (unaff_EBP + -0x114)];\n        unaff_EBP[uVar5 - 0x114] = uVar4;\n        if (uVar4 == 0) break;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 0x104);\n    pcVar2 = (**0x7b8030)();\n    return pcVar2;\n}\n",
        "token_count": 1387
    },
    "008d2636": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.008d2636(uint param_1, int32_t param_2, char param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    \n    uVar3 = 0;\n    uVar2 = 0;\n    param_2 = param_2 - in_EAX;\n    do {\n        uVar1 = *in_EAX;\n        uVar4 = in_EAX[param_2];\n        in_EAX = in_EAX + 1;\n        if (param_3 != '\\0') {\n            uVar4 = uVar4 ^ (0x2eb859b0 << (uVar3 & 0x1f) | 0x2eb859b0 >> 0x20 - (uVar3 & 0x1f)) + uVar2;\n            uVar3 = uVar2 + 1;\n            uVar2 = uVar3;\n        }\n    } while ((uVar4 != 0) && (uVar4 == uVar1));\n    if (uVar4 < uVar1) {\n        return 0xffffffff;\n    }\n    return uVar1 < uVar4;\n}\n",
        "token_count": 285
    },
    "009aa161": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x008b6f94)\n\nuint fcn.009aa161(void)\n\n{\n    int32_t *piVar1;\n    uchar uVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint16_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t extraout_ECX;\n    uint16_t *puVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint32_t unaff_EBX;\n    uint16_t uVar16;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    uint32_t uVar17;\n    uint8_t *unaff_EDI;\n    ulong uVar18;\n    uint uStack00000004;\n    \n    uStack00000004 = 0x9aa16f;\n    uVar18 = fcn.007f007b();\n    uVar16 = *0x10 + 8;\n    iVar9 = extraout_ECX;\n    do {\n        iVar14 = uVar18 >> 0x20;\n        uVar6 = uVar18 << 8;\n        unaff_ESI = unaff_ESI << 8 | *unaff_EDI;\n        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n        do {\n            uVar8 = *(iVar14 + iVar9);\n            uVar11 = (uVar6 >> 0xb) * uVar8;\n            if (unaff_ESI < uVar11) {\n                iVar9 = *(unaff_EBP + -0xc);\n                *(*(unaff_EBP + -0x40) + iVar9) = (0x800 - uVar8 >> 5) + uVar8;\n                iVar14 = *(unaff_EBP + -0x34) * 2;\n                uVar6 = uVar11;\n            }\n            else {\n                iVar14 = *(unaff_EBP + -0x40);\n                uVar6 = uVar6 - uVar11;\n                unaff_ESI = unaff_ESI - uVar11;\n                iVar9 = *(unaff_EBP + -0xc);\n                *(iVar14 + iVar9) = uVar8 - (uVar8 >> 5);\n                iVar14 = iVar14 + 1;\n            }\n            piVar1 = unaff_EBP + -0x38;\n            *piVar1 = *piVar1 + -1;\n            *(unaff_EBP + -0x34) = iVar14;\n            if (*piVar1 == 0) {\n                uVar11 = iVar14 - 0x40;\n                if (uVar11 < 4) {\n                    *(unaff_EBP + -0x10) = uVar11;\n                }\n                else {\n                    iVar9 = (uVar11 >> 1) + -1;\n                    uVar17 = uVar11 & 1 | 2;\n                    *(unaff_EBP + -0x38) = iVar9;\n                    if (uVar11 < 0xe) {\n                        iVar9 = uVar17 << (iVar9 & 0x1f);\n                        *(unaff_EBP + -0x10) = iVar9;\n                        iVar9 = *(unaff_EBP + -0x20) + 0x55e + (iVar9 - uVar11) * 2;\n                    }\n                    else {\n                        iVar9 = (uVar11 >> 1) + -5;\n                        do {\n                            if (uVar6 < 0x1000000) {\n                                if (*(unaff_EBP + -8) == *(unaff_EBP + 8) + -1) {\n                                    return 1;\n                                }\n                                uVar6 = uVar6 << 8;\n                                unaff_ESI = unaff_ESI << 8 | **(unaff_EBP + -8);\n                                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                            }\n                            uVar6 = uVar6 >> 1;\n                            uVar17 = uVar17 * 2;\n                            if (uVar6 <= unaff_ESI) {\n                                unaff_ESI = unaff_ESI - uVar6;\n                                uVar17 = uVar17 | 1;\n                            }\n                            iVar9 = iVar9 + -1;\n                        } while (iVar9 != 0);\n                        iVar9 = *(unaff_EBP + -0x20) + 0x644;\n                        *(unaff_EBP + -0x10) = uVar17 << 4;\n                        *(unaff_EBP + -0x38) = 4;\n                    }\n                    iVar14 = 1;\n                    *(unaff_EBP + -0xc) = iVar9;\n                    *(unaff_EBP + -0x30) = 1;\n                    *(unaff_EBP + -0x34) = 1;\n                    do {\n                        puVar3 = *(unaff_EBP + -8);\n                        iVar14 = iVar14 * 2;\n                        if (uVar6 < 0x1000000) {\n                            if (puVar3 == *(unaff_EBP + 8) + -1) {\n                                return 1;\n                            }\n                            uVar6 = uVar6 << 8;\n                            unaff_ESI = unaff_ESI << 8 | *puVar3;\n                            *(unaff_EBP + -8) = puVar3 + 1;\n                        }\n                        uVar8 = *(iVar14 + iVar9);\n                        uVar11 = (uVar6 >> 0xb) * uVar8;\n                        if (unaff_ESI < uVar11) {\n                            iVar9 = *(unaff_EBP + -0xc);\n                            *(iVar14 + iVar9) = (0x800 - uVar8 >> 5) + uVar8;\n                            iVar14 = *(unaff_EBP + -0x34) * 2;\n                            uVar6 = uVar11;\n                        }\n                        else {\n                            uVar6 = uVar6 - uVar11;\n                            unaff_ESI = unaff_ESI - uVar11;\n                            iVar9 = *(unaff_EBP + -0xc);\n                            *(iVar14 + iVar9) = uVar8 - (uVar8 >> 5);\n                            iVar14 = iVar14 + 1;\n                            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) | *(unaff_EBP + -0x30);\n                        }\n                        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) << 1;\n                        piVar1 = unaff_EBP + -0x38;\n                        *piVar1 = *piVar1 + -1;\n                        *(unaff_EBP + -0x34) = iVar14;\n                    } while (*piVar1 != 0);\n                    unaff_EBX = *(unaff_EBP + -0x14);\n                }\n                piVar1 = unaff_EBP + -0x10;\n                *piVar1 = *piVar1 + 1;\n                if (*piVar1 == 0) {\ncode_r0x008b14d0:\n                    iVar9 = *(unaff_EBP + -8);\n                    if (uVar6 < 0x1000000) {\n                        if (iVar9 == *(unaff_EBP + 8) + -1) {\n                            return 1;\n                        }\n                        iVar9 = iVar9 + 1;\n                    }\n                    uVar15 = *(unaff_EBP + -0x18);\n                    **(unaff_EBP + 0xc) = iVar9 - *(unaff_EBP + 8);\n                    **(unaff_EBP + 0x14) = uVar15;\n                    return 0;\n                }\n                do {\n                    uVar11 = *(unaff_EBP + -0x18);\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 2;\n                    if (uVar11 < *(unaff_EBP + -0x10)) {\n                        return 1;\n                    }\n                    iVar9 = *(unaff_EBP + 0x10) - *(unaff_EBP + -0x10);\n                    *(unaff_EBP + -0x40) = iVar9;\n                    while( true ) {\n                        uVar2 = *(iVar9 + uVar11);\n                        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -1;\n                        *(uVar11 + *(unaff_EBP + 0x10)) = uVar2;\n                        uVar11 = uVar11 + 1;\n                        *(unaff_EBP + -1) = uVar2;\n                        *(unaff_EBP + -0x18) = uVar11;\n                        if (*(unaff_EBP + -0x1c) == 0) break;\n                        if (uVar11 == 0xffffffff) goto code_r0x008b14d0;\n                        iVar9 = *(unaff_EBP + -0x40);\n                    }\n                    while( true ) {\n                        if (*(unaff_EBP + -0x18) == -1) goto code_r0x008b14d0;\n                        uVar11 = *(unaff_EBP + -0x44) & *(unaff_EBP + -0x18);\n                        iVar9 = *(unaff_EBP + -0x20);\n                        *(unaff_EBP + -0x1c) = uVar11;\n                        *(unaff_EBP + -0xc) = iVar9 + (unaff_EBX * 0x10 + uVar11) * 2;\n                        uVar11 = uVar6;\n                        if (uVar6 < 0x1000000) {\n                            puVar3 = *(unaff_EBP + -8);\n                            if (puVar3 == *(unaff_EBP + 8) + -1) {\n                                return 1;\n                            }\n                            uVar11 = uVar6 << 8;\n                            unaff_ESI = unaff_ESI << 8 | *puVar3;\n                            *(unaff_EBP + -8) = puVar3 + 1;\n                        }\n                        uVar17 = **(unaff_EBP + -0xc);\n                        *(unaff_EBP + -0x38) = uVar17;\n                        uVar6 = (uVar11 >> 0xb) * uVar17;\n                        *(unaff_EBP + -0x40) = uVar17;\n                        if (uVar6 <= unaff_ESI) break;\n                        uVar17 = *(unaff_EBP + -0x48);\n                        uVar12 = *(unaff_EBP + -0x18);\n                        uVar11 = 1;\n                        **(unaff_EBP + -0xc) = (0x800 - *(unaff_EBP + -0x40) >> 5) + *(unaff_EBP + -0x38);\n                        uVar7 = *(unaff_EBP + -0x3c);\n                        uVar10 = *(unaff_EBP + -0x3c) & 0xffffff00 | uVar7 + 0x8c;\n                        iVar9 = 0x1f;\n                        if (uVar10 != 0) {\n                            for (; uVar10 >> iVar9 == 0; iVar9 = iVar9 + -1) {\n                            }\n                        }\n                        iVar9 = ((*(unaff_EBP + -1) >> (8U - *(unaff_EBP + -0x3c) & 0x1f)) +\n                                ((uVar17 & uVar12) << (uVar7 & 0x1f))) * 0x600 + 0xe6c + *(unaff_EBP + -0x20);\n                        *(unaff_EBP + -0xc) = iVar9;\n                        if (*(unaff_EBP + -0x14) < 7) {\ncode_r0x0089a857:\n                            do {\n                                *(unaff_EBP + -0x38) = uVar11 * 2;\n                                if (uVar6 < 0x1000000) {\n                                    if (*(unaff_EBP + -8) == *(unaff_EBP + 8) + -1) {\n                                        return 1;\n                                    }\n                                    uVar6 = uVar6 << 8;\n                                    unaff_ESI = unaff_ESI << 8 | **(unaff_EBP + -8);\n                                    *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                                }\n                                uVar8 = *(uVar11 * 2 + iVar9);\n                                uVar17 = uVar8;\n                                uVar12 = (uVar6 >> 0xb) * uVar17;\n                                if (unaff_ESI < uVar12) {\n                                    iVar5 = 0xf;\n                                    if (uVar11 != 0) {\n                                        for (; uVar11 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                                        }\n                                    }\n                                    uVar17 = (0x800 - uVar17 >> 5) + uVar17;\n                                    iVar9 = 0x1f;\n                                    if (uVar17 != 0) {\n                                        for (; uVar17 >> iVar9 == 0; iVar9 = iVar9 + -1) {\n                                        }\n                                    }\n                                    iVar9 = *(unaff_EBP + -0xc);\n                                    *(*(unaff_EBP + -0x38) + iVar9) = uVar17;\n                                    uVar11 = uVar11 * 2;\n                                    uVar6 = uVar12;\n                                }\n                                else {\n                                    iVar14 = *(unaff_EBP + -0x38);\n                                    uVar6 = uVar6 - uVar12;\n                                    unaff_ESI = unaff_ESI - uVar12;\n                                    iVar9 = *(unaff_EBP + -0xc);\n                                    *(iVar14 + iVar9) = uVar8 - (uVar8 >> 5);\n                                    uVar11 = iVar14 + 1;\n                                }\n                                iVar14 = *(unaff_EBP + -0x14);\n                            } while (uVar11 < 0x100);\n                        }\n                        else {\n                            iVar5 = 0;\n                            if (unaff_ESI != 0) {\n                                for (; (unaff_ESI >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n                                }\n                            }\n                            uVar17 = *((*(unaff_EBP + -0x18) - *(unaff_EBP + -0x10)) + *(unaff_EBP + 0x10));\n                            while( true ) {\n                                puVar3 = *(unaff_EBP + -8);\n                                *(unaff_EBP + -0x40) = uVar17 * 2;\n                                uVar17 = uVar17 * 2 & 0x100;\n                                *(unaff_EBP + -0x34) = uVar17;\n                                puVar13 = iVar9 + 0x200 + (uVar17 + uVar11) * 2;\n                                *(unaff_EBP + -0x38) = puVar13;\n                                if (uVar6 < 0x1000000) {\n                                    if (puVar3 == *(unaff_EBP + 8) + -1) {\n                                        return 1;\n                                    }\n                                    uVar6 = uVar6 << 8;\n                                    unaff_ESI = unaff_ESI << 8 | *puVar3;\n                                    *(unaff_EBP + -8) = puVar3 + 1;\n                                }\n                                uVar8 = *puVar13;\n                                uVar17 = (uVar6 >> 0xb) * uVar8;\n                                if (unaff_ESI < uVar17) {\n                                    iVar9 = 0x1f;\n                                    if (uVar11 != 0) {\n                                        for (; uVar11 >> iVar9 == 0; iVar9 = iVar9 + -1) {\n                                        }\n                                    }\n                                    uVar11 = uVar11 * 2;\n                                    iVar9 = *(unaff_EBP + -0x34);\n                                    **(unaff_EBP + -0x38) = (0x800 - uVar8 >> 5) + uVar8;\n                                    uVar6 = uVar17;\n                                }\n                                else {\n                                    unaff_ESI = unaff_ESI - uVar17;\n                                    iVar9 = *(unaff_EBP + -0x34);\n                                    **(unaff_EBP + -0x38) = uVar8 - (uVar8 >> 5);\n                                    uVar11 = uVar11 * 2 + 1;\n                                    uVar6 = uVar6 - uVar17;\n                                }\n                                if (iVar9 == 0) break;\n                                if (0xff < uVar11) goto code_r0x0091fb84;\n                                uVar17 = *(unaff_EBP + -0x40);\n                                iVar9 = *(unaff_EBP + -0xc);\n                            }\n                            if (uVar11 < 0x100) {\n                                iVar9 = *(unaff_EBP + -0xc);\n                                goto code_r0x0089a857;\n                            }\ncode_r0x0091fb84:\n                            iVar14 = *(unaff_EBP + -0x14);\n                        }\n                        iVar9 = *(unaff_EBP + -0x18);\n                        *(iVar9 + *(unaff_EBP + 0x10)) = uVar11;\n                        *(unaff_EBP + -1) = uVar11;\n                        *(unaff_EBP + -0x18) = iVar9 + 1;\n                        if (iVar14 < 4) {\n                            unaff_EBX = 0;\n                        }\n                        else if (iVar14 < 10) {\n                            unaff_EBX = iVar14 - 3;\n                        }\n                        else {\n                            unaff_EBX = iVar14 - 6;\n                        }\ncode_r0x008b14bd:\n                        *(unaff_EBP + -0x14) = unaff_EBX;\n                    }\n                    uVar11 = uVar11 - uVar6;\n                    unaff_ESI = unaff_ESI - uVar6;\n                    uVar8 = *(unaff_EBP + -0x38);\n                    **(unaff_EBP + -0xc) = uVar8 - (uVar8 >> 5);\n                    if (uVar11 < 0x1000000) {\n                        puVar3 = *(unaff_EBP + -8);\n                        if (puVar3 == *(unaff_EBP + 8) + -1) {\n                            return 1;\n                        }\n                        uVar11 = uVar11 * 0x100;\n                        unaff_ESI = unaff_ESI * 0x100 | *puVar3;\n                        *(unaff_EBP + -8) = puVar3 + 1;\n                    }\n                    uVar6 = *(iVar9 + 0x180 + unaff_EBX * 2);\n                    *(unaff_EBP + -0x38) = uVar6;\n                    uVar17 = (uVar11 >> 0xb) * uVar6;\n                    if (unaff_ESI < uVar17) {\n                        *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x24);\n                        uVar15 = *(unaff_EBP + -0x10);\n                        *(iVar9 + 0x180 + unaff_EBX * 2) = (0x800 - uVar6 >> 5) + *(unaff_EBP + -0x38);\n                        *(unaff_EBP + -0x24) = *(unaff_EBP + -0x28);\n                        *(unaff_EBP + -0x28) = uVar15;\n                        unaff_EBX = (unaff_EBX < 7) - 1 & 3;\n                        *(unaff_EBP + -0x14) = unaff_EBX;\n                        puVar13 = iVar9 + 0x664;\n                    }\n                    else {\n                        uVar11 = uVar11 - uVar17;\n                        unaff_ESI = unaff_ESI - uVar17;\n                        uVar8 = *(unaff_EBP + -0x38);\n                        *(iVar9 + 0x180 + unaff_EBX * 2) = uVar8 - (uVar8 >> 5);\n                        if (uVar11 < 0x1000000) {\n                            puVar3 = *(unaff_EBP + -8);\n                            if (puVar3 == *(unaff_EBP + 8) + -1) {\n                                return 1;\n                            }\n                            uVar11 = uVar11 * 0x100;\n                            unaff_ESI = unaff_ESI * 0x100 | *puVar3;\n                            *(unaff_EBP + -8) = puVar3 + 1;\n                        }\n                        uVar6 = *(iVar9 + 0x198 + unaff_EBX * 2);\n                        *(unaff_EBP + -0x38) = uVar6;\n                        uVar17 = (uVar11 >> 0xb) * uVar6;\n                        if (unaff_ESI < uVar17) {\n                            *(*(unaff_EBP + -0x20) + 0x198 + unaff_EBX * 2) =\n                                 (0x800 - uVar6 >> 5) + *(unaff_EBP + -0x38);\n                            iVar9 = *(unaff_EBP + -0x20);\n                            *(unaff_EBP + -0xc) = iVar9 + ((unaff_EBX + 0xf) * 0x10 + *(unaff_EBP + -0x1c)) * 2;\n                            if (uVar17 < 0x1000000) {\n                                puVar3 = *(unaff_EBP + -8);\n                                if (puVar3 == *(unaff_EBP + 8) + -1) {\n                                    return 1;\n                                }\n                                uVar17 = uVar17 * 0x100;\n                                unaff_ESI = unaff_ESI << 8 | *puVar3;\n                                *(unaff_EBP + -8) = puVar3 + 1;\n                            }\n                            uVar11 = **(unaff_EBP + -0xc);\n                            *(unaff_EBP + -0x38) = uVar11;\n                            uVar6 = (uVar17 >> 0xb) * uVar11;\n                            if (unaff_ESI < uVar6) {\n                                iVar9 = *(unaff_EBP + -0x18);\n                                **(unaff_EBP + -0xc) = (0x800 - uVar11 >> 5) + *(unaff_EBP + -0x38);\n                                if (iVar9 == 0) {\n                                    return 1;\n                                }\n                                *(unaff_EBP + -0x18) = iVar9 + 1;\n                                unaff_EBX = (6 < unaff_EBX) * 2 + 9;\n                                uVar2 = *((iVar9 - *(unaff_EBP + -0x10)) + *(unaff_EBP + 0x10));\n                                *(iVar9 + *(unaff_EBP + 0x10)) = uVar2;\n                                *(unaff_EBP + -1) = uVar2;\n                                goto code_r0x008b14bd;\n                            }\n                            uVar17 = uVar17 - uVar6;\n                            unaff_ESI = unaff_ESI - uVar6;\n                            uVar8 = *(unaff_EBP + -0x38);\n                            **(unaff_EBP + -0xc) = uVar8 - (uVar8 >> 5);\n                        }\n                        else {\n                            uVar11 = uVar11 - uVar17;\n                            unaff_ESI = unaff_ESI - uVar17;\n                            uVar8 = *(unaff_EBP + -0x38);\n                            *(iVar9 + 0x198 + unaff_EBX * 2) = uVar8 - (uVar8 >> 5);\n                            if (uVar11 < 0x1000000) {\n                                puVar3 = *(unaff_EBP + -8);\n                                if (puVar3 == *(unaff_EBP + 8) + -1) {\n                                    return 1;\n                                }\n                                uVar11 = uVar11 * 0x100;\n                                unaff_ESI = unaff_ESI * 0x100 | *puVar3;\n                                *(unaff_EBP + -8) = puVar3 + 1;\n                                uVar8 = puVar3 + 1;\n                                iVar5 = 0xf;\n                                if (uVar8 != 0) {\n                                    for (; uVar8 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                                    }\n                                }\n                            }\n                            uVar6 = *(iVar9 + 0x1b0 + unaff_EBX * 2);\n                            *(unaff_EBP + -0x38) = uVar6;\n                            uVar17 = (uVar11 >> 0xb) * uVar6;\n                            if (unaff_ESI < uVar17) {\n                                *(iVar9 + 0x1b0 + unaff_EBX * 2) = (0x800 - uVar6 >> 5) + *(unaff_EBP + -0x38);\n                                uVar15 = *(unaff_EBP + -0x28);\n                            }\n                            else {\n                                uVar11 = uVar11 - uVar17;\n                                unaff_ESI = unaff_ESI - uVar17;\n                                uVar8 = *(unaff_EBP + -0x38);\n                                *(iVar9 + 0x1b0 + unaff_EBX * 2) = uVar8 - (uVar8 >> 5);\n                                if (uVar11 < 0x1000000) {\n                                    puVar3 = *(unaff_EBP + -8);\n                                    if (puVar3 == *(unaff_EBP + 8) + -1) {\n                                        return 1;\n                                    }\n                                    uVar11 = uVar11 * 0x100;\n                                    unaff_ESI = unaff_ESI * 0x100 | *puVar3;\n                                    *(unaff_EBP + -8) = puVar3 + 1;\n                                }\n                                uVar6 = *(iVar9 + 0x1c8 + unaff_EBX * 2);\n                                iVar5 = 0;\n                                if (uVar16 != 0) {\n                                    for (; (uVar16 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n                                    }\n                                }\n                                *(unaff_EBP + -0x38) = uVar6;\n                                uVar12 = (uVar11 >> 0xb) * uVar6;\n                                if (unaff_ESI < uVar12) {\n                                    *(iVar9 + 0x1c8 + unaff_EBX * 2) = (0x800 - uVar6 >> 5) + *(unaff_EBP + -0x38);\n                                    uVar15 = *(unaff_EBP + -0x24);\n                                    uVar17 = uVar12;\n                                }\n                                else {\n                                    uVar17 = uVar11 - uVar12;\n                                    unaff_ESI = unaff_ESI - uVar12;\n                                    uVar8 = *(unaff_EBP + -0x38);\n                                    uVar4 = *(unaff_EBP + -0x24);\n                                    *(iVar9 + 0x1c8 + unaff_EBX * 2) = uVar8 - (uVar8 >> 5);\n                                    uVar15 = *(unaff_EBP + -0x2c);\n                                    *(unaff_EBP + -0x2c) = uVar4;\n                                }\n                                *(unaff_EBP + -0x24) = *(unaff_EBP + -0x28);\n                            }\n                            *(unaff_EBP + -0x28) = *(unaff_EBP + -0x10);\n                            *(unaff_EBP + -0x10) = uVar15;\n                        }\n                        unaff_EBX = ((6 < unaff_EBX) - 1 & 0xfffffffd) + 0xb;\n                        iVar5 = 0;\n                        if (unaff_EBP != 0) {\n                            for (; (unaff_EBP >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n                            }\n                        }\n                        *(unaff_EBP + -0x14) = unaff_EBX;\n                        puVar13 = iVar9 + 0xa68;\n                    }\n                    if (uVar17 < 0x1000000) {\n                        puVar3 = *(unaff_EBP + -8);\n                        if (puVar3 == *(unaff_EBP + 8) + -1) {\n                            return 1;\n                        }\n                        uVar17 = uVar17 << 8;\n                        unaff_ESI = unaff_ESI << 8 | *puVar3;\n                        *(unaff_EBP + -8) = puVar3 + 1;\n                        iVar5 = 0xf;\n                        if (uVar17 != 0) {\n                            for (; uVar17 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                            }\n                        }\n                    }\n                    uVar11 = *puVar13;\n                    *(unaff_EBP + -0x38) = uVar11;\n                    uVar6 = (uVar17 >> 0xb) * uVar11;\n                    if (unaff_ESI < uVar6) {\n                        *(unaff_EBP + -0x34) = 0;\n                        *puVar13 = (0x800 - uVar11 >> 5) + *(unaff_EBP + -0x38);\n                        puVar13 = puVar13 + *(unaff_EBP + -0x1c) * 8 + 2;\n                        uVar15 = 3;\n                    }\n                    else {\n                        uVar17 = uVar17 - uVar6;\n                        unaff_ESI = unaff_ESI - uVar6;\n                        uVar8 = *(unaff_EBP + -0x38);\n                        *puVar13 = uVar8 - (uVar8 >> 5);\n                        if (uVar17 < 0x1000000) {\n                            puVar3 = *(unaff_EBP + -8);\n                            if (puVar3 == *(unaff_EBP + 8) + -1) {\n                                return 1;\n                            }\n                            uVar17 = uVar17 * 0x100;\n                            unaff_ESI = unaff_ESI * 0x100 | *puVar3;\n                            *(unaff_EBP + -8) = puVar3 + 1;\n                        }\n                        uVar6 = puVar13[1];\n                        *(unaff_EBP + -0x38) = uVar6;\n                        uVar11 = (uVar17 >> 0xb) * uVar6;\n                        if (unaff_ESI < uVar11) {\n                            *(unaff_EBP + -0x34) = 8;\n                            puVar13[1] = (0x800 - uVar6 >> 5) + *(unaff_EBP + -0x38);\n                            puVar13 = puVar13 + *(unaff_EBP + -0x1c) * 8 + 0x82;\n                            uVar15 = 3;\n                            uVar6 = uVar11;\n                        }\n                        else {\n                            uVar6 = uVar17 - uVar11;\n                            unaff_ESI = unaff_ESI - uVar11;\n                            iVar5 = 0;\n                            if (uVar11 != 0) {\n                                for (; (uVar11 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n                                }\n                            }\n                            uVar8 = *(unaff_EBP + -0x38);\n                            puVar13[1] = uVar8 - (uVar8 >> 5);\n                            puVar13 = puVar13 + 0x102;\n                            *(unaff_EBP + -0x34) = 0x10;\n                            uVar15 = 8;\n                        }\n                    }\n                    *(unaff_EBP + -0xc) = puVar13;\n                    *(unaff_EBP + -0x30) = uVar15;\n                    *(unaff_EBP + -0x40) = uVar15;\n                    iVar5 = 0xf;\n                    if (uVar16 != 0) {\n                        for (; uVar16 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    *(unaff_EBP + -0x1c) = 1;\n                    do {\n                        *(unaff_EBP + -0x38) = *(unaff_EBP + -0x1c) * 2;\n                        if (uVar6 < 0x1000000) {\n                            if (*(unaff_EBP + -8) == *(unaff_EBP + 8) + -1) {\n                                return 1;\n                            }\n                            uVar6 = uVar6 << 8;\n                            unaff_ESI = unaff_ESI << 8 | **(unaff_EBP + -8);\n                            *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        }\n                        uVar8 = puVar13[*(unaff_EBP + -0x1c)];\n                        uVar11 = (uVar6 >> 0xb) * uVar8;\n                        if (unaff_ESI < uVar11) {\n                            puVar13 = *(unaff_EBP + -0xc);\n                            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) << 1;\n                            *(*(unaff_EBP + -0x38) + puVar13) = (0x800 - uVar8 >> 5) + uVar8;\n                            uVar6 = uVar11;\n                        }\n                        else {\n                            puVar13 = *(unaff_EBP + -0xc);\n                            uVar6 = uVar6 - uVar11;\n                            unaff_ESI = unaff_ESI - uVar11;\n                            iVar9 = *(unaff_EBP + -0x38);\n                            *(iVar9 + puVar13) = uVar8 - (uVar8 >> 5);\n                            *(unaff_EBP + -0x1c) = iVar9 + 1;\n                        }\n                        piVar1 = unaff_EBP + -0x40;\n                        *piVar1 = *piVar1 + -1;\n                    } while (*piVar1 != 0);\n                    iVar9 = *(unaff_EBP + -0x1c) + (*(unaff_EBP + -0x34) - (1 << (*(unaff_EBP + -0x30) & 0x1f)));\n                    *(unaff_EBP + -0x1c) = iVar9;\n                } while (3 < unaff_EBX);\n                unaff_EBX = unaff_EBX + 7;\n                *(unaff_EBP + -0x14) = unaff_EBX;\n                if (3 < iVar9) {\n                    iVar9 = 3;\n                }\n                iVar9 = iVar9 * 0x80 + 0x360 + *(unaff_EBP + -0x20);\n                iVar14 = 1;\n                *(unaff_EBP + -0xc) = iVar9;\n                *(unaff_EBP + -0x38) = 6;\n                *(unaff_EBP + -0x34) = 1;\n            }\n            iVar14 = iVar14 * 2;\n            uVar18 = CONCAT44(iVar14, uVar6);\n            *(unaff_EBP + -0x40) = iVar14;\n        } while (0xffffff < uVar6);\n        if (*(unaff_EBP + -8) == *(unaff_EBP + 8) + -1) {\n            return 1;\n        }\n        unaff_EDI = *(unaff_EBP + -8);\n    } while( true );\n}\n",
        "token_count": 8008
    },
    "null": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00d28bba": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x008b6f94)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00cf027a)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00d28bba(uint8_t *arg_8h, int32_t *arg_ch, int32_t noname_2, uint32_t *arg_14h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    uint32_t *in_EAX;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint *puVar15;\n    uint16_t uVar16;\n    uint16_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t iStack60;\n    int32_t iStack56;\n    uint32_t uStack52;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint var_1h;\n    \n    uVar17 = *0x10 - 4;\n    uVar5 = in_EAX[2];\n    puVar6 = in_EAX[3];\n    uVar16 = *0x10 - 0x58;\n    uVar3 = in_EAX[1];\n    var_18h = 0;\n    var_1h._0_1_ = 0;\n    uVar4 = *in_EAX;\n    *arg_ch = 0;\n    *arg_14h = 0;\n    uVar9 = uVar4;\n    var_14h = 0;\n    var_10h = 1;\n    uVar11 = (0x300 << (in_EAX[1] + uVar9 & 0x1f)) + 0x736;\n    var_28h = 1;\n    var_24h = 1;\n    var_2ch = 1;\n    if (uVar11 != 0) {\n        puVar15 = puVar6;\n        for (uVar14 = uVar11 >> 1; uVar14 != 0; uVar14 = uVar14 - 1) {\n            *puVar15 = 0x4000400;\n            puVar15 = puVar15 + 1;\n        }\n        for (uVar11 = (uVar11 & 1) != 0; uVar11 != 0; uVar11 = uVar11 - 1) {\n            *puVar15 = 0x400;\n            puVar15 = puVar15 + 2;\n        }\n    }\n    uVar14 = 0;\n    uVar11 = 0xffffffff;\n    iVar19 = 0;\n    var_8h = arg_8h;\n    do {\n        if (var_8h == arg_8h + -1) {\n            return 1;\n        }\n        iVar19 = iVar19 + 1;\n        uVar14 = uVar14 << 8 | *var_8h;\n        var_8h = var_8h + 1;\n    } while (iVar19 < 5);\ncode_r0x007f6a3a:\n    uVar12 = (1 << (uVar5 & 0x1f)) - 1U & var_18h;\n    puVar1 = puVar6 + (var_14h * 0x10 + uVar12) * 2;\n    uVar10 = uVar11;\n    if (uVar11 < 0x1000000) {\n        if (var_8h == arg_8h + -1) {\n            return 1;\n        }\n        uVar10 = uVar11 << 8;\n        uVar14 = uVar14 << 8 | *var_8h;\n        var_8h = var_8h + 1;\n    }\n    uVar2 = *puVar1;\n    uVar11 = (uVar10 >> 0xb) * uVar2;\n    if (uVar14 < uVar11) {\n        uVar10 = 1;\n        *puVar1 = (0x800 - uVar2 >> 5) + uVar2;\n        uVar12 = uVar4 & 0xffffff00 | uVar9 + 0x8c;\n        iVar19 = 0x1f;\n        if (uVar12 != 0) {\n            for (; uVar12 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        iVar18 = ((var_1h >> (8 - uVar9 & 0x1f)) + (((1 << (uVar3 & 0x1f)) - 1U & var_18h) << (uVar9 & 0x1f))) * 0x600;\n        iVar19 = iVar18 + 0xe6c;\n        if (var_14h < 7) goto code_r0x007d1992;\n        iVar7 = 0;\n        if (uVar14 != 0) {\n            for (; (uVar14 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n            }\n        }\n        uVar12 = *((var_18h - var_10h) + noname_2);\n        do {\n            uVar12 = uVar12 * 2;\n            puVar1 = puVar6 + ((uVar12 & 0x100) + uVar10) * 2 + iVar18 + 0x106c;\n            if (uVar11 < 0x1000000) {\n                if (var_8h == arg_8h + -1) {\n                    return 1;\n                }\n                uVar11 = uVar11 << 8;\n                uVar14 = uVar14 << 8 | *var_8h;\n                var_8h = var_8h + 1;\n            }\n            uVar2 = *puVar1;\n            uVar13 = (uVar11 >> 0xb) * uVar2;\n            if (uVar14 < uVar13) {\n                iVar8 = 0x1f;\n                if (uVar10 != 0) {\n                    for (; uVar10 >> iVar8 == 0; iVar8 = iVar8 + -1) {\n                    }\n                }\n                uVar10 = uVar10 * 2;\n                *puVar1 = (0x800 - uVar2 >> 5) + uVar2;\n                uVar11 = uVar13;\n            }\n            else {\n                uVar14 = uVar14 - uVar13;\n                *puVar1 = uVar2 - (uVar2 >> 5);\n                uVar10 = uVar10 * 2 + 1;\n                uVar11 = uVar11 - uVar13;\n            }\n            if ((uVar12 & 0x100) == 0) goto joined_r0x0089a84e;\n        } while (uVar10 < 0x100);\n        goto code_r0x00835f0d;\n    }\n    uVar10 = uVar10 - uVar11;\n    uVar14 = uVar14 - uVar11;\n    *puVar1 = uVar2 - (uVar2 >> 5);\n    if (uVar10 < 0x1000000) {\n        if (var_8h == arg_8h + -1) {\n            return 1;\n        }\n        uVar10 = uVar10 * 0x100;\n        uVar14 = uVar14 * 0x100 | *var_8h;\n        var_8h = var_8h + 1;\n    }\n    uVar2 = *(puVar6 + var_14h * 2 + 0x180);\n    uVar13 = (uVar10 >> 0xb) * uVar2;\n    if (uVar13 <= uVar14) {\n        uVar10 = uVar10 - uVar13;\n        uVar14 = uVar14 - uVar13;\n        *(puVar6 + var_14h * 2 + 0x180) = uVar2 - (uVar2 >> 5);\n        if (uVar10 < 0x1000000) {\n            if (var_8h == arg_8h + -1) {\n                return 1;\n            }\n            uVar10 = uVar10 * 0x100;\n            uVar14 = uVar14 * 0x100 | *var_8h;\n            var_8h = var_8h + 1;\n        }\n        uVar2 = *(puVar6 + var_14h * 2 + 0x198);\n        uVar13 = (uVar10 >> 0xb) * uVar2;\n        if (uVar13 <= uVar14) {\n            uVar10 = uVar10 - uVar13;\n            uVar14 = uVar14 - uVar13;\n            *(puVar6 + var_14h * 2 + 0x198) = uVar2 - (uVar2 >> 5);\n            if (uVar10 < 0x1000000) {\n                if (var_8h == arg_8h + -1) {\n                    return 1;\n                }\n                uVar10 = uVar10 * 0x100;\n                uVar14 = uVar14 * 0x100 | *var_8h;\n                var_8h = var_8h + 1;\n                iVar7 = 0xf;\n                if (var_8h != 0) {\n                    for (; var_8h >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                    }\n                }\n            }\n            uVar2 = *(puVar6 + var_14h * 2 + 0x1b0);\n            uVar13 = (uVar10 >> 0xb) * uVar2;\n            if (uVar14 < uVar13) {\n                *(puVar6 + var_14h * 2 + 0x1b0) = (0x800 - uVar2 >> 5) + uVar2;\n                uVar11 = var_28h;\n            }\n            else {\n                uVar10 = uVar10 - uVar13;\n                uVar14 = uVar14 - uVar13;\n                *(puVar6 + var_14h * 2 + 0x1b0) = uVar2 - (uVar2 >> 5);\n                if (uVar10 < 0x1000000) {\n                    if (var_8h == arg_8h + -1) {\n                        return 1;\n                    }\n                    uVar10 = uVar10 * 0x100;\n                    uVar14 = uVar14 * 0x100 | *var_8h;\n                    var_8h = var_8h + 1;\n                }\n                uVar2 = *(puVar6 + var_14h * 2 + 0x1c8);\n                iVar7 = 0;\n                if (uVar16 != 0) {\n                    for (; (uVar16 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                    }\n                }\n                uVar11 = (uVar10 >> 0xb) * uVar2;\n                if (uVar14 < uVar11) {\n                    *(puVar6 + var_14h * 2 + 0x1c8) = (0x800 - uVar2 >> 5) + uVar2;\n                    uVar13 = uVar11;\n                    uVar11 = var_24h;\n                }\n                else {\n                    uVar13 = uVar10 - uVar11;\n                    uVar14 = uVar14 - uVar11;\n                    *(puVar6 + var_14h * 2 + 0x1c8) = uVar2 - (uVar2 >> 5);\n                    uVar11 = var_2ch;\n                    var_2ch = var_24h;\n                }\n                var_24h = var_28h;\n            }\n            var_28h = var_10h;\n            var_10h = uVar11;\ncode_r0x00924e24:\n            var_14h = ((6 < var_14h) - 1 & 0xfffffffd) + 0xb;\n            iVar7 = 0;\n            if (uVar17 != 0) {\n                for (; (uVar17 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            puVar15 = puVar6 + 0x29a;\n            goto code_r0x00924e50;\n        }\n        *(puVar6 + var_14h * 2 + 0x198) = (0x800 - uVar2 >> 5) + uVar2;\n        puVar1 = puVar6 + ((var_14h + 0xf) * 0x10 + uVar12) * 2;\n        if (uVar13 < 0x1000000) {\n            if (var_8h == arg_8h + -1) {\n                return 1;\n            }\n            uVar13 = uVar13 * 0x100;\n            uVar14 = uVar14 << 8 | *var_8h;\n            var_8h = var_8h + 1;\n        }\n        uVar2 = *puVar1;\n        uVar11 = (uVar13 >> 0xb) * uVar2;\n        if (uVar11 <= uVar14) {\n            uVar13 = uVar13 - uVar11;\n            uVar14 = uVar14 - uVar11;\n            *puVar1 = uVar2 - (uVar2 >> 5);\n            goto code_r0x00924e24;\n        }\n        *puVar1 = (0x800 - uVar2 >> 5) + uVar2;\n        if (var_18h == 0) {\n            return 1;\n        }\n        var_14h = (6 < var_14h) * 2 + 9;\n        var_1h._0_1_ = *((var_18h - var_10h) + noname_2);\n        *(var_18h + noname_2) = var_1h;\n        goto code_r0x008b14bd;\n    }\n    var_2ch = var_24h;\n    *(puVar6 + var_14h * 2 + 0x180) = (0x800 - uVar2 >> 5) + uVar2;\n    var_24h = var_28h;\n    var_28h = var_10h;\n    var_14h = (var_14h < 7) - 1 & 3;\n    puVar15 = puVar6 + 0x199;\ncode_r0x00924e50:\n    if (uVar13 < 0x1000000) {\n        if (var_8h == arg_8h + -1) {\n            return 1;\n        }\n        uVar13 = uVar13 << 8;\n        uVar14 = uVar14 << 8 | *var_8h;\n        var_8h = var_8h + 1;\n        iVar7 = 0xf;\n        if (uVar13 != 0) {\n            for (; uVar13 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n            }\n        }\n    }\n    uVar2 = *puVar15;\n    uVar11 = (uVar13 >> 0xb) * uVar2;\n    if (uVar14 < uVar11) {\n        iStack56 = 0;\n        *puVar15 = (0x800 - uVar2 >> 5) + uVar2;\n        puVar15 = puVar15 + uVar12 * 4 + 1;\n        iVar19 = 3;\n    }\n    else {\n        uVar13 = uVar13 - uVar11;\n        uVar14 = uVar14 - uVar11;\n        *puVar15 = uVar2 - (uVar2 >> 5);\n        if (uVar13 < 0x1000000) {\n            if (var_8h == arg_8h + -1) {\n                return 1;\n            }\n            uVar13 = uVar13 * 0x100;\n            uVar14 = uVar14 * 0x100 | *var_8h;\n            var_8h = var_8h + 1;\n        }\n        uVar2 = *(puVar15 + 2);\n        uVar10 = (uVar13 >> 0xb) * uVar2;\n        if (uVar14 < uVar10) {\n            iStack56 = 8;\n            *(puVar15 + 2) = (0x800 - uVar2 >> 5) + uVar2;\n            puVar15 = puVar15 + uVar12 * 4 + 0x41;\n            iVar19 = 3;\n            uVar11 = uVar10;\n        }\n        else {\n            uVar11 = uVar13 - uVar10;\n            uVar14 = uVar14 - uVar10;\n            iVar7 = 0;\n            if (uVar10 != 0) {\n                for (; (uVar10 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            *(puVar15 + 2) = uVar2 - (uVar2 >> 5);\n            puVar15 = puVar15 + 0x81;\n            iStack56 = 0x10;\n            iVar19 = 8;\n        }\n    }\n    iVar7 = 0xf;\n    if (uVar16 != 0) {\n        for (; uVar16 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n        }\n    }\n    var_1ch = 1;\n    var_40h = iVar19;\n    do {\n        iVar18 = var_1ch * 2;\n        if (uVar11 < 0x1000000) {\n            if (var_8h == arg_8h + -1) {\n                return 1;\n            }\n            uVar11 = uVar11 << 8;\n            uVar14 = uVar14 << 8 | *var_8h;\n            var_8h = var_8h + 1;\n        }\n        uVar2 = *(iVar18 + puVar15);\n        uVar10 = (uVar11 >> 0xb) * uVar2;\n        if (uVar14 < uVar10) {\n            var_1ch = var_1ch << 1;\n            *(iVar18 + puVar15) = (0x800 - uVar2 >> 5) + uVar2;\n            uVar11 = uVar10;\n        }\n        else {\n            uVar11 = uVar11 - uVar10;\n            uVar14 = uVar14 - uVar10;\n            *(iVar18 + puVar15) = uVar2 - (uVar2 >> 5);\n            var_1ch = iVar18 + 1;\n        }\n        var_40h = var_40h + -1;\n    } while (var_40h != 0);\n    var_1ch = var_1ch + (iStack56 - (1 << iVar19));\n    if (var_14h < 4) {\n        var_14h = var_14h + 7;\n        iVar19 = var_1ch;\n        if (3 < var_1ch) {\n            iVar19 = 3;\n        }\n        iVar19 = iVar19 * 0x80 + 0x360;\n        iStack60 = 6;\n        iStack56 = 1;\n        do {\n            iVar18 = iStack56 * 2;\n            if (uVar11 < 0x1000000) {\n                if (var_8h == arg_8h + -1) {\n                    return 1;\n                }\n                uVar11 = uVar11 << 8;\n                uVar14 = uVar14 << 8 | *var_8h;\n                var_8h = var_8h + 1;\n            }\n            uVar2 = *(puVar6 + iVar18 + iVar19);\n            uVar10 = (uVar11 >> 0xb) * uVar2;\n            if (uVar14 < uVar10) {\n                *(puVar6 + iVar18 + iVar19) = (0x800 - uVar2 >> 5) + uVar2;\n                iStack56 = iStack56 * 2;\n                uVar11 = uVar10;\n            }\n            else {\n                uVar11 = uVar11 - uVar10;\n                uVar14 = uVar14 - uVar10;\n                *(puVar6 + iVar18 + iVar19) = uVar2 - (uVar2 >> 5);\n                iStack56 = iVar18 + 1;\n            }\n            iStack60 = iStack60 + -1;\n        } while (iStack60 != 0);\n        uVar10 = iStack56 - 0x40;\n        var_10h = uVar10;\n        if (3 < uVar10) {\n            iStack60 = (uVar10 >> 1) + -1;\n            var_10h = uVar10 & 1 | 2;\n            if (uVar10 < 0xe) {\n                var_10h = var_10h << (iStack60 & 0x1f);\n                puVar15 = puVar6 + (var_10h - uVar10) * 2 + 0x55e;\n            }\n            else {\n                iVar19 = (uVar10 >> 1) + -5;\n                do {\n                    if (uVar11 < 0x1000000) {\n                        if (var_8h == arg_8h + -1) {\n                            return 1;\n                        }\n                        uVar11 = uVar11 << 8;\n                        uVar14 = uVar14 << 8 | *var_8h;\n                        var_8h = var_8h + 1;\n                    }\n                    uVar11 = uVar11 >> 1;\n                    var_10h = var_10h * 2;\n                    if (uVar11 <= uVar14) {\n                        uVar14 = uVar14 - uVar11;\n                        var_10h = var_10h | 1;\n                    }\n                    iVar19 = iVar19 + -1;\n                } while (iVar19 != 0);\n                puVar15 = puVar6 + 0x191;\n                var_10h = var_10h << 4;\n                iStack60 = 4;\n            }\n            uStack52 = 1;\n            iStack56 = 1;\n            do {\n                iVar19 = iStack56 * 2;\n                if (uVar11 < 0x1000000) {\n                    if (var_8h == arg_8h + -1) {\n                        return 1;\n                    }\n                    uVar11 = uVar11 << 8;\n                    uVar14 = uVar14 << 8 | *var_8h;\n                    var_8h = var_8h + 1;\n                }\n                uVar2 = *(iVar19 + puVar15);\n                uVar10 = (uVar11 >> 0xb) * uVar2;\n                if (uVar14 < uVar10) {\n                    *(iVar19 + puVar15) = (0x800 - uVar2 >> 5) + uVar2;\n                    iStack56 = iStack56 * 2;\n                    uVar11 = uVar10;\n                }\n                else {\n                    uVar11 = uVar11 - uVar10;\n                    uVar14 = uVar14 - uVar10;\n                    *(iVar19 + puVar15) = uVar2 - (uVar2 >> 5);\n                    iStack56 = iVar19 + 1;\n                    var_10h = var_10h | uStack52;\n                }\n                uStack52 = uStack52 << 1;\n                iStack60 = iStack60 + -1;\n            } while (iStack60 != 0);\n        }\n        var_10h = var_10h + 1;\n        if (var_10h == 0) goto code_r0x00864b12;\n    }\n    var_1ch = var_1ch + 2;\n    if (var_18h < var_10h) {\n        return 1;\n    }\n    while( true ) {\n        var_1h._0_1_ = *((noname_2 - var_10h) + var_18h);\n        var_1ch = var_1ch + -1;\n        *(var_18h + noname_2) = var_1h;\n        var_18h = var_18h + 1;\n        if (var_1ch == 0) break;\n        if (var_18h == 0xffffffff) goto code_r0x00864b12;\n    }\n    goto code_r0x008b14c6;\njoined_r0x0089a84e:\n    while (uVar10 < 0x100) {\ncode_r0x007d1992:\n        iVar18 = uVar10 * 2;\n        if (uVar11 < 0x1000000) {\n            if (var_8h == arg_8h + -1) {\n                return 1;\n            }\n            uVar11 = uVar11 << 8;\n            uVar14 = uVar14 << 8 | *var_8h;\n            var_8h = var_8h + 1;\n        }\n        uVar2 = *(puVar6 + iVar18 + iVar19);\n        uVar12 = uVar2;\n        uVar13 = (uVar11 >> 0xb) * uVar12;\n        if (uVar14 < uVar13) {\n            iVar7 = 0xf;\n            if (uVar10 != 0) {\n                for (; uVar10 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                }\n            }\n            uVar12 = (0x800 - uVar12 >> 5) + uVar12;\n            iVar8 = 0x1f;\n            if (uVar12 != 0) {\n                for (; uVar12 >> iVar8 == 0; iVar8 = iVar8 + -1) {\n                }\n            }\n            *(puVar6 + iVar18 + iVar19) = uVar12;\n            uVar10 = uVar10 * 2;\n            uVar11 = uVar13;\n        }\n        else {\n            uVar11 = uVar11 - uVar13;\n            uVar14 = uVar14 - uVar13;\n            *(puVar6 + iVar18 + iVar19) = uVar2 - (uVar2 >> 5);\n            uVar10 = iVar18 + 1;\n        }\n    }\ncode_r0x00835f0d:\n    var_1h._0_1_ = uVar10;\n    *(var_18h + noname_2) = var_1h;\n    if (var_14h < 4) {\n        var_14h = 0;\n    }\n    else if (var_14h < 10) {\n        var_14h = var_14h - 3;\n    }\n    else {\n        var_14h = var_14h - 6;\n    }\ncode_r0x008b14bd:\n    var_18h = var_18h + 1;\ncode_r0x008b14c6:\n    if (var_18h == 0xffffffff) {\ncode_r0x00864b12:\n        if (uVar11 < 0x1000000) {\n            if (var_8h == arg_8h + -1) {\n                return 1;\n            }\n            var_8h = var_8h + 1;\n        }\n        *arg_ch = var_8h - arg_8h;\n        *arg_14h = var_18h;\n        return 0;\n    }\n    goto code_r0x007f6a3a;\n}\n",
        "token_count": 6412
    },
    "007c696c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.007c696c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint32_t unaff_EBX;\n    uint32_t *unaff_ESI;\n    uchar *puVar7;\n    int32_t unaff_EDI;\n    code *UNRECOVERED_JUMPTABLE;\n    uint8_t in_CF;\n    uint8_t in_PF;\n    uint8_t in_AF;\n    uint8_t in_ZF;\n    uint8_t in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar8;\n    \n    iVar1 = (param_2 * 9 + 0xa755005) * 8;\n    uVar8 = fcn.0099a8e8();\n    *(iVar1 + 0x3370184e) = uVar8 >> 0x20;\n    *(iVar1 + 0x33701852) = uVar8;\n    *(iVar1 + 0x3370184aU) =\n         (in_NT & 1) * 0x4000 | (in_OF & 1) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (in_SF & 1) * 0x80 |\n         (in_ZF & 1) * 0x40 | (in_AF & 1) * 0x10 | (in_PF & 1) * 4 | in_CF & 1 | (in_ID & 1) * 0x200000 |\n         (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    uVar5 = ((*unaff_ESI ^ unaff_EBX) << 3 | (*unaff_ESI ^ unaff_EBX) >> 0x1d) + 1;\n    uVar5 = (uVar5 >> 1 | ((uVar5 & 1) != 0) << 0x1f) ^ 0x796234d0;\n    uVar6 = unaff_EBX ^ uVar5;\n    UNRECOVERED_JUMPTABLE = unaff_EDI + uVar5;\n    if (iVar1 + 0x3370184aU <= &stack0x0000005c) {\n        iVar3 = 0x40;\n        iVar2 = 0xf;\n        if (uVar6 != 0) {\n            for (; uVar6 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        puVar4 = iVar1 + 0x33701788;\n        *(iVar1 + 0x33701784) = UNRECOVERED_JUMPTABLE;\n        *(iVar1 + 0x33701780) = unaff_ESI + 1;\n        *(iVar1 + 0x3370177c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(iVar1 + 0x337017c8U, 0x40) * 0x800 | (in_IF & 1) * 0x200 |\n             (in_TF & 1) * 0x100 | (puVar4 < 0) * 0x80 | (puVar4 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar4 & 0xff) & 1U) == 0) * 4 | iVar1 + 0x337017c8U < 0x40 | (in_ID & 1) * 0x200000 |\n             (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar7 = &stack0xfffffffc;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        UNRECOVERED_JUMPTABLE = *(iVar1 + 0x33701784);\n    }\n    // WARNING: Could not recover jumptable at 0x008d126d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 1130
    },
    "00d7fdec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.00d7fdec(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    char *pcVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    uint8_t uVar5;\n    int32_t *extraout_ECX;\n    uint32_t uVar6;\n    int32_t arg_ch;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t unaff_EBP;\n    char *pcVar9;\n    uint32_t unaff_ESI;\n    uint32_t uVar10;\n    uint8_t in_AF;\n    char in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint uStack0000000c;\n    uint8_t in_stack_00000014;\n    uchar uStack00000024;\n    uint32_t uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    uint32_t uStack12;\n    uint uStack8;\n    \n    uStack00000024 = in_OF != in_SF;\n    in_stack_00000014 = -in_stack_00000014;\n    uStack8 = 0x6436619f;\n    uStack0000000c = 0x3690a10;\n    uStack20 = 0x47241b71;\n    iStack16 = param_1;\n    uStack12 = param_2;\n    if (in_stack_00000014 < 0x23) {\n        uStack24 = 0x84cc75;\n        uVar4 = fcn.00dd55a8();\n        iVar7 = CONCAT31(uVar4 >> 8, 0x59);\n        uVar5 = extraout_ECX - 2U & 0x1f;\n        uVar6 = unaff_EBP - 1;\n        *(param_3 + 10) = iVar7 << uVar5 | unaff_ESI >> 0x20 - uVar5;\n        *(param_3 + 2) =\n             (in_NT & 1) * 0x4000 | SBORROW4(unaff_EBP, 1) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (uVar6 < 0) * 0x80 | (uVar6 == 0) * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(uVar6 & 0xff) & 1U) == 0) * 4 |\n             ((extraout_ECX - 2U & 0x1f) != 0 && iVar7 << uVar5 - 1 < 0) | (in_ID & 1) * 0x200000 |\n             (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        uStack24 = unaff_EBP & 0xffff0000 | unaff_EBP + 1;\n        uVar10 = -(*extraout_ECX + 0x7d031439U ^ 0x4d4875b5) ^ 0x557f4c90;\n        uVar6 = uVar10 << 1;\n        uVar10 = uVar10 < 0;\n        puVar8 = &stack0xffffffe8 & 0xffff0000 | *0x10 - 0x17;\n        *puVar8 = *puVar8 ^ (uVar6 | uVar10);\n    // WARNING: Could not recover jumptable at 0x00932b71. Too many branches\n    // WARNING: Treating indirect jump as call\n        iVar7 = (*(unaff_ESI + (uVar6 & 0xffff0000 | uVar6 & 0xffff | uVar10)))();\n        return iVar7;\n    }\n    if (0x21 < in_stack_00000014) {\n        return 0;\n    }\n    uVar6 = *(*(param_2 + 0x1c + param_1) + in_EAX * 4 + param_1);\n    if (uVar6 == 0) {\n        return 0;\n    }\n    if ((uVar6 < param_2) || (*(unaff_EBP - 0x10) + param_2 <= uVar6)) {\n        return uVar6 + param_1;\n    }\n    pcVar3 = uVar6 + param_1;\n    cVar2 = *pcVar3;\n    pcVar9 = pcVar3;\n    while( true ) {\n        if (cVar2 == '\\0') {\n            return 0;\n        }\n        if (cVar2 == '.') break;\n        cVar2 = pcVar9[1];\n        pcVar9 = pcVar9 + 1;\n    }\n    uVar6 = pcVar9 - pcVar3;\n    if (0x103 < uVar6) {\n        return 0;\n    }\n    uVar10 = 0;\n    if (pcVar9 != pcVar3) {\n        iVar7 = (unaff_EBP - 0x114) - pcVar3;\n        do {\n            if (*pcVar3 == '\\0') break;\n            pcVar3[iVar7] = *pcVar3;\n            uVar10 = uVar10 + 1;\n            pcVar3 = pcVar3 + 1;\n        } while (uVar10 < uVar6);\n    }\n    uStack24 = unaff_EBP - 0x114;\n    *((unaff_EBP - 0x114) + uVar10) = 0;\n    iVar7 = (**0x7b802c)();\n    if ((iVar7 == 0) && (iVar7 = (**0x7b8028)(),  iVar7 == 0)) {\n        return 0;\n    }\n    if (iVar7 != *(unaff_EBP + 8)) {\n        if (pcVar9[1] != '#') {\n            iVar7 = fcn.0082f627(iVar7, pcVar9 + 1);\n            return iVar7;\n        }\n        pcVar3 = pcVar9 + 2;\n        arg_ch = 0;\n        cVar2 = pcVar9[2];\n        while ((cVar2 != '\\0' && (pcVar3 = pcVar3 + 1,  cVar2 - 0x30U < 10))) {\n            arg_ch = cVar2 + -0x30 + arg_ch * 10;\n            cVar2 = *pcVar3;\n        }\n        iVar7 = fcn.0082f627(iVar7, arg_ch);\n        return iVar7;\n    }\n    if (*(unaff_EBP + 0x10) == '\\0') {\n        iVar7 = (**0x7b8030)();\n        return iVar7;\n    }\n    iVar7 = *(unaff_EBP + 0xc);\n    uVar6 = 0;\n    do {\n        uVar5 = uVar6 & 0x1f;\n        puVar1 = (unaff_EBP - 0x114) + uVar6;\n        uVar5 = uVar6 + (0x2eb859b0 << uVar5 | 0x2eb859b0 >> 0x20 - uVar5) ^ puVar1[iVar7 - (unaff_EBP - 0x114)];\n        *puVar1 = uVar5;\n        if (uVar5 == 0) break;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 0x104);\n    iVar7 = (**0x7b8030)();\n    return iVar7;\n}\n",
        "token_count": 1808
    },
    "00d9a785": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00d9a785(uint arg_8h, uint noname_1, uint32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint8_t uVar6;\n    int16_t *piVar7;\n    uint32_t uVar8;\n    int16_t *extraout_ECX;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t unaff_EBP;\n    char *pcVar11;\n    int32_t iVar12;\n    uint32_t unaff_ESI;\n    uint32_t uVar13;\n    int32_t unaff_EDI;\n    bool in_OF;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_OF) {\n        iVar10 = fcn.009688fc();\n    // WARNING: Could not recover jumptable at 0x0095972f. Too many branches\n    // WARNING: Treating indirect jump as call\n        iVar10 = (*(unaff_EDI + iVar10))();\n        return iVar10;\n    }\n    iVar3 = fcn.00803162();\n    if ((*extraout_ECX == iVar3) && (iVar10 = *(extraout_ECX + 0x1e),  *(iVar10 + extraout_ECX) == 0x4550)) {\n        uVar8 = *(iVar10 + 0x78 + extraout_ECX);\n        *(unaff_EBP + -4) = uVar8;\n        if (uVar8 != 0) {\n            *(unaff_EBP + -0x10) = *(iVar10 + 0x7c + extraout_ECX);\n            *(unaff_EBP + -8) = 0xffffffff;\n            piVar7 = extraout_ECX;\n            if (unaff_ESI < 0x10000) {\n                *(unaff_EBP + -8) = unaff_ESI - *(uVar8 + 0x10 + extraout_ECX);\n            }\n            else {\n                iVar10 = *(uVar8 + 0x18 + extraout_ECX);\n                if (iVar10 != 0) {\n                    iVar9 = 0;\n                    iVar10 = iVar10 + -1;\n                    *(unaff_EBP + -0xc) = *(uVar8 + 0x20 + extraout_ECX) + extraout_ECX;\n                    if (-1 < iVar10) {\n                        do {\n                            iVar12 = iVar10 + iVar9 >> 1;\n                            iVar4 = fcn.008d2636();\n                            if (iVar4 < 0) {\n                                iVar10 = iVar12 + -1;\n                            }\n                            else {\n                                if (iVar4 < 1) {\n                                    piVar7 = *(unaff_EBP + 8);\n                                    *(unaff_EBP + -8) = *(*(*(unaff_EBP + -4) + 0x24 + piVar7) + iVar12 * 2 + piVar7);\n                                    break;\n                                }\n                                iVar9 = iVar12 + 1;\n                            }\n                            piVar7 = *(unaff_EBP + 8);\n                        } while (iVar9 <= iVar10);\n                        uVar8 = *(unaff_EBP + -4);\n                    }\n                }\n            }\n            if (*(uVar8 + 0x14 + piVar7) <= *(unaff_EBP + -8)) {\n                return 0;\n            }\n            uVar13 = *(*(uVar8 + 0x1c + piVar7) + *(unaff_EBP + -8) * 4 + piVar7);\n            if (uVar13 == 0) {\n                return 0;\n            }\n            if ((uVar13 < uVar8) || (*(unaff_EBP + -0x10) + uVar8 <= uVar13)) {\n                return uVar13 + piVar7;\n            }\n            pcVar5 = uVar13 + piVar7;\n            cVar2 = *pcVar5;\n            pcVar11 = pcVar5;\n            while( true ) {\n                if (cVar2 == '\\0') {\n                    return 0;\n                }\n                if (cVar2 == '.') break;\n                cVar2 = pcVar11[1];\n                pcVar11 = pcVar11 + 1;\n            }\n            uVar8 = pcVar11 - pcVar5;\n            if (0x103 < uVar8) {\n                return 0;\n            }\n            uVar13 = 0;\n            if (pcVar11 != pcVar5) {\n                iVar10 = (unaff_EBP + -0x114) - pcVar5;\n                do {\n                    if (*pcVar5 == '\\0') break;\n                    pcVar5[iVar10] = *pcVar5;\n                    uVar13 = uVar13 + 1;\n                    pcVar5 = pcVar5 + 1;\n                } while (uVar13 < uVar8);\n            }\n            *(unaff_EBP + -0x114 + uVar13) = 0;\n            iVar10 = (**0x7b802c)();\n            if ((iVar10 == 0) && (iVar10 = (**0x7b8028)(),  iVar10 == 0)) {\n                return 0;\n            }\n            if (iVar10 != *(unaff_EBP + 8)) {\n                if (pcVar11[1] != '#') {\n                    iVar10 = fcn.0082f627(iVar10, pcVar11 + 1);\n                    return iVar10;\n                }\n                pcVar5 = pcVar11 + 2;\n                iVar9 = 0;\n                cVar2 = pcVar11[2];\n                while ((cVar2 != '\\0' && (pcVar5 = pcVar5 + 1,  cVar2 - 0x30U < 10))) {\n                    iVar9 = cVar2 + -0x30 + iVar9 * 10;\n                    cVar2 = *pcVar5;\n                }\n                iVar10 = fcn.0082f627(iVar10, iVar9);\n                return iVar10;\n            }\n            if (*(unaff_EBP + 0x10) == '\\0') {\n                iVar10 = (**0x7b8030)();\n                return iVar10;\n            }\n            iVar10 = *(unaff_EBP + 0xc);\n            uVar8 = 0;\n            do {\n                uVar6 = uVar8 & 0x1f;\n                puVar1 = unaff_EBP + -0x114 + uVar8;\n                uVar6 = uVar8 + (0x2eb859b0 << uVar6 | 0x2eb859b0 >> 0x20 - uVar6) ^\n                        puVar1[iVar10 - (unaff_EBP + -0x114)];\n                *puVar1 = uVar6;\n                if (uVar6 == 0) break;\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < 0x104);\n            iVar10 = (**0x7b8030)();\n            return iVar10;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1642
    },
    "00870c99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x008d39e2)\n// WARNING: Removing unreachable block (ram,0x00835f6d)\n// WARNING: Removing unreachable block (ram,0x0083466f)\n// WARNING: Removing unreachable block (ram,0x007c2351)\n// WARNING: Removing unreachable block (ram,0x00d9112d)\n// WARNING: Removing unreachable block (ram,0x0090377e)\n// WARNING: Removing unreachable block (ram,0x0092c8f0)\n// WARNING: Removing unreachable block (ram,0x00d2e661)\n// WARNING: Removing unreachable block (ram,0x00d2e666)\n// WARNING: Removing unreachable block (ram,0x00972c8a)\n// WARNING: Removing unreachable block (ram,0x00972c91)\n// WARNING: Removing unreachable block (ram,0x00972c95)\n// WARNING: Removing unreachable block (ram,0x00999c7e)\n// WARNING: Removing unreachable block (ram,0x00999c80)\n// WARNING: Removing unreachable block (ram,0x00999c82)\n// WARNING: Removing unreachable block (ram,0x00999c86)\n// WARNING: Removing unreachable block (ram,0x00837b16)\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __fastcall\nfcn.00870c99(uint32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint32_t param_5, uint32_t param_6)\n\n{\n    bool bVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uint16_t uVar6;\n    uint32_t *in_EAX;\n    uchar *puVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uchar *puVar12;\n    uint32_t extraout_EDX;\n    uint32_t unaff_EBX;\n    uint32_t *puVar13;\n    uint16_t uVar14;\n    uint32_t unaff_EBP;\n    int32_t unaff_ESI;\n    code *UNRECOVERED_JUMPTABLE;\n    uint32_t *puVar15;\n    uchar *puVar16;\n    bool in_CF;\n    uint8_t uVar17;\n    uint8_t in_AF;\n    bool bVar18;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uchar *in_stack_00000040;\n    uint32_t uStack28;\n    \n    puVar7 = in_stack_00000040;\n    if (!in_OF) {\n        fcn.00d6e638();\n        if (-1 < (param_5 & unaff_ESI + 0x6cd318c2U)) {\n            fcn.007e332c();\n            fcn.00db2266();\n            uVar11 = ~((extraout_EDX >> 0x18 | (extraout_EDX & 0xff0000) >> 8 | (extraout_EDX & 0xff00) << 8 |\n                       extraout_EDX << 0x18) + 0xae59e20e);\n    // WARNING: Could not recover jumptable at 0x008b2095. Too many branches\n    // WARNING: Treating indirect jump as call\n            puVar7 = (*(UNRECOVERED_JUMPTABLE +\n                       ~(uVar11 >> 0x18 | (uVar11 & 0xff0000) >> 8 | (uVar11 & 0xff00) << 8 | uVar11 << 0x18)))();\n            return puVar7;\n        }\n        if (puVar7 <= &stack0x00000058) {\n            iVar10 = 0x40;\n            iVar2 = 0xf;\n            if (unaff_EBX != 0) {\n                for (; unaff_EBX >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                }\n            }\n            uVar11 = puVar7 + -0x80 & 0xfffffffc;\n            puVar12 = uVar11 - 0x40;\n            *(uVar11 - 0x44) = UNRECOVERED_JUMPTABLE;\n            *(uVar11 - 0x48) = unaff_ESI + 0x6cd318c2U;\n            *(uVar11 - 0x4c) =\n                 (in_NT & 1) * 0x4000 | SBORROW4(uVar11, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                 (puVar12 < 0) * 0x80 | (puVar12 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n                 ((POPCOUNT(puVar12 & 0xff) & 1U) == 0) * 4 | uVar11 < 0x40 | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n            puVar7 = &stack0xfffffff8;\n            for (; iVar10 != 0; iVar10 = iVar10 + -1) {\n                *puVar12 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar12 = puVar12 + 1;\n            }\n            UNRECOVERED_JUMPTABLE = *(uVar11 - 0x44);\n        }\n    // WARNING: Could not recover jumptable at 0x008d126d. Too many branches\n    // WARNING: Treating indirect jump as call\n        puVar7 = (*UNRECOVERED_JUMPTABLE)();\n        return puVar7;\n    }\n    puVar15 = 0x7d216ab3;\n    if (!in_CF) {\n        param_1 = param_6;\n    }\n    uVar11 = param_1 & 0xffff0000 | -param_1;\n    bVar18 = (unaff_EBP | 0x26d96dc4) == 0;\n    if (!bVar18) {\n        fcn.007dab40();\n        do {\n            uVar11 = param_5;\n            uStack28 = 0xc47803a5;\n            param_5 = 0x3cff0182;\n            uVar14 = 0x182;\n            while( true ) {\n                uVar14 = -uVar14;\n                param_5 = param_5 ^ 0x1a520916;\n                bVar18 = uStack28 + 0xb633 < 0;\n                uVar9 = uStack28 & 0xff0000;\n                uVar3 = uStack28 & 0xff00;\n                uVar4 = uStack28 << 0x18;\n                if (0x49cd < uStack28) break;\n                uStack28 = uStack28 & 0xffffff00 | 0x49cc < uStack28;\n                if (bVar18) {\n                    uVar17 = uStack28 < (uVar9 >> 8 | uVar3 << 8 | uVar4 | bVar18);\n                    iVar10 = fcn.00dd84c2();\n                    uVar9 = iVar10 + 1;\n                    uVar5 = *0x7d216ab5 & 0x1f;\n                    uVar6 = *0x7d216ab5 & 0x1f;\n                    *0x7d216ab5 = *0x7d216ab5 & 0x1f;\n                    *0x7d216ab5 = *0x7d216ab3 >> *0x7d216ab5;\n                    bVar1 = uVar5 != 0;\n                    bVar18 = uVar6 != 0;\n                    *0x7d216ab1 = (in_NT & 1) * 0x4000 |\n                                  (*0x7d216ab5 != 1 & SCARRY4(iVar10, 1) | (*0x7d216ab5 == 1 && *0x7d216ab1 < 0)) *\n                                  0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                                  (!bVar18 && uVar9 < 0 || bVar18 && *0x7d216ab5 < 0) * 0x80 |\n                                  (!bVar18 && uVar9 == 0 || bVar18 && *0x7d216ab5 == 0) * 0x40 | (in_AF & 1) * 0x10 |\n                                  (!bVar18 && (POPCOUNT(uVar9 & 0xff) & 1U) == 0 ||\n                                  bVar18 && (POPCOUNT(*0x7d216ab5 & 0xff) & 1U) == 0) * 4 |\n                                  !bVar1 & uVar17 | (bVar1 && (*0x7d216ab3 >> *0x7d216ab5 - 1 & 1) != 0) |\n                                  (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                                  (in_AC & 1) * 0x40000;\n                    iVar2 = 0;\n                    if (uVar14 != 0) {\n                        for (; (uVar14 >> iVar2 & 1) == 0; iVar2 = iVar2 + 1) {\n                        }\n                    }\n                    uVar9 = *(uVar11 - 4) ^ unaff_EBX;\n                    puVar7 = -((-(uVar9 >> 2 | uVar9 << 0x1e) >> 0x18) + 0x3eba66b9);\n                    if (0x7d216ab0 < &stack0x0000003c) {\n                        *0x7d2169ec = 0x7d216ab1;\n                        *0x7d2169e4 = (in_NT & 1) * 0x4000 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                                      (in_AF & 1) * 0x10 | 4 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 |\n                                      (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n                        puVar12 = &stack0xfffffff8;\n                        puVar16 = 0x7d2169f0;\n                        *0x7d2169e8 = uVar11 - 4;\n                        for (iVar10 = 0x40; puVar7 = &stack0xfffffff8,  iVar10 != 0; iVar10 = iVar10 + -1) {\n                            *puVar16 = *puVar12;\n                            puVar12 = puVar12 + 1;\n                            puVar16 = puVar16 + 1;\n                        }\n                    }\n                    return puVar7;\n                }\n            }\n        } while( true );\n    }\n    do {\n        if (bVar18) {\n            return 0x1;\n        }\n        do {\n            puVar13 = *(unaff_EBP + 8);\n            do {\n                puVar8 = in_EAX;\n                if ((((puVar15 + 3U < puVar13) && ((*puVar8 ^ param_2) == *(uVar11 + 0x30))) &&\n                    ((puVar8[1] ^ param_2) == *(uVar11 + 0x34))) && ((*(puVar8 + 2) ^ param_2) == *(uVar11 + 0x38))) {\n                    return 0x1;\n                }\n                in_EAX = puVar8 + 1;\n                if (puVar13 <= in_EAX) {\n                    return NULL;\n                }\n                iVar10 = in_EAX + *(unaff_EBP - 4);\n                puVar13 = *(unaff_EBP + 8);\n                *(unaff_EBP - 8) = iVar10;\n                if (((iVar10 + 4U < puVar13) && ((*in_EAX ^ param_2) == *(uVar11 + 0x1c))) &&\n                   (((*(puVar8 + 5) ^ param_2) == *(uVar11 + 0x20) && ((*(puVar8 + 9) ^ param_2) == *(uVar11 + 0x24)))))\n                {\n                    return 0x1;\n                }\n                puVar15 = *(unaff_EBP - 8);\n            } while (puVar13 <= puVar15);\n        } while ((*in_EAX ^ param_2) != *(uVar11 + 0x28));\n        bVar18 = (*(puVar8 + 5) ^ param_2) == *(uVar11 + 0x2c);\n    } while( true );\n}\n",
        "token_count": 3046
    },
    "00848132": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00848132(char param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_EDX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t in_FS_OFFSET;\n    bool bVar3;\n    \n    uVar2 = -param_1;\n    bVar3 = uVar2 < 0x5c735fcd;\n    if (0x5c735fcd < uVar2) {\n        bVar3 = uVar2 < 0x51611ca0;\n    }\n    if (bVar3) {\n        *unaff_ESI = *(in_FS_OFFSET + *unaff_ESI);\n        uVar2 = ~(*(uVar2 - 4) ^ unaff_EBX) + 1;\n    // WARNING: Could not recover jumptable at 0x00d72b8b. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*(unaff_EDI + ((uVar2 >> 1 | ((uVar2 & 1) != 0) << 0x1f) ^ 0x6bad4285) + 1))();\n        return;\n    }\n    fcn.007c696c(uVar2);\n    uVar1 = ((extraout_EDX >> 0x18 | (extraout_EDX & 0xff0000) >> 8 | (extraout_EDX & 0xff00) << 8 |\n             extraout_EDX << 0x18) >> 2 | (extraout_EDX >> 0x18) << 0x1e) + 1 ^ 0x52b5731c;\n    // WARNING: Could not recover jumptable at 0x007f7de9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(~uVar2 + ((uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 1 |\n                ((uVar1 >> 0x18 & 1) != 0) << 0x1f)))();\n    return;\n}\n",
        "token_count": 513
    },
    "00953af6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00953af6(void)\n\n{\n    fcn.00d3e00e();\n    return;\n}\n",
        "token_count": 27
    },
    "0099a8e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0099a8e8(uchar *param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    int32_t unaff_EDI;\n    code *UNRECOVERED_JUMPTABLE;\n    bool in_CF;\n    uint8_t in_AF;\n    bool in_ZF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uchar uStack00000014;\n    int32_t in_stack_00000020;\n    \n    in_stack_00000020 = CONCAT31(in_stack_00000020 >> 8 & 0xffff00 | ~(in_stack_00000020 >> 8), in_CF || in_ZF);\n    uVar1 = 0xea;\n    if (-in_stack_00000020 < 0xcb20edc) {\n        uVar1 = 0x60;\n    }\n    uStack00000014 = 0x29 < uVar1;\n    fcn.00953af6();\n    UNRECOVERED_JUMPTABLE = unaff_EDI + (~extraout_ECX << 2 | ~extraout_ECX >> 0x1e);\n    if (param_1 <= &stack0x0000005c) {\n        uVar3 = param_1 + -0x80 & 0xfffffffc;\n        puVar4 = uVar3 - 0x40;\n        *(uVar3 - 0x44) = UNRECOVERED_JUMPTABLE;\n        *(uVar3 - 0x48) = param_1;\n        *(uVar3 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar3, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar4 < 0) * 0x80 | (puVar4 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar4 & 0xff) & 1U) == 0) * 4 | uVar3 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar5 = &stack0xfffffffc;\n        for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        UNRECOVERED_JUMPTABLE = *(uVar3 - 0x44);\n    }\n    // WARNING: Could not recover jumptable at 0x00db391d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 791
    },
    "00b43e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b43e34(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t in_AL;\n    uint8_t uVar3;\n    char unaff_BL;\n    int32_t unaff_ESI;\n    uint8_t in_CF;\n    uint8_t in_AF;\n    char in_stack_a48176e0;\n    \n    uVar2 = 9 < (in_AL & 0xf) | in_AF;\n    uVar3 = in_AL + uVar2 * '\\x06';\n    if (param_1 == 1 || unaff_BL != in_stack_a48176e0) {\n        out(0x26, uVar3 + (0x90 < (uVar3 & 0xf0) | in_CF | uVar2 * (0xf9 < uVar3)) * '`');\n        return;\n    }\n    piVar1 = param_1 + 0x4e373caa + unaff_ESI * 4;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    return;\n}\n",
        "token_count": 248
    },
    "00c4f654": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00c4f775) overlaps instruction at (ram,0x00c4f772)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: This function may have set the stack pointer\n\nvoid __fastcall\nfcn.00c4f654(uint32_t param_1, int32_t param_2, uint8_t *param_3, uint32_t **param_4, uint param_5, uint32_t param_6, \n            uint8_t *param_7, uint32_t param_8, uint param_9, uint param_10, uint param_11, uint param_12, uint param_13\n            , uint param_14, uint param_15, uint param_16, ushort param_17)\n\n{\n    float fVar1;\n    char cVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    uint32_t **ppuVar5;\n    float10 fVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint32_t in_EAX;\n    uint32_t *puVar9;\n    uint32_t **ppuVar10;\n    uint32_t **ppuVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t extraout_ECX;\n    int32_t *piVar14;\n    int32_t *extraout_ECX_00;\n    ushort uVar15;\n    uint8_t *puVar16;\n    uint8_t uVar19;\n    uint32_t unaff_EBX;\n    uint32_t uVar17;\n    ushort uVar20;\n    uint32_t *puVar18;\n    uint32_t **unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar21;\n    int32_t *piVar22;\n    uint *puVar23;\n    uint *puVar24;\n    uint *unaff_EDI;\n    uint32_t uVar25;\n    uint16_t in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    uchar uVar26;\n    uint8_t uVar27;\n    uchar uVar28;\n    bool bVar29;\n    uint16_t uVar30;\n    float10 in_ST0;\n    float10 fVar31;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 extraout_ST0_01;\n    float10 fVar32;\n    float10 in_ST1;\n    float10 extraout_ST1;\n    float10 extraout_ST1_00;\n    float10 extraout_ST1_01;\n    float10 fVar33;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    ulong uVar34;\n    uint64_t uVar35;\n    uint32_t **unaff_retaddr;\n    ushort uStack4;\n    uchar uStack2;\n    \n    uStack4 = SUB42(unaff_EBP, 0);\n    uStack2 = unaff_EBP >> 0x10;\n    puVar23 = unaff_ESI + 1;\n    uVar7 = *(unaff_EBX + (in_EAX & 0xff));\n    if (SBORROW1(*unaff_ESI, *unaff_EDI)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar27 = uVar7 + 0xba;\n    puVar9 = in_EAX & 0xffffff00 | uVar27 + (*unaff_ESI < *unaff_EDI);\n    uVar8 = unaff_EBX;\n    uVar17 = CONCAT11((param_1 >> 8) + uVar8 + (0x45 < uVar7 || CARRY1(uVar27, *unaff_ESI < *unaff_EDI)), param_1);\n    uVar12 = param_1 & 0xffff0000 | uVar17;\n    *(unaff_EDI + 0x20) = *(unaff_EDI + 0x20) ^ 0x3f;\n    puVar21 = uVar12 + 0x89155be9;\n    *puVar21 = *puVar21 >> 1;\n    puVar16 = param_2 + -1;\n    *puVar9 = *puVar9 | &uStack4;\n    fVar1 = *(param_2 + -0x6c9db5c0 + unaff_EDI * 2);\n    *(unaff_EDI + 0x19) = *(unaff_EDI + 0x19) + '6';\n    LOCK();\n    fVar31 = *(uVar12 + 0xbda74984 + puVar23 * 8) - (in_ST0 + fVar1);\n    puVar18 = unaff_ESI + 0x52b171eb;\n    uVar12 = *puVar18;\n    *puVar18 = *puVar18 + puVar9;\n    *(unaff_ESI + 0x6e121ce1) = puVar16 + *(unaff_ESI + 0x6e121ce1) + CARRY4(uVar12, puVar9);\n    puVar21 = param_2 + 0x40333332;\n    *0xffffffdb = puVar23;\n    *puVar21 = *puVar21 & uVar17 >> 8;\n    *0xffffffd7 = 0xffffffe6;\n    if ((POPCOUNT(*puVar21) & 1U) == 0) {\n        LOCK();\n        goto code_r0x00c4f6d7;\n    }\n    uVar7 = *puVar23;\n    *puVar23 = param_1;\n    uVar12 = param_1 & 0xffff0000 | uVar17 & 0xffffff00 | uVar7;\n    *(param_2 + -0x74d36fbf) = uVar7;\n    in(puVar16);\n    in(puVar16);\n    uVar26 = CARRY1(uVar8, uVar7);\n    ppuVar10 = in(0xa6);\n    ppuVar11 = unaff_EDI + -1;\n    *unaff_EDI = *puVar23;\n    fVar31 = fVar31 / *(ppuVar10 + uVar12 + 0x62);\n    uVar17 = unaff_EBX & 0xffffff00 | uVar8 + uVar7;\n    puVar21 = unaff_ESI + -3;\n    uStack4 = in_SS;\n    do {\n        param_12._0_2_ = *0x10 + 0x3c;\n        param_16._0_2_ = SUB42(ppuVar10, 0);\n        param_16._2_2_ = ppuVar10 >> 0x10;\n        param_15._0_2_ = uVar12;\n        param_15._2_2_ = uVar12 >> 0x10;\n        param_14._0_2_ = SUB42(puVar16, 0);\n        param_14._2_2_ = puVar16 >> 0x10;\n        param_13._0_2_ = uVar17;\n        param_13._2_2_ = uVar17 >> 0x10;\n        param_12._2_2_ = &param_17 >> 0x10;\n        param_11._0_2_ = SUB42(unaff_retaddr, 0);\n        param_11._2_2_ = unaff_retaddr >> 0x10;\n        param_10._2_1_ = puVar21 >> 0x10;\n        param_10._3_1_ = puVar21 >> 0x18;\n        param_9._0_2_ = SUB42(ppuVar11, 0);\n        param_9._2_1_ = ppuVar11 >> 0x10;\n        param_9._3_1_ = ppuVar11 >> 0x18;\n        ppuVar10 = ppuVar10 & 0xffffff00 | (ppuVar10 + -0x74) - uVar26;\n        uVar26 = false;\n        iVar13 = uVar12 + 1;\n        unaff_EBP = unaff_retaddr;\n        while( true ) {\n            ppuVar10 = ppuVar10 + -0x16;\n            *ppuVar10 = *ppuVar10 + (uVar26 - 0x5a);\n            unaff_retaddr = ppuVar11;\n            if (iVar13 == 1 || *ppuVar10 != NULL) {\n                if (iVar13 != 2 && *ppuVar10 == NULL) {\n                    return;\n                }\n                *(ppuVar11 + -0x6d) = 0;\n                return;\n            }\ncode_r0x00c4f6d7:\n            *puVar16 = *puVar16 | 0xa5;\n            *(unaff_EBP + -0x12) = *(unaff_EBP + -0x12);\n            uVar7 = in(0x3b);\n            ppuVar11 = CONCAT13(param_9._3_1_, CONCAT12(param_9._2_1_, param_9)) & 0xffffff00 | uVar7;\n            *(param_6 + 0xc4d32b0) = *(param_6 + 0xc4d32b0) << (param_8 & 0x1f);\n            *(ppuVar11 + -0x4c625df3) = *(ppuVar11 + -0x4c625df3) + param_8;\n            ppuVar10 = unaff_retaddr + -1;\n            uVar26 = ppuVar11 < *unaff_retaddr;\n            bVar29 = SBORROW4(ppuVar11, *unaff_retaddr);\n            ppuVar5 = ppuVar11 - *unaff_retaddr;\n            while (!bVar29) {\n                uVar26 = false;\n                ppuVar11 = ppuVar11 | 0xafb39da2;\n                ppuVar5 = ppuVar11;\n                bVar29 = false;\n            }\n            uVar12 = param_8;\n            puVar16 = param_7;\n            uVar17 = param_6;\n            unaff_retaddr = param_4;\n            puVar21 = param_3;\n            if (bVar29 == ppuVar5 < 0) break;\n            iVar13 = param_8 + 1;\n            param_9._0_2_ = 0xffe6;\n            param_9._2_1_ = 0xff;\n            param_9._3_1_ = 0xff;\n            unaff_EBP = param_4;\n            if ((iVar13 >= 0) && (iVar13 != 0 && SCARRY4(param_8, 1) == iVar13 < 0)) {\n                out(0xd, ppuVar10);\n                uVar12 = ppuVar10 & 0xffffff00 | param_3[-1];\n                uVar28 = *0x10 == 0xffffffe1;\n                pcVar3 = swi(4);\n                param_10._0_2_ = in_ES;\n                if (SBORROW4(&param_10, 1) == true) {\n                    uVar12 = (*pcVar3)();\n                    fVar31 = extraout_ST0;\n                    in_ST1 = extraout_ST1;\n                }\n                do {\n                    if (uVar26 || uVar28) {\n                        fVar31 = in_ST6;\n                    }\n                    uVar7 = (uVar12 & 0x1000) != 0;\n                    *0xf6124eb4 = uVar12;\n                    *ppuVar11 = uVar12;\n                    in(0x24);\n                    ppuVar11 = CONCAT22(param_10, CONCAT11(param_9._3_1_, param_9._2_1_));\n                    iVar13 = CONCAT22(param_11, CONCAT11(param_10._3_1_, param_10._2_1_));\n                    ppuVar10 = CONCAT22(param_12, param_11._2_2_);\n                    uVar17 = CONCAT22(param_14, param_13._2_2_);\n                    piVar14 = CONCAT22(param_16, param_15._2_2_);\n                    if (&param_9 + 3 < 1) {\n                        ppuVar11 = CONCAT13(param_10._2_1_, CONCAT21(param_10, param_9._3_1_));\n                        *(ppuVar10 + 0x4aad1c81) = *(ppuVar10 + 0x4aad1c81) ^ piVar14;\n                        param_9._3_1_ = param_11._2_2_;\n                        param_10._0_2_ = ppuVar10 >> 8;\n                        param_10._2_1_ = param_12 >> 8;\n                    }\n                    puVar23 = piVar14 + 0x1552ab47 & 0xffff0000 | CONCAT11(0xd3, piVar14 + 0x1552ab47);\n                    piVar22 = iVar13 + -1;\n                    uVar34 = CONCAT44(CONCAT22(param_17, param_16._2_2_), piVar22);\n                    if (iVar13 < 1) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\ncode_r0x00c4f760:\n                    uVar12 = uVar34;\n                    uVar28 = piVar22 == NULL;\n                    uVar26 = false;\n                    piVar14 = piVar14 + -1;\n                } while (piVar14 != NULL && !uVar28);\n                uVar30 = CONCAT11((uVar34 >> 0x28) + *(uVar34 >> 0x20), uVar34 >> 0x20);\n                puVar24 = puVar23 + -1;\n                uVar35 = CONCAT24(uVar30, *puVar23);\n                puVar18 = uVar17 & 0xffff0000 | 0xd300;\n                pcVar3 = swi(4);\n                fVar32 = in_ST3;\n                fVar33 = in_ST4;\n                fVar6 = in_ST5;\n                if (SBORROW1(*(puVar23 + -0xd79ccfa), uVar30 >> 8) == true) {\n                    uVar35 = (*pcVar3)();\n                    piVar14 = extraout_ECX_00;\n                    fVar31 = extraout_ST0_01;\n                    in_ST1 = extraout_ST1_01;\n                    fVar32 = in_ST3;\n                    fVar33 = in_ST4;\n                    fVar6 = in_ST5;\n                }\n                do {\n                    in_ST5 = in_ST7;\n                    in_ST4 = in_ST6;\n                    in_ST3 = fVar6;\n                    iVar13 = uVar35 >> 0x20;\n                    uVar8 = uVar35;\n                    uVar15 = uVar35 >> 0x20;\n                    out(uVar15, uVar8);\n                    uVar20 = puVar18 >> 0x10;\n                    uVar19 = puVar18 >> 8 | uVar8;\n                    uVar17 = CONCAT21(uVar20, uVar19) << 8;\n                    *0x14cb6b5a = fVar31;\n                    uVar30 = (in_ST1 < *piVar14) << 8 | (in_ST1 == *piVar14) << 0xe;\n                    uVar7 = 9 < (uVar8 & 0xf) | uVar7;\n                    uVar8 = uVar8 + uVar7 * '\\x06';\n                    uVar27 = 0x90 < (uVar8 & 0xf0) | uVar7 * (0xf9 < uVar8);\n                    cVar2 = uVar27 * '`';\n                    puVar23 = puVar24 + -1;\n                    out(*puVar24, uVar15);\n                    in_ST6 = in_ST5;\n                    in_ST7 = in_ST5;\n                    if ((POPCOUNT(uVar19) & 1U) == 0) {\n                        uVar4 = piVar14 & 7;\n                        uVar19 = uVar19 >> uVar4 | uVar19 << 8 - uVar4;\n                        bVar29 = (piVar14 & 0x1f) != 0;\n                        uVar27 = !bVar29 & uVar27 | (bVar29 && uVar19 << 8 < 0);\n                        uVar12 = piVar14 - 1;\n                        param_9._0_2_ = uVar12 >> 8;\n                        uVar17 = CONCAT31(CONCAT21(uVar20, uVar19), 0xdf);\n                        ppuVar10 = ppuVar10 & 0xffff0000 | in_ES;\n                        param_8._3_1_ = uVar12 * 0x1000000 >> 0x18;\n                        ppuVar11 = uVar12 & 0xff000000 | CONCAT21(param_9, param_8._3_1_);\n                        piVar14 = piVar14 + -2;\n                        if (piVar14 == NULL) goto code_r0x00c4f795;\n                        param_9._2_1_ = 0;\n                        uVar34 = func_0x69d0e038();\n                        iVar13 = uVar34 >> 0x20;\n                        piVar14 = extraout_ECX & ppuVar11;\n                        fVar31 = extraout_ST0_00;\n                        in_ST1 = extraout_ST1_00;\n                        piVar22 = piVar14;\n                        if (piVar14 < 0) goto code_r0x00c4f760;\n                        uVar12 = uVar34 & 0xffffff00;\n                        *(iVar13 + -0x72) = uVar30;\n                        uVar25 = ppuVar11 - 1;\n                        uVar17 = 0x5f5f6a74;\n                        ppuVar11 = ppuVar10;\n                        fVar32 = extraout_ST0_00;\n                        fVar33 = extraout_ST1_00;\n                        if ((POPCOUNT(uVar25 & 0xff) & 1U) == 0) {\n                            LOCK();\n    // WARNING: Bad instruction - Truncating control flow here\n                            halt_baddata();\n                        }\n                    }\n                    else {\ncode_r0x00c4f795:\n                        uVar25 = 0x193ed7d6;\n                        uVar12 = ((uVar35 & 0xffffff00 | uVar8 + cVar2) + 0xfb6ea70e) - uVar27;\n                        uVar27 = piVar14 & 7;\n                        *0xebfc7f36 = *0xebfc7f36 << uVar27 | *0xebfc7f36 >> 8 - uVar27;\n                        *(ppuVar10 + 0x7151b9ef) = *(ppuVar10 + 0x7151b9ef) ^ uVar12 >> 8;\n                        piVar14 = piVar14 + 1;\n                        in_ES = *0x193ed7d6 >> 0x20;\n                        ppuVar11 = ppuVar10;\n                        in_ST3 = in_ST4;\n                        in_ST4 = in_ST5;\n                    }\n                    *(uVar25 + 0x15) = uVar12 >> 8;\n                    puVar18 = CONCAT31(uVar17 >> 8, 0x5a);\n                    ppuVar10 = *ppuVar11;\n                    puVar24 = puVar23 & ppuVar10;\n                    *(ppuVar10 + -0x42) = *(ppuVar10 + -0x42);\n                    if (uVar12 < -0x777fa97d) {\n                        iVar13 = in(iVar13);\n                        *ppuVar11 = puVar18;\n                        *(iVar13 + 0x77) = (*(iVar13 + 0x77) + '_') - (uVar12 < 0x88805683);\n                        *0x7b90935c = *0xb707ce4c;\n                        pcVar3 = swi(0x1a);\n                        *0xbd01c66a = in_CS;\n                        (*pcVar3)();\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    uVar35 = CONCAT44(iVar13, uVar12 ^ *(puVar24 + -0x312c480e));\n                    fVar31 = fVar32;\n                    in_ST1 = fVar33;\n                    fVar32 = in_ST3;\n                    fVar33 = in_ST4;\n                    fVar6 = in_ST5;\n                } while( true );\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 4645
    },
    "00d3e00e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00d3e00e(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    uchar *unaff_EDI;\n    uint8_t in_AF;\n    bool in_ZF;\n    char in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uchar uStack00000020;\n    \n    uStack00000020 = in_ZF || in_OF != in_SF;\n    fcn.00d8643f();\n    if (unaff_EDI <= &stack0x00000060) {\n        iVar1 = 0x1f;\n        if (unaff_ESI != 0) {\n            for (; unaff_ESI >> iVar1 == 0; iVar1 = iVar1 + -1) {\n            }\n        }\n        uVar2 = unaff_EDI + -0x80 & 0xfffffffc;\n        puVar3 = uVar2 - 0x40;\n        *(uVar2 - 0x44) = unaff_EDI;\n        *(uVar2 - 0x48) = unaff_ESI;\n        *(uVar2 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar2, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar2 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = **0x10;\n            *0x10 = *0x10 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00837b16. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(unaff_EBP + (1 - ((extraout_EDX ^ 0x2df5638b) + 1))))();\n    return;\n}\n",
        "token_count": 692
    },
    "00d4f145": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00d4f167)\n\nvoid __fastcall fcn.00d4f145(uint param_1, uint param_2)\n\n{\n    ushort extraout_DX;\n    uint *unaff_ESI;\n    ushort in_CS;\n    bool bVar1;\n    char cVar2;\n    char cVar3;\n    \n    cVar3 = '\\0';\n    cVar2 = '\\x01';\n    bVar1 = false;\n    fcn.00848132(0xcd4ef401, param_2);\n    if (bVar1 || cVar3 != cVar2) {\n        return;\n    }\n    out(*unaff_ESI, extraout_DX);\n    func_0x25643963(in_CS);\n    *(unaff_ESI + 0x7800b216) = 0xc04ef4db;\n    return;\n}\n",
        "token_count": 192
    },
    "007f007b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.007f007b(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0082f627": {
        "rules": [
            "contain loop",
            "resolve function by parsing PE exports",
            "link function at runtime on Windows",
            "parse PE header"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0082f627(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int16_t *arg_8h_00;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    char in_stack_0000000c;\n    uint8_t auStack280 [260];\n    int32_t iStack20;\n    int32_t iStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if ((((arg_8h == NULL) || (arg_ch == 0)) || (*arg_8h != 0x5a4d)) ||\n       ((iVar4 = *(arg_8h + 0x1e),  *(iVar4 + arg_8h) != 0x4550 || (uStack8 = *(iVar4 + 0x78 + arg_8h),  uStack8 == 0)))\n       ) {\n        return 0;\n    }\n    iStack20 = *(iVar4 + 0x7c + arg_8h);\n    uStack12 = 0xffffffff;\n    if (arg_ch < 0x10000) {\n        uStack12 = arg_ch - *(uStack8 + 0x10 + arg_8h);\n    }\n    else {\n        iVar4 = *(uStack8 + 0x18 + arg_8h);\n        if (iVar4 != 0) {\n            iStack16 = *(uStack8 + 0x20 + arg_8h) + arg_8h;\n            iVar7 = 0;\n            iVar4 = iVar4 + -1;\n            if (-1 < iVar4) {\n                do {\n                    iVar9 = iVar4 + iVar7 >> 1;\n                    iVar2 = fcn.008d2636();\n                    if (iVar2 < 0) {\n                        iVar4 = iVar9 + -1;\n                    }\n                    else {\n                        if (iVar2 < 1) {\n                            uStack12 = *(*(uStack8 + 0x24 + arg_8h) + iVar9 * 2 + arg_8h);\n                            break;\n                        }\n                        iVar7 = iVar9 + 1;\n                    }\n                } while (iVar7 <= iVar4);\n            }\n        }\n    }\n    if (*(uStack8 + 0x14 + arg_8h) <= uStack12) {\n        return 0;\n    }\n    uVar6 = *(*(uStack8 + 0x1c + arg_8h) + uStack12 * 4 + arg_8h);\n    if (uVar6 == 0) {\n        return 0;\n    }\n    if ((uVar6 < uStack8) || (iStack20 + uStack8 <= uVar6)) {\n        return uVar6 + arg_8h;\n    }\n    pcVar3 = uVar6 + arg_8h;\n    cVar1 = *pcVar3;\n    pcVar8 = pcVar3;\n    while( true ) {\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        if (cVar1 == '.') break;\n        cVar1 = pcVar8[1];\n        pcVar8 = pcVar8 + 1;\n    }\n    uVar6 = pcVar8 - pcVar3;\n    if (0x103 < uVar6) {\n        return 0;\n    }\n    uVar10 = 0;\n    if (pcVar8 != pcVar3) {\n        iVar4 = -pcVar3;\n        do {\n            if (*pcVar3 == '\\0') break;\n            pcVar3[auStack280 + iVar4] = *pcVar3;\n            uVar10 = uVar10 + 1;\n            pcVar3 = pcVar3 + 1;\n        } while (uVar10 < uVar6);\n    }\n    auStack280[uVar10] = 0;\n    arg_8h_00 = (**0x7b802c)();\n    if ((arg_8h_00 == NULL) && (arg_8h_00 = (**0x7b8028)(),  arg_8h_00 == NULL)) {\n        return 0;\n    }\n    if (arg_8h_00 != arg_8h) {\n        if (pcVar8[1] != '#') {\n            iVar4 = fcn.0082f627(arg_8h_00, pcVar8 + 1);\n            return iVar4;\n        }\n        pcVar3 = pcVar8 + 2;\n        iVar4 = 0;\n        cVar1 = pcVar8[2];\n        while ((cVar1 != '\\0' && (pcVar3 = pcVar3 + 1,  cVar1 - 0x30U < 10))) {\n            iVar4 = cVar1 + -0x30 + iVar4 * 10;\n            cVar1 = *pcVar3;\n        }\n        iVar4 = fcn.0082f627(arg_8h_00, iVar4);\n        return iVar4;\n    }\n    if (in_stack_0000000c == '\\0') {\n        iVar4 = (**0x7b8030)();\n        return iVar4;\n    }\n    uVar6 = 0;\n    do {\n        uVar5 = uVar6 & 0x1f;\n        uVar5 = uVar6 + (0x2eb859b0 << uVar5 | 0x2eb859b0 >> 0x20 - uVar5) ^ (auStack280 + uVar6)[arg_ch - auStack280];\n        auStack280[uVar6] = uVar5;\n        if (uVar5 == 0) break;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 0x104);\n    iVar4 = (**0x7b8030)();\n    return iVar4;\n}\n",
        "token_count": 1346
    },
    "00844e5a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00844e5a(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    int32_t unaff_ESI;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (arg_8h != 0) {\n        do {\n            if (((((uVar1 + 9 < arg_8h) && ((*(uVar1 + unaff_ESI) ^ in_EDX) == *(in_ECX + 0x1c))) &&\n                 ((*(uVar1 + 4 + unaff_ESI) ^ in_EDX) == *(in_ECX + 0x20))) &&\n                ((*(uVar1 + 8 + unaff_ESI) ^ in_EDX) == *(in_ECX + 0x24))) ||\n               ((((uVar1 + 5 < arg_8h && ((*(uVar1 + unaff_ESI) ^ in_EDX) == *(in_ECX + 0x28))) &&\n                 ((*(uVar1 + 4 + unaff_ESI) ^ in_EDX) == *(in_ECX + 0x2c))) ||\n                (((uVar1 + 8 < arg_8h && ((*(uVar1 + unaff_ESI) ^ in_EDX) == *(in_ECX + 0x30))) &&\n                 (((*(uVar1 + 4 + unaff_ESI) ^ in_EDX) == *(in_ECX + 0x34) &&\n                  ((*(uVar1 + 8 + unaff_ESI) ^ in_EDX) == *(in_ECX + 0x38))))))))) {\n                return CONCAT31(uVar1 >> 8, 1);\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_8h);\n    }\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 435
    }
}