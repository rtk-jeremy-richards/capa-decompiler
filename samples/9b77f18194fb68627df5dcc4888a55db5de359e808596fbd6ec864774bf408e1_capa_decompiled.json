{
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00401180 noreturn (void)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    char *pcVar11;\n    char cVar12;\n    char *pcVar13;\n    uint8_t uVar14;\n    uint var_4ch;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack116;\n    char *pcStack112;\n    uint32_t uStack108;\n    uchar *puStack104;\n    uint32_t uStack100;\n    uint *puStack96;\n    uchar *apuStack92 [3];\n    uchar *var_4ch_2;\n    char *var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint auStack60 [3];\n    uchar auStack48 [4];\n    uint var_28h_2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*0x4086bc != NULL) {\n        uStack100 = 0;\n        puStack104 = 0x2;\n        uStack108 = 0;\n        pcStack112 = 0x4011ab;\n        (**0x4086bc)();\n    }\n    uStack108 = 0x401000;\n    pcStack112 = 0x4011ba;\n    sub.kernel32.dll_SetUnhandledExceptionFilter();\n    uStack116 = 0x4011c2;\n    fcn.004045b0();\n    uStack116 = 0x4011c7;\n    fcn.004045a0();\n    if ((*0x407004 & 2) == 0) {\n        uStack100 = *0x407004 & 1;\n        var_28h_2 = 0;\n        puStack96 = &fcn.00401180::var_28h_2;\n        puStack104 = &stack0xffffffd0;\n        uStack108 = 0x40b000;\n        pcStack112 = 0x40b004;\n        uStack116 = 0x401541;\n        sub.msvcrt.dll___getmainargs();\n    }\n    else {\n        uStack116 = 0x4011d9;\n        pcVar1 = sub.kernel32.dll_GetCommandLineA();\n        iVar9 = -1;\n        pcVar8 = pcVar1;\n        do {\n            if (iVar9 == 0) break;\n            iVar9 = iVar9 + -1;\n            cVar12 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar12 != '\\0');\n        uStack116 = 0x4011f5;\n        var_4ch_2 = &stack0xffffff90;\n        iVar9 = fcn.004063d0();\n        iVar9 = -iVar9;\n        var_48h = &stack0xffffffa4 + iVar9;\n        var_1ch = 0;\n        var_3ch = 0;\n        var_40h = 0;\n        uVar2 = 0;\n        var_44h = (-((*0x407004 & 0x40) == 0) & 0xffffc000) + 0x4010;\n        pcVar8 = &stack0xffffffa4 + iVar9;\ncode_r0x00401235:\n        cVar12 = *pcVar1;\n        uVar10 = cVar12;\n        if (uVar10 != 0) {\ncode_r0x00401247:\n            pcVar1 = pcVar1 + 1;\n            if (cVar12 == '?') {\ncode_r0x00401500:\n                uVar14 = 0;\n                goto joined_r0x004012ec;\n            }\n            if ('?' < cVar12) {\n                if (cVar12 == '\\\\') {\n                    uVar2 = uVar2 + 1;\n                    goto code_r0x00401235;\n                }\n                if (cVar12 == '\\x7f') goto code_r0x00401500;\n                if (cVar12 != '[') goto code_r0x00401422;\n                uVar14 = (*0x407004 >> 5 ^ 1) & 1;\njoined_r0x004012ec:\n                if (uVar2 != 0) {\n                    pcVar13 = pcVar8 + uVar2;\n                    pcVar3 = pcVar8;\n                    do {\n                        pcVar11 = pcVar3 + 1;\n                        *pcVar3 = '\\\\';\n                        pcVar8 = pcVar13;\n                        pcVar3 = pcVar11;\n                    } while (pcVar11 != pcVar13);\n                }\n                if (((var_3ch != 0) || (uVar14 != 0)) || (uVar10 == 0x7f)) {\n                    *pcVar8 = '\\x7f';\n                    pcVar8 = pcVar8 + 1;\n                }\n                *pcVar8 = cVar12;\n                cVar12 = *pcVar1;\n                pcVar8 = pcVar8 + 1;\n                uVar2 = 0;\n                uVar10 = cVar12;\n                if (uVar10 == 0) goto code_r0x00401336;\n                goto code_r0x00401247;\n            }\n            iVar7 = uVar2 >> 1;\n            if (cVar12 == '\\'') {\n                if ((*0x407004 & 0x10) == 0) goto code_r0x00401422;\n                pcVar3 = pcVar8;\n                if (iVar7 != 0) {\n                    pcVar13 = pcVar8;\n                    do {\n                        pcVar11 = pcVar13 + 1;\n                        *pcVar13 = '\\\\';\n                        pcVar13 = pcVar11;\n                        pcVar3 = pcVar8 + iVar7;\n                    } while (pcVar11 != pcVar8 + iVar7);\n                }\n                if (((uVar2 & 1) != 0) || (var_3ch == 0x22)) {\n                    pcVar8 = pcVar3 + 1;\n                    uVar2 = 0;\n                    *pcVar3 = '\\'';\n                    var_40h = 1;\n                    goto code_r0x00401235;\n                }\n            }\n            else {\n                if (cVar12 == '*') goto code_r0x00401500;\n                if (cVar12 != '\\\"') goto code_r0x00401422;\n                if (iVar7 != 0) {\n                    pcVar13 = pcVar8 + iVar7;\n                    pcVar3 = pcVar8;\n                    do {\n                        pcVar11 = pcVar3 + 1;\n                        *pcVar3 = '\\\\';\n                        pcVar3 = pcVar11;\n                        pcVar8 = pcVar13;\n                    } while (pcVar11 != pcVar13);\n                }\n                if (((uVar2 & 1) != 0) || (pcVar3 = pcVar8,  var_3ch == 0x27)) {\n                    uVar2 = 0;\n                    *pcVar8 = '\\\"';\n                    var_40h = 1;\n                    pcVar8 = pcVar8 + 1;\n                    goto code_r0x00401235;\n                }\n            }\n            var_3ch = var_3ch ^ uVar10;\n            uVar2 = 0;\n            var_40h = 1;\n            pcVar8 = pcVar3;\n            goto code_r0x00401235;\n        }\ncode_r0x00401336:\n        if (uVar2 != 0) {\n            pcVar3 = pcVar8 + uVar2;\n            pcVar1 = pcVar8;\n            do {\n                pcVar13 = pcVar1 + 1;\n                *pcVar1 = '\\\\';\n                pcVar8 = pcVar3;\n                pcVar1 = pcVar13;\n            } while (pcVar13 != pcVar3);\n        }\n        if ((var_40h != 0) || (var_48h < pcVar8)) {\n            *pcVar8 = '\\0';\n            *(&stack0xffffff9c + iVar9) = &fcn.00401180::var_28h_2;\n            *(&stack0xffffff98 + iVar9) = 0;\n            *(&stack0xffffff94 + iVar9) = var_44h;\n            *(&stack0xffffff90 + iVar9) = var_48h;\n            *(&stack0xffffff8c + iVar9) = 0x40137a;\n            fcn.00405840(*(&stack0xffffff90 + iVar9), *(&stack0xffffff94 + iVar9), *(&stack0xffffff98 + iVar9), \n                         *(&stack0xffffff9c + iVar9), *(&stack0xffffffa0 + iVar9), *(&stack0xffffffa4 + iVar9), \n                         *(&stack0xffffffa8 + iVar9), *(&stack0xffffffac + iVar9), *(&fcn.00401180::var_4ch_2 + iVar9), \n                         *(&fcn.00401180::var_48h + iVar9), *(&fcn.00401180::var_44h + iVar9), \n                         *(&fcn.00401180::var_40h + iVar9), *(&fcn.00401180::var_3ch + iVar9), \n                         *(&stack0xffffffc4 + iVar9));\n        }\n        *0x40b004 = var_24h;\n        *0x40b000 = var_20h;\n    }\n    iVar9 = _sym.imp.msvcrt.dll__iob;\n    if (*0x40b034 != 0) {\n        *0x407008 = *0x40b034;\n        uStack108 = *0x40b034;\n        pcStack112 = *(_sym.imp.msvcrt.dll__iob + 0x10);\n        uStack116 = 0x4013b0;\n        sub.msvcrt.dll__setmode();\n        uStack108 = *0x40b034;\n        pcStack112 = *(iVar9 + 0x30);\n        uStack116 = 0x4013c4;\n        sub.msvcrt.dll__setmode();\n        uStack108 = *0x40b034;\n        pcStack112 = *(iVar9 + 0x50);\n        uStack116 = 0x4013d8;\n        sub.msvcrt.dll__setmode();\n    }\n    uStack116 = 0x4013dd;\n    piVar4 = sub.msvcrt.dll___p__fmode();\n    *piVar4 = *0x407008;\n    uStack116 = 0x4013ea;\n    fcn.004047d0();\n    uStack116 = 0x4013f2;\n    fcn.00404a30();\n    uStack116 = 0x4013f7;\n    puVar5 = sub.msvcrt.dll___p__environ();\n    puStack104 = *puVar5;\n    uStack108 = *0x40b000;\n    pcStack112 = *0x40b004;\n    uStack116 = 0x401413;\n    uVar6 = main();\n    uStack116 = 0x40141a;\n    sub.msvcrt.dll__cexit();\n    // WARNING: Subroutine does not return\n    uStack116 = 0x401422;\n    pcStack112 = uVar6;\n    sub.kernel32.dll_ExitProcess();\ncode_r0x00401422:\n    pcVar3 = pcVar8 + uVar2;\n    pcVar13 = pcVar8;\n    if (uVar2 != 0) {\n        do {\n            pcVar11 = pcVar8 + 1;\n            *pcVar8 = '\\\\';\n            pcVar8 = pcVar11;\n            pcVar13 = pcVar3;\n        } while (pcVar11 != pcVar3);\n    }\n    if (var_3ch == 0) {\n        *(&stack0xffffff90 + iVar9) = uVar10;\n        *(&stack0xffffff8c + iVar9) = 0x40144a;\n        iVar7 = sub.msvcrt.dll_isspace();\n        if (iVar7 != 0) {\n            if ((var_40h == 0) && (pcVar13 <= var_48h)) {\n                uVar2 = 0;\n                pcVar8 = pcVar13;\n            }\n            else {\n                *pcVar13 = '\\0';\n                *(&stack0xffffff9c + iVar9) = &fcn.00401180::var_28h_2;\n                *(&stack0xffffff98 + iVar9) = 0;\n                *(&stack0xffffff94 + iVar9) = var_44h;\n                pcVar8 = var_48h;\n                *(&stack0xffffff90 + iVar9) = var_48h;\n                *(&stack0xffffff8c + iVar9) = 0x401481;\n                fcn.00405840(*(&stack0xffffff90 + iVar9), *(&stack0xffffff94 + iVar9), *(&stack0xffffff98 + iVar9), \n                             *(&stack0xffffff9c + iVar9), *(&stack0xffffffa0 + iVar9), *(&stack0xffffffa4 + iVar9), \n                             *(&stack0xffffffa8 + iVar9), *(&stack0xffffffac + iVar9), \n                             *(&fcn.00401180::var_4ch_2 + iVar9), *(&fcn.00401180::var_48h + iVar9), \n                             *(&fcn.00401180::var_44h + iVar9), *(&fcn.00401180::var_40h + iVar9), \n                             *(&fcn.00401180::var_3ch + iVar9), *(&stack0xffffffc4 + iVar9));\n                uVar2 = 0;\n                var_44h = var_44h | 1;\n                var_40h = 0;\n            }\n            goto code_r0x00401235;\n        }\n    }\n    pcVar8 = pcVar13 + 1;\n    uVar2 = 0;\n    *pcVar13 = cVar12;\n    goto code_r0x00401235;\n}\n",
        "token_count": 3194
    },
    "004015d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004015d0(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*0x40b00c != 0) {\n        if (*0x407000 == 0) {\n            *0x40b00c = 0;\n            sub.user32.dll_ShowWindow(*0x40b074, 0);\n            if ((*0x40b070 != 0) && (*0x40b078 != 0)) {\n                uVar1 = sub.user32.dll_KillTimer(arg_8h, 1);\n                fcn.00401f26(uVar1, uVar1);\n                sub.user32.dll_PostQuitMessage(0);\n            }\n        }\n        else {\n            *0x407000 = *0x407000 + -100;\n            if (*0x40b070 != 0) {\n                sub.user32.dll_EnumWindows(fcn.004016cc, 0);\n            }\n        }\n    }\n    sub.kernel32.dll_GetExitCodeProcess(*0x413288, 0x40b014);\n    if ((*0x40b014 != 0x103) || ((*0x40b00c == 0 && (*0x40b010 == 0)))) {\n        uVar1 = sub.user32.dll_KillTimer(*0x40b074, 1);\n        sub.user32.dll_PostQuitMessage(0, uVar1);\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "00401803": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00401803(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint var_3eh;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_bp_2ch;\n    int32_t Y;\n    uint var_ch;\n    \n    iVar1 = fcn.00404120(arg_10h);\n    if (iVar1 == 0xb7) {\n        uVar2 = fcn.0040173c();\n        sub.user32.dll_ShowWindow(uVar2, 5);\n        uVar2 = sub.user32.dll_SetForegroundWindow(uVar2);\n        fcn.00401d11(uVar2);\n        return 2;\n    }\n    if (iVar1 == 1) {\n        iVar1 = fcn.00402158(4);\n        uVar4 = 0;\n        if (iVar1 != 0) {\n            iVar1 = sub.msvcrt.dll_strstr(arg_10h, \"--l4j-no-splash\");\n            uVar4 = iVar1 == 0;\n        }\n        *0x40b00c = uVar4;\n        *0x40b008 = fcn.00402158(0x1f);\n        uVar4 = 1;\n        if (*0x40b008 == 0) {\n            iVar1 = fcn.00402158(0xb);\n            uVar4 = 0;\n            if (iVar1 != 0) {\n                iVar1 = sub.msvcrt.dll_strstr(arg_10h, \"--l4j-dont-wait\");\n                uVar4 = iVar1 == 0;\n            }\n        }\n        *0x40b010 = uVar4;\n        if (((*0x40b00c != 0) || (uVar4 != 0)) &&\n           (*0x40b074 = sub.user32.dll_CreateWindowExA\n                                  (0x80, \"STATIC\", 0x408020, 0x8000000e, 0, 0, 0x80000000, 0x80000000, 0, 0, arg_8h, 0)\n           ,  *0x40b00c != 0)) {\n            puVar5 = &var_3eh;\n            for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            iVar1 = fcn.0040205e(6, &var_3eh);\n            if (iVar1 != 0) {\n                iVar1 = sub.msvcrt.dll_atoi(&var_3eh);\n                *0x407000 = 0x3c;\n                if (iVar1 - 1U < 900) {\n                    *0x407000 = iVar1;\n                }\n            }\n            *0x407000 = *0x407000 * 1000;\n            iVar1 = fcn.00402158(7);\n            uVar4 = 0;\n            if (iVar1 != 0) {\n                iVar1 = sub.msvcrt.dll_strstr(arg_10h, \"--l4j-no-splash-err\");\n                uVar4 = iVar1 == 0;\n            }\n            *0x40b078 = uVar4;\n            *0x40b070 = fcn.00402158(5);\n            iVar1 = sub.user32.dll_LoadImageA(arg_8h, 1, 0, 0, 0, 0x40);\n            if (iVar1 == 0) goto code_r0x00401b2d;\n            sub.user32.dll_SendMessageA(*0x40b074, 0x172, 0, iVar1);\n            uVar2 = sub.user32.dll_GetWindowRect(*0x40b074, &var_34h);\n            iVar1 = sub.user32.dll_GetSystemMetrics(0, uVar2);\n            iVar3 = sub.user32.dll_GetSystemMetrics(1);\n            sub.user32.dll_SetWindowPos\n                      (*0x40b074, 0, ((iVar1 + var_34h) - var_bp_2ch) / 2, ((iVar3 + var_30h) - Y) / 2, 0, 0, 1);\n            sub.user32.dll_ShowWindow(*0x40b074, arg_14h);\n            sub.user32.dll_UpdateWindow(*0x40b074, 2);\n        }\n        do {\n            if ((((*0x40b00c != 0) || (*0x40b010 != 0)) &&\n                (iVar1 = sub.user32.dll_SetTimer(*0x40b074, 1, 100, fcn.004015d0),  iVar1 == 0)) ||\n               (iVar1 = fcn.00404357(0, 0x40b014),  iVar1 == 0)) goto code_r0x00401b2d;\n            if ((*0x40b00c == 0) && (*0x40b010 == 0)) {\n                if (*0x40b07c != 0) {\n                    sub.msvcrt.dll_fputs(\"Exit code:\\t0\\n\", *0x40b07c);\n                }\n                fcn.00404333();\n                fcn.00401d11();\n                return 0;\n            }\n            while (iVar1 = sub.user32.dll_GetMessageA(&var_34h, 0, 0, 0),  iVar1 != 0) {\n                sub.user32.dll_TranslateMessage();\n                sub.user32.dll_DispatchMessageA(&var_34h);\n            }\n            if (((*0x40b008 != 0) && (*0x40b014 != 0)) && (*0x40b07c != 0)) {\n                sub.msvcrt.dll_fprintf();\n            }\n            fcn.00404333();\n        } while ((*0x40b008 != 0) && (*0x40b014 != 0));\n        if (*0x40b07c != 0) {\n            sub.msvcrt.dll_fprintf();\n        }\n        fcn.00401d11();\n        iVar1 = *0x40b014;\n    }\n    else {\ncode_r0x00401b2d:\n        fcn.00401f26();\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 1476
    },
    "00401e3d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.00401e3d(void)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_bp_4h;\n    \n    uVar1 = sub.kernel32.dll_GetModuleHandleA(\"kernel32\");\n    uVar2 = sub.kernel32.dll_GetProcAddress(uVar1, \"IsWow64Process\");\n    uVar1 = uVar2 >> 0x20;\n    if (uVar2 != NULL) {\n        uVar1 = sub.kernel32.dll_GetCurrentProcess(uVar1, uVar1);\n        (*uVar2)(uVar1, 0x40b018);\n    }\n    if (*0x40b07c != 0) {\n        uVar1 = 0x4080f1;\n        if (*0x40b018 == 0) {\n            uVar1 = 0x4080f5;\n        }\n        sub.msvcrt.dll_fprintf(*0x40b07c, \"WOW64:\\t\\t%s\\n\", uVar1);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00401ec3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ec3(uint arg_8h)\n\n{\n    if (*0x40b01c == 0) {\n        sub.user32.dll_MessageBoxA(0, arg_8h, 0x41383c, 0);\n    }\n    else {\n        if (*0x41383c == '\\0') {\n    // WARNING: Could not recover jumptable at 0x00406598. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_puts)();\n            return;\n        }\n        sub.msvcrt.dll_printf(\"%s: %s\\n\", 0x41383c, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00401f26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00401f26(void)\n\n{\n    int32_t iVar1;\n    uint s2;\n    uint var_4h;\n    \n    iVar1 = sub.kernel32.dll_GetLastError();\n    if (*0x40b07c != 0) {\n        sub.msvcrt.dll_fprintf(*0x40b07c, \"Error msg:\\t%s\\n\", 0x4138bc);\n    }\n    if (iVar1 != 0) {\n        sub.kernel32.dll_FormatMessageA(0x1300, 0, iVar1, 0x400, &s2, 0, 0);\n        if (*0x40b07c != 0) {\n            sub.msvcrt.dll_fprintf(*0x40b07c, \"Error:\\t\\t%s\\n\", s2);\n        }\n        sub.msvcrt.dll_strcat(0x4138bc, 0x40813f);\n        sub.msvcrt.dll_strcat(0x4138bc, s2);\n        sub.kernel32.dll_LocalFree(s2);\n    }\n    fcn.00401ec3(0x4138bc);\n    if (*0x413cbc != '\\0') {\n        if (*0x40b07c != 0) {\n            sub.msvcrt.dll_fprintf(*0x40b07c, \"Open URL:\\t%s\\n\", 0x413cbc);\n        }\n        sub.shell32.dll_ShellExecuteA(0, \"open\", 0x413cbc, 0, 0, 1);\n    }\n    fcn.00401d11();\n    return;\n}\n",
        "token_count": 364
    },
    "0040205e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nuint __cdecl fcn.0040205e(uint32_t arg_8h, uchar *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    int32_t iVar3;\n    uint var_bp_8h;\n    \n    if ((*0x40b020 != 0) && (*0x40b07c != 0)) {\n        sub.msvcrt.dll_fprintf(*0x40b07c, \"Resource %d:\\t\", arg_8h);\n    }\n    iVar2 = sub.kernel32.dll_FindResourceExA(*0x413838, 10, arg_8h & 0xffff, 0x400);\n    if (iVar2 == 0) {\n        sub.kernel32.dll_SetLastError(0);\n        *arg_ch = 0;\n    }\n    else {\n        iVar2 = sub.kernel32.dll_LoadResource(*0x413838, iVar2);\n        if ((iVar2 != 0) && (iVar2 = sub.kernel32.dll_LockResource(iVar2, extraout_ECX),  iVar2 != 0)) {\n            iVar3 = 0;\n            do {\n                cVar1 = *(iVar2 + iVar3);\n                arg_ch[iVar3] = cVar1;\n                iVar3 = iVar3 + 1;\n            } while (cVar1 != '\\0');\n            if (*0x40b020 == 0) {\n                return 1;\n            }\n            if (*0x40b07c == 0) {\n                return 1;\n            }\n            sub.msvcrt.dll_fprintf(*0x40b07c, 0x408163, arg_ch);\n            return 1;\n        }\n    }\n    if ((*0x40b020 != 0) && (*0x40b07c != 0)) {\n        sub.msvcrt.dll_fputs(\"<NULL>\\n\", *0x40b07c);\n    }\n    return 0;\n}\n",
        "token_count": 441
    },
    "004021ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool __cdecl fcn.004021ce(int32_t s1, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    uint var_2ch;\n    uint hKey;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_CLASSES_ROOT\");\n    if (iVar1 == s1) {\n        uVar4 = 0x80000000;\n    }\n    else {\n        iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_CURRENT_USER\");\n        if (iVar1 == s1) {\n            uVar4 = 0x80000001;\n        }\n        else {\n            iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_LOCAL_MACHINE\");\n            if (iVar1 == s1) {\n                uVar4 = 0x80000002;\n            }\n            else {\n                iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_USERS\");\n                if (iVar1 == s1) {\n                    uVar4 = 0x80000003;\n                }\n                else {\n                    iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_CURRENT_CONFIG\");\n                    if (iVar1 != s1) {\n                        return false;\n                    }\n                    uVar4 = 0x80000005;\n                }\n            }\n        }\n    }\n    iVar1 = sub.msvcrt.dll_strchr(s1, 0x5c);\n    puVar2 = sub.msvcrt.dll_strrchr(s1, 0x5c);\n    *puVar2 = 0;\n    if ((*0x40b018 == 0) || (iVar3 = sub.advapi32.dll_RegOpenKeyExA(uVar4, iVar1 + 1, 0, 0x20119, &hKey),  iVar3 != 0))\n    {\n        bVar5 = false;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA(uVar4, iVar1 + 1, 0, 0x20019, &hKey);\n        if (iVar1 != 0) goto code_r0x00402339;\n    }\n    iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, puVar2 + 1, 0, &var_1ch, arg_ch, &arg_10h);\n    bVar5 = iVar1 == 0;\n    sub.advapi32.dll_RegCloseKey(hKey);\ncode_r0x00402339:\n    *puVar2 = 0x5c;\n    return bVar5;\n}\n",
        "token_count": 610
    },
    "00402346": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402346(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar2 = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        uVar3 = sub.msvcrt.dll_strchr(arg_8h, 0x2e);\n        uVar4 = sub.msvcrt.dll_strchr(arg_8h, 0x5f);\n        if (uVar3 == 0) {\n            uVar3 = uVar4;\n            if (uVar4 == 0) {\n                uVar3 = 0xffffffff;\n                do {\n                    if (uVar3 == 0) break;\n                    uVar3 = uVar3 - 1;\n                    cVar1 = *arg_8h;\n                    arg_8h = arg_8h + 1;\n                } while (cVar1 != '\\0');\n                return ~uVar3 - 1;\n            }\n        }\n        else if ((uVar4 != 0) && (uVar4 < uVar3)) {\n            uVar3 = uVar4;\n        }\n        iVar2 = uVar3 - arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 295
    },
    "004023a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __cdecl\nfcn.004023a8(uint noname_0, char *noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint dest, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_ch;\n    char *pcStackY64;\n    uint uStack56;\n    int32_t iStack52;\n    uint32_t var_2ch;\n    uchar *var_28h_2;\n    char *var_24h_2;\n    char *var_20h;\n    int32_t var_1ch_2;\n    \n    uStack56 = 0x4081ca;\n    pcStackY64 = 0x4023c4;\n    sub.msvcrt.dll_strcpy();\n    if ((noname_1 != NULL) && (*noname_1 != '\\0')) {\n        var_1ch_2 = 0;\n        var_24h_2 = noname_1;\n        while( true ) {\n            pcStackY64 = 0x4023f2;\n            iVar2 = fcn.00402346(var_24h_2);\n            if (iVar2 < 1) break;\n            pcStackY64 = 0x40240d;\n            var_28h_2 = &stack0xffffffc4;\n            iVar3 = fcn.004063d0();\n            iVar3 = -iVar3;\n            var_20h = &fcn.004023a8::var_2ch + iVar3;\n            pcVar6 = &fcn.004023a8::var_2ch + iVar3;\n            for (iVar4 = extraout_ECX; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *pcVar6 = '\\0';\n                pcVar6 = pcVar6 + 1;\n            }\n            *(&stack0xffffffcc + iVar3) = iVar2;\n            *(&stack0xffffffc8 + iVar3) = var_24h_2;\n            *(&stack0xffffffc4 + iVar3) = var_20h;\n            *(&stack0xffffffc0 + iVar3) = 0x402430;\n            sub.msvcrt.dll_strncpy();\n            if (var_1ch_2 != 0) {\n                if (var_1ch_2 < 3) {\ncode_r0x00402466:\n                    *(&stack0xffffffc8 + iVar3) = 0x4081cd;\n                    *(&stack0xffffffc4 + iVar3) = noname_0;\n                    *(&stack0xffffffc0 + iVar3) = 0x402476;\n                    sub.msvcrt.dll_strcat();\n                    uVar5 = 0;\n                    do {\n                        iVar4 = -1;\n                        pcVar6 = var_20h;\n                        do {\n                            if (iVar4 == 0) break;\n                            iVar4 = iVar4 + -1;\n                            cVar1 = *pcVar6;\n                            pcVar6 = pcVar6 + 1;\n                        } while (cVar1 != '\\0');\n                        if (iVar4 + 5U <= uVar5) goto code_r0x004024e4;\n                        var_2ch = uVar5;\n                        *(&stack0xffffffc8 + iVar3) = 0x4081cf;\n                        *(&stack0xffffffc4 + iVar3) = noname_0;\n                        *(&stack0xffffffc0 + iVar3) = 0x40249c;\n                        sub.msvcrt.dll_strcat();\n                        uVar5 = var_2ch + 1;\n                    } while( true );\n                }\n                if (var_1ch_2 == 3) {\n                    *(&stack0xffffffc8 + iVar3) = 0x4081d1;\n                    *(&stack0xffffffc4 + iVar3) = noname_0;\n                    *(&stack0xffffffc0 + iVar3) = 0x4024b8;\n                    sub.msvcrt.dll_strcat();\n                    uVar5 = 0;\n                    do {\n                        iVar4 = -1;\n                        pcVar6 = var_20h;\n                        do {\n                            if (iVar4 == 0) break;\n                            iVar4 = iVar4 + -1;\n                            cVar1 = *pcVar6;\n                            pcVar6 = pcVar6 + 1;\n                        } while (cVar1 != '\\0');\n                        if (iVar4 + 5U <= uVar5) goto code_r0x004024e4;\n                        var_2ch = uVar5;\n                        *(&stack0xffffffc8 + iVar3) = 0x4081cf;\n                        *(&stack0xffffffc4 + iVar3) = noname_0;\n                        *(&stack0xffffffc0 + iVar3) = 0x4024de;\n                        sub.msvcrt.dll_strcat();\n                        uVar5 = var_2ch + 1;\n                    } while( true );\n                }\n                if (*0x40b07c != 0) {\n                    *(&stack0xffffffc8 + iVar3) = *0x40b07c;\n                    *(&stack0xffffffc4 + iVar3) = 0x4081d3;\n                    *(&stack0xffffffc0 + iVar3) = 0x40253a;\n                    sub.msvcrt.dll_fputs();\n                }\n                break;\n            }\n            if ((iVar2 != 1) || (*var_20h != '1')) {\n                *(&stack0xffffffc8 + iVar3) = 0x4081cb;\n                *(&stack0xffffffc4 + iVar3) = noname_0;\n                *(&stack0xffffffc0 + iVar3) = 0x402457;\n                sub.msvcrt.dll_strcpy();\n                var_1ch_2 = 1;\n                goto code_r0x00402466;\n            }\ncode_r0x004024e4:\n            pcVar6 = var_20h;\n            *(&stack0xffffffc4 + iVar3) = noname_0;\n            *(&stack0xffffffc8 + iVar3) = pcVar6;\n            *(&stack0xffffffc0 + iVar3) = 0x4024f3;\n            sub.msvcrt.dll_strcat();\n            uVar5 = 0xffffffff;\n            var_1ch_2 = var_1ch_2 + 1;\n            var_24h_2 = var_24h_2 + iVar2 + 1;\n            pcVar6 = noname_1;\n            do {\n                if (uVar5 == 0) break;\n                uVar5 = uVar5 - 1;\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            if (noname_1 + (~uVar5 - 1) <= var_24h_2) break;\n        }\n        for (; var_1ch_2 < 3; var_1ch_2 = var_1ch_2 + 1) {\n            uStack56 = 0x4081cd;\n            pcStackY64 = 0x402553;\n            sub.msvcrt.dll_strcat();\n            uStack56 = 0x4081cf;\n            pcStackY64 = 0x402563;\n            sub.msvcrt.dll_strcat();\n            uStack56 = 0x4081cf;\n            pcStackY64 = 0x402573;\n            sub.msvcrt.dll_strcat();\n            uStack56 = 0x4081cf;\n            pcStackY64 = 0x402583;\n            sub.msvcrt.dll_strcat();\n        }\n    }\n    return;\n}\n",
        "token_count": 1819
    },
    "00402619": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402619(uint arg_8h)\n\n{\n    char *arg_ch;\n    \n    if (*0x40b01c == 0) {\n        arg_ch = \"bin\\\\javaw.exe\";\n    }\n    else {\n        arg_ch = \"bin\\\\java.exe\";\n    }\n    fcn.004025d6(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 86
    },
    "00402647": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00402647(char *arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_188h;\n    uint var_184h;\n    ushort var_180h;\n    ushort var_17eh;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_148h;\n    uint var_140h;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_11ch;\n    uint var_ch;\n    \n    puVar4 = &var_11ch;\n    for (iVar3 = 0x41; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    iVar3 = 0;\n    if (*arg_8h != '\\0') {\n        sub.msvcrt.dll_strcpy(&var_11ch, arg_8h);\n        fcn.00402619(&var_11ch);\n        iVar1 = sub.msvcrt.dll__stat64(&var_11ch, &var_158h);\n        if (iVar1 == -1) {\n            puVar4 = &var_188h;\n            for (iVar3 = 0xc; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        else {\n            var_188h = var_158h;\n            var_170h = var_138h;\n            var_16ch = var_134h;\n            var_184h._0_2_ = var_154h;\n            var_168h = var_130h;\n            var_164h = var_12ch;\n            var_184h._2_2_ = var_154h._2_2_;\n            var_160h = var_128h;\n            var_15ch = var_124h;\n            iVar3 = 1;\n            var_180h = var_150h;\n            var_17eh = var_150h._2_2_;\n            var_178h = var_148h;\n            var_174h = var_140h;\n            if (iVar1 == 0) goto code_r0x00402780;\n        }\n        iVar3 = 0;\n        sub.kernel32.dll_SetLastError(0);\n    }\ncode_r0x00402780:\n    if (*0x40b07c != 0) {\n        pcVar2 = \"(OK)\";\n        if (iVar3 == 0) {\n            pcVar2 = \"(not found)\";\n        }\n        sub.msvcrt.dll_fprintf(*0x40b07c, \"Check launcher:\\t%s %s\\n\", &var_11ch, pcVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 759
    },
    "004028cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004028cb(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puStackY920;\n    uint uStackY916;\n    uint uStackY912;\n    uint uStackY908;\n    uint uStackY904;\n    uint *noname_10;\n    uint noname_13;\n    uint dest;\n    uint *arg_ch_00;\n    uint var_33ch;\n    uint hKey;\n    uint var_330h;\n    uint var_32ch;\n    uint var_324h;\n    uint var_220h;\n    uint var_11ch;\n    uint var_bp_ch;\n    \n    if (*0x40b07c != 0) {\n        uVar1 = 0x408255;\n        if ((arg_ch & 0x100) == 0) {\n            uVar1 = 0x408258;\n        }\n        sub.msvcrt.dll_fprintf(*0x40b07c, \"%s-bit search:\\t%s...\\n\", uVar1, arg_8h);\n    }\n    iVar2 = sub.advapi32.dll_RegOpenKeyExA(0x80000002, arg_8h, 0, arg_ch & 0x100 | 0x20019, &fcn.004028cb::hKey);\n    if (iVar2 == 0) {\n        puVar5 = &fcn.004028cb::var_324h;\n        for (iVar4 = 0x41; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        puVar5 = &fcn.004028cb::var_220h;\n        for (iVar4 = 0x41; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        puVar5 = &fcn.004028cb::var_11ch;\n        for (iVar4 = 0x41; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        while( true ) {\n            var_330h = 0x104;\n            iVar4 = iVar2 + 1;\n            puVar5 = &fcn.004028cb::var_330h;\n            arg_ch_00 = &fcn.004028cb::var_32ch;\n            dest = 0;\n            noname_13 = 0;\n            uVar1 = 0;\n            noname_10 = &fcn.004028cb::var_220h;\n            iVar3 = sub.advapi32.dll_RegEnumKeyExA(hKey);\n            if (iVar3 != 0) break;\n            sub.msvcrt.dll_strcpy();\n            fcn.004025d6(&fcn.004028cb::var_324h, &fcn.004028cb::var_220h);\n            if (*0x40b07c != 0) {\n                sub.msvcrt.dll_fprintf();\n                puStackY920 = &fcn.004028cb::var_324h;\n            }\n            fcn.004023a8(&fcn.004028cb::var_11ch, &fcn.004028cb::var_220h, puStackY920, uStackY916, uStackY912, \n                         uStackY908, uStackY904, 0x4029d0, &fcn.004028cb::var_11ch, iVar2, noname_10, puVar5, uVar1, \n                         noname_13, dest, arg_ch_00);\n            iVar2 = sub.msvcrt.dll_strcmp();\n            if (((-1 < iVar2) &&\n                (((*0x41342c == '\\0' || (iVar2 = sub.msvcrt.dll_strcmp(),  iVar2 < 1)) &&\n                 (iVar2 = sub.msvcrt.dll_strcmp(),  0 < iVar2)))) &&\n               (iVar2 = fcn.004027bb(&fcn.004028cb::var_324h, arg_ch),  iVar2 != 0)) {\n                sub.msvcrt.dll_strcpy();\n                sub.msvcrt.dll_strcpy();\n                *0x4132a0 = arg_ch;\n            }\n            iVar2 = iVar4;\n            if (*0x40b07c != 0) {\n                puStackY920 = &fcn.004028cb::var_11ch;\n                sub.msvcrt.dll_fprintf();\n            }\n        }\n        sub.advapi32.dll_RegCloseKey();\n    }\n    return;\n}\n",
        "token_count": 1075
    },
    "00402b1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b1b(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar *puStackY920;\n    uint uStackY916;\n    uint uStackY912;\n    uint uStackY908;\n    uint uStackY904;\n    uchar *noname_10;\n    uchar *noname_11;\n    uint noname_13;\n    uint dest;\n    uchar *arg_ch_00;\n    uint uStack824;\n    uint uStack820;\n    uchar auStack816 [8];\n    uint auStack808 [65];\n    uint auStack548 [65];\n    uint auStack288 [64];\n    uint uStack32;\n    \n    if (*0x41329c == 9) {\n        uStack32 = 0x402b3e;\n        *0x41329c = fcn.0040219b(0x1e);\n    }\n    if (*0x41329c == 2) {\n        if (*0x40b018 != 0) {\n            uStack32 = 0x402b9d;\n            fcn.004028cb(arg_8h, arg_ch | 0x100);\n            if ((*0x4132a0 & 0x100) != 0) {\n                return;\n            }\n        }\n    }\n    else {\n        if (*0x41329c < 3) {\n            if (*0x41329c != 1) {\ncode_r0x00402bc0:\n                if (*0x40b07c == 0) {\n                    return;\n                }\n    // WARNING: Could not recover jumptable at 0x00406558. Too many branches\n    // WARNING: Treating indirect jump as call\n                (*_sym.imp.msvcrt.dll_fputs)();\n                return;\n            }\n        }\n        else {\n            if (*0x41329c != 3) {\n                if (*0x41329c == 4) goto code_r0x004028cb;\n                goto code_r0x00402bc0;\n            }\n            uStack32 = 0x402b6c;\n            fcn.004028cb(arg_8h, arg_ch);\n            if ((*0x4132a0 != 0) && ((*0x4132a0 & 0x100) == 0)) {\n                return;\n            }\n        }\n        if (*0x40b018 == 0) {\n            return;\n        }\n        arg_ch = arg_ch | 0x100;\n    }\ncode_r0x004028cb:\n    if (*0x40b07c != 0) {\n        uVar1 = 0x408255;\n        if ((arg_ch & 0x100) == 0) {\n            uVar1 = 0x408258;\n        }\n        sub.msvcrt.dll_fprintf(*0x40b07c, \"%s-bit search:\\t%s...\\n\", uVar1, arg_8h);\n    }\n    iVar2 = sub.advapi32.dll_RegOpenKeyExA(0x80000002, arg_8h, 0, arg_ch & 0x100 | 0x20019, &stack0xfffffcc8);\n    if (iVar2 == 0) {\n        puVar5 = &stack0xfffffcd8;\n        for (iVar4 = 0x41; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        puVar5 = &stack0xfffffddc;\n        for (iVar4 = 0x41; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        puVar5 = &stack0xfffffee0;\n        for (iVar4 = 0x41; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        while( true ) {\n            uStack820 = 0x104;\n            iVar4 = iVar2 + 1;\n            noname_11 = &stack0xfffffccc;\n            arg_ch_00 = &stack0xfffffcd0;\n            dest = 0;\n            noname_13 = 0;\n            uVar1 = 0;\n            noname_10 = &stack0xfffffddc;\n            iVar3 = sub.advapi32.dll_RegEnumKeyExA(uStack824);\n            if (iVar3 != 0) break;\n            sub.msvcrt.dll_strcpy();\n            fcn.004025d6(&stack0xfffffcd8, &stack0xfffffddc);\n            if (*0x40b07c != 0) {\n                sub.msvcrt.dll_fprintf();\n                puStackY920 = &stack0xfffffcd8;\n            }\n            fcn.004023a8(&stack0xfffffee0, &stack0xfffffddc, puStackY920, uStackY916, uStackY912, uStackY908, uStackY904\n                         , 0x4029d0, &stack0xfffffee0, iVar2, noname_10, noname_11, uVar1, noname_13, dest, arg_ch_00);\n            iVar2 = sub.msvcrt.dll_strcmp();\n            if (((-1 < iVar2) &&\n                (((*0x41342c == '\\0' || (iVar2 = sub.msvcrt.dll_strcmp(),  iVar2 < 1)) &&\n                 (iVar2 = sub.msvcrt.dll_strcmp(),  0 < iVar2)))) &&\n               (iVar2 = fcn.004027bb(&stack0xfffffcd8, arg_ch),  iVar2 != 0)) {\n                sub.msvcrt.dll_strcpy();\n                sub.msvcrt.dll_strcpy();\n                *0x4132a0 = arg_ch;\n            }\n            iVar2 = iVar4;\n            if (*0x40b07c != 0) {\n                puStackY920 = &stack0xfffffee0;\n                sub.msvcrt.dll_fprintf();\n            }\n        }\n        sub.advapi32.dll_RegCloseKey();\n    }\n    return;\n}\n",
        "token_count": 1406
    },
    "00402be5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402be5(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar *puStackY920;\n    uint uStackY916;\n    uint uStackY912;\n    uint uStackY908;\n    uint uStackY904;\n    uchar *noname_10;\n    uchar *noname_11;\n    uint noname_13;\n    uint dest;\n    uchar *arg_ch_00;\n    uint uStack824;\n    uint uStack820;\n    uchar auStack816 [8];\n    uint auStack808 [65];\n    uint auStack548 [65];\n    uint auStack288 [60];\n    uint uStack48;\n    \n    uVar1 = arg_ch;\n    if (arg_10h - 2U < 2) {\n        uStack48 = 0x402c0f;\n        fcn.00402b1b(arg_ch, 2);\n        if (arg_10h == 3) {\n            return;\n        }\n        arg_ch = 1;\n    }\n    else {\n        uStack48 = 0x402c30;\n        fcn.00402b1b(arg_8h, 1);\n        if (arg_10h == 0) {\n            return;\n        }\n        arg_ch = 2;\n        arg_8h = uVar1;\n    }\n    if (*0x41329c == 9) {\n        *0x41329c = fcn.0040219b(0x1e);\n    }\n    if (*0x41329c == 2) {\n        if ((*0x40b018 != 0) && (fcn.004028cb(arg_8h, arg_ch | 0x100),  (*0x4132a0 & 0x100) != 0)) {\n            return;\n        }\n    }\n    else {\n        if (*0x41329c < 3) {\n            if (*0x41329c != 1) {\ncode_r0x00402bc0:\n                if (*0x40b07c == 0) {\n                    return;\n                }\n    // WARNING: Could not recover jumptable at 0x00406558. Too many branches\n    // WARNING: Treating indirect jump as call\n                (*_sym.imp.msvcrt.dll_fputs)();\n                return;\n            }\n        }\n        else {\n            if (*0x41329c != 3) {\n                if (*0x41329c == 4) goto code_r0x004028cb;\n                goto code_r0x00402bc0;\n            }\n            fcn.004028cb(arg_8h, arg_ch);\n            if ((*0x4132a0 != 0) && ((*0x4132a0 & 0x100) == 0)) {\n                return;\n            }\n        }\n        if (*0x40b018 == 0) {\n            return;\n        }\n        arg_ch = arg_ch | 0x100;\n    }\ncode_r0x004028cb:\n    if (*0x40b07c != 0) {\n        uVar1 = 0x408255;\n        if ((arg_ch & 0x100) == 0) {\n            uVar1 = 0x408258;\n        }\n        sub.msvcrt.dll_fprintf(*0x40b07c, \"%s-bit search:\\t%s...\\n\", uVar1, arg_8h);\n    }\n    iVar2 = sub.advapi32.dll_RegOpenKeyExA(0x80000002, arg_8h, 0, arg_ch & 0x100 | 0x20019, &stack0xfffffcc8);\n    if (iVar2 == 0) {\n        puVar5 = &stack0xfffffcd8;\n        for (iVar4 = 0x41; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        puVar5 = &stack0xfffffddc;\n        for (iVar4 = 0x41; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        puVar5 = &stack0xfffffee0;\n        for (iVar4 = 0x41; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        while( true ) {\n            uStack820 = 0x104;\n            iVar4 = iVar2 + 1;\n            noname_11 = &stack0xfffffccc;\n            arg_ch_00 = &stack0xfffffcd0;\n            dest = 0;\n            noname_13 = 0;\n            uVar1 = 0;\n            noname_10 = &stack0xfffffddc;\n            iVar3 = sub.advapi32.dll_RegEnumKeyExA(uStack824);\n            if (iVar3 != 0) break;\n            sub.msvcrt.dll_strcpy();\n            fcn.004025d6(&stack0xfffffcd8, &stack0xfffffddc);\n            if (*0x40b07c != 0) {\n                sub.msvcrt.dll_fprintf();\n                puStackY920 = &stack0xfffffcd8;\n            }\n            fcn.004023a8(&stack0xfffffee0, &stack0xfffffddc, puStackY920, uStackY916, uStackY912, uStackY908, uStackY904\n                         , 0x4029d0, &stack0xfffffee0, iVar2, noname_10, noname_11, uVar1, noname_13, dest, arg_ch_00);\n            iVar2 = sub.msvcrt.dll_strcmp();\n            if (((-1 < iVar2) &&\n                (((*0x41342c == '\\0' || (iVar2 = sub.msvcrt.dll_strcmp(),  iVar2 < 1)) &&\n                 (iVar2 = sub.msvcrt.dll_strcmp(),  0 < iVar2)))) &&\n               (iVar2 = fcn.004027bb(&stack0xfffffcd8, arg_ch),  iVar2 != 0)) {\n                sub.msvcrt.dll_strcpy();\n                sub.msvcrt.dll_strcpy();\n                *0x4132a0 = arg_ch;\n            }\n            iVar2 = iVar4;\n            if (*0x40b07c != 0) {\n                puStackY920 = &stack0xfffffee0;\n                sub.msvcrt.dll_fprintf();\n            }\n        }\n        sub.advapi32.dll_RegCloseKey();\n    }\n    return;\n}\n",
        "token_count": 1516
    },
    "00402c52": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c52(uint dest, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if ((*0x40b020 != 0) && (*0x40b07c != 0)) {\n        sub.msvcrt.dll_fputs(\"findJavaHome()\\n\", *0x40b07c);\n    }\n    fcn.00402be5(\"SOFTWARE\\\\JavaSoft\\\\Java Runtime Environment\", \"SOFTWARE\\\\JavaSoft\\\\Java Development Kit\", arg_ch);\n    fcn.00402be5(\"SOFTWARE\\\\JavaSoft\\\\JRE\", \"SOFTWARE\\\\JavaSoft\\\\JDK\", arg_ch);\n    if (*0x4132a0 == 0) {\n        fcn.00402be5(\"SOFTWARE\\\\IBM\\\\Java Runtime Environment\", \"SOFTWARE\\\\IBM\\\\Java Development Kit\", arg_ch);\n    }\n    if (*0x4132a0 == 0) {\n        fcn.00402be5(\"SOFTWARE\\\\IBM\\\\Java2 Runtime Environment\", \"SOFTWARE\\\\IBM\\\\Java Development Kit\", arg_ch);\n    }\n    uVar1 = 0;\n    if (*0x4132a0 != 0) {\n        sub.msvcrt.dll_strcpy(dest, 0x413630);\n        if (*0x40b07c != 0) {\n            uVar1 = 0x408255;\n            if ((*0x4132a0 & 0x100) == 0) {\n                uVar1 = 0x408258;\n            }\n            sub.msvcrt.dll_fprintf(*0x40b07c, \"Runtime used:\\t%s (%s-bit)\\n\", 0x4134ac, uVar1);\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 381
    },
    "00402d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402d80(char *arg_8h, char *arg_ch, char *arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    char **ppcVar8;\n    char **ppcVar9;\n    uint *puVar10;\n    char *pcVar11;\n    uint auStack32923 [32];\n    char acStack32795 [32775];\n    uint uStack20;\n    uint var_ch;\n    \n    uStack20 = 0x402d90;\n    iVar2 = fcn.004063d0();\n    puVar10 = &stack0xffff7f65;\n    for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    puVar4 = &stack0xffff7fe5;\n    for (iVar6 = 0x7fff; ppcVar8 = &fcn.00402d80::var_ch - iVar2,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    do {\n        if (*arg_ch == '\\0') {\n            return 1;\n        }\n        *ppcVar8 = arg_ch;\n        ppcVar8[1] = 0x25;\n        ppcVar8[-1] = 0x402dd8;\n        iVar2 = sub.msvcrt.dll_strchr();\n        if (iVar2 == 0) {\n            ppcVar8[1] = arg_ch;\n            *ppcVar8 = arg_8h;\n            ppcVar8[-1] = 0x402fc2;\n            sub.msvcrt.dll_strcat();\n            return 1;\n        }\n        ppcVar8[1] = 0x25;\n        *ppcVar8 = iVar2 + 1;\n        ppcVar8[-1] = 0x402e07;\n        iVar6 = sub.msvcrt.dll_strchr();\n        if (iVar6 == 0) {\n            return 0;\n        }\n        *ppcVar8 = arg_8h;\n        ppcVar8[2] = iVar2 - arg_ch;\n        ppcVar8[1] = arg_ch;\n        ppcVar8[-1] = 0x402e2f;\n        sub.msvcrt.dll_strncat();\n        *ppcVar8 = &stack0xffff7f65;\n        auStack32923[0]._0_1_ = '\\0';\n        ppcVar8[2] = (iVar6 - iVar2) + -1;\n        ppcVar8[1] = iVar2 + 1;\n        ppcVar8[-1] = 0x402e57;\n        sub.msvcrt.dll_strncat();\n        uVar7 = 0xffffffff;\n        pcVar11 = arg_8h;\n        do {\n            if (uVar7 == 0) break;\n            uVar7 = uVar7 - 1;\n            cVar1 = *pcVar11;\n            pcVar11 = pcVar11 + 1;\n        } while (cVar1 != '\\0');\n        ppcVar8[1] = \"EXEDIR\";\n        *ppcVar8 = &stack0xffff7f65;\n        pcVar11 = arg_8h + (~uVar7 - 1);\n        ppcVar8[-1] = 0x402e74;\n        iVar2 = sub.msvcrt.dll_strcmp();\n        ppcVar9 = ppcVar8;\n        if (iVar2 == 0) {\n            *ppcVar8 = arg_8h;\n            ppcVar8[2] = arg_14h;\n            ppcVar8[1] = arg_10h;\n            ppcVar8[-1] = 0x402e8e;\n            sub.msvcrt.dll_strncat();\n        }\n        else {\n            ppcVar8[1] = \"EXEFILE\";\n            *ppcVar8 = &stack0xffff7f65;\n            ppcVar8[-1] = 0x402ea3;\n            iVar2 = sub.msvcrt.dll_strcmp();\n            pcVar5 = arg_10h;\n            if (iVar2 == 0) {\ncode_r0x00402f7d:\n                *(ppcVar8 + 4) = pcVar5;\n            }\n            else {\n                ppcVar8[1] = 0x4083de;\n                *ppcVar8 = &stack0xffff7f65;\n                ppcVar8[-1] = 0x402ebf;\n                iVar2 = sub.msvcrt.dll_strcmp();\n                if (iVar2 == 0) {\n                    ppcVar8[1] = pcVar11;\n                    *ppcVar8 = 0x104;\n                    ppcVar8[-1] = 0x402ed3;\n                    uVar3 = sub.kernel32.dll_GetCurrentDirectoryA();\n                    ppcVar8[-1] = uVar3;\n                    ppcVar8[-2] = uVar3;\n                    ppcVar9 = ppcVar8 + -2;\n                    goto code_r0x00402f89;\n                }\n                ppcVar8[1] = \"OLDPWD\";\n                *ppcVar8 = &stack0xffff7f65;\n                ppcVar8[-1] = 0x402eea;\n                iVar2 = sub.msvcrt.dll_strcmp();\n                if (iVar2 == 0) {\n                    ppcVar8[1] = 0x413734;\n                }\n                else {\n                    ppcVar8[1] = \"JREHOMEDIR\";\n                    *ppcVar8 = &stack0xffff7f65;\n                    ppcVar8[-1] = 0x402f0b;\n                    iVar2 = sub.msvcrt.dll_strcmp();\n                    if (iVar2 != 0) {\n                        ppcVar8[1] = \"HKEY\";\n                        *ppcVar8 = &stack0xffff7f65;\n                        ppcVar8[-1] = 0x402f29;\n                        puVar4 = sub.msvcrt.dll_strstr();\n                        if (puVar4 == &stack0xffff7f65) {\n                            ppcVar8[2] = 0x400;\n                            ppcVar8[1] = pcVar11;\n                            *ppcVar8 = &stack0xffff7f65;\n                            ppcVar8[-1] = 0x402f41;\n                            fcn.004021ce(*ppcVar8, ppcVar8[1], ppcVar8[2]);\n                        }\n                        else {\n                            if (auStack32923[0] == '\\0') {\n                                ppcVar8[1] = 0x4083f9;\n                                goto code_r0x00402f81;\n                            }\n                            ppcVar8[2] = 0x7fff;\n                            ppcVar8[1] = &stack0xffff7fe5;\n                            *ppcVar8 = &stack0xffff7f65;\n                            ppcVar8[-1] = 0x402f70;\n                            iVar2 = sub.kernel32.dll_GetEnvironmentVariableA();\n                            ppcVar9 = ppcVar8 + -3;\n                            ppcVar8 = ppcVar8 + -3;\n                            if (iVar2 != 0) {\n                                pcVar5 = &stack0xffff7fe5;\n                                goto code_r0x00402f7d;\n                            }\n                        }\n                        goto code_r0x00402f89;\n                    }\n                    ppcVar8[1] = 0x413630;\n                }\n            }\ncode_r0x00402f81:\n            *ppcVar8 = arg_8h;\n            ppcVar8[-1] = 0x402f89;\n            sub.msvcrt.dll_strcat();\n            ppcVar9 = ppcVar8;\n        }\ncode_r0x00402f89:\n        if (*0x40b07c != 0) {\n            ppcVar9[3] = pcVar11;\n            ppcVar9[2] = &stack0xffff7f65;\n            ppcVar9[1] = \"Substitute:\\t%s = %s\\n\";\n            *ppcVar9 = *0x40b07c;\n            ppcVar9[-1] = 0x402faa;\n            sub.msvcrt.dll_fprintf();\n        }\n        arg_ch = iVar6 + 1;\n        ppcVar8 = ppcVar9;\n    } while( true );\n}\n",
        "token_count": 1979
    },
    "00403306": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00403306(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint lpMutexAttributes;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_bp_4h;\n    \n    puVar3 = &var_88h;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    fcn.0040205e(0x17, &var_88h);\n    uVar2 = 1;\n    if (var_88h != '\\0') {\n        if (*0x40b07c != 0) {\n            sub.msvcrt.dll_fprintf(*0x40b07c, \"Create mutex:\\t%s\\n\", &var_88h);\n        }\n        lpMutexAttributes = 0xc;\n        var_8ch = 1;\n        var_90h = 0;\n        sub.kernel32.dll_CreateMutexA(&lpMutexAttributes, 0, &var_88h);\n        iVar1 = sub.kernel32.dll_GetLastError();\n        uVar2 = 1;\n        if (iVar1 == 0xb7) {\n            if (*0x40b07c != 0) {\n                sub.msvcrt.dll_fprintf(*0x40b07c, \"Error:\\t\\t%s\\n\", \"Instance already exists.\");\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 384
    },
    "00403482": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403482(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = arg_8h;\n    do {\n        if (*pcVar2 != arg_ch) {\n            *arg_8h = *pcVar2;\n            arg_8h = arg_8h + 1;\n        }\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 125
    },
    "004034a1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint __cdecl fcn.004034a1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint auStack33316 [65];\n    char cStack33056;\n    char cStack33055;\n    uint auStack32796 [8194];\n    uint uStack20;\n    \n    uStack20 = 0x4034b1;\n    iVar1 = fcn.004063d0();\n    iVar1 = -iVar1;\n    if ((*0x40b020 != 0) && (*0x40b07c != 0)) {\n        *(&stack0xfffffff4 + iVar1) = *0x40b07c;\n        *(&stack0xfffffff0 + iVar1) = \"bundledJreSearch()\\n\";\n        *(&stack0xffffffec + iVar1) = 0x4034d5;\n        sub.msvcrt.dll_fputs();\n    }\n    puVar7 = &stack0xffff7ddc;\n    for (iVar5 = 0x41; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *(&stack0xfffffff0 + iVar1) = 0x1d;\n    *(&stack0xffffffec + iVar1) = 0x4034f6;\n    iVar5 = fcn.00402158(*(&stack0xfffffff0 + iVar1));\n    if ((*0x40b018 == 0) && (iVar5 != 0)) {\n        if (*0x40b07c != 0) {\n            *(&stack0xfffffff4 + iVar1) = *0x40b07c;\n            *(&stack0xfffffff0 + iVar1) = \"Bundled JRE:\\tCannot use 64-bit runtime on 32-bit OS.\\n\";\n            *(&stack0xffffffec + iVar1) = 0x403526;\n            sub.msvcrt.dll_fputs();\n        }\n    }\n    else {\n        *(&stack0xfffffff4 + iVar1) = &stack0xffff7ddc;\n        *(&stack0xfffffff0 + iVar1) = 1;\n        *(&stack0xffffffec + iVar1) = 0x40353b;\n        iVar2 = fcn.0040205e(*(&stack0xfffffff0 + iVar1), *(&stack0xfffffff4 + iVar1));\n        if (iVar2 != 0) {\n            puVar7 = &stack0xffff7fe4;\n            for (iVar2 = 0x2000; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *(&stack0xfffffff4 + iVar1) = &stack0xffff7ddc;\n            *(&stack0xfffffff0 + iVar1) = &stack0xffff7fe4;\n            *(&stack0xfffffffc + iVar1) = arg_ch;\n            *(&stack0xfffffff8 + iVar1) = arg_8h;\n            *(&stack0xffffffec + iVar1) = 0x403572;\n            fcn.00402d80(*(&stack0xfffffff0 + iVar1), *(&stack0xfffffff4 + iVar1), *(&stack0xfffffff8 + iVar1), \n                         *(&stack0xfffffffc + iVar1));\n            if (*0x40b07c != 0) {\n                *(&stack0xfffffff8 + iVar1) = &stack0xffff7fe4;\n                *(&stack0xfffffff4 + iVar1) = \"Bundled JRE(s):\\t%s\\n\";\n                *(&stack0xfffffff0 + iVar1) = *0x40b07c;\n                *(&stack0xffffffec + iVar1) = 0x40358f;\n                sub.msvcrt.dll_fprintf();\n            }\n            *(&stack0xfffffff0 + iVar1) = &stack0xffff7fe4;\n            *(&stack0xfffffff4 + iVar1) = 0x4083cd;\n            *(&stack0xffffffec + iVar1) = 0x4035a5;\n            iVar2 = sub.msvcrt.dll_strtok();\n            while (iVar2 != 0) {\n                puVar7 = &stack0xffff7ee0;\n                for (iVar6 = 0x41; iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *puVar7 = 0;\n                    puVar7 = puVar7 + 1;\n                }\n                *(&stack0xfffffff4 + iVar1) = 0x5c;\n                *(&stack0xfffffff0 + iVar1) = iVar2;\n                *(&stack0xffffffec + iVar1) = 0x4035ca;\n                iVar6 = sub.msvcrt.dll_strrchr();\n                *(&stack0xfffffff4 + iVar1) = 0x2f;\n                *(&stack0xfffffff0 + iVar1) = iVar2;\n                *(&stack0xffffffec + iVar1) = 0x4035dc;\n                iVar3 = sub.msvcrt.dll_strrchr();\n                if (iVar6 == 0) {\ncode_r0x00403602:\n                    if (iVar3 != 0) {\n                        *(&stack0xfffffff4 + iVar1) = \"/bin\";\n                        *(&stack0xfffffff0 + iVar1) = iVar3;\n                        *(&stack0xffffffec + iVar1) = 0x40361c;\n                        iVar6 = sub.msvcrt.dll__stricmp();\n                        if (iVar6 == 0) {\n                            *(&stack0xfffffff8 + iVar1) = iVar3 - iVar2;\n                            goto code_r0x0040362c;\n                        }\n                    }\n                    *(&stack0xfffffff4 + iVar1) = iVar2;\n                    *(&stack0xfffffff0 + iVar1) = &stack0xffff7ee0;\n                    *(&stack0xffffffec + iVar1) = 0x403646;\n                    sub.msvcrt.dll_strcpy();\n                }\n                else {\n                    *(&stack0xfffffff4 + iVar1) = 0x408550;\n                    *(&stack0xfffffff0 + iVar1) = iVar6;\n                    *(&stack0xffffffec + iVar1) = 0x4035f6;\n                    iVar4 = sub.msvcrt.dll__stricmp();\n                    if (iVar4 != 0) goto code_r0x00403602;\n                    *(&stack0xfffffff8 + iVar1) = iVar6 - iVar2;\ncode_r0x0040362c:\n                    *(&stack0xfffffff4 + iVar1) = iVar2;\n                    *(&stack0xfffffff0 + iVar1) = &stack0xffff7ee0;\n                    *(&stack0xffffffec + iVar1) = 0x403638;\n                    sub.msvcrt.dll_strncpy();\n                }\n                *(&stack0xfffffff4 + iVar1) = 0x22;\n                *(&stack0xfffffff0 + iVar1) = &stack0xffff7ee0;\n                *(&stack0xffffffec + iVar1) = 0x403656;\n                fcn.00403482(*(&stack0xfffffff0 + iVar1), *(&stack0xfffffff4 + iVar1));\n                if ((cStack33056 == '\\\\') || ((cStack33056 != '\\0' && (cStack33055 == ':')))) {\n                    *(&stack0xfffffff4 + iVar1) = &stack0xffff7ee0;\n                    *(&stack0xfffffff0 + iVar1) = 0x40b184;\n                    *(&stack0xffffffec + iVar1) = 0x40367d;\n                    sub.msvcrt.dll_strcpy();\n                }\n                else {\n                    *(&stack0xfffffff0 + iVar1) = 0x40b184;\n                    *(&stack0xfffffff8 + iVar1) = arg_ch;\n                    *(&stack0xfffffff4 + iVar1) = arg_8h;\n                    *(&stack0xffffffec + iVar1) = 0x403699;\n                    sub.msvcrt.dll_strncpy();\n                    *(&stack0xfffffff4 + iVar1) = &stack0xffff7ee0;\n                    *(&stack0xfffffff0 + iVar1) = 0x40b184;\n                    *(&stack0xffffffec + iVar1) = 0x4036a9;\n                    fcn.004025d6(*(&stack0xfffffff0 + iVar1), *(&stack0xfffffff4 + iVar1));\n                }\n                *(&stack0xfffffff0 + iVar1) = 0x40b184;\n                *(&stack0xffffffec + iVar1) = 0x4036b5;\n                iVar2 = fcn.00402647(*(&stack0xfffffff0 + iVar1));\n                if (iVar2 != 0) {\n                    *(&stack0xfffffff4 + iVar1) = 0x40b184;\n                    *(&stack0xfffffff0 + iVar1) = 0x413630;\n                    *0x4132a0 = (-(iVar5 == 0) & 0xffffff00) + 0x104;\n                    *(&stack0xffffffec + iVar1) = 0x4036e2;\n                    sub.msvcrt.dll_strcpy();\n                    return 1;\n                }\n                *(&stack0xfffffff4 + iVar1) = 0x4083cd;\n                *(&stack0xfffffff0 + iVar1) = 0;\n                *(&stack0xffffffec + iVar1) = 0x4036fd;\n                iVar2 = sub.msvcrt.dll_strtok();\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2208
    },
    "00403711": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00403711(void)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    bool bVar2;\n    \n    if ((*0x40b020 != 0) && (*0x40b07c != 0)) {\n        sub.msvcrt.dll_fputs(\"installedJreSearch()\\n\", *0x40b07c);\n    }\n    bVar2 = false;\n    if (*0x4133ac != '\\0') {\n        arg_ch = fcn.0040219b(0x12);\n        iVar1 = fcn.00402c52(0x40b184, arg_ch);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 158
    },
    "0040376a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040376a(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    uint arg_8h;\n    uint uVar4;\n    uint var_408h;\n    \n    uVar4 = 0x4138bc;\n    if (*0x4133ac == '\\0') {\n        arg_8h = 0x66;\n    }\n    else {\n        fcn.0040205e(0x67, 0x4138bc);\n        sub.msvcrt.dll_strcat(0x4138bc, 0x40849f);\n        sub.msvcrt.dll_strcat(0x4138bc, 0x4132ac);\n        if (*0x41342c != '\\0') {\n            sub.msvcrt.dll_strcat(0x4138bc, 0x408570);\n            sub.msvcrt.dll_strcat(0x4138bc, 0x41332c);\n        }\n        bVar3 = *0x41329c == 1;\n        if ((*0x41329c == 4) || (bVar3)) {\n            sub.msvcrt.dll_strcat(0x4138bc, 0x408574);\n            uVar4 = 0x408255;\n            if (!bVar3) {\n                uVar4 = 0x408258;\n            }\n            sub.msvcrt.dll_strcat(0x4138bc, uVar4);\n            sub.msvcrt.dll_strcat(0x4138bc, \"-bit)\");\n        }\n        if (*0x4132a8 != 0) {\n            puVar2 = &var_408h;\n            for (iVar1 = 0x100; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar2 = 0;\n                puVar2 = puVar2 + 1;\n            }\n            iVar1 = fcn.0040205e(0x68, &var_408h);\n            if (iVar1 != 0) {\n                sub.msvcrt.dll_strcat(0x4138bc, 0x40857d);\n                sub.msvcrt.dll_strcat(0x4138bc, &var_408h);\n            }\n        }\n        uVar4 = 0x413cbc;\n        arg_8h = 0x15;\n    }\n    fcn.0040205e(arg_8h, uVar4);\n    return;\n}\n",
        "token_count": 541
    },
    "004038c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.004038c7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    \n    if ((*0x40b020 != 0) && (*0x40b07c != 0)) {\n        sub.msvcrt.dll_fputs(\"jreSearch()\\n\", *0x40b07c);\n    }\n    *0x4132a4 = fcn.00402158(0x20);\n    fcn.0040205e(2, 0x4132ac);\n    fcn.004023a8(0x4133ac, 0x4132ac, in_stack_ffffffec, var_ch, unaff_EBX, unaff_ESI, unaff_EBP, unaff_retaddr, arg_8h, \n                 arg_ch, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                 in_stack_00000020);\n    if (*0x40b07c != 0) {\n        in_stack_ffffffec = 0x4133ac;\n        sub.msvcrt.dll_fprintf(*0x40b07c, \"Java min ver:\\t%s\\n\");\n    }\n    fcn.0040205e(3, 0x41332c);\n    fcn.004023a8(0x41342c, 0x41332c, in_stack_ffffffec, var_ch, unaff_EBX, unaff_ESI, unaff_EBP, unaff_retaddr, arg_8h, \n                 arg_ch, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                 in_stack_00000020);\n    if (*0x40b07c != 0) {\n        sub.msvcrt.dll_fprintf(*0x40b07c, \"Java max ver:\\t%s\\n\", 0x41342c);\n    }\n    if (*0x4132a4 == 0) {\n        iVar1 = fcn.004034a1(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        iVar1 = fcn.00403711();\n    }\n    else {\n        iVar1 = fcn.00403711();\n        if (iVar1 != 0) {\n            return 1;\n        }\n        iVar1 = fcn.004034a1(arg_8h, arg_ch);\n    }\n    if (iVar1 == 0) {\n        fcn.0040376a();\n    }\n    return iVar1;\n}\n",
        "token_count": 708
    },
    "00403be6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __cdecl fcn.00403be6(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    char *pcVar8;\n    uint auStack66660 [65];\n    uint auStack66400 [65];\n    uint uStack66140;\n    int32_t iStack66136;\n    int32_t iStack66132;\n    int32_t iStack66128;\n    uint uStack66124;\n    uchar auStack66120 [260];\n    int32_t aiStack65860 [4];\n    int32_t iStack65844;\n    int32_t iStack65840;\n    int32_t iStack65836;\n    int32_t iStack65832;\n    uint uStack65828;\n    uchar auStack65824 [260];\n    uint auStack65564 [8192];\n    uint auStack32796 [8194];\n    uint uStack20;\n    \n    uStack20 = 0x403bf6;\n    iVar2 = fcn.004063d0();\n    iVar2 = -iVar2;\n    puVar7 = &stack0xfffeffe4;\n    for (iVar5 = 0x2000; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    puVar7 = &stack0xffff7fe4;\n    for (iVar5 = 0x2000; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    puVar7 = &stack0xfffefb9c;\n    for (iVar5 = 0x41; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    puVar7 = &stack0xfffefca0;\n    for (iVar5 = 0x41; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *(&stack0xfffffff0 + iVar2) = 0x11;\n    *(&stack0xffffffec + iVar2) = 0x403c4b;\n    iVar5 = fcn.00402158(*(&stack0xfffffff0 + iVar2));\n    *(&stack0xfffffff4 + iVar2) = &stack0xfffefb9c;\n    *(&stack0xfffffff0 + iVar2) = 0xe;\n    *(&stack0xffffffec + iVar2) = 0x403c61;\n    fcn.0040205e(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n    *(&stack0xfffffff4 + iVar2) = 0x40b080;\n    *(&stack0xfffffff0 + iVar2) = 0xf;\n    *(&stack0xffffffec + iVar2) = 0x403c75;\n    iVar3 = fcn.0040205e(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n    if (iVar3 == 0) {\n        *(&stack0xfffffff4 + iVar2) = \"-jar \\\"\";\n        *(&stack0xfffffff0 + iVar2) = 0x40b288;\n        if (iVar5 == 0) {\n            *(&stack0xffffffec + iVar2) = 0x403fef;\n            sub.msvcrt.dll_strcat();\n            *(&stack0xfffffff4 + iVar2) = arg_8h;\n            *(&stack0xfffffff0 + iVar2) = 0x40b288;\n            *(&stack0xfffffff8 + iVar2) = arg_ch;\n            *(&stack0xffffffec + iVar2) = 0x404009;\n            sub.msvcrt.dll_strncat();\n            *(&stack0xfffffff4 + iVar2) = &stack0xfffefb9c;\n            *(&stack0xfffffff0 + iVar2) = 0x40b288;\n            *(&stack0xffffffec + iVar2) = 0x404019;\n            fcn.004025d6(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n        }\n        else {\n            *(&stack0xffffffec + iVar2) = 0x403fd8;\n            sub.msvcrt.dll_strcat();\n            *(&stack0xfffffff4 + iVar2) = arg_8h;\n            *(&stack0xfffffff0 + iVar2) = 0x40b288;\n            *(&stack0xffffffec + iVar2) = 0x403fe8;\n            sub.msvcrt.dll_strcat();\n        }\n        goto code_r0x00404020;\n    }\n    if (*0x40b07c != 0) {\n        *(&stack0xfffffff8 + iVar2) = 0x40b080;\n        *(&stack0xfffffff4 + iVar2) = \"Main class:\\t%s\\n\";\n        *(&stack0xfffffff0 + iVar2) = *0x40b07c;\n        *(&stack0xffffffec + iVar2) = 0x403c9e;\n        sub.msvcrt.dll_fprintf();\n    }\n    *(&stack0xfffffff4 + iVar2) = &stack0xfffeffe4;\n    *(&stack0xfffffff0 + iVar2) = 0x10;\n    *(&stack0xffffffec + iVar2) = 0x403cae;\n    iVar3 = fcn.0040205e(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n    if ((iVar3 == 0) && (*0x40b07c != 0)) {\n        *(&stack0xfffffff4 + iVar2) = *0x40b07c;\n        *(&stack0xfffffff0 + iVar2) = \"Info:\\t\\tClasspath not defined.\\n\";\n        *(&stack0xffffffec + iVar2) = 0x403ccb;\n        sub.msvcrt.dll_fputs();\n    }\n    *(&stack0xfffffff8 + iVar2) = arg_8h;\n    *(&stack0xfffffff4 + iVar2) = &stack0xfffeffe4;\n    *(&stack0xfffffffc + iVar2) = arg_ch;\n    *(&stack0xfffffff0 + iVar2) = &stack0xffff7fe4;\n    *(&stack0xffffffec + iVar2) = 0x403ceb;\n    fcn.00402d80(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2), *(&stack0xfffffff8 + iVar2), \n                 *(&stack0xfffffffc + iVar2));\n    *(&stack0xfffffff4 + iVar2) = \"-classpath \\\"\";\n    *(&stack0xfffffff0 + iVar2) = 0x40b288;\n    *(&stack0xffffffec + iVar2) = 0x403cff;\n    sub.msvcrt.dll_strcat();\n    if (iVar5 == 0) {\n        if (auStack66660[0] != '\\0') {\n            *(&stack0xfffffff4 + iVar2) = &stack0xfffefb9c;\n            goto code_r0x00403d21;\n        }\n    }\n    else {\n        *(&stack0xfffffff4 + iVar2) = arg_8h;\ncode_r0x00403d21:\n        *(&stack0xfffffff0 + iVar2) = 0x40b288;\n        *(&stack0xffffffec + iVar2) = 0x403d2d;\n        fcn.00402d53(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n    }\n    *(&stack0xfffffff4 + iVar2) = 0x4083cd;\n    *(&stack0xfffffff0 + iVar2) = &stack0xffff7fe4;\n    while( true ) {\n        *(&stack0xffffffec + iVar2) = 0x403d43;\n        iVar5 = sub.msvcrt.dll_strtok();\n        if (iVar5 == 0) break;\n        if (*0x40b07c != 0) {\n            *(&stack0xfffffff8 + iVar2) = iVar5;\n            *(&stack0xfffffff4 + iVar2) = \"Add classpath:\\t%s\\n\";\n            *(&stack0xfffffff0 + iVar2) = *0x40b07c;\n            *(&stack0xffffffec + iVar2) = 0x403d6a;\n            sub.msvcrt.dll_fprintf();\n        }\n        *(&stack0xfffffff4 + iVar2) = 0x408630;\n        *(&stack0xfffffff0 + iVar2) = iVar5;\n        *(&stack0xffffffec + iVar2) = 0x403d7a;\n        iVar3 = sub.msvcrt.dll_strpbrk();\n        if (iVar3 == 0) {\n            *(&stack0xfffffff4 + iVar2) = iVar5;\n            *(&stack0xfffffff0 + iVar2) = 0x40b288;\n            *(&stack0xffffffec + iVar2) = 0x403f75;\n            fcn.00402d53(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n        }\n        else {\n            *(&stack0xfffffff4 + iVar2) = 0x5c;\n            *(&stack0xfffffff0 + iVar2) = iVar5;\n            *(&stack0xffffffec + iVar2) = 0x403d92;\n            iVar3 = sub.msvcrt.dll_strrchr();\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (iVar3 - iVar5) + 1;\n            }\n            *(&stack0xfffffff4 + iVar2) = iVar5;\n            *(&stack0xfffffff8 + iVar2) = iVar3;\n            *(&stack0xfffffff0 + iVar2) = &stack0xfffefca0;\n            auStack66400[0]._0_1_ = 0;\n            *(&stack0xffffffec + iVar2) = 0x403dbc;\n            sub.msvcrt.dll_strncpy();\n            (&stack0xfffefca0)[iVar3] = 0;\n            *(&stack0xfffffff0 + iVar2) = iVar5;\n            *(&stack0xfffffff4 + iVar2) = &stack0xfffefda4;\n            *(&stack0xffffffec + iVar2) = 0x403ddf;\n            iVar5 = sub.msvcrt.dll__findfirst();\n            if (iVar5 == -1) {\n                iVar3 = 0x46;\ncode_r0x00403ece:\n                puVar7 = &stack0xfffefebc;\n                for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar7 = 0;\n                    puVar7 = puVar7 + 1;\n                }\n            }\n            else {\n                *(&stack0xfffffff8 + iVar2) = 0x104;\n                *(&stack0xfffffff0 + iVar2) = &stack0xfffefee0;\n                aiStack65860[0] = uStack66140;\n                aiStack65860[3] = iStack66136 >> 0x1f;\n                aiStack65860[2] = iStack66136;\n                iStack65844 = iStack66132;\n                iStack65840 = iStack66132 >> 0x1f;\n                iStack65836 = iStack66128;\n                iStack65832 = iStack66128 >> 0x1f;\n                uStack65828 = uStack66124;\n                *(&stack0xfffffff4 + iVar2) = &stack0xfffefdb8;\n                *(&stack0xffffffec + iVar2) = 0x403e6d;\n                sub.msvcrt.dll_strncpy();\n                do {\n                    *(&stack0xfffffff4 + iVar2) = &stack0xfffefee0;\n                    *(&stack0xfffffff0 + iVar2) = &stack0xfffefca0 + iVar3;\n                    *(&stack0xffffffec + iVar2) = 0x403e7f;\n                    sub.msvcrt.dll_strcpy();\n                    *(&stack0xfffffff4 + iVar2) = &stack0xfffefca0;\n                    *(&stack0xfffffff0 + iVar2) = 0x40b288;\n                    *(&stack0xffffffec + iVar2) = 0x403e8f;\n                    fcn.00402d53(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n                    if (*0x40b07c != 0) {\n                        *(&stack0xfffffff8 + iVar2) = &stack0xfffefca0;\n                        *(&stack0xfffffff4 + iVar2) = \"      \\\"      :\\t%s\\n\";\n                        *(&stack0xfffffff0 + iVar2) = *0x40b07c;\n                        *(&stack0xffffffec + iVar2) = 0x403eac;\n                        sub.msvcrt.dll_fprintf();\n                    }\n                    *(&stack0xfffffff4 + iVar2) = &stack0xfffefda4;\n                    *(&stack0xfffffff0 + iVar2) = iVar5;\n                    *(&stack0xffffffec + iVar2) = 0x403ebe;\n                    iVar4 = sub.msvcrt.dll__findnext();\n                    if (iVar4 == -1) {\n                        iVar3 = 0x4a;\n                        goto code_r0x00403ece;\n                    }\n                    *(&stack0xfffffff8 + iVar2) = 0x104;\n                    *(&stack0xfffffff0 + iVar2) = &stack0xfffefee0;\n                    aiStack65860[0] = uStack66140;\n                    aiStack65860[3] = iStack66136 >> 0x1f;\n                    aiStack65860[2] = iStack66136;\n                    iStack65844 = iStack66132;\n                    iStack65840 = iStack66132 >> 0x1f;\n                    iStack65836 = iStack66128;\n                    iStack65832 = iStack66128 >> 0x1f;\n                    uStack65828 = uStack66124;\n                    *(&stack0xfffffff4 + iVar2) = &stack0xfffefdb8;\n                    *(&stack0xffffffec + iVar2) = 0x403f52;\n                    sub.msvcrt.dll_strncpy();\n                } while (iVar4 == 0);\n            }\n            *(&stack0xfffffff0 + iVar2) = iVar5;\n            *(&stack0xffffffec + iVar2) = 0x403edc;\n            sub.msvcrt.dll__findclose();\n        }\n        *(&stack0xfffffff4 + iVar2) = 0x4083cd;\n        *(&stack0xfffffff0 + iVar2) = 0;\n    }\n    uVar6 = 0xffffffff;\n    pcVar8 = 0x40b288;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    *(&stack0xfffffff4 + iVar2) = 0x408646;\n    *(&stack0xfffffff0 + iVar2) = 0x40b288;\n    *(~uVar6 + 0x40b286) = 0;\n    *(&stack0xffffffec + iVar2) = 0x403fb2;\n    sub.msvcrt.dll_strcat();\ncode_r0x00404020:\n    // WARNING: Could not recover jumptable at 0x00406578. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_strcat)();\n    return;\n}\n",
        "token_count": 3663
    },
    "00404036": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __cdecl fcn.00404036(char *arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint auStack32796 [8194];\n    uint uStack20;\n    \n    uStack20 = 0x404046;\n    iVar1 = fcn.004063d0();\n    iVar1 = -iVar1;\n    puVar4 = &stack0xffff7fe4;\n    for (iVar3 = 0x2000; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *(&stack0xfffffff4 + iVar1) = &stack0xffff7fe4;\n    *(&stack0xfffffff0 + iVar1) = 0xd;\n    *(&stack0xffffffec + iVar1) = 0x404070;\n    iVar3 = fcn.0040205e(*(&stack0xfffffff0 + iVar1), *(&stack0xfffffff4 + iVar1));\n    if (iVar3 != 0) {\n        *(&stack0xfffffff4 + iVar1) = 0x40849f;\n        *(&stack0xfffffff0 + iVar1) = 0x40b288;\n        *(&stack0xffffffec + iVar1) = 0x404088;\n        sub.msvcrt.dll_strcat();\n        *(&stack0xfffffff4 + iVar1) = &stack0xffff7fe4;\n        *(&stack0xfffffff0 + iVar1) = 0x40b288;\n        *(&stack0xffffffec + iVar1) = 0x404098;\n        sub.msvcrt.dll_strcat();\n    }\n    if (*arg_8h == '\\0') {\n        return;\n    }\n    *(&stack0xfffffff4 + iVar1) = arg_8h;\n    *(&stack0xfffffff0 + iVar1) = &stack0xffff7fe4;\n    do {\n        *(&stack0xffffffec + iVar1) = 0x4040a9;\n        sub.msvcrt.dll_strcpy();\n        while( true ) {\n            *(&stack0xfffffff4 + iVar1) = \"--l4j-\";\n            *(&stack0xfffffff0 + iVar1) = &stack0xffff7fe4;\n            *(&stack0xffffffec + iVar1) = 0x4040b9;\n            puVar2 = sub.msvcrt.dll_strstr();\n            if (puVar2 == NULL) {\n                if (auStack32796[0] == '\\0') {\n                    return;\n                }\n                *(&stack0xfffffff4 + iVar1) = 0x40849f;\n                *(&stack0xfffffff0 + iVar1) = 0x40b288;\n                *(&stack0xffffffec + iVar1) = 0x404105;\n                sub.msvcrt.dll_strcat();\n                *(&stack0xfffffff4 + iVar1) = &stack0xffff7fe4;\n                *(&stack0xfffffff0 + iVar1) = 0x40b288;\n                *(&stack0xffffffec + iVar1) = 0x404115;\n                sub.msvcrt.dll_strcat();\n                return;\n            }\n            *(&stack0xfffffff4 + iVar1) = 0x20;\n            *(&stack0xfffffff0 + iVar1) = puVar2;\n            *(&stack0xffffffec + iVar1) = 0x4040cf;\n            iVar3 = sub.msvcrt.dll_strchr();\n            if ((iVar3 != 0) && (*(iVar3 + 1) != '\\0')) break;\n            *puVar2 = 0;\n        }\n        *(&stack0xfffffff4 + iVar1) = iVar3 + 1;\n        *(&stack0xfffffff0 + iVar1) = puVar2;\n    } while( true );\n}\n",
        "token_count": 886
    },
    "00404357": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00404357(int32_t noname_0, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint auStack32864 [17];\n    uint auStack32796 [8180];\n    uint auStack76 [14];\n    uint uStack20;\n    uint var_bp_ch;\n    \n    uStack20 = 0x404367;\n    iVar2 = fcn.004063d0();\n    puVar1 = arg_ch;\n    iVar2 = -iVar2;\n    puVar5 = 0x413288;\n    for (iVar4 = 4; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    puVar5 = &stack0xffff7fa0;\n    for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    auStack32864[0] = 0x44;\n    puVar5 = &stack0xffff7fe4;\n    for (iVar4 = 0x2000; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *(&stack0xfffffff4 + iVar2) = 0x408650;\n    *(&fcn.00404357::var_bp_ch + iVar2) = &stack0xffff7fe4;\n    *(&stack0xffffffec + iVar2) = 0x4043b4;\n    sub.msvcrt.dll_strcpy();\n    *(&stack0xfffffff4 + iVar2) = 0x40b184;\n    *(&fcn.00404357::var_bp_ch + iVar2) = &stack0xffff7fe4;\n    *(&stack0xffffffec + iVar2) = 0x4043c4;\n    sub.msvcrt.dll_strcat();\n    *(&stack0xfffffff4 + iVar2) = 0x408646;\n    *(&fcn.00404357::var_bp_ch + iVar2) = &stack0xffff7fe4;\n    *(&stack0xffffffec + iVar2) = 0x4043d4;\n    sub.msvcrt.dll_strcat();\n    *(&stack0xfffffff4 + iVar2) = 0x40b288;\n    *(&fcn.00404357::var_bp_ch + iVar2) = &stack0xffff7fe4;\n    *(&stack0xffffffec + iVar2) = 0x4043e4;\n    sub.msvcrt.dll_strcat();\n    *(&stack0x00000014 + iVar2) = 0x413288;\n    *(&stack0x00000010 + iVar2) = &stack0xffff7fa0;\n    *(&stack0x0000000c + iVar2) = 0;\n    *(&fcn.00404357::arg_ch + iVar2) = 0;\n    *(&stack0x00000004 + iVar2) = *0x413298;\n    *(&stack0x00000000 + iVar2) = 1;\n    *(&stack0xfffffffc + iVar2) = 0;\n    *(&stack0xfffffff8 + iVar2) = 0;\n    *(&stack0xfffffff4 + iVar2) = &stack0xffff7fe4;\n    *(&fcn.00404357::var_bp_ch + iVar2) = 0;\n    *(&stack0xffffffec + iVar2) = 0x404431;\n    iVar4 = sub.kernel32.dll_CreateProcessA();\n    if (iVar4 == 0) {\n        *puVar1 = 0xffffffff;\n        uVar3 = 0;\n    }\n    else {\n        if (noname_0 == 0) {\n            *puVar1 = 0;\n        }\n        else {\n            *(&stack0xffffffcc + iVar2) = 0xffffffff;\n            *(&stack0xffffffc8 + iVar2) = *0x413288;\n            *(&stack0xffffffc4 + iVar2) = 0x404453;\n            uVar3 = sub.kernel32.dll_WaitForSingleObject();\n            *(&stack0xffffffc4 + iVar2) = uVar3;\n            *(&stack0xffffffc0 + iVar2) = uVar3;\n            *(&stack0xffffffc4 + iVar2) = puVar1;\n            *(&stack0xffffffc0 + iVar2) = *0x413288;\n            *(&stack0xffffffbc + iVar2) = 0x404466;\n            uVar3 = sub.kernel32.dll_GetExitCodeProcess();\n            *(&stack0xffffffbc + iVar2) = uVar3;\n            *(&stack0xffffffb8 + iVar2) = uVar3;\n            *(&stack0xffffffb4 + iVar2) = 0x40446d;\n            fcn.00404333();\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 1186
    },
    "004047d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004047f9)\n// WARNING: Removing unreachable block (ram,0x004048e7)\n// WARNING: Removing unreachable block (ram,0x00404809)\n// WARNING: Removing unreachable block (ram,0x00404817)\n// WARNING: Removing unreachable block (ram,0x00404821)\n// WARNING: Removing unreachable block (ram,0x004048ec)\n// WARNING: Removing unreachable block (ram,0x004048f2)\n// WARNING: Removing unreachable block (ram,0x004048fd)\n// WARNING: Removing unreachable block (ram,0x00404834)\n// WARNING: Removing unreachable block (ram,0x00404839)\n// WARNING: Removing unreachable block (ram,0x00404997)\n// WARNING: Removing unreachable block (ram,0x004049bb)\n// WARNING: Removing unreachable block (ram,0x004049c0)\n// WARNING: Removing unreachable block (ram,0x004049d7)\n// WARNING: Removing unreachable block (ram,0x004049da)\n// WARNING: Removing unreachable block (ram,0x00404845)\n// WARNING: Removing unreachable block (ram,0x00404854)\n// WARNING: Removing unreachable block (ram,0x00404900)\n// WARNING: Removing unreachable block (ram,0x00404915)\n// WARNING: Removing unreachable block (ram,0x00404918)\n// WARNING: Removing unreachable block (ram,0x00404872)\n// WARNING: Removing unreachable block (ram,0x00404976)\n// WARNING: Removing unreachable block (ram,0x0040487b)\n// WARNING: Removing unreachable block (ram,0x00404884)\n// WARNING: Removing unreachable block (ram,0x00404940)\n// WARNING: Removing unreachable block (ram,0x00404950)\n// WARNING: Removing unreachable block (ram,0x00404953)\n// WARNING: Removing unreachable block (ram,0x004048a0)\n// WARNING: Removing unreachable block (ram,0x004048a5)\n// WARNING: Removing unreachable block (ram,0x004048ad)\n// WARNING: Removing unreachable block (ram,0x004048b0)\n// WARNING: Removing unreachable block (ram,0x004048df)\n\nvoid fcn.004047d0(void)\n\n{\n    if (*0x40b03c == 0) {\n        *0x40b03c = 1;\n    }\n    return;\n}\n",
        "token_count": 533
    },
    "00404bf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404bf0(uint noname_0, int32_t arg_ch)\n\n{\n    if (arg_ch != 1) {\n        if (arg_ch == 0) {\n            if (*0x40b04c != 0) {\n                fcn.00404a50();\n            }\n            if (*0x40b04c == 1) {\n                *0x40b04c = 0;\n                sub.kernel32.dll_DeleteCriticalSection(0x40b050);\n            }\n        }\n        else if ((arg_ch == 3) && (*0x40b04c != 0)) {\n            fcn.00404a50();\n        }\n        return 1;\n    }\n    if (*0x40b04c == 0) {\n        sub.kernel32.dll_InitializeCriticalSection(0x40b050);\n    }\n    *0x40b04c = 1;\n    return 1;\n}\n",
        "token_count": 203
    },
    "00404f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404f00(uint32_t param_1, char *param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    \n    if (*param_2 == '.') {\n        uVar6 = *in_EAX;\n        if (*in_EAX == 0x2e) {\n            uVar6 = 0x2e;\n        }\n        else if ((param_1 & 0x10000) == 0) {\n            return uVar6 - 0x2e;\n        }\n    }\n    else {\n        uVar6 = *in_EAX;\n    }\n    param_2 = param_2 + 1;\n    do {\n        cVar5 = uVar6;\n        iVar7 = cVar5;\n        puVar9 = in_EAX + 1;\n        if (iVar7 == 0) {\n            return -param_2[-1];\n        }\n        if (cVar5 == '?') {\n            if (param_2[-1] == '\\0') {\n                return 0x3f;\n            }\n        }\n        else if (cVar5 == '[') {\n            if (param_2[-1] == '\\0') {\n                return 0x5b;\n            }\n            if (in_EAX[1] == 0x21) {\n                puVar9 = in_EAX + 2;\n                iVar7 = fcn.00404c90();\n                if (iVar7 == 0) {\n                    uVar2 = in_EAX[2];\n                    if (uVar2 == 0x5d) {\n                        puVar9 = in_EAX + 3;\n                        uVar2 = in_EAX[3];\n                    }\n                    while (uVar2 != 0x5d) {\n                        if (uVar2 == 0x7f) {\n                            if ((param_1 & 0x20) == 0) {\n                                uVar2 = puVar9[1];\n                                puVar9 = puVar9 + 1;\n                                goto code_r0x004050d0;\n                            }\n                        }\n                        else {\ncode_r0x004050d0:\n                            if (uVar2 == 0) {\n                                return 0x5d;\n                            }\n                        }\n                        puVar9 = puVar9 + 1;\n                        uVar2 = *puVar9;\n                    }\n                    puVar9 = puVar9 + 1;\n                }\n            }\n            else {\n                puVar9 = fcn.00404c90();\n                if (puVar9 == NULL) {\n                    return 0x5d;\n                }\n            }\n        }\n        else {\n            if (cVar5 == '*') {\n                uVar2 = in_EAX[1];\n                while (uVar2 == 0x2a) {\n                    puVar9 = puVar9 + 1;\n                    uVar2 = *puVar9;\n                }\n                iVar7 = 0;\n                puVar9 = param_2 + -1;\n                while( true ) {\n                    if (uVar2 == 0) {\n                        return iVar7;\n                    }\n                    iVar7 = fcn.00404f00();\n                    if (iVar7 == 0) break;\n                    uVar2 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                }\n                return 0;\n            }\n            puVar1 = puVar9;\n            if (((param_1 & 0x20) == 0) && (iVar7 == 0x7f)) {\n                iVar7 = in_EAX[1];\n                puVar1 = in_EAX + 2;\n                if (iVar7 == 0) {\n                    puVar1 = puVar9;\n                }\n            }\n            puVar9 = puVar1;\n            iVar8 = param_2[-1];\n            if (param_2[-1] == '\\0') {\n                iVar8 = 0;\ncode_r0x00404fa6:\n                return iVar7 - iVar8;\n            }\n            if ((param_1 & 0x4000) == 0) {\n                iVar3 = sub.msvcrt.dll_tolower(iVar7);\n                iVar4 = sub.msvcrt.dll_tolower(iVar8);\n                iVar3 = iVar3 - iVar4;\n            }\n            else {\n                iVar3 = iVar7 - iVar8;\n            }\n            if (iVar3 != 0) goto code_r0x00404fa6;\n        }\n        uVar6 = *puVar9;\n        param_2 = param_2 + 1;\n        in_EAX = puVar9;\n    } while( true );\n}\n",
        "token_count": 1069
    },
    "00405250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __cdecl\nfcn.00405250(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t extraout_ECX;\n    char cVar12;\n    uint32_t in_EDX;\n    char *pcVar13;\n    int32_t **ppiVar14;\n    char *pcVar16;\n    uint *puVar17;\n    char *pcVar18;\n    bool bVar19;\n    ulong uVar20;\n    uint var_64h;\n    uint var_5dh;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint s;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint uStack128;\n    char *apcStack124 [3];\n    uint32_t auStack112 [3];\n    char var_5dh_2;\n    int32_t var_5ch;\n    code *var_58h_2;\n    int32_t var_54h_2;\n    char *var_50h;\n    int32_t *var_4ch_2;\n    char *var_48h_2;\n    int32_t var_44h_2;\n    char *var_40h_2;\n    uint *var_3ch_2;\n    int32_t var_38h_2;\n    int32_t *var_34h_2;\n    uint32_t var_30h_2;\n    uint32_t uStack48;\n    uint var_28h_2;\n    int32_t *piStack40;\n    int32_t *var_20h_2;\n    uint auStack32 [4];\n    int32_t *piVar15;\n    \n    uStack128 = 0x405269;\n    var_30h_2 = in_EDX;\n    sub.msvcrt.dll_strlen();\n    uStack128 = 0x405277;\n    uVar20 = fcn.004063d0();\n    iVar5 = -uVar20;\n    ppiVar14 = &stack0xffffff84 + iVar5;\n    *(&stack0xffffff8c + iVar5) = uVar20 >> 0x20;\n    *(&stack0xffffff88 + iVar5) = in_EAX;\n    *(&stack0xffffff84 + iVar5) = &stack0xffffff90 + iVar5;\n    *(&stack0xffffff80 + iVar5) = 0x40528d;\n    uVar3 = sub.msvcrt.dll_memcpy();\n    *(&stack0xffffff84 + iVar5) = uVar3;\n    *(&stack0xffffff80 + iVar5) = 0x405295;\n    var_48h_2 = fcn.00405920(*(&stack0xffffff84 + iVar5), *(&stack0xffffff88 + iVar5), *(&stack0xffffff8c + iVar5), \n                             *(&stack0xffffff90 + iVar5), *(&stack0xffffff94 + iVar5), *(&stack0xffffff98 + iVar5), \n                             *(&stack0xffffff9c + iVar5), *(&fcn.00405250::var_5ch + iVar5), \n                             *(&fcn.00405250::var_58h_2 + iVar5), *(&fcn.00405250::var_54h_2 + iVar5), \n                             *(&fcn.00405250::var_50h + iVar5), *(&fcn.00405250::var_4ch_2 + iVar5), \n                             *(&fcn.00405250::var_48h_2 + iVar5), *(&fcn.00405250::var_44h_2 + iVar5), \n                             *(&fcn.00405250::var_40h_2 + iVar5), *(&fcn.00405250::var_3ch_2 + iVar5), \n                             *(&fcn.00405250::var_38h_2 + iVar5), *(&fcn.00405250::var_34h_2 + iVar5), \n                             *(&fcn.00405250::var_30h_2 + iVar5));\n    auStack32[0] = 0;\n    *(&stack0xffffff80 + iVar5) = 0x4052a7;\n    iVar4 = fcn.00404ea0();\n    if (iVar4 != 0) {\n        return iVar4;\n    }\n    if (var_48h_2 != NULL) {\n        uVar11 = 0;\n        cVar12 = *var_48h_2;\n        pcVar18 = var_48h_2;\n        while ((cVar12 != '\\0' &&\n               (((pcVar16 = pcVar18 + 1,  (var_30h_2 & 0x20) != 0 || (cVar12 != '\\x7f')) ||\n                (pcVar16 = pcVar18 + 2,  pcVar18[1] != '\\0'))))) {\n            if (uVar11 == 0) {\n                if ((cVar12 == '?') || (cVar12 == '*')) {\ncode_r0x004057b2:\n                    *(&stack0xffffff84 + iVar5) = &fcn.00405250::var_28h_2;\n                    *(&stack0xffffff80 + iVar5) = 0x4057c9;\n                    iVar4 = fcn.00405250(*(&stack0xffffff84 + iVar5), *(&stack0xffffff88 + iVar5), \n                                         *(&stack0xffffff8c + iVar5), *(&stack0xffffff90 + iVar5), \n                                         *(&stack0xffffff94 + iVar5), *(&stack0xffffff98 + iVar5), \n                                         *(&stack0xffffff9c + iVar5), *(&fcn.00405250::var_5ch + iVar5), \n                                         *(&fcn.00405250::var_58h_2 + iVar5), *(&fcn.00405250::var_54h_2 + iVar5), \n                                         *(&fcn.00405250::var_50h + iVar5), *(&fcn.00405250::var_4ch_2 + iVar5), \n                                         *(&fcn.00405250::var_48h_2 + iVar5), *(&fcn.00405250::var_44h_2 + iVar5), \n                                         *(&fcn.00405250::var_40h_2 + iVar5), *(&fcn.00405250::var_3ch_2 + iVar5), \n                                         *(&fcn.00405250::var_38h_2 + iVar5), *(&fcn.00405250::var_34h_2 + iVar5), \n                                         *(&fcn.00405250::var_30h_2 + iVar5), *(&stack0xffffffd0 + iVar5), \n                                         *(&fcn.00405250::var_28h_2 + iVar5), *(&stack0xffffffd8 + iVar5), \n                                         *(&fcn.00405250::var_20h_2 + iVar5), *(&stack0xffffffe0 + iVar5), \n                                         *(&stack0xffffffe4 + iVar5), *(&stack0xffffffe8 + iVar5), \n                                         *(&stack0xffffffec + iVar5), *(&stack0xfffffff0 + iVar5), \n                                         *(&stack0xfffffff4 + iVar5), *(&stack0xfffffff8 + iVar5), \n                                         *(&stack0xfffffffc + iVar5));\n                    goto code_r0x0040537c;\n                }\n                uVar11 = cVar12 == '[';\n            }\n            else {\n                if ((cVar12 == ']') && (1 < uVar11)) goto code_r0x004057b2;\n                uVar11 = uVar11 + (cVar12 != '!');\n            }\n            cVar12 = *pcVar16;\n            pcVar18 = pcVar16;\n        }\n    }\n    *(&stack0xffffff84 + iVar5) = var_48h_2;\n    *(&stack0xffffff80 + iVar5) = 0x405319;\n    sub.msvcrt.dll_strlen();\n    *(&stack0xffffff80 + iVar5) = 0x405324;\n    iVar4 = fcn.004063d0();\n    iVar4 = -iVar4;\n    pcVar18 = &stack0xffffff90 + iVar4 + iVar5;\n    pcVar16 = var_48h_2;\n    do {\n        while (cVar12 = *pcVar16,  cVar12 == '\\x7f') {\n            cVar12 = pcVar16[1];\n            pcVar16 = pcVar16 + 2;\n            *pcVar18 = cVar12;\n            pcVar18 = pcVar18 + 1;\n            if (cVar12 == '\\0') goto code_r0x00405359;\n        }\n        pcVar16 = pcVar16 + 1;\n        *pcVar18 = cVar12;\n        pcVar18 = pcVar18 + 1;\n    } while (cVar12 != '\\0');\ncode_r0x00405359:\n    *(&stack0xffffff84 + iVar4 + iVar5) = &stack0xffffff90 + iVar4 + iVar5;\n    *(&stack0xffffff80 + iVar4 + iVar5) = 0x405361;\n    iVar4 = sub.msvcrt.dll__strdup();\n    if (iVar4 == 0) {\n        return 1;\n    }\n    *(&stack0xffffff80 + iVar5) = 0x40537c;\n    iVar4 = fcn.00405180();\ncode_r0x0040537c:\n    if (iVar4 != 0) {\n        return iVar4;\n    }\n    if ((in_EAX[1] != '\\\\') && (bVar19 = in_EAX[1] == '/',  !bVar19)) {\n        iVar4 = 2;\n        pcVar18 = var_48h_2;\n        pcVar16 = 0x40876c;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            bVar19 = *pcVar18 == *pcVar16;\n            pcVar18 = pcVar18 + 1;\n            pcVar16 = pcVar16 + 1;\n        } while (bVar19);\n        if (bVar19) {\n            var_5dh_2 = '\\\\';\n            var_48h_2 = NULL;\n            var_40h_2 = in_EAX;\n            goto code_r0x004053bb;\n        }\n    }\n    *(&stack0xffffff84 + iVar5) = var_48h_2;\n    *(&stack0xffffff80 + iVar5) = 0x40571b;\n    iVar4 = sub.msvcrt.dll_strlen();\n    var_40h_2 = in_EAX + iVar4;\n    if (in_EAX < var_40h_2) {\n        var_5dh_2 = *var_40h_2;\n        if ((var_5dh_2 == '/') || (var_5dh_2 == '\\\\')) {\n        }\n        else {\n            do {\n                pcVar18 = var_40h_2 + -1;\n                if (pcVar18 == in_EAX) {\n                    var_5dh_2 = var_40h_2[-1];\n                    var_40h_2 = pcVar18;\n                    goto code_r0x00405769;\n                }\n                var_5dh_2 = var_40h_2[-1];\n            } while ((var_5dh_2 != '\\\\') && (var_40h_2 = pcVar18,  var_5dh_2 != '/'));\n            var_40h_2 = pcVar18;\n        }\n    }\n    else {\n        var_5dh_2 = *var_40h_2;\n    }\ncode_r0x00405769:\n    if ((var_5dh_2 == '/') || (var_5dh_2 == '\\\\')) {\n        var_40h_2 = var_40h_2 + 1;\n        cVar12 = *var_40h_2;\n        if (cVar12 != '\\\\') goto code_r0x00405792;\n        do {\n            do {\n                var_5dh_2 = cVar12;\n                var_40h_2 = var_40h_2 + 1;\n                cVar12 = *var_40h_2;\n            } while (cVar12 == '\\\\');\ncode_r0x00405792:\n        } while (cVar12 == '/');\n    }\n    else {\n        var_5dh_2 = '\\\\';\n    }\ncode_r0x004053bb:\n    var_34h_2 = var_20h_2;\n    iVar4 = *var_20h_2;\n    if (iVar4 == 0) {\n        var_38h_2 = 2;\n        ppiVar14 = &stack0xffffff84 + iVar5;\n    }\n    else {\n        var_38h_2 = 2;\n        auStack112[2] = var_30h_2 & 4;\n        uStack48 = var_30h_2 & 0x8000;\n        do {\n            if (var_38h_2 != 1) {\n                *ppiVar14 = iVar4;\n                ppiVar14[-1] = 0x4053fa;\n                iVar5 = fcn.00405d20();\n                pcVar1 = var_58h_2;\n                if (iVar5 == 0) {\n                    if (auStack112[2] == 0) {\n                        if (var_58h_2 != NULL) {\n                            ppiVar14[-1] = 0x4056eb;\n                            piVar10 = sub.msvcrt.dll__errno();\n                            ppiVar14[1] = *piVar10;\n                            *ppiVar14 = *var_34h_2;\n                            piVar15 = ppiVar14 + -1;\n                            ppiVar14 = ppiVar14 + -1;\n                            *piVar15 = 0x4056fb;\n                            iVar4 = (*pcVar1)();\n                            iVar5 = 1;\n                            if (iVar4 == 0) {\n                                iVar5 = var_38h_2;\n                            }\n                            var_38h_2 = iVar5;\n                        }\n                    }\n                    else {\n                        var_38h_2 = 1;\n                    }\n                }\n                else {\n                    if (var_48h_2 == NULL) {\n                        var_44h_2 = 0;\n                    }\n                    else {\n                        *ppiVar14 = *var_34h_2;\n                        ppiVar14[-1] = 0x40541c;\n                        var_44h_2 = sub.msvcrt.dll_strlen();\n                    }\n                    var_3ch_2 = NULL;\n                    var_54h_2 = var_44h_2 + 2;\ncode_r0x00405430:\n                    *ppiVar14 = iVar5;\n                    ppiVar14[-1] = 0x405438;\n                    iVar4 = fcn.00405f70();\n                    if (iVar4 != 0) {\n                        while ((uStack48 == 0 || (*(iVar4 + 8) == 0x10))) {\n                            ppiVar14[-1] = 0x40545d;\n                            iVar6 = fcn.00404f00();\n                            if (iVar6 != 0) break;\n                            var_4ch_2 = ppiVar14;\n                            *ppiVar14 = iVar4 + 0x2c;\n                            ppiVar14[-1] = 0x40546c;\n                            sub.msvcrt.dll_strlen();\n                            ppiVar14[-1] = 0x40547d;\n                            iVar6 = fcn.004063d0();\n                            iVar6 = -iVar6;\n                            pcVar18 = ppiVar14 + iVar6 + 0xc;\n                            iVar7 = 0;\n                            iVar8 = extraout_ECX;\n                            var_50h = pcVar18;\n                            if (var_44h_2 != 0) {\n                                var_5ch = extraout_ECX;\n                                iVar8 = *var_34h_2;\n                                *(ppiVar14 + iVar6 + 8) = var_44h_2;\n                                *(ppiVar14 + iVar6) = pcVar18;\n                                *(ppiVar14 + iVar6 + 4) = iVar8;\n                                *(ppiVar14 + iVar6 + -4) = 0x405670;\n                                sub.msvcrt.dll_memcpy();\n                                iVar8 = var_5ch;\n                                cVar12 = *(ppiVar14 + var_44h_2 + iVar6 + 0xb);\n                                iVar7 = var_44h_2;\n                                if ((cVar12 != '\\\\') && (cVar12 != '/')) {\n                                    var_5ch = iVar5;\n                                    var_50h[var_44h_2] = var_5dh_2;\n                                    iVar7 = var_44h_2 + 1;\n                                    iVar5 = var_5ch;\n                                }\n                            }\n                            pcVar16 = var_50h + iVar7;\n                            *(ppiVar14 + iVar6 + 8) = iVar8 + 1;\n                            *(ppiVar14 + iVar6 + 4) = iVar4 + 0x2c;\n                            *(ppiVar14 + iVar6) = pcVar16;\n                            *(ppiVar14 + iVar6 + -4) = 0x4054ab;\n                            sub.msvcrt.dll_memcpy();\n                            *(ppiVar14 + iVar6) = var_50h;\n                            *(ppiVar14 + iVar6 + -4) = 0x4054b6;\n                            sub.msvcrt.dll_strlen();\n                            *(ppiVar14 + iVar6 + -4) = 0x4054c1;\n                            iVar4 = fcn.004063d0();\n                            iVar4 = -iVar4;\n                            pcVar16 = ppiVar14 + iVar4 + iVar6 + 0xc;\n                            pcVar13 = pcVar16;\n                            do {\n                                while (cVar12 = *pcVar18,  cVar12 == '\\x7f') {\n                                    cVar12 = pcVar18[1];\n                                    pcVar18 = pcVar18 + 2;\n                                    *pcVar13 = cVar12;\n                                    pcVar13 = pcVar13 + 1;\n                                    if (cVar12 == '\\0') goto code_r0x004054f8;\n                                }\n                                pcVar18 = pcVar18 + 1;\n                                *pcVar13 = cVar12;\n                                pcVar13 = pcVar13 + 1;\n                            } while (cVar12 != '\\0');\ncode_r0x004054f8:\n                            *(ppiVar14 + iVar4 + iVar6) = pcVar16;\n                            *(ppiVar14 + iVar4 + iVar6 + -4) = 0x405500;\n                            iVar4 = sub.msvcrt.dll__strdup();\n                            if (iVar4 == 0) {\n                                var_38h_2 = 3;\n                                puVar9 = var_3ch_2;\n                            }\n                            else {\n                                iVar8 = 0;\n                                if (var_38h_2 != 2) {\n                                    iVar8 = var_38h_2;\n                                }\n                                var_38h_2 = iVar8;\n                                if ((var_30h_2 & 0x40) == 0) {\n                                    if (var_3ch_2 == NULL) {\n                                        puVar17 = NULL;\n                                        pcVar18 = NULL;\n                                    }\n                                    else {\n                                        uVar11 = var_30h_2 & 0x4000;\n                                        var_50h = iVar5;\n                                        puVar9 = var_3ch_2;\n                                        do {\n                                            puVar17 = puVar9;\n                                            uVar3 = puVar17[2];\n                                            *(ppiVar14 + iVar6) = iVar4;\n                                            *(ppiVar14 + iVar6 + 4) = uVar3;\n                                            if (uVar11 == 0) {\n                                                *(ppiVar14 + iVar6 + -4) = 0x405566;\n                                                pcVar18 = sub.msvcrt.dll__stricoll();\n                                                puVar9 = puVar17[1];\n                                                iVar5 = var_50h;\n                                                if (pcVar18 < 1) {\n                                                    puVar9 = *puVar17;\n                                                }\n                                            }\n                                            else {\n                                                *(ppiVar14 + iVar6 + -4) = 0x405545;\n                                                pcVar18 = sub.msvcrt.dll_strcoll();\n                                                puVar9 = puVar17[1];\n                                                iVar5 = var_50h;\n                                                if (pcVar18 < 1) {\n                                                    puVar9 = *puVar17;\n                                                }\n                                            }\n                                            var_50h = iVar5;\n                                        } while (puVar9 != NULL);\n                                    }\n                                    var_50h = pcVar18;\n                                    *(ppiVar14 + iVar6) = 0xc;\n                                    *(ppiVar14 + iVar6 + -4) = 0x405586;\n                                    puVar9 = sub.msvcrt.dll_malloc();\n                                    if (puVar9 != NULL) {\n                                        puVar9[2] = iVar4;\n                                        puVar9[1] = 0;\n                                        *puVar9 = 0;\n                                        if (puVar17 != NULL) {\n                                            if (var_50h < 1) {\n                                                *puVar17 = puVar9;\n                                            }\n                                            else {\n                                                puVar17[1] = puVar9;\n                                            }\n                                        }\n                                    }\n                                    if (var_3ch_2 != NULL) {\n                                        puVar9 = var_3ch_2;\n                                    }\n                                }\n                                else {\n                                    *(ppiVar14 + iVar6 + -4) = 0x4056b0;\n                                    fcn.004051f0();\n                                    puVar9 = var_3ch_2;\n                                }\n                            }\n                            var_3ch_2 = puVar9;\n                            ppiVar14 = var_4ch_2;\n                            *var_4ch_2 = iVar5;\n                            ppiVar14[-1] = 0x4055c2;\n                            iVar4 = fcn.00405f70();\n                            if (iVar4 == 0) goto code_r0x004055d0;\n                        }\n                        goto code_r0x00405430;\n                    }\ncode_r0x004055d0:\n                    *ppiVar14 = iVar5;\n                    ppiVar14[-1] = 0x4055d8;\n                    fcn.004060d0();\n                    if (var_3ch_2 != NULL) {\n                        ppiVar14[-1] = 0x4055ea;\n                        fcn.00405210();\n                    }\n                }\n            }\n            piVar2 = var_34h_2;\n            piVar10 = var_34h_2 + 1;\n            var_34h_2 = piVar10;\n            *ppiVar14 = *piVar2;\n            ppiVar14[-1] = 0x4055fc;\n            sub.msvcrt.dll_free();\n            iVar4 = *piVar10;\n        } while (iVar4 != 0);\n    }\n    *ppiVar14 = var_20h_2;\n    ppiVar14[-1] = 0x405611;\n    sub.msvcrt.dll_free();\n    return var_38h_2;\n}\n",
        "token_count": 5463
    },
    "00405920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl\nfcn.00405920(char *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t iVar6;\n    int16_t *piVar7;\n    ulong uVar8;\n    uint var_2ch;\n    uint var_ch;\n    uint uStack80;\n    int16_t *apiStack76 [2];\n    uint32_t uStack68;\n    uchar auStack63 [11];\n    uint32_t var_30h;\n    uchar *var_2ch_2;\n    int16_t *var_26h;\n    int16_t *var_20h;\n    uint32_t pwcs;\n    uint var_ch_2;\n    \n    apiStack76[1] = NULL;\n    apiStack76[0] = 0x2;\n    uStack80 = 0x405940;\n    iVar1 = sub.msvcrt.dll_setlocale();\n    if (iVar1 != 0) {\n        uStack80 = 0x40594e;\n        apiStack76[0] = iVar1;\n        iVar1 = sub.msvcrt.dll__strdup();\n    }\n    apiStack76[1] = 0x408780;\n    apiStack76[0] = 0x2;\n    uStack80 = 0x405964;\n    sub.msvcrt.dll_setlocale();\n    if ((noname_0 != NULL) && (*noname_0 != '\\0')) {\n        uStack68 = 0;\n        apiStack76[1] = noname_0;\n        apiStack76[0] = NULL;\n        uStack80 = 0x4059fb;\n        var_2ch_2 = &stack0xffffffb4;\n        sub.msvcrt.dll_mbstowcs();\n        uStack80 = 0x405a09;\n        uVar8 = fcn.004063d0();\n        iVar2 = -uVar8;\n        pwcs = &stack0xffffffc1 + iVar2 >> 1;\n        piVar5 = &stack0xffffffc1 + iVar2 & 0xfffffffe;\n        var_20h = piVar5;\n        *(&stack0xffffffbc + iVar2) = uVar8 >> 0x20;\n        *(&stack0xffffffb8 + iVar2) = noname_0;\n        *(&stack0xffffffb4 + iVar2) = piVar5;\n        *(&stack0xffffffb0 + iVar2) = 0x405a2f;\n        var_30h = sub.msvcrt.dll_mbstowcs();\n        piVar5[var_30h] = 0;\n        var_26h._0_2_ = *(pwcs * 2);\n        if (var_30h < 2) {\n            stack0xffffffd8 = var_20h;\n        }\n        else if ((var_26h == 0x5c) || (var_26h == 0x2f)) {\n            stack0xffffffd8 = var_20h;\n            if ((var_26h == *(pwcs * 2 + 2)) && (*(pwcs * 2 + 4) == 0)) goto code_r0x00405c27;\n        }\n        else {\n            stack0xffffffd8 = var_20h;\n            if (*(pwcs * 2 + 2) == 0x3a) {\n                stack0xffffffd8 = var_20h + 2;\n                var_26h._0_2_ = *(pwcs * 2 + 4);\n            }\n        }\n        piVar4 = stack0xffffffd8;\n        piVar5 = stack0xffffffd8;\n        iVar6 = var_26h;\n        if (var_26h != 0) {\n            do {\n                if (iVar6 == 0x5c) {\n                    iVar6 = *piVar4;\n                    if (iVar6 != 0x5c) goto code_r0x00405ab3;\n                    do {\n                        do {\n                            piVar4 = piVar4 + 1;\ncode_r0x00405aaa:\n                            iVar6 = *piVar4;\n                        } while (iVar6 == 0x5c);\ncode_r0x00405ab3:\n                    } while (iVar6 == 0x2f);\n                    if (iVar6 == 0) goto code_r0x00405acc;\n                    iVar6 = piVar4[1];\n                    piVar5 = piVar4;\n                }\n                else {\n                    if (iVar6 == 0x2f) goto code_r0x00405aaa;\n                    iVar6 = piVar4[1];\n                }\n                if (iVar6 == 0) goto code_r0x00405acc;\n                piVar4 = piVar4 + 1;\n            } while( true );\n        }\n    }\n    uStack68 = 0;\n    apiStack76[1] = 0x408782;\n    apiStack76[0] = NULL;\n    uStack80 = 0x405989;\n    iVar2 = sub.msvcrt.dll_wcstombs();\n    apiStack76[0] = *0x40b06c;\n    uStack80 = 0x40599d;\n    apiStack76[1] = iVar2 + 1;\n    *0x40b06c = sub.msvcrt.dll_realloc();\n    apiStack76[1] = 0x408782;\n    uStack80 = 0x4059b6;\n    apiStack76[0] = *0x40b06c;\n    uStack68 = iVar2 + 1;\n    sub.msvcrt.dll_wcstombs();\n    apiStack76[0] = 0x2;\n    uStack80 = 0x4059c6;\n    apiStack76[1] = iVar1;\n    sub.msvcrt.dll_setlocale();\n    uStack80 = 0x4059ce;\n    apiStack76[0] = iVar1;\n    sub.msvcrt.dll_free();\n    return *0x40b06c;\ncode_r0x00405acc:\n    if (piVar5 <= stack0xffffffd8) {\n        if ((var_26h != 0x5c) && (var_26h != 0x2f)) {\n            *stack0xffffffd8 = 0x2e;\n        }\n        stack0xffffffd8[1] = 0;\n        *(&stack0xffffffbc + iVar2) = 0;\n        piVar5 = var_20h;\n        *(&stack0xffffffb4 + iVar2) = 0;\n        *(&stack0xffffffb8 + iVar2) = piVar5;\n        *(&stack0xffffffb0 + iVar2) = 0x405b0b;\n        iVar3 = sub.msvcrt.dll_wcstombs();\n        *(&stack0xffffffb8 + iVar2) = iVar3 + 1;\n        *(&stack0xffffffb4 + iVar2) = *0x40b06c;\n        *(&stack0xffffffb0 + iVar2) = 0x405b1f;\n        noname_0 = sub.msvcrt.dll_realloc();\n        *(&stack0xffffffbc + iVar2) = iVar3 + 1;\n        piVar5 = var_20h;\n        *(&stack0xffffffb4 + iVar2) = noname_0;\n        *(&stack0xffffffb8 + iVar2) = piVar5;\n        *(&stack0xffffffb0 + iVar2) = 0x405b39;\n        *0x40b06c = noname_0;\n        sub.msvcrt.dll_wcstombs();\n        goto code_r0x00405c27;\n    }\n    do {\n        piVar4 = piVar5;\n        piVar5 = piVar4 + -1;\n        if (piVar5 <= stack0xffffffd8) break;\n    } while ((piVar4[-1] == 0x5c) || (piVar4[-1] == 0x2f));\n    if ((stack0xffffffd8 == piVar5) &&\n       ((((var_26h == 0x5c || (piVar5 = stack0xffffffd8,  var_26h == 0x2f)) &&\n         (piVar5 = stack0xffffffd8,  stack0xffffffd8[1] == var_26h)) &&\n        ((stack0xffffffd8[2] != 0x2f && (stack0xffffffd8[2] != 0x5c)))))) {\n        piVar5 = piVar4;\n    }\n    piVar5[1] = 0;\n    iVar6 = *(pwcs * 2);\n    piVar4 = var_20h;\n    piVar5 = var_20h;\n    piVar7 = var_20h;\n    if ((iVar6 == 0x5c) || (iVar6 == 0x2f)) {\n        do {\n            do {\n                piVar4 = piVar4 + 1;\n            } while (*piVar4 == 0x5c);\n        } while (*piVar4 == 0x2f);\n        if (piVar4 - var_20h < 6) goto code_r0x00405c89;\n    }\n    else {\ncode_r0x00405c89:\n        if (*(pwcs * 2 + 2) == iVar6) {\n            iVar6 = *piVar4;\n            piVar5 = piVar4;\n            piVar7 = piVar4;\n        }\n    }\n    while (piVar4 = piVar5,  piVar5 = piVar7,  iVar6 != 0) {\n        while( true ) {\n            piVar7 = piVar5 + 1;\n            *piVar5 = iVar6;\n            piVar5 = piVar4;\n            if ((iVar6 == 0x2f) || (piVar5 = piVar4 + 1,  *piVar4 == 0x5c)) break;\n            iVar6 = piVar4[1];\n            piVar4 = piVar5;\n            piVar5 = piVar7;\n            if (iVar6 == 0) goto code_r0x00405c03;\n        }\n        iVar6 = *piVar5;\n        if ((iVar6 == 0x2f) || (iVar6 == 0x5c)) {\n            do {\n                do {\n                    piVar5 = piVar5 + 1;\n                    iVar6 = *piVar5;\n                } while (iVar6 == 0x5c);\n            } while (iVar6 == 0x2f);\n        }\n    }\ncode_r0x00405c03:\n    *piVar7 = 0;\n    *(&stack0xffffffbc + iVar2) = var_30h;\n    piVar5 = var_20h;\n    *(&stack0xffffffb4 + iVar2) = noname_0;\n    *(&stack0xffffffb8 + iVar2) = piVar5;\n    *(&stack0xffffffb0 + iVar2) = 0x405c1e;\n    iVar3 = sub.msvcrt.dll_wcstombs();\n    if (iVar3 != -1) {\n        noname_0[iVar3] = '\\0';\n    }\ncode_r0x00405c27:\n    *(&stack0xffffffb8 + iVar2) = iVar1;\n    *(&stack0xffffffb4 + iVar2) = 2;\n    *(&stack0xffffffb0 + iVar2) = 0x405c37;\n    sub.msvcrt.dll_setlocale();\n    *(&stack0xffffffb4 + iVar2) = iVar1;\n    *(&stack0xffffffb0 + iVar2) = 0x405c3f;\n    sub.msvcrt.dll_free();\n    return noname_0;\n}\n",
        "token_count": 2767
    },
    "00405d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * fcn.00405d20(char *param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    bool bVar10;\n    char cStack568;\n    uint uStack308;\n    int32_t iStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    uint uStack292;\n    uchar auStack288 [272];\n    \n    if (param_1 == NULL) {\n        puVar2 = sub.msvcrt.dll__errno();\n        *puVar2 = 0x16;\n        return NULL;\n    }\n    if (*param_1 == '\\0') {\n        puVar2 = sub.msvcrt.dll__errno();\n        *puVar2 = 2;\n        return NULL;\n    }\n    sub.msvcrt.dll__fullpath(&cStack568, param_1, 0x104);\n    puVar8 = &cStack568;\n    puVar9 = &cStack568;\n    if (cStack568 == '\\0') {\n        do {\n            uVar1 = *puVar9;\n            puVar9 = puVar9 + 1;\n            uVar1 = uVar1 + 0xfefefeff & ~uVar1 & 0x80808080;\n        } while (uVar1 == 0);\n    }\n    else {\n        do {\n            puVar7 = puVar8;\n            uVar3 = *puVar7 + 0xfefefeff & ~*puVar7;\n            uVar1 = uVar3 & 0x80808080;\n            puVar8 = puVar7 + 1;\n        } while (uVar1 == 0);\n        bVar10 = (uVar3 & 0x8080) == 0;\n        if (bVar10) {\n            uVar1 = uVar1 >> 0x10;\n        }\n        if (bVar10) {\n            puVar8 = puVar7 + 6;\n        }\n        iVar6 = puVar8 + ((-3 - CARRY1(uVar1, uVar1)) - &cStack568);\n        if (((&stack0xfffffdc4)[iVar6 + 3] == '\\\\') || ((&stack0xfffffdc4)[iVar6 + 3] == '/')) goto code_r0x00405d97;\n        *(&cStack568 + iVar6) = 0x5c;\n        do {\n            uVar1 = *puVar9;\n            puVar9 = puVar9 + 1;\n            uVar1 = uVar1 + 0xfefefeff & ~uVar1 & 0x80808080;\n        } while (uVar1 == 0);\n    }\n    bVar10 = (uVar1 & 0x8080) == 0;\n    if (bVar10) {\n        uVar1 = uVar1 >> 0x10;\n    }\n    if (bVar10) {\n        puVar9 = puVar9 + 2;\n    }\n    iVar6 = puVar9 + ((-3 - CARRY1(uVar1, uVar1)) - &cStack568);\ncode_r0x00405d97:\n    *(&cStack568 + iVar6) = 0x2a;\n    puVar2 = sub.msvcrt.dll_malloc(iVar6 + 0x141);\n    if (puVar2 == NULL) {\n        puVar2 = sub.msvcrt.dll__errno();\n        *puVar2 = 0xc;\n        puVar2 = NULL;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar2 + 0x4e, &cStack568, iVar6 + 2);\n        iVar6 = sub.msvcrt.dll__findfirst(puVar2 + 0x4e, &uStack308);\n        if (iVar6 == -1) {\n            puVar5 = puVar2 + 2;\n            for (iVar6 = 0x46; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            puVar2[0x4c] = 0xffffffff;\n            piVar4 = sub.msvcrt.dll__errno();\n            if (*piVar4 == 0x16) {\n                puVar5 = sub.msvcrt.dll__errno();\n                *puVar5 = 0x14;\n            }\n            sub.msvcrt.dll_free(puVar2);\n            puVar2 = NULL;\n        }\n        else {\n            puVar2[2] = uStack308;\n            puVar2[4] = iStack304;\n            puVar2[5] = iStack304 >> 0x1f;\n            puVar2[6] = iStack300;\n            puVar2[7] = iStack300 >> 0x1f;\n            puVar2[8] = iStack296;\n            puVar2[9] = iStack296 >> 0x1f;\n            puVar2[10] = uStack292;\n            sub.msvcrt.dll_strncpy(puVar2 + 0xb, auStack288, 0x104);\n            *(puVar2 + 1) = 0;\n            puVar2[0x4c] = iVar6;\n            puVar2[0x4d] = 0;\n            *puVar2 = 0;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 1255
    },
    "00405840": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.00405840(char *noname_0, uint noname_1, uint noname_2, char **noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint32_t var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint uStack48;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uchar *var_1ch_2;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_ch_2;\n    \n    if (*noname_3 != \"glob-1.0-mingw32\") {\n        uStack48 = 0x40585e;\n        fcn.00404ea0();\n        *noname_3 = \"glob-1.0-mingw32\";\n    }\n    uStack48 = 0x405874;\n    iVar2 = fcn.00405250(noname_3, in_stack_ffffffd8, in_stack_ffffffdc, var_1ch_2, in_stack_ffffffe4, in_stack_ffffffe8\n                         , in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr, noname_0, \n                         var_1ch, var_10h, noname_3, noname_4, var_ch, noname_6, noname_7, noname_8, noname_9, arg_8h, \n                         arg_ch, arg_10h, arg_14h, in_stack_0000003c, in_stack_00000040, in_stack_00000044, \n                         in_stack_00000048, in_stack_0000004c);\n    if ((iVar2 != 2) || ((var_1ch & 0x10) == 0)) {\n        return iVar2;\n    }\n    uStack48 = 0x405896;\n    sub.msvcrt.dll_strlen();\n    uStack48 = 0x4058a1;\n    iVar2 = fcn.004063d0();\n    iVar2 = -iVar2;\n    pcVar3 = &stack0xffffffd8 + iVar2;\n    var_1ch_2 = &stack0xffffffd4;\n    do {\n        while (cVar1 = *noname_0,  cVar1 == '\\x7f') {\n            cVar1 = noname_0[1];\n            noname_0 = noname_0 + 2;\n            *pcVar3 = cVar1;\n            pcVar3 = pcVar3 + 1;\n            if (cVar1 == '\\0') goto code_r0x004058d8;\n        }\n        noname_0 = noname_0 + 1;\n        *pcVar3 = cVar1;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\ncode_r0x004058d8:\n    *(&stack0xffffffd4 + iVar2) = &stack0xffffffd8 + iVar2;\n    *(&stack0xffffffd0 + iVar2) = 0x4058e0;\n    sub.msvcrt.dll__strdup();\n    *(var_1ch_2 + -4) = 0x4058ea;\n    fcn.004051f0();\n    return 2;\n}\n",
        "token_count": 1001
    },
    "004031a2": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004031a2(char *s1, char *arg_ch)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    char *pcVar9;\n    uint var_12ch;\n    uint dest;\n    \n    iVar3 = fcn.0040205e(0xc, s1);\n    if (iVar3 != 0) {\n        sub.msvcrt.dll_strcat(s1, 0x40849f);\n    }\n    puVar8 = &dest;\n    for (iVar3 = 0x41; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    uVar5 = 0xffffffff;\n    pcVar6 = arg_ch;\n    do {\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    sub.msvcrt.dll_strncpy(&dest, arg_ch, ~uVar5 - 4);\n    sub.msvcrt.dll_strcat(&dest, \"l4j.ini\");\n    iVar3 = sub.msvcrt.dll__open(&dest, 0);\n    if (iVar3 != -1) {\n        if (*0x40b07c != 0) {\n            sub.msvcrt.dll_fprintf(*0x40b07c, \"Loading:\\t%s\\n\", &dest);\n        }\n        uVar5 = 0xffffffff;\n        iVar7 = 0;\n        bVar2 = true;\n        pcVar6 = s1;\n        do {\n            if (uVar5 == 0) break;\n            uVar5 = uVar5 - 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = s1 + (~uVar5 - 1);\n        iVar4 = sub.msvcrt.dll__read(iVar3, pcVar9, 0x7c00 - (~uVar5 - 1));\n        pcVar6 = pcVar9;\n        for (; iVar7 < iVar4; iVar7 = iVar7 + 1) {\n            cVar1 = pcVar9[iVar7];\n            if (cVar1 == '#') {\n                bVar2 = false;\n            }\n            else if ((cVar1 == '\\n') || (cVar1 == '\\r')) {\n                bVar2 = true;\n                if ((s1 < pcVar6) && (pcVar6[-1] != ' ')) {\n                    *pcVar6 = ' ';\n                    pcVar6 = pcVar6 + 1;\n                }\n            }\n            else if (bVar2) {\n                *pcVar6 = cVar1;\n                bVar2 = true;\n                pcVar6 = pcVar6 + 1;\n            }\n        }\n        *pcVar6 = '\\0';\n        if ((0 < iVar4) && (pcVar6[-1] != ' ')) {\n            sub.msvcrt.dll_strcat(s1, 0x40849f);\n        }\n        sub.msvcrt.dll__close(iVar3);\n    }\n    return;\n}\n",
        "token_count": 771
    },
    "00404a50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.00404a50(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    \n    sub.kernel32.dll_EnterCriticalSection(0x40b050);\n    for (puVar1 = *0x40b048; puVar1 != NULL; puVar1 = puVar1[2]) {\n        iVar2 = sub.kernel32.dll_TlsGetValue(*puVar1);\n        iVar3 = sub.kernel32.dll_GetLastError();\n        if ((iVar3 == 0) && (iVar2 != 0)) {\n            (*puVar1[1])();\n        }\n    }\n    sub.kernel32.dll_LeaveCriticalSection(0x40b050);\n    return;\n}\n",
        "token_count": 179
    },
    "00404ac0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00404ac0(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_8h;\n    \n    uVar2 = 0;\n    if (*0x40b04c != 0) {\n        puVar1 = sub.msvcrt.dll_calloc(1, 0xc);\n        if (puVar1 != NULL) {\n            *puVar1 = arg_8h;\n            puVar1[1] = arg_ch;\n            sub.kernel32.dll_EnterCriticalSection(0x40b050);\n            puVar1[2] = *0x40b048;\n            *0x40b048 = puVar1;\n            sub.kernel32.dll_LeaveCriticalSection(0x40b050);\n            return 0;\n        }\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 213
    },
    "00404b50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00404b50(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    if (*0x40b04c == 0) {\n        return 0;\n    }\n    sub.kernel32.dll_EnterCriticalSection(0x40b050);\n    if (*0x40b048 == NULL) {\ncode_r0x00404ba0:\n        sub.kernel32.dll_LeaveCriticalSection(0x40b050);\n    }\n    else {\n        piVar1 = *0x40b048;\n        if (**0x40b048 == arg_8h) {\n            *0x40b048 = (*0x40b048)[2];\n        }\n        else {\n            do {\n                piVar2 = piVar1;\n                piVar1 = piVar2[2];\n                if (piVar1 == NULL) goto code_r0x00404ba0;\n            } while (*piVar1 != arg_8h);\n            piVar2[2] = piVar1[2];\n        }\n        sub.msvcrt.dll_free(piVar1);\n        sub.kernel32.dll_LeaveCriticalSection(0x40b050);\n    }\n    return 0;\n}\n",
        "token_count": 292
    },
    "00404c90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00404c90(uint32_t param_1, int32_t param_2)\n\n{\n    char *in_EAX;\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    cVar1 = *in_EAX;\n    iVar4 = cVar1;\n    if ((iVar4 == 0x5d) || (iVar4 == 0x2d)) {\n        if (iVar4 == param_2) {\n            pcVar3 = in_EAX + 1;\ncode_r0x00404e50:\n            do {\n                cVar1 = *pcVar3;\n                if (cVar1 == ']') goto code_r0x00404e85;\n                if (cVar1 == '\\x7f') {\n                    if ((param_1 & 0x20) != 0) {\n                        pcVar3 = pcVar3 + 1;\n                        goto code_r0x00404e50;\n                    }\n                    cVar1 = pcVar3[1];\n                    pcVar3 = pcVar3 + 1;\n                }\n                pcVar3 = pcVar3 + 1;\n                if (cVar1 == '\\0') {\n                    return NULL;\n                }\n            } while( true );\n        }\n        cVar1 = in_EAX[1];\n        in_EAX = in_EAX + 1;\n    }\ncode_r0x00404cde:\n    iVar2 = cVar1;\n    pcVar3 = in_EAX + 1;\n    if (iVar2 == 0x5d) {\n        return NULL;\n    }\n    if (iVar2 == 0x2d) {\n        if (in_EAX[1] == ']') {\n            iVar4 = 0x2d;\n            cVar1 = ']';\n            in_EAX = pcVar3;\n            if (param_2 == 0x2d) goto code_r0x00404da8;\n            goto code_r0x00404cde;\n        }\n        iVar2 = in_EAX[1];\n        if (iVar2 == 0) {\n            return NULL;\n        }\n        pcVar3 = in_EAX + 2;\n        for (; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n            if (iVar4 == param_2) {\n                goto code_r0x00404de6;\n            }\n        }\n        if (iVar4 <= iVar2) goto code_r0x00404cbd;\n        if (param_2 == iVar4) {\ncode_r0x00404d4f:\n            goto code_r0x00404d55;\n        }\n        while (iVar4 != iVar2 + 1) {\n            iVar4 = iVar4 + -1;\n            if (param_2 == iVar4) goto code_r0x00404d4f;\n        }\n    }\n    else if (iVar2 == 0) {\n        return NULL;\n    }\ncode_r0x00404cbd:\n    if (iVar2 == 0x5c) {\n        return NULL;\n    }\n    if (iVar2 == 0x2f) {\n        return NULL;\n    }\n    cVar1 = *pcVar3;\n    in_EAX = pcVar3;\n    iVar4 = iVar2;\n    if (iVar2 == param_2) goto code_r0x00404da8;\n    goto code_r0x00404cde;\ncode_r0x00404de6:\n    cVar1 = *pcVar3;\n    if (cVar1 != ']') {\n        do {\n            if (cVar1 == '\\x7f') {\n                if ((param_1 & 0x20) != 0) goto code_r0x00404e20;\n                cVar1 = pcVar3[1];\n                pcVar3 = pcVar3 + 1;\n            }\n            pcVar3 = pcVar3 + 1;\n            if (cVar1 == '\\0') {\n                return NULL;\n            }\n            cVar1 = *pcVar3;\n            if (cVar1 == ']') break;\n        } while( true );\n    }\n    goto code_r0x00404e03;\ncode_r0x00404e20:\n    pcVar3 = pcVar3 + 1;\n    goto code_r0x00404de6;\ncode_r0x00404d55:\n    cVar1 = *pcVar3;\n    if (cVar1 == ']') {\ncode_r0x00404e03:\n        return pcVar3 + 1;\n    }\n    if (cVar1 == '\\x7f') {\n        if ((param_1 & 0x20) != 0) {\n            pcVar3 = pcVar3 + 1;\n            goto code_r0x00404d55;\n        }\n        cVar1 = pcVar3[1];\n        pcVar3 = pcVar3 + 1;\n    }\n    pcVar3 = pcVar3 + 1;\n    if (cVar1 == '\\0') {\n        return NULL;\n    }\n    goto code_r0x00404d55;\ncode_r0x00404da8:\n    do {\n        if (cVar1 == ']') {\ncode_r0x00404e85:\n            return pcVar3 + 1;\n        }\n        if (cVar1 == '\\x7f') {\n            if ((param_1 & 0x20) == 0) {\n                cVar1 = pcVar3[1];\n                pcVar3 = pcVar3 + 1;\n                goto code_r0x00404db0;\n            }\n        }\n        else {\ncode_r0x00404db0:\n            if (cVar1 == '\\0') {\n                return NULL;\n            }\n        }\n        pcVar3 = pcVar3 + 1;\n        cVar1 = *pcVar3;\n    } while( true );\n}\n",
        "token_count": 1285
    },
    "00404ea0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00404ea0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        iVar3 = *(in_EAX + 0xc) + 1;\n        iVar2 = iVar3 * 4;\n        iVar1 = sub.msvcrt.dll_malloc(iVar2);\n        *(in_EAX + 8) = iVar1;\n        if (iVar1 == 0) {\n            return 3;\n        }\n        *(in_EAX + 4) = 0;\n        if (0 < iVar3) {\n            while( true ) {\n                iVar2 = iVar2 + -4;\n                *(iVar1 + iVar2) = 0;\n                iVar3 = iVar3 + -1;\n                if (iVar3 == 0) break;\n                iVar1 = *(in_EAX + 8);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "00402fd3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fd3(char *arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint s1;\n    \n    iVar2 = fcn.0040219b(arg_ch);\n    uVar3 = fcn.0040219b(arg_10h);\n    iVar4 = fcn.00406400(arg_14h * uVar3, (arg_14h * uVar3 >> 0x20) + (uVar3 >> 0x1f) * arg_14h + arg_18h * uVar3, \n                         0x6400000, 0);\n    if (iVar4 < iVar2) {\n        iVar4 = iVar2;\n    }\n    if (iVar4 < 1) {\n        return;\n    }\n    if (((*0x4132a1 & 1) == 0) && (0x400 < iVar4)) {\n        if (*0x40b07c != 0) {\n            sub.msvcrt.dll_fprintf\n                      (*0x40b07c, \"Heap limit:\\tReduced %d MB heap size to 32-bit maximum %d MB\\n\", iVar4, 0x400);\n        }\n        iVar4 = 0x400;\n    }\n    if (*0x40b07c != 0) {\n        sub.msvcrt.dll_fprintf\n                  (*0x40b07c, \"Heap %s:\\tRequested %d MB / %d%%, Available: %d MB, Heap size: %d MB\\n\", arg_1ch, iVar2, \n                   uVar3, arg_14h >> 0x14 | arg_18h << 0xc, iVar4);\n    }\n    sub.msvcrt.dll_strcat(arg_8h, arg_1ch);\n    uVar3 = 0xffffffff;\n    pcVar5 = arg_8h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    sub.msvcrt.dll__itoa(iVar4, arg_8h + (~uVar3 - 1), 10);\n    // WARNING: Could not recover jumptable at 0x00406578. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_strcat)();\n    return;\n}\n",
        "token_count": 635
    },
    "004045b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404658)\n// WARNING: Removing unreachable block (ram,0x0040464a)\n// WARNING: Removing unreachable block (ram,0x004045de)\n// WARNING: Removing unreachable block (ram,0x004045cf)\n\nulong fcn.004045b0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t in_CF;\n    uint8_t in_PF;\n    uint8_t in_AF;\n    uint8_t in_ZF;\n    uint8_t in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t uVar4;\n    \n    uVar4 = (in_NT & 1) * 0x4000 | (in_OF & 1) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (in_SF & 1) * 0x80\n            | (in_ZF & 1) * 0x40 | (in_AF & 1) * 0x10 | (in_PF & 1) * 4 | in_CF & 1 | (in_ID & 1) * 0x200000 |\n            (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    uVar3 = uVar4 ^ 0x200000;\n    uVar3 = (((uVar3 & 0x4000) != 0) * 0x4000 | ((uVar3 & 0x800) != 0) * 0x800 | ((uVar3 & 0x400) != 0) * 0x400 |\n             ((uVar3 & 0x200) != 0) * 0x200 | ((uVar3 & 0x100) != 0) * 0x100 | ((uVar3 & 0x80) != 0) * 0x80 |\n             ((uVar3 & 0x40) != 0) * 0x40 | ((uVar3 & 0x10) != 0) * 0x10 | ((uVar3 & 4) != 0) * 4 | (uVar3 & 1) != 0 |\n             ((uVar3 & 0x200000) != 0) * 0x200000 | ((uVar3 & 0x40000) != 0) * 0x40000) ^ uVar4;\n    if ((uVar3 & 0x200000) != 0) {\n        puVar1 = cpuid_basic_info(0);\n        uVar3 = *puVar1;\n        uVar4 = puVar1[2];\n        if (uVar3 != 0) {\n            iVar2 = cpuid_Version_info(1);\n            uVar3 = *(iVar2 + 8);\n            if ((uVar3 & 0x100) != 0) {\n                *0x40b038 = *0x40b038 | 1;\n            }\n            if ((uVar3 & 0x8000) != 0) {\n                *0x40b038 = *0x40b038 | 2;\n            }\n            if ((uVar3 & 0x800000) != 0) {\n                *0x40b038 = *0x40b038 | 4;\n            }\n            if ((uVar3 & 0x1000000) != 0) {\n                *0x40b038 = *0x40b038 | 8;\n            }\n            if ((uVar3 & 0x2000000) != 0) {\n                *0x40b038 = *0x40b038 | 0x10;\n            }\n            if ((uVar3 & 0x4000000) != 0) {\n                *0x40b038 = *0x40b038 | 0x20;\n            }\n            if ((*(iVar2 + 0xc) & 1) != 0) {\n                *0x40b038 = *0x40b038 | 0x40;\n            }\n            if ((*(iVar2 + 0xc) & 0x2000) != 0) {\n                *0x40b038 = *0x40b038 | 0x80;\n            }\n            puVar1 = cpuid(0x80000000);\n            uVar3 = *puVar1;\n            uVar4 = puVar1[2];\n            if (0x80000000 < uVar3) {\n                puVar1 = cpuid(0x80000001);\n                uVar3 = *puVar1;\n                if (puVar1[2] < 0) {\n                    *0x40b038 = *0x40b038 | 0x100;\n                }\n                uVar4 = puVar1[2] & 0x40000000;\n                if (uVar4 != 0) {\n                    *0x40b038 = *0x40b038 | 0x200;\n                }\n            }\n        }\n    }\n    return CONCAT44(uVar4, uVar3);\n}\n",
        "token_count": 1226
    },
    "00405f70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00405f70(int32_t param_1)\n\n{\n    uint uVar1;\n    ushort uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    bool bVar8;\n    uint uStack308;\n    int32_t iStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    uint uStack292;\n    uchar auStack288 [272];\n    \n    if (param_1 == 0) {\n        puVar3 = sub.msvcrt.dll__errno();\n        *puVar3 = 9;\n        return 0;\n    }\n    iVar4 = *(param_1 + 0x134);\n    *(param_1 + 0x134) = iVar4 + 1;\n    if (iVar4 < 1) {\ncode_r0x0040601b:\n        uVar2 = sub.msvcrt.dll_strlen(param_1 + 0x2c);\n        *(param_1 + 6) = uVar2;\n        uVar5 = *(param_1 + 8) & 0xffffffd8;\n        if ((uVar5 == 0) || (uVar5 == 0x10)) {\n            *(param_1 + 8) = uVar5;\n            return param_1;\n        }\n        *(param_1 + 8) = 0x18;\n    }\n    else {\n        puVar3 = sub.msvcrt.dll__errno();\n        uVar1 = *puVar3;\n        iVar4 = sub.msvcrt.dll__findnext(*(param_1 + 0x130), &uStack308);\n        if (iVar4 == -1) {\n            puVar3 = param_1 + 8;\n            uVar5 = 0x128;\n            bVar8 = (puVar3 & 1) != 0;\n            if (bVar8) {\n                *(param_1 + 8) = 0;\n                puVar3 = param_1 + 9;\n                uVar5 = 0x127;\n            }\n            puVar7 = puVar3;\n            if ((puVar3 & 2) != 0) {\n                puVar7 = puVar3 + 2;\n                *puVar3 = 0;\n                uVar5 = uVar5 - 2;\n            }\n            for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            puVar3 = puVar7;\n            if ((uVar5 & 2) != 0) {\n                puVar3 = puVar7 + 2;\n                *puVar7 = 0;\n            }\n            if (bVar8) {\n                *puVar3 = 0;\n            }\n        }\n        else {\n            *(param_1 + 8) = uStack308;\n            *(param_1 + 0x10) = iStack304;\n            *(param_1 + 0x14) = iStack304 >> 0x1f;\n            *(param_1 + 0x18) = iStack300;\n            *(param_1 + 0x1c) = iStack300 >> 0x1f;\n            *(param_1 + 0x20) = iStack296;\n            *(param_1 + 0x24) = iStack296 >> 0x1f;\n            *(param_1 + 0x28) = uStack292;\n            sub.msvcrt.dll_strncpy(param_1 + 0x2c, auStack288, 0x104);\n            if (iVar4 == 0) goto code_r0x0040601b;\n        }\n        iVar4 = sub.kernel32.dll_GetLastError();\n        param_1 = 0;\n        if (iVar4 == 0x12) {\n            puVar3 = sub.msvcrt.dll__errno();\n            *puVar3 = uVar1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 917
    },
    "00404120": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint __cdecl fcn.00404120(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    char *pcVar7;\n    uint auStack33056 [65];\n    uint auStack32796 [8194];\n    uint uStack20;\n    \n    uStack20 = 0x404130;\n    iVar2 = fcn.004063d0();\n    iVar2 = -iVar2;\n    *(&stack0xffffffec + iVar2) = 0x404137;\n    iVar3 = fcn.00401c50();\n    if (iVar3 != 0) {\n        puVar6 = &stack0xffff7ee0;\n        for (iVar3 = 0x41; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        *(&stack0xfffffff0 + iVar2) = &stack0xffff7ee0;\n        *(&stack0xffffffec + iVar2) = 0x40415f;\n        iVar3 = fcn.00402590(*(&stack0xfffffff0 + iVar2));\n        if (iVar3 != -1) {\n            *(&stack0xfffffff8 + iVar2) = iVar3;\n            *(&stack0xfffffff4 + iVar2) = &stack0xffff7ee0;\n            *(&stack0xfffffff0 + iVar2) = arg_8h;\n            *(&stack0xffffffec + iVar2) = 0x404179;\n            iVar4 = fcn.00401d2a(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2), *(&stack0xfffffff8 + iVar2));\n            if (iVar4 != 0) {\n                *(&stack0xffffffec + iVar2) = 0x404182;\n                fcn.00401e3d();\n                *(&stack0xfffffff4 + iVar2) = 0x41383c;\n                *(&stack0xfffffff0 + iVar2) = 10;\n                *(&stack0xffffffec + iVar2) = 0x404196;\n                fcn.0040205e(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n                *(&stack0xfffffff4 + iVar2) = 0x413cbc;\n                *(&stack0xfffffff0 + iVar2) = 0x16;\n                *(&stack0xffffffec + iVar2) = 0x4041aa;\n                fcn.0040205e(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n                *(&stack0xfffffff4 + iVar2) = 0x4138bc;\n                *(&stack0xfffffff0 + iVar2) = 0x65;\n                *(&stack0xffffffec + iVar2) = 0x4041be;\n                iVar4 = fcn.0040205e(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n                if (iVar4 == 0) {\n                    if (*0x40b07c != 0) {\n                        *(&stack0xfffffff8 + iVar2) = \"Startup error message not defined.\";\n                        *(&stack0xfffffff4 + iVar2) = \"Error:\\t\\t%s\\n\";\n                        *(&stack0xfffffff0 + iVar2) = *0x40b07c;\n                        *(&stack0xffffffec + iVar2) = 0x4041e9;\n                        sub.msvcrt.dll_fprintf();\n                        return 0;\n                    }\n                }\n                else {\n                    *(&stack0xffffffec + iVar2) = 0x4041f3;\n                    iVar4 = fcn.00403306();\n                    if (iVar4 == 0) {\n                        return 0xb7;\n                    }\n                    *(&stack0xfffffff4 + iVar2) = iVar3;\n                    *(&stack0xfffffff0 + iVar2) = &stack0xffff7ee0;\n                    *(&stack0xffffffec + iVar2) = 0x40420c;\n                    fcn.004033da(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n                    *(&stack0xfffffff4 + iVar2) = iVar3;\n                    *(&stack0xfffffff0 + iVar2) = &stack0xffff7ee0;\n                    *(&stack0xffffffec + iVar2) = 0x404218;\n                    iVar4 = fcn.004038c7(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n                    if (iVar4 != 0) {\n                        *(&stack0xffffffec + iVar2) = 0x404225;\n                        iVar4 = fcn.00403a85();\n                        if (iVar4 != 0) {\n                            *(&stack0xfffffff4 + iVar2) = iVar3;\n                            *(&stack0xfffffff0 + iVar2) = &stack0xffff7ee0;\n                            *(&stack0xffffffec + iVar2) = 0x40423f;\n                            fcn.00403b03(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n                            *(&stack0xfffffff0 + iVar2) = 0x14;\n                            *(&stack0xffffffec + iVar2) = 0x40424b;\n                            *0x413298 = fcn.0040219b(*(&stack0xfffffff0 + iVar2));\n                            *(&stack0xfffffff0 + iVar2) = 0x40b184;\n                            *(&stack0xffffffec + iVar2) = 0x40425c;\n                            fcn.00402619(*(&stack0xfffffff0 + iVar2));\n                            *(&stack0xfffffff0 + iVar2) = 0x40b288;\n                            *(&stack0xffffffec + iVar2) = 0x404268;\n                            fcn.00403124(*(&stack0xfffffff0 + iVar2));\n                            puVar6 = &stack0xffff7fe4;\n                            for (iVar4 = 0x2000; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *(&stack0xfffffff4 + iVar2) = &stack0xffff7ee0;\n                            *(&stack0xfffffff0 + iVar2) = &stack0xffff7fe4;\n                            *(&stack0xffffffec + iVar2) = 0x404283;\n                            fcn.004031a2(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n                            *(&stack0xfffffffc + iVar2) = iVar3;\n                            *(&stack0xfffffff8 + iVar2) = &stack0xffff7ee0;\n                            *(&stack0xfffffff4 + iVar2) = &stack0xffff7fe4;\n                            *(&stack0xfffffff0 + iVar2) = 0x40b288;\n                            *(&stack0xffffffec + iVar2) = 0x40429b;\n                            fcn.00402d80(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2), \n                                         *(&stack0xfffffff8 + iVar2), *(&stack0xfffffffc + iVar2));\n                            *(&stack0xfffffff4 + iVar2) = iVar3;\n                            *(&stack0xfffffff0 + iVar2) = &stack0xffff7ee0;\n                            *(&stack0xffffffec + iVar2) = 0x4042a7;\n                            fcn.00403be6(*(&stack0xfffffff0 + iVar2), *(&stack0xfffffff4 + iVar2));\n                            *(&stack0xfffffff0 + iVar2) = arg_8h;\n                            *(&stack0xffffffec + iVar2) = 0x4042b2;\n                            fcn.00404036(*(&stack0xfffffff0 + iVar2));\n                            if (*0x40b07c != 0) {\n                                *(&stack0xfffffff8 + iVar2) = 0x40b184;\n                                *(&stack0xfffffff4 + iVar2) = \"Launcher:\\t%s\\n\";\n                                *(&stack0xfffffff0 + iVar2) = *0x40b07c;\n                                *(&stack0xffffffec + iVar2) = 0x4042d3;\n                                sub.msvcrt.dll_fprintf();\n                            }\n                            if (*0x40b07c != 0) {\n                                *(&stack0xfffffff8 + iVar2) = 0x40b288;\n                                *(&stack0xfffffff4 + iVar2) = \"Launcher args:\\t%s\\n\";\n                                *(&stack0xfffffff0 + iVar2) = *0x40b07c;\n                                *(&stack0xffffffec + iVar2) = 0x4042f4;\n                                sub.msvcrt.dll_fprintf();\n                            }\n                            if (*0x40b07c != 0) {\n                                uVar5 = 0xffffffff;\n                                pcVar7 = 0x40b288;\n                                do {\n                                    if (uVar5 == 0) break;\n                                    uVar5 = uVar5 - 1;\n                                    cVar1 = *pcVar7;\n                                    pcVar7 = pcVar7 + 1;\n                                } while (cVar1 != '\\0');\n                                *(&stack0xfffffff4 + iVar2) = \"Args length:\\t%d/32768 chars\\n\";\n                                *(&stack0xfffffff0 + iVar2) = *0x40b07c;\n                                *(&stack0xfffffff8 + iVar2) = ~uVar5 - 1;\n                                *(&stack0xffffffec + iVar2) = 0x404321;\n                                sub.msvcrt.dll_fprintf();\n                            }\n                            return 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2259
    },
    "00404a30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00404a30(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x40b040 != 0) {\n        return;\n    }\n    *0x40b040 = 1;\n    iVar2 = *0x406960;\n    if (*0x406960 == -1) {\n        iVar1 = 0;\n        do {\n            iVar2 = iVar1;\n            iVar1 = iVar2 + 1;\n        } while (*((iVar2 + 1) * 4 + 0x406960) != 0);\n    }\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        (**(iVar2 * 4 + 0x406960))();\n    }\n    fcn.004015b0(0x4049b0);\n    return;\n}\n",
        "token_count": 188
    },
    "00404690": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004047f9)\n// WARNING: Removing unreachable block (ram,0x004048e7)\n// WARNING: Removing unreachable block (ram,0x00404809)\n// WARNING: Removing unreachable block (ram,0x00404817)\n// WARNING: Removing unreachable block (ram,0x00404821)\n// WARNING: Removing unreachable block (ram,0x004048ec)\n// WARNING: Removing unreachable block (ram,0x004048f2)\n// WARNING: Removing unreachable block (ram,0x004048fd)\n// WARNING: Removing unreachable block (ram,0x00404834)\n// WARNING: Removing unreachable block (ram,0x00404839)\n// WARNING: Removing unreachable block (ram,0x00404997)\n// WARNING: Removing unreachable block (ram,0x004049bb)\n// WARNING: Removing unreachable block (ram,0x004049c0)\n// WARNING: Removing unreachable block (ram,0x004049d7)\n// WARNING: Removing unreachable block (ram,0x004049da)\n// WARNING: Removing unreachable block (ram,0x00404845)\n// WARNING: Removing unreachable block (ram,0x00404854)\n// WARNING: Removing unreachable block (ram,0x00404900)\n// WARNING: Removing unreachable block (ram,0x00404915)\n// WARNING: Removing unreachable block (ram,0x00404918)\n// WARNING: Removing unreachable block (ram,0x00404872)\n// WARNING: Removing unreachable block (ram,0x00404976)\n// WARNING: Removing unreachable block (ram,0x0040487b)\n// WARNING: Removing unreachable block (ram,0x00404884)\n// WARNING: Removing unreachable block (ram,0x00404940)\n// WARNING: Removing unreachable block (ram,0x00404950)\n// WARNING: Removing unreachable block (ram,0x00404953)\n// WARNING: Removing unreachable block (ram,0x004048a0)\n// WARNING: Removing unreachable block (ram,0x004048a5)\n// WARNING: Removing unreachable block (ram,0x004048ad)\n// WARNING: Removing unreachable block (ram,0x004048b0)\n// WARNING: Removing unreachable block (ram,0x004048df)\n\nvoid fcn.00404690(void)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    ulong uVar2;\n    uint uStack88;\n    uint auStack84 [3];\n    uint uStack72;\n    int32_t iStack64;\n    int32_t iStack44;\n    uchar *puStack40;\n    \n    puStack40 = &stack0x00000008;\n    iStack44 = _sym.imp.msvcrt.dll__iob + 0x40;\n    sub.msvcrt.dll_fwrite();\n    sub.msvcrt.dll_vfprintf();\n    uVar2 = sub.msvcrt.dll_abort();\n    iVar1 = sub.kernel32.dll_VirtualQuery(uVar2, auStack84, 0x1c);\n    if (iVar1 == 0) {\n        fcn.00404690(\"  VirtualQuery failed for %d bytes at address %p\", 0x1c, uVar2);\n        if (*0x40b03c == 0) {\n            *0x40b03c = 1;\n        }\n        return;\n    }\n    if ((iStack64 == 4) || (iStack64 == 0x40)) {\n        sub.msvcrt.dll_memcpy(uVar2, extraout_ECX);\n    }\n    else {\n        sub.kernel32.dll_VirtualProtect(auStack84[0], uStack72, 0x40, &uStack88);\n        sub.msvcrt.dll_memcpy(uVar2, extraout_ECX);\n        if ((iStack64 != 4) && (iStack64 != 0x40)) {\n            sub.kernel32.dll_VirtualProtect(auStack84[0], uStack72, uStack88, &uStack88);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 876
    },
    "004016cc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.004016cc(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    sub.user32.dll_GetWindowThreadProcessId(arg_8h, &var_ch);\n    if ((*0x413290 == var_ch) && (uVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0),  (uVar1 & 0x10000000) != 0)\n       ) {\n        *0x40b00c = 0;\n        sub.user32.dll_ShowWindow(*0x40b074, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 175
    },
    "004025d6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025d6(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    \n    uVar2 = 0xffffffff;\n    pcVar3 = arg_8h;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    if (arg_8h[~uVar2 - 2] != '\\\\') {\n        sub.msvcrt.dll_strcat(arg_8h, 0x408207);\n    }\n    // WARNING: Could not recover jumptable at 0x00406578. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_strcat)();\n    return;\n}\n",
        "token_count": 214
    },
    "004039ec": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "query environment variable",
            "set environment variable"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004039ec(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    char *pcVar8;\n    uchar auStack32795 [32759];\n    uint32_t auStack36 [2];\n    char *apcStack28 [3];\n    uint var_ch;\n    \n    apcStack28[2] = 0x4039fc;\n    iVar2 = fcn.004063d0();\n    iVar2 = -iVar2;\n    puVar7 = &stack0xffff7fe5;\n    for (iVar4 = 0x7fff; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *(&stack0xfffffff8 + iVar2) = 0x7fff;\n    *(&stack0xfffffff4 + iVar2) = &stack0xffff7fe5;\n    *(&fcn.004039ec::var_ch + iVar2) = \"Path\";\n    *(&stack0xffffffec + iVar2) = 0x403a2d;\n    iVar4 = sub.kernel32.dll_GetEnvironmentVariableA();\n    uVar5 = 0xffffffff;\n    pcVar8 = arg_8h;\n    do {\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    uVar6 = 0x7ffe - iVar4;\n    uVar3 = 0;\n    if (~uVar5 - 1 <= uVar6) {\n        *(&stack0xffffffe8 + iVar2) = 0x4083cd;\n        *(&stack0xffffffe4 + iVar2) = &stack0xffff7fe5;\n        *(&stack0xffffffe0 + iVar2) = 0x403a5c;\n        sub.msvcrt.dll_strcat();\n        *(&stack0xffffffe4 + iVar2) = &stack0xffff7fe5;\n        *(&stack0xffffffe8 + iVar2) = arg_8h;\n        *(&stack0xffffffe0 + iVar2) = 0x403a6b;\n        sub.msvcrt.dll_strcat();\n        *(&stack0xffffffe8 + iVar2) = &stack0xffff7fe5;\n        *(&stack0xffffffe4 + iVar2) = \"Path\";\n        *(&stack0xffffffe0 + iVar2) = 0x403a7b;\n        uVar3 = sub.kernel32.dll_SetEnvironmentVariableA();\n        *(&stack0xffffffe0 + iVar2) = uVar6;\n        *(&stack0xffffffdc + iVar2) = uVar6;\n    }\n    return uVar3;\n}\n",
        "token_count": 698
    },
    "004046e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "allocate memory",
            "allocate RW memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004047f9)\n// WARNING: Removing unreachable block (ram,0x004048e7)\n// WARNING: Removing unreachable block (ram,0x00404809)\n// WARNING: Removing unreachable block (ram,0x00404817)\n// WARNING: Removing unreachable block (ram,0x00404821)\n// WARNING: Removing unreachable block (ram,0x004048ec)\n// WARNING: Removing unreachable block (ram,0x004048f2)\n// WARNING: Removing unreachable block (ram,0x004048fd)\n// WARNING: Removing unreachable block (ram,0x00404834)\n// WARNING: Removing unreachable block (ram,0x00404839)\n// WARNING: Removing unreachable block (ram,0x00404997)\n// WARNING: Removing unreachable block (ram,0x004049bb)\n// WARNING: Removing unreachable block (ram,0x004049c0)\n// WARNING: Removing unreachable block (ram,0x004049d7)\n// WARNING: Removing unreachable block (ram,0x004049da)\n// WARNING: Removing unreachable block (ram,0x00404845)\n// WARNING: Removing unreachable block (ram,0x00404854)\n// WARNING: Removing unreachable block (ram,0x00404900)\n// WARNING: Removing unreachable block (ram,0x00404915)\n// WARNING: Removing unreachable block (ram,0x00404918)\n// WARNING: Removing unreachable block (ram,0x00404872)\n// WARNING: Removing unreachable block (ram,0x00404976)\n// WARNING: Removing unreachable block (ram,0x0040487b)\n// WARNING: Removing unreachable block (ram,0x00404884)\n// WARNING: Removing unreachable block (ram,0x00404940)\n// WARNING: Removing unreachable block (ram,0x00404950)\n// WARNING: Removing unreachable block (ram,0x00404953)\n// WARNING: Removing unreachable block (ram,0x004048a0)\n// WARNING: Removing unreachable block (ram,0x004048a5)\n// WARNING: Removing unreachable block (ram,0x004048ad)\n// WARNING: Removing unreachable block (ram,0x004048b0)\n// WARNING: Removing unreachable block (ram,0x004048df)\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid fcn.004046e0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint lpAddress;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_bp_ch;\n    \n    puVar2 = &lpAddress;\n    uVar3 = 0x1c;\n    iVar1 = sub.kernel32.dll_VirtualQuery();\n    if (iVar1 == 0) {\n        fcn.00404690(\"  VirtualQuery failed for %d bytes at address %p\", 0x1c);\n        if (*0x40b03c == 0) {\n            *0x40b03c = 1;\n        }\n        return;\n    }\n    if ((var_20h == 4) || (var_20h == 0x40)) {\n        sub.msvcrt.dll_memcpy();\n    }\n    else {\n        sub.kernel32.dll_VirtualProtect(lpAddress, var_28h, 0x40, &var_38h, puVar2, uVar3);\n        sub.msvcrt.dll_memcpy();\n        if ((var_20h != 4) && (var_20h != 0x40)) {\n            sub.kernel32.dll_VirtualProtect(lpAddress, var_28h, var_38h, &var_38h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 829
    },
    "004063d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.004063d0(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uStack8;\n    \n    puVar2 = &stack0x00000004;\n    uVar1 = in_EAX;\n    if (0xfff < in_EAX) {\n        do {\n            puVar2 = puVar2 + -0x400;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack8 = in_EAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack8;\n}\n",
        "token_count": 173
    },
    "00406400": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00406400(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    \n    if (param_4 == 0) {\n        if (param_2 < param_3) {\n            return CONCAT44(param_2, param_1) / param_3 & 0xffffffff;\n        }\n        if (param_3 == 0) {\n            param_3 = 1 / 0;\n        }\n        uVar6 = param_2 / param_3;\n        iVar7 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        if (param_2 < param_4) {\n            return 0;\n        }\n        uVar6 = 0x1f;\n        if (param_4 != 0) {\n            for (; param_4 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n            }\n        }\n        if ((uVar6 ^ 0x1f) == 0) {\n            uVar6 = 0;\n            if ((param_1 < param_3) && (param_2 <= param_4)) {\n                iVar7 = 0;\n            }\n            else {\n                iVar7 = 1;\n            }\n        }\n        else {\n            uVar5 = uVar6 ^ 0x1f;\n            uVar8 = 0x20 - uVar5;\n            uVar1 = param_3 >> (uVar8 & 0x1f) | param_4 << (uVar5 & 0x1f);\n            uVar2 = CONCAT44(param_2 >> (uVar8 & 0x1f), param_1 >> (uVar8 & 0x1f) | param_2 << (uVar5 & 0x1f));\n            uVar3 = uVar2 / uVar1;\n            iVar7 = uVar3;\n            uVar6 = uVar2 % uVar1;\n            iVar4 = (uVar3 & 0xffffffff) * (param_3 << (uVar5 & 0x1f));\n            uVar9 = iVar4 >> 0x20;\n            if ((uVar6 < uVar9) || ((param_1 << (uVar5 & 0x1f) < iVar4 && (uVar6 == uVar9)))) {\n                return iVar7 - 1;\n            }\n            uVar6 = 0;\n        }\n    }\n    return CONCAT44(uVar6, iVar7);\n}\n",
        "token_count": 641
    },
    "00401cb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401cb3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint dest;\n    \n    puVar2 = &dest;\n    for (iVar1 = 0x41; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    sub.msvcrt.dll_strncpy(&dest, arg_8h, arg_ch);\n    sub.msvcrt.dll_strcat(&dest, \"\\\\launch4j.log\");\n    sub.msvcrt.dll_fopen(&dest, 0x40809f);\n    return;\n}\n",
        "token_count": 157
    },
    "00402158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402158(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_1ch;\n    \n    puVar2 = &var_1ch;\n    for (iVar1 = 5; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040205e(arg_8h, &var_1ch);\n    iVar1 = sub.msvcrt.dll_strcmp(&var_1ch, 0x40816f);\n    return iVar1 == 0;\n}\n",
        "token_count": 149
    },
    "0040219b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040219b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_1ch;\n    \n    puVar2 = &var_1ch;\n    for (iVar1 = 5; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040205e(arg_8h, &var_1ch);\n    sub.msvcrt.dll_atoi(&var_1ch);\n    return;\n}\n",
        "token_count": 136
    },
    "00402d53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d53(uint s1, uint arg_ch)\n\n{\n    sub.msvcrt.dll_strcat(s1, arg_ch);\n    // WARNING: Could not recover jumptable at 0x00406578. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_strcat)();\n    return;\n}\n",
        "token_count": 83
    },
    "00403a85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403a85(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint dest;\n    \n    puVar3 = &dest;\n    for (iVar1 = 0x41; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    sub.msvcrt.dll_strcpy(&dest, 0x40b184);\n    sub.msvcrt.dll_strcat(&dest, 0x408550);\n    iVar1 = fcn.004039ec(&dest);\n    uVar2 = 1;\n    if (iVar1 == 0) {\n        if (*0x40b07c != 0) {\n            sub.msvcrt.dll_fprintf(*0x40b07c, \"Error:\\t\\t%s\\n\", \"appendToPathVar failed.\");\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 224
    },
    "00405180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405180(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_EAX;\n    int32_t iVar4;\n    \n    iVar4 = sub.msvcrt.dll_realloc(*(param_2 + 8), (*(param_2 + 4) + *(param_2 + 0xc)) * 4 + 8);\n    if (iVar4 != 0) {\n        iVar2 = *(param_2 + 4);\n        *(param_2 + 8) = iVar4;\n        iVar3 = *(param_2 + 0xc);\n        iVar1 = iVar2 + 1;\n        *(param_2 + 4) = iVar1;\n        *(iVar4 + (iVar2 + iVar3) * 4) = in_EAX;\n        *(*(param_2 + 8) + (iVar3 + iVar1) * 4) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 233
    },
    "00405210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405210(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX != 0) {\n        fcn.00405210();\n    }\n    fcn.004051f0();\n    if (in_EAX[1] != 0) {\n        fcn.00405210();\n    }\n    sub.msvcrt.dll_free();\n    return;\n}\n",
        "token_count": 87
    },
    "004060d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004060d0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if ((param_1 != 0) && (iVar1 = sub.msvcrt.dll__findclose(*(param_1 + 0x130)),  iVar1 == 0)) {\n        sub.msvcrt.dll_free(param_1);\n        return 0;\n    }\n    puVar2 = sub.msvcrt.dll__errno();\n    *puVar2 = 9;\n    return 0xffffffff;\n}\n",
        "token_count": 120
    },
    "004027bb": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.004027bb(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint hKey;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_11ch;\n    uint var_bp_ch;\n    \n    puVar4 = &var_220h;\n    for (iVar2 = 0x41; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = sub.advapi32.dll_RegOpenKeyExA(0x80000002, arg_8h, 0, arg_ch & 0x100 | 0x20019, &hKey);\n    if (iVar2 == 0) {\n        puVar4 = &var_11ch;\n        for (iVar2 = 0x41; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        iVar3 = 0;\n        var_228h = 0x104;\n        iVar2 = sub.advapi32.dll_RegQueryValueExA(hKey, \"JavaHome\", 0, &var_224h, &var_11ch, &var_228h);\n        if (iVar2 == 0) {\n            do {\n                cVar1 = *(&var_11ch + iVar2);\n                *(&var_220h + iVar2) = cVar1;\n                iVar2 = iVar2 + 1;\n            } while (cVar1 != '\\0');\n            iVar3 = fcn.00402647(&var_220h);\n        }\n        sub.advapi32.dll_RegCloseKey(hKey);\n        if (iVar3 != 0) {\n            sub.msvcrt.dll_strcpy(0x413630, &var_220h);\n            return iVar3;\n        }\n    }\n    *0x4132a8 = 1;\n    return 0;\n}\n",
        "token_count": 498
    },
    "00403124": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "get memory capacity"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00403124(uint arg_8h)\n\n{\n    uint lpBuffer;\n    uint var_38h;\n    uint var_34h;\n    uint var_bp_4h;\n    \n    lpBuffer = 0x40;\n    sub.kernel32.dll_GlobalMemoryStatusEx(&lpBuffer);\n    fcn.00402fd3(arg_8h, 0x19, 0x1a, var_38h, var_34h, \"-Xms\");\n    fcn.00402fd3(arg_8h, 0x1b, 0x1c, var_38h, var_34h, \"-Xmx\");\n    return;\n}\n",
        "token_count": 165
    },
    "0040173c": {
        "rules": [
            "contain loop",
            "find graphical window",
            "get graphical window text"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t fcn.0040173c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_118h;\n    uint var_98h;\n    uint var_bp_ch;\n    \n    puVar3 = &var_98h;\n    for (iVar2 = 0x20; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = fcn.0040205e(0x18, &var_98h);\n    if (iVar2 != 0) {\n        for (iVar2 = sub.user32.dll_FindWindowExA(0, 0, 0, 0); iVar2 != 0;\n            iVar2 = sub.user32.dll_FindWindowExA(0, iVar2, 0, 0)) {\n            sub.user32.dll_GetWindowTextA(iVar2, &var_118h, 0x7f);\n            iVar1 = sub.msvcrt.dll_strstr(&var_118h, &var_98h);\n            if (iVar1 != 0) {\n                return iVar2;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 295
    },
    "00403b03": {
        "rules": [
            "contain loop",
            "set environment variable"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00403b03(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    uchar auStack65563 [32767];\n    uint auStack32796 [8194];\n    uint uStack20;\n    uint var_ch;\n    \n    uStack20 = 0x403b13;\n    iVar1 = fcn.004063d0();\n    iVar1 = -iVar1;\n    puVar5 = &stack0xffff7fe4;\n    for (iVar3 = 0x2000; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    puVar6 = &stack0xfffeffe5;\n    for (iVar3 = 0x7fff; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *(&stack0xfffffff4 + iVar1) = &stack0xfffeffe5;\n    *(&fcn.00403b03::var_ch + iVar1) = 0x13;\n    *(&stack0xffffffec + iVar1) = 0x403b46;\n    fcn.0040205e(*(&fcn.00403b03::var_ch + iVar1), *(&stack0xfffffff4 + iVar1));\n    *(&fcn.00403b03::var_ch + iVar1) = &stack0xfffeffe5;\n    *(&stack0xfffffff4 + iVar1) = 0x4085cd;\n    *(&stack0xffffffec + iVar1) = 0x403b5c;\n    iVar3 = sub.msvcrt.dll_strtok();\n    piVar4 = &fcn.00403b03::var_ch + iVar1;\n    while (iVar3 != 0) {\n        piVar4[1] = 0x3d;\n        *piVar4 = iVar3;\n        piVar4[-1] = 0x403b72;\n        puVar2 = sub.msvcrt.dll_strchr();\n        *puVar2 = 0;\n        piVar4[3] = arg_ch;\n        piVar4[1] = puVar2 + 1;\n        *piVar4 = &stack0xffff7fe4;\n        auStack32796[0]._0_1_ = 0;\n        piVar4[2] = arg_8h;\n        piVar4[-1] = 0x403b97;\n        fcn.00402d80(*piVar4, piVar4[1], piVar4[2], piVar4[3]);\n        if (*0x40b07c != 0) {\n            piVar4[3] = &stack0xffff7fe4;\n            piVar4[2] = iVar3;\n            piVar4[1] = \"Set var:\\t%s = %s\\n\";\n            *piVar4 = *0x40b07c;\n            piVar4[-1] = 0x403bb8;\n            sub.msvcrt.dll_fprintf();\n        }\n        *piVar4 = iVar3;\n        piVar4[1] = &stack0xffff7fe4;\n        piVar4[-1] = 0x403bc4;\n        sub.kernel32.dll_SetEnvironmentVariableA();\n        piVar4[-1] = puVar6;\n        piVar4[-2] = puVar6;\n        piVar4[-1] = 0x4085cd;\n        piVar4[-2] = 0;\n        piVar4[-3] = 0x403bda;\n        iVar3 = sub.msvcrt.dll_strtok();\n        piVar4 = piVar4 + -2;\n    }\n    return;\n}\n",
        "token_count": 910
    },
    "00401d2a": {
        "rules": [
            "query environment variable"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401d2a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar auStack32795 [32763];\n    int32_t aiStack32 [2];\n    char *apcStack24 [2];\n    uint var_ch;\n    \n    apcStack24[1] = 0x401d3a;\n    iVar2 = fcn.004063d0();\n    iVar2 = -iVar2;\n    puVar4 = &stack0xffff7fe5;\n    for (iVar3 = 0x7fff; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *(&stack0xfffffff8 + iVar2) = 0x7fff;\n    *(&stack0xfffffff4 + iVar2) = &stack0xffff7fe5;\n    *(&fcn.00401d2a::var_ch + iVar2) = \"Launch4j\";\n    *(&stack0xffffffec + iVar2) = 0x401d6f;\n    sub.kernel32.dll_GetEnvironmentVariableA();\n    *(&stack0xffffffe8 + iVar2) = \"--l4j-debug\";\n    *(&stack0xffffffe4 + iVar2) = arg_8h;\n    *(&stack0xffffffe0 + iVar2) = 0x401d82;\n    iVar3 = sub.msvcrt.dll_strstr();\n    if (iVar3 == 0) {\n        *(&stack0xffffffe8 + iVar2) = \"debug\";\n        *(&stack0xffffffe4 + iVar2) = &stack0xffff7fe5;\n        *(&stack0xffffffe0 + iVar2) = 0x401d96;\n        iVar3 = sub.msvcrt.dll_strstr();\n        uVar1 = *0x40b020;\n        if (iVar3 == 0) goto code_r0x00401de8;\n    }\n    *(&stack0xffffffe4 + iVar2) = arg_ch;\n    *(&stack0xffffffe8 + iVar2) = arg_10h;\n    *(&stack0xffffffe0 + iVar2) = 0x401da9;\n    *0x40b07c = fcn.00401cb3(*(&stack0xffffffe4 + iVar2), *(&stack0xffffffe8 + iVar2));\n    if (*0x40b07c == 0) {\n        return 0;\n    }\n    *(&stack0xffffffe8 + iVar2) = \"--l4j-debug-all\";\n    *(&stack0xffffffe4 + iVar2) = arg_8h;\n    *(&stack0xffffffe0 + iVar2) = 0x401dc2;\n    iVar3 = sub.msvcrt.dll_strstr();\n    uVar1 = 1;\n    if (iVar3 == 0) {\n        *(&stack0xffffffe8 + iVar2) = \"debug-all\";\n        *(&stack0xffffffe4 + iVar2) = &stack0xffff7fe5;\n        *(&stack0xffffffe0 + iVar2) = 0x401ddb;\n        iVar3 = sub.msvcrt.dll_strstr();\n        uVar1 = iVar3 != 0;\n    }\ncode_r0x00401de8:\n    *0x40b020 = uVar1;\n    if (*0x40b07c != 0) {\n        *(&stack0xffffffec + iVar2) = \"3.14\";\n        *(&stack0xffffffe8 + iVar2) = \"\\n\\nVersion:\\t%s\\n\";\n        *(&stack0xffffffe4 + iVar2) = *0x40b07c;\n        *(&stack0xffffffe0 + iVar2) = 0x401e09;\n        sub.msvcrt.dll_fprintf();\n    }\n    if (*0x40b07c != 0) {\n        *(&fcn.00401d2a::var_ch + iVar2) = arg_8h;\n        *(&stack0xffffffec + iVar2) = arg_ch;\n        *(&stack0xffffffe8 + iVar2) = \"CmdLine:\\t%s %s\\n\";\n        *(&stack0xffffffe4 + iVar2) = *0x40b07c;\n        *(&stack0xffffffe0 + iVar2) = 0x401e2a;\n        sub.msvcrt.dll_fprintf();\n    }\n    return 1;\n}\n",
        "token_count": 1038
    },
    "004033da": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004033da(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_210h;\n    uint var_10ch;\n    uint var_8h;\n    \n    puVar2 = &var_210h;\n    for (iVar1 = 0x41; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    puVar2 = &var_10ch;\n    for (iVar1 = 0x41; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    sub.kernel32.dll_GetCurrentDirectoryA(0x104, 0x413734);\n    iVar1 = fcn.0040205e(8, &var_10ch);\n    if (iVar1 != 0) {\n        sub.msvcrt.dll_strncpy(&var_210h, arg_8h, arg_ch);\n        fcn.004025d6(&var_210h, &var_10ch);\n        sub.msvcrt.dll__chdir(&var_210h);\n        if (*0x40b07c != 0) {\n            sub.msvcrt.dll_fprintf(*0x40b07c, \"Working dir:\\t%s\\n\", &var_210h);\n        }\n    }\n    return;\n}\n",
        "token_count": 354
    }
}