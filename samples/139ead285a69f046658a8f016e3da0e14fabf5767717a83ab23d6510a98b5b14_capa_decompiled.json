{
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffc164 : 0x0044862a\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Heritage AFTER dead removal. Example location: s0xffffffdc : 0x0044907b\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nentry0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n      uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13, \n      uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, uint noname_20, \n      uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, uint noname_26, uint noname_27, \n      uint noname_28, uint noname_29, uint noname_30, uint noname_31, uint noname_32, uint noname_33, uint noname_34, \n      uint noname_35, uint noname_36, uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, \n      uint noname_42, uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, \n      uint noname_49, uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n      uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, uint noname_62, \n      uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, uint noname_68, uint noname_69, \n      uint noname_70, uint noname_71, uint noname_72, uint noname_73, uint noname_74, uint noname_75, uint noname_76, \n      uint noname_77, uint noname_78, uint noname_79, uint noname_80, uint noname_81, uint noname_82, uint noname_83, \n      uint noname_84, uint noname_85, uint noname_86, uint noname_87, uint noname_88, uint noname_89, uint noname_90, \n      uint noname_91, uint noname_92, uint noname_93, uint arg_180h, uint noname_95, uint noname_96, uint noname_97, \n      uint noname_98, uint noname_99, uint arg_198h, uint noname_101, uint noname_102, uint noname_103, uint noname_104\n      , uint noname_105, uint arg_1b0h, uint noname_107, uint noname_108, uint noname_109, uint noname_110, \n      uint noname_111, uint arg_1c8h, uint noname_113, uint noname_114, uint noname_115, uint noname_116, \n      uint noname_117, uint arg_1e0h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    int32_t *piVar14;\n    uchar *puVar15;\n    uchar *puVar17;\n    uint *puVar19;\n    uint *puVar20;\n    uint *puVar21;\n    uint *puVar22;\n    uchar *puVar23;\n    uint16_t *puVar24;\n    uint32_t uVar25;\n    uint8_t *puVar26;\n    uint32_t uVar27;\n    int32_t *piVar28;\n    int32_t *piVar29;\n    int32_t *piVar30;\n    uint *puVar31;\n    ushort in_ES;\n    uint var_1h;\n    uchar auStack16036 [12];\n    uint16_t auStack16024 [192];\n    uint16_t auStack15640 [12];\n    uint16_t auStack15616 [12];\n    uint16_t auStack15592 [12];\n    uint16_t auStack15568 [204];\n    uint16_t auStack15160 [370];\n    ushort auStack14420 [16];\n    uint16_t auStack14388 [514];\n    uint16_t auStack13360 [514];\n    uint16_t auStack12332 [256];\n    uint16_t auStack11820 [5746];\n    uchar auStack328 [116];\n    uint32_t uStack212;\n    ushort *puStack208;\n    uint16_t *puStack196;\n    uint32_t uStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t iStack164;\n    uint32_t uStack148;\n    uint32_t uStack140;\n    uint32_t uStack132;\n    uint32_t uStack128;\n    uint32_t uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    uint8_t uStack97;\n    uint32_t uStack96;\n    uint8_t *puStack64;\n    uint uStack40;\n    int32_t iStack36;\n    uchar *puVar16;\n    uint *puVar18;\n    \n    do {\n    } while (&stack0xffffffdc != &stack0xffffc15c);\n    puStack64 = 0x41e002;\n    uStack96 = 0;\n    uStack97 = 0;\n    uStack116 = 0;\n    uStack120 = 1;\n    uStack124 = 1;\n    uStack128 = 1;\n    uStack132 = 1;\n    iVar11 = 0x1f36;\n    puVar7 = &stack0xffffc168;\n    do {\n        *puVar7 = 0x400;\n        puVar7 = puVar7 + 1;\n        iVar11 = iVar11 + -1;\n    } while (iVar11 != 0);\n    uVar27 = 0;\n    uStack140 = 0xffffffff;\n    iVar11 = 0;\n    do {\n        if (puStack64 == 0x448596) goto code_r0x0044905a;\n        uVar3 = *puStack64;\n        iVar11 = iVar11 + 1;\n        puStack64 = puStack64 + 1;\n        uVar27 = uVar27 << 8 | uVar3;\n    } while (iVar11 < 5);\ncode_r0x004486d7:\n    uVar12 = uStack132;\n    uVar25 = uStack96 & 3;\n    puVar24 = &stack0xffffc168 + (uStack116 * 0x10 + uVar25) * 2;\n    if (uStack140 < 0x1000000) {\n        if (puStack64 == 0x448596) goto code_r0x0044905a;\n        uStack140 = uStack140 << 8;\n        uVar3 = *puStack64;\n        puStack64 = puStack64 + 1;\n        uVar27 = uVar27 << 8 | uVar3;\n    }\n    uVar4 = *puVar24;\n    uVar8 = (uStack140 >> 0xb) * uVar4;\n    if (uVar27 < uVar8) {\n        iVar11 = 1;\n        *puVar24 = uVar4 + (0x800 - uVar4 >> 5);\n        iVar9 = (uStack97 >> 5) * 0x600 + -0x302c;\n        uStack140 = uVar8;\n        if (uStack116 < 7) goto code_r0x00448852;\n        uStack148 = *((uStack96 - uStack120) + 0x401000);\n        do {\n            uStack148 = uStack148 << 1;\n            iVar11 = iVar11 * 2;\n            uVar12 = uStack148 & 0x100;\n            iVar6 = iVar11 + uVar12 * 2 + iVar9;\n            if (uStack140 < 0x1000000) {\n                if (puStack64 == 0x448596) goto code_r0x0044905a;\n                uStack140 = uStack140 << 8;\n                uVar3 = *puStack64;\n                puStack64 = puStack64 + 1;\n                uVar27 = uVar27 << 8 | uVar3;\n            }\n            uVar4 = *(&stack0xffffd1d4 + iVar6 + 0x302c);\n            uVar25 = (uStack140 >> 0xb) * uVar4;\n            if (uVar27 < uVar25) {\n                *(&stack0xffffd1d4 + iVar6 + 0x302c) = uVar4 + (0x800 - uVar4 >> 5);\n                uStack140 = uVar25;\n                if (uVar12 != 0) goto code_r0x0044884a;\n            }\n            else {\n                uStack140 = uStack140 - uVar25;\n                uVar27 = uVar27 - uVar25;\n                iVar11 = iVar11 + 1;\n                *(&stack0xffffd1d4 + iVar6 + 0x302c) = uVar4 - (uVar4 >> 5);\n                if (uVar12 == 0) goto code_r0x0044884a;\n            }\n        } while (iVar11 < 0x100);\n        goto code_r0x004488c3;\n    }\n    uVar27 = uVar27 - uVar8;\n    uStack140 = uStack140 - uVar8;\n    *puVar24 = uVar4 - (uVar4 >> 5);\n    iVar11 = uStack116 * 2;\n    if (uStack140 < 0x1000000) {\n        if (puStack64 == 0x448596) goto code_r0x0044905a;\n        uVar3 = *puStack64;\n        uStack140 = uStack140 * 0x100;\n        puStack64 = puStack64 + 1;\n        uVar27 = uVar27 * 0x100 | uVar3;\n    }\n    uVar4 = *(&stack0xffffc2e8 + iVar11);\n    uVar8 = (uStack140 >> 0xb) * uVar4;\n    if (uVar27 < uVar8) {\n        uStack132 = uStack128;\n        *(&stack0xffffc2e8 + iVar11) = uVar4 + (0x800 - uVar4 >> 5);\n        uStack128 = uStack124;\n        uStack124 = uStack120;\n        puStack196 = &stack0xffffc7cc;\n        uStack116 = (6 < uStack116) * 3;\ncode_r0x00448c2e:\n        if (uVar8 < 0x1000000) {\n            if (puStack64 == 0x448596) goto code_r0x0044905a;\n            uVar3 = *puStack64;\n            uVar8 = uVar8 << 8;\n            puStack64 = puStack64 + 1;\n            uVar27 = uVar27 << 8 | uVar3;\n        }\n        uVar4 = *puStack196;\n        uStack140 = (uVar8 >> 0xb) * uVar4;\n        if (uVar27 < uStack140) {\n            iStack168 = 0;\n            *puStack196 = uVar4 + (0x800 - uVar4 >> 5);\n            iVar11 = uVar25 * 8 + 2;\ncode_r0x00448cff:\n            puStack196 = puStack196 + iVar11;\n            iStack164 = 3;\n        }\n        else {\n            uVar8 = uVar8 - uStack140;\n            uVar27 = uVar27 - uStack140;\n            *puStack196 = uVar4 - (uVar4 >> 5);\n            if (uVar8 < 0x1000000) {\n                if (puStack64 == 0x448596) goto code_r0x0044905a;\n                uVar3 = *puStack64;\n                uVar8 = uVar8 * 0x100;\n                puStack64 = puStack64 + 1;\n                uVar27 = uVar27 * 0x100 | uVar3;\n            }\n            uVar4 = puStack196[1];\n            uVar12 = (uVar8 >> 0xb) * uVar4;\n            if (uVar27 < uVar12) {\n                iStack168 = 8;\n                puStack196[1] = uVar4 + (0x800 - uVar4 >> 5);\n                iVar11 = uVar25 * 8 + 0x82;\n                uStack140 = uVar12;\n                goto code_r0x00448cff;\n            }\n            uStack140 = uVar8 - uVar12;\n            uVar27 = uVar27 - uVar12;\n            iStack168 = 0x10;\n            iStack164 = 8;\n            puStack196[1] = uVar4 - (uVar4 >> 5);\n            puStack196 = puStack196 + 0x102;\n        }\n        iStack172 = iStack164;\n        iVar11 = 1;\n        do {\n            iVar9 = iVar11 * 2;\n            puVar24 = puStack196 + iVar11;\n            if (uStack140 < 0x1000000) {\n                if (puStack64 == 0x448596) goto code_r0x0044905a;\n                uStack140 = uStack140 << 8;\n                uVar3 = *puStack64;\n                puStack64 = puStack64 + 1;\n                uVar27 = uVar27 << 8 | uVar3;\n            }\n            uVar4 = *puVar24;\n            uVar12 = (uStack140 >> 0xb) * uVar4;\n            if (uVar27 < uVar12) {\n                *puVar24 = uVar4 + (0x800 - uVar4 >> 5);\n                uStack140 = uVar12;\n            }\n            else {\n                uStack140 = uStack140 - uVar12;\n                uVar27 = uVar27 - uVar12;\n                *puVar24 = uVar4 - (uVar4 >> 5);\n                iVar9 = iVar9 + 1;\n            }\n            iStack172 = iStack172 + -1;\n            iVar11 = iVar9;\n        } while (iStack172 != 0);\n        iStack168 = (iVar9 - (1 << iStack164)) + iStack168;\n        if (uStack116 < 4) {\n            uStack116 = uStack116 + 7;\n            iVar11 = iStack168;\n            if (3 < iStack168) {\n                iVar11 = 3;\n            }\n            iStack176 = 6;\n            iVar9 = 1;\n            do {\n                iVar9 = iVar9 * 2;\n                puVar24 = &stack0xffffc4c8 + iVar9 + iVar11 * 0x80;\n                if (uStack140 < 0x1000000) {\n                    if (puStack64 == 0x448596) goto code_r0x0044905a;\n                    uStack140 = uStack140 << 8;\n                    uVar3 = *puStack64;\n                    puStack64 = puStack64 + 1;\n                    uVar27 = uVar27 << 8 | uVar3;\n                }\n                uVar4 = *puVar24;\n                uVar12 = (uStack140 >> 0xb) * uVar4;\n                if (uVar27 < uVar12) {\n                    *puVar24 = uVar4 + (0x800 - uVar4 >> 5);\n                    uStack140 = uVar12;\n                }\n                else {\n                    uStack140 = uStack140 - uVar12;\n                    uVar27 = uVar27 - uVar12;\n                    iVar9 = iVar9 + 1;\n                    *puVar24 = uVar4 - (uVar4 >> 5);\n                }\n                iStack176 = iStack176 + -1;\n            } while (iStack176 != 0);\n            uVar12 = iVar9 - 0x40;\n            uStack212 = uVar12;\n            if (3 < uVar12) {\n                iStack180 = (uVar12 >> 1) + -1;\n                uStack212 = uVar12 & 1 | 2;\n                if (uVar12 < 0xe) {\n                    uStack212 = uStack212 << (iStack180 & 0x1f);\n                    puStack208 = &stack0xffffc168 + (uStack212 + (0x2af - uVar12)) * 2;\n                }\n                else {\n                    iVar11 = (uVar12 >> 1) + -5;\n                    do {\n                        if (uStack140 < 0x1000000) {\n                            if (puStack64 == 0x448596) goto code_r0x0044905a;\n                            uStack140 = uStack140 << 8;\n                            uVar3 = *puStack64;\n                            puStack64 = puStack64 + 1;\n                            uVar27 = uVar27 << 8 | uVar3;\n                        }\n                        uStack140 = uStack140 >> 1;\n                        uStack212 = uStack212 * 2;\n                        if (uStack140 <= uVar27) {\n                            uVar27 = uVar27 - uStack140;\n                            uStack212 = uStack212 | 1;\n                        }\n                        iVar11 = iVar11 + -1;\n                    } while (iVar11 != 0);\n                    uStack212 = uStack212 << 4;\n                    puStack208 = &stack0xffffc7ac;\n                    iStack180 = 4;\n                }\n                uStack184 = 1;\n                iVar11 = 1;\n                do {\n                    iVar9 = iVar11 * 2;\n                    puVar24 = puStack208 + iVar11;\n                    if (uStack140 < 0x1000000) {\n                        if (puStack64 == 0x448596) goto code_r0x0044905a;\n                        uStack140 = uStack140 << 8;\n                        uVar3 = *puStack64;\n                        puStack64 = puStack64 + 1;\n                        uVar27 = uVar27 << 8 | uVar3;\n                    }\n                    uVar4 = *puVar24;\n                    uVar12 = (uStack140 >> 0xb) * uVar4;\n                    if (uVar27 < uVar12) {\n                        *puVar24 = uVar4 + (0x800 - uVar4 >> 5);\n                        uStack140 = uVar12;\n                    }\n                    else {\n                        uStack140 = uStack140 - uVar12;\n                        uVar27 = uVar27 - uVar12;\n                        *puVar24 = uVar4 - (uVar4 >> 5);\n                        iVar9 = iVar9 + 1;\n                        uStack212 = uStack212 | uStack184;\n                    }\n                    uStack184 = uStack184 << 1;\n                    iStack180 = iStack180 + -1;\n                    iVar11 = iVar9;\n                } while (iStack180 != 0);\n            }\n            uStack120 = uStack212 + 1;\n            if (uStack120 == 0) goto code_r0x0044905a;\n        }\n        iStack168 = iStack168 + 2;\n        if (uStack120 <= uStack96) {\n            puVar13 = uStack96 + 0x401000;\n            puVar26 = (0x401000 - uStack120) + uStack96;\n            while( true ) {\n                uStack97 = *puVar26;\n                puVar26 = puVar26 + 1;\n                *puVar13 = uStack97;\n                puVar13 = puVar13 + 1;\n                uStack96 = uStack96 + 1;\n                iStack168 = iStack168 + -1;\n                if (iStack168 == 0) break;\n                if (0x46774 < uStack96) goto code_r0x0044905a;\n            }\n            goto code_r0x0044900b;\n        }\n        goto code_r0x0044905a;\n    }\n    uVar27 = uVar27 - uVar8;\n    uStack140 = uStack140 - uVar8;\n    *(&stack0xffffc2e8 + iVar11) = uVar4 - (uVar4 >> 5);\n    if (uStack140 < 0x1000000) {\n        if (puStack64 == 0x448596) goto code_r0x0044905a;\n        uVar3 = *puStack64;\n        uStack140 = uStack140 * 0x100;\n        puStack64 = puStack64 + 1;\n        uVar27 = uVar27 * 0x100 | uVar3;\n    }\n    uVar4 = *(&stack0xffffc300 + iVar11);\n    uVar8 = (uStack140 >> 0xb) * uVar4;\n    if (uVar8 <= uVar27) {\n        uStack140 = uStack140 - uVar8;\n        uVar27 = uVar27 - uVar8;\n        *(&stack0xffffc300 + iVar11) = uVar4 - (uVar4 >> 5);\n        if (uStack140 < 0x1000000) {\n            if (puStack64 == 0x448596) goto code_r0x0044905a;\n            uVar3 = *puStack64;\n            uStack140 = uStack140 * 0x100;\n            puStack64 = puStack64 + 1;\n            uVar27 = uVar27 * 0x100 | uVar3;\n        }\n        uVar4 = *(&stack0xffffc318 + iVar11);\n        uVar8 = (uStack140 >> 0xb) * uVar4;\n        if (uVar27 < uVar8) {\n            *(&stack0xffffc318 + iVar11) = uVar4 + (0x800 - uVar4 >> 5);\n            uVar12 = uStack124;\n        }\n        else {\n            uVar27 = uVar27 - uVar8;\n            uStack140 = uStack140 - uVar8;\n            *(&stack0xffffc318 + iVar11) = uVar4 - (uVar4 >> 5);\n            if (uStack140 < 0x1000000) {\n                if (puStack64 == 0x448596) goto code_r0x0044905a;\n                uVar3 = *puStack64;\n                uStack140 = uStack140 * 0x100;\n                puStack64 = puStack64 + 1;\n                uVar27 = uVar27 * 0x100 | uVar3;\n            }\n            uVar4 = *(&stack0xffffc330 + iVar11);\n            uVar8 = (uStack140 >> 0xb) * uVar4;\n            if (uVar27 < uVar8) {\n                *(&stack0xffffc330 + iVar11) = uVar4 + (0x800 - uVar4 >> 5);\n                uVar12 = uStack128;\n            }\n            else {\n                uVar27 = uVar27 - uVar8;\n                uVar8 = uStack140 - uVar8;\n                *(&stack0xffffc330 + iVar11) = uVar4 - (uVar4 >> 5);\n                uStack132 = uStack128;\n            }\n            uStack128 = uStack124;\n        }\n        uStack124 = uStack120;\n        uStack120 = uVar12;\ncode_r0x00448c12:\n        puStack196 = &stack0xffffcbd0;\n        uStack116 = (6 < uStack116) * 3 + 8;\n        goto code_r0x00448c2e;\n    }\n    *(&stack0xffffc300 + iVar11) = uVar4 + (0x800 - uVar4 >> 5);\n    if (uVar8 < 0x1000000) {\n        if (puStack64 == 0x448596) goto code_r0x0044905a;\n        uVar3 = *puStack64;\n        uVar8 = uVar8 * 0x100;\n        puStack64 = puStack64 + 1;\n        uVar27 = uVar27 << 8 | uVar3;\n    }\n    uVar4 = *(&stack0xffffc168 + (uStack116 * 0x10 + uVar25 + 0xf0) * 2);\n    uStack140 = (uVar8 >> 0xb) * uVar4;\n    if (uStack140 <= uVar27) {\n        uVar8 = uVar8 - uStack140;\n        uVar27 = uVar27 - uStack140;\n        *(&stack0xffffc168 + (uStack116 * 0x10 + uVar25 + 0xf0) * 2) = uVar4 - (uVar4 >> 5);\n        goto code_r0x00448c12;\n    }\n    *(&stack0xffffc168 + (uStack116 * 0x10 + uVar25 + 0xf0) * 2) = uVar4 + (0x800 - uVar4 >> 5);\n    if (uStack96 == 0) goto code_r0x0044905a;\n    uStack116 = (6 < uStack116) * 2 + 9;\n    uStack97 = *((uStack96 - uStack120) + 0x401000);\n    *(uStack96 + 0x401000) = uStack97;\n    uStack96 = uStack96 + 1;\ncode_r0x0044900b:\n    if (0x46774 < uStack96) {\ncode_r0x0044905a:\n        puVar15 = &stack0xffffffdc;\n        do {\n            puVar16 = puVar15 + -4;\n            *(puVar15 + -4) = 0;\n            puVar15 = puVar15 + -4;\n        } while (puVar16 != &stack0xfffffeb8);\n        puVar17 = &stack0xffffffe0;\n        piVar28 = iStack36 + 0x45000;\n        do {\n            iVar11 = *piVar28;\n            if (iVar11 == 0) {\ncode_r0x004490c4:\n                pcVar5 = *(iStack36 + 0x494c0);\n                *(puVar17 + -4) = iVar11;\n                *(puVar17 + -8) = puVar17 + -4;\n                *(puVar17 + -0xc) = 4;\n                *(puVar17 + -0x10) = 0x1000;\n                *(puVar17 + -0x14) = iStack36 + -0x1000;\n                puVar21 = puVar17 + -0x18;\n                *(puVar17 + -0x18) = 0x4490dd;\n                (*pcVar5)();\n                *(iStack36 + -0xe01) = *(iStack36 + -0xe01) & 0x7f;\n                *(iStack36 + -0xdd9) = *(iStack36 + -0xdd9) & 0x7f;\n                uVar10 = *puVar21;\n                *puVar21 = uVar10;\n                puVar21[-1] = puVar21;\n                puVar21[-2] = uVar10;\n                puVar21[-3] = 0x1000;\n                puVar21[-4] = iStack36 + -0x1000;\n                puVar22 = puVar21 + -5;\n                puVar21[-5] = 0x4490f2;\n                (*pcVar5)();\n                puVar31 = *(puVar22 + 4);\n                uVar10 = *(puVar22 + 0x18);\n                iVar11 = *(puVar22 + 0x1c);\n                puVar15 = puVar22 + 0x24;\n                do {\n                    puVar23 = puVar15;\n                    *(puVar23 + -4) = 0;\n                    puVar15 = puVar23 + -4;\n                } while (puVar23 + -4 != puVar22 + -0x5c);\n                *(puVar23 + 0x78) = in_ES;\n                uVar10 = in(uVar10);\n                *puVar31 = uVar10;\n                uVar27 = iVar11 - 1;\n    // WARNING: Could not recover jumptable at 0x0043e6a7. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**((uVar27 & 0xffff0000 | CONCAT11((uVar27 >> 8) - *(puVar31 + 1), uVar27)) + 0xa90b3975))();\n                return;\n            }\n            piVar14 = piVar28[1] + iStack36;\n            *(puVar17 + -4) = iVar11 + 0x493fc + iStack36;\n            piVar30 = piVar28 + 2;\n            pcVar5 = *(iStack36 + 0x494b4);\n            puVar18 = puVar17 + -8;\n            puVar17 = puVar17 + -8;\n            *puVar18 = 0x44909e;\n            uVar10 = (*pcVar5)();\n            while( true ) {\n                cVar2 = *piVar30;\n                piVar28 = piVar30 + 1;\n                if (cVar2 == '\\0') break;\n                *(puVar17 + -4) = piVar28;\n                piVar29 = piVar28;\n                do {\n                    piVar30 = piVar29;\n                    if (piVar28 == NULL) break;\n                    piVar28 = piVar28 + -1;\n                    piVar30 = piVar29 + 1;\n                    cVar1 = *piVar29;\n                    piVar29 = piVar30;\n                } while (cVar2 + -1 != cVar1);\n                *(puVar17 + -8) = uVar10;\n                pcVar5 = *(iStack36 + 0x494bc);\n                puVar19 = puVar17 + -0xc;\n                puVar17 = puVar17 + -0xc;\n                *puVar19 = 0x4490b3;\n                iVar11 = (*pcVar5)();\n                if (iVar11 == 0) {\n                    pcVar5 = *(iStack36 + 0x494b8);\n                    puVar20 = puVar17 + -4;\n                    puVar17 = puVar17 + -4;\n                    *puVar20 = 0x4490c4;\n                    iVar11 = (*pcVar5)();\n                    goto code_r0x004490c4;\n                }\n                *piVar14 = iVar11;\n                piVar14 = piVar14 + 1;\n            }\n        } while( true );\n    }\n    goto code_r0x004486d7;\ncode_r0x0044884a:\n    if (iVar11 < 0x100) {\ncode_r0x00448852:\n        iVar11 = iVar11 * 2;\n        puVar24 = &stack0xffffcfd4 + iVar11 + iVar9 + 0x302c;\n        if (uStack140 < 0x1000000) {\n            if (puStack64 == 0x448596) goto code_r0x0044905a;\n            uStack140 = uStack140 << 8;\n            uVar3 = *puStack64;\n            puStack64 = puStack64 + 1;\n            uVar27 = uVar27 << 8 | uVar3;\n        }\n        uVar4 = *puVar24;\n        uVar12 = (uStack140 >> 0xb) * uVar4;\n        if (uVar27 < uVar12) {\n            *puVar24 = uVar4 + (0x800 - uVar4 >> 5);\n            uStack140 = uVar12;\n        }\n        else {\n            uVar27 = uVar27 - uVar12;\n            iVar11 = iVar11 + 1;\n            *puVar24 = uVar4 - (uVar4 >> 5);\n            uStack140 = uStack140 - uVar12;\n        }\n        goto code_r0x0044884a;\n    }\ncode_r0x004488c3:\n    uStack97 = iVar11;\n    *(uStack96 + 0x401000) = uStack97;\n    uStack96 = uStack96 + 1;\n    if (uStack116 < 4) {\n        uStack116 = 0;\n    }\n    else if (uStack116 < 10) {\n        uStack116 = uStack116 - 3;\n    }\n    else {\n        uStack116 = uStack116 - 6;\n    }\n    goto code_r0x0044900b;\n}\n",
        "token_count": 7588
    }
}