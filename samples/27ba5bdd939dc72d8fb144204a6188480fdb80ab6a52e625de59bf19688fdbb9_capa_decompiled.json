{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl method.CCab.virtual_0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.004010a5();\n    if ((arg_8h & 1) != 0) {\n        fcn.004056eb(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00401134": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401134(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406100(0x423b18, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040b0fe();\n        *puVar1 = 0;\n        puVar1 = fcn.0040b111();\n        *puVar1 = 9;\n        goto code_r0x00409830;\n    }\n    if ((lpCriticalSection < 0) || (*0x4273f0 <= lpCriticalSection)) {\ncode_r0x00409815:\n        puVar1 = fcn.0040b0fe();\n        *puVar1 = 0;\n        puVar1 = fcn.0040b111();\n        *puVar1 = 9;\n    }\n    else {\n        iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n        *(unaff_EBP + -0x20) = iVar3;\n        if ((*(*((lpCriticalSection >> 6) * 4 + 0x4271f0) + 0x28 + iVar3) & 1) == 0) goto code_r0x00409815;\n        if (*(unaff_EBP + 0x10) < 0x80000000) {\n            fcn.0040d517(lpCriticalSection);\n            *(unaff_EBP + -0x1c) = 0xffffffff;\n            *(unaff_EBP + -4) = 0;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x4271f0) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                puVar1 = fcn.0040b111();\n                *puVar1 = 9;\n                puVar1 = fcn.0040b0fe();\n                *puVar1 = 0;\n            }\n            else {\n                uVar2 = fcn.00409836(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040980d();\n            goto code_r0x00409830;\n        }\n        puVar1 = fcn.0040b0fe();\n        *puVar1 = 0;\n        puVar1 = fcn.0040b111();\n        *puVar1 = 0x16;\n    }\n    fcn.0040b35f();\ncode_r0x00409830:\n    fcn.00406146();\n    return;\n}\n",
        "token_count": 702
    },
    "0040a6f5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a6f5(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_4h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.0040b0fe();\n        *puVar1 = 0;\n        puVar1 = fcn.0040b111();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x4273f0)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x4271f0) + 0x28 + (arg_8h & 0x3f) * 0x30) & 1) != 0)) {\n            var_4h = &arg_8h;\n            uVar2 = fcn.0040a6cd(arg_8h, &var_4h);\n            return uVar2;\n        }\n        puVar1 = fcn.0040b0fe();\n        *puVar1 = 0;\n        puVar1 = fcn.0040b111();\n        *puVar1 = 9;\n        fcn.0040b35f();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 300
    },
    "0040a64b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a64b(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00406100();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0040d517(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x4271f0) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) == 0) {\n        puVar2 = fcn.0040b111();\n        *puVar2 = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.0040a774(arg_8h_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040a6c1(0x423b78, noname_1, unaff_retaddr);\n    fcn.00406146();\n    return;\n}\n",
        "token_count": 379
    },
    "0040ada0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ada0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406100(0x423b98, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040b0fe();\n        *puVar1 = 0;\n        puVar1 = fcn.0040b111();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x4273f0)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x4271f0) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0040d517(lpCriticalSection);\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x4271f0) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.0040b111();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0040b0fe();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.0040ae8c(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040ae62();\n                goto code_r0x0040ae85;\n            }\n        }\n        puVar1 = fcn.0040b0fe();\n        *puVar1 = 0;\n        puVar1 = fcn.0040b111();\n        *puVar1 = 9;\n        fcn.0040b35f();\n    }\ncode_r0x0040ae85:\n    fcn.00406146();\n    return;\n}\n",
        "token_count": 613
    },
    "0040b85a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040b85a(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0040b111();\n        *puVar1 = 0x16;\n        fcn.0040b35f();\n        goto code_r0x0040b9b1;\n    }\n    fcn.0040b3bf(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0040bcd1(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.0040c042();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0040b986;\ncode_r0x0040b9d6:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0040b9d6;\n                    goto code_r0x0040b986;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0040b986:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.0040bd06();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0040b9b1:\n    fcn.004056aa(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 816
    },
    "0040c534": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040c534(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x0040c5f3:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0040c5f7:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040c5fa:\n            cVar5 = fcn.0040cce3(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0040c59f:\n                arg_8h = 0x10;\n                goto code_r0x0040c5fa;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x0040c5b3;\n                if (uVar6 < 0x45) goto code_r0x0040c781;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x0040c781;\n                    goto code_r0x0040c587;\n                }\n            }\ncode_r0x0040c603:\n            cVar5 = fcn.0040cad9();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.0040ca76();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x0040c603;\n            if (uVar6 != 99) goto code_r0x0040c781;\ncode_r0x0040c5b3:\n            cVar5 = fcn.0040cc4b(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.0040cec0();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x0040c603;\n            if (uVar6 == 0x69) goto code_r0x0040c5f3;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.0040ce2d();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x0040c781;\n                cVar5 = fcn.0040cea1();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x0040c781;\n                arg_ch_00 = 0;\n                goto code_r0x0040c59f;\n            }\n            goto code_r0x0040c5f7;\n        }\ncode_r0x0040c587:\n        cVar5 = fcn.0040ced8();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x0040c781;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040c681;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x0040c681:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.0040bbe7(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.0040d142(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.0040bbe7(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040d02c(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.0040bbe7(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040c781:\n    fcn.004056aa(unaff_ESI);\n    return;\n}\n",
        "token_count": 1682
    },
    "0040c791": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040c791(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x0040c850:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0040c854:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040c857:\n            cVar5 = fcn.0040cce3(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0040c7fc:\n                arg_8h = 0x10;\n                goto code_r0x0040c857;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x0040c810;\n                if (uVar6 < 0x45) goto code_r0x0040c9de;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x0040c9de;\n                    goto code_r0x0040c7e4;\n                }\n            }\ncode_r0x0040c860:\n            cVar5 = fcn.0040cad9();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.0040ca76();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x0040c860;\n            if (uVar6 != 99) goto code_r0x0040c9de;\ncode_r0x0040c810:\n            cVar5 = fcn.0040cc4b(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.0040cec0();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x0040c860;\n            if (uVar6 == 0x69) goto code_r0x0040c850;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.0040ce2d();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x0040c9de;\n                cVar5 = fcn.0040cea1();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x0040c9de;\n                arg_ch_00 = 0;\n                goto code_r0x0040c7fc;\n            }\n            goto code_r0x0040c854;\n        }\ncode_r0x0040c7e4:\n        cVar5 = fcn.0040ced8();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x0040c9de;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040c8de;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x0040c8de:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.0040bc18(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.0040d1cf(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.0040bc18(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040d0b7(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.0040bc18(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040c9de:\n    fcn.004056aa(unaff_ESI);\n    return;\n}\n",
        "token_count": 1683
    },
    "0040cce3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040cce3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    bool bVar5;\n    \n    iVar1 = fcn.0040ca1a(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.0040b111();\n                *puVar2 = 0x16;\n                uVar3 = fcn.0040b35f();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x0040cd94;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x0040cd94;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x0040cd94:\n    if ((((*(in_ECX + 0x20) >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar5 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar5);\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x40;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xfffffff7;\n        if (0x200 < *(in_ECX + 0x28)) {\n            *(in_ECX + 0x28) = 0x200;\n        }\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    if (iVar1 == 8) {\n        fcn.0040bb5f(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0040baea(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1105
    },
    "0040cea1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cea1(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.0040cce3(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "004110e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004110e8(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00406100();\n    uVar4 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0040d517(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x4271f0) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) != 0) {\n        uVar1 = fcn.0040d794(arg_8h_00);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        if (iVar2 != 0) goto code_r0x00411158;\n        puVar3 = fcn.0040b0fe();\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *puVar3 = uVar4;\n    }\n    puVar3 = fcn.0040b111();\n    *puVar3 = 9;\n    uVar4 = 0xffffffff;\ncode_r0x00411158:\n    *(unaff_EBP + -0x1c) = uVar4;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00411174(0x423e08, noname_1, unaff_retaddr);\n    fcn.00406146();\n    return;\n}\n",
        "token_count": 478
    },
    "00417c40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00417c40(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.0040d7fe(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0040b111();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                arg_ch[2] = 0;\n                if ((arg_ch[3] >> 3 & 1) == 0) goto code_r0x004178a4;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.0040ecb7(1),  arg_ch != puVar2 && (puVar2 = fcn.0040ecb7(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.004106a7(arg_8h_00),  iVar3 == 0)))) {\n                fcn.00418b7d(arg_ch);\n            }\n            cVar1 = fcn.00417aa0(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffffffff;\n            }\n            return arg_8h & 0xff;\n        }\n        puVar2 = fcn.0040b111();\n        *puVar2 = 0x22;\n    }\ncode_r0x004178a4:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 529
    },
    "00417c4b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00417c4b(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.0040d7fe(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0040b111();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                arg_ch[2] = 0;\n                if ((arg_ch[3] >> 3 & 1) == 0) goto code_r0x004179b5;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.0040ecb7(1),  arg_ch != puVar2 && (puVar2 = fcn.0040ecb7(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.004106a7(arg_8h_00),  iVar3 == 0)))) {\n                fcn.00418b7d(arg_ch);\n            }\n            cVar1 = fcn.00417b6c(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffff;\n            }\n            return arg_8h & 0xffff;\n        }\n        puVar2 = fcn.0040b111();\n        *puVar2 = 0x22;\n    }\ncode_r0x004179b5:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 531
    },
    "00402070": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402070(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *0x426a04 >> 3 & 0x3f;\n    *0x426a04 = *0x426a04 + arg_ch * 8;\n    if (*0x426a04 < arg_ch << 3) {\n        *0x426a08 = *0x426a08 + 1;\n    }\n    *0x426a08 = *0x426a08 + (arg_ch >> 0x1d);\n    uVar2 = -uVar1 + 0x40;\n    if (arg_ch < uVar2) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00406bf0(uVar1 + 0x426a0c, arg_8h, uVar2);\n        fcn.00402192(0x4269f4, 0x426a0c);\n        for (uVar1 = -uVar1 + 0x7f; uVar1 < arg_ch; uVar1 = uVar1 + 0x40) {\n            fcn.00402192(0x4269f4, arg_8h + -0x3f + uVar1);\n            uVar2 = uVar2 + 0x40;\n        }\n        uVar1 = 0;\n    }\n    fcn.00406bf0(uVar1 + 0x426a0c, arg_8h + uVar2, arg_ch - uVar2);\n    return;\n}\n",
        "token_count": 371
    },
    "0040211e": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040211e(uint arg_8h)\n\n{\n    int32_t arg_ch;\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    fcn.00402890(8);\n    uVar1 = *0x426a04 >> 3 & 0x3f;\n    arg_ch = 0x78 - uVar1;\n    if (uVar1 < 0x38) {\n        arg_ch = 0x38 - uVar1;\n    }\n    fcn.00402070(0x4258b0, arg_ch);\n    arg_8h_00 = 8;\n    fcn.00402070(&var_ch, 8);\n    fcn.00402890(0x10);\n    fcn.004056aa(arg_8h_00);\n    return;\n}\n",
        "token_count": 220
    },
    "004029e2": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004029e2(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        uVar1 = *0x426994 + arg_ch;\n        uVar3 = *0x426994 & 0x3f;\n        uVar2 = 0x40 - uVar3;\n        if (uVar1 < arg_ch) {\n            *0x426998 = *0x426998 + 1;\n        }\n        uVar4 = arg_ch;\n        *0x426994 = uVar1;\n        if ((uVar3 != 0) && (uVar2 <= arg_ch)) {\n            fcn.00406bf0(uVar3 + 0x4269b0, arg_8h, uVar2);\n            fcn.00402bdb(0x4269b0);\n            uVar4 = arg_ch - uVar2;\n            arg_8h = arg_8h + uVar2;\n            arg_ch = 0;\n            uVar3 = arg_ch;\n        }\n        arg_ch = uVar3;\n        if (0x3f < uVar4) {\n            uVar3 = uVar4 >> 6;\n            do {\n                fcn.00402bdb(arg_8h);\n                uVar4 = uVar4 - 0x40;\n                arg_8h = arg_8h + 0x40;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n        }\n        if (uVar4 != 0) {\n            fcn.00406bf0(arg_ch + 0x4269b0, arg_8h, uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00402a8f": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402a8f(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_8h_00;\n    uchar var_ch;\n    uchar var_bh;\n    uchar var_ah;\n    uint var_9h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    iVar1 = *0x426998 << 3;\n    var_9h._0_1_ = *0x426994 >> 0x1d | iVar1;\n    iVar2 = *0x426994 << 3;\n    uVar3 = *0x426994 & 0x3f;\n    var_ch = iVar1 >> 0x18;\n    var_bh = iVar1 >> 0x10;\n    var_ah = iVar1 >> 8;\n    var_9h._1_1_ = iVar2 >> 0x18;\n    var_9h._2_1_ = iVar2 >> 0x10;\n    var_9h._3_1_ = iVar2 >> 8;\n    var_5h = iVar2;\n    iVar1 = 0x78 - uVar3;\n    if (uVar3 < 0x38) {\n        iVar1 = 0x38 - uVar3;\n    }\n    arg_8h_00 = 0x4258f0;\n    fcn.004029e2(0x4258f0, iVar1);\n    fcn.004029e2(&var_ch, 8);\n    *arg_8h = *0x42699f;\n    arg_8h[1] = *0x42699e;\n    arg_8h[2] = *0x42699c >> 8;\n    arg_8h[3] = *0x42699c;\n    arg_8h[4] = *0x4269a3;\n    arg_8h[5] = *0x4269a2;\n    arg_8h[6] = *0x4269a0 >> 8;\n    arg_8h[7] = *0x4269a0;\n    arg_8h[8] = *0x4269a7;\n    arg_8h[9] = *0x4269a6;\n    arg_8h[10] = *0x4269a4 >> 8;\n    arg_8h[0xb] = *0x4269a4;\n    arg_8h[0xc] = *0x4269ab;\n    arg_8h[0xd] = *0x4269aa;\n    arg_8h[0xe] = *0x4269a8 >> 8;\n    arg_8h[0xf] = *0x4269a8;\n    arg_8h[0x10] = *0x4269af;\n    arg_8h[0x11] = *0x4269ae;\n    arg_8h[0x12] = *0x4269ac >> 8;\n    arg_8h[0x13] = *0x4269ac;\n    fcn.004056aa(arg_8h_00);\n    return;\n}\n",
        "token_count": 753
    },
    "00403fc4": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403fc4(uint noname_0, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t arg_8h;\n    bool bVar3;\n    int32_t iVar4;\n    \n    arg_8h = 0x427a88;\n    if (arg_ch == 0) {\n        return;\n    }\n    uVar1 = *0x4267a8 >> 3 & 0x3f;\n    if (uVar1 != 0) {\n        uVar2 = -uVar1 + 0x40;\n        iVar4 = uVar1 + 0x4267b0;\n        if (arg_ch < uVar2) {\n            arg_8h = 0x427a88;\n            goto code_r0x00404068;\n        }\n        fcn.00406bf0(iVar4, 0x427a88, uVar2);\n        arg_8h = -uVar1 + 0x427ac8;\n        uVar1 = uVar2 * 8;\n        bVar3 = CARRY4(*0x4267a8, uVar1);\n        *0x4267a8 = *0x4267a8 + uVar1;\n        *0x4267ac = *0x4267ac + (uVar2 * 8 >> 0x20) + bVar3;\n        arg_ch = arg_ch - uVar2;\n        fcn.00403d77(0x4267b0);\n    }\n    if (0x3f < arg_ch) {\n        uVar1 = arg_ch >> 6;\n        do {\n            fcn.00403d77(arg_8h);\n            bVar3 = 0xfffffdff < *0x4267a8;\n            *0x4267a8 = *0x4267a8 + 0x200;\n            *0x4267ac = *0x4267ac + bVar3;\n            arg_ch = arg_ch - 0x40;\n            arg_8h = arg_8h + 0x40;\n            uVar1 = uVar1 - 1;\n        } while (uVar1 != 0);\n    }\n    if (arg_ch == 0) {\n        return;\n    }\n    iVar4 = 0x4267b0;\ncode_r0x00404068:\n    fcn.00406bf0(iVar4, arg_8h, arg_ch);\n    uVar1 = arg_ch * 8;\n    bVar3 = CARRY4(*0x4267a8, uVar1);\n    *0x4267a8 = *0x4267a8 + uVar1;\n    *0x4267ac = *0x4267ac + (arg_ch * 8 >> 0x20) + bVar3;\n    return;\n}\n",
        "token_count": 642
    },
    "0040408f": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040408f(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        uVar2 = *0x4267a8 >> 3 & 0x3f;\n        uVar6 = (*0x4267ac >> 8 ^ *0x4267ac << 8) & 0xff00ff ^ *0x4267ac << 8;\n        uVar3 = (*0x4267a8 >> 8 ^ (*0x4267a8 << 8 | *0x4267ac >> 0x18)) & 0xff00ff ^\n                (*0x4267a8 << 8 | *0x4267ac >> 0x18);\n        *0x4267a8 = uVar6 >> 0x10 ^ uVar6 << 0x10;\n        *0x4267ac = (uVar3 ^ uVar6) >> 0x10 ^ (uVar3 << 0x10 | uVar6 >> 0x10);\n        if (uVar2 == 0) {\n            fcn.00407170(0x4267b0, 0);\n            *0x4267b0 = 0x80;\n        }\n        else {\n            *(uVar2 + 0x4267b0) = 0x80;\n            uVar3 = uVar2 + 1;\n            iVar4 = 0x38;\n            if (uVar3 < 0x39) {\n                iVar1 = uVar2 + 0x4267b1;\n                iVar4 = 0x38 - uVar3;\n            }\n            else {\n                if (uVar3 < 0x40) {\n                    fcn.00407170(uVar2 + 0x4267b1, 0, 0x40 - uVar3);\n                }\n                fcn.00403d77(0x4267b0);\n                iVar1 = 0x4267b0;\n            }\n            fcn.00407170(iVar1, 0, iVar4);\n        }\n        *0x4267e8 = *0x4267a8;\n        *0x4267ec = *0x4267ac;\n        fcn.00403d77(0x4267b0);\n        puVar5 = 0x426788;\n        do {\n            uVar2 = *puVar5 << 0x10 | *puVar5 >> 0x10;\n            uVar2 = (uVar2 >> 8 ^ uVar2 << 8) & 0xff00ff ^ uVar2 << 8;\n            *puVar5 = uVar2;\n            puVar5 = puVar5 + 1;\n            *arg_8h = uVar2;\n            arg_8h = arg_8h + 1;\n        } while (puVar5 < 0x4267a8);\n    }\n    fcn.00407170(0x426788, 0, 0x68);\n    return;\n}\n",
        "token_count": 732
    },
    "00409c8b": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00409c8b(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    \n    if (*(unaff_EBP + -0x20) != 0) {\n        if (unaff_EDI != 0) {\n            puVar1 = *((*unaff_ESI >> 6) * 4 + 0x4271f0) + 0x28 + (*unaff_ESI & 0x3f) * 0x30;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0040d5ce(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00409d57": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00409d57(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    \n    if (*(unaff_EBP + -0x20) != 0) {\n        if (unaff_EDI != 0) {\n            puVar1 = *((*unaff_ESI >> 6) * 4 + 0x4271f0) + 0x28 + (*unaff_ESI & 0x3f) * 0x30;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0040d5ce(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0040d517": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d517(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x4271f0));\n    return;\n}\n",
        "token_count": 70
    },
    "0040d5ce": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d5ce(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x4271f0));\n    return;\n}\n",
        "token_count": 72
    },
    "0040119b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0040119b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    var_8h = 0;\n    if (arg_8h == 2) {\n        fcn.0040a2e2(&var_8h, *(arg_ch + 0x10) + 0x18, 0x8301, 0x40, 0x180);\n    }\n    else if ((arg_8h == 3) && (*(arg_ch + 0x14) != -1)) {\n        fcn.0040a6f5(*(arg_ch + 0x14));\n    }\n    fcn.004056aa(var_8h);\n    return;\n}\n",
        "token_count": 211
    },
    "004019fb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFileName\n\nvoid __fastcall fcn.004019fb(uint param_1)\n\n{\n    int32_t iVar1;\n    uint lpFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    iVar1 = fcn.00401995(param_1);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(&lpFileName);\n    }\n    fcn.004056aa(lpFileName);\n    return;\n}\n",
        "token_count": 128
    },
    "00401a52": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00401a52(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint noname_0;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint unaff_EBP;\n    uint32_t var_1014h;\n    uint32_t var_1010h;\n    uint hFile;\n    uint lpNumberOfBytesWritten;\n    uint lpBuffer;\n    uint uStackY40;\n    int32_t iStackY36;\n    uint *puStackY32;\n    uint var_4h;\n    \n    fcn.0041aee0();\n    puStackY32 = 0x401a83;\n    fcn.00407170();\n    puStackY32 = 0x401a96;\n    iVar1 = fcn.00401930(noname_0, 3);\n    if (iVar1 != -1) {\n        iVar2 = fcn.00401b4d();\n        if (iVar2 != 0) {\n            uVar4 = 0;\n            uVar3 = 0;\n            do {\n                *(&fcn.00401a52::lpBuffer + uVar4) = *(uVar3 + 0x421cb8);\n                uVar4 = uVar4 + 1;\n                uVar3 = -(uVar3 + 1 < 4) & uVar3 + 1;\n            } while (uVar4 < 0x1000);\n            do {\n                if ((var_1014h | var_1010h) == 0) break;\n                puStackY32 = &fcn.00401a52::lpBuffer;\n                uStackY40 = 0x401b1a;\n                iStackY36 = iVar1;\n                iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n            } while (iVar2 != 0);\n        }\n        fcn.00402013();\n    }\n    fcn.004056aa(unaff_EBP);\n    return;\n}\n",
        "token_count": 452
    },
    "00401b4d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFileSize\n\nvoid __fastcall fcn.00401b4d(int32_t param_1, uint *param_2)\n\n{\n    uint lpFileSize;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    _lpFileSize = 0;\n    if ((param_1 != 0) && (param_1 != -1)) {\n        (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(param_1, &lpFileSize);\n    }\n    *param_2 = lpFileSize;\n    param_2[1] = var_8h;\n    fcn.004056aa(lpFileSize);\n    return;\n}\n",
        "token_count": 167
    },
    "00401f2d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f2d(uint arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort in_CX;\n    uint noname_0;\n    uint32_t uVar4;\n    uint arg_8h_00;\n    uint lpBuffer;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint hResInfo;\n    uint hModule;\n    uint32_t lpNumberOfBytesWritten;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = *arg_ch;\n    }\n    var_1ch = 0;\n    arg_8h_00 = 6;\n    hModule = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(6, L\"CFileTools::GetThisDLLModuleHandle\", &hModule);\n    uVar1 = hModule;\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceW)(hModule, in_CX, 0x422f2c);\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2);\n        if (iVar3 != 0) {\n            lpNumberOfBytesWritten = (*_sym.imp.KERNEL32.dll_SizeofResource)(uVar1, iVar2);\n            if ((uVar4 == 0) || (uVar4 <= lpNumberOfBytesWritten)) {\n                iVar2 = fcn.00401930(noname_0, 2);\n                if (iVar2 != -1) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                      (iVar2, iVar3, lpNumberOfBytesWritten, &lpNumberOfBytesWritten, 0);\n                    if (iVar2 != 0) {\n                        var_1ch = lpNumberOfBytesWritten;\n                    }\n                }\n            }\n        }\n    }\n    fcn.00402013();\n    if (arg_ch != NULL) {\n        *arg_ch = var_1ch;\n    }\n    fcn.004056aa(arg_8h_00);\n    return;\n}\n",
        "token_count": 522
    },
    "00402013": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402013(int32_t *param_1)\n\n{\n    if ((*param_1 != -1) && (*param_1 != 0)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    }\n    *param_1 = -1;\n    return;\n}\n",
        "token_count": 70
    },
    "00404cf5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404cf5(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint noname_0;\n    uint *unaff_EDI;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    var_28h = 0;\n    if ((param_1 == NULL) || (*param_1 == 0)) {\n        iVar3 = 0x57;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0x80000000, 7, 0, 3, 0x80, 0);\n        if (iVar2 == -1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            fcn.00402050();\n            fcn.004029b5();\n            fcn.00403d49();\n            pcVar1 = _sym.imp.KERNEL32.dll_ReadFile;\n            while( true ) {\n                iVar3 = (*pcVar1)(iVar2, 0x427a88, 0x4000, &var_28h, 0);\n                if ((iVar3 == 0) || (var_28h == 0)) break;\n                fcn.00402070(0x427a88, var_28h);\n                fcn.004029e2(0x427a88, var_28h);\n                fcn.00403fc4(noname_0, var_28h);\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n        }\n    }\n    if (iVar3 == 0) {\n        fcn.0040211e(&var_14h);\n        fcn.00404520(0x427688);\n        fcn.00402a8f(&var_18h);\n        fcn.00404520(0x427988);\n        unaff_EDI = &var_24h;\n        fcn.0040408f(unaff_EDI);\n        fcn.00404520(0x42ba90);\n    }\n    fcn.004056aa(unaff_EDI);\n    return;\n}\n",
        "token_count": 547
    },
    "00405206": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405206(uint noname_0, int32_t arg_ch)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint noname_0_00;\n    uint in_EDX;\n    uint arg_10h;\n    uint *arg_8h;\n    char16_t *pcVar6;\n    uint uVar7;\n    uint *arg_8h_00;\n    uint var_f9ch;\n    uint var_f98h;\n    int32_t var_f94h;\n    code *var_f90h;\n    uint var_f8ch;\n    uint var_f88h;\n    uint var_f84h;\n    uint var_f80h;\n    uint var_f7ch;\n    uint var_f78h;\n    uint lpFilename;\n    uint var_c6ch;\n    uint var_a6ch;\n    uint var_86ch;\n    uint var_66ch;\n    uint lpFileName;\n    uint lpszShortPath;\n    uint var_25ch;\n    uint var_5ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    fcn.00407170(&var_f84h, 0, 0x110);\n    var_f90h = vtable.CCab.0;\n    var_f8ch = 0;\n    var_f88h = 0;\n    var_f8ch = fcn.004017d5();\n    var_f84h = 0;\n    var_f80h = 0;\n    var_f7ch = 0;\n    fcn.004013b8();\n    arg_8h_00 = &lpFilename;\n    var_f78h._0_1_ = 0;\n    var_f94h = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, arg_8h_00, 0x104);\n    fcn.00401d9d(&var_c6ch, 0, 0);\n    fcn.00401d9d(0, &var_86ch, &var_a6ch);\n    bVar2 = false;\n    iVar3 = fcn.004028c8(noname_0_00, &var_25ch);\n    if (((iVar3 == 0) && (iVar3 = fcn.004075fb(&var_25ch, 0x421f20),  iVar3 == 0)) &&\n       (iVar3 = fcn.004075fb(&var_25ch, 0x421f28),  iVar3 != 0)) {\n        bVar2 = true;\n    }\n    bVar1 = bVar2 ^ 1;\n    if (arg_ch == 0) {\n        bVar1 = bVar2;\n    }\n    fcn.004043b6(&var_66ch, 0x100, 0x421c28, &var_86ch);\n    fcn.00401e05(&var_c6ch, &var_66ch, &var_a6ch, 1);\n    uVar7 = 0x104;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpszShortPath);\n    if (((uVar4 != 0) && (uVar4 < 0x104)) &&\n       ((uVar4 = (*_sym.imp.KERNEL32.dll_GetLongPathNameW)(&lpszShortPath, &lpszShortPath, 0x104),  uVar4 != 0 &&\n        ((uVar4 < 0x104 && (iVar3 = fcn.00404675(),  iVar3 != 0)))))) {\n        fcn.004043b6(&lpFileName, 0x104, L\"%scs%s%s\", &lpszShortPath);\n    }\n    iVar3 = fcn.00401f2d(&lpFileName, &var_f94h);\n    if (iVar3 == 0) {\n        uVar7 = 0x20;\n        if (bVar1) {\n            uVar7 = 0x40;\n        }\n        pcVar6 = L\"Failed to extract %d bit resource file\\n\";\n        uVar5 = fcn.0040ecb7(2);\n        fcn.004018e6(uVar5, pcVar6, uVar7);\n    }\n    else if (var_f94h == 0) {\n        pcVar6 = L\"Extracted resource file is empty\\n\";\n        uVar5 = fcn.0040ecb7(2);\n        fcn.004018e6(uVar5, pcVar6, uVar7);\n    }\n    else {\n        arg_8h = &lpFileName;\n        iVar3 = fcn.00401204(arg_8h, &var_66ch, in_EDX);\n        if (iVar3 == 0) {\n            pcVar6 = L\"Failed to extract file from compressed resource to %s\\n\";\n            uVar7 = fcn.0040ecb7(2);\n            fcn.004018e6(uVar7, pcVar6, arg_10h);\n            iVar3 = fcn.004019fb();\n            if (iVar3 == 0) {\n                pcVar6 = \n                L\"You may be running this app from a 64 bit location that has no 32 bit equivalent (SysWOW64 issue)\\n\";\n                uVar7 = fcn.0040ecb7(2);\n                fcn.004018e6(uVar7, pcVar6, arg_8h);\n            }\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(&lpFileName);\n        if (uVar4 != 0xffffffff) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(&lpFileName, uVar4 & 0xfffffffe);\n            fcn.00401a52();\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)(&lpFileName);\n        }\n    }\n    fcn.004010a5();\n    fcn.004056aa(arg_8h_00);\n    return;\n}\n",
        "token_count": 1374
    },
    "004087c9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004087c9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00406100(0x4239d8, 0x10);\n    arg_10h_01 = fcn.00408ef4(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.00407b9f();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x004088ab;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.00408f11(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.00408980(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00408897();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.00408f11(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x004088ab:\n    fcn.004101c1();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 724
    },
    "0040ced8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ced8(uint *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    iVar1 = *(param_1[5] + -4);\n    param_1[0xd] = iVar1;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.0040ba7d(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar2 == '\\0') {\n        if (iVar1 == 0) {\n            param_1[0xd] = 0x41cd24;\n        }\n        uVar3 = fcn.0040cf4c(arg_8h);\n    }\n    else {\n        if (iVar1 == 0) {\n            param_1[0xd] = L\"(null)\";\n        }\n        *(param_1 + 0xf) = 1;\n        uVar3 = fcn.0040d9c4(param_1[0xd], arg_8h);\n    }\n    param_1[0xe] = uVar3;\n    return 1;\n}\n",
        "token_count": 319
    },
    "0041526b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041526b(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004151c0:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    piVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if (iVar1 == 0) break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if ((iVar1 == 0) || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar5 = 0;\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.0040b111();\n                    uVar6 = 0x22;\n                    goto code_r0x004151e5;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004151c0;\n    puVar2 = fcn.0040b111();\n    uVar6 = 0x16;\ncode_r0x004151e5:\n    *puVar2 = uVar6;\n    fcn.0040b35f();\n    return uVar6;\n}\n",
        "token_count": 621
    },
    "004190fe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nfloat10 fcn.004190fe(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x420d60 | *0x420dd0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x420d68 | *0x420dd8;\n        uVar1 = SUB82(*0x420d80 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x420d98 & dVar7;\n        dVar9 = (*0x420d90 & dVar6) * *(uVar1 + 0x421390) - *0x420d70;\n        dVar6 = (dVar6 - (*0x420d90 & dVar6)) * *(uVar1 + 0x421390);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x421398);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x421398) - *0x420d78);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x420e28 * dVar11 + *0x420e38) * dVar11 + *0x420e48) * dVar11 * dVar11 +\n                   ((*0x420e20 * dVar7 + *0x420e30) * dVar7 + *0x420e40) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x420e50 * dVar7 + *(uVar1 + 0x420f88) + dVar10 * *0x420da8 + (dVar8 & *(iVar5 + 0x420db8)) +\n                   *(uVar1 + 0x420f80) + dVar9 + dVar10 * *0x420da0 + (dVar6 & *(iVar5 + 0x420db0));\n        }\n        dStack12 = -(*0x420de0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x420dd0 == (param_1 & *0x420d60 | *0x420dd0)) {\n                    return *0x420e08;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x420d60;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x0041930a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x420df0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x420e00;\ncode_r0x0041930a:\n    fcn.00419953(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1007
    },
    "00401434": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401434(int32_t *arg_8h)\n\n{\n    char cVar1;\n    \n    cVar1 = *(arg_8h + 0xd);\n    while (cVar1 == '\\0') {\n        fcn.00401434(arg_8h[2]);\n        arg_8h = *arg_8h;\n        fcn.00401409();\n        fcn.004018b4();\n        cVar1 = *(arg_8h + 0xd);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00401474": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00401474(int32_t **arg_8h, int32_t **arg_ch, int32_t **arg_10h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t **in_ECX;\n    int32_t **arg_8h_00;\n    int32_t **ppiVar4;\n    uint var_4h;\n    \n    if ((arg_ch == **in_ECX) && (arg_10h == *in_ECX)) {\n        fcn.004013b8();\n        *arg_8h = **in_ECX;\n    }\n    else {\n        arg_8h_00 = arg_ch;\n        if (arg_ch != arg_10h) {\n            do {\n                arg_ch = arg_8h_00[2];\n                if (*(arg_ch + 0xd) == '\\0') {\n                    cVar1 = *(*arg_ch + 0xd);\n                    ppiVar3 = *arg_ch;\n                    while (cVar1 == '\\0') {\n                        cVar1 = *(*ppiVar3 + 0xd);\n                        arg_ch = ppiVar3;\n                        ppiVar3 = *ppiVar3;\n                    }\n                }\n                else {\n                    ppiVar3 = arg_8h_00[1];\n                    ppiVar4 = arg_8h_00;\n                    while ((arg_ch = ppiVar3,  *(arg_ch + 0xd) == '\\0' && (ppiVar4 == arg_ch[2]))) {\n                        ppiVar4 = arg_ch;\n                        ppiVar3 = arg_ch[1];\n                    }\n                }\n                ppiVar3 = arg_8h_00[2];\n                if (*(ppiVar3 + 0xd) == '\\0') {\n                    piVar2 = *ppiVar3;\n                    cVar1 = *(piVar2 + 0xd);\n                    while (cVar1 == '\\0') {\n                        piVar2 = *piVar2;\n                        cVar1 = *(piVar2 + 0xd);\n                    }\n                }\n                else {\n                    ppiVar3 = arg_8h_00;\n                    for (ppiVar4 = arg_8h_00[1]; (*(ppiVar4 + 0xd) == '\\0' && (ppiVar3 == ppiVar4[2]));\n                        ppiVar4 = ppiVar4[1]) {\n                        ppiVar3 = ppiVar4;\n                    }\n                }\n                fcn.00401554(arg_8h_00);\n                fcn.00401409();\n                fcn.004018b4();\n                arg_8h_00 = arg_ch;\n            } while (arg_ch != arg_10h);\n        }\n        *arg_8h = arg_ch;\n    }\n    return arg_8h;\n}\n",
        "token_count": 625
    },
    "00401554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00401554(int32_t **arg_8h)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar6;\n    int32_t *extraout_ECX_00;\n    int32_t **ppiVar7;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    ppiVar5 = arg_8h + 2;\n    ppiVar6 = *ppiVar5;\n    if (*(ppiVar6 + 0xd) == '\\0') {\n        cVar2 = *(*ppiVar6 + 0xd);\n        ppiVar4 = *ppiVar6;\n        while (cVar2 == '\\0') {\n            cVar2 = *(*ppiVar4 + 0xd);\n            ppiVar6 = ppiVar4;\n            ppiVar4 = *ppiVar4;\n        }\n    }\n    else {\n        ppiVar4 = arg_8h;\n        for (ppiVar6 = arg_8h[1]; (*(ppiVar6 + 0xd) == '\\0' && (ppiVar4 == ppiVar6[2])); ppiVar6 = ppiVar6[1]) {\n            ppiVar4 = ppiVar6;\n        }\n    }\n    ppiVar4 = *arg_8h;\n    ppiVar7 = *ppiVar5;\n    if (((*(ppiVar4 + 0xd) == '\\0') && (ppiVar7 = ppiVar4,  *(*ppiVar5 + 0xd) == '\\0')) &&\n       (ppiVar7 = ppiVar6[2],  ppiVar6 != arg_8h)) {\n        ppiVar4[1] = ppiVar6;\n        *ppiVar6 = *arg_8h;\n        ppiVar4 = ppiVar6;\n        if (ppiVar6 != *ppiVar5) {\n            ppiVar4 = ppiVar6[1];\n            if (*(ppiVar7 + 0xd) == '\\0') {\n                ppiVar7[1] = ppiVar4;\n            }\n            *ppiVar4 = ppiVar7;\n            ppiVar6[2] = *ppiVar5;\n            (*ppiVar5)[1] = ppiVar6;\n        }\n        if (*(*in_ECX + 4) == arg_8h) {\n            *(*in_ECX + 4) = ppiVar6;\n        }\n        else {\n            ppiVar5 = arg_8h[1];\n            if (*ppiVar5 == arg_8h) {\n                *ppiVar5 = ppiVar6;\n            }\n            else {\n                ppiVar5[2] = ppiVar6;\n            }\n        }\n        ppiVar6[1] = arg_8h[1];\n        uVar1 = *(ppiVar6 + 3);\n        *(ppiVar6 + 3) = *(arg_8h + 3);\n        *(arg_8h + 3) = uVar1;\n    }\n    else {\n        ppiVar4 = arg_8h[1];\n        if (*(ppiVar7 + 0xd) == '\\0') {\n            ppiVar7[1] = ppiVar4;\n        }\n        if (*(*in_ECX + 4) == arg_8h) {\n            *(*in_ECX + 4) = ppiVar7;\n        }\n        else if (*ppiVar4 == arg_8h) {\n            *ppiVar4 = ppiVar7;\n        }\n        else {\n            ppiVar4[2] = ppiVar7;\n        }\n        if (**in_ECX == arg_8h) {\n            ppiVar5 = ppiVar4;\n            if (*(ppiVar7 + 0xd) == '\\0') {\n                cVar2 = *(*ppiVar7 + 0xd);\n                ppiVar6 = *ppiVar7;\n                ppiVar5 = ppiVar7;\n                while (ppiVar3 = ppiVar6,  cVar2 == '\\0') {\n                    ppiVar6 = *ppiVar3;\n                    cVar2 = *(ppiVar6 + 0xd);\n                    ppiVar5 = ppiVar3;\n                }\n            }\n            **in_ECX = ppiVar5;\n        }\n        if (*(*in_ECX + 8) == arg_8h) {\n            ppiVar5 = ppiVar4;\n            if (*(ppiVar7 + 0xd) == '\\0') {\n                ppiVar5 = ppiVar7;\n                for (ppiVar6 = ppiVar7[2]; *(ppiVar6 + 0xd) == '\\0'; ppiVar6 = ppiVar6[2]) {\n                    ppiVar5 = ppiVar6;\n                }\n            }\n            *(*in_ECX + 8) = ppiVar5;\n        }\n    }\n    if (*(arg_8h + 3) == '\\x01') {\n        if (ppiVar7 != *(*in_ECX + 4)) {\n            do {\n                ppiVar5 = ppiVar4;\n                if (*(ppiVar7 + 3) != '\\x01') break;\n                ppiVar6 = *ppiVar5;\n                if (ppiVar7 == ppiVar6) {\n                    ppiVar6 = ppiVar5[2];\n                    if (*(ppiVar6 + 3) == '\\0') {\n                        *(ppiVar6 + 3) = 1;\n                        *(ppiVar5 + 3) = 0;\n                        fcn.00401832(ppiVar5);\n                        ppiVar6 = ppiVar5[2];\n                    }\n                    if (*(ppiVar6 + 0xd) == '\\0') {\n                        if ((*(*ppiVar6 + 3) != '\\x01') || (*(ppiVar6[2] + 3) != '\\x01')) {\n                            if (*(ppiVar6[2] + 3) == '\\x01') {\n                                *(*ppiVar6 + 3) = 1;\n                                *(ppiVar6 + 3) = 0;\n                                fcn.004017ec(ppiVar6);\n                                ppiVar6 = ppiVar5[2];\n                            }\n                            *(ppiVar6 + 3) = *(ppiVar5 + 3);\n                            *(ppiVar5 + 3) = 1;\n                            *(ppiVar6[2] + 3) = 1;\n                            fcn.00401832(ppiVar5);\n                            in_ECX = extraout_ECX;\n                            break;\n                        }\ncode_r0x0040176b:\n                        *(ppiVar6 + 3) = 0;\n                    }\n                }\n                else {\n                    if (*(ppiVar6 + 3) == '\\0') {\n                        *(ppiVar6 + 3) = 1;\n                        *(ppiVar5 + 3) = 0;\n                        fcn.004017ec(ppiVar5);\n                        ppiVar6 = *ppiVar5;\n                    }\n                    if (*(ppiVar6 + 0xd) == '\\0') {\n                        if ((*(ppiVar6[2] + 3) == '\\x01') && (*(*ppiVar6 + 3) == '\\x01')) goto code_r0x0040176b;\n                        if (*(*ppiVar6 + 3) == '\\x01') {\n                            *(ppiVar6[2] + 3) = 1;\n                            *(ppiVar6 + 3) = 0;\n                            fcn.00401832(ppiVar6);\n                            ppiVar6 = *ppiVar5;\n                        }\n                        *(ppiVar6 + 3) = *(ppiVar5 + 3);\n                        *(ppiVar5 + 3) = 1;\n                        *(*ppiVar6 + 3) = 1;\n                        fcn.004017ec(ppiVar5);\n                        in_ECX = extraout_ECX_00;\n                        break;\n                    }\n                }\n                ppiVar4 = ppiVar5[1];\n                ppiVar7 = ppiVar5;\n            } while (ppiVar5 != *(*in_ECX + 4));\n        }\n        *(ppiVar7 + 3) = 1;\n    }\n    if (in_ECX[1] != 0) {\n        in_ECX[1] = in_ECX[1] + -1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1887
    },
    "004017ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017ec(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = *arg_8h;\n    *arg_8h = *(iVar1 + 8);\n    if (*(*(iVar1 + 8) + 0xd) == '\\0') {\n        *(*(iVar1 + 8) + 4) = arg_8h;\n    }\n    *(iVar1 + 4) = arg_8h[1];\n    if (arg_8h == *(*in_ECX + 4)) {\n        *(*in_ECX + 4) = iVar1;\n    }\n    else {\n        piVar2 = arg_8h[1];\n        if (arg_8h == piVar2[2]) {\n            piVar2[2] = iVar1;\n        }\n        else {\n            *piVar2 = iVar1;\n        }\n    }\n    *(iVar1 + 8) = arg_8h;\n    arg_8h[1] = iVar1;\n    return;\n}\n",
        "token_count": 248
    },
    "00401832": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401832(int32_t *arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    \n    ppiVar1 = arg_8h[2];\n    arg_8h[2] = *ppiVar1;\n    if (*(*ppiVar1 + 0xd) == '\\0') {\n        *(*ppiVar1 + 4) = arg_8h;\n    }\n    ppiVar1[1] = arg_8h[1];\n    if (arg_8h == *(*in_ECX + 4)) {\n        *(*in_ECX + 4) = ppiVar1;\n    }\n    else {\n        ppiVar2 = arg_8h[1];\n        if (arg_8h == *ppiVar2) {\n            *ppiVar2 = ppiVar1;\n        }\n        else {\n            ppiVar2[2] = ppiVar1;\n        }\n    }\n    *ppiVar1 = arg_8h;\n    arg_8h[1] = ppiVar1;\n    return;\n}\n",
        "token_count": 252
    },
    "00401e05": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_c20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401e05(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *arg_14h_00;\n    uint *arg_10h_00;\n    uint *arg_18h;\n    uint var_c20h;\n    uint var_c1ch;\n    uint *var_c18h;\n    uint lpBuffer;\n    uint var_60ch;\n    uint var_40ch;\n    uint var_20ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    var_c18h = &var_ch;\n    arg_18h = &var_60ch;\n    if (in_ECX != 0) {\n        lpBuffer._0_2_ = 0;\n        if (in_EDX == 0) {\n            var_c18h = NULL;\n        }\n        else {\n            fcn.00404383(3);\n        }\n        if (arg_8h == 0) {\n            arg_10h_00 = NULL;\n        }\n        else {\n            fcn.00404383(0x100);\n            arg_10h_00 = &var_20ch;\n        }\n        if (arg_ch == 0) {\n            arg_14h_00 = NULL;\n        }\n        else {\n            fcn.00404383(0x100);\n            arg_14h_00 = &var_40ch;\n        }\n        if (arg_10h == 0) {\n            arg_18h = NULL;\n        }\n        else {\n            fcn.00404383(0x100);\n        }\n        fcn.0040d9a4(&lpBuffer, var_c18h, arg_10h_00, arg_14h_00, arg_18h);\n        if ((arg_14h != 0) && (lpBuffer == 0)) {\n            (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpBuffer);\n        }\n        fcn.00404383(0x104);\n    }\n    fcn.004056aa(in_ECX);\n    return;\n}\n",
        "token_count": 532
    },
    "004043fd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004043fd(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int16_t extraout_CX;\n    int16_t iVar4;\n    int16_t **in_ECX;\n    int16_t *piVar5;\n    int16_t *in_EDX;\n    int16_t *extraout_EDX;\n    int16_t *piVar6;\n    bool bVar7;\n    int16_t *piVar8;\n    bool bVar9;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    bVar1 = false;\n    bVar9 = false;\n    var_4h = 0;\n    fcn.004044b3();\n    piVar6 = *in_ECX;\n    iVar3 = *piVar6;\n    piVar8 = in_EDX;\n    if ((iVar3 == 0x22) || (iVar4 = iVar3,  iVar2 = 0,  iVar3 == 0x27)) {\n        piVar6 = piVar6 + 1;\n        bVar1 = true;\n        iVar4 = *piVar6;\n        iVar2 = iVar3;\n    }\n    do {\n        if (iVar4 == 0) {\ncode_r0x00404485:\n            piVar6 = piVar6 + 1;\n            bVar7 = bVar9;\n            if (!bVar1) {\ncode_r0x0040448d:\n                bVar9 = var_4h != 0;\n            }\n            piVar5 = piVar6 + -1;\n            if (bVar7 != false) {\n                piVar5 = piVar6;\n            }\n            *in_ECX = piVar5;\n            if (in_EDX != NULL) {\n                *piVar8 = 0;\n            }\n            return bVar9;\n        }\n        piVar5 = piVar6 + 1;\n        if (bVar1) {\n            if (iVar4 == iVar2) {\n                bVar9 = true;\n                goto code_r0x00404485;\n            }\n        }\n        else {\n            iVar3 = fcn.004044da();\n            piVar6 = extraout_EDX;\n            piVar5 = extraout_EDX;\n            iVar4 = extraout_CX;\n            bVar7 = bVar9;\n            if (iVar3 != 0) goto code_r0x0040448d;\n        }\n        if ((var_4h < arg_8h - 1U) && (in_EDX != NULL)) {\n            *piVar8 = iVar4;\n            piVar8 = piVar8 + 1;\n        }\n        var_4h = var_4h + 1;\n        piVar6 = piVar5;\n        iVar4 = *piVar5;\n    } while( true );\n}\n",
        "token_count": 642
    },
    "0040550e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_210h\n\nvoid __cdecl fcn.0040550e(ushort *arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint in_EDX;\n    char16_t *arg_10h_00;\n    uint var_210h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    *arg_8h = 0;\n    iVar1 = fcn.004043fd(0x104);\n    if (iVar1 != 0) {\n        fcn.004044b3();\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &var_20ch, 0x104);\n        if (arg_10h == 0) {\n            arg_10h_00 = L\"\\\"%s\\\" -# \\\"%s\\\" %s\";\n        }\n        else {\n            if (*0x42ba8c == 0) {\n                fcn.004043b6(arg_8h, 0x500, L\"\\\"%s\\\" -# \\\"%s\\\" -i \\\"#\\\"\", in_EDX);\n                goto code_r0x004055bc;\n            }\n            arg_10h_00 = L\"\\\"%s\\\" -# \\\"%s\\\" -i \\\"#\\\" --cidx \\\"%s\\\"\";\n        }\n        fcn.004043b6(arg_8h, 0x500, arg_10h_00, in_EDX);\n    }\ncode_r0x004055bc:\n    fcn.004056aa(in_ECX);\n    return;\n}\n",
        "token_count": 383
    },
    "004105a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004105a6(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42763c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040b111();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040b098(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "004086b1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004086b1(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.0040654f(*(unaff_EBP + -0x34));\n    iVar1 = fcn.00407b9f();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.00407b9f();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n        ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.00407377(unaff_EDI[6]);\n        if (iVar1 != 0) {\n            fcn.004072ca(unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "00408897": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00408897(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407b9f();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.00407b9f();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00409beb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00409beb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406100(0x423b38, 0x10);\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0040b111();\n        *puVar1 = 0x16;\n        fcn.0040b35f();\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040a291(unaff_EBP + -0x20, puVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c));\n        *(unaff_EBP + -0x1c) = iVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00409c8b();\n        if (iVar2 != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00406146();\n    return;\n}\n",
        "token_count": 495
    },
    "00409cb7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00409cb7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406100(0x423b58, 0x10);\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0040b111();\n        *puVar1 = 0x16;\n        fcn.0040b35f();\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040a302(unaff_EBP + -0x20, puVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x1c) = iVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00409d57();\n        if (iVar2 != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00406146();\n    return;\n}\n",
        "token_count": 483
    },
    "0040bd20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040bd20(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_46ch;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.0041209b(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.0040b3bf(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.0040bcd1(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_474h, *param_1[4]);\n    fcn.0040bf22();\n    fcn.0040bd06();\n    if (var_46ch != '\\0') {\n        *(var_478h + 0x350) = *(var_478h + 0x350) & 0xfffffffd;\n    }\n    fcn.00412150(var_464h, arg_8h);\n    fcn.004056aa(arg_10h);\n    return;\n}\n",
        "token_count": 361
    },
    "0040c23c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040c23c(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x0040c277:\n                puVar7 = fcn.0040b111();\n                *puVar7 = 0x16;\n                uVar8 = fcn.0040b35f();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x0040c277;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x0040c3b5:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x0040c3b5;\n    param_1[7] = 7;\n    uStack8 = *0x425008 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0040c5f3:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0040c5f7:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040c5fa:\n            cVar5 = fcn.0040cce3(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0040c59f:\n                arg_8h = 0x10;\n                goto code_r0x0040c5fa;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0040c5b3;\n                if (uVar9 < 0x45) goto code_r0x0040c781;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0040c781;\n                    goto code_r0x0040c587;\n                }\n            }\ncode_r0x0040c603:\n            cVar5 = fcn.0040cad9();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.0040ca76();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0040c603;\n            if (uVar9 != 99) goto code_r0x0040c781;\ncode_r0x0040c5b3:\n            cVar5 = fcn.0040cc4b(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.0040cec0();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0040c603;\n            if (uVar9 == 0x69) goto code_r0x0040c5f3;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.0040ce2d();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0040c781;\n                cVar5 = fcn.0040cea1();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0040c781;\n                arg_ch_00 = 0;\n                goto code_r0x0040c59f;\n            }\n            goto code_r0x0040c5f7;\n        }\ncode_r0x0040c587:\n        cVar5 = fcn.0040ced8();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x0040c781;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040c681;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x0040c681:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.0040bbe7(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.0040d142(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0040bbe7(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040d02c(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0040bbe7(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040c781:\n    uVar8 = fcn.004056aa(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2538
    },
    "0040c3b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040c3b8(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x0040c3f3:\n                puVar7 = fcn.0040b111();\n                *puVar7 = 0x16;\n                uVar8 = fcn.0040b35f();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x0040c3f3;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x0040c531:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x0040c531;\n    param_1[7] = 7;\n    uStack8 = *0x425008 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0040c850:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0040c854:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040c857:\n            cVar5 = fcn.0040cce3(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0040c7fc:\n                arg_8h = 0x10;\n                goto code_r0x0040c857;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0040c810;\n                if (uVar9 < 0x45) goto code_r0x0040c9de;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0040c9de;\n                    goto code_r0x0040c7e4;\n                }\n            }\ncode_r0x0040c860:\n            cVar5 = fcn.0040cad9();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.0040ca76();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0040c860;\n            if (uVar9 != 99) goto code_r0x0040c9de;\ncode_r0x0040c810:\n            cVar5 = fcn.0040cc4b(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.0040cec0();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0040c860;\n            if (uVar9 == 0x69) goto code_r0x0040c850;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.0040ce2d();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0040c9de;\n                cVar5 = fcn.0040cea1();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0040c9de;\n                arg_ch_00 = 0;\n                goto code_r0x0040c7fc;\n            }\n            goto code_r0x0040c854;\n        }\ncode_r0x0040c7e4:\n        cVar5 = fcn.0040ced8();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x0040c9de;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040c8de;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x0040c8de:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.0040bc18(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.0040d1cf(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0040bc18(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040d0b7(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0040bc18(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040c9de:\n    uVar8 = fcn.004056aa(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2540
    },
    "0040ed3b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_108h\n\nvoid __cdecl fcn.0040ed3b(uint arg_8h, uint arg_ch, int16_t *arg_10h, int16_t *arg_14h, uint *arg_18h)\n\n{\n    uint *puVar1;\n    uint arg_14h_00;\n    uint *var_108h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    var_108h = arg_18h;\n    if (arg_10h == NULL) {\n        puVar1 = fcn.0040b111();\n        *puVar1 = 0x16;\n        fcn.0040b35f();\n    }\n    else {\n        arg_14h_00 = 0;\n        if (((*arg_10h == 0) || (arg_14h == NULL)) || (*arg_14h == 0)) {\n            puVar1 = fcn.0040b111();\n            *puVar1 = 0x16;\n            fcn.0040b35f();\n        }\n        else {\n            puVar1 = fcn.00413a78(&var_108h, arg_14h, &var_104h, 0x40);\n            if (puVar1 == NULL) {\n                puVar1 = fcn.0040b111();\n                *puVar1 = 0xc;\n            }\n            else {\n                if (arg_8h != '\\0') {\n                    arg_14h_00 = *var_108h;\n                    var_108h = var_108h + 1;\n                }\n                fcn.00413540(arg_ch, arg_10h, puVar1, arg_14h_00);\n                fcn.004105a6(-(puVar1 != &var_104h) & puVar1);\n            }\n        }\n    }\n    fcn.004056aa(var_108h);\n    return;\n}\n",
        "token_count": 452
    },
    "00412545": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00412545(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.00412189(&var_1ch, arg_ch);\n    var_10h = *puVar1;\n    var_ch = puVar1[1];\n    var_8h = puVar1[2];\n    if ((var_8h != '\\0') && (iVar2 = fcn.0040a62b(&var_4h, arg_8h, var_10h, arg_10h, 0x180),  iVar2 == 0)) {\n        *0x426f7c = *0x426f7c + 1;\n        LOCK();\n        arg_14h[3] = arg_14h[3] | var_ch;\n        arg_14h[2] = 0;\n        arg_14h[7] = 0;\n        arg_14h[1] = 0;\n        *arg_14h = 0;\n        arg_14h[4] = var_4h;\n        return arg_14h;\n    }\n    return NULL;\n}\n",
        "token_count": 323
    },
    "004150e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004150e1(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1dh;\n    \n    if (*(unaff_EBP + -0x1d) != '\\0') {\n        fcn.004110d1(3);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00401bf9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401bf9(int16_t **param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0x100;\n    if ((param_1 != NULL) && (piVar6 = *param_1,  piVar6 != NULL)) {\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        iVar1 = fcn.0040433c();\n        for (piVar2 = piVar6 + iVar1; piVar6 <= piVar2; piVar2 = piVar2 + -1) {\n            if ((*piVar2 == 0x5c) || (*piVar2 == 0x2f)) {\n                if (piVar2 == NULL) {\n                    return;\n                }\n                uVar5 = 1;\n                uVar4 = piVar2 + (2 - piVar6) >> 1;\n                if (piVar2 < piVar6) {\n                    uVar4 = 0;\n                }\n                if (uVar4 != 0) {\n                    uVar3 = 0x100;\n                    do {\n                        if (1 < uVar3) {\n                            if (param_2 != NULL) {\n                                *param_2 = *piVar6;\n                                param_2 = param_2 + 1;\n                                uVar3 = var_4h;\n                            }\n                            uVar3 = uVar3 - 1;\n                            var_4h = uVar3;\n                        }\n                        piVar6 = piVar6 + 1;\n                        uVar5 = uVar5 + 1;\n                    } while (uVar5 <= uVar4);\n                }\n                if (param_2 != NULL) {\n                    *param_2 = 0;\n                }\n                *param_1 = piVar6;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 476
    },
    "00401c99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c99(uint *param_1, ushort *param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    ushort *puVar6;\n    uint32_t uVar7;\n    ushort *puVar8;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    ushort *var_8h;\n    uint var_4h;\n    \n    if ((param_1 != NULL) && (puVar8 = *param_1,  puVar8 != NULL)) {\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        var_ch = 0;\n        var_8h = NULL;\n        iVar1 = fcn.004044f9();\n        iVar3 = fcn.0040433c();\n        puVar6 = puVar8 + iVar3;\n        while ((puVar4 = var_8h,  puVar8 <= puVar6 && (iVar2 = fcn.004044f9(),  puVar4 = puVar6,  iVar2 != iVar1))) {\n            puVar6 = puVar6 + -1;\n        }\n        puVar6 = puVar8 + iVar3;\n        if (puVar4 != NULL) {\n            puVar6 = puVar4;\n        }\n        uVar5 = puVar6 + (1 - puVar8) >> 1;\n        if (puVar6 < puVar8) {\n            uVar5 = 0;\n        }\n        if (uVar5 != 0) {\n            uVar7 = 0x100;\n            do {\n                if (1 < uVar7) {\n                    if (param_2 != NULL) {\n                        *param_2 = *puVar8;\n                        param_2 = param_2 + 1;\n                    }\n                    uVar7 = uVar7 - 1;\n                }\n                puVar8 = puVar8 + 1;\n                var_ch = var_ch + 1;\n            } while (var_ch < uVar5);\n        }\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        *param_1 = puVar8;\n    }\n    return;\n}\n",
        "token_count": 513
    },
    "00401d5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d5f(int16_t **param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0x100;\n    if ((param_1 != NULL) && (piVar1 = *param_1,  piVar1 != NULL)) {\n        for (; *piVar1 != 0; piVar1 = piVar1 + 1) {\n            if (1 < uVar2) {\n                if (param_2 != NULL) {\n                    *param_2 = *piVar1;\n                    param_2 = param_2 + 1;\n                }\n                uVar2 = uVar2 - 1;\n            }\n        }\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        *param_1 = piVar1;\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "004028c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004028c8(uint noname_0, ushort *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint arg_8h;\n    uint hKey;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    arg_8h = 0x20119;\n    var_ch = 0x200;\n    hKey = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                      (0x80000002, L\"HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0\", 0, 0x20119, &hKey);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"Identifier\", 0, &var_8h, 0, 0);\n        if (iVar1 == 0) {\n            if ((var_8h == 1) || (var_8h == 2)) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"Identifier\", 0, 0, arg_ch, &var_ch);\n                if (iVar1 == 0) {\n                    uVar2 = var_ch >> 1;\n                    uVar3 = 1;\n                    if ((uVar2 != 0) && (uVar3 = uVar2,  0x100 < uVar2)) {\n                        uVar3 = 0x100;\n                    }\n                    arg_ch[uVar3 - 1] = 0;\n                }\n            }\n            else {\n                iVar1 = 0xb;\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        if (iVar1 == 0) goto code_r0x00402981;\n    }\n    *arg_ch = 0;\ncode_r0x00402981:\n    fcn.004056aa(arg_8h);\n    return;\n}\n",
        "token_count": 480
    },
    "00404f32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404f32(int32_t *param_1, uint param_2)\n\n{\n    int32_t arg_14h;\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    char16_t *arg_10h;\n    \n    piVar1 = fcn.0040b111();\n    arg_14h = *piVar1;\n    iVar2 = *param_1;\n    if (iVar2 < 0) {\n        if (arg_14h == 2) {\n            iVar2 = 0x1f9;\n            *param_1 = 0x1f9;\n            goto code_r0x0040501e;\n        }\n        if (arg_14h == 7) {\n            *param_1 = 0x1f7;\n            goto code_r0x004051d3;\n        }\n        if (arg_14h != 8) {\n            if (arg_14h == 0xc) {\n                iVar2 = 0x1fb;\n                goto code_r0x00404ffc;\n            }\n            if (arg_14h == 0x16) {\n                *param_1 = 0x1f8;\n                iVar2 = 0x1f8;\n                goto code_r0x00404faa;\n            }\n            iVar2 = 0x1f5;\n            *param_1 = 0x1f5;\ncode_r0x00404f80:\n            if (iVar2 == 199) {\ncode_r0x00405191:\n                *param_1 = 199;\n                goto code_r0x004051d3;\n            }\n            if (iVar2 == 500) {\n                arg_10h = L\"Failed to extracted embedded file. Error code %d\";\n                goto code_r0x00405181;\n            }\n            if (iVar2 == 0x1f5) {\n                arg_10h = L\"Failed to execute extracted file. Error code %d\";\n                goto code_r0x00405181;\n            }\n            goto code_r0x00404fec;\n        }\n        iVar2 = 0x1fa;\ncode_r0x00404ffc:\n        *param_1 = iVar2;\ncode_r0x00404faa:\n        if (((iVar2 == 0x1f8) || (iVar2 == 0x1f9)) ||\n           ((iVar2 == 0x1fa || (((iVar2 == 0x1fb || (iVar2 == 1000)) || (iVar2 == 0x3e9)))))) goto code_r0x004051d3;\n        bVar3 = iVar2 == 0x40010004;\ncode_r0x00404fe6:\n        if (bVar3) {\n            *param_1 = 0x75;\ncode_r0x004051d3:\n            fcn.00404383(0x100);\n            return;\n        }\n    }\n    else {\ncode_r0x0040501e:\n        if (0x71 < iVar2) {\n            if (0x1f7 < iVar2) goto code_r0x00404faa;\n            if (iVar2 == 0x1f7) goto code_r0x004051d3;\n            if (0x76 < iVar2) goto code_r0x00404f80;\n            if ((((iVar2 == 0x76) || (iVar2 == 0x72)) || (iVar2 == 0x73)) || (iVar2 == 0x74)) goto code_r0x004051d3;\n            bVar3 = iVar2 == 0x75;\n            goto code_r0x00404fe6;\n        }\n        if (iVar2 == 0x71) goto code_r0x004051d3;\n        if (0x68 < iVar2) {\n    // switch table (8 cases) at 0x4051e6\n            switch(iVar2) {\n            case 0x69:\n                break;\n            case 0x6a:\n                break;\n            case 0x6b:\n                break;\n            case 0x6c:\n                break;\n            case 0x6d:\n                break;\n            case 0x6e:\n                break;\n            case 0x6f:\n                break;\n            case 0x70:\n                break;\n            default:\n                goto code_r0x00404fec;\n            }\n            goto code_r0x004051d3;\n        }\n        if (iVar2 == 0x68) goto code_r0x004051d3;\n        if (iVar2 < 0x65) {\n            if (iVar2 == 100) goto code_r0x004051d3;\n            if (iVar2 == -0x3ffffffb) goto code_r0x00405191;\n            if (iVar2 == -0x3ffffec6) goto code_r0x004050a7;\n            if (iVar2 == 0) goto code_r0x004051d3;\n            if (iVar2 == 1) {\n                *param_1 = 0x1f6;\n                goto code_r0x004051d3;\n            }\n        }\n        else {\n            if (iVar2 == 0x65) {\ncode_r0x004050a7:\n                *param_1 = 0x65;\n                goto code_r0x004051d3;\n            }\n            if ((iVar2 == 0x66) || (iVar2 == 0x67)) goto code_r0x004051d3;\n        }\n    }\ncode_r0x00404fec:\n    arg_10h = L\"Process ended due to an unknown event. Error code %d\";\ncode_r0x00405181:\n    fcn.004043b6(param_2, 0x100, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 1292
    },
    "004060b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004060b2(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.004101c1();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "0040bf22": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040bf22(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.0040cf8c();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x0040bf47:\n        puVar3 = fcn.0040b111();\n        *puVar3 = 0x16;\n        fcn.0040b35f();\ncode_r0x0040bf57:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x0040c007:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x0040bff0:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x0040c007;\n                uVar4 = fcn.0040be34(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x40c022\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.0040c19f();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x0040bff0;\n                case 2:\n                    cVar2 = fcn.0040c162();\n                    break;\n                case 3:\n                    cVar2 = fcn.0040c9ee();\n                    break;\n                case 4:\n                    goto code_r0x0040bfca;\n                case 5:\n                    cVar2 = fcn.0040c213();\n                    break;\n                case 6:\n                    cVar2 = fcn.0040c23c();\n                    break;\n                case 7:\n                    cVar2 = fcn.0040c534();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x0040bf57;\n                default:\n                    goto code_r0x0040bf47;\n                }\n                if (cVar2 == '\\0') goto code_r0x0040bf57;\n                goto code_r0x0040bff0;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x0040c007;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x0040bfca:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0040bff0;\n}\n",
        "token_count": 841
    },
    "0040c042": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c042(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.0040cf8c();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x0040c067:\n        puVar3 = fcn.0040b111();\n        *puVar3 = 0x16;\n        fcn.0040b35f();\ncode_r0x0040c077:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x0040c127:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x0040c110:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x0040c127;\n                uVar4 = fcn.0040be34(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x40c142\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.0040c1be();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x0040c110;\n                case 2:\n                    cVar2 = fcn.0040c162();\n                    break;\n                case 3:\n                    cVar2 = fcn.0040c9ee();\n                    break;\n                case 4:\n                    goto code_r0x0040c0ea;\n                case 5:\n                    cVar2 = fcn.0040c213();\n                    break;\n                case 6:\n                    cVar2 = fcn.0040c3b8();\n                    break;\n                case 7:\n                    cVar2 = fcn.0040c791();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x0040c077;\n                default:\n                    goto code_r0x0040c067;\n                }\n                if (cVar2 == '\\0') goto code_r0x0040c077;\n                goto code_r0x0040c110;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x0040c127;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x0040c0ea:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0040c110;\n}\n",
        "token_count": 844
    },
    "00403d77": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d77(uint32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = *0x42678c;\n    var_10h = *0x426790;\n    var_18h = *0x426794;\n    var_8h = *0x42679c;\n    var_ch = *0x4267a0;\n    var_1ch = *0x4267a4;\n    var_4h = 0;\n    uVar4 = *0x426788;\n    uVar9 = *0x426798;\n    uVar5 = var_4h;\n    do {\n        var_4h = uVar5;\n        uVar8 = uVar9;\n        uVar6 = uVar4;\n        uVar9 = var_18h;\n        uVar4 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        uVar4 = uVar4 << 0x10 | uVar4 >> 0x10;\n        uVar4 = (uVar4 >> 8 ^ uVar4 << 8) & 0xff00ff ^ uVar4 << 8;\n        *(var_4h * 4 + 0x4267b0) = uVar4;\n        iVar7 = ((uVar8 >> 0xb | uVar8 << 0x15) ^ (uVar8 << 7 | uVar8 >> 0x19) ^ (uVar8 >> 6 | uVar8 << 0x1a)) +\n                (~uVar8 & var_ch ^ var_8h & uVar8) + *(var_4h * 4 + 0x421aa0) + uVar4 + var_1ch;\n        uVar4 = (var_14h ^ uVar6) & var_10h;\n        var_1ch = var_ch;\n        var_ch = var_8h;\n        var_18h = var_10h;\n        uVar9 = uVar9 + iVar7;\n        var_10h = var_14h;\n        uVar4 = ((uVar6 >> 0xd | uVar6 << 0x13) ^ (uVar6 << 10 | uVar6 >> 0x16) ^ (uVar6 >> 2 | uVar6 << 0x1e)) +\n                (uVar4 ^ var_14h & uVar6) + iVar7;\n        uVar5 = var_4h + 1;\n        var_14h = uVar6;\n        var_8h = uVar8;\n    } while (uVar5 < 0x10);\n    var_4h = var_4h + 0xf;\n    uVar3 = var_10h;\n    uVar2 = var_ch;\n    do {\n        var_ch = uVar2;\n        var_10h = uVar3;\n        var_14h = uVar6;\n        var_20h = uVar9;\n        uVar6 = uVar4;\n        uVar8 = var_8h;\n        uVar4 = *((var_4h + 3 & 0xf) * 4 + 0x4267b0);\n        uVar9 = *((var_4h & 0xf) * 4 + 0x4267b0);\n        piVar1 = (uVar5 & 0xf) * 4 + 0x4267b0;\n        *piVar1 = *piVar1 + ((uVar9 << 0xf | uVar9 >> 0x11) ^ (uVar9 << 0xd | uVar9 >> 0x13) ^ uVar9 >> 10) +\n                            ((uVar4 << 0xe | uVar4 >> 0x12) ^ (uVar4 >> 7 | uVar4 << 0x19) ^ uVar4 >> 3) +\n                            *((var_4h - 5 & 0xf) * 4 + 0x4267b0);\n        iVar7 = ((var_20h >> 0xb | var_20h << 0x15) ^ (var_20h << 7 | var_20h >> 0x19) ^\n                (var_20h >> 6 | var_20h << 0x1a)) + (~var_20h & var_ch ^ var_8h & var_20h) + *(uVar5 * 4 + 0x421aa0) +\n                *((uVar5 & 0xf) * 4 + 0x4267b0) + var_1ch;\n        var_1ch = var_ch;\n        uVar2 = var_8h;\n        var_8h = var_20h;\n        uVar9 = var_18h + iVar7;\n        uVar4 = ((uVar6 >> 0xd | uVar6 << 0x13) ^ (uVar6 << 10 | uVar6 >> 0x16) ^ (uVar6 >> 2 | uVar6 << 0x1e)) +\n                ((var_14h ^ uVar6) & var_10h ^ var_14h & uVar6) + iVar7;\n        uVar5 = uVar5 + 1;\n        var_4h = var_4h + 1;\n        var_18h = var_10h;\n        uVar3 = var_14h;\n    } while (uVar5 < 0x40);\n    *0x426798 = *0x426798 + uVar9;\n    *0x426790 = *0x426790 + var_14h;\n    *0x42679c = *0x42679c + var_20h;\n    *0x42678c = *0x42678c + uVar6;\n    *0x4267a0 = *0x4267a0 + uVar8;\n    *0x426788 = *0x426788 + uVar4;\n    *0x426794 = *0x426794 + var_10h;\n    *0x4267a4 = *0x4267a4 + var_ch;\n    return;\n}\n",
        "token_count": 1515
    },
    "00402192": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __cdecl fcn.00402192(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    uVar8 = arg_8h[2];\n    iVar1 = *arg_8h;\n    uVar4 = arg_8h[1];\n    uVar6 = arg_8h[3];\n    puVar5 = &var_44h;\n    iVar7 = 0x10;\n    puVar2 = arg_ch + 2;\n    do {\n        *puVar5 = CONCAT31(CONCAT21(*puVar2, *(puVar2 + -1)), *(puVar2 + -1));\n        puVar5 = puVar5 + 1;\n        iVar7 = iVar7 + -1;\n        puVar2 = puVar2 + 2;\n    } while (iVar7 != 0);\n    uVar3 = iVar1 + -0x28955b88 + (~uVar4 & uVar6 | uVar8 & uVar4) + var_44h;\n    uVar3 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar4;\n    uVar6 = uVar6 + 0xe8c7b756 + (~uVar3 & uVar8 | uVar4 & uVar3) + var_40h;\n    uVar6 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar3;\n    uVar8 = uVar8 + 0x242070db + (~uVar6 & uVar4 | uVar6 & uVar3) + var_3ch;\n    uVar9 = (uVar8 >> 0xf | uVar8 * 0x20000) + uVar6;\n    uVar8 = uVar4 + 0xc1bdceee + (~uVar9 & uVar3 | uVar6 & uVar9) + var_38h;\n    uVar4 = (uVar8 >> 10 | uVar8 * 0x400000) + uVar9;\n    uVar3 = uVar3 + (~uVar4 & uVar6 | uVar9 & uVar4) + 0xf57c0faf + var_34h;\n    uVar8 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar4;\n    uVar6 = uVar6 + (~uVar8 & uVar9 | uVar4 & uVar8) + 0x4787c62a + var_30h;\n    uVar6 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar8;\n    uVar9 = uVar9 + (~uVar6 & uVar4 | uVar6 & uVar8) + 0xa8304613 + var_2ch;\n    uVar3 = (uVar9 >> 0xf | uVar9 * 0x20000) + uVar6;\n    uVar4 = uVar4 + (~uVar3 & uVar8 | uVar6 & uVar3) + 0xfd469501 + var_28h;\n    uVar4 = (uVar4 >> 10 | uVar4 * 0x400000) + uVar3;\n    uVar8 = uVar8 + (~uVar4 & uVar6 | uVar3 & uVar4) + 0x698098d8 + var_24h;\n    uVar8 = (uVar8 * 0x80 | uVar8 >> 0x19) + uVar4;\n    uVar6 = uVar6 + (~uVar8 & uVar3 | uVar4 & uVar8) + 0x8b44f7af + var_20h;\n    uVar6 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar8;\n    uVar3 = uVar3 + ((~uVar6 & uVar4 | uVar6 & uVar8) - 0xa44f) + var_1ch;\n    uVar3 = (uVar3 >> 0xf | uVar3 * 0x20000) + uVar6;\n    uVar4 = uVar4 + (~uVar3 & uVar8 | uVar6 & uVar3) + 0x895cd7be + var_18h;\n    uVar4 = (uVar4 >> 10 | uVar4 * 0x400000) + uVar3;\n    uVar8 = uVar8 + (~uVar4 & uVar6 | uVar3 & uVar4) + 0x6b901122 + var_14h;\n    uVar8 = (uVar8 * 0x80 | uVar8 >> 0x19) + uVar4;\n    uVar6 = uVar6 + 0xfd987193 + (~uVar8 & uVar3 | uVar4 & uVar8) + var_10h;\n    uVar9 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar8;\n    uVar6 = uVar3 + 0xa679438e + (~uVar9 & uVar4 | uVar9 & uVar8) + var_ch;\n    uVar6 = (uVar6 >> 0xf | uVar6 * 0x20000) + uVar9;\n    uVar4 = uVar4 + 0x49b40821 + (~uVar6 & uVar8 | uVar9 & uVar6) + var_8h;\n    uVar10 = (uVar4 >> 10 | uVar4 * 0x400000) + uVar6;\n    uVar8 = (~uVar9 & uVar6 | uVar9 & uVar10) + var_40h + uVar8 + 0xf61e2562;\n    uVar3 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar10;\n    uVar8 = (~uVar6 & uVar10 | uVar6 & uVar3) + var_2ch + uVar9 + 0xc040b340;\n    uVar8 = (uVar8 * 0x200 | uVar8 >> 0x17) + uVar3;\n    uVar6 = uVar6 + (~uVar10 & uVar3 | uVar8 & uVar10) + 0x265e5a51 + var_18h;\n    uVar4 = (uVar6 * 0x4000 | uVar6 >> 0x12) + uVar8;\n    uVar10 = uVar10 + (~uVar3 & uVar8 | uVar4 & uVar3) + 0xe9b6c7aa + var_44h;\n    uVar9 = (uVar10 >> 0xc | uVar10 * 0x100000) + uVar4;\n    uVar3 = uVar3 + (~uVar8 & uVar4 | uVar8 & uVar9) + 0xd62f105d + var_30h;\n    uVar6 = (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar9;\n    uVar8 = uVar8 + (~uVar4 & uVar9 | uVar4 & uVar6) + 0x2441453 + var_1ch;\n    uVar8 = (uVar8 * 0x200 | uVar8 >> 0x17) + uVar6;\n    uVar4 = uVar4 + (~uVar9 & uVar6 | uVar8 & uVar9) + 0xd8a1e681 + var_8h;\n    uVar4 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar8;\n    uVar9 = uVar9 + (~uVar6 & uVar8 | uVar4 & uVar6) + 0xe7d3fbc8 + var_34h;\n    uVar9 = (uVar9 >> 0xc | uVar9 * 0x100000) + uVar4;\n    uVar6 = uVar6 + (~uVar8 & uVar4 | uVar8 & uVar9) + 0x21e1cde6 + var_20h;\n    uVar3 = (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar9;\n    uVar8 = uVar8 + (~uVar4 & uVar9 | uVar4 & uVar3) + 0xc33707d6 + var_ch;\n    uVar8 = (uVar8 * 0x200 | uVar8 >> 0x17) + uVar3;\n    uVar4 = uVar4 + (~uVar9 & uVar3 | uVar8 & uVar9) + 0xf4d50d87 + var_38h;\n    uVar6 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar8;\n    uVar9 = uVar9 + (~uVar3 & uVar8 | uVar6 & uVar3) + 0x455a14ed + var_24h;\n    uVar9 = (uVar9 >> 0xc | uVar9 * 0x100000) + uVar6;\n    uVar4 = uVar3 + 0xa9e3e905 + (~uVar8 & uVar6 | uVar8 & uVar9) + var_10h;\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar9;\n    uVar8 = uVar8 + 0xfcefa3f8 + (~uVar6 & uVar9 | uVar6 & uVar4) + var_3ch;\n    uVar3 = (uVar8 * 0x200 | uVar8 >> 0x17) + uVar4;\n    uVar8 = uVar6 + 0x676f02d9 + (~uVar9 & uVar4 | uVar3 & uVar9) + var_28h;\n    uVar10 = (uVar8 * 0x4000 | uVar8 >> 0x12) + uVar3;\n    uVar8 = uVar9 + 0x8d2a4c8a + (~uVar4 & uVar3 | uVar10 & uVar4) + var_14h;\n    uVar6 = (uVar8 >> 0xc | uVar8 * 0x100000) + uVar10;\n    uVar4 = uVar4 + ((uVar3 ^ uVar10 ^ uVar6) - 0x5c6be) + var_30h;\n    uVar8 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar6;\n    uVar3 = uVar3 + (uVar10 ^ uVar6 ^ uVar8) + 0x8771f681 + var_24h;\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar8;\n    uVar10 = uVar10 + (uVar3 ^ uVar6 ^ uVar8) + 0x6d9d6122 + var_18h;\n    uVar9 = (uVar10 * 0x10000 | uVar10 >> 0x10) + uVar3;\n    uVar6 = uVar6 + (uVar3 ^ uVar9 ^ uVar8) + 0xfde5380c + var_ch;\n    uVar4 = (uVar6 >> 9 | uVar6 * 0x800000) + uVar9;\n    uVar8 = uVar8 + (uVar3 ^ uVar9 ^ uVar4) + 0xa4beea44 + var_40h;\n    uVar8 = (uVar8 * 0x10 | uVar8 >> 0x1c) + uVar4;\n    uVar3 = uVar3 + (uVar9 ^ uVar4 ^ uVar8) + 0x4bdecfa9 + var_34h;\n    uVar6 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar8;\n    uVar9 = uVar9 + (uVar6 ^ uVar4 ^ uVar8) + 0xf6bb4b60 + var_28h;\n    uVar3 = (uVar9 * 0x10000 | uVar9 >> 0x10) + uVar6;\n    uVar4 = uVar4 + (uVar6 ^ uVar3 ^ uVar8) + 0xbebfbc70 + var_1ch;\n    uVar4 = (uVar4 >> 9 | uVar4 * 0x800000) + uVar3;\n    uVar8 = uVar8 + (uVar6 ^ uVar3 ^ uVar4) + 0x289b7ec6 + var_10h;\n    uVar8 = (uVar8 * 0x10 | uVar8 >> 0x1c) + uVar4;\n    uVar6 = uVar6 + (uVar3 ^ uVar4 ^ uVar8) + 0xeaa127fa + var_44h;\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar8;\n    uVar3 = uVar3 + (uVar6 ^ uVar4 ^ uVar8) + 0xd4ef3085 + var_38h;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar4 = (uVar8 ^ uVar6 ^ uVar3) + 0x4881d05 + var_2ch + uVar4;\n    uVar4 = (uVar4 >> 9 | uVar4 * 0x800000) + uVar3;\n    uVar8 = (uVar6 ^ uVar3 ^ uVar4) + var_20h + uVar8 + 0xd9d4d039;\n    uVar8 = (uVar8 * 0x10 | uVar8 >> 0x1c) + uVar4;\n    uVar6 = uVar6 + (uVar3 ^ uVar4 ^ uVar8) + 0xe6db99e5 + var_14h;\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar8;\n    uVar3 = uVar3 + (uVar6 ^ uVar4 ^ uVar8) + 0x1fa27cf8 + var_8h;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar4 = uVar4 + (uVar6 ^ uVar3 ^ uVar8) + 0xc4ac5665 + var_3ch;\n    uVar4 = (uVar4 >> 9 | uVar4 * 0x800000) + uVar3;\n    uVar8 = uVar8 + ((~uVar6 | uVar4) ^ uVar3) + 0xf4292244 + var_44h;\n    uVar8 = (uVar8 * 0x40 | uVar8 >> 0x1a) + uVar4;\n    uVar6 = uVar6 + ((~uVar3 | uVar8) ^ uVar4) + 0x432aff97 + var_28h;\n    uVar6 = (uVar6 * 0x400 | uVar6 >> 0x16) + uVar8;\n    uVar3 = uVar3 + ((~uVar4 | uVar6) ^ uVar8) + 0xab9423a7 + var_ch;\n    uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar6;\n    uVar4 = uVar4 + ((~uVar8 | uVar3) ^ uVar6) + 0xfc93a039 + var_30h;\n    uVar4 = (uVar4 >> 0xb | uVar4 * 0x200000) + uVar3;\n    uVar8 = uVar8 + ((~uVar6 | uVar4) ^ uVar3) + 0x655b59c3 + var_14h;\n    uVar8 = (uVar8 * 0x40 | uVar8 >> 0x1a) + uVar4;\n    uVar6 = uVar6 + ((~uVar3 | uVar8) ^ uVar4) + 0x8f0ccc92 + var_38h;\n    uVar6 = (uVar6 * 0x400 | uVar6 >> 0x16) + uVar8;\n    uVar3 = uVar3 + (((~uVar4 | uVar6) ^ uVar8) - 0x100b83) + var_1ch;\n    uVar9 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar6;\n    uVar4 = uVar4 + ((~uVar8 | uVar9) ^ uVar6) + 0x85845dd1 + var_40h;\n    uVar4 = (uVar4 >> 0xb | uVar4 * 0x200000) + uVar9;\n    uVar8 = uVar8 + ((~uVar6 | uVar4) ^ uVar9) + 0x6fa87e4f + var_24h;\n    uVar8 = (uVar8 * 0x40 | uVar8 >> 0x1a) + uVar4;\n    uVar6 = uVar6 + 0xfe2ce6e0 + ((~uVar9 | uVar8) ^ uVar4) + var_8h;\n    uVar3 = (uVar6 * 0x400 | uVar6 >> 0x16) + uVar8;\n    uVar9 = uVar9 + ((~uVar4 | uVar3) ^ uVar8) + 0xa3014314 + var_2ch;\n    uVar10 = (uVar9 * 0x8000 | uVar9 >> 0x11) + uVar3;\n    uVar4 = uVar4 + ((~uVar8 | uVar10) ^ uVar3) + 0x4e0811a1 + var_10h;\n    uVar6 = (uVar4 >> 0xb | uVar4 * 0x200000) + uVar10;\n    uVar8 = uVar8 + 0xf7537e82 + ((~uVar3 | uVar6) ^ uVar10) + var_34h;\n    uVar9 = (uVar8 * 0x40 | uVar8 >> 0x1a) + uVar6;\n    uVar8 = uVar3 + 0xbd3af235 + ((~uVar10 | uVar9) ^ uVar6) + var_18h;\n    uVar3 = (uVar8 * 0x400 | uVar8 >> 0x16) + uVar9;\n    uVar8 = uVar10 + 0x2ad7d2bb + ((~uVar6 | uVar3) ^ uVar9) + var_3ch;\n    uVar4 = (uVar8 * 0x8000 | uVar8 >> 0x11) + uVar3;\n    *arg_8h = iVar1 + uVar9;\n    arg_8h[2] = arg_8h[2] + uVar4;\n    uVar8 = uVar6 + 0xeb86d391 + ((~uVar9 | uVar4) ^ uVar3) + var_20h;\n    arg_8h[3] = arg_8h[3] + uVar3;\n    arg_8h[1] = (uVar8 >> 0xb | uVar8 * 0x200000) + arg_8h[1] + uVar4;\n    fcn.004056aa(arg_8h);\n    return;\n}\n",
        "token_count": 4922
    },
    "00402bdb": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402bdb(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar16 = CONCAT31(CONCAT21(CONCAT11(*arg_8h, arg_8h[1]), arg_8h[2]), arg_8h[3]);\n    uVar19 = CONCAT31(CONCAT21(CONCAT11(arg_8h[4], arg_8h[5]), arg_8h[6]), arg_8h[7]);\n    uVar1 = CONCAT31(CONCAT21(CONCAT11(arg_8h[8], arg_8h[9]), arg_8h[10]), arg_8h[0xb]);\n    uVar2 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0xc], arg_8h[0xd]), arg_8h[0xe]), arg_8h[0xf]);\n    uVar3 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x10], arg_8h[0x11]), arg_8h[0x12]), arg_8h[0x13]);\n    uVar4 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x14], arg_8h[0x15]), arg_8h[0x16]), arg_8h[0x17]);\n    uVar5 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x18], arg_8h[0x19]), arg_8h[0x1a]), arg_8h[0x1b]);\n    uVar6 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x1c], arg_8h[0x1d]), arg_8h[0x1e]), arg_8h[0x1f]);\n    uVar7 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x20], arg_8h[0x21]), arg_8h[0x22]), arg_8h[0x23]);\n    uVar8 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x24], arg_8h[0x25]), arg_8h[0x26]), arg_8h[0x27]);\n    uVar9 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x28], arg_8h[0x29]), arg_8h[0x2a]), arg_8h[0x2b]);\n    uVar10 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x2c], arg_8h[0x2d]), arg_8h[0x2e]), arg_8h[0x2f]);\n    uVar11 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x30], arg_8h[0x31]), arg_8h[0x32]), arg_8h[0x33]);\n    uVar12 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x34], arg_8h[0x35]), arg_8h[0x36]), arg_8h[0x37]);\n    uVar13 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x38], arg_8h[0x39]), arg_8h[0x3a]), arg_8h[0x3b]);\n    uVar14 = CONCAT31(CONCAT21(CONCAT11(arg_8h[0x3c], arg_8h[0x3d]), arg_8h[0x3e]), arg_8h[0x3f]);\n    uVar15 = *0x4269a0 >> 2 | *0x4269a0 << 0x1e;\n    uVar17 = uVar16 + ((*0x4269a8 ^ *0x4269a4) & *0x4269a0 ^ *0x4269a8) +\n                      (*0x42699c << 5 | *0x42699c >> 0x1b) + 0x5a827999 + *0x4269ac;\n    uVar24 = *0x42699c >> 2 | *0x42699c << 0x1e;\n    uVar20 = uVar19 + (uVar17 * 0x20 | uVar17 >> 0x1b) + ((*0x4269a4 ^ uVar15) & *0x42699c ^ *0x4269a4) +\n             *0x4269a8 + 0x5a827999;\n    uVar18 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar17 = ((uVar24 ^ uVar15) & uVar17 ^ uVar15) + (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar1 + *0x4269a4 + 0x5a827999;\n    uVar21 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar15 = uVar15 + 0x5a827999 + ((uVar18 ^ uVar24) & uVar20 ^ uVar24) + (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar2;\n    uVar25 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar17 = (uVar18 ^ (uVar18 ^ uVar21) & uVar17) + (uVar15 * 0x20 | uVar15 >> 0x1b) + uVar3 + uVar24 + 0x5a827999;\n    uVar20 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar15 = uVar18 + 0x5a827999 + ((uVar21 ^ uVar25) & uVar15 ^ uVar21) + (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar4;\n    uVar24 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar17 = (uVar15 * 0x20 | uVar15 >> 0x1b) + uVar5 + ((uVar25 ^ uVar20) & uVar17 ^ uVar25) + uVar21 + 0x5a827999;\n    uVar22 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar15 = (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar6 + ((uVar20 ^ uVar24) & uVar15 ^ uVar20) + uVar25 + 0x5a827999;\n    uVar25 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar17 = (uVar15 * 0x20 | uVar15 >> 0x1b) + uVar7 + ((uVar22 ^ uVar24) & uVar17 ^ uVar24) + uVar20 + 0x5a827999;\n    uVar18 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar15 = (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar8 + ((uVar22 ^ uVar25) & uVar15 ^ uVar22) + uVar24 + 0x5a827999;\n    uVar21 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar17 = (uVar15 * 0x20 | uVar15 >> 0x1b) + uVar9 + ((uVar25 ^ uVar18) & uVar17 ^ uVar25) + uVar22 + 0x5a827999;\n    uVar20 = (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar10 + ((uVar18 ^ uVar21) & uVar15 ^ uVar18) + uVar25 + 0x5a827999;\n    uVar22 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar25 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar15 = (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar11 + ((uVar21 ^ uVar22) & uVar17 ^ uVar21) + uVar18 + 0x5a827999;\n    uVar24 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar17 = (uVar15 * 0x20 | uVar15 >> 0x1b) + uVar12 + ((uVar25 ^ uVar22) & uVar20 ^ uVar22) + uVar21 + 0x5a827999;\n    uVar21 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar20 = (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar13 + ((uVar25 ^ uVar24) & uVar15 ^ uVar25) + uVar22 + 0x5a827999;\n    uVar22 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar15 = ((uVar24 ^ uVar21) & uVar17 ^ uVar24) + (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar14 + uVar25 + 0x5a827999;\n    uVar16 = uVar12 ^ uVar7 ^ uVar1 ^ uVar16;\n    uVar18 = uVar16 << 1 | uVar16 < 0;\n    uVar25 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar17 = ((uVar21 ^ uVar22) & uVar20 ^ uVar21) + (uVar15 * 0x20 | uVar15 >> 0x1b) + uVar18 + uVar24 + 0x5a827999;\n    uVar19 = uVar13 ^ uVar8 ^ uVar2 ^ uVar19;\n    uVar24 = uVar19 << 1 | uVar19 < 0;\n    uVar16 = uVar24 + (uVar17 * 0x20 | uVar17 >> 0x1b) + ((uVar22 ^ uVar25) & uVar15 ^ uVar22) + uVar21 + 0x5a827999;\n    uVar1 = uVar14 ^ uVar9 ^ uVar3 ^ uVar1;\n    uVar15 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar19 = uVar1 << 1 | uVar1 < 0;\n    uVar21 = uVar19 + (uVar16 * 0x20 | uVar16 >> 0x1b) + ((uVar15 ^ uVar25) & uVar17 ^ uVar25) + uVar22 + 0x5a827999;\n    uVar20 = uVar10 ^ uVar4 ^ uVar2 ^ uVar18;\n    uVar20 = uVar20 << 1 | uVar20 < 0;\n    uVar22 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar17 = uVar11 ^ uVar5 ^ uVar3 ^ uVar24;\n    uVar1 = (uVar16 & (uVar15 ^ uVar22) ^ uVar15) + (uVar21 * 0x20 | uVar21 >> 0x1b) + uVar20 + uVar25 + 0x5a827999;\n    uVar17 = uVar17 << 1 | uVar17 < 0;\n    uVar26 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar16 = uVar12 ^ uVar6 ^ uVar4 ^ uVar19;\n    uVar4 = (uVar22 ^ uVar26 ^ uVar21) + (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar17 + uVar15 + 0x6ed9eba1;\n    uVar15 = uVar16 << 1 | uVar16 < 0;\n    uVar2 = uVar21 >> 2 | uVar21 * 0x40000000;\n    uVar21 = (uVar26 ^ uVar2 ^ uVar1) + (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar15 + uVar22 + 0x6ed9eba1;\n    uVar3 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar16 = uVar13 ^ uVar7 ^ uVar5 ^ uVar20;\n    uVar16 = uVar16 << 1 | uVar16 < 0;\n    uVar25 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar1 = uVar14 ^ uVar8 ^ uVar6 ^ uVar17;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar5 = (uVar2 ^ uVar4 ^ uVar3) + (uVar21 * 0x20 | uVar21 >> 0x1b) + uVar16 + uVar26 + 0x6ed9eba1;\n    uVar26 = uVar21 >> 2 | uVar21 * 0x40000000;\n    uVar4 = uVar2 + 0x6ed9eba1 + (uVar25 ^ uVar21 ^ uVar3) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1;\n    uVar2 = uVar9 ^ uVar7 ^ uVar15 ^ uVar18;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar22 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar2 + (uVar25 ^ uVar26 ^ uVar5) + uVar3 + 0x6ed9eba1;\n    uVar3 = uVar10 ^ uVar8 ^ uVar16 ^ uVar24;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar21 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar6 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar3 + (uVar26 ^ uVar22 ^ uVar4) + uVar25 + 0x6ed9eba1;\n    uVar4 = uVar11 ^ uVar9 ^ uVar1 ^ uVar19;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar7 = (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar4 + (uVar22 ^ uVar21 ^ uVar5) + uVar26 + 0x6ed9eba1;\n    uVar25 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = uVar12 ^ uVar10 ^ uVar2 ^ uVar20;\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    uVar26 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar8 = (uVar7 * 0x20 | uVar7 >> 0x1b) + uVar5 + (uVar6 ^ uVar21 ^ uVar25) + uVar22 + 0x6ed9eba1;\n    uVar6 = uVar13 ^ uVar11 ^ uVar3 ^ uVar17;\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    uVar22 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar9 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar6 + (uVar26 ^ uVar7 ^ uVar25) + uVar21 + 0x6ed9eba1;\n    uVar7 = uVar14 ^ uVar12 ^ uVar4 ^ uVar15;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar21 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar10 = (uVar9 * 0x20 | uVar9 >> 0x1b) + uVar7 + (uVar26 ^ uVar22 ^ uVar8) + uVar25 + 0x6ed9eba1;\n    uVar8 = uVar13 ^ uVar5 ^ uVar16 ^ uVar18;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar25 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar11 = (uVar10 * 0x20 | uVar10 >> 0x1b) + uVar8 + (uVar22 ^ uVar21 ^ uVar9) + uVar26 + 0x6ed9eba1;\n    uVar9 = uVar14 ^ uVar6 ^ uVar1 ^ uVar24;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar12 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar9 + (uVar21 ^ uVar25 ^ uVar10) + uVar22 + 0x6ed9eba1;\n    uVar18 = uVar7 ^ uVar2 ^ uVar19 ^ uVar18;\n    uVar18 = uVar18 << 1 | uVar18 < 0;\n    uVar22 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar14 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar10 = (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar18 + (uVar11 ^ uVar25 ^ uVar22) + uVar21 + 0x6ed9eba1;\n    uVar24 = uVar8 ^ uVar3 ^ uVar20 ^ uVar24;\n    uVar24 = uVar24 << 1 | uVar24 < 0;\n    uVar13 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar11 = (uVar10 * 0x20 | uVar10 >> 0x1b) + uVar24 + (uVar14 ^ uVar12 ^ uVar22) + uVar25 + 0x6ed9eba1;\n    uVar19 = uVar9 ^ uVar4 ^ uVar17 ^ uVar19;\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar21 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar12 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar19 + (uVar14 ^ uVar13 ^ uVar10) + uVar22 + 0x6ed9eba1;\n    uVar20 = uVar5 ^ uVar15 ^ uVar20 ^ uVar18;\n    uVar20 = uVar20 << 1 | uVar20 < 0;\n    uVar25 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar10 = (uVar13 ^ uVar21 ^ uVar11) + (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar20 + uVar14 + 0x6ed9eba1;\n    uVar17 = uVar6 ^ uVar16 ^ uVar17 ^ uVar24;\n    uVar11 = uVar17 << 1 | uVar17 < 0;\n    uVar14 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar12 = (uVar10 * 0x20 | uVar10 >> 0x1b) + uVar11 + (uVar21 ^ uVar25 ^ uVar12) + uVar13 + 0x6ed9eba1;\n    uVar15 = uVar7 ^ uVar1 ^ uVar15 ^ uVar19;\n    uVar15 = uVar15 << 1 | uVar15 < 0;\n    uVar13 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar10 = (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar15 + (uVar10 ^ uVar25 ^ uVar14) + uVar21 + 0x6ed9eba1;\n    uVar17 = uVar8 ^ uVar2 ^ uVar16 ^ uVar20;\n    uVar17 = uVar17 << 1 | uVar17 < 0;\n    uVar22 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar12 = (uVar10 * 0x20 | uVar10 >> 0x1b) + uVar17 + (uVar13 ^ uVar12 ^ uVar14) + uVar25 + 0x6ed9eba1;\n    uVar16 = uVar9 ^ uVar3 ^ uVar1 ^ uVar11;\n    uVar16 = uVar16 << 1 | uVar16 < 0;\n    uVar26 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar14 = (uVar13 ^ uVar22 ^ uVar10) + (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar16 + uVar14 + 0x6ed9eba1;\n    uVar1 = uVar4 ^ uVar2 ^ uVar15 ^ uVar18;\n    uVar10 = uVar1 << 1 | uVar1 < 0;\n    uVar21 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar1 = (uVar14 * 0x20 | uVar14 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar26 | uVar12) & uVar22 | uVar26 & uVar12) + uVar10 + uVar13;\n    uVar2 = uVar5 ^ uVar3 ^ uVar17 ^ uVar24;\n    uVar12 = uVar2 << 1 | uVar2 < 0;\n    uVar25 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar21 | uVar14) & uVar26 | uVar21 & uVar14) + uVar12 + uVar22;\n    uVar3 = uVar6 ^ uVar4 ^ uVar16 ^ uVar19;\n    uVar13 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = uVar7 ^ uVar5 ^ uVar10 ^ uVar20;\n    uVar14 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = (uVar1 & uVar25 | (uVar1 | uVar25) & uVar21) + uVar13 + uVar26 + 0x8f1bbcdc + (uVar2 * 0x20 | uVar2 >> 0x1b)\n    ;\n    uVar26 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar26 | uVar2) & uVar25 | uVar26 & uVar2) + uVar14 + uVar21\n    ;\n    uVar5 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar8 ^ uVar6 ^ uVar12 ^ uVar11;\n    uVar21 = uVar2 << 1 | uVar2 < 0;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar5 | uVar3) & uVar26 | uVar5 & uVar3) + uVar21 + uVar25;\n    uVar4 = uVar9 ^ uVar7 ^ uVar13 ^ uVar15;\n    uVar7 = uVar4 << 1 | uVar4 < 0;\n    uVar22 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar3 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar22 | uVar1) & uVar5 | uVar22 & uVar1) + uVar7 + uVar26;\n    uVar25 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = uVar8 ^ uVar14 ^ uVar17 ^ uVar18;\n    uVar8 = uVar1 << 1 | uVar1 < 0;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar25 | uVar2) & uVar22 | uVar25 & uVar2) + uVar8 + uVar5;\n    uVar4 = uVar9 ^ uVar21 ^ uVar16 ^ uVar24;\n    uVar9 = uVar4 << 1 | uVar4 < 0;\n    uVar6 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar18 = uVar7 ^ uVar10 ^ uVar19 ^ uVar18;\n    uVar2 = (uVar3 & uVar6 | (uVar3 | uVar6) & uVar25) + uVar9 + uVar22 + 0x8f1bbcdc + (uVar1 * 0x20 | uVar1 >> 0x1b);\n    uVar4 = uVar18 << 1 | uVar18 < 0;\n    uVar18 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar3 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar18 | uVar1) & uVar6 | uVar18 & uVar1) + uVar4 + uVar25;\n    uVar24 = uVar8 ^ uVar12 ^ uVar20 ^ uVar24;\n    uVar5 = uVar24 << 1 | uVar24 < 0;\n    uVar22 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar22 | uVar2) & uVar18 | uVar22 & uVar2) + uVar5 + uVar6;\n    uVar24 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar19 = uVar9 ^ uVar13 ^ uVar11 ^ uVar19;\n    uVar6 = uVar19 << 1 | uVar19 < 0;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar24 | uVar3) & uVar22 | uVar24 & uVar3) + uVar6 + uVar18;\n    uVar20 = uVar14 ^ uVar15 ^ uVar20 ^ uVar4;\n    uVar18 = uVar20 << 1 | uVar20 < 0;\n    uVar3 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar20 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar3 | uVar1) & uVar24 | uVar3 & uVar1) + uVar18 + uVar22;\n    uVar19 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = uVar21 ^ uVar17 ^ uVar11 ^ uVar5;\n    uVar11 = uVar1 << 1 | uVar1 < 0;\n    uVar1 = (uVar2 & uVar19 | (uVar2 | uVar19) & uVar3) + uVar11 + uVar24 + 0x8f1bbcdc +\n            (uVar20 * 0x20 | uVar20 >> 0x1b);\n    uVar15 = uVar7 ^ uVar16 ^ uVar15 ^ uVar6;\n    uVar22 = uVar15 << 1 | uVar15 < 0;\n    uVar2 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar15 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar20) & uVar19 | uVar2 & uVar20) + uVar22 + uVar3\n    ;\n    uVar3 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar17 = uVar8 ^ uVar10 ^ uVar17 ^ uVar18;\n    uVar25 = uVar17 << 1 | uVar17 < 0;\n    uVar17 = (uVar15 * 0x20 | uVar15 >> 0x1b) + 0x8f1bbcdc + ((uVar3 | uVar1) & uVar2 | uVar3 & uVar1) + uVar25 + uVar19\n    ;\n    uVar20 = uVar9 ^ uVar12 ^ uVar16 ^ uVar11;\n    uVar26 = uVar20 << 1 | uVar20 < 0;\n    uVar24 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar20 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar16 = (uVar17 * 0x20 | uVar17 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar24 | uVar15) & uVar3 | uVar24 & uVar15) + uVar26 + uVar2;\n    uVar15 = uVar13 ^ uVar10 ^ uVar22 ^ uVar4;\n    uVar10 = uVar15 << 1 | uVar15 < 0;\n    uVar15 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar2 = (uVar16 * 0x20 | uVar16 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar20 | uVar17) & uVar24 | uVar20 & uVar17) + uVar10 + uVar3;\n    uVar17 = uVar14 ^ uVar12 ^ uVar25 ^ uVar5;\n    uVar12 = uVar17 << 1 | uVar17 < 0;\n    uVar1 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar24 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar16 | uVar15) & uVar20 | uVar16 & uVar15) + uVar12 + uVar24;\n    uVar17 = uVar21 ^ uVar13 ^ uVar26 ^ uVar6;\n    uVar17 = uVar17 << 1 | uVar17 < 0;\n    uVar19 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar3 = (uVar24 * 0x20 | uVar24 >> 0x1b) + 0x8f1bbcdc + ((uVar1 | uVar2) & uVar15 | uVar1 & uVar2) + uVar17 + uVar20\n    ;\n    uVar20 = uVar7 ^ uVar14 ^ uVar10 ^ uVar18;\n    uVar20 = uVar20 << 1 | uVar20 < 0;\n    uVar13 = uVar24 >> 2 | uVar24 * 0x40000000;\n    uVar16 = uVar8 ^ uVar21 ^ uVar12 ^ uVar11;\n    uVar16 = uVar16 << 1 | uVar16 < 0;\n    uVar2 = (uVar3 * 0x20 | uVar3 >> 0x1b) +\n            ((uVar19 | uVar24) & uVar1 | uVar19 & uVar24) + 0x8f1bbcdc + uVar20 + uVar15;\n    uVar24 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar3 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar19 ^ uVar13 ^ uVar3) + uVar16 + uVar1;\n    uVar15 = uVar9 ^ uVar7 ^ uVar17 ^ uVar22;\n    uVar1 = uVar15 << 1 | uVar15 < 0;\n    uVar7 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar19 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0xca62c1d6 + (uVar13 ^ uVar24 ^ uVar2) + uVar1 + uVar19;\n    uVar15 = uVar8 ^ uVar20 ^ uVar25 ^ uVar4;\n    uVar2 = uVar15 << 1 | uVar15 < 0;\n    uVar14 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar8 = (uVar19 * 0x20 | uVar19 >> 0x1b) + 0xca62c1d6 + (uVar3 ^ uVar24 ^ uVar7) + uVar2 + uVar13;\n    uVar15 = uVar9 ^ uVar16 ^ uVar26 ^ uVar5;\n    uVar3 = uVar15 << 1 | uVar15 < 0;\n    uVar21 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar15 = (uVar8 * 0x20 | uVar8 >> 0x1b) + (uVar14 ^ uVar19 ^ uVar7) + 0xca62c1d6 + uVar3 + uVar24;\n    uVar4 = uVar1 ^ uVar10 ^ uVar6 ^ uVar4;\n    uVar24 = uVar4 << 1 | uVar4 < 0;\n    uVar13 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar7 = (uVar15 * 0x20 | uVar15 >> 0x1b) + (uVar14 ^ uVar21 ^ uVar8) + uVar24 + uVar7 + 0xca62c1d6;\n    uVar5 = uVar2 ^ uVar12 ^ uVar18 ^ uVar5;\n    uVar19 = uVar5 << 1 | uVar5 < 0;\n    uVar9 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar8 = (uVar7 * 0x20 | uVar7 >> 0x1b) + (uVar21 ^ uVar13 ^ uVar15) + uVar19 + uVar14 + 0xca62c1d6;\n    uVar6 = uVar3 ^ uVar17 ^ uVar11 ^ uVar6;\n    uVar4 = uVar6 << 1 | uVar6 < 0;\n    uVar23 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar7 = (uVar8 * 0x20 | uVar8 >> 0x1b) + (uVar13 ^ uVar9 ^ uVar7) + uVar4 + uVar21 + 0xca62c1d6;\n    uVar15 = uVar20 ^ uVar22 ^ uVar18 ^ uVar24;\n    uVar5 = uVar15 << 1 | uVar15 < 0;\n    uVar27 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar18 = (uVar7 * 0x20 | uVar7 >> 0x1b) + 0xca62c1d6 + (uVar8 ^ uVar9 ^ uVar23) + uVar5 + uVar13;\n    uVar15 = uVar16 ^ uVar25 ^ uVar11 ^ uVar19;\n    uVar6 = uVar15 << 1 | uVar15 < 0;\n    uVar21 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar8 = (uVar18 * 0x20 | uVar18 >> 0x1b) + (uVar27 ^ uVar7 ^ uVar23) + uVar6 + uVar9 + 0xca62c1d6;\n    uVar15 = uVar1 ^ uVar26 ^ uVar22 ^ uVar4;\n    uVar7 = uVar15 << 1 | uVar15 < 0;\n    uVar14 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar15 = (uVar27 ^ uVar21 ^ uVar18) + uVar7 + uVar23 + 0xca62c1d6 + (uVar8 * 0x20 | uVar8 >> 0x1b);\n    uVar9 = uVar2 ^ uVar10 ^ uVar25 ^ uVar5;\n    uVar11 = uVar9 << 1 | uVar9 < 0;\n    uVar22 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar8 = (uVar21 ^ uVar14 ^ uVar8) + uVar11 + uVar27 + 0xca62c1d6 + (uVar15 * 0x20 | uVar15 >> 0x1b);\n    uVar9 = uVar3 ^ uVar12 ^ uVar26 ^ uVar6;\n    uVar13 = uVar9 << 1 | uVar9 < 0;\n    uVar18 = uVar17 ^ uVar10 ^ uVar7 ^ uVar24;\n    uVar9 = (uVar14 ^ uVar22 ^ uVar15) + uVar13 + uVar21 + 0xca62c1d6 + (uVar8 * 0x20 | uVar8 >> 0x1b);\n    uVar21 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar10 = uVar18 << 1 | uVar18 < 0;\n    uVar18 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar12 = uVar20 ^ uVar12 ^ uVar11 ^ uVar19;\n    uVar15 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar14 = (uVar21 ^ uVar8 ^ uVar22) + uVar10 + uVar14 + 0xca62c1d6 + (uVar9 * 0x20 | uVar9 >> 0x1b);\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar8 = (uVar18 ^ uVar9 ^ uVar21) + uVar12 + uVar22 + 0xca62c1d6 + (uVar14 * 0x20 | uVar14 >> 0x1b);\n    uVar4 = uVar16 ^ uVar17 ^ uVar13 ^ uVar4;\n    uVar17 = uVar4 << 1 | uVar4 < 0;\n    uVar4 = (uVar18 ^ uVar15 ^ uVar14) + uVar17 + 0xca62c1d6 + uVar21 + (uVar8 * 0x20 | uVar8 >> 0x1b);\n    uVar14 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar5 = uVar1 ^ uVar20 ^ uVar10 ^ uVar5;\n    uVar7 = uVar3 ^ uVar1 ^ uVar17 ^ uVar7;\n    uVar9 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar10 = uVar5 << 1 | uVar5 < 0;\n    uVar6 = uVar2 ^ uVar16 ^ uVar12 ^ uVar6;\n    uVar20 = (uVar4 * 0x20 | uVar4 >> 0x1b) + (uVar15 ^ uVar14 ^ uVar8) + 0xca62c1d6 + uVar10 + uVar18;\n    uVar5 = uVar6 << 1 | uVar6 < 0;\n    uVar17 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar1 = (uVar20 * 0x20 | uVar20 >> 0x1b) + (uVar14 ^ uVar9 ^ uVar4) + 0xca62c1d6 + uVar5 + uVar15;\n    uVar16 = (uVar7 << 1 | uVar7 < 0) + (uVar1 * 0x20 | uVar1 >> 0x1b) + -0x359d3e2a +\n             (uVar20 ^ uVar9 ^ uVar17) + uVar14;\n    uVar15 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar24 = uVar2 ^ uVar10 ^ uVar11 ^ uVar24;\n    uVar20 = (uVar24 << 1 | uVar24 < 0) + (uVar16 * 0x20 | uVar16 >> 0x1b) + -0x359d3e2a +\n             (uVar15 ^ uVar1 ^ uVar17) + uVar9;\n    uVar1 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar19 = uVar3 ^ uVar5 ^ uVar13 ^ uVar19;\n    *0x4269a8 = *0x4269a8 + uVar1;\n    *0x4269a0 = *0x4269a0 + uVar20;\n    *0x4269a4 = *0x4269a4 + (uVar16 >> 2 | uVar16 * 0x40000000);\n    *0x4269ac = *0x4269ac + uVar15;\n    *0x42699c = (uVar15 ^ uVar1 ^ uVar16) + uVar17 + *0x42699c +\n                (uVar19 << 1 | uVar19 < 0) + (uVar20 * 0x20 | uVar20 >> 0x1b) + -0x359d3e2a;\n    return;\n}\n",
        "token_count": 10521
    },
    "00402890": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402890(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uchar *puVar1;\n    int32_t in_EDX;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if (arg_8h != 0) {\n        iVar3 = (arg_8h - 1U >> 2) + 1;\n        puVar1 = in_ECX + 1;\n        puVar2 = in_EDX + 2;\n        do {\n            puVar1[-1] = puVar2[-2];\n            *puVar1 = puVar2[-1];\n            puVar1[1] = *puVar2;\n            puVar1[2] = puVar2[1];\n            iVar3 = iVar3 + -1;\n            puVar1 = puVar1 + 4;\n            puVar2 = puVar2 + 4;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00414099": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00414099(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int16_t **ppiVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    uint32_t uVar10;\n    int16_t **ppiVar11;\n    int32_t var_30h;\n    uint var_2ch;\n    int16_t **var_28h;\n    int16_t **var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    ushort var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        puVar5 = fcn.0040b111();\n        *puVar5 = 0x16;\n        fcn.0040b35f();\n    }\n    else {\n        *arg_ch = 0;\n        var_1ch = 0;\n        var_28h = NULL;\n        var_24h = NULL;\n        var_20h = 0;\n        iVar6 = *arg_8h;\n        ppiVar11 = var_28h;\n        ppiVar4 = var_24h;\n        while (var_28h = ppiVar11,  var_24h = ppiVar4,  iVar6 != 0) {\n            var_ch = 0x3f002a;\n            var_8h = 0;\n            iVar6 = fcn.004154fd(*arg_8h, &var_ch);\n            if (iVar6 == 0) {\n                iVar6 = fcn.00413d64(*arg_8h, 0, 0, &var_28h);\n            }\n            else {\n                iVar6 = fcn.00413e02(*arg_8h, iVar6, &var_28h);\n            }\n            if (iVar6 != 0) goto code_r0x00413d3c;\n            arg_8h = arg_8h + 1;\n            ppiVar11 = var_28h;\n            ppiVar4 = var_24h;\n            iVar6 = *arg_8h;\n        }\n        var_14h = 0;\n        var_10h = 0;\n        var_18h = (ppiVar4 - ppiVar11 >> 2) + 1;\n        uVar10 = ~-(ppiVar4 < ppiVar11) & (ppiVar4 - ppiVar11) + 3U >> 2;\n        if (uVar10 != 0) {\n            var_14h = 0;\n            ppiVar9 = ppiVar11;\n            do {\n                piVar8 = *ppiVar9;\n                piVar1 = piVar8 + 1;\n                do {\n                    iVar2 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                } while (iVar2 != var_1ch);\n                ppiVar9 = ppiVar9 + 1;\n                var_14h = var_14h + 1 + (piVar8 - piVar1 >> 1);\n                var_10h = var_10h + 1;\n            } while (var_10h != uVar10);\n        }\n        iVar6 = fcn.0040f5d6(var_18h, var_14h, 2);\n        if (iVar6 != 0) {\n            var_30h = iVar6 + var_18h * 4;\n            var_18h = var_30h;\n            if (ppiVar11 != ppiVar4) {\n                var_ch = iVar6 - ppiVar11;\n                do {\n                    piVar8 = *ppiVar11;\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != var_1ch);\n                    var_10h = (piVar8 - piVar1 >> 1) + 1;\n                    iVar7 = fcn.0041526b(var_18h, var_14h - (var_18h - var_30h >> 1), *ppiVar11, var_10h);\n                    if (iVar7 != 0) {\n                        fcn.0040b38c(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(var_ch + ppiVar11) = var_18h;\n                    ppiVar11 = ppiVar11 + 1;\n                    var_18h = var_18h + var_10h * 2;\n                } while (ppiVar11 != ppiVar4);\n            }\n            *arg_ch = iVar6;\n            iVar6 = 0;\n        }\n        fcn.004105a6(iVar6);\ncode_r0x00413d3c:\n        fcn.00413fb8();\n    }\n    fcn.004056aa(var_30h);\n    return;\n}\n",
        "token_count": 1234
    },
    "004044da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004044da(int16_t param_1)\n\n{\n    if ((((param_1 != 0x20) && (param_1 != 9)) && (param_1 != 0xd)) && (param_1 != 10)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 72
    },
    "00404520": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.00404520(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    ushort *puVar4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    uVar2 = 0;\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n        uVar3 = 0;\n        puVar4 = arg_8h;\n        if (in_EDX != 0) {\n            do {\n                iVar1 = (*_sym.imp.USER32.dll_wsprintfW)(&var_14h, L\"%02x\", *(in_ECX + uVar3));\n                uVar2 = uVar2 + iVar1;\n                if (uVar2 < 0x80) {\n                    iVar1 = (*_sym.imp.USER32.dll_wsprintfW)(puVar4, 0x421e8c, &var_14h);\n                    puVar4 = puVar4 + iVar1;\n                }\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < in_EDX);\n        }\n    }\n    fcn.004056aa(arg_8h);\n    return;\n}\n",
        "token_count": 349
    },
    "00414dda": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414dda(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00406100();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00411089(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x425008 & 0x1f;\n    *(unaff_EBP + -0x1c) = (*0x425008 ^ *0x427648) >> uVar1 | (*0x425008 ^ *0x427648) << 0x20 - uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00414e28(0x423ee8, noname_1, unaff_retaddr);\n    fcn.00406146();\n    return;\n}\n",
        "token_count": 268
    },
    "004010fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004010fe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    fcn.0040a2e2(&var_8h, arg_8h, arg_ch, 0x40, arg_10h);\n    fcn.004056aa(var_8h);\n    return;\n}\n",
        "token_count": 128
    },
    "0040113d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0040113d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    fcn.0040ada0(arg_8h, arg_ch, arg_10h);\n    fcn.0040b124(&var_8h);\n    fcn.004056aa(var_8h);\n    return;\n}\n",
        "token_count": 130
    },
    "00401182": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401182(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.004091e1(arg_8h, arg_ch, arg_ch >> 0x1f, arg_10h);\n    return;\n}\n",
        "token_count": 63
    },
    "00401204": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a30h\n\nvoid __cdecl fcn.00401204(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint *arg_10h_00;\n    uint var_a30h;\n    uint var_a2ch;\n    uint var_a28h;\n    uint var_a1ch;\n    uint var_81ch;\n    uint var_61ch;\n    uint var_41ch;\n    uint var_318h;\n    uint var_214h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    arg_10h_00 = &var_61ch;\n    fcn.00401d9d(&var_a1ch, &var_81ch, arg_10h_00);\n    fcn.00401e05(0, &var_81ch, &var_61ch, 1);\n    fcn.0040434b();\n    fcn.00401e05(&var_a1ch, 0, 0, 1);\n    fcn.00404294();\n    fcn.0040434b();\n    if (arg_10h == 0) {\n        fcn.00401d9d(0, &var_81ch, &var_61ch);\n        fcn.00401e05(&var_a1ch, &var_81ch, &var_61ch, 1);\n        fcn.0040434b();\n    }\n    else {\n        fcn.0040434b(arg_10h_00);\n    }\n    fcn.00407170(&var_a28h, 0, 0xc);\n    iVar1 = (*_sym.imp.Cabinet.dll_FDICreate)\n                      (fcn.004010d0, fcn.004010e7, fcn.004010fe, fcn.00401134, fcn.0040113d, fcn.00401179, fcn.00401182\n                       , 0xffffffff, &var_a28h);\n    if (iVar1 != 0) {\n        (*_sym.imp.Cabinet.dll_FDICopy)(iVar1, &var_41ch, &var_318h, 0, fcn.0040119b, 0, in_ECX);\n        (*_sym.imp.Cabinet.dll_FDIDestroy)(iVar1);\n    }\n    fcn.004056aa(in_ECX);\n    return;\n}\n",
        "token_count": 564
    },
    "0040b36f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b36f(void)\n\n{\n    code *pcVar1;\n    \n    fcn.0040b2e4(0, 0, 0, 0, 0);\n    fcn.0040b38c(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 90
    },
    "004018b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004018b4(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t arg_8h;\n    \n    arg_8h = param_1;\n    if ((0xfff < param_2) && (arg_8h = *(param_1 + -4),  0x1f < (param_1 - arg_8h) - 4U)) {\n        fcn.0040b36f();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.004056eb(arg_8h);\n    return;\n}\n",
        "token_count": 148
    },
    "004018e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018e6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint arg_18h;\n    uint *arg_1ch;\n    \n    arg_1ch = &arg_10h;\n    arg_18h = 0;\n    puVar1 = fcn.004018e0();\n    fcn.0040d269(*puVar1, puVar1[1], arg_8h, arg_ch, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 126
    },
    "00401995": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_404h\n\nvoid __fastcall fcn.00401995(int16_t *param_1, ushort *param_2)\n\n{\n    uint var_404h;\n    uint var_4h;\n    \n    if (((param_2 != NULL) && (*param_2 = 0,  param_1 != NULL)) && (*param_1 != 0)) {\n        fcn.00404383(0x200);\n        fcn.004043b6(param_2, 0x200, 0x421c28, 0x421c40);\n    }\n    fcn.004056aa(var_404h);\n    return;\n}\n",
        "token_count": 152
    },
    "00401b96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401b96(int16_t **param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    \n    if ((param_1 != NULL) && (piVar1 = *param_1,  piVar1 != NULL)) {\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        iVar2 = fcn.004044f9();\n        if ((iVar2 - 0x61U < 0x1a) && (piVar1[1] == 0x3a)) {\n            piVar3 = param_2;\n            if (param_2 != NULL) {\n                *param_2 = *piVar1;\n                piVar3 = param_2 + 1;\n                if (piVar3 != NULL) {\n                    *piVar3 = piVar1[1];\n                    piVar3 = param_2 + 2;\n                }\n            }\n            if (piVar3 != NULL) {\n                *piVar3 = 0;\n            }\n            *param_1 = piVar1 + 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "00402050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402050(void)\n\n{\n    fcn.00407170(0x4269f4, 0, 0x58);\n    *0x4269f4 = *0x423190;\n    *0x4269f8 = *0x423194;\n    *0x4269fc = *0x423198;\n    *0x426a00 = *0x42319c;\n    return;\n}\n",
        "token_count": 97
    },
    "00403d49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using SHA256"
        ],
        "decompiled_code": "\nvoid fcn.00403d49(void)\n\n{\n    fcn.00406bf0(0x426788, 0x421a7c, 0x20);\n    fcn.00407170(0x4267b0, 0, 0x40);\n    *0x4267a8 = 0;\n    return;\n}\n",
        "token_count": 78
    },
    "004041f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using SHA512"
        ],
        "decompiled_code": "\nvoid fcn.004041f5(void)\n\n{\n    fcn.00406bf0(0x4268c0, 0x421ba0, 0x40);\n    fcn.00407170(0x426910, 0, 0x80);\n    *0x426900 = 0;\n    *0x426908 = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "0040422e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using SHA384"
        ],
        "decompiled_code": "\nvoid fcn.0040422e(void)\n\n{\n    fcn.00406bf0(0x4267f0, 0x421be0, 0x40);\n    fcn.00407170(0x426840, 0, 0x80);\n    *0x426830 = 0;\n    *0x426838 = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "00404267": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404267(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint arg_10h;\n    uint arg_1ch;\n    \n    arg_1ch = 0;\n    puVar1 = fcn.004018e0();\n    iVar2 = fcn.0040d2e0(*puVar1 | 1, puVar1[1], arg_10h, in_EDX, arg_8h, arg_1ch, arg_ch);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 156
    },
    "004042d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004042d9(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    if ((*in_EDX != NULL) && (*arg_8h != 0)) {\n        if (arg_ch != 0) {\n            **in_EDX = 0;\n        }\n        if (in_ECX != 0) {\n            uVar1 = fcn.0040433c();\n            fcn.00404383(*arg_8h);\n            if (uVar1 < *arg_8h) {\n                *arg_8h = *arg_8h - uVar1;\n                *in_EDX = *in_EDX + uVar1 * 2;\n                uVar2 = 1;\n            }\n            else {\n                *arg_8h = 0;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 244
    },
    "00404383": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404383(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    ushort *in_EDX;\n    \n    if (((in_EDX != NULL) && (arg_8h != 0)) && (*in_EDX = 0,  in_ECX != 0)) {\n        fcn.0040e06c(in_EDX, in_ECX, arg_8h);\n        in_EDX[arg_8h + -1] = 0;\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004044b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004044b3(int16_t **param_1)\n\n{\n    int16_t iVar1;\n    int16_t *extraout_EDX;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    piVar2 = *param_1;\n    while (*piVar2 != 0) {\n        iVar1 = fcn.004044da();\n        piVar2 = extraout_EDX;\n        if (iVar1 == 0) break;\n        iVar3 = iVar3 + 1;\n        piVar2 = extraout_EDX + 1;\n    }\n    *param_1 = piVar2;\n    return iVar3;\n}\n",
        "token_count": 157
    },
    "004045a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004045a6(uint arg_8h)\n\n{\n    uint uVar1;\n    uint8_t *in_ECX;\n    ushort *in_EDX;\n    \n    uVar1 = 0;\n    if (in_EDX != NULL) {\n        *in_EDX = 0;\n        if (in_ECX != NULL) {\n            fcn.004043b6(in_EDX, arg_8h, L\"%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\", *in_ECX);\n            uVar1 = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "0040461f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nushort * __fastcall fcn.0040461f(uint16_t *param_1, ushort *param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    \n    if (param_2 != NULL) {\n        uVar2 = 0;\n        *param_2 = 0;\n        puVar3 = param_1;\n        do {\n            cVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            if (cVar1 != '\\0') {\n                fcn.004043b6(param_2, 0x1c, L\"%04u-%02u-%02uT%02u:%02u:%02uZ\", *param_1);\n                return param_2;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x10);\n    }\n    return param_2;\n}\n",
        "token_count": 210
    },
    "004047c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047c1(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint *puVar1;\n    uint arg_18h;\n    uint *arg_1ch;\n    \n    arg_10h = fcn.0040ecb7(1);\n    arg_1ch = &arg_ch;\n    arg_18h = 0;\n    puVar1 = fcn.004018e0();\n    fcn.0040d269(*puVar1, puVar1[1], arg_10h, arg_8h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 144
    },
    "00404a72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_cach\n\nvoid __fastcall fcn.00404a72(ushort *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_cach;\n    ushort *var_ca8h;\n    uint var_ca4h;\n    uint var_aa4h;\n    uint var_8a4h;\n    uint var_69ch;\n    uint lpFilename;\n    uint var_28ch;\n    uint var_8ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar1 = *0x42bb94;\n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    var_cach = 0x104;\n    if (param_1 != NULL) {\n        *param_1 = 0;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &lpFilename, 0x104);\n        fcn.00401d9d(&var_28ch, &var_ca4h, &var_aa4h);\n        var_ca8h = param_1;\n        iVar2 = fcn.004042d9(&var_cach, 0);\n        if ((iVar2 != 0) && (iVar2 = fcn.004042d9(&var_cach, 0),  iVar2 != 0)) {\n            if (*0x42bb94 != 0) {\n                iVar2 = fcn.00404675();\n                if (iVar2 == 0) goto code_r0x00404bb0;\n                fcn.004043b6(&var_69ch, 0x104, L\"%s-%s%c\", 0x42203c);\n                iVar2 = fcn.004042d9(&var_cach, 0);\n                if (iVar2 == 0) goto code_r0x00404bb0;\n            }\n            if (iVar1 != 0) {\n                fcn.00404383(0x104);\n                (*_sym.imp.SHELL32.dll_SHCreateDirectory)(0, &var_8a4h);\n            }\n        }\n    }\ncode_r0x00404bb0:\n    fcn.004056aa(var_cach);\n    return;\n}\n",
        "token_count": 493
    },
    "00404c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60ch\n\nvoid fcn.00404c50(void)\n\n{\n    uint var_60ch;\n    uint var_40ch;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    fcn.00404cf5();\n    fcn.00401d9d(0, &var_60ch, &var_40ch);\n    fcn.00401e05(0, &var_60ch, &var_40ch, 1);\n    fcn.004047c1(L\"%s MD5 %s\\n\", &var_20ch);\n    fcn.004047c1(L\"%s SHA1 %s\\n\", &var_20ch);\n    fcn.004047c1(L\"%s SHA256 %s\\n\\n\", &var_20ch);\n    fcn.004056aa(var_60ch);\n    return;\n}\n",
        "token_count": 222
    },
    "00404e1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpSystemTime\n\nvoid __cdecl fcn.00404e1c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint lpSystemTime;\n    uint var_84ch;\n    uint var_64ch;\n    uint var_44ch;\n    uint var_24ch;\n    uint var_44h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    fcn.00401d9d(&var_64ch, &var_44ch, &var_84ch);\n    fcn.00401e05(&var_64ch, &var_44ch, 0x4220a4, 1);\n    iVar1 = fcn.004019fb();\n    if ((iVar1 != 0) && (iVar1 = fcn.0040d3c5(&var_24ch, 0x421c34, 0x20),  iVar1 != 0)) {\n        (*_sym.imp.KERNEL32.dll_GetSystemTime)(&lpSystemTime);\n        fcn.0040461f(extraout_ECX, extraout_ECX);\n        (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        fcn.004018e6(iVar1, L\"\\n@stub [%s] : Debugger presence status: %s\\n\", &var_44h);\n        fcn.004018e6(iVar1, L\"@stub [%s] : Exit code: %ld (0x%lx)\\n\", &var_44h);\n        fcn.004018e6(iVar1, L\"@stub [%s] : Exit code description: %s\\n\", &var_44h);\n        fcn.0040b692(iVar1);\n        fcn.0040b761(iVar1);\n    }\n    fcn.004056aa(lpSystemTime);\n    return;\n}\n",
        "token_count": 436
    },
    "0040a2e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2e2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00409beb(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 79
    },
    "0040a62b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a62b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00409cb7(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 79
    },
    "0040c213": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c213(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.0040bec4(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 185
    },
    "0040c9ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c9ee(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.0040bec4(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 219
    },
    "0040d2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040d2e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.0040b85a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 100
    },
    "0040d3c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d3c5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t *arg_8h_00;\n    int16_t *arg_ch_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406100(0x423c40, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (((arg_8h_00 == NULL) || (arg_ch_00 = *(unaff_EBP + 0xc),  arg_ch_00 == NULL)) || (*arg_ch_00 == 0)) {\n        puVar1 = fcn.0040b111();\n        *puVar1 = 0x16;\n        fcn.0040b35f();\n    }\n    else if (*arg_8h_00 == 0) {\n        puVar1 = fcn.0040b111();\n        *puVar1 = 0x16;\n    }\n    else {\n        fcn.00411217(unaff_EBP + -0x1c);\n        if (*(unaff_EBP + -0x1c) == 0) {\n            puVar1 = fcn.0040b111();\n            *puVar1 = 0x18;\n        }\n        else {\n            *(unaff_EBP + -0x20) = 0;\n            *(unaff_EBP + -4) = 0;\n            uVar2 = fcn.00412545(arg_8h_00, arg_ch_00, *(unaff_EBP + 0x10), *(unaff_EBP + -0x1c));\n            *(unaff_EBP + -0x20) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040d3ae();\n        }\n    }\n    fcn.00406146();\n    return;\n}\n",
        "token_count": 477
    },
    "0040eb83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eb83(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0040e457(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040e472(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "0040ed13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ed13(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "0040ed27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ed27(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0040ee20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ee20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040ed3b(0, arg_8h, arg_ch, arg_10h, &arg_14h);\n    return;\n}\n",
        "token_count": 69
    },
    "0040f098": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f098(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.0041af50(0x423cc0, 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    if (iVar1 == 0) {\n        cVar5 = fcn.0040f1f2();\n        if (cVar5 != '\\0') {\n            fcn.0040f236(*(unaff_EBP + 8));\n        }\n    }\n    fcn.00411089(2);\n    *(unaff_EBP + -4) = 0;\n    if (*0x426f8c != '\\0') goto code_r0x0040f16f;\n    *0x426f84 = 1;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 == 0) {\n        uVar4 = *0x425008 & 0x1f;\n        uVar3 = 0x20 - uVar4 & 0x1f;\n        if (*0x426f88 != ((0U >> uVar3 | 0 << 0x20 - uVar3) ^ *0x425008)) {\n            uVar6 = *0x425008 ^ *0x426f88;\n            (**0x41c190)(0, 0, 0);\n            (*(uVar6 >> uVar4 | uVar6 << 0x20 - uVar4))();\n        }\n        arg_8h_00 = 0x4271ac;\ncode_r0x0040f134:\n        fcn.0040fc8f(arg_8h_00);\n    }\n    else if (iVar2 == 1) {\n        arg_8h_00 = 0x4271b8;\n        goto code_r0x0040f134;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (iVar2 == 0) {\n        fcn.0040fec2(0x41c1cc, 0x41c1dc);\n    }\n    fcn.0040fec2(0x41c1e0, 0x41c1e4);\n    if (iVar1 == 0) {\n        *0x426f8c = '\\x01';\n    }\ncode_r0x0040f16f:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040f1a2();\n    if (iVar1 == 0) {\n        fcn.0040f1b1(*(unaff_EBP + 8));\n        fcn.0040f085(***(unaff_EBP + -0x14));\n        return;\n    }\n    fcn.0041af99();\n    return;\n}\n",
        "token_count": 730
    },
    "00411089": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411089(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x427400);\n    return;\n}\n",
        "token_count": 47
    },
    "004110d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004110d1(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x427400);\n    return;\n}\n",
        "token_count": 49
    },
    "004125ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004125ad(void)\n\n{\n    fcn.004125c7(1, \"CompareStringEx\", 0x41e124, \"CompareStringEx\");\n    return;\n}\n",
        "token_count": 43
    },
    "00413540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413540(uint arg_8h, int16_t *arg_ch, int16_t **arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    char16_t *arg_10h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((((arg_ch == NULL) || (*arg_ch == 0)) || (arg_10h == NULL)) || ((*arg_10h == NULL || (**arg_10h == 0)))) {\n        puVar3 = fcn.0040b111();\n        *puVar3 = 0x16;\n        fcn.0040b35f();\n        return 0xffffffff;\n    }\n    piVar4 = fcn.0041b2f7(arg_ch, 0x5c);\n    piVar5 = fcn.0041b2f7(arg_ch, 0x2f);\n    piVar6 = arg_ch;\n    if (piVar5 == NULL) {\n        if ((piVar4 == NULL) && (piVar4 = fcn.0041b2f7(arg_ch, 0x3a),  piVar4 == NULL)) {\n            do {\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            iVar8 = (piVar6 - (arg_ch + 1) >> 1) + 3;\n            piVar6 = fcn.00412550(iVar8, 2);\n            if (piVar6 == NULL) {\n                fcn.004105a6(0);\n                return 0xffffffff;\n            }\n            iVar7 = fcn.0041482f(piVar6, iVar8, 0x41e1fc);\n            if ((iVar7 != 0) || (iVar8 = fcn.00415129(piVar6, iVar8, arg_ch),  iVar8 != 0)) goto code_r0x004131c7;\n            fcn.004105a6(0);\n            piVar4 = piVar6 + 2;\n        }\n    }\n    else if ((piVar4 == NULL) || (piVar4 < piVar5)) {\n        piVar4 = piVar5;\n    }\n    iVar8 = fcn.0041b2f7(piVar4, 0x2e);\n    if (iVar8 == 0) {\n        piVar4 = piVar6;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        iVar10 = piVar4 - (piVar6 + 1) >> 1;\n        iVar8 = iVar10 + 5;\n        iVar7 = fcn.00412550(iVar8, 2);\n        if (iVar7 == 0) {\n            uVar9 = 0xffffffff;\ncode_r0x004131b0:\n            fcn.004105a6(iVar7);\n            goto code_r0x004131b7;\n        }\n        iVar8 = fcn.0041482f(iVar7, iVar8, piVar6);\n        if (iVar8 != 0) {\ncode_r0x004131c7:\n            fcn.0040b38c(0, 0, 0, 0, 0);\n            pcVar2 = swi(3);\n            uVar9 = (*pcVar2)();\n            return uVar9;\n        }\n        puVar3 = fcn.0040b111();\n        arg_10h_00 = L\".com\";\n        uVar9 = *puVar3;\n        do {\n            iVar8 = fcn.0041482f(iVar7 + iVar10 * 2, 5, arg_10h_00);\n            if (iVar8 != 0) goto code_r0x004131c7;\n            iVar8 = fcn.00417d5a(iVar7, 0);\n            if (iVar8 == 0) {\n                puVar3 = fcn.0040b111();\n                *puVar3 = uVar9;\n                uVar9 = fcn.004131d4(arg_8h, iVar7, arg_10h, arg_14h);\n                goto code_r0x004131b0;\n            }\n            arg_10h_00 = arg_10h_00 + 5;\n        } while (arg_10h_00 != 0x41e22c);\n        fcn.004105a6(iVar7);\n    }\n    else {\n        iVar8 = fcn.00417d5a(piVar6, 0);\n        if (iVar8 == 0) {\n            uVar9 = fcn.004131d4(arg_8h, piVar6, arg_10h, arg_14h);\n            goto code_r0x004131b7;\n        }\n    }\n    uVar9 = 0xffffffff;\ncode_r0x004131b7:\n    fcn.004105a6(-(arg_ch != piVar6) & piVar6);\n    return uVar9;\n}\n",
        "token_count": 1196
    },
    "00413a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413a78(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t arg_8h_00;\n    int32_t iVar5;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar5 = 0;\n    var_4h = arg_14h;\n    arg_8h_00 = 0;\n    var_8h = 0;\n    iVar2 = arg_10h;\n    do {\n        if (var_4h <= var_8h) {\n            if (0x7ffffffe < var_4h) {\ncode_r0x00413614:\n                puVar4 = fcn.0040b111();\n                *puVar4 = 0xc;\n                goto code_r0x00413625;\n            }\n            var_4h = var_4h * 2;\n            if (iVar2 == arg_10h) {\n                iVar2 = fcn.00412550(var_4h, 4);\n                fcn.004105a6(arg_8h_00);\n                fcn.004105a6(0);\n                arg_8h_00 = iVar2;\n                if (iVar2 == 0) goto code_r0x00413614;\n                iVar3 = fcn.00413afe(iVar2, var_4h, arg_10h, arg_14h);\n                if (iVar3 != 0) {\n                    fcn.0040b38c(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    iVar2 = (*pcVar1)();\n                    return iVar2;\n                }\n            }\n            else {\n                iVar2 = fcn.00414c77(arg_8h_00, var_4h, 4);\n                if (iVar2 == 0) {\n                    puVar4 = fcn.0040b111();\n                    *puVar4 = 0xc;\n                    fcn.004105a6(0);\n                    goto code_r0x00413625;\n                }\n                fcn.004105a6(0);\n                fcn.004105a6(0);\n                arg_8h_00 = iVar2;\n            }\n        }\n        *(iVar2 + var_8h * 4) = arg_ch;\n        var_8h = var_8h + 1;\n        if (arg_ch == 0) {\n            arg_8h_00 = 0;\n            iVar5 = iVar2;\ncode_r0x00413625:\n            fcn.004105a6(arg_8h_00);\n            return iVar5;\n        }\n        *arg_8h = *arg_8h + 4;\n        arg_ch = *(*arg_8h + -4);\n    } while( true );\n}\n",
        "token_count": 669
    },
    "00413fdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413fdd(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00414012();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.004105a6(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "00414c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00414c6c(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    uint *puVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    uint uVar8;\n    int16_t *piVar9;\n    bool bVar10;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0040b111();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    piVar5 = fcn.00407407(arg_8h, 0x3d);\n    piVar9 = arg_8h;\n    if ((piVar5 == NULL) || (piVar5 == arg_8h)) {\ncode_r0x0041499e:\n        puVar4 = fcn.0040b111();\n        *puVar4 = 0x16;\n    }\n    else {\n        uVar8 = 0;\n        bVar10 = piVar5[1] == 0;\n        if (*0x4271a0 == *0x4271a4) {\n            *0x4271a0 = fcn.00414b57(*0x4271a0);\n        }\n        if (*0x4271a0 == NULL) {\n            if ((arg_ch == 0) || (*0x42719c == 0)) {\n                if (bVar10) goto code_r0x004149ac;\n                if (*0x42719c == 0) {\n                    *0x42719c = fcn.00412550(1, 4);\n                    fcn.004105a6(0);\n                    if (*0x42719c == 0) goto code_r0x004149a9;\n                    if (*0x4271a0 != NULL) goto code_r0x00414a0e;\n                }\n                *0x4271a0 = fcn.00412550(1, 4);\n                fcn.004105a6(0);\n            }\n            else {\n                iVar6 = fcn.0040f8d1();\n                if (iVar6 == 0) goto code_r0x0041499e;\n            }\n            if (*0x4271a0 == NULL) goto code_r0x004149a9;\n        }\ncode_r0x00414a0e:\n        piVar7 = *0x4271a0;\n        arg_ch_00 = piVar5 - arg_8h >> 1;\n        iVar6 = fcn.00414c15(arg_8h, arg_ch_00);\n        if ((-1 < iVar6) && (*piVar7 != 0)) {\n            fcn.004105a6(piVar7[iVar6]);\n            if (bVar10) {\n                for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                    piVar7[iVar6] = piVar7[iVar6 + 1];\n                }\n                piVar7 = fcn.00414c77(piVar7, iVar6, 4);\n                fcn.004105a6(0);\n                if (piVar7 != NULL) {\ncode_r0x00414ac2:\n                    *0x4271a0 = piVar7;\n                }\n            }\n            else {\n                piVar7[iVar6] = arg_8h;\n                piVar9 = NULL;\n            }\n            if (arg_ch != 0) {\n                piVar5 = arg_8h;\n                do {\n                    iVar2 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                } while (iVar2 != 0);\n                iVar6 = (piVar5 - (arg_8h + 1) >> 1) + 2;\n                arg_8h_00 = fcn.00412550(iVar6, 2);\n                if (arg_8h_00 != 0) {\n                    iVar6 = fcn.0041482f(arg_8h_00, iVar6, arg_8h);\n                    if (iVar6 != 0) {\n                        fcn.0040b38c(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        uVar8 = (*pcVar3)();\n                        return uVar8;\n                    }\n                    uVar1 = arg_8h_00 + (arg_ch_00 + 1) * 2;\n                    *(uVar1 - 2) = 0;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(arg_8h_00, ~-bVar10 & uVar1);\n                    if (iVar6 == 0) {\n                        puVar4 = fcn.0040b111();\n                        uVar8 = 0xffffffff;\n                        *puVar4 = 0x2a;\n                    }\n                }\n                fcn.004105a6(arg_8h_00);\n            }\n            goto code_r0x004149ac;\n        }\n        if (bVar10) goto code_r0x004149ac;\n        uVar1 = -iVar6 + 2;\n        if ((-iVar6 <= uVar1) && (uVar1 < 0x3fffffff)) {\n            piVar7 = fcn.00414c77(piVar7, uVar1, 4);\n            fcn.004105a6(0);\n            if (piVar7 != NULL) {\n                piVar7[-iVar6] = arg_8h;\n                piVar7[1 - iVar6] = 0;\n                piVar9 = NULL;\n                goto code_r0x00414ac2;\n            }\n        }\n    }\ncode_r0x004149a9:\n    uVar8 = 0xffffffff;\ncode_r0x004149ac:\n    fcn.004105a6(piVar9);\n    return uVar8;\n}\n",
        "token_count": 1382
    },
    "00414c77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414c77(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0041869c(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.004186cf(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.00407170(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.0040b111();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 248
    },
    "00414f18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00414f18(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00410d88();\n    return iVar1 + 8;\n}\n",
        "token_count": 43
    },
    "00417e1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00417e1a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406100(0x423f28, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00411089(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.00417e75(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00417e6c();\n    fcn.00406146();\n    return;\n}\n",
        "token_count": 267
    },
    "00417fad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417fad(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00417e1a(arg_8h, arg_ch, arg_10h, 1, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00406631": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406631(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00408415(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "00412e29": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412e29(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.004105a6(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00401930": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401930(uint noname_0, uint dwCreationDisposition)\n\n{\n    uint uVar1;\n    int16_t *in_ECX;\n    \n    uVar1 = 0xffffffff;\n    if ((in_ECX != NULL) && (*in_ECX != 0)) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    }\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "00415f14": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00415f14(void)\n\n{\n    *0x425884 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00404955": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a08h\n\nvoid __fastcall fcn.00404955(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_a08h;\n    uint var_a04h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    iVar1 = fcn.004043fd(0x104);\n    if ((iVar1 != 0) && (iVar1 = fcn.004043fd(0x500),  iVar1 != 0)) {\n        do {\n            iVar1 = fcn.0040ebaf(&var_a04h, 0x422008);\n            if (iVar1 == 0) {\n                *0x42bb90 = 1;\n            }\n            else {\n                iVar1 = fcn.0040de68(&var_a04h, L\"-other\");\n                if (iVar1 == 0) {\n                    *0x42ba88 = 1;\n                }\n                else {\n                    iVar1 = fcn.0040de68(&var_a04h, L\"--cid\");\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.004043fd(0x100);\n                        if (iVar1 != 0) {\n                            *0x42ba8c = 1;\n                        }\n                    }\n                    else {\n                        iVar1 = fcn.0040de68(&var_a04h, L\"--safe\");\n                        if (iVar1 == 0) {\n                            *0x42bb94 = 1;\n                        }\n                    }\n                }\n            }\n            iVar1 = fcn.004043fd(0x500);\n        } while (iVar1 != 0);\n    }\n    fcn.004056aa(param_1);\n    return;\n}\n",
        "token_count": 395
    },
    "004046ce": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004046ce(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint unaff_EDI;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x425008 ^ &stack0xfffffffc;\n    fcn.00404777();\n    var_8h = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(2, L\"kernel32\", &var_8h);\n    iVar1 = var_8h;\n    if (var_8h != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(var_8h, \"SetSearchPathMode\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(1);\n        }\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"SetDllDirectoryW\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(0x421a40);\n        }\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"SetDefaultDllDirectories\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(0x800);\n        }\n    }\n    fcn.004056aa(unaff_EDI);\n    return;\n}\n",
        "token_count": 308
    }
}