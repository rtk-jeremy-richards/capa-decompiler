{
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00401000(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint var_bp_ch;\n    \n    // [00] -r-x section size 8192 named .text\n    arg_ch[1] = *0x40406c + -0x982d7d;\n    arg_ch[4] = *0x404068 + -0x7b23bb;\n    arg_ch[3] = arg_8h + 0x55f8;\n    *arg_ch = arg_8h + 0x1d8;\n    return;\n}\n",
        "token_count": 148
    },
    "00401ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ae0(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    if (arg_10h != 0) {\n        var_24h = 0;\n        do {\n            fcn.004027b0(arg_8h, arg_ch, var_24h, *((var_24h & 0xf) + 0x4030b2));\n            var_24h = var_24h + 1;\n        } while (var_24h != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00401140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401140(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    if (arg_8h != 0 && arg_ch != 0) {\n        iVar1 = fcn.00402530(arg_ch);\n        var_20h = fcn.00401c90(arg_ch);\n        var_24h = 0;\n        do {\n            fcn.00402160(arg_8h, arg_ch, var_20h, var_24h, *(iVar1 + 0x54));\n            var_24h = var_24h + 1;\n            var_20h = var_20h + 0x28;\n        } while (var_24h != 4);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00401280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00401280(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    if (arg_8h != 0) {\n        arg_8h_00 = fcn.00401730();\n        var_ch = fcn.00401b80(arg_8h_00, arg_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 129
    },
    "004016d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nuint __cdecl fcn.004016d0(int32_t arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_3h;\n    \n    if (arg_8h == 0) {\n        var_8h = fcn.004012f0();\n    }\n    else {\n        var_8h = fcn.00401800(arg_8h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 126
    },
    "00401800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nint32_t * __cdecl fcn.00401800(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_eh;\n    \n    iVar5 = fcn.00401f40();\n    piVar6 = *(iVar5 + 0xc) + 0x14;\n    var_34h = *(*(iVar5 + 0xc) + 0x14);\n    if (var_34h != piVar6) {\n        do {\n            piVar2 = var_34h[4];\n            uVar1 = *(var_34h + 9);\n            iVar5 = var_34h[10];\n            if (arg_ch != NULL && piVar2 == arg_ch) {\n                return var_34h + -2;\n            }\n            if ((arg_8h != 0) && (uVar1 >> 1 != 0)) {\n                var_38h = 0;\n                do {\n                    iVar3 = fcn.00401470(*(iVar5 + var_38h * 2));\n                    iVar4 = fcn.00401470(*(arg_8h + var_38h * 2));\n                    var_38h = var_38h + 1;\n                } while ((iVar3 != 0 && iVar4 == iVar3) && var_38h < uVar1 >> 1);\n                if (iVar4 == iVar3) {\n                    return piVar2;\n                }\n            }\n            var_34h = *var_34h;\n        } while (var_34h != piVar6);\n    }\n    return NULL;\n}\n",
        "token_count": 504
    },
    "00401b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ah\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401b80(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_14h;\n    uint var_ah;\n    \n    var_ah._0_2_ = 0x472d;\n    var_14h = 0xa61fe80;\n    var_50h = 0;\n    if (arg_ch != 0) {\n        fcn.00401ae0(&var_34h, 0x40304d, 0x18);\n        *0x404050 = fcn.004029a0(&var_34h);\n        var_50h = 0;\n        if (*0x404050 != NULL) {\n            var_38h = arg_ch;\n            uVar1 = fcn.00401f00(arg_ch);\n            var_3ch._0_2_ = uVar1;\n            var_58h = 0;\n            if ((uVar1 & 0xa62fe7fU - var_14h) != var_14h + 0xf59e0180U) {\n                var_40h = 0;\n                var_3ch._2_2_ = var_3ch;\n                (**0x404050)(arg_8h, &var_3ch, 0x472d - var_ah, &var_40h);\n                var_58h = var_40h;\n            }\n            var_50h = var_58h;\n        }\n    }\n    return var_50h;\n}\n",
        "token_count": 446
    },
    "00401ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401ca0(code *arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        (*arg_8h)(arg_ch);\n    }\n    return arg_8h != NULL;\n}\n",
        "token_count": 76
    },
    "00402540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nuint __cdecl fcn.00402540(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 0;\n    if (*0x40405c != NULL) {\n        uVar1 = 0x40;\n        if (arg_ch == 0) {\n            uVar1 = 4;\n        }\n        var_20h = (**0x40405c)(0, arg_8h, *0x404054 + -0x3213, uVar1, 0);\n    }\n    return var_20h;\n}\n",
        "token_count": 188
    },
    "00402c90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00402c90(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iStack88;\n    uchar auStack73 [29];\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack28;\n    uint16_t uStack22;\n    uint var_bp_ch;\n    \n    uStack22 = 0x2966;\n    uStack44 = 0x4cb58165;\n    uStack28 = 0;\n    fcn.00401ae0(auStack73, 0x403065, 0xe);\n    uStack40 = ~uStack40;\n    uStack36 = ~uStack36;\n    *0x40405c = fcn.00401280(auStack73);\n    if ((0x97cf < (uStack22 ^ 0x85c6)) &&\n       (iStack88 = fcn.00402540((uStack44 ^ 0xb30151a8) + *0x404058, uStack44 ^ 0x4cb58164),  iStack88 == 0)) {\n        return 0;\n    }\n    *(arg_8h + 4) = iStack88 - *0x404060;\n    fcn.00401730();\n    *(arg_8h + 0x10) = iStack88;\n    fcn.00401140(iStack88, arg_ch);\n    fcn.00402be0(iStack88);\n    return *0x404064 + iStack88;\n}\n",
        "token_count": 362
    },
    "00402de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00402de0(void)\n\n{\n    int32_t iVar1;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_64h;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_44h;\n    uint var_24h;\n    uint var_18h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    \n    var_10h = 0x78c7c1fe;\n    var_ch = fcn.00401d20(&var_24h);\n    var_64h = var_18h;\n    fcn.00401210(&var_7ch);\n    var_44h = fcn.004016d0(0);\n    var_90h = 0xffffffc4;\n    if (var_44h != 0) {\n        if (var_44h == 1) {\n            var_90h = 0xffffffb0;\n        }\n        else {\n            iVar1 = fcn.00401560(var_44h);\n            var_58h = *(iVar1 + 0x50);\n            var_ch = var_ch ^ 0x5ebace2a;\n            var_54h = (0x784c9e43 - var_10h) + *0x404068;\n            var_90h = 0xffffffba;\n            if (var_58h != var_10h + -0x78c7c1fe) {\n                iVar1 = fcn.00402c90(&var_7ch, var_24h);\n                var_90h = 0xffffffce;\n                if (iVar1 != 0) {\n                    var_90h = fcn.00401ca0(iVar1, &var_7ch);\n                }\n            }\n        }\n    }\n    return var_90h;\n}\n",
        "token_count": 456
    },
    "004012f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x004013bd)\n\nint16_t * fcn.004012f0(void)\n\n{\n    uint32_t uVar1;\n    code *pcStack44;\n    uint var_bp_ch;\n    \n    pcStack44 = fcn.004012f0;\n    while ((*pcStack44 != 0x5a4d ||\n           (uVar1 = *(pcStack44 + *(pcStack44 + 0x3c)) & 0xff, \n           uVar1 != 0x50 || (*(pcStack44 + *(pcStack44 + 0x3c)) >> 8 & 0xff) + uVar1 != 0x95))) {\n        pcStack44 = pcStack44 + -0x1000 & 0xfffff000;\n    }\n    return pcStack44;\n}\n",
        "token_count": 198
    },
    "00402010": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool fcn.00402010(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    int32_t iStack60;\n    uint var_bp_ch;\n    \n    fcn.00402220();\n    iStack60 = 0;\n    do {\n        (*_sym.imp.SHLWAPI.dll_IsCharSpaceW)(0x58);\n        iStack60 = iStack60 + 1;\n    } while (iStack60 != 0xb4);\n    arg_8h = fcn.00402420(0);\n    iVar1 = fcn.004024b0(arg_8h);\n    return iVar1 != 0;\n}\n",
        "token_count": 158
    },
    "00402220": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00402220(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    int32_t iStack68;\n    int32_t iStack40;\n    uint32_t uStack32;\n    uint var_ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    iStack40 = 0;\n    do {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindow)(0xbc0495, 0x45b);\n        uVar1 = uStack84;\n        (*_sym.imp.KERNEL32.dll_GetSystemDefaultUILanguage)();\n        if (uStack88 < uVar1) {\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n        uVar1 = (*_sym.imp.USER32.dll_IsMenu)(0x11ecd3, uVar1, uVar2);\n        iStack40 = iStack40 + iStack68;\n    } while (uVar1 == (uStack32 ^ 0x607efdaf) && iStack40 != 0xb);\n    return;\n}\n",
        "token_count": 264
    },
    "00402420": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402420(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    uVar1 = fcn.004027f0();\n    bVar3 = true;\n    if ((uVar1 | arg_8h) == 0) {\n        iVar2 = fcn.00402950();\n        bVar3 = true;\n        if (iVar2 == 0) {\n            iVar2 = fcn.00402660(_sym.imp.KERNEL32.dll_CloseHandle);\n            bVar3 = iVar2 != 0;\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 181
    },
    "004027f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00402912)\n\nbool fcn.004027f0(void)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_bp_ch;\n    \n    arg_8h = fcn.00401f80();\n    iVar3 = fcn.00401560(arg_8h);\n    uVar1 = *(iVar3 + 0x48);\n    bVar4 = true;\n    iVar2 = *(iVar3 + 0x4a);\n    iVar3 = fcn.00401f40();\n    if (5 < uVar1 && 5 < *(iVar3 + 0xa4)) {\n        bVar4 = uVar1 == 6 && iVar2 == 0;\n    }\n    return bVar4;\n}\n",
        "token_count": 209
    },
    "00402950": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool fcn.00402950(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_ChangeWindowMessageFilter)(0x120, 4);\n    return iVar1 != 0;\n}\n",
        "token_count": 59
    },
    "004029a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.004029a0(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uStack100;\n    uint32_t uStack80;\n    uint16_t *puStack72;\n    uint var_bp_ch;\n    \n    fcn.00401280(0);\n    arg_8h_00 = fcn.00401f80();\n    iVar3 = fcn.00401560(arg_8h_00);\n    iVar3 = *(iVar3 + 0x78);\n    iVar4 = arg_8h_00 + iVar3;\n    if (*(arg_8h_00 + 0x18 + iVar3) != 0) {\n        uStack100 = 0;\n        puStack72 = arg_8h_00 + *(iVar4 + 0x24);\n        do {\n            uStack80 = 0;\n            do {\n                cVar1 = *(arg_8h + uStack80);\n                cVar2 = *(arg_8h_00 + *(arg_8h_00 + *(arg_8h_00 + 0x20 + iVar3) + uStack100 * 4) + uStack80);\n                if (cVar2 == '\\0') break;\n                uStack80 = uStack80 + 1;\n            } while ((cVar1 != '\\0' && cVar2 == cVar1) && uStack80 < 0x20);\n            if (cVar2 == cVar1) {\n                return arg_8h_00 + *(arg_8h_00 + *(iVar4 + 0x1c) + *puStack72 * 4);\n            }\n            puStack72 = puStack72 + 1;\n            uStack100 = uStack100 + 1;\n        } while (uStack100 < *(iVar4 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 460
    },
    "004014c0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004014c0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar auStack288 [256];\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_bp_ch;\n    \n    uStack24 = 0x3ffa59f9;\n    uStack28 = 0;\n    uStack32 = 0x5b01baa0;\n    fcn.00401980(auStack288, 0x403073, 0x3e);\n    fcn.004015b0(auStack288, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 167
    },
    "00402160": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nvoid __cdecl fcn.00402160(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    if (arg_14h == 0) {\n        fcn.004025e0(arg_8h, arg_ch, arg_18h);\n    }\n    fcn.004025e0(arg_8h + *(arg_10h + 0xc), arg_ch + *(arg_10h + 0x14), *(arg_10h + 0x10));\n    return;\n}\n",
        "token_count": 205
    },
    "00401980": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00401980(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    uint var_bp_ch;\n    \n    iStack48 = 0;\n    do {\n        *(arg_8h + iStack48) = iStack48;\n        iStack48 = iStack48 + 1;\n    } while (iStack48 != 0x100);\n    iStack52 = 0;\n    uStack56 = 0;\n    do {\n        uVar1 = *(arg_8h + uStack56);\n        iStack52 = (iStack52 + uVar1 + *(arg_ch + uStack56 % arg_10h)) % 0x100;\n        *(arg_8h + uStack56) = *(arg_8h + iStack52);\n        *(arg_8h + iStack52) = uVar1;\n        uStack56 = uStack56 + 1;\n    } while (uStack56 != 0x100);\n    return;\n}\n",
        "token_count": 273
    },
    "00402be0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n// WARNING: Removing unreachable block (ram,0x00402c67)\n\nvoid __cdecl fcn.00402be0(ushort *arg_8h)\n\n{\n    uint var_bp_8h;\n    \n    *arg_8h = 0x5a4d;\n    *(arg_8h + 0x1e) = 200;\n    *(arg_8h + 100) = 0x4550;\n    return;\n}\n",
        "token_count": 115
    },
    "004010d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004010d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    int32_t in_FS_OFFSET;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_ch == 1) {\n        var_20h = 0;\n        do {\n            pcVar1 = arg_8h + var_20h;\n            var_1ch = var_20h;\n            var_20h = var_20h + 1;\n        } while (*pcVar1 != '\\0');\n    }\n    else {\n        var_1ch = *(in_FS_OFFSET + arg_8h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 192
    },
    "004012c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012c0(void)\n\n{\n    uint var_5h;\n    \n    fcn.00401ce0(0x18);\n    return;\n}\n",
        "token_count": 37
    },
    "00401470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nint16_t __cdecl fcn.00401470(uint arg_8h)\n\n{\n    uint var_eh;\n    \n    if (arg_8h - 0x61U < 0x1a) {\n        arg_8h._0_2_ = arg_8h + -0x20;\n    }\n    return arg_8h;\n}\n",
        "token_count": 93
    },
    "00401560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00401560(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    iVar1 = 0;\n    if (*(arg_8h + *(arg_8h + 0x3c)) == 0x4550) {\n        iVar1 = arg_8h + *(arg_8h + 0x3c);\n    }\n    return iVar1;\n}\n",
        "token_count": 112
    },
    "004015b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004015b0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    iVar2 = arg_14h;\n    if (arg_14h != 0) {\n        var_28h = 0;\n        var_2ch = 0;\n        var_30h = 0;\n        do {\n            var_28h = (var_28h + 1) % 0x100;\n            uVar1 = *(arg_8h + var_28h);\n            var_30h = var_30h + uVar1;\n            iVar2 = var_30h / 0x100;\n            var_30h = var_30h % 0x100;\n            *(arg_8h + var_28h) = *(arg_8h + var_30h);\n            *(arg_8h + var_30h) = uVar1;\n            *(arg_ch + var_2ch) = *(arg_10h + var_2ch) ^ *(arg_8h + (*(arg_8h + var_28h) + uVar1 & 0xff));\n            var_2ch = var_2ch + 1;\n        } while (var_2ch != arg_14h);\n    }\n    return iVar2;\n}\n",
        "token_count": 416
    },
    "00401730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401730(void)\n\n{\n    uint32_t uVar1;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    char *var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint32_t var_10h;\n    \n    var_10h = 0x44a75e11;\n    fcn.00401ae0(&var_78h, 0x40303f, 0xe);\n    var_54h = var_10h ^ 0x44a75e11;\n    do {\n        var_58h = &var_78h + var_54h;\n        if (0x59c83b49 < (var_10h ^ 0x67451d62)) break;\n        uVar1 = var_10h ^ 0x44a75e10;\n        *(&var_50h + var_54h * 2) = *var_58h;\n        var_54h = uVar1 + var_54h;\n    } while (var_54h != 0x44a75e31 - var_10h);\n    fcn.004016d0(&var_50h);\n    return;\n}\n",
        "token_count": 286
    },
    "00401c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401c90(int32_t arg_8h)\n\n{\n    return arg_8h + 0x1c0;\n}\n",
        "token_count": 37
    },
    "00401ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ce0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.004010d0(arg_8h, 3);\n    return;\n}\n",
        "token_count": 46
    },
    "00401d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401d20(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_10h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_31h;\n    uint32_t var_10h;\n    \n    var_10h = 0x44058d9c;\n    var_3ch = 0;\n    var_40h = 0;\n    do {\n        var_40h = (var_40h + *(var_3ch * 0x14 + 0x40400c)) - *(var_3ch * 0x14 + 0x404000);\n        var_3ch = var_3ch + 1;\n    } while (var_3ch != 3);\n    fcn.00401ae0(&var_31h, 0x403065, 0xe);\n    *0x40405c = fcn.00401280(&var_31h);\n    arg_8h_00 = fcn.00402540(var_40h, 0);\n    var_54h = 0;\n    var_58h = 0;\n    do {\n        iVar1 = var_10h + 0xbbfa7265;\n        uVar2 = var_10h ^ 0x44058d9f;\n        arg_10h = *(var_54h * 0x14 + 0x40400c) - *(var_54h * 0x14 + 0x404000);\n        fcn.004025e0(arg_8h_00 + var_58h, *(var_54h * 0x14 + 0x404010), arg_10h);\n        var_54h = var_54h + iVar1;\n        var_58h = arg_10h + var_58h;\n    } while (var_54h != uVar2);\n    fcn.004014c0(arg_8h_00, arg_8h_00, var_40h);\n    fcn.00401000(arg_8h_00, arg_8h);\n    return var_10h ^ 0x44058d9c;\n}\n",
        "token_count": 607
    },
    "00401ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00401ed0(void)\n\n{\n    unkuint3 in_EAX;\n    int32_t iVar1;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = CONCAT13(0x7d, in_EAX & 0xffff | 0xe00000);\n    iVar1 = fcn.004012c0(_auStack8);\n    return *(iVar1 + 0x34);\n}\n",
        "token_count": 125
    },
    "00401f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f00(uint arg_8h)\n\n{\n    uint var_8h;\n    \n    fcn.004010d0(arg_8h, 1);\n    return;\n}\n",
        "token_count": 46
    },
    "00401f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid fcn.00401f80(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_38h;\n    uint32_t var_10h;\n    \n    var_10h = 0x620351c5;\n    fcn.00401ae0(&var_38h, 0x403034, 0xb);\n    var_80h = 0;\n    do {\n        iVar1 = 0x620351c6 - var_10h;\n        uVar2 = var_10h ^ 0x620351e5;\n        *(&var_78h + var_80h * 2) = *(&var_38h + var_80h);\n        var_80h = var_80h + iVar1;\n    } while (var_80h != uVar2);\n    fcn.004016d0(&var_78h);\n    return;\n}\n",
        "token_count": 226
    },
    "004024b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004024b0(int32_t arg_8h)\n\n{\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00402de0();\n    }\n    return arg_8h == 0;\n}\n",
        "token_count": 95
    },
    "00402530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402530(int32_t arg_8h)\n\n{\n    return arg_8h + 200;\n}\n",
        "token_count": 32
    },
    "004025e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004025e0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    \n    if (arg_10h != 0) {\n        var_2ch = 0;\n        do {\n            *(arg_8h + var_2ch) = *(arg_ch + var_2ch);\n            var_2ch = var_2ch + 1;\n        } while (var_2ch != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 172
    },
    "00402660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x004026a7)\n\nuint __cdecl fcn.00402660(char *arg_8h)\n\n{\n    uint uStack56;\n    char *pcStack44;\n    uint var_bp_ch;\n    \n    pcStack44 = arg_8h;\n    while( true ) {\n        if (*pcStack44 == -0x48) {\n            if ((pcStack44[3] != 'P') || (uStack56 = 1,  pcStack44[4] != -0x33)) {\n                uStack56 = 0;\n            }\n            return uStack56;\n        }\n        if (*pcStack44 != -1) break;\n        if (pcStack44[1] != '%') {\n            return 0;\n        }\n        pcStack44 = **(pcStack44 + 2);\n    }\n    return 0;\n}\n",
        "token_count": 206
    },
    "004027b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n\nvoid __cdecl fcn.004027b0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_9h;\n    \n    *(arg_8h + arg_10h) = (arg_14h ^ 0xff) + *(arg_ch + arg_10h);\n    return;\n}\n",
        "token_count": 101
    },
    "00401f40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00401f40(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004012c0(0x11a63d50);\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 52
    },
    "00402350": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004023e8) overlaps instruction at (ram,0x004023e7)\n// \n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint fcn.00402350(void)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int32_t extraout_ECX;\n    int32_t iVar8;\n    ushort uVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uchar unaff_BL;\n    uchar *unaff_ESI;\n    uint *unaff_EDI;\n    uint16_t in_ES;\n    uint8_t uVar12;\n    bool bVar13;\n    ulong uVar14;\n    uint16_t in_stack_2e36a874;\n    uint32_t uStack32;\n    uchar auStack16 [4];\n    uint var_8h;\n    uint32_t *puVar7;\n    \n    uVar12 = auStack16 < 0x10;\n    uVar14 = (*0x402f46)();\n    iVar10 = uVar14 >> 0x20;\n    uVar9 = uVar14 >> 0x20;\n    uVar11 = in(uVar9);\n    *unaff_EDI = uVar11;\n    uVar1 = in(uVar9);\n    *(unaff_EDI + 1) = uVar1;\n    uVar3 = uVar14 + 0x56;\n    uVar6 = uVar3 + uVar12;\n    uVar5 = uVar14 & 0xffffff00;\n    puVar7 = uVar5 | uVar6;\n    uVar2 = 0xa9 < uVar14 || CARRY1(uVar3, uVar12);\n    bVar13 = CARRY4(*puVar7, &stack0xfffffffc) || CARRY4(&stack0xfffffffc + *puVar7, uVar2);\n    *puVar7 = &stack0xfffffffc + *puVar7 + uVar2;\n    uVar3 = uVar6 - 0x30;\n    uVar12 = uVar3 + bVar13;\n    uVar2 = uVar12;\n    iVar8 = extraout_ECX + -1;\n    if (iVar8 == 0 || uVar12 != 0) {\n        do {\n            uVar4 = in_stack_2e36a874 & 3;\n            in_stack_2e36a874 = in_stack_2e36a874 + (0x2f < uVar6 || CARRY1(uVar3, bVar13)) * -uVar4;\n            uVar1 = *unaff_ESI;\n            *unaff_ESI = unaff_BL;\n            if (SCARRY1(uVar6, -0x30) != SCARRY1(uVar3, bVar13)) {\n                *0x2fe45148 = *0x2fe45148 & 0xffff0000 | in_ES;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            unaff_BL = uVar1;\n        } while ((0x2f >= uVar6 && !CARRY1(uVar3, bVar13)) && -uVar4 < 1);\n        *0x2fe45148 = 0x2fe4514c;\n        uVar2 = uVar12 & 0xffffff04;\n    }\n    else {\n        iVar8 = 0x77d9b59e;\n        iVar10 = 0x77d9b59d;\n    }\n    uVar11 = 6;\n    if ((iVar8 - iVar10 & uStack32) == (uVar5 | uVar2) + 0x88264a63) {\n        uVar11 = 0x7f4d13b9;\n    }\n    return uVar11;\n}\n",
        "token_count": 884
    }
}