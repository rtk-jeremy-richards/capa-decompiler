{
    "00408bc7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408bc7(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00408dbc(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "004056e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004056e0(void)\n\n{\n    int32_t iVar1;\n    uint extraout_var;\n    \n    if (*0x43b570 == 0) {\n        iVar1 = *0x43b570;\n        fcn.0040819f(0);\n        if (*0x43b570 == 0) {\n            *0x43b564 = *0x43b564 + 1;\n            *0x43b570 = *0x43b564;\n        }\n        fcn.004081c7(iVar1, extraout_var);\n    }\n    return *0x43b570;\n}\n",
        "token_count": 139
    },
    "00405830": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00405830(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_ESI;\n    \n    iVar1 = *in_EAX;\n    if (unaff_ESI < *(iVar1 + 0xc)) {\n        iVar2 = *(*(iVar1 + 8) + unaff_ESI * 4);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (*(iVar1 + 0x14) != '\\0') {\n        iVar1 = fcn.00407dd1();\n        if (unaff_ESI < *(iVar1 + 0xc)) {\n            return *(*(iVar1 + 8) + unaff_ESI * 4);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 205
    },
    "004059b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004059b0(uint *param_1)\n\n{\n    *param_1 = 0x40482c;\n    if (param_1[5] != 0) {\n        fcn.00408dbc(param_1[4]);\n    }\n    *param_1 = 0x404824;\n    *param_1 = 0x401384;\n    return;\n}\n",
        "token_count": 88
    },
    "00406100": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406144)\n// WARNING: Removing unreachable block (ram,0x00406151)\n\nint64_t __cdecl fcn.00406100(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ushort uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    int64_t iVar6;\n    \n    if ((-1 < arg_10h) && ((iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar6 = fcn.00406ee0();\n                if (iVar6 < 1) {\n                    (**(*in_ECX + 0x1c))();\n                    fcn.00405510();\n                    cVar2 = fcn.004054e0();\n                    if (cVar2 != '\\0') {\n                        return iVar1;\n                    }\n                    uVar3 = fcn.004054d0();\n                    *arg_8h = uVar3;\n                    arg_8h = arg_8h + 1;\n                    iVar1 = iVar1 + 1;\n                    bVar5 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar5;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar6) {\n                        iVar6 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar4 = iVar6;\n                    fcn.00406e50(uVar4);\n                    fcn.004054c0();\n                    iVar1 = iVar6 + iVar1;\n                    arg_8h = arg_8h + uVar4;\n                    bVar5 = arg_ch < uVar4;\n                    arg_ch = arg_ch - uVar4;\n                    arg_10h = (arg_10h - (iVar6 >> 0x20)) - bVar5;\n                    fcn.00406e90();\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 539
    },
    "00406210": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406254)\n// WARNING: Removing unreachable block (ram,0x00406261)\n\nint64_t __cdecl fcn.00406210(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    char cVar3;\n    ushort uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    int64_t iVar7;\n    \n    if ((-1 < arg_10h) && ((iVar2 = 0,  0 < arg_10h || (iVar2 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar7 = fcn.00406f60();\n                if (iVar7 < 1) {\n                    iVar1 = *in_ECX;\n                    uVar4 = fcn.004054d0();\n                    (**(iVar1 + 0xc))(uVar4);\n                    fcn.00405510();\n                    cVar3 = fcn.004054e0();\n                    if (cVar3 != '\\0') {\n                        return iVar2;\n                    }\n                    iVar2 = iVar2 + 1;\n                    bVar6 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar6;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar7) {\n                        iVar7 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar5 = iVar7;\n                    fcn.00406e70(uVar5);\n                    fcn.004054c0();\n                    iVar2 = iVar7 + iVar2;\n                    bVar6 = arg_ch < uVar5;\n                    arg_ch = arg_ch - uVar5;\n                    arg_10h = (arg_10h - (iVar7 >> 0x20)) - bVar6;\n                    fcn.00406f00();\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar2;\n            }\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 513
    },
    "00406e10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406e10(uint param_1)\n\n{\n    fcn.00405db0(param_1);\n    return;\n}\n",
        "token_count": 33
    },
    "00406ee0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406ee0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x20) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "00406f60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406f60(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x24) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "004071b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004071b0(uint param_1)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.00405e90();\n    *(in_EAX + 0x38) = param_1;\n    *(in_EAX + 0x3c) = 0;\n    uVar1 = fcn.00407230();\n    *(in_EAX + 0x40) = uVar1;\n    if (*(in_EAX + 0x38) == 0) {\n        fcn.00406000();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00409bd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00409bd0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x00409db8;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x409edc\n            switch(*((arg_10h & 3) * 4 + 0x409edc)) {\n            case 0x409ef4:\ncode_r0x00409ef4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x409f04:\ncode_r0x00409f04:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x409f18:\ncode_r0x00409f18:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x409edc\n            switch(*(arg_10h * 4 + 0x409edc)) {\n            case 0x409ef4:\n                goto code_r0x00409ef4;\n            case 0x409f04:\n                goto code_r0x00409f04;\n            case 0x409f18:\n                goto code_r0x00409f18;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x409de0)) {\n            case 0x409df0:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x00409db8:\n    // WARNING: Could not recover jumptable at 0x00409dba. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x409e8c\n                    puVar18 = (**(uVar16 * -4 + 0x409e8c))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x409edc)) {\n                case 0x409ef4:\n                    goto code_r0x00409ef4;\n                case 0x409f04:\n                    goto code_r0x00409f04;\n                case 0x409f18:\n                    goto code_r0x00409f18;\n                }\n                break;\n            case 0x409e14:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x00409db8;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x409edc)) {\n                case 0x409ef4:\n                    goto code_r0x00409ef4;\n                case 0x409f04:\n                    goto code_r0x00409f04;\n                case 0x409f18:\n                    goto code_r0x00409f18;\n                }\n                break;\n            case 0x409e3c:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x00409db8;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x409edc)) {\n                case 0x409ef4:\n                    goto code_r0x00409ef4;\n                case 0x409f04:\n                    goto code_r0x00409f04;\n                case 0x409f18:\n                    goto code_r0x00409f18;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0x7dd14c != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x00409c50;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x409d40\n        switch(*((arg_10h & 3) * 4 + 0x409d40)) {\n        case 0x409d58:\ncode_r0x00409d58:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x409d64:\ncode_r0x00409d64:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x409d78:\ncode_r0x00409d78:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x409d50)) {\n        case 0x409d58:\n            goto code_r0x00409d58;\n        case 0x409d64:\n            goto code_r0x00409d64;\n        case 0x409d78:\n            goto code_r0x00409d78;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x409c54)) {\n        case 0x409c64:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x00409c50:\n    // WARNING: Could not recover jumptable at 0x00409c50. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x409cd4\n                puVar18 = (**(uVar17 * 4 + 0x409cd4))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x409d40)) {\n            case 0x409d58:\n                goto code_r0x00409d58;\n            case 0x409d64:\n                goto code_r0x00409d64;\n            case 0x409d78:\n                goto code_r0x00409d78;\n            }\n            break;\n        case 0x409c90:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x00409c50;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x409d40)) {\n            case 0x409d58:\n                goto code_r0x00409d58;\n            case 0x409d64:\n                goto code_r0x00409d64;\n            case 0x409d78:\n                goto code_r0x00409d78;\n            }\n            break;\n        case 0x409cb4:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x00409c50;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x409d40)) {\n            case 0x409d58:\n                goto code_r0x00409d58;\n            case 0x409d64:\n                goto code_r0x00409d64;\n            case 0x409d78:\n                goto code_r0x00409d78;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4189
    },
    "00409f40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00409f40(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x0040a128;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x40a24c\n            switch(*((arg_10h & 3) * 4 + 0x40a24c)) {\n            case 0x40a264:\ncode_r0x0040a264:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40a274:\ncode_r0x0040a274:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40a288:\ncode_r0x0040a288:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40a24c\n            switch(*(arg_10h * 4 + 0x40a24c)) {\n            case 0x40a264:\n                goto code_r0x0040a264;\n            case 0x40a274:\n                goto code_r0x0040a274;\n            case 0x40a288:\n                goto code_r0x0040a288;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x40a150)) {\n            case 0x40a160:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x0040a128:\n    // WARNING: Could not recover jumptable at 0x0040a12a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40a1fc\n                    puVar18 = (**(uVar16 * -4 + 0x40a1fc))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40a24c)) {\n                case 0x40a264:\n                    goto code_r0x0040a264;\n                case 0x40a274:\n                    goto code_r0x0040a274;\n                case 0x40a288:\n                    goto code_r0x0040a288;\n                }\n                break;\n            case 0x40a184:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x0040a128;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40a24c)) {\n                case 0x40a264:\n                    goto code_r0x0040a264;\n                case 0x40a274:\n                    goto code_r0x0040a274;\n                case 0x40a288:\n                    goto code_r0x0040a288;\n                }\n                break;\n            case 0x40a1ac:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x0040a128;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40a24c)) {\n                case 0x40a264:\n                    goto code_r0x0040a264;\n                case 0x40a274:\n                    goto code_r0x0040a274;\n                case 0x40a288:\n                    goto code_r0x0040a288;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0x7dd14c != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x00409fc0;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x40a0b0\n        switch(*((arg_10h & 3) * 4 + 0x40a0b0)) {\n        case 0x40a0c8:\ncode_r0x0040a0c8:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x40a0d4:\ncode_r0x0040a0d4:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40a0e8:\ncode_r0x0040a0e8:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40a0c0)) {\n        case 0x40a0c8:\n            goto code_r0x0040a0c8;\n        case 0x40a0d4:\n            goto code_r0x0040a0d4;\n        case 0x40a0e8:\n            goto code_r0x0040a0e8;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x409fc4)) {\n        case 0x409fd4:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x00409fc0:\n    // WARNING: Could not recover jumptable at 0x00409fc0. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40a044\n                puVar18 = (**(uVar17 * 4 + 0x40a044))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40a0b0)) {\n            case 0x40a0c8:\n                goto code_r0x0040a0c8;\n            case 0x40a0d4:\n                goto code_r0x0040a0d4;\n            case 0x40a0e8:\n                goto code_r0x0040a0e8;\n            }\n            break;\n        case 0x40a000:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x00409fc0;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40a0b0)) {\n            case 0x40a0c8:\n                goto code_r0x0040a0c8;\n            case 0x40a0d4:\n                goto code_r0x0040a0d4;\n            case 0x40a0e8:\n                goto code_r0x0040a0e8;\n            }\n            break;\n        case 0x40a024:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x00409fc0;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40a0b0)) {\n            case 0x40a0c8:\n                goto code_r0x0040a0c8;\n            case 0x40a0d4:\n                goto code_r0x0040a0d4;\n            case 0x40a0e8:\n                goto code_r0x0040a0e8;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4270
    },
    "00408dbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408dbc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x43b75c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004095a5();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00409563(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0040a402": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a402(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40a4ad;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040a4d9;\n        uStack36 = *0x4263d4 ^ &fcn.0040a402::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040a402::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040d77c();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040a402::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 728
    },
    "0040a6f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a6f0(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4263d4) {\n        return;\n    }\n    *0x43c010 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x43c014 = &arg_8h;\n    *0x43bf50 = 0x10001;\n    *0x43bef8 = 0xc0000409;\n    *0x43befc = 1;\n    var_328h = *0x4263d4;\n    var_324h = *0x4263d8;\n    *0x43bf04 = unaff_retaddr;\n    *0x43bfdc = in_GS;\n    *0x43bfe0 = in_FS;\n    *0x43bfe4 = in_ES;\n    *0x43bfe8 = in_DS;\n    *0x43bfec = unaff_EDI;\n    *0x43bff0 = unaff_ESI;\n    *0x43bff4 = unaff_EBX;\n    *0x43bff8 = in_EDX;\n    *0x43bffc = in_ECX;\n    *0x43c000 = in_EAX;\n    *0x43c004 = unaff_EBP;\n    *0x43c008 = unaff_retaddr;\n    *0x43c00c = in_CS;\n    *0x43c018 = in_SS;\n    *0x43bf48 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0041d16d(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402c38);\n    if (*0x43bf48 == 0) {\n        fcn.0041d16d(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 837
    },
    "0040cf00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040d006: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040d00b)\n// WARNING: Removing unreachable block (ram,0x0040d03a)\n// WARNING: Removing unreachable block (ram,0x0040d011)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040cf00(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040d370(0x4249b0, 0x20);\n    fcn.00411f48(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x43b790 != 1) {\n        *0x43b78c = 1;\n        *0x43b788 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x7de28c);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x7de288);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0040d58f();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0040d58f();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x7de28c);\n                        piVar2 = (*pcVar1)(*0x7de288);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401260;\n            while (*(unaff_EBP + -0x1c) < 0x40126c) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401270;\n        while (*(unaff_EBP + -0x20) < 0x401274) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00411e57(8);\n    }\n    return;\n}\n",
        "token_count": 1020
    },
    "0040f82e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f82e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040d77c();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040d77c();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0040fed9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fed9(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0040a63e(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040d77c();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040d77c();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0040a617(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040f88d(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "004162ad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004162ad(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00411e57(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0041659c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041659c(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4263d4 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0040d58f();\n    var_14h = 0;\n    if (*0x43c3ac == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x403804);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x4037f8), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x004166f9;\n        *0x43c3ac = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x4037e8);\n        *0x43c3b0 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x4037d4);\n        *0x43c3b4 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x4037b8);\n        *0x43c3bc = (*pcVar4)(uVar3);\n        if (*0x43c3bc != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x4037a0);\n            *0x43c3b8 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x43c3b8 == var_18h) || (*0x43c3bc == var_18h)) {\ncode_r0x004166a8:\n        if ((((*0x43c3b0 != var_18h) && (pcVar4 = (*pcVar6)(*0x43c3b0),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x43c3b4 != var_18h && (pcVar4 = (*pcVar6)(*0x43c3b4),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x43c3b8);\n        pcVar5 = (*pcVar6)(*0x43c3bc);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x004166a8;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x43c3ac);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x004166f9:\n    fcn.0040a6f0(unaff_EBX);\n    return;\n}\n",
        "token_count": 967
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004209ba": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.004209ba(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4263d4 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00420afe;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00420b05;\ncode_r0x00420afe:\n                        do {\n                            bVar6 = true;\ncode_r0x00420b05:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00420b13;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00420b13:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x43b214 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x43b214 < iVar14) {\n                if (iVar14 < *0x43b210) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x43b210;\n                }\n                goto code_r0x00420ebe;\n            }\n            iVar13 = *0x43b214 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00420cb2;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00420cb2:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00420ebe:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.0040a6f0(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3261
    },
    "00420f0b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00420f0b(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4263d4 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x43b234;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x43b230 + -1;\n        iVar14 = *0x43b230 + (*0x43b230 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x43b230 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0042104f;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00421056;\ncode_r0x0042104f:\n                        do {\n                            bVar6 = true;\ncode_r0x00421056:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00421064;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00421064:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x43b22c - *0x43b230) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x43b22c < iVar14) {\n                if (iVar14 < *0x43b228) {\n                    iVar14 = iVar14 + *0x43b23c;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x43b234 + (*0x43b234 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x43b234 + (*0x43b234 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x43b23c + *0x43b228;\n                }\n                goto code_r0x0042140f;\n            }\n            iVar13 = *0x43b22c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x43b230 + -1;\n            iVar13 = *0x43b230 + (*0x43b230 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x43b230 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00421203;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00421203:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x43b234 + 1 + (*0x43b234 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0042140f:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x43b238 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x43b238 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.0040a6f0(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3233
    },
    "0041fbed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041fbed(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4263d4 ^ &stack0xfffffffc;\n    fcn.0040bcc9(arg_10h);\n    var_14h = fcn.00421b18(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004209ba(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0041fc46:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041fc86;\n        }\n        if (iVar1 != 2) {\ncode_r0x0041fc78:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041fc86;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0041fc78;\n        goto code_r0x0041fc46;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041fc86:\n    fcn.0040a6f0(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "0041fd6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041fd6c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4263d4 ^ &stack0xfffffffc;\n    fcn.0040bcc9(arg_10h);\n    var_14h = fcn.00421b18(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00420f0b(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0041fdc5:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041fe05;\n        }\n        if (iVar1 != 2) {\ncode_r0x0041fdf7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041fe05;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0041fdf7;\n        goto code_r0x0041fdc5;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041fe05:\n    fcn.0040a6f0(unaff_EBX);\n    return;\n}\n",
        "token_count": 508
    },
    "0041ebc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0041ebc0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t unaff_EBX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack3144;\n    uint uStack3140;\n    uint uStack3136;\n    uint uStack3132;\n    uint uStack3128;\n    uint uStack3124;\n    uint uStack3120;\n    uchar *puStack3116;\n    uchar *puStack3112;\n    uint uStack3108;\n    uint uStack3104;\n    uint uStack3100;\n    uint uStack3096;\n    uint uStack3092;\n    uchar *puStack3088;\n    uint uStack3084;\n    uchar *puStack3080;\n    uint uStack3076;\n    uint uStack3072;\n    uint uStack3068;\n    uchar *puStack3064;\n    uint uStack3060;\n    uint uStack3056;\n    uchar *puStack3052;\n    uint uStack3048;\n    uchar *puStack3044;\n    uint uStack3040;\n    uint uStack3036;\n    uint uStack3032;\n    uchar *puStack3028;\n    uint uStack3024;\n    uchar *puStack3020;\n    uint uStack3016;\n    uint uStack3012;\n    uchar *puStack3008;\n    uint uStack3004;\n    uchar *puStack3000;\n    uchar *puStack2996;\n    uchar *puStack2992;\n    uint uStack2988;\n    int32_t iVar7;\n    int32_t iStack2904;\n    uchar auStack2764 [360];\n    uchar auStack2404 [272];\n    uchar auStack2132 [28];\n    uchar auStack2104 [8];\n    uchar auStack2096 [2064];\n    uint uStack32;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack20 = *in_FS_OFFSET;\n    uStack12 = 0xffffffff;\n    uStack16 = 0x4241db;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if (*0x7dd130 == 0x12) {\n        fcn.00408f09(0);\n        fcn.00408f39();\n        fcn.00406390();\n        uStack16 = 0;\n        uStack2988 = 0x41ec1c;\n        fcn.00409067(0);\n        fcn.00409089();\n    }\n    *0x7dd130 = *0x7dd130 + 0x38d6;\n    uVar5 = 0;\n    do {\n        if (uVar5 < 0x1c428) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n    } while ((((uVar5 < 0x1ea07dba) || (unaff_EBX == 0xad121a)) || (iStack2904 == 0x8c67878)) &&\n            (uVar5 = uVar5 + 1,  uVar5 < 0x8c70231e));\n    uStack2988 = 0;\n    puStack2992 = 0x41ec83;\n    *0x7d95a0 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    pcVar4 = _sym.imp.KERNEL32.dll_EnumDateFormatsA;\n    pcVar2 = _sym.imp.KERNEL32.dll_EnumCalendarInfoW;\n    pcVar1 = _sym.imp.KERNEL32.dll_EnumCalendarInfoA;\n    iVar7 = 0x963510;\n    uVar5 = *0x7dd130;\n    do {\n        if (uVar5 == 3) {\n            puStack2992 = NULL;\n            puStack2996 = 0x41ecb3;\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n            uVar5 = *0x7dd130;\n        }\n        if (uVar5 == 0xbc5) {\n            puStack2992 = NULL;\n            puStack2996 = NULL;\n            puStack3000 = NULL;\n            uStack3004 = 0;\n            puStack3008 = 0x41ecc9;\n            (*pcVar1)();\n            puStack3008 = NULL;\n            uStack3012 = 0;\n            uStack3016 = 0;\n            puStack3020 = NULL;\n            uStack3024 = 0x41eccf;\n            (*pcVar2)();\n            uStack3024 = 0;\n            puStack3028 = NULL;\n            uStack3032 = 0;\n            uStack3036 = 0;\n            uStack3040 = 0x41ecd9;\n            (*_sym.imp.KERNEL32.dll_GetOverlappedResult)();\n            uStack3040 = 0;\n            puStack3044 = &stack0xfffff7ac;\n            uStack3048 = 0x41ece8;\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)();\n            uStack3048 = 0;\n            puStack3052 = 0x41ecef;\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n            puStack3052 = &stack0xfffff430;\n            uStack3024 = 0;\n            puStack3020 = NULL;\n            uStack3056 = 0x41ed02;\n            (*_sym.imp.KERNEL32.dll_QueryDepthSList)();\n            uStack3056 = 0;\n            uStack3060 = 0;\n            puStack3064 = NULL;\n            uStack3068 = 0x41ed07;\n            (*pcVar4)();\n            uStack3068 = 0;\n            uStack3072 = 0;\n            uStack3076 = 0x41ed0f;\n            (*_sym.imp.KERNEL32.dll_SetConsoleMode)();\n            uStack3076 = 0;\n            puStack3080 = NULL;\n            uStack3084 = 0;\n            puStack3088 = 0x41ed14;\n            (*pcVar4)();\n            puStack3088 = &stack0xfffff45c;\n            uStack3092 = 0;\n            uStack3096 = 0x41ed20;\n            (*_sym.imp.KERNEL32.dll_GetConsoleScreenBufferInfo)();\n            uStack3096 = 0;\n            uStack3100 = 0;\n            uStack3104 = 0x41ed28;\n            (*_sym.imp.KERNEL32.dll_GetCommState)();\n            uStack3104 = 0;\n            uStack3108 = 0x41ed2f;\n            (*_sym.imp.KERNEL32.dll_GlobalUnfix)();\n            uStack3108 = 0;\n            puStack3112 = 0x41ed36;\n            (*_sym.imp.KERNEL32.dll_SetComputerNameA)();\n            puStack3112 = &stack0xfffff408;\n            uStack3060 = 0;\n            uStack3056 = 0;\n            puStack3052 = NULL;\n            uStack3048 = 0;\n            puStack3116 = &stack0xfffff41c;\n            uStack3120 = 0;\n            puStack3064 = NULL;\n            uStack3124 = 0x41ed5d;\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsA)();\n            uStack3124 = 0x404450;\n            uStack3128 = 0x41ed68;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n            uStack3128 = 0x404458;\n            uStack3132 = 0x41ed73;\n            (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n            uStack3132 = 0;\n            uStack3136 = 0;\n            uStack3140 = 0;\n            uStack3144 = 0x41ed7c;\n            (*_sym.imp.KERNEL32.dll_CreateJobSet)();\n            uStack3144 = 0x4044fc;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n            (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0x40451c);\n            (*_sym.imp.KERNEL32.dll_GetStringTypeA)(0, 0, 0x404528, 0, &stack0xfffff3c0);\n            uStack3144 = 0;\n            uStack3140 = 0;\n            (*_sym.imp.KERNEL32.dll_InterlockedPopEntrySList)(&stack0xfffff3b8);\n            (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n            uVar5 = *0x7dd130;\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_GetEnvironmentStrings;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    uVar6 = 0;\n    if (uVar5 != 0) {\n        do {\n            puStack2992 = 0x41ede5;\n            fcn.0041e890();\n            if (*0x7dd130 == 0x29) {\n                puStack2992 = 0x41edf1;\n                (*pcVar3)();\n            }\n            uVar6 = uVar6 + 1;\n            uVar5 = *0x7dd130;\n        } while (uVar6 < *0x7dd130);\n    }\n    if (uVar5 == 0x19c) {\n        puStack2992 = NULL;\n        puStack2996 = &stack0xfffff464;\n        puStack3000 = NULL;\n        uStack3004 = 0;\n        puStack3008 = NULL;\n        uStack3012 = 0x41ee11;\n        (*_sym.imp.KERNEL32.dll_WriteConsoleA)();\n        uStack3012 = 0;\n        uStack3016 = 0x404570;\n        puStack3020 = &stack0xfffff7c8;\n        uStack3024 = 0x41ee25;\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)();\n        uStack3024 = 0x4045c0;\n        puStack3028 = 0x41ee30;\n        (*_sym.imp.KERNEL32.dll_FindAtomW)();\n        puStack3028 = &stack0xfffff444;\n        uStack3032 = 0;\n        uStack3036 = 0x4045f8;\n        uStack3040 = 0;\n        puStack3044 = NULL;\n        uStack3048 = 0x41ee43;\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExA)();\n        uStack3048 = 0;\n        puStack3052 = 0x41ee4a;\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n        puStack3052 = 0x404650;\n        uStack3056 = 0;\n        uStack3060 = 0;\n        puStack3064 = NULL;\n        uStack3068 = 0x41ee58;\n        (*_sym.imp.KERNEL32.dll_SetCalendarInfoA)();\n        uStack3068 = 0;\n        uStack3072 = 0x40465c;\n        uStack3076 = 0x41ee64;\n        (*_sym.imp.KERNEL32.dll_BeginUpdateResourceA)();\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetMenu;\n    iVar7 = 0x8dc;\n    do {\n        puStack2992 = NULL;\n        puStack2996 = 0x41ee73;\n        (*pcVar1)();\n        pcVar2 = _sym.imp.KERNEL32.dll_SetFileShortNameA;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    iVar7 = 0x250a9;\n    do {\n        if (*0x7dd130 == 0x92) {\n            puStack2992 = 0x404664;\n            puStack2996 = NULL;\n            puStack3000 = 0x41ee96;\n            (*pcVar2)();\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    *0x43c438 = 0;\n    puStack2992 = 0x41eea4;\n    fcn.0041e3d0();\n    puStack2992 = 0x41eea9;\n    fcn.0041eb90();\n    puStack2992 = 0x41eeae;\n    fcn.0041e870();\n    pcVar2 = _sym.imp.USER32.dll_DefDlgProcA;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    iVar7 = 0xf2b8b;\n    do {\n        if (*0x7dd130 == 0x21) {\n            puStack2992 = NULL;\n            puStack2996 = NULL;\n            puStack3000 = NULL;\n            uStack3004 = 0;\n            puStack3008 = 0x41eecf;\n            (*pcVar2)();\n            puStack3008 = NULL;\n            uStack3012 = 0x41eed2;\n            (*pcVar1)();\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    puStack2992 = 0x41eeda;\n    fcn.0041e9c0();\n    *0x43c439 = 0x73;\n    if (*0x7dd130 == 0xd5c) {\n        puStack2992 = &stack0xfffff69c;\n        puStack2996 = NULL;\n        puStack3000 = 0x41ef00;\n        (*_sym.imp.KERNEL32.dll_FindNextFileA)();\n        puStack3000 = &stack0xfffff45c;\n        uStack3004 = 0x41ef0b;\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n        uStack3004 = 0;\n        puStack3008 = &stack0xfffff7d0;\n        uStack3012 = 0;\n        uStack3016 = 0x41ef1b;\n        (*_sym.imp.KERNEL32.dll_GetVolumePathNameA)();\n        uStack3016 = 0x404688;\n        puStack3020 = 0x41ef26;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n        puStack3020 = NULL;\n        uStack3024 = 0;\n        puStack3028 = 0x41ef2e;\n        (*_sym.imp.KERNEL32.dll_TerminateJobObject)();\n        puStack3028 = NULL;\n        uStack3032 = 0;\n        uStack3036 = 0;\n        uStack3040 = 0x41ef37;\n        (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)();\n        uStack3040 = 0x41ef3d;\n        (*_sym.imp.KERNEL32.dll_DebugBreak)();\n        uStack3040 = 0;\n        puStack3044 = 0x41ef44;\n        (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n        puStack3044 = 0x4046cc;\n        uStack3048 = 0x41ef4b;\n        (*pcVar1)();\n        uStack3048 = 0;\n        puStack3052 = NULL;\n        uStack3056 = 0x41ef53;\n        (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)();\n        uStack3056 = 0;\n        uStack3060 = 0;\n        puStack3064 = 0x41ef5b;\n        (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)();\n        puStack3064 = &stack0xfffff534;\n        uStack3068 = 0;\n        uStack3072 = 0;\n        uStack3076 = 0x41ef6b;\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExA)();\n        uStack3076 = 0;\n        puStack3080 = 0x41ef72;\n        (*_sym.imp.KERNEL32.dll_ZombifyActCtx)();\n        puStack3080 = &stack0xfffff410;\n        uStack3084 = 0;\n        puStack3088 = 0x41ef7e;\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)();\n        puStack3088 = NULL;\n        uStack3092 = 0;\n        uStack3096 = 0;\n        uStack3100 = 0x404704;\n        uStack3104 = 0x40471c;\n        uStack3108 = 0x41ef91;\n        (*_sym.imp.KERNEL32.dll_MoveFileWithProgressA)();\n    }\n    puStack2992 = 0x41ef96;\n    fcn.0041e880();\n    *in_FS_OFFSET = uStack32;\n    return 0;\n}\n",
        "token_count": 3749
    },
    "00405910": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00405910(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack52 [4];\n    uchar auStack48 [32];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42411b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        iVar1 = fcn.004092fc(0x20);\n        uStack4 = 0;\n        if (iVar1 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            fcn.00405820();\n            fcn.00405570(auStack48);\n            iVar2 = fcn.004058f0();\n        }\n        uStack8 = 0xffffffff;\n        *param_1 = iVar2;\n        if (iVar1 != 0) {\n            fcn.00405610(auStack52);\n        }\n    }\n    *in_FS_OFFSET = uStack16;\n    return 2;\n}\n",
        "token_count": 279
    },
    "00406ac0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406c0f)\n// WARNING: Removing unreachable block (ram,0x00406b5d)\n\nuint __cdecl\nfcn.00406ac0(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint32_t arg_24h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int64_t iVar5;\n    \n    iVar5 = fcn.004070c0();\n    iVar2 = fcn.00406e70();\n    if ((iVar2 != 0) && (uVar3 = fcn.00406e70(),  *(in_ECX + 0x3c) < uVar3)) {\n        uVar4 = fcn.00406e70();\n        *(in_ECX + 0x3c) = uVar4;\n    }\n    iVar1 = iVar5;\n    if (iVar5 != CONCAT44(*0x40137c, *0x401378)) {\n        if ((arg_24h & 1) != 0) {\n            iVar2 = fcn.00406e50();\n            if (iVar2 != 0) {\n                iVar1 = CONCAT44(*0x40137c, *0x401378);\n                if (-1 < iVar5) {\n                    iVar2 = fcn.00406e40();\n                    iVar2 = *(in_ECX + 0x3c) - iVar2;\n                    iVar1 = CONCAT44(*0x40137c, *0x401378);\n                    if (iVar5 <= CONCAT44(iVar2 >> 0x1f, iVar2 >> 1)) {\n                        fcn.00406e40();\n                        fcn.00406e50();\n                        fcn.00406e90();\n                        iVar1 = iVar5;\n                        if (((arg_24h & 2) != 0) && (iVar2 = fcn.00406e70(),  iVar2 != 0)) {\n                            fcn.00406ec0();\n                            fcn.00406e50();\n                            fcn.00406e60();\n                            fcn.00406f30();\n                        }\n                    }\n                }\n                goto code_r0x00406bc6;\n            }\n        }\n        iVar1 = CONCAT44(*0x40137c, *0x401378);\n        if ((arg_24h & 2) != 0) {\n            iVar2 = fcn.00406e70();\n            iVar1 = CONCAT44(*0x40137c, *0x401378);\n            if ((iVar2 != 0) && (iVar1 = CONCAT44(*0x40137c, *0x401378),  -1 < iVar5)) {\n                iVar2 = fcn.00406e40();\n                iVar2 = *(in_ECX + 0x3c) - iVar2;\n                iVar1 = CONCAT44(*0x40137c, *0x401378);\n                if (iVar5 <= CONCAT44(iVar2 >> 0x1f, iVar2 >> 1)) {\n                    fcn.00406e40();\n                    fcn.00406e70();\n                    fcn.00406f00();\n                    iVar1 = iVar5;\n                }\n            }\n        }\n    }\ncode_r0x00406bc6:\n    fcn.004070a0(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 783
    },
    "00406ca0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00406ca0(uint param_1, uint8_t param_2)\n\n{\n    fcn.00405800();\n    if ((param_2 & 1) != 0) {\n        fcn.0040907e(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 69
    },
    "00407060": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00407060(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x40) & 1) != 0) {\n        fcn.00406e40();\n        fcn.00406f90();\n    }\n    fcn.00406ea0();\n    fcn.00406f10();\n    *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) & 0xfffffffe;\n    *(unaff_ESI + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 133
    },
    "004077a9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004077a9(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4012a0;\n    if ((arg_8h & 1) != 0) {\n        fcn.0040907e();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00408a19": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408a19(uint32_t arg_8h)\n\n{\n    fcn.00408c9a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040907e();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00408d04": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d04(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4013e4;\n    fcn.00408bc7();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040907e();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00409142": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409142(uint32_t arg_8h)\n\n{\n    fcn.00409132();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040907e();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0040f697": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f697(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x402c20;\n    fcn.00408c9a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040907e();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0041cfc0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041cfc0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040d370(0x424e70, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004095b8();\n        *puVar2 = 0;\n        puVar2 = fcn.004095a5();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x7dd150)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x7dd160;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0041c54e(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004095a5();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004095b8();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0041c8c3(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0041d08c();\n                goto code_r0x0041d083;\n            }\n        }\n        puVar2 = fcn.004095b8();\n        *puVar2 = 0;\n        puVar2 = fcn.004095a5();\n        *puVar2 = 9;\n        fcn.0040e3ad();\n    }\ncode_r0x0041d083:\n    fcn.0040d3b5();\n    return;\n}\n",
        "token_count": 618
    },
    "00405720": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405720(int32_t param_1)\n\n{\n    fcn.0040819f(0);\n    if (*(param_1 + 4) != -1) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    fcn.004081c7();\n    return;\n}\n",
        "token_count": 81
    },
    "00405750": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405750(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040819f(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.004081c7();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 124
    },
    "004072c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.004072c0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack36;\n    uchar auStack32 [4];\n    uint uStack28;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424138;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar3 = 0;\n    fcn.0040819f(0);\n    iVar2 = *0x7dd138;\n    uStack8 = 0;\n    iStack36 = *0x7dd138;\n    fcn.004056e0();\n    iVar1 = fcn.00405830();\n    if ((iVar1 == 0) && (iVar1 = iVar2,  iVar2 == 0)) {\n        iVar2 = fcn.00405910(&iStack36);\n        if (iVar2 == -1) {\n            fcn.00408c41(0x404738);\n            fcn.0040a2a1(auStack32, 0x424fe4);\n        }\n        *0x7dd138 = iVar3;\n        fcn.00405720();\n        fcn.00405790();\n        iVar1 = iVar3;\n    }\n    uStack20 = 0xffffffff;\n    fcn.004081c7();\n    *in_FS_OFFSET = uStack28;\n    return iVar1;\n}\n",
        "token_count": 357
    },
    "0041c89b": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0041c89b(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x7dd160) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.0041c5ed(unaff_ESI);\n    return;\n}\n",
        "token_count": 160
    },
    "0041ea20": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0041ea20(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uStack1044;\n    int32_t iStack1036;\n    uchar auStack1024 [1024];\n    \n    iVar4 = *0x43916c;\n    iVar3 = *0x439168;\n    iVar2 = *0x439164;\n    iVar1 = *0x439160;\n    uStack1044 = *param_1;\n    uVar5 = param_1[1];\n    iStack1036 = 0x20;\n    do {\n        if (*0x7dd130 == 5) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthA)();\n            (*_sym.imp.KERNEL32.dll_SetThreadIdealProcessor)(0, 0);\n        }\n        *0x7d95a4 = 0;\n        if (*0x7dd130 == 0x5ba) {\n            (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0x4043f8);\n        }\n        uVar5 = uVar5 - ((uStack1044 >> 5) + iVar4 ^ uStack1044 * 0x10 + iVar3 ^ uStack1044 + 0xc6ef3720);\n        *0x7d95a8 = 0xff6b3619;\n        *0x7d95ac = 0xffffffff;\n        uStack1044 = uStack1044 - (uVar5 * 0x10 + iVar1 ^ uVar5 + 0xc6ef3720 ^ (uVar5 >> 5) + iVar2);\n        if (*0x7dd130 == 0x93) {\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(auStack1024, 0x404404);\n        }\n        else {\n            fcn.0041e9b0();\n        }\n        iStack1036 = iStack1036 + -1;\n    } while (iStack1036 != 0);\n    param_1[1] = uVar5;\n    *param_1 = uStack1044;\n    return;\n}\n",
        "token_count": 506
    },
    "0041eb90": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0041eb90(void)\n\n{\n    uint32_t uVar1;\n    \n    for (uVar1 = *0x7dd130 >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        fcn.0041ea20();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004054a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004054a0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00409bd0(param_3, param_2, in_EAX * 2);\n    return;\n}\n",
        "token_count": 63
    },
    "004054c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004054c0(void)\n\n{\n    fcn.004054a0();\n    return;\n}\n",
        "token_count": 25
    },
    "00405570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00405570(uint param_1)\n\n{\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4240a4;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0040819f(0);\n    uStack8 = 0;\n    fcn.00405fb0();\n    fcn.00405fb0();\n    fcn.00405fb0();\n    fcn.00405fb0();\n    uStack8 = CONCAT31(uStack8._1_3_, 4);\n    if (unaff_EDI == 0) {\n        fcn.00405520(0x404360);\n        fcn.0040a2a1(&stack0xffffffe0, 0x424f50);\n    }\n    fcn.00407f2c(param_1, unaff_EDI);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 269
    },
    "00405610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00405610(uint param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack8 = 0x4240a4;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 4;\n    fcn.00407eb9(param_1);\n    fcn.00405fc0();\n    fcn.00405fc0();\n    fcn.00405fc0();\n    fcn.00405fc0();\n    uStack4 = 0xffffffff;\n    fcn.004081c7();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 162
    },
    "00405680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405680(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    uchar auStack20 [20];\n    \n    puVar3 = fcn.0040877a(auStack20);\n    uVar1 = puVar3[1];\n    *unaff_ESI = *puVar3;\n    uVar2 = puVar3[2];\n    unaff_ESI[1] = uVar1;\n    uVar1 = puVar3[3];\n    unaff_ESI[2] = uVar2;\n    unaff_ESI[3] = uVar1;\n    return;\n}\n",
        "token_count": 152
    },
    "00405820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405820(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*in_EAX + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = *in_EAX + 0x1c;\n    }\n    return iVar1;\n}\n",
        "token_count": 77
    },
    "004059e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004059e0(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_EDI;\n    \n    puVar1 = fcn.00405680();\n    *(unaff_EDI + 8) = *puVar1;\n    *(unaff_EDI + 0xc) = puVar1[1];\n    *(unaff_EDI + 0x10) = puVar1[2];\n    *(unaff_EDI + 0x14) = puVar1[3];\n    puVar1 = fcn.004056b0();\n    *(unaff_EDI + 0x18) = *puVar1;\n    *(unaff_EDI + 0x1c) = puVar1[1];\n    return;\n}\n",
        "token_count": 168
    },
    "00405db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405db0(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint uStack40;\n    uchar auStack28 [28];\n    \n    *(param_1 + 0xc) = in_EAX & 0x17;\n    uVar1 = *(param_1 + 0x10) & in_EAX & 0x17;\n    if (uVar1 != 0) {\n        if ((uVar1 & 4) != 0) {\n            uStack40 = 0x405dcf;\n            fcn.00405d10();\n            uStack40 = 0x4043ac;\n            fcn.00405d90();\n            fcn.0040a2a1(&stack0xffffffe4, 0x424fac);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 2) != 0) {\n            fcn.00405d10();\n            fcn.00405d90(0x4043c4);\n            fcn.0040a2a1(&stack0xffffffd8, 0x424fac);\n        }\n        fcn.00405d10();\n        fcn.00405d90(0x4043dc);\n        fcn.0040a2a1(&stack0xffffffd8, 0x424fac);\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00405e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00405e90(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    \n    *(unaff_EDI + 0x30) = 0;\n    *(unaff_EDI + 8) = 0;\n    *(unaff_EDI + 0x10) = 0;\n    *(unaff_EDI + 0x14) = 0x201;\n    *(unaff_EDI + 0x18) = 6;\n    *(unaff_EDI + 0x1c) = 0;\n    *(unaff_EDI + 0x20) = 0;\n    *(unaff_EDI + 0x24) = 0;\n    *(unaff_EDI + 0x28) = 0;\n    *(unaff_EDI + 0x2c) = 0;\n    fcn.00405e40();\n    iVar1 = fcn.004092fc(4);\n    if (iVar1 != 0) {\n        uVar2 = fcn.004057e0();\n        *(unaff_EDI + 0x30) = uVar2;\n        return;\n    }\n    *(unaff_EDI + 0x30) = 0;\n    return;\n}\n",
        "token_count": 284
    },
    "00405fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fc0(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.00408dbc(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 58
    },
    "00406390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00406390(int32_t *param_1)\n\n{\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4241b7;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x404810;\n    param_1[4] = 0x404818;\n    fcn.00406e30();\n    uStack4 = 0;\n    fcn.00406fb0(param_1, param_1 + 6);\n    uStack12 = 1;\n    *(param_1 + *(*param_1 + 4)) = 0x40480c;\n    fcn.00407010(param_1 + 6);\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 220
    },
    "00406e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406e90(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x30) = **(param_2 + 0x30) - param_1;\n    **(param_2 + 0x20) = **(param_2 + 0x20) + param_1 * 2;\n    return;\n}\n",
        "token_count": 91
    },
    "00406f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406f00(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x34) = **(param_2 + 0x34) - param_1;\n    **(param_2 + 0x24) = **(param_2 + 0x24) + param_1 * 2;\n    return;\n}\n",
        "token_count": 91
    },
    "00406fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406fa0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (param_1 != 0) {\n        if ((param_1 < 0x80000000) && (iVar1 = fcn.004092fc(param_1 * 2),  iVar1 != 0)) {\n            return iVar1;\n        }\n        fcn.00405450();\n        iVar1 = fcn.0040a2a1(&stack0xfffffff0, 0x42501c);\n    }\n    return iVar1;\n}\n",
        "token_count": 137
    },
    "00406fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00406fb0(int32_t *param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42417b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004070f0(param_1);\n    uStack12 = 1;\n    fcn.004070d0(param_1 + 4);\n    *(param_1 + *(*param_1 + 4)) = 0x4047bc;\n    *in_FS_OFFSET = param_2;\n    return param_1;\n}\n",
        "token_count": 168
    },
    "00407010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00407010(uint *param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x4240d8;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00407130(param_1);\n    uStack8 = 0;\n    *param_1 = 0x4047cc;\n    fcn.00406370();\n    fcn.004071a0();\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 159
    },
    "004070f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.004070f0(int32_t *param_1, uint param_2)\n\n{\n    *(param_1 + *(*param_1 + 4)) = 0x40479c;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    fcn.004071b0(param_2);\n    return param_1;\n}\n",
        "token_count": 89
    },
    "00407130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * fcn.00407130(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x4240bb;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x40475c;\n    fcn.0040825e();\n    uStack4 = 0;\n    iVar1 = fcn.004092fc(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.004057e0();\n    }\n    param_1[0xe] = uVar2;\n    fcn.004071f0();\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 217
    },
    "00407230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407230(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424158;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00405e60();\n    uStack4 = 0;\n    fcn.004072c0();\n    uStack4 = 0xffffffff;\n    fcn.00405800();\n    fcn.004058e0();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 144
    },
    "00408226": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408226(uint32_t arg_8h)\n\n{\n    fcn.00408b2c((arg_8h & 3) * 0x18 + 0x43b588);\n    return;\n}\n",
        "token_count": 54
    },
    "00408242": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408242(uint32_t arg_8h)\n\n{\n    fcn.00408b3c((arg_8h & 3) * 0x18 + 0x43b588);\n    return;\n}\n",
        "token_count": 54
    },
    "0040d040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d040(uint arg_8h)\n\n{\n    fcn.0040cf00(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040ee59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ee6d)\n// WARNING: Removing unreachable block (ram,0x0040ee73)\n// WARNING: Removing unreachable block (ram,0x0040ee75)\n\nvoid fcn.0040ee59(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "0041bb90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bb90(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041ba97(arg_8h, arg_ch, arg_10h, 0x401388);\n    return arg_8h;\n}\n",
        "token_count": 63
    },
    "0041bbb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bbb0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041ba97(arg_8h, arg_ch, arg_10h, 0x4042f8);\n    return arg_8h;\n}\n",
        "token_count": 65
    },
    "0041e3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0041e3d0(void)\n\n{\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    *0x7dc550 = 0x6b;\n    *0x7dc554 = 0x72;\n    uStack136 = 0x7dc550;\n    *0x7dc55c = 0x320033;\n    *0x7dc564 = 0x6c006c;\n    *0x7dc556 = 0x6e;\n    *0x7dc558 = 0x6c0065;\n    *0x7dc560 = 0x64002e;\n    *0x7dc552 = 0x65;\n    *0x7dc568 = 0;\n    uStack140 = 0x41e440;\n    *0x7dc54c = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    uStack104 = 0x605fdad6;\n    uStack48 = 0x3e1d73b5;\n    uStack116 = 0x748a784f;\n    uStack32 = 0x406ee06d;\n    uStack40 = 0x792cf4fa;\n    uStack28 = 0x1681d686;\n    uStack132 = 0x7f744a26;\n    uStack92 = 0x108aa678;\n    uStack64 = 0x2e8d3777;\n    uStack52 = 0x14922f4a;\n    uStack88 = 0x7cab3473;\n    uStack72 = 0x6cac10f2;\n    uStack12 = 0x51eed42d;\n    uStack96 = 0x71cc1e05;\n    uStack16 = 0x17a9a17f;\n    uStack36 = 0xb5fde22;\n    uStack44 = 0x22efe4df;\n    uStack20 = 0xee8079d;\n    uStack60 = 0x2783b42c;\n    uStack120 = 0x77340acd;\n    uStack24 = 0x249a0894;\n    uStack100 = 0x7ded3f3b;\n    uStack124 = 0xd271138d;\n    uStack84 = 0x6df36692;\n    uStack8 = 0x6ce68e74;\n    uStack128 = 0x68f0afd9;\n    uStack112 = 0x1b7f9e8e;\n    uStack80 = 0xd4344e33;\n    uStack76 = 0x9be5cfa;\n    uStack68 = 0x12698b6f;\n    uStack56 = 0xc67ffdbb;\n    uStack108 = 0xfc4e5034;\n    uStack140 = 0x43c438;\n    *0x43c443 = 0x65;\n    *0x43c439 = 0x75747269;\n    *0x43c43d = 0x6c61;\n    *0x43c438 = 0x56;\n    *0x43c444 = 0x7463;\n    *0x43c446 = 0;\n    *0x43c43f = 0x746f7250;\n    uStack144 = *0x7dc54c;\n    *0x43c434 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    (**0x43c434)(*0x7d95a0, *0x7dd130, 0x40, &stack0xffffff70);\n    return;\n}\n",
        "token_count": 1013
    },
    "0041e870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e870(void)\n\n{\n    *0x7d95a0 = *0x7d95a0 + 0x4af3;\n    return;\n}\n",
        "token_count": 42
    },
    "0041e890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e890(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.0041da70();\n    if (*0x7dd130 == 0x37) {\n        (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n        (*_sym.imp.KERNEL32.dll_GetNamedPipeHandleStateA)();\n        (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntW)();\n        (*_sym.imp.KERNEL32.dll_SetTapePosition)();\n        (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointW)();\n    }\n    *(*0x7d95a0 + unaff_ESI) = *(*0x7dd134 + 0x38d6 + unaff_ESI);\n    return;\n}\n",
        "token_count": 215
    },
    "0041e9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e9b0(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + 0x61c88647;\n    return;\n}\n",
        "token_count": 47
    },
    "0041fbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0041fbc0(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    iVar2 = -1;\n    do {\n        pcVar4 = arg_8h;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar4 = arg_8h + 1;\n        cVar1 = *arg_8h;\n        arg_8h = pcVar4;\n    } while (cVar1 != '\\0');\n    iVar2 = -(iVar2 + 1);\n    pcVar4 = pcVar4 + -1;\n    do {\n        pcVar3 = pcVar4;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar3 = pcVar4 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar3;\n    } while (arg_ch != cVar1);\n    pcVar3 = pcVar3 + 1;\n    if (*pcVar3 != arg_ch) {\n        pcVar3 = NULL;\n    }\n    return pcVar3;\n}\n",
        "token_count": 276
    },
    "0041fc95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fc95(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041fbed(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "0041fe14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fe14(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041fd6c(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "004071f0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004071f0(void)\n\n{\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x10) = unaff_ESI + 8;\n    *(unaff_ESI + 0x14) = unaff_ESI + 0xc;\n    *(unaff_ESI + 0x20) = unaff_ESI + 0x18;\n    *(unaff_ESI + 0x24) = unaff_ESI + 0x1c;\n    *(unaff_ESI + 0x30) = unaff_ESI + 0x28;\n    *(unaff_ESI + 0x34) = unaff_ESI + 0x2c;\n    fcn.00406f10();\n    fcn.00406ea0();\n    return;\n}\n",
        "token_count": 181
    },
    "0040bca9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bca9(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00408dbc(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0041e1d5": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041e1d5(void)\n\n{\n    *0x4270e0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x4042e4, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 68
    },
    "004076bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.004076bd(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        param_2 = (param_3 - 4) + param_2;\n        puVar18 = (param_3 - 4) + param_1;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = param_3 >> 2;\n            if (uVar16 < 8) goto code_r0x00409db8;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + -1;\n                puVar18 = puVar18 + -1;\n            }\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x00409ef4;\n            case 2:\n                goto code_r0x00409f04;\n            case 3:\n                goto code_r0x00409f18;\n            }\n        }\n        else {\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x00409ef4:\n                *(puVar18 + 3) = *(param_2 + 3);\n                return param_1;\n            case 2:\ncode_r0x00409f04:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                return param_1;\n            case 3:\ncode_r0x00409f18:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                *(puVar18 + 1) = *(param_2 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar18 & 3);\n                switch(puVar18 & 3) {\n                case 1:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    param_2 = param_2 + -1;\n                    uVar16 = param_3 >> 2;\n                    puVar18 = puVar18 - 1;\n                    if (uVar16 < 8) {\ncode_r0x00409db8:\n    // WARNING: Could not recover jumptable at 0x00409dba. Too many branches\n    // WARNING: Treating indirect jump as call\n                        puVar18 = (**(uVar16 * -4 + 0x409e8c))();\n                        return puVar18;\n                    }\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00409ef4;\n                    case 2:\n                        goto code_r0x00409f04;\n                    case 3:\n                        goto code_r0x00409f18;\n                    }\n                    break;\n                case 2:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + -2;\n                    puVar18 = puVar18 - 2;\n                    if (uVar16 < 8) goto code_r0x00409db8;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00409ef4;\n                    case 2:\n                        goto code_r0x00409f04;\n                    case 3:\n                        goto code_r0x00409f18;\n                    }\n                    break;\n                case 3:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + -3;\n                    puVar18 = puVar18 - 3;\n                    if (uVar16 < 8) goto code_r0x00409db8;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00409ef4;\n                    case 2:\n                        goto code_r0x00409f04;\n                    case 3:\n                        goto code_r0x00409f18;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    if (((0x7f < param_3) && (*0x7dd14c != 0)) && ((param_1 & 0xf) == (param_2 & 0xf))) {\n        puVar18 = param_1;\n        if ((param_2 & 0xf) != 0) {\n            uVar17 = 0x10 - (param_2 & 0xf);\n            param_3 = param_3 - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = param_3 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = param_2[1];\n            uVar2 = param_2[2];\n            uVar3 = param_2[3];\n            uVar4 = param_2[4];\n            uVar5 = param_2[5];\n            uVar6 = param_2[6];\n            uVar7 = param_2[7];\n            uVar8 = param_2[8];\n            uVar9 = param_2[9];\n            uVar10 = param_2[10];\n            uVar11 = param_2[0xb];\n            uVar12 = param_2[0xc];\n            uVar13 = param_2[0xd];\n            uVar14 = param_2[0xe];\n            uVar15 = param_2[0xf];\n            *puVar18 = *param_2;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = param_2[0x11];\n            uVar2 = param_2[0x12];\n            uVar3 = param_2[0x13];\n            uVar4 = param_2[0x14];\n            uVar5 = param_2[0x15];\n            uVar6 = param_2[0x16];\n            uVar7 = param_2[0x17];\n            uVar8 = param_2[0x18];\n            uVar9 = param_2[0x19];\n            uVar10 = param_2[0x1a];\n            uVar11 = param_2[0x1b];\n            uVar12 = param_2[0x1c];\n            uVar13 = param_2[0x1d];\n            uVar14 = param_2[0x1e];\n            uVar15 = param_2[0x1f];\n            puVar18[0x10] = param_2[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            param_2 = param_2 + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((param_3 & 0x7f) != 0) {\n            for (uVar16 = (param_3 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = param_2[1];\n                uVar2 = param_2[2];\n                uVar3 = param_2[3];\n                *puVar18 = *param_2;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                param_2 = param_2 + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((param_3 & 0xf) != 0) {\n                for (uVar16 = (param_3 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar18 = param_1;\n    if ((param_1 & 3) == 0) {\n        uVar17 = param_3 >> 2;\n        if (uVar17 < 8) goto code_r0x00409c50;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *param_2;\n            param_2 = param_2 + 1;\n            puVar18 = puVar18 + 1;\n        }\n        switch(param_3 & 3) {\n        case 1:\n            goto code_r0x00409d58;\n        case 2:\n            goto code_r0x00409d64;\n        case 3:\n            goto code_r0x00409d78;\n        }\n    }\n    else {\n        switch(param_3) {\n        case 0:\n            break;\n        case 1:\ncode_r0x00409d58:\n            *puVar18 = *param_2;\n            return param_1;\n        case 2:\ncode_r0x00409d64:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            return param_1;\n        case 3:\ncode_r0x00409d78:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            *(puVar18 + 2) = *(param_2 + 2);\n            return param_1;\n        default:\n            uVar16 = (param_3 - 4) + (param_1 & 3);\n            switch(param_1 & 3) {\n            case 1:\n                *param_1 = *param_2;\n                *(param_1 + 1) = *(param_2 + 1);\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 2) = *(param_2 + 2);\n                param_2 = param_2 + 3;\n                puVar18 = param_1 + 3;\n                if (uVar17 < 8) {\ncode_r0x00409c50:\n    // WARNING: Could not recover jumptable at 0x00409c50. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar18 = (**(uVar17 * 4 + 0x409cd4))();\n                    return puVar18;\n                }\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00409d58;\n                case 2:\n                    goto code_r0x00409d64;\n                case 3:\n                    goto code_r0x00409d78;\n                }\n                break;\n            case 2:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 1) = *(param_2 + 1);\n                param_2 = param_2 + 2;\n                puVar18 = param_1 + 2;\n                if (uVar17 < 8) goto code_r0x00409c50;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00409d58;\n                case 2:\n                    goto code_r0x00409d64;\n                case 3:\n                    goto code_r0x00409d78;\n                }\n                break;\n            case 3:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                param_2 = param_2 + 1;\n                puVar18 = param_1 + 1;\n                if (uVar17 < 8) goto code_r0x00409c50;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00409d58;\n                case 2:\n                    goto code_r0x00409d64;\n                case 3:\n                    goto code_r0x00409d78;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 3856
    },
    "004076c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.004076c8(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        param_2 = (param_3 - 4) + param_2;\n        puVar18 = (param_3 - 4) + param_1;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = param_3 >> 2;\n            if (uVar16 < 8) goto code_r0x0040a128;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + -1;\n                puVar18 = puVar18 + -1;\n            }\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x0040a264;\n            case 2:\n                goto code_r0x0040a274;\n            case 3:\n                goto code_r0x0040a288;\n            }\n        }\n        else {\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x0040a264:\n                *(puVar18 + 3) = *(param_2 + 3);\n                return param_1;\n            case 2:\ncode_r0x0040a274:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                return param_1;\n            case 3:\ncode_r0x0040a288:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                *(puVar18 + 1) = *(param_2 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar18 & 3);\n                switch(puVar18 & 3) {\n                case 1:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    param_2 = param_2 + -1;\n                    uVar16 = param_3 >> 2;\n                    puVar18 = puVar18 - 1;\n                    if (uVar16 < 8) {\ncode_r0x0040a128:\n    // WARNING: Could not recover jumptable at 0x0040a12a. Too many branches\n    // WARNING: Treating indirect jump as call\n                        puVar18 = (**(uVar16 * -4 + 0x40a1fc))();\n                        return puVar18;\n                    }\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040a264;\n                    case 2:\n                        goto code_r0x0040a274;\n                    case 3:\n                        goto code_r0x0040a288;\n                    }\n                    break;\n                case 2:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + -2;\n                    puVar18 = puVar18 - 2;\n                    if (uVar16 < 8) goto code_r0x0040a128;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040a264;\n                    case 2:\n                        goto code_r0x0040a274;\n                    case 3:\n                        goto code_r0x0040a288;\n                    }\n                    break;\n                case 3:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + -3;\n                    puVar18 = puVar18 - 3;\n                    if (uVar16 < 8) goto code_r0x0040a128;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040a264;\n                    case 2:\n                        goto code_r0x0040a274;\n                    case 3:\n                        goto code_r0x0040a288;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    if (((0x7f < param_3) && (*0x7dd14c != 0)) && ((param_1 & 0xf) == (param_2 & 0xf))) {\n        puVar18 = param_1;\n        if ((param_2 & 0xf) != 0) {\n            uVar17 = 0x10 - (param_2 & 0xf);\n            param_3 = param_3 - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = param_3 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = param_2[1];\n            uVar2 = param_2[2];\n            uVar3 = param_2[3];\n            uVar4 = param_2[4];\n            uVar5 = param_2[5];\n            uVar6 = param_2[6];\n            uVar7 = param_2[7];\n            uVar8 = param_2[8];\n            uVar9 = param_2[9];\n            uVar10 = param_2[10];\n            uVar11 = param_2[0xb];\n            uVar12 = param_2[0xc];\n            uVar13 = param_2[0xd];\n            uVar14 = param_2[0xe];\n            uVar15 = param_2[0xf];\n            *puVar18 = *param_2;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = param_2[0x11];\n            uVar2 = param_2[0x12];\n            uVar3 = param_2[0x13];\n            uVar4 = param_2[0x14];\n            uVar5 = param_2[0x15];\n            uVar6 = param_2[0x16];\n            uVar7 = param_2[0x17];\n            uVar8 = param_2[0x18];\n            uVar9 = param_2[0x19];\n            uVar10 = param_2[0x1a];\n            uVar11 = param_2[0x1b];\n            uVar12 = param_2[0x1c];\n            uVar13 = param_2[0x1d];\n            uVar14 = param_2[0x1e];\n            uVar15 = param_2[0x1f];\n            puVar18[0x10] = param_2[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            param_2 = param_2 + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((param_3 & 0x7f) != 0) {\n            for (uVar16 = (param_3 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = param_2[1];\n                uVar2 = param_2[2];\n                uVar3 = param_2[3];\n                *puVar18 = *param_2;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                param_2 = param_2 + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((param_3 & 0xf) != 0) {\n                for (uVar16 = (param_3 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar18 = param_1;\n    if ((param_1 & 3) == 0) {\n        uVar17 = param_3 >> 2;\n        if (uVar17 < 8) goto code_r0x00409fc0;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *param_2;\n            param_2 = param_2 + 1;\n            puVar18 = puVar18 + 1;\n        }\n        switch(param_3 & 3) {\n        case 1:\n            goto code_r0x0040a0c8;\n        case 2:\n            goto code_r0x0040a0d4;\n        case 3:\n            goto code_r0x0040a0e8;\n        }\n    }\n    else {\n        switch(param_3) {\n        case 0:\n            break;\n        case 1:\ncode_r0x0040a0c8:\n            *puVar18 = *param_2;\n            return param_1;\n        case 2:\ncode_r0x0040a0d4:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            return param_1;\n        case 3:\ncode_r0x0040a0e8:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            *(puVar18 + 2) = *(param_2 + 2);\n            return param_1;\n        default:\n            uVar16 = (param_3 - 4) + (param_1 & 3);\n            switch(param_1 & 3) {\n            case 1:\n                *param_1 = *param_2;\n                *(param_1 + 1) = *(param_2 + 1);\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 2) = *(param_2 + 2);\n                param_2 = param_2 + 3;\n                puVar18 = param_1 + 3;\n                if (uVar17 < 8) {\ncode_r0x00409fc0:\n    // WARNING: Could not recover jumptable at 0x00409fc0. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar18 = (**(uVar17 * 4 + 0x40a044))();\n                    return puVar18;\n                }\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x0040a0c8;\n                case 2:\n                    goto code_r0x0040a0d4;\n                case 3:\n                    goto code_r0x0040a0e8;\n                }\n                break;\n            case 2:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 1) = *(param_2 + 1);\n                param_2 = param_2 + 2;\n                puVar18 = param_1 + 2;\n                if (uVar17 < 8) goto code_r0x00409fc0;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x0040a0c8;\n                case 2:\n                    goto code_r0x0040a0d4;\n                case 3:\n                    goto code_r0x0040a0e8;\n                }\n                break;\n            case 3:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                param_2 = param_2 + 1;\n                puVar18 = param_1 + 1;\n                if (uVar17 < 8) goto code_r0x00409fc0;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x0040a0c8;\n                case 2:\n                    goto code_r0x0040a0d4;\n                case 3:\n                    goto code_r0x0040a0e8;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 3889
    },
    "0040dbac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040dbac(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040d370(0x424a40, 0xc);\n    fcn.00411f48(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x43bddc;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x43bdd8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040dbf0;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00408dbc(arg_8h_00);\ncode_r0x0040dbf0:\n        fcn.00408dbc(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040dc13();\n    fcn.0040d3b5();\n    return;\n}\n",
        "token_count": 399
    },
    "00408f09": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408f09(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.004095cb(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "00408f39": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.00408f39(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.004095cb(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 117
    }
}