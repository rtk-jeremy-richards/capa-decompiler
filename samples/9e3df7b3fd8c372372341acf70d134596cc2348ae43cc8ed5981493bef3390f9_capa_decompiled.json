{
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00a56710": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00a56710(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "009a6221": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.009a6221(void)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (0xb62fefU >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00ed0de5": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00a0d6fd)\n\nvoid fcn.00ed0de5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    uint32_t unaff_EBX;\n    uint32_t uVar4;\n    \n    uVar3 = CONCAT31(unaff_EBX >> 8, 0x86);\n    uVar3 = (unaff_EBX & 0xffff0000 | uVar3 >> 6 | uVar3 << 10) >> 4;\n    iVar2 = 0xf;\n    if (uVar3 != 0) {\n        for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    uVar4 = -(-0x375276c3 - param_1) - 1;\n    iVar1 = 0;\n    if (uVar4 != 0) {\n        for (; (uVar4 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    uVar4 = *(-(-0x375276c3 - param_1) + -5) ^ uVar4;\n    uVar4 = (-uVar4 >> 2 | uVar4 * -0x40000000) - 1;\n    // WARNING: Could not recover jumptable at 0x00ede0c4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(0xa0d6eb - ((uVar4 >> 1 | ((uVar4 & 1) != 0) << 0x1f) + 0xc2669070)))();\n    return;\n}\n",
        "token_count": 389
    },
    "00fc14d3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.00fc14d3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint8_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint16_t unaff_BX;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t unaff_EDI;\n    uint8_t in_CF;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uchar auStack36 [4];\n    \n    uVar9 = param_1 + 2U & 0xffff0000 | CONCAT11(SCARRY4(in_EAX + 1, 1) == in_EAX + 2 < 0, param_1 + 2U);\n    uVar7 = auStack36 & 0xffff0000 | *0x10 - 0x23;\n    *(uVar7 - 4) = uVar9 + 3;\n    *(uVar7 - 8) = ~(&stack0xfffffff8 & 0xffff) & 0xffff;\n    *(uVar7 - 0xb) = unaff_EDI;\n    *(uVar7 - 0xf) =\n         (in_NT & 1) * 0x4000 | SBORROW4(uVar9 + 4, 1) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n         (uVar9 + 3 < 0) * 0x80 | (0 < (~(&stack0xfffffff8 & 0xffff) & 3) - (unaff_BX & 3)) * 0x40 | (in_AF & 1) * 0x10\n         | ((POPCOUNT(uVar9 + 3 & 0xff) & 1U) == 0) * 4 | in_CF & 1 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 |\n         (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *(uVar7 - 0x13) = in_EAX + 3;\n    *(uVar7 - 0x17) = uVar9 + 4;\n    *(uVar7 - 0x1c) = unaff_EDI;\n    *(uVar7 - 0x20) = 0xff496ba1;\n    uVar9 = -*(uVar7 + 0x6f);\n    uVar10 = uVar9 + 0x10b25e6e;\n    uVar11 = -((~(~(uVar10 & 0xffff0000 |\n                   uVar10 + (0xef4da191 < uVar9) *\n                            (((in_EAX + 3 + 1U | 1 << (unaff_EDI & 0x1f)) - 1 & 3) - (uVar10 & 3))) + 1) ^ 0x7d611005) +\n              0xa6cf8a48);\n    uVar9 = CONCAT11(-0x43 - (0xef4da191 < uVar9), in_EAX + '\\x02') | 0xff490000 | 1 << (uVar11 & 0x1f);\n    uVar2 = uVar10 + 1U & 0x1f;\n    uVar9 = uVar9 >> uVar2 | uVar9 << 0x20 - uVar2;\n    iVar1 = uVar11 + 0x8602eed + uVar9;\n    uVar11 = (uVar9 & ~(1 << (uVar7 - 0x21 & 0x1f))) + 1;\n    puVar6 = uVar7 - 0x160 & 0xffff0000 | *0x10 - 0x18e;\n    uVar8 = iVar1 - (uVar11 & 0xff4d1d4f);\n    uVar9 = *(iVar1 + -4) ^ uVar8;\n    uVar10 = (uVar9 >> 1 | ((uVar9 & 1) != 0) << 0x1f) + 1 ^ 0x4cb71b6b;\n    uVar9 = uVar10 << 3;\n    uVar3 = uVar9 | uVar10 >> 0x1d;\n    *puVar6 = uVar8;\n    cVar4 = uVar9 >> 8;\n    uVar10 = CONCAT11(CONCAT11((uVar10 >> 0x1d & 1) != 0, cVar4) >> 6 | cVar4 << 3, uVar3);\n    *(puVar6 + 1) = *(puVar6 + 1) ^ (uVar9 & 0xffff0000 | uVar10);\n    uVar5 = uVar10 >> 8;\n    uVar2 = uVar5 >> 5;\n    *(puVar6 + 1) =\n         ((uVar11 & 0x8d4c0000 | (uVar11 & 0xd) + 1) - 2) +\n         (uVar9 & 0xffff0000 | CONCAT11(uVar5 << 3 | uVar2, uVar3) + ((uVar2 & 1) != 0) * ((uVar3 & 3) - (uVar3 & 3)));\n    return (in_EAX - 1U & 0xffff0000 | (in_EAX - 1U) + 1) + 2;\n}\n",
        "token_count": 1372
    },
    "00fbfcad": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00fbfcad(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar *unaff_EBP;\n    uchar *puVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    if (unaff_EBP <= &stack0x00000060) {\n        uVar3 = unaff_EBP + -0x80 & 0xfffffffc;\n        puVar2 = uVar3 - 0x40;\n        *(uVar3 - 0x44) = unaff_EDI;\n        *(uVar3 - 0x48) = unaff_ESI;\n        *(uVar3 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar3, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar2 < 0) * 0x80 | (puVar2 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar2 & 0xff) & 1U) == 0) * 4 | uVar3 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar4 = *0x10;\n        for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 511
    },
    "00b7f336": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.00b7f336(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uchar *puVar4;\n    uint32_t *unaff_ESI;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t unaff_EDI;\n    uint8_t in_CF;\n    uint8_t in_PF;\n    uint8_t in_AF;\n    uint8_t in_ZF;\n    uint8_t in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    unaff_ESI[1] = param_2;\n    unaff_ESI[2] = in_EAX;\n    *unaff_ESI = (in_NT & 1) * 0x4000 | (in_OF & 1) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                 (in_SF & 1) * 0x80 | (in_ZF & 1) * 0x40 | (in_AF & 1) * 0x10 | (in_PF & 1) * 4 | in_CF & 1 |\n                 (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    uVar1 = (*(unaff_EBP + -4) ^ unaff_EBX) + 0x3e02571a;\n    UNRECOVERED_JUMPTABLE = unaff_EDI - ((uVar1 >> 1 | ((uVar1 & 1) != 0) << 0x1f) ^ 0x56524dea);\n    if (unaff_ESI <= &stack0x00000060) {\n        uVar1 = unaff_ESI + -0x20 & 0xfffffffc;\n        puVar3 = uVar1 - 0x40;\n        *(uVar1 - 0x44) = UNRECOVERED_JUMPTABLE;\n        *(uVar1 - 0x48) = unaff_ESI;\n        *(uVar1 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar1, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar3 < 0) * 0x80 | (puVar3 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar3 & 0xff) & 1U) == 0) * 4 | uVar1 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar4 = *0x10;\n        for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        UNRECOVERED_JUMPTABLE = *(uVar1 - 0x44);\n    }\n    // WARNING: Could not recover jumptable at 0x00b7a3d8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 967
    },
    "00b318c9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00b318c9(void)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_ESI;\n    uint unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    if (unaff_ESI <= &stack0x00000060) {\n        uVar1 = unaff_ESI + -0x80 & 0xfffffffc;\n        puVar2 = uVar1 - 0x40;\n        *(uVar1 - 0x44) = unaff_EDI;\n        *(uVar1 - 0x48) = unaff_ESI;\n        *(uVar1 - 0x4c) =\n             (in_NT & 1) * 0x4000 | SBORROW4(uVar1, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (puVar2 < 0) * 0x80 | (puVar2 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n             ((POPCOUNT(puVar2 & 0xff) & 1U) == 0) * 4 | uVar1 < 0x40 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n             | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n        puVar4 = *0x10;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "00b54b3d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00b54c6c) overlaps instruction at (ram,0x00b54c6b)\n// \n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: This function may have set the stack pointer\n\nuchar * __fastcall fcn.00b54b3d(int32_t param_1, uint32_t param_2)\n\n{\n    char *pcVar1;\n    float *pfVar2;\n    uint32_t uVar3;\n    char cVar4;\n    code *pcVar5;\n    uint8_t uVar6;\n    int32_t in_EAX;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar9;\n    uchar extraout_DL;\n    char cVar13;\n    ushort uVar10;\n    uchar *puVar11;\n    uint32_t uVar12;\n    int32_t extraout_EDX;\n    uint32_t unaff_EBX;\n    uchar *unaff_EBP;\n    uchar *puVar14;\n    uint32_t unaff_ESI;\n    int32_t *piVar15;\n    uint32_t *UNRECOVERED_JUMPTABLE;\n    uchar *puVar16;\n    bool bVar17;\n    uchar uVar18;\n    uint8_t in_AF;\n    bool bVar19;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t uVar20;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar21;\n    uint8_t auStack116 [72];\n    uint32_t *puStack44;\n    uint32_t uStack40;\n    uint32_t *puVar22;\n    int32_t *piStack32;\n    \n    piVar15 = unaff_ESI & *UNRECOVERED_JUMPTABLE;\n    if (piVar15 == NULL) {\n        puVar16 = UNRECOVERED_JUMPTABLE & *(param_2 + 0xcfbf7301);\n        uVar20 = 9 < (_pe_dos_header & 0xf) | in_AF;\n        uVar18 = in(CONCAT11((param_2 >> 8) -\n                             *(((_pe_dos_header & 0xffff0000 |\n                                CONCAT11((_pe_dos_header >> 8) - uVar20, _pe_dos_header + uVar20 * -6) & 0xff0f) + 1) *\n                               9 + -0x80), param_2));\n        *puVar16 = uVar18;\n    // WARNING: Could not recover jumptable at 0x00b54b63. Too many branches\n    // WARNING: Treating indirect jump as call\n        puVar16 = (**(puVar16 + ((param_2 & 0x400) != 0) * -2 + 1))();\n        return puVar16;\n    }\n    piStack32 = piVar15;\n    if (in_EAX < 1) {\n        uVar12 = in_EAX + -1 + *piVar15;\n        puVar16 = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 * 0x1000000;\n        if (unaff_EBP <= &stack0x0000003c) {\n            uVar12 = unaff_EBP + -0x80 & 0xfffffffc;\n            puVar11 = uVar12 - 0x40;\n            *(uVar12 - 0x44) = UNRECOVERED_JUMPTABLE + puVar16;\n            *(uVar12 - 0x48) = piVar15;\n            *(uVar12 - 0x4c) =\n                 (in_NT & 1) * 0x4000 | SBORROW4(uVar12, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                 (puVar11 < 0) * 0x80 | (puVar11 == NULL) * 0x40 | (in_AF & 1) * 0x10 |\n                 ((POPCOUNT(puVar11 & 0xff) & 1U) == 0) * 4 | uVar12 < 0x40 | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n            puVar14 = &stack0xffffffdc;\n            for (iVar9 = 0x40; puVar16 = &stack0xffffffdc,  iVar9 != 0; iVar9 = iVar9 + -1) {\n                *puVar11 = *puVar14;\n                puVar14 = puVar14 + 1;\n                puVar11 = puVar11 + 1;\n            }\n        }\n        return puVar16;\n    }\n    puVar22 = param_2 + 0xf85e676c;\n    uVar12 = *puVar22;\n    *puVar22 = *puVar22 - 1;\n    uStack40 = (in_NT & 1) * 0x4000 | SBORROW4(uVar12, 1) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n               (*puVar22 < 0) * 0x80 | (*puVar22 == 0) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(*puVar22 & 0xff) & 1U) == 0) * 4 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 |\n               (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    puVar22 = param_1 + -0x9c92b5;\n    bVar17 = false;\n    uVar20 = 0;\n    *puVar22 = *puVar22 | unaff_EBP;\n    bVar19 = *puVar22 == 0;\n    uVar18 = (POPCOUNT(*puVar22 & 0xff) & 1U) == 0;\n    if (!uVar18) {\n        pcVar5 = swi(0x6a);\n        (*pcVar5)();\n        (&stack0xffffff8c)[extraout_EDX] = (&stack0xffffff8c)[extraout_EDX] ^ piVar15 >> 8;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puStack44 = 0xb54c06;\n    puVar22 = UNRECOVERED_JUMPTABLE;\n    uVar21 = func_0x54a309f5();\n    puVar16 = uVar21;\n    pfVar2 = unaff_EBX + 0x185799e4;\n    uVar10 = uVar21 >> 0x20;\n    if (bVar17 || bVar19) {\n        UNRECOVERED_JUMPTABLE = UNRECOVERED_JUMPTABLE + 1;\n        bVar19 = CARRY1(unaff_EBX >> 8, extraout_ECX >> 8);\n        unaff_EBX = unaff_EBX & 0xffff00ff;\n        uVar20 = uVar21;\n        bVar17 = CARRY1(uVar20 - 0x18, bVar19);\n        uVar6 = (uVar20 - 0x18) + bVar19;\n        uVar12 = puVar16 & 0xffffff00 | uVar6;\n        if ((0x17 >= uVar20 && !bVar17) && uVar6 != 0) {\n            uVar20 = 9 < (uVar6 & 0xf) | in_AF;\n            *((puVar16 & 0xffff0000 | CONCAT11((uVar21 >> 8) - uVar20, uVar6 + uVar20 * -6) & 0xff0f) - 0x55) = *pfVar2;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        in_IF = 0;\n        uVar3 = 0x17 < uVar20 || bVar17;\n        uVar7 = uVar12 + 0xe813b4ee;\n        bVar17 = 0x17ec4b11 < uVar12 || CARRY4(uVar7, uVar3);\n        uVar7 = uVar7 + uVar3;\n        out(uVar10, uVar7);\n        unaff_EBP = 0x83d953ed;\n        uVar20 = in(0x99);\n        puVar16 = uVar7 & 0xffffff00 | uVar20;\n        pcVar1 = piVar15 + -0x1d;\n        cVar13 = uVar21 >> 0x28;\n        cVar4 = *pcVar1 - cVar13;\n        uVar20 = SBORROW1(*pcVar1, cVar13) != SBORROW1(cVar4, bVar17);\n        *pcVar1 = cVar4 - bVar17;\n        uVar18 = (POPCOUNT(*pcVar1) & 1U) == 0;\n        puStack44 = UNRECOVERED_JUMPTABLE;\n    }\n    if (uVar18) {\n        uVar12 = unaff_EBX & 0xffff0000 | CONCAT11(0x7f, unaff_EBX);\n        iVar9 = *0xfadd69c6 << 0x15;\n        bVar17 = *0xfadd69c6 << 0x14 < 0;\n        out(uVar10, 0x79);\n        *0xfadd69c6 = iVar9;\n        *(extraout_ECX + 6) = puVar22;\n        if ((uVar20 & 1) == iVar9 < 0) {\n            if (iVar9 == 0) {\n    // WARNING: Could not recover jumptable at 0x00adc283. Too many branches\n    // WARNING: Treating indirect jump as call\n                puVar16 = (*UNRECOVERED_JUMPTABLE)();\n                return puVar16;\n            }\n            *UNRECOVERED_JUMPTABLE = CONCAT13(*0x9aef941c, CONCAT12(*0x9aef941b, CONCAT11(*0x9aef941a, *0x9aef9419)));\n            pcVar5 = swi(3);\n            puVar16 = (*pcVar5)();\n            return puVar16;\n        }\n        uVar8 = (*(uVar21 >> 0x20))();\n        uVar20 = uVar8;\n        if (extraout_ECX_00 != 1) {\n            if (bVar17) {\n                *(*0xc2f76627 + 1) = extraout_DL;\n                uVar12 = (0xf1c3b00b - (UNRECOVERED_JUMPTABLE[-1] ^ uVar12) ^ 0x3eef584b) - 1;\n                return (uVar12 >> 1 | ((uVar12 & 1) != 0) << 0x1f) - 1;\n            }\n            puVar16 = CONCAT31(uVar8 >> 8 & 0xffff00 | uVar20 / 0xe8, 0x66);\n            uVar6 = *0x9aef941b & 0x1f;\n            *0x9aef941b = *0x9aef9419 << uVar6;\n            bVar19 = uVar6 != 0 && *0x9aef9419 << uVar6 - 1 < '\\0';\n            bVar17 = uVar6 != 0;\n            *0x9aef941c = 0;\n            *0x9aef9417 = (in_NT & 1) * 0x4000 | (uVar6 == 1 && bVar19 != *0x9aef941b < '\\0') * 0x800 |\n                          (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (bVar17 && *0x9aef941b < '\\0') * 0x80 |\n                          (!bVar17 && (uVar20 % 0xe8 & 0x65) == 0 || bVar17 && *0x9aef941b == '\\0') * 0x40 |\n                          (in_AF & 1) * 0x10 |\n                          (!bVar17 && (POPCOUNT(uVar20 % 0xe8 & 0x65) & 1U) == 0 ||\n                          bVar17 && (POPCOUNT(*0x9aef941b) & 1U) == 0) * 4 | bVar19;\n            *0x9aef9419 = (in_ID & 1) * 0x200000 >> 0x10 | (in_VIP & 1) * 0x100000 >> 0x10 |\n                          (in_VIF & 1) * 0x80000 >> 0x10 | (in_AC & 1) * 0x40000 >> 0x10;\n            *0x9aef941a = 0;\n            uVar12 = ~((*(unaff_EBP + -4) ^ uVar12) + 0xb7c5aec1);\n            if (0x9aef9416 < &stack0x00000040) {\n                puVar16 = 0x9aef9354;\n                *0x9aef934c = 0x9aef9417;\n                *0x9aef9348 = (in_NT & 1) * 0x4000 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | 0x80 |\n                              (in_AF & 1) * 0x10 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 |\n                              (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n                puVar14 = &stack0xffffffe0;\n                puVar11 = puVar16;\n                *0x9aef9350 = UNRECOVERED_JUMPTABLE +\n                              ((uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18) <<\n                               2 | (uVar12 << 0x18) >> 0x1e);\n                for (iVar9 = 0x40; iVar9 != 0; iVar9 = iVar9 + -1) {\n                    *puVar11 = *puVar14;\n                    puVar14 = puVar14 + 1;\n                    puVar11 = puVar11 + 1;\n                }\n            }\n            return puVar16;\n        }\n        puVar16 = &stack0x00000040;\n        if (unaff_EBP <= &stack0x00000040) {\n            uVar12 = unaff_EBP + -0x80 & 0xfffffffc;\n            puVar11 = uVar12 - 0x40;\n            *(uVar12 - 0x44) = UNRECOVERED_JUMPTABLE;\n            *(uVar12 - 0x48) = 0x9aef9419;\n            *(uVar12 - 0x4c) =\n                 (in_NT & 1) * 0x4000 | SBORROW4(uVar12, 0x40) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                 (puVar11 < 0) * 0x80 | (puVar11 == NULL) * 0x40 | (9 < (uVar20 & 0xf) | in_AF & 1) * 0x10 |\n                 ((POPCOUNT(puVar11 & 0xff) & 1U) == 0) * 4 | uVar12 < 0x40 | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n            puVar14 = &stack0xffffffe0;\n            for (iVar9 = 0x40; puVar16 = &stack0xffffffe0,  iVar9 != 0; iVar9 = iVar9 + -1) {\n                *puVar11 = *puVar14;\n                puVar14 = puVar14 + 1;\n                puVar11 = puVar11 + 1;\n            }\n        }\n        return puVar16;\n    }\n    return puVar16;\n}\n",
        "token_count": 3927
    },
    "009df956": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.009df956(uint8_t *param_1, int32_t *param_2, int32_t param_3, uint32_t *param_4)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int16_t iVar9;\n    uint8_t uVar10;\n    uint *in_EAX;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    uint8_t *puVar18;\n    int32_t iVar19;\n    int32_t iStack68;\n    int32_t iStack60;\n    int32_t iStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint8_t *puStack12;\n    uint8_t uStack5;\n    \n    uVar5 = in_EAX[2];\n    puVar6 = in_EAX[3];\n    uVar4 = in_EAX[1];\n    for (iVar9 = 0xf; 1U >> iVar9 == 0; iVar9 = iVar9 + -1) {\n    }\n    uStack28 = 0;\n    uStack5 = 0;\n    uVar7 = *in_EAX;\n    *param_2 = 0;\n    *param_4 = 0;\n    uVar10 = uVar7;\n    uStack24 = 0;\n    uStack20 = 1;\n    uVar12 = (0x300 << (in_EAX[1] + uVar10 & 0x1f)) + 0x736;\n    uStack44 = 1;\n    uStack40 = 1;\n    uStack48 = 1;\n    if (uVar12 != 0) {\n        iVar17 = 0;\n        if (*0x10 != 0x4) {\n            for (; (&stack0xfffffffc >> iVar17 & 1) == 0; iVar17 = iVar17 + 1) {\n            }\n        }\n        puVar14 = puVar6;\n        for (uVar16 = uVar12 >> 1; uVar16 != 0; uVar16 = uVar16 - 1) {\n            *puVar14 = 0x4000400;\n            puVar14 = puVar14 + 1;\n        }\n        for (uVar12 = (uVar12 & 1) != 0; uVar12 != 0; uVar12 = uVar12 - 1) {\n            *puVar14 = 0x400;\n            puVar14 = puVar14 + 2;\n        }\n    }\n    uVar16 = 0;\n    uVar12 = 0xffffffff;\n    iVar17 = 0;\n    puStack12 = param_1;\n    do {\n        if (puStack12 == param_1 + -1) {\n            return 1;\n        }\n        iVar17 = iVar17 + 1;\n        uVar16 = uVar16 << 8 | *puStack12;\n        puStack12 = puStack12 + 1;\n    } while (iVar17 < 5);\ncode_r0x009d2afc:\n    uVar13 = (1 << (uVar5 & 0x1f)) - 1U & uStack28;\n    puVar1 = puVar6 + (uStack24 * 0x10 + uVar13) * 2;\n    uVar11 = uVar12;\n    if (uVar12 < 0x1000000) {\n        if (puStack12 == param_1 + -1) {\n            return 1;\n        }\n        uVar11 = uVar12 << 8;\n        uVar16 = uVar16 << 8 | *puStack12;\n        puStack12 = puStack12 + 1;\n    }\n    uVar3 = *puVar1;\n    iVar17 = 0;\n    if (puVar6 != NULL) {\n        for (; (puVar6 >> iVar17 & 1) == 0; iVar17 = iVar17 + 1) {\n        }\n    }\n    uVar12 = (uVar11 >> 0xb) * uVar3;\n    if (uVar16 < uVar12) {\n        rdtsc();\n        iVar17 = 1;\n        *puVar1 = (0x800 - uVar3 >> 5) + uVar3;\n        iVar19 = ((uStack5 >> (8 - uVar10 & 0x1f)) + (((1 << (uVar4 & 0x1f)) - 1U & uStack28) << (uVar10 & 0x1f))) *\n                 0x600;\n        iVar2 = iVar19 + 0xe6c;\n        if (uStack24 < 7) goto code_r0x00fa285e;\n        uVar11 = *((uStack28 - uStack20) + param_3);\n        do {\n            uVar11 = uVar11 * 2;\n            puVar1 = puVar6 + ((uVar11 & 0x100) + iVar17) * 2 + iVar19 + 0x106c;\n            if (uVar12 < 0x1000000) {\n                if (puStack12 == param_1 + -1) {\n                    return 1;\n                }\n                uVar12 = uVar12 << 8;\n                uVar16 = uVar16 << 8 | *puStack12;\n                puStack12 = puStack12 + 1;\n            }\n            uVar3 = *puVar1;\n            uVar13 = (uVar12 >> 0xb) * uVar3;\n            if (uVar16 < uVar13) {\n                iVar17 = iVar17 * 2;\n                *puVar1 = (0x800 - uVar3 >> 5) + uVar3;\n                uVar12 = uVar13;\n            }\n            else {\n                uVar16 = uVar16 - uVar13;\n                *puVar1 = uVar3 - (uVar3 >> 5);\n                iVar17 = iVar17 * 2 + 1;\n                uVar12 = uVar12 - uVar13;\n            }\n            if ((uVar11 & 0x100) == 0) goto joined_r0x00fa284e;\n        } while (iVar17 < 0x100);\n        goto code_r0x0099d27f;\n    }\n    uVar11 = uVar11 - uVar12;\n    uVar16 = uVar16 - uVar12;\n    *puVar1 = uVar3 - (uVar3 >> 5);\n    if (uVar11 < 0x1000000) {\n        if (puStack12 == param_1 + -1) {\n            return 1;\n        }\n        uVar11 = uVar11 * 0x100;\n        uVar16 = uVar16 * 0x100 | *puStack12;\n        puStack12 = puStack12 + 1;\n    }\n    uVar3 = *(puVar6 + uStack24 * 2 + 0x180);\n    uVar15 = (uVar11 >> 0xb) * uVar3;\n    if (uVar15 <= uVar16) {\n        uVar11 = uVar11 - uVar15;\n        uVar16 = uVar16 - uVar15;\n        *(puVar6 + uStack24 * 2 + 0x180) = uVar3 - (uVar3 >> 5);\n        if (uVar11 < 0x1000000) {\n            if (puStack12 == param_1 + -1) {\n                return 1;\n            }\n            uVar11 = uVar11 * 0x100;\n            uVar16 = uVar16 * 0x100 | *puStack12;\n            puStack12 = puStack12 + 1;\n        }\n        uVar3 = *(puVar6 + uStack24 * 2 + 0x198);\n        uVar15 = (uVar11 >> 0xb) * uVar3;\n        if (uVar15 <= uVar16) {\n            uVar11 = uVar11 - uVar15;\n            uVar16 = uVar16 - uVar15;\n            *(puVar6 + uStack24 * 2 + 0x198) = uVar3 - (uVar3 >> 5);\n            if (uVar11 < 0x1000000) {\n                if (puStack12 == param_1 + -1) {\n                    return 1;\n                }\n                uVar11 = uVar11 * 0x100;\n                uVar16 = uVar16 * 0x100 | *puStack12;\n                puStack12 = puStack12 + 1;\n            }\n            uVar3 = *(puVar6 + uStack24 * 2 + 0x1b0);\n            uVar15 = (uVar11 >> 0xb) * uVar3;\n            if (uVar16 < uVar15) {\n                *(puVar6 + uStack24 * 2 + 0x1b0) = (0x800 - uVar3 >> 5) + uVar3;\n            }\n            else {\n                uVar11 = uVar11 - uVar15;\n                uVar16 = uVar16 - uVar15;\n                *(puVar6 + uStack24 * 2 + 0x1b0) = uVar3 - (uVar3 >> 5);\n                if (uVar11 < 0x1000000) {\n                    if (puStack12 == param_1 + -1) {\n                        return 1;\n                    }\n                    uVar11 = uVar11 * 0x100;\n                    uVar16 = uVar16 * 0x100 | *puStack12;\n                    puStack12 = puStack12 + 1;\n                }\n                uVar3 = *(puVar6 + uStack24 * 2 + 0x1c8);\n                uVar12 = (uVar11 >> 0xb) * uVar3;\n                if (uVar16 < uVar12) {\n                    *(puVar6 + uStack24 * 2 + 0x1c8) = (0x800 - uVar3 >> 5) + uVar3;\n                    uVar15 = uVar12;\n                }\n                else {\n                    uVar15 = uVar11 - uVar12;\n                    uVar16 = uVar16 - uVar12;\n                    uVar12 = uStack40;\n                    *(puVar6 + uStack24 * 2 + 0x1c8) = uVar3 - (uVar3 >> 5);\n                    uStack40 = uStack48;\n                    uStack48 = uVar12;\n                }\n                uVar12 = uStack44;\n                uStack44 = uStack40;\n                uStack40 = uVar12;\n            }\n            uVar12 = uStack20;\n            uStack20 = uStack44;\ncode_r0x00aca607:\n            uStack44 = uVar12;\n            uStack24 = ((6 < uStack24) - 1 & 0xfffffffd) + 0xb;\n            puVar14 = puVar6 + 0x29a;\n            goto code_r0x00b266d5;\n        }\n        *(puVar6 + uStack24 * 2 + 0x198) = (0x800 - uVar3 >> 5) + uVar3;\n        puVar1 = puVar6 + ((uStack24 + 0xf) * 0x10 + uVar13) * 2;\n        if (uVar15 < 0x1000000) {\n            if (puStack12 == param_1 + -1) {\n                return 1;\n            }\n            uVar15 = uVar15 * 0x100;\n            uVar16 = uVar16 << 8 | *puStack12;\n            puStack12 = puStack12 + 1;\n        }\n        uVar3 = *puVar1;\n        uVar12 = (uVar15 >> 0xb) * uVar3;\n        if (uVar12 <= uVar16) {\n            uVar15 = uVar15 - uVar12;\n            uVar16 = uVar16 - uVar12;\n            *puVar1 = uVar3 - (uVar3 >> 5);\n            uVar12 = uStack44;\n            goto code_r0x00aca607;\n        }\n        *puVar1 = (0x800 - uVar3 >> 5) + uVar3;\n        if (uStack28 == 0) {\n            return 1;\n        }\n        uStack24 = (6 < uStack24) * 2 + 9;\n        uStack5 = *((uStack28 - uStack20) + param_3);\n        *(uStack28 + param_3) = uStack5;\n        goto code_r0x0099d290;\n    }\n    uStack48 = uStack40;\n    *(puVar6 + uStack24 * 2 + 0x180) = (0x800 - uVar3 >> 5) + uVar3;\n    uStack40 = uStack44;\n    uStack24 = (uStack24 < 7) - 1 & 3;\n    puVar14 = puVar6 + 0x199;\n    uStack44 = uStack20;\ncode_r0x00b266d5:\n    if (uVar15 < 0x1000000) {\n        if (puStack12 == param_1 + -1) {\n            return 1;\n        }\n        uVar15 = uVar15 << 8;\n        uVar16 = uVar16 << 8 | *puStack12;\n        puStack12 = puStack12 + 1;\n    }\n    uVar3 = *puVar14;\n    uVar12 = (uVar15 >> 0xb) * uVar3;\n    if (uVar16 < uVar12) {\n        iStack56 = 0;\n        *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n        puVar14 = puVar14 + uVar13 * 4 + 1;\n        iVar17 = 3;\n    }\n    else {\n        uVar15 = uVar15 - uVar12;\n        uVar16 = uVar16 - uVar12;\n        *puVar14 = uVar3 - (uVar3 >> 5);\n        if (uVar15 < 0x1000000) {\n            if (puStack12 == param_1 + -1) {\n                return 1;\n            }\n            uVar15 = uVar15 * 0x100;\n            uVar16 = uVar16 * 0x100 | *puStack12;\n            puStack12 = puStack12 + 1;\n        }\n        uVar3 = *(puVar14 + 2);\n        uVar11 = (uVar15 >> 0xb) * uVar3;\n        if (uVar16 < uVar11) {\n            iStack56 = 8;\n            *(puVar14 + 2) = (0x800 - uVar3 >> 5) + uVar3;\n            puVar14 = puVar14 + uVar13 * 4 + 0x41;\n            iVar17 = 3;\n            uVar12 = uVar11;\n        }\n        else {\n            uVar12 = uVar15 - uVar11;\n            uVar16 = uVar16 - uVar11;\n            *(puVar14 + 2) = uVar3 - (uVar3 >> 5);\n            puVar14 = puVar14 + 0x81;\n            iStack56 = 0x10;\n            iVar17 = 8;\n        }\n    }\n    iVar2 = 0x1f;\n    if (*0x10 != 0x4) {\n        for (; &stack0xfffffffc >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    iStack32 = 1;\n    iStack68 = iVar17;\n    do {\n        iVar2 = iStack32 * 2;\n        if (uVar12 < 0x1000000) {\n            if (puStack12 == param_1 + -1) {\n                return 1;\n            }\n            uVar12 = uVar12 << 8;\n            uVar16 = uVar16 << 8 | *puStack12;\n            puStack12 = puStack12 + 1;\n        }\n        uVar3 = *(iVar2 + puVar14);\n        uVar11 = (uVar12 >> 0xb) * uVar3;\n        if (uVar16 < uVar11) {\n            iStack32 = iStack32 << 1;\n            *(iVar2 + puVar14) = (0x800 - uVar3 >> 5) + uVar3;\n            uVar12 = uVar11;\n        }\n        else {\n            uVar12 = uVar12 - uVar11;\n            uVar16 = uVar16 - uVar11;\n            *(iVar2 + puVar14) = uVar3 - (uVar3 >> 5);\n            iStack32 = iVar2 + 1;\n        }\n        iStack68 = iStack68 + -1;\n    } while (iStack68 != 0);\n    iStack32 = iStack32 + (iStack56 - (1 << iVar17));\n    if (uStack24 < 4) {\n        uStack24 = uStack24 + 7;\n        iVar17 = iStack32;\n        if (3 < iStack32) {\n            iVar17 = 3;\n        }\n        iVar17 = iVar17 * 0x80 + 0x360;\n        iVar2 = 0x1f;\n        if (uStack24 != 0) {\n            for (; uStack24 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        iStack60 = 6;\n        iStack56 = 1;\n        do {\n            iVar2 = iStack56 * 2;\n            if (uVar12 < 0x1000000) {\n                if (puStack12 == param_1 + -1) {\n                    return 1;\n                }\n                uVar12 = uVar12 << 8;\n                uVar16 = uVar16 << 8 | *puStack12;\n                puStack12 = puStack12 + 1;\n            }\n            uVar3 = *(puVar6 + iVar2 + iVar17);\n            uVar11 = (uVar12 >> 0xb) * uVar3;\n            if (uVar16 < uVar11) {\n                iVar19 = 0x1f;\n                if (uStack24 != 0) {\n                    for (; uStack24 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n                    }\n                }\n                *(puVar6 + iVar2 + iVar17) = (0x800 - uVar3 >> 5) + uVar3;\n                iStack56 = iStack56 * 2;\n                uVar12 = uVar11;\n            }\n            else {\n                uVar12 = uVar12 - uVar11;\n                uVar16 = uVar16 - uVar11;\n                *(puVar6 + iVar2 + iVar17) = uVar3 - (uVar3 >> 5);\n                iStack56 = iVar2 + 1;\n            }\n            iStack60 = iStack60 + -1;\n        } while (iStack60 != 0);\n        uVar11 = iStack56 - 0x40;\n        uStack20 = uVar11;\n        if (3 < uVar11) {\n            iStack60 = (uVar11 >> 1) + -1;\n            uStack20 = uVar11 & 1 | 2;\n            if (uVar11 < 0xe) {\n                uStack20 = uStack20 << (iStack60 & 0x1f);\n                puVar14 = puVar6 + (uStack20 - uVar11) * 2 + 0x55e;\n            }\n            else {\n                iVar17 = (uVar11 >> 1) + -5;\n                do {\n                    if (uVar12 < 0x1000000) {\n                        if (puStack12 == param_1 + -1) {\n                            return 1;\n                        }\n                        uVar12 = uVar12 << 8;\n                        uVar16 = uVar16 << 8 | *puStack12;\n                        puStack12 = puStack12 + 1;\n                    }\n                    uVar12 = uVar12 >> 1;\n                    uStack20 = uStack20 * 2;\n                    if (uVar12 <= uVar16) {\n                        uVar16 = uVar16 - uVar12;\n                        uStack20 = uStack20 | 1;\n                    }\n                    iVar17 = iVar17 + -1;\n                } while (iVar17 != 0);\n                puVar14 = puVar6 + 0x191;\n                uStack20 = uStack20 << 4;\n                iStack60 = 4;\n            }\n            uStack52 = 1;\n            iStack56 = 1;\n            do {\n                iVar17 = iStack56 * 2;\n                if (uVar12 < 0x1000000) {\n                    if (puStack12 == param_1 + -1) {\n                        return 1;\n                    }\n                    uVar12 = uVar12 << 8;\n                    uVar16 = uVar16 << 8 | *puStack12;\n                    puStack12 = puStack12 + 1;\n                }\n                uVar3 = *(iVar17 + puVar14);\n                uVar11 = (uVar12 >> 0xb) * uVar3;\n                if (uVar16 < uVar11) {\n                    *(iVar17 + puVar14) = (0x800 - uVar3 >> 5) + uVar3;\n                    iStack56 = iStack56 * 2;\n                    uVar12 = uVar11;\n                }\n                else {\n                    uVar12 = uVar12 - uVar11;\n                    uVar16 = uVar16 - uVar11;\n                    *(iVar17 + puVar14) = uVar3 - (uVar3 >> 5);\n                    iStack56 = iVar17 + 1;\n                    uStack20 = uStack20 | uStack52;\n                }\n                uStack52 = uStack52 << 1;\n                iStack60 = iStack60 + -1;\n            } while (iStack60 != 0);\n        }\n        uStack20 = uStack20 + 1;\n        if (uStack20 == 0) goto code_r0x00aeb427;\n    }\n    iStack32 = iStack32 + 2;\n    if (uStack28 < uStack20) {\n        return 1;\n    }\n    puVar18 = (uStack28 - uStack20) + param_3;\n    while( true ) {\n        uStack5 = *puVar18;\n        iStack32 = iStack32 + -1;\n        *(uStack28 + param_3) = uStack5;\n        uStack28 = uStack28 + 1;\n        puVar18 = puVar18 + 1;\n        if (iStack32 == 0) break;\n        if (uStack28 == 0xffffffff) goto code_r0x00aeb427;\n    }\n    goto code_r0x0099d294;\njoined_r0x00fa284e:\n    while (iVar17 < 0x100) {\ncode_r0x00fa285e:\n        iVar19 = iVar17 * 2;\n        if (uVar12 < 0x1000000) {\n            if (puStack12 == param_1 + -1) {\n                return 1;\n            }\n            uVar12 = uVar12 << 8;\n            uVar16 = uVar16 << 8 | *puStack12;\n            puStack12 = puStack12 + 1;\n        }\n        uVar3 = *(puVar6 + iVar19 + iVar2);\n        uVar13 = uVar3;\n        uVar11 = (uVar12 >> 0xb) * uVar13;\n        if (uVar16 < uVar11) {\n            iVar8 = 0;\n            if (uVar13 != 0) {\n                for (; (uVar3 >> iVar8 & 1) == 0; iVar8 = iVar8 + 1) {\n                }\n            }\n            *(puVar6 + iVar19 + iVar2) = (0x800 - uVar13 >> 5) + uVar3;\n            iVar17 = iVar17 * 2;\n            uVar12 = uVar11;\n        }\n        else {\n            uVar12 = uVar12 - uVar11;\n            uVar16 = uVar16 - uVar11;\n            *(puVar6 + iVar19 + iVar2) = uVar3 - (uVar3 >> 5);\n            iVar17 = iVar19 + 1;\n        }\n    }\ncode_r0x0099d27f:\n    uStack5 = iVar17;\n    *(uStack28 + param_3) = uStack5;\n    if (uStack24 < 4) {\n        uStack24 = 0;\n    }\n    else if (uStack24 < 10) {\n        uStack24 = uStack24 - 3;\n    }\n    else {\n        uStack24 = uStack24 - 6;\n    }\ncode_r0x0099d290:\n    uStack28 = uStack28 + 1;\ncode_r0x0099d294:\n    if (uStack28 == 0xffffffff) {\ncode_r0x00aeb427:\n        if (uVar12 < 0x1000000) {\n            if (puStack12 == param_1 + -1) {\n                return 1;\n            }\n            puStack12 = puStack12 + 1;\n        }\n        *param_2 = puStack12 - param_1;\n        *param_4 = uStack28;\n        return 0;\n    }\n    goto code_r0x009d2afc;\n}\n",
        "token_count": 5848
    },
    "00a2a174": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00a2a174(uint param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    param_2 = param_2 >> 1;\n    if (param_2 < 0xd) {\n        return 0;\n    }\n    uVar2 = 0;\n    if (param_2 != 0) {\n        piVar1 = param_3 + 4;\n        do {\n            if (((((piVar1[-2] == 0x46) && (piVar1[-1] == 0x69)) && (*piVar1 == 0x6c)) &&\n                (((piVar1[1] == 0x65 && (piVar1[2] == 0x56)) &&\n                 ((piVar1[3] == 0x65 && ((piVar1[4] == 0x72 && (piVar1[5] == 0x73)))))))) &&\n               ((piVar1[6] == 0x69 &&\n                ((((piVar1[7] == 0x6f && (piVar1[8] == 0x6e)) && (piVar1[9] == 0)) && (piVar1[10] == 0)))))) {\n                return param_3 + 0x1a + uVar2 * 2;\n            }\n            uVar2 = uVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (uVar2 < param_2);\n    }\n    return 0;\n}\n",
        "token_count": 364
    },
    "00b2306b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00b2306b(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t *in_ECX;\n    uint8_t uVar3;\n    uint var_1h;\n    \n    uVar3 = 0;\n    do {\n        uVar1 = *in_EAX;\n        uVar2 = *in_ECX;\n        in_ECX = in_ECX + 1;\n        in_EAX = in_EAX + 1;\n        if (arg_8h != '\\0') {\n            uVar2 = uVar2 ^ (0x39026e9c << (uVar3 & 0x1f) | 0x39026e9c >> 0x20 - (uVar3 & 0x1f)) + uVar3;\n            uVar3 = uVar3 + 1;\n        }\n    } while ((uVar2 != 0) && (uVar2 == uVar1));\n    if (uVar2 < uVar1) {\n        return 0xffffffff;\n    }\n    return uVar1 < uVar2;\n}\n",
        "token_count": 280
    },
    "009d207a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.009d207a(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "009ab312": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.009ab312(void)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = 0x1f;\n    if ((unaff_EBX & 0xefffffff) != 0) {\n        for (; (unaff_EBX & 0xefffffff) >> iVar1 == 0; iVar1 = iVar1 + -1) {\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00a275c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00a275c0(uint32_t param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    uint unaff_EDI;\n    \n    uVar3 = ~(unaff_EDI >> 0x18 | unaff_EDI >> 8 & 0xff00);\n    iVar1 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    iVar2 = 0x1f;\n    if (param_1 != 0) {\n        for (; param_1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00a5cde6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00a5cde6(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x1f;\n    if (param_2 != 0) {\n        for (; param_2 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n        }\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00ab158a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00ab158a(int16_t param_1, uint16_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBP;\n    uint32_t uVar2;\n    bool in_CF;\n    bool in_PF;\n    \n    uVar2 = CONCAT22(param_1 >> 0xf, 0x2e14);\n    if (in_CF) {\n        uVar2 = unaff_EBP;\n    }\n    if (in_PF) {\n        uVar2 = uVar2 & 0xffff0000;\n    }\n    uVar2 = (uVar2 | in_EAX) & 0xffff0000 | (~param_3 + 0x54316f82 & 0xff00) << 8 | (~param_3 + 0x54316f82) * 0x1000000\n            | 1 << (param_2 & 0xf);\n    iVar1 = 0x1f;\n    if (uVar2 != 0) {\n        for (; uVar2 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n        }\n    }\n    return;\n}\n",
        "token_count": 271
    }
}