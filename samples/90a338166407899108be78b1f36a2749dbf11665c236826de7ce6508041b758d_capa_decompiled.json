{
    "00405732": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405732(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00405801(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00401b50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00401b50(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    int32_t *var_8h;\n    uint var_10h;\n    uint32_t var_2ch;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uchar *puStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x416b30;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puStack20 = &stack0xffffffc0;\n    var_18h = 0;\n    puVar2 = &stack0xffffffc0;\n    if (*(*(*var_8h + 4) + 0x28 + var_8h) != 0) {\n        fcn.00405278();\n        puVar2 = puStack20;\n    }\n    puStack20 = puVar2;\n    if ((*(var_8h + *(*var_8h + 4) + 8) == 0) && (*(var_8h + *(*var_8h + 4) + 0x2c) != 0)) {\n        fcn.00401d30();\n    }\n    if (*(var_8h + *(*var_8h + 4) + 8) == 0) {\n        uVar4 = **(var_8h + *(*var_8h + 4) + 0x24);\n        var_20h = uVar4;\n        fcn.00405003(0);\n        if (*(uVar4 + 4) != -1) {\n            *(uVar4 + 4) = *(uVar4 + 4) + 1;\n        }\n        fcn.0040502b();\n        var_24h = fcn.00404640(&var_20h);\n        fcn.00405003(0);\n        iVar1 = *(uVar4 + 4);\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            *(uVar4 + 4) = iVar1 + -1;\n        }\n        puVar5 = ~-(*(uVar4 + 4) != 0) & uVar4;\n        fcn.0040502b();\n        if (puVar5 != NULL) {\n            (***puVar5)(1);\n        }\n        var_4h = 0;\n        iVar1 = *(*var_8h + 4);\n        var_2ch = var_2ch & 0xffffff00;\n        var_20h = var_20h & 0xffffff00 | *(var_8h + iVar1 + 0x30);\n        (**(*var_24h + 0x1c))(&var_2ch, var_2ch, *(var_8h + iVar1 + 0x28), *(*var_8h + 4) + var_8h, var_20h, 0xff);\n        if (var_2ch != '\\0') {\n            var_18h = 4;\n        }\n        var_4h = 0xffffffff;\n    }\n    iVar1 = *(*var_8h + 4);\n    if (var_18h != 0) {\n        uVar4 = *(var_8h + iVar1 + 8) | var_18h;\n        if (*(var_8h + iVar1 + 0x28) == 0) {\n            uVar4 = uVar4 | 4;\n        }\n        *(var_8h + iVar1 + 8) = uVar4 & 0x17;\n        if ((*(var_8h + iVar1 + 0xc) & uVar4 & 0x17) != 0) {\n            fcn.004015b0(0);\n        }\n    }\n    cVar3 = fcn.0040528a();\n    if (cVar3 == '\\0') {\n        fcn.004032d0();\n    }\n    if (*(*(*var_8h + 4) + 0x28 + var_8h) != 0) {\n        fcn.00405281();\n    }\n    *in_FS_OFFSET = var_ch;\n    return var_8h;\n}\n",
        "token_count": 1016
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401d30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401d30(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(unaff_ESI + *(*unaff_ESI + 4) + 8) & 6) == 0) {\n        iVar1 = (**(**(unaff_ESI + *(*unaff_ESI + 4) + 0x28) + 0x30))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    iVar1 = *(*unaff_ESI + 4);\n    if (uVar2 != 0) {\n        uVar2 = *(unaff_ESI + iVar1 + 8) | uVar2;\n        if (*(unaff_ESI + iVar1 + 0x28) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        *(unaff_ESI + iVar1 + 8) = uVar2 & 0x17;\n        if ((*(unaff_ESI + iVar1 + 0xc) & uVar2 & 0x17) != 0) {\n            fcn.004015b0(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "00402910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402910(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    \n    if ((arg_8h != '\\0') && (0xf < *(in_ECX + 0x18))) {\n        arg_10h = *(in_ECX + 4);\n        if (arg_ch != 0) {\n            fcn.00405ae6(in_ECX + 4, 0x10, arg_10h, arg_ch);\n        }\n        fcn.00405adb(arg_10h);\n    }\n    *(in_ECX + 0x14) = arg_ch;\n    *(in_ECX + 0x18) = 0xf;\n    *(in_ECX + 4 + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 185
    },
    "004029c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004029c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x20) != 0) {\n        return **(in_EAX + 0x30);\n    }\n    return 0;\n}\n",
        "token_count": 60
    },
    "004029e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004029e0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x24) != 0) {\n        return **(in_EAX + 0x34);\n    }\n    return 0;\n}\n",
        "token_count": 60
    },
    "00403470": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00403470(uint arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    char **ppcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uint var_5ch;\n    uint *var_58h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar8 = **(arg_ch + 0x24);\n    var_10h = uVar8;\n    fcn.00405003(0);\n    if (*(uVar8 + 4) != -1) {\n        *(uVar8 + 4) = *(uVar8 + 4) + 1;\n    }\n    fcn.0040502b();\n    piVar4 = fcn.00404760(&var_10h);\n    var_20h = piVar4;\n    fcn.00405003(0);\n    iVar6 = *(uVar8 + 4);\n    if ((iVar6 != 0) && (iVar6 != -1)) {\n        *(uVar8 + 4) = iVar6 + -1;\n    }\n    puVar10 = ~-(*(uVar8 + 4) != 0) & uVar8;\n    fcn.0040502b();\n    if (puVar10 != NULL) {\n        (***puVar10)(1);\n    }\n    (**(*piVar4 + 0xc))(&var_5ch);\n    var_1h._0_1_ = (**(*piVar4 + 8))();\n    var_28h = 0xf;\n    var_2ch = 0;\n    var_3ch = var_3ch & 0xffffff00;\n    if ((*arg_14h == '+') || (var_10h = 0,  *arg_14h == '-')) {\n        var_10h = 1;\n    }\n    ppcVar5 = fcn.0040593d();\n    var_8h._0_1_ = **ppcVar5;\n    var_8h._1_1_ = 0x65;\n    var_8h._2_1_ = 0;\n    var_ch = fcn.00405890(arg_14h, 0x65, arg_24h);\n    iVar6 = fcn.00405890(arg_14h, var_8h, arg_24h);\n    var_18h = iVar6;\n    if (iVar6 == 0) {\n        arg_20h = iVar6;\n    }\n    puVar10 = var_58h;\n    if (var_44h < 0x10) {\n        puVar10 = &var_58h;\n    }\n    if (*puVar10 != '\\x7f') {\n        puVar10 = var_58h;\n        if (var_44h < 0x10) {\n            puVar10 = &var_58h;\n        }\n        if ('\\0' < *puVar10) {\n            fcn.00403df0(arg_14h, arg_24h);\n            if (var_ch == 0) {\n                fcn.00403f10(arg_20h);\n            }\n            else {\n                if (iVar6 == 0) {\n                    fcn.00403f10(arg_18h);\n                    arg_18h = iVar6;\n                }\n                fcn.00403fe0(var_ch - arg_14h, 0x30);\n                iVar6 = var_18h;\n            }\n            if (iVar6 == 0) {\n                fcn.00403f10(arg_18h);\n            }\n            else {\n                fcn.00403fe0((iVar6 - arg_14h) + 1, 0x30);\n                fcn.00403fe0(iVar6 - arg_14h, 0x30);\n                arg_1ch = 0;\n            }\n            arg_18h = 0;\n            if (var_44h < 0x10) {\n                arg_14h = &var_58h;\n            }\n            else {\n                arg_14h = var_58h;\n            }\n            puVar10 = var_3ch;\n            if (var_28h < 0x10) {\n                puVar10 = &var_3ch;\n            }\n            iVar6 = fcn.00405b70(puVar10, &var_8h);\n            cVar1 = *arg_14h;\n            arg_24h = var_2ch;\n            while (((var_2ch = arg_24h,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar6 - var_10h))) {\n                iVar6 = iVar6 - cVar1;\n                fcn.00403fe0(iVar6, 0);\n                if ('\\0' < *(arg_14h + 1)) {\n                    arg_14h = arg_14h + 1;\n                }\n                arg_24h = var_2ch;\n                cVar1 = *arg_14h;\n            }\n            arg_14h = var_3ch;\n            if (var_28h < 0x10) {\n                arg_14h = &var_3ch;\n            }\n            arg_20h = 0;\n        }\n    }\n    uVar8 = *(arg_ch + 0x18);\n    uVar7 = arg_1ch + arg_18h + arg_20h + arg_24h;\n    if ((uVar8 < 1) || (uVar8 <= uVar7)) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = uVar8 - uVar7;\n    }\n    uVar8 = *(arg_ch + 0x10) & 0x1c0;\n    if (uVar8 != 0x40) {\n        if (uVar8 == 0x100) {\n            if (var_10h != 0) {\n                puVar10 = fcn.00404260(&var_1ch, arg_28h, arg_2ch);\n                arg_28h = *puVar10;\n                arg_14h = arg_14h + 1;\n                arg_2ch = puVar10[1];\n                arg_24h = arg_24h + -1;\n            }\n            puVar10 = fcn.00403c50(arg_28h, arg_2ch);\n            arg_28h = *puVar10;\n            arg_2ch = puVar10[1];\n        }\n        else {\n            puVar10 = fcn.00403c50(arg_28h, arg_2ch);\n            arg_28h = *puVar10;\n            arg_2ch = puVar10[1];\n        }\n        var_ch = 0;\n    }\n    iVar6 = fcn.00405890(arg_14h, var_8h, arg_24h);\n    if (iVar6 != 0) {\n        iVar9 = (iVar6 - arg_14h) + 1;\n        puVar10 = fcn.004042d0(&var_1ch, iVar6 - arg_14h, arg_28h, arg_2ch);\n        puVar10 = fcn.00403c50(*puVar10, puVar10[1]);\n        uVar2 = *puVar10;\n        uVar3 = puVar10[1];\n        (**(*var_20h + 4))();\n        puVar10 = fcn.00403c50(uVar2, uVar3);\n        puVar10 = fcn.00403c50(*puVar10, puVar10[1]);\n        arg_28h = *puVar10;\n        arg_14h = arg_14h + iVar9;\n        arg_24h = arg_24h - iVar9;\n        arg_2ch = puVar10[1];\n    }\n    iVar6 = fcn.00405890(arg_14h, 0x65, arg_24h);\n    if (iVar6 != 0) {\n        puVar10 = fcn.004042d0(&var_24h, iVar6 - arg_14h, arg_28h, arg_2ch);\n        puVar10 = fcn.00403c50(*puVar10, puVar10[1]);\n        puVar10 = fcn.00404260(&var_24h, *puVar10, puVar10[1]);\n        arg_28h = *puVar10;\n        arg_24h = arg_24h - ((iVar6 - arg_14h) + 1);\n        arg_2ch = puVar10[1];\n    }\n    puVar10 = fcn.004042d0(&var_24h, arg_24h, arg_28h, arg_2ch);\n    puVar10 = fcn.00403c50(*puVar10, puVar10[1]);\n    uVar2 = *puVar10;\n    uVar3 = puVar10[1];\n    *(arg_ch + 0x18) = 0;\n    fcn.00403c50(uVar2, uVar3);\n    if (0xf < var_28h) {\n        fcn.00405adb(var_3ch);\n    }\n    var_28h = 0xf;\n    var_2ch = 0;\n    var_3ch = var_3ch & 0xffffff00;\n    if (0xf < var_44h) {\n        fcn.00405adb(var_58h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 2343
    },
    "00403a10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00403a10(uint arg_8h, int32_t arg_ch, uint arg_10h, char *arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t *piVar2;\n    int32_t arg_ch_01;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint var_34h;\n    uint *var_30h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    uVar3 = **(arg_ch + 0x24);\n    var_8h = uVar3;\n    fcn.00405003(0);\n    if (*(uVar3 + 4) != -1) {\n        *(uVar3 + 4) = *(uVar3 + 4) + 1;\n    }\n    fcn.0040502b();\n    piVar2 = fcn.00404760(&var_8h);\n    var_14h = piVar2;\n    fcn.00405003(0);\n    iVar5 = *(uVar3 + 4);\n    if ((iVar5 != 0) && (iVar5 != -1)) {\n        *(uVar3 + 4) = iVar5 + -1;\n    }\n    puVar4 = ~-(*(uVar3 + 4) != 0) & uVar3;\n    fcn.0040502b();\n    if (puVar4 != NULL) {\n        (***puVar4)(1);\n    }\n    (**(*piVar2 + 0xc))(&var_34h);\n    cVar1 = *arg_14h;\n    if ((cVar1 == '+') || (cVar1 == '-')) {\n        var_8h = 1;\n    }\n    else if ((cVar1 == '0') && ((arg_14h[1] == 'x' || (arg_14h[1] == 'X')))) {\n        var_8h = 2;\n    }\n    else {\n        var_8h = 0;\n    }\n    puVar4 = var_30h;\n    if (var_1ch < 0x10) {\n        puVar4 = &var_30h;\n    }\n    if (*puVar4 != '\\x7f') {\n        puVar4 = var_30h;\n        if (var_1ch < 0x10) {\n            puVar4 = &var_30h;\n        }\n        if ('\\0' < *puVar4) {\n            puVar4 = var_30h;\n            if (var_1ch < 0x10) {\n                puVar4 = &var_30h;\n            }\n            cVar1 = *puVar4;\n            iVar5 = arg_18h;\n            while (((cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar5 - var_8h))) {\n                iVar5 = iVar5 - cVar1;\n                arg_ch_01 = (arg_18h - iVar5) + 1;\n                fcn.004055f7(arg_14h + iVar5 + 1, arg_ch_01, arg_14h + iVar5, arg_ch_01);\n                arg_18h = arg_18h + 1;\n                arg_14h[iVar5] = '\\0';\n                if ('\\0' < *(puVar4 + 1)) {\n                    puVar4 = puVar4 + 1;\n                }\n                cVar1 = *puVar4;\n            }\n        }\n    }\n    iVar5 = var_8h;\n    uVar3 = *(arg_ch + 0x10) & 0x1c0;\n    if (uVar3 != 0x40) {\n        if (uVar3 == 0x100) {\n            puVar4 = fcn.00404260(&var_ch, arg_1ch, arg_20h);\n            arg_18h = arg_18h - iVar5;\n            puVar4 = fcn.00403c50(*puVar4, puVar4[1]);\n            arg_1ch = *puVar4;\n            arg_20h = puVar4[1];\n        }\n        else {\n            puVar4 = fcn.00403c50(arg_1ch, arg_20h);\n            arg_1ch = *puVar4;\n            arg_20h = puVar4[1];\n        }\n    }\n    (**(*var_14h + 8))();\n    puVar4 = fcn.004042d0(&var_18h, arg_18h, arg_1ch, arg_20h);\n    arg_8h_00 = *puVar4;\n    arg_ch_00 = puVar4[1];\n    *(arg_ch + 0x18) = 0;\n    fcn.00403c50(arg_8h_00, arg_ch_00);\n    if (0xf < var_1ch) {\n        fcn.00405adb(var_30h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 1188
    },
    "00403c50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c50(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint8_t unaff_BL;\n    uint *unaff_EDI;\n    \n    if (in_EAX != 0) {\n        do {\n            if (arg_ch == NULL) {\ncode_r0x00403c9c:\n                arg_8h = CONCAT31(arg_8h._1_3_, 1);\n            }\n            else {\n                if ((*arg_ch[9] == 0) || (piVar1 = arg_ch[0xd],  *piVar1 < 1)) {\n                    uVar3 = (**(*arg_ch + 4))(unaff_BL);\n                }\n                else {\n                    *piVar1 = *piVar1 + -1;\n                    puVar2 = *arg_ch[9];\n                    *arg_ch[9] = puVar2 + 1;\n                    *puVar2 = unaff_BL;\n                    uVar3 = unaff_BL;\n                }\n                if (uVar3 == 0xffffffff) goto code_r0x00403c9c;\n            }\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *unaff_EDI = arg_8h;\n    unaff_EDI[1] = arg_ch;\n    return;\n}\n",
        "token_count": 328
    },
    "00404260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404260(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint8_t *in_ECX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (arg_10h == NULL) {\ncode_r0x004042af:\n                arg_ch = CONCAT31(arg_ch._1_3_, 1);\n            }\n            else {\n                uVar1 = *in_ECX;\n                if ((*arg_10h[9] == 0) || (piVar2 = arg_10h[0xd],  *piVar2 < 1)) {\n                    uVar4 = (**(*arg_10h + 4))(uVar1);\n                }\n                else {\n                    *piVar2 = *piVar2 + -1;\n                    puVar3 = *arg_10h[9];\n                    *arg_10h[9] = puVar3 + 1;\n                    *puVar3 = uVar1;\n                    uVar4 = uVar1;\n                }\n                if (uVar4 == 0xffffffff) goto code_r0x004042af;\n            }\n            in_EAX = in_EAX + -1;\n            in_ECX = in_ECX + 1;\n        } while (in_EAX != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 361
    },
    "00404520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404520(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00405003(0);\n    iVar3 = *0xb7fd44;\n    var_4h = *0xb7fd44;\n    if (*0x41db70 == 0) {\n        fcn.00405003(0);\n        if (*0x41db70 == 0) {\n            *0x41db6c = *0x41db6c + 1;\n            *0x41db70 = *0x41db6c;\n        }\n        fcn.0040502b();\n    }\n    uVar1 = *0x41db70;\n    iVar2 = *arg_8h;\n    if (*0x41db70 < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0x41db70 * 4);\n        if (arg_8h_00 != 0) goto code_r0x00404623;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    if (*(iVar2 + 0x14) == '\\0') {\ncode_r0x004045a4:\n        if (arg_8h_00 != 0) goto code_r0x00404623;\n    }\n    else {\n        iVar2 = fcn.00404ce1();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x004045a4;\n        }\n    }\n    if (iVar3 != 0) {\n        fcn.0040502b();\n        return iVar3;\n    }\n    iVar3 = fcn.00401280(&var_4h, arg_8h);\n    if (iVar3 == -1) {\n        fcn.00405755(\"bad cast\");\n        fcn.00406a02(&var_18h, 0x41a7e8);\n    }\n    arg_8h_00 = var_4h;\n    *0xb7fd44 = var_4h;\n    fcn.00405003(0);\n    if (*(arg_8h_00 + 4) != -1) {\n        *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n    }\n    fcn.0040502b();\n    fcn.00404da6(arg_8h_00);\ncode_r0x00404623:\n    fcn.0040502b();\n    return arg_8h_00;\n}\n",
        "token_count": 657
    },
    "00404640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404640(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00405003(0);\n    iVar3 = *0xb7fd48;\n    var_4h = *0xb7fd48;\n    if (*0xb7fd50 == 0) {\n        fcn.00405003(0);\n        if (*0xb7fd50 == 0) {\n            *0x41db6c = *0x41db6c + 1;\n            *0xb7fd50 = *0x41db6c;\n        }\n        fcn.0040502b();\n    }\n    uVar1 = *0xb7fd50;\n    iVar2 = *arg_8h;\n    if (*0xb7fd50 < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0xb7fd50 * 4);\n        if (arg_8h_00 != 0) goto code_r0x00404743;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    if (*(iVar2 + 0x14) == '\\0') {\ncode_r0x004046c4:\n        if (arg_8h_00 != 0) goto code_r0x00404743;\n    }\n    else {\n        iVar2 = fcn.00404ce1();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x004046c4;\n        }\n    }\n    if (iVar3 != 0) {\n        fcn.0040502b();\n        return iVar3;\n    }\n    iVar3 = fcn.004048a0(&var_4h, arg_8h);\n    if (iVar3 == -1) {\n        fcn.00405755(\"bad cast\");\n        fcn.00406a02(&var_18h, 0x41a7e8);\n    }\n    arg_8h_00 = var_4h;\n    *0xb7fd48 = var_4h;\n    fcn.00405003(0);\n    if (*(arg_8h_00 + 4) != -1) {\n        *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n    }\n    fcn.0040502b();\n    fcn.00404da6(arg_8h_00);\ncode_r0x00404743:\n    fcn.0040502b();\n    return arg_8h_00;\n}\n",
        "token_count": 658
    },
    "00404760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404760(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00405003(0);\n    iVar3 = *0xb7fd4c;\n    var_4h = *0xb7fd4c;\n    if (*0xb7fd54 == 0) {\n        fcn.00405003(0);\n        if (*0xb7fd54 == 0) {\n            *0x41db6c = *0x41db6c + 1;\n            *0xb7fd54 = *0x41db6c;\n        }\n        fcn.0040502b();\n    }\n    uVar1 = *0xb7fd54;\n    iVar2 = *arg_8h;\n    if (*0xb7fd54 < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0xb7fd54 * 4);\n        if (arg_8h_00 != 0) goto code_r0x00404863;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    if (*(iVar2 + 0x14) == '\\0') {\ncode_r0x004047e4:\n        if (arg_8h_00 != 0) goto code_r0x00404863;\n    }\n    else {\n        iVar2 = fcn.00404ce1();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x004047e4;\n        }\n    }\n    if (iVar3 != 0) {\n        fcn.0040502b();\n        return iVar3;\n    }\n    iVar3 = fcn.00404970(&var_4h, arg_8h);\n    if (iVar3 == -1) {\n        fcn.00405755(\"bad cast\");\n        fcn.00406a02(&var_18h, 0x41a7e8);\n    }\n    arg_8h_00 = var_4h;\n    *0xb7fd4c = var_4h;\n    fcn.00405003(0);\n    if (*(arg_8h_00 + 4) != -1) {\n        *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n    }\n    fcn.0040502b();\n    fcn.00404da6(arg_8h_00);\ncode_r0x00404863:\n    fcn.0040502b();\n    return arg_8h_00;\n}\n",
        "token_count": 660
    },
    "00405801": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405801(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a764(0x41a1d0, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0xb80ed0 == 3) {\n            fcn.00409c6a(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.00409c9d(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.00409ccd(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00405857();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x00405889;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x41dd68, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00405e79();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00405e37(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x00405889:\n    fcn.0040a7a9();\n    return;\n}\n",
        "token_count": 431
    },
    "00406686": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00406686(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x406731;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040675d;\n        uStack36 = *0x41c330 ^ &fcn.00406686::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00406686::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040ac13();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00406686::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 718
    },
    "00406976": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406976(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x41c330) {\n        return;\n    }\n    *0x41e5a0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x41e5a4 = &arg_8h;\n    *0x41e4e0 = 0x10001;\n    *0x41e488 = 0xc0000409;\n    *0x41e48c = 1;\n    var_328h = *0x41c330;\n    var_324h = *0x41c334;\n    *0x41e494 = unaff_retaddr;\n    *0x41e56c = in_GS;\n    *0x41e570 = in_FS;\n    *0x41e574 = in_ES;\n    *0x41e578 = in_DS;\n    *0x41e57c = unaff_EDI;\n    *0x41e580 = unaff_ESI;\n    *0x41e584 = unaff_EBX;\n    *0x41e588 = in_EDX;\n    *0x41e58c = in_ECX;\n    *0x41e590 = in_EAX;\n    *0x41e594 = unaff_EBP;\n    *0x41e598 = unaff_retaddr;\n    *0x41e59c = in_CS;\n    *0x41e5a8 = in_SS;\n    *0x41e4d8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040aee9(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x41832c);\n    if (*0x41e4d8 == 0) {\n        fcn.0040aee9(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 844
    },
    "00407bba": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407bba(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a764(0x41a2b8, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.0040ac13();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0040c4bd();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.0040c510(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00407c80();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040c4bd();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040a7a9();\n    return;\n}\n",
        "token_count": 573
    },
    "00407c80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407c80(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ac13();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040ac13();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00407f5b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f5b(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.004068c4(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040ac13();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040ac13();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0040689d(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00407ce0(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0040b273": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040b366: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040b36b)\n// WARNING: Removing unreachable block (ram,0x0040b399)\n// WARNING: Removing unreachable block (ram,0x0040b371)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b273(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a764(0x41a4a8, 0x18);\n    fcn.00409c6a(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x41df30 != 1) {\n        *0x41df2c = 1;\n        *0x41df28 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040a9c7(*0xb80ea8);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040a9c7(*0xb80ea4);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040a9be();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040a9c7(*piVar2);\n                        iVar3 = fcn.0040a9be();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040a9c7(*0xb80ea8);\n                        piVar1 = fcn.0040a9c7(*0xb80ea4);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040b1ad(0x4171b0);\n        }\n        fcn.0040b1ad(0x4171b8);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00409b90(8);\n    }\n    return;\n}\n",
        "token_count": 819
    },
    "0040c392": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c392(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00409b90(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004120f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004120f2(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040a9be();\n    var_4h = 0;\n    if (*0x41e818 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x41e818 = fcn.0040a94c(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x41e81c = fcn.0040a94c(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x41e820 = fcn.0040a94c(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x41e828 = fcn.0040a94c(uVar3);\n        if (*0x41e828 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x41e824 = fcn.0040a94c(uVar3);\n        }\n    }\n    if ((*0x41e824 != iVar1) && (*0x41e828 != iVar1)) {\n        pcVar4 = fcn.0040a9c7(*0x41e824);\n        pcVar5 = fcn.0040a9c7(*0x41e828);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00412234;\n        }\n    }\n    if ((((*0x41e81c != iVar1) && (pcVar4 = fcn.0040a9c7(*0x41e81c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x41e820 != iVar1 && (pcVar4 = fcn.0040a9c7(*0x41e820),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00412234:\n    pcVar4 = fcn.0040a9c7(*0x41e818);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 838
    },
    "004148cb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004148cb(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00414dcc;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00414a00;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00414a07;\ncode_r0x00414a00:\n                        do {\n                            var_4h = 1;\ncode_r0x00414a07:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00414a15;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00414a15:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x41d814 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x41d814 < iVar12) {\n                if (iVar12 < *0x41d810) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x41d810;\n                    uVar5 = 1;\n                }\n                goto code_r0x00414dcc;\n            }\n            var_10h = *0x41d814 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00414bb8;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00414bb8:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00414dcc:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3660
    },
    "00414e0f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414e0f(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00415310;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x41d830 - 1;\n        iVar4 = *0x41d830 + (*0x41d830 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x41d830 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00414f44;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00414f4b;\ncode_r0x00414f44:\n                        do {\n                            var_4h = 1;\ncode_r0x00414f4b:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00414f59;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00414f59:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x41d82c - *0x41d830) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x41d82c < iVar12) {\n                if (iVar12 < *0x41d828) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x41d83c;\n                    iVar4 = *0x41d834 + (*0x41d834 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x41d834 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x41d834 + (*0x41d834 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x41d834 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x41d83c + *0x41d828;\n                    uVar5 = 1;\n                }\n                goto code_r0x00415310;\n            }\n            var_10h = *0x41d82c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x41d830 - 1;\n            iVar12 = *0x41d830 + (*0x41d830 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x41d830 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004150fc;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004150fc:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x41d834 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00415310:\n    var_20h = iVar12 << (0x1fU - *0x41d834 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x41d838 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x41d838 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3641
    },
    "00415353": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415615)\n// WARNING: Removing unreachable block (ram,0x004155de)\n// WARNING: Removing unreachable block (ram,0x004159c6)\n// WARNING: Removing unreachable block (ram,0x004155ed)\n// WARNING: Removing unreachable block (ram,0x004155f5)\n// WARNING: Removing unreachable block (ram,0x004155fb)\n// WARNING: Removing unreachable block (ram,0x004155fe)\n// WARNING: Removing unreachable block (ram,0x00415605)\n// WARNING: Removing unreachable block (ram,0x0041560f)\n// WARNING: Removing unreachable block (ram,0x0041566a)\n// WARNING: Removing unreachable block (ram,0x00415664)\n// WARNING: Removing unreachable block (ram,0x00415670)\n// WARNING: Removing unreachable block (ram,0x0041568d)\n// WARNING: Removing unreachable block (ram,0x0041568f)\n// WARNING: Removing unreachable block (ram,0x00415697)\n// WARNING: Removing unreachable block (ram,0x0041569a)\n// WARNING: Removing unreachable block (ram,0x0041569f)\n// WARNING: Removing unreachable block (ram,0x004156a2)\n// WARNING: Removing unreachable block (ram,0x004159cf)\n// WARNING: Removing unreachable block (ram,0x004156ad)\n// WARNING: Removing unreachable block (ram,0x004159e6)\n// WARNING: Removing unreachable block (ram,0x004159ed)\n// WARNING: Removing unreachable block (ram,0x004156b8)\n// WARNING: Removing unreachable block (ram,0x004156cb)\n// WARNING: Removing unreachable block (ram,0x004156cd)\n// WARNING: Removing unreachable block (ram,0x004156da)\n// WARNING: Removing unreachable block (ram,0x004156df)\n// WARNING: Removing unreachable block (ram,0x004156e5)\n// WARNING: Removing unreachable block (ram,0x004156ee)\n// WARNING: Removing unreachable block (ram,0x004156f5)\n// WARNING: Removing unreachable block (ram,0x0041570d)\n// WARNING: Removing unreachable block (ram,0x0041571e)\n// WARNING: Removing unreachable block (ram,0x0041572c)\n// WARNING: Removing unreachable block (ram,0x0041576b)\n// WARNING: Removing unreachable block (ram,0x00415774)\n// WARNING: Removing unreachable block (ram,0x0041598c)\n// WARNING: Removing unreachable block (ram,0x00415782)\n// WARNING: Removing unreachable block (ram,0x0041578c)\n// WARNING: Removing unreachable block (ram,0x004159a7)\n// WARNING: Removing unreachable block (ram,0x00415799)\n// WARNING: Removing unreachable block (ram,0x004157a0)\n// WARNING: Removing unreachable block (ram,0x004157aa)\n// WARNING: Removing unreachable block (ram,0x004157af)\n// WARNING: Removing unreachable block (ram,0x004157bf)\n// WARNING: Removing unreachable block (ram,0x004157c4)\n// WARNING: Removing unreachable block (ram,0x004157ce)\n// WARNING: Removing unreachable block (ram,0x004157d3)\n// WARNING: Removing unreachable block (ram,0x004157e5)\n// WARNING: Removing unreachable block (ram,0x004157f2)\n// WARNING: Removing unreachable block (ram,0x00415801)\n// WARNING: Removing unreachable block (ram,0x0041580e)\n// WARNING: Removing unreachable block (ram,0x0041582b)\n// WARNING: Removing unreachable block (ram,0x0041582f)\n// WARNING: Removing unreachable block (ram,0x00415836)\n// WARNING: Removing unreachable block (ram,0x0041583f)\n// WARNING: Removing unreachable block (ram,0x00415842)\n// WARNING: Removing unreachable block (ram,0x00415853)\n// WARNING: Removing unreachable block (ram,0x00415861)\n// WARNING: Removing unreachable block (ram,0x0041586c)\n// WARNING: Removing unreachable block (ram,0x00415873)\n// WARNING: Removing unreachable block (ram,0x0041589e)\n// WARNING: Removing unreachable block (ram,0x004158a3)\n// WARNING: Removing unreachable block (ram,0x004158ae)\n// WARNING: Removing unreachable block (ram,0x004158b7)\n// WARNING: Removing unreachable block (ram,0x004158bd)\n// WARNING: Removing unreachable block (ram,0x004158c0)\n// WARNING: Removing unreachable block (ram,0x004158e6)\n// WARNING: Removing unreachable block (ram,0x004158eb)\n// WARNING: Removing unreachable block (ram,0x004158f0)\n// WARNING: Removing unreachable block (ram,0x004158fd)\n// WARNING: Removing unreachable block (ram,0x0041590e)\n// WARNING: Removing unreachable block (ram,0x0041593f)\n// WARNING: Removing unreachable block (ram,0x00415914)\n// WARNING: Removing unreachable block (ram,0x0041593a)\n// WARNING: Removing unreachable block (ram,0x0041591e)\n// WARNING: Removing unreachable block (ram,0x00415934)\n// WARNING: Removing unreachable block (ram,0x0041592d)\n// WARNING: Removing unreachable block (ram,0x00415942)\n// WARNING: Removing unreachable block (ram,0x0041596f)\n// WARNING: Removing unreachable block (ram,0x0041594c)\n// WARNING: Removing unreachable block (ram,0x004157d7)\n// WARNING: Removing unreachable block (ram,0x004157b4)\n// WARNING: Removing unreachable block (ram,0x004159aa)\n// WARNING: Removing unreachable block (ram,0x004156f0)\n// WARNING: Removing unreachable block (ram,0x004159b4)\n// WARNING: Removing unreachable block (ram,0x004159f5)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.00415353(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00405e79();\n        *puVar2 = 0x16;\n        fcn.00405a9a(0, 0, 0, 0, 0);\n        fcn.00406976(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x004153e6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x415a1b\n    (**0x415a1b)();\n    return;\n}\n",
        "token_count": 1790
    },
    "00402960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402960(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t arg_8h_00;\n    code *var_ch;\n    \n    if (arg_8h == 0) {\n        arg_8h_00 = 0;\n    }\n    else {\n        arg_8h_00 = arg_8h;\n        if (0xffffffff / arg_8h == 0) {\n            arg_8h = 0;\n            fcn.00405665(&arg_8h);\n            var_ch = vtable.std::bad_alloc.0;\n            fcn.00406a02(&var_ch, 0x41a820);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.00405c22(arg_8h_00);\n    return;\n}\n",
        "token_count": 196
    },
    "00403f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f10(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    int32_t **ppiVar4;\n    \n    if (-*(unaff_ESI + 0x14) - 1U <= arg_8h) {\n        fcn.00405163();\n    }\n    if (arg_8h != 0) {\n        uVar3 = *(unaff_ESI + 0x14) + arg_8h;\n        if (uVar3 == 0xffffffff) {\n            fcn.00405163();\n        }\n        if (*(unaff_ESI + 0x18) < uVar3) {\n            fcn.00404110(uVar3, *(unaff_ESI + 0x14));\n        }\n        else if (uVar3 == 0) {\n            *(unaff_ESI + 0x14) = 0;\n            if (*(unaff_ESI + 0x18) < 0x10) {\n                *(unaff_ESI + 4) = 0;\n                return;\n            }\n            **(unaff_ESI + 4) = 0;\n            return;\n        }\n        if (uVar3 != 0) {\n            iVar1 = *(unaff_ESI + 0x14);\n            ppiVar4 = unaff_ESI + 4;\n            if (arg_8h == 1) {\n                if (*(unaff_ESI + 0x18) < 0x10) {\n                    *(ppiVar4 + iVar1) = 0x30;\n                }\n                else {\n                    *(*ppiVar4 + iVar1) = 0x30;\n                }\n            }\n            else {\n                ppiVar2 = ppiVar4;\n                if (0xf < *(unaff_ESI + 0x18)) {\n                    ppiVar2 = *ppiVar4;\n                }\n                fcn.0040af00(ppiVar2 + iVar1, 0x30, arg_8h);\n            }\n            *(unaff_ESI + 0x14) = uVar3;\n            if (0xf < *(unaff_ESI + 0x18)) {\n                ppiVar4 = *ppiVar4;\n            }\n            *(ppiVar4 + uVar3) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "00403fe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403fe0(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t **ppiVar1;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    uint var_ch;\n    int32_t **var_8h;\n    int32_t **var_4h;\n    \n    if (*(unaff_ESI + 0x14) < arg_8h) {\n        fcn.0040519b();\n    }\n    if (-*(unaff_ESI + 0x14) - 1U <= unaff_EBX) {\n        fcn.00405163();\n    }\n    if (unaff_EBX != 0) {\n        uVar2 = *(unaff_ESI + 0x14) + unaff_EBX;\n        if (uVar2 == 0xffffffff) {\n            fcn.00405163();\n        }\n        if (*(unaff_ESI + 0x18) < uVar2) {\n            fcn.00404110(uVar2, *(unaff_ESI + 0x14));\n        }\n        else if (uVar2 == 0) {\n            *(unaff_ESI + 0x14) = 0;\n            if (0xf < *(unaff_ESI + 0x18)) {\n                **(unaff_ESI + 4) = 0;\n                return;\n            }\n            *(unaff_ESI + 4) = 0;\n            return;\n        }\n        if (uVar2 != 0) {\n            ppiVar3 = unaff_ESI + 4;\n            var_8h = ppiVar3;\n            var_4h = ppiVar3;\n            if (0xf < *(unaff_ESI + 0x18)) {\n                var_8h = *ppiVar3;\n                var_4h = *ppiVar3;\n            }\n            fcn.004055f7(var_8h + unaff_EBX + arg_8h, (*(unaff_ESI + 0x18) - arg_8h) - unaff_EBX, var_4h + arg_8h, \n                         *(unaff_ESI + 0x14) - arg_8h);\n            if (unaff_EBX == 1) {\n                if (*(unaff_ESI + 0x18) < 0x10) {\n                    *(ppiVar3 + arg_8h) = arg_ch;\n                }\n                else {\n                    *(*ppiVar3 + arg_8h) = arg_ch;\n                }\n            }\n            else {\n                ppiVar1 = ppiVar3;\n                if (0xf < *(unaff_ESI + 0x18)) {\n                    ppiVar1 = *ppiVar3;\n                }\n                fcn.0040af00(ppiVar1 + arg_8h, arg_ch);\n            }\n            *(unaff_ESI + 0x14) = uVar2;\n            if (0xf < *(unaff_ESI + 0x18)) {\n                ppiVar3 = *ppiVar3;\n            }\n            *(ppiVar3 + uVar2) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 716
    },
    "004143fd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004143fd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41c330 ^ &stack0xfffffffc;\n    fcn.004087ae(arg_10h);\n    var_14h = fcn.00415353(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004148cb(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00414456:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00414496;\n        }\n        if (iVar1 != 2) {\ncode_r0x00414488:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00414496;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00414488;\n        goto code_r0x00414456;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00414496:\n    fcn.00406976(unaff_EBX);\n    return;\n}\n",
        "token_count": 491
    },
    "004144a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004144a5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41c330 ^ &stack0xfffffffc;\n    fcn.004087ae(arg_10h);\n    var_14h = fcn.00415353(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00414e0f(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004144fe:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041453e;\n        }\n        if (iVar1 != 2) {\ncode_r0x00414530:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041453e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00414530;\n        goto code_r0x004144fe;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041453e:\n    fcn.00406976(unaff_EBX);\n    return;\n}\n",
        "token_count": 497
    },
    "00401280": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401280(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_94h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.00405c22(0x18);\n        if (iVar1 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            var_4h = 0xf;\n            var_8h = 0;\n            var_18h = var_18h & 0xffffff00;\n            fcn.004027f0(*arg_ch + 0x18, 0, 0xffffffff);\n            fcn.00401050(&var_1ch);\n            iVar2 = fcn.00401240();\n        }\n        *arg_8h = iVar2;\n        if ((iVar1 != 0) && (fcn.004010a0(),  0xf < var_4h)) {\n            fcn.00405adb(var_18h);\n        }\n    }\n    return 2;\n}\n",
        "token_count": 293
    },
    "00402090": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402090(code **param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    *param_1 = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    if ((*(param_1 + 0x10) & 1) != 0) {\n        fcn.00405adb(*param_1[4]);\n    }\n    *param_1[4] = 0;\n    *param_1[8] = 0;\n    *param_1[0xc] = 0;\n    *param_1[5] = 0;\n    *param_1[9] = 0;\n    *param_1[0xd] = 0;\n    param_1[0x10] = param_1[0x10] & 0xfffffffe;\n    param_1[0xf] = NULL;\n    puVar1 = param_1[0xe];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.00405003(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.0040502b();\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00405adb(puVar1);\n    }\n    fcn.00405261();\n    return;\n}\n",
        "token_count": 433
    },
    "00402670": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402670(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *in_ECX;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = *in_ECX;\n    if (uVar1 != 0) {\n        fcn.00405003(0);\n        iVar2 = *(uVar1 + 4);\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            *(uVar1 + 4) = iVar2 + -1;\n        }\n        puVar3 = ~-(*(uVar1 + 4) != 0) & uVar1;\n        fcn.0040502b();\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.00405adb();\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "004048a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004048a0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    code **ppcVar1;\n    bool bVar2;\n    ulong uVar3;\n    uint var_94h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar1 = fcn.00405c22(0x10);\n        bVar2 = ppcVar1 == NULL;\n        if (bVar2) {\n            ppcVar1 = NULL;\n        }\n        else {\n            var_4h = 0xf;\n            var_8h = 0;\n            var_18h = var_18h & 0xffffff00;\n            fcn.004027f0(*arg_ch + 0x18, 0, 0xffffffff);\n            fcn.00401050(&var_1ch);\n            ppcVar1[1] = NULL;\n            *ppcVar1 = vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n            uVar3 = fcn.00404b80();\n            ppcVar1[2] = uVar3;\n            ppcVar1[3] = uVar3 >> 0x20;\n        }\n        *arg_8h = ppcVar1;\n        if ((!bVar2) && (fcn.004010a0(),  0xf < var_4h)) {\n            fcn.00405adb(var_18h);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 390
    },
    "00404970": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404970(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    code **ppcVar1;\n    bool bVar2;\n    uint var_94h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar1 = fcn.00405c22(0x18);\n        bVar2 = ppcVar1 == NULL;\n        if (bVar2) {\n            ppcVar1 = NULL;\n        }\n        else {\n            var_4h = 0xf;\n            var_8h = 0;\n            var_18h = var_18h & 0xffffff00;\n            fcn.004027f0(*arg_ch + 0x18, 0, 0xffffffff);\n            fcn.00401050(&var_1ch);\n            ppcVar1[1] = NULL;\n            *ppcVar1 = vtable.std::numpunct_char_.0;\n            fcn.00404a40(ppcVar1);\n        }\n        *arg_8h = ppcVar1;\n        if ((!bVar2) && (fcn.004010a0(),  0xf < var_4h)) {\n            fcn.00405adb(var_18h);\n        }\n    }\n    return 4;\n}\n",
        "token_count": 337
    },
    "00405c22": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c22(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_ch;\n    \n    do {\n        iVar2 = fcn.0040973c(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040b087(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x41dd4c & 1) == 0) {\n        *0x41dd4c = *0x41dd4c | 1;\n        fcn.00405c07();\n        fcn.00406579(0x416ba6);\n    }\n    fcn.00404880(0x41dd40);\n    fcn.00406a02(&var_ch, 0x41a820);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 214
    },
    "00410af6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00410af6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a764(0x41a628, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00405e8c();\n        *puVar2 = 0;\n        puVar2 = fcn.00405e79();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0xb80d88)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0xb80da0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00412a08(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00405e79();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00405e8c();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004103c3(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00410bc8(0x41a628);\n                goto code_r0x00410bc2;\n            }\n        }\n        puVar2 = fcn.00405e8c();\n        *puVar2 = 0;\n        puVar2 = fcn.00405e79();\n        *puVar2 = 9;\n        fcn.00405a9a(0, 0, 0, 0, 0);\n    }\ncode_r0x00410bc2:\n    fcn.0040a7a9();\n    return;\n}\n",
        "token_count": 638
    },
    "00401680": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00401680(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    *(unaff_ESI + 0x24) = 0;\n    *(unaff_ESI + 4) = 0;\n    *(unaff_ESI + 0xc) = 0;\n    *(unaff_ESI + 0x10) = 0x201;\n    *(unaff_ESI + 0x14) = 6;\n    *(unaff_ESI + 0x18) = 0;\n    *(unaff_ESI + 0x1c) = 0;\n    *(unaff_ESI + 0x20) = 0;\n    *(unaff_ESI + 8) = 0;\n    puVar1 = fcn.00405c22(4);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.00404eb3();\n        *puVar1 = uVar2;\n        iVar3 = fcn.00404ce1();\n        fcn.00405003(0);\n        if (*(iVar3 + 4) != -1) {\n            *(iVar3 + 4) = *(iVar3 + 4) + 1;\n        }\n        fcn.0040502b();\n        *(unaff_ESI + 0x24) = puVar1;\n        return;\n    }\n    *(unaff_ESI + 0x24) = 0;\n    return;\n}\n",
        "token_count": 354
    },
    "00401d90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d90(code **param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.00405003(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.0040502b();\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00405adb(puVar1);\n    }\n    fcn.00405261();\n    return;\n}\n",
        "token_count": 271
    },
    "004033b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004033b0(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **unaff_ESI;\n    uint var_4h;\n    \n    *unaff_ESI = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.00405247();\n    puVar1 = fcn.00405c22(4);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        uVar2 = fcn.00404eb3();\n        *puVar1 = uVar2;\n        iVar3 = fcn.00404ce1();\n        fcn.00405003(0);\n        if (*(iVar3 + 4) != -1) {\n            *(iVar3 + 4) = *(iVar3 + 4) + 1;\n        }\n        fcn.0040502b();\n    }\n    unaff_ESI[0xe] = puVar1;\n    unaff_ESI[4] = unaff_ESI + 2;\n    unaff_ESI[8] = unaff_ESI + 6;\n    unaff_ESI[9] = unaff_ESI + 7;\n    unaff_ESI[5] = unaff_ESI + 3;\n    unaff_ESI[0xc] = unaff_ESI + 10;\n    unaff_ESI[0xd] = unaff_ESI + 0xb;\n    unaff_ESI[3] = NULL;\n    *unaff_ESI[9] = 0;\n    *unaff_ESI[0xd] = 0;\n    *unaff_ESI[4] = 0;\n    *unaff_ESI[8] = 0;\n    *unaff_ESI[0xc] = 0;\n    return;\n}\n",
        "token_count": 411
    },
    "00404490": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00404490(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = **(in_EAX + 0x24);\n    var_8h = uVar1;\n    fcn.00405003(0);\n    if (*(uVar1 + 4) != -1) {\n        *(uVar1 + 4) = *(uVar1 + 4) + 1;\n    }\n    fcn.0040502b();\n    piVar3 = fcn.00404520(&var_8h);\n    fcn.00405003(0);\n    iVar2 = *(uVar1 + 4);\n    if ((iVar2 != 0) && (iVar2 != -1)) {\n        *(uVar1 + 4) = iVar2 + -1;\n    }\n    puVar4 = ~-(*(uVar1 + 4) != 0) & uVar1;\n    fcn.0040502b();\n    if (puVar4 != NULL) {\n        (***puVar4)(1);\n    }\n    (**(*piVar3 + 0x18))(0x20);\n    return;\n}\n",
        "token_count": 300
    },
    "004011f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004011f0(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    if (uVar1 != 0) {\n        fcn.00405003(0);\n        iVar2 = *(uVar1 + 4);\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            *(uVar1 + 4) = iVar2 + -1;\n        }\n        puVar3 = ~-(*(uVar1 + 4) != 0) & uVar1;\n        fcn.0040502b();\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00404110": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404110(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch;\n    uint var_10h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x416b10;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar4 = var_8h | 0xf;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(param_1 + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    arg_8h = fcn.00402960(var_8h + 1);\n    var_4h = 0xffffffff;\n    if (var_ch != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            arg_10h = param_1 + 4;\n        }\n        else {\n            arg_10h = *(param_1 + 4);\n        }\n        fcn.00405ae6(arg_8h, var_8h + 1, arg_10h, var_ch);\n    }\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.00405adb(*(param_1 + 4));\n    }\n    puVar2 = param_1 + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h;\n    *(param_1 + 0x18) = var_8h;\n    *(param_1 + 0x14) = var_ch;\n    if (0xf < var_8h) {\n        puVar2 = arg_8h;\n    }\n    *(puVar2 + var_ch) = 0;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 574
    },
    "00401050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401050(uint arg_8h)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.00405003(0);\n    *(unaff_ESI + 0x18) = 0;\n    *(unaff_ESI + 0x1c) = 0xf;\n    *(unaff_ESI + 8) = 0;\n    *(unaff_ESI + 0x38) = 0xf;\n    *(unaff_ESI + 0x34) = 0;\n    *(unaff_ESI + 0x24) = 0;\n    *(unaff_ESI + 0x54) = 0xf;\n    *(unaff_ESI + 0x50) = 0;\n    *(unaff_ESI + 0x40) = 0;\n    *(unaff_ESI + 0x70) = 0xf;\n    *(unaff_ESI + 0x6c) = 0;\n    *(unaff_ESI + 0x5c) = 0;\n    fcn.00404f4d(unaff_ESI, arg_8h);\n    return;\n}\n",
        "token_count": 257
    },
    "004010a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004010a0(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    fcn.00404de4(unaff_ESI);\n    if (0xf < unaff_ESI[0x1c]) {\n        fcn.00405adb(unaff_ESI[0x17]);\n    }\n    unaff_ESI[0x1c] = 0xf;\n    unaff_ESI[0x1b] = 0;\n    *(unaff_ESI + 0x17) = 0;\n    if (0xf < unaff_ESI[0x15]) {\n        fcn.00405adb(unaff_ESI[0x10]);\n    }\n    unaff_ESI[0x15] = 0xf;\n    unaff_ESI[0x14] = 0;\n    *(unaff_ESI + 0x10) = 0;\n    if (0xf < unaff_ESI[0xe]) {\n        fcn.00405adb(unaff_ESI[9]);\n    }\n    unaff_ESI[0xe] = 0xf;\n    unaff_ESI[0xd] = 0;\n    *(unaff_ESI + 9) = 0;\n    if (0xf < unaff_ESI[7]) {\n        fcn.00405adb(unaff_ESI[2]);\n    }\n    unaff_ESI[7] = 0xf;\n    unaff_ESI[6] = 0;\n    *(unaff_ESI + 2) = 0;\n    if (*unaff_ESI < 4) {\n        fcn.004055e7(*unaff_ESI * 0x18 + 0x41db90);\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0040502b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040502b(int32_t *param_1)\n\n{\n    if (*param_1 < 4) {\n        fcn.004055e7(*param_1 * 0x18 + 0x41db90);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00401240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00401240(void)\n\n{\n    code **ppcVar1;\n    code **unaff_ESI;\n    uint var_10h;\n    \n    unaff_ESI[1] = NULL;\n    *unaff_ESI = vtable.std::ctype_char_.0;\n    ppcVar1 = fcn.004053a7(&var_10h);\n    unaff_ESI[2] = *ppcVar1;\n    unaff_ESI[3] = ppcVar1[1];\n    unaff_ESI[4] = ppcVar1[2];\n    unaff_ESI[5] = ppcVar1[3];\n    return;\n}\n",
        "token_count": 148
    },
    "00401a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401a50(void)\n\n{\n    int32_t *in_EAX;\n    code **arg_8h;\n    \n    arg_8h = in_EAX + 0x15;\n    *(*(*in_EAX + 4) + -0x54 + arg_8h) =\n         vtable.std::basic_stringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    fcn.00402090();\n    *(in_EAX + *(*in_EAX + 4)) = vtable.std::basic_iostream_char__struct_std::char_traits_char__.0;\n    *(in_EAX + *(in_EAX[2] + 4) + 8) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(in_EAX + *(*in_EAX + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *arg_8h = vtable.std::ios_base.0;\n    fcn.00404c08(arg_8h);\n    return;\n}\n",
        "token_count": 239
    },
    "004027f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027f0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t in_ECX;\n    int32_t *piVar1;\n    uint32_t arg_14h;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.0040519b();\n    }\n    arg_14h = *(arg_8h + 0x14) - arg_ch;\n    if (arg_10h < arg_14h) {\n        arg_14h = arg_10h;\n    }\n    if (in_ECX != arg_8h) {\n        if (arg_14h == 0xffffffff) {\n            fcn.00405163();\n        }\n        if (*(in_ECX + 0x18) < arg_14h) {\n            fcn.00404110(arg_14h, *(in_ECX + 0x14));\n        }\n        else if (arg_14h == 0) {\n            *(in_ECX + 0x14) = 0;\n            if (*(in_ECX + 0x18) < 0x10) {\n                *(in_ECX + 4) = 0;\n                return;\n            }\n            **(in_ECX + 4) = 0;\n            return;\n        }\n        if (arg_14h != 0) {\n            if (*(arg_8h + 0x18) < 0x10) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            piVar1 = in_ECX + 4;\n            arg_8h_00 = piVar1;\n            if (0xf < *(in_ECX + 0x18)) {\n                arg_8h_00 = *piVar1;\n            }\n            fcn.00405ae6(arg_8h_00, *(in_ECX + 0x18), arg_8h + arg_ch, arg_14h);\n            *(in_ECX + 0x14) = arg_14h;\n            if (0xf < *(in_ECX + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + arg_14h) = 0;\n        }\n        return;\n    }\n    fcn.00403240(arg_14h + arg_ch, 0xffffffff);\n    fcn.00403240(0, arg_ch);\n    return;\n}\n",
        "token_count": 579
    },
    "00403160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403160(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t *arg_8h_00;\n    int32_t in_ECX;\n    uint *puVar3;\n    int32_t *piVar4;\n    \n    if (arg_8h != NULL) {\n        uVar1 = *(in_ECX + 0x18);\n        puVar2 = in_ECX + 4;\n        puVar3 = puVar2;\n        if (0xf < uVar1) {\n            puVar3 = *puVar2;\n        }\n        if (puVar3 <= arg_8h) {\n            puVar3 = puVar2;\n            if (0xf < uVar1) {\n                puVar3 = *puVar2;\n            }\n            if (arg_8h < *(in_ECX + 0x14) + puVar3) {\n                if (0xf < uVar1) {\n                    puVar2 = *puVar2;\n                }\n                fcn.004027f0(in_ECX, arg_8h - puVar2, arg_ch);\n                return;\n            }\n        }\n    }\n    if (arg_ch == 0xffffffff) {\n        fcn.00405163();\n    }\n    if (*(in_ECX + 0x18) < arg_ch) {\n        fcn.00404110(arg_ch, *(in_ECX + 0x14));\n    }\n    else if (arg_ch == 0) {\n        *(in_ECX + 0x14) = 0;\n        if (*(in_ECX + 0x18) < 0x10) {\n            *(in_ECX + 4) = 0;\n            return;\n        }\n        **(in_ECX + 4) = 0;\n        return;\n    }\n    if (arg_ch != 0) {\n        piVar4 = in_ECX + 4;\n        arg_8h_00 = piVar4;\n        if (0xf < *(in_ECX + 0x18)) {\n            arg_8h_00 = *piVar4;\n        }\n        fcn.00405ae6(arg_8h_00, *(in_ECX + 0x18), arg_8h, arg_ch);\n        *(in_ECX + 0x14) = arg_ch;\n        if (0xf < *(in_ECX + 0x18)) {\n            piVar4 = *piVar4;\n        }\n        *(piVar4 + arg_ch) = 0;\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "00403240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403240(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.0040519b();\n    }\n    uVar1 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar1 < arg_ch) {\n        arg_ch = uVar1;\n    }\n    if (arg_ch != 0) {\n        if (*(in_ECX + 0x18) < 0x10) {\n            iVar2 = in_ECX + 4;\n            iVar3 = in_ECX + 4;\n        }\n        else {\n            iVar2 = *(in_ECX + 4);\n            iVar3 = *(in_ECX + 4);\n        }\n        fcn.004055f7(iVar3 + arg_8h, *(in_ECX + 0x18) - arg_8h, iVar2 + arg_8h + arg_ch, uVar1 - arg_ch);\n        iVar2 = *(in_ECX + 0x14) - arg_ch;\n        *(in_ECX + 0x14) = iVar2;\n        if (0xf < *(in_ECX + 0x18)) {\n            *(*(in_ECX + 4) + iVar2) = 0;\n            return;\n        }\n        *(in_ECX + 4 + iVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00403340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403340(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    *(unaff_EDI + *(*unaff_EDI + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    unaff_EDI[1] = 0;\n    iVar1 = *(*unaff_EDI + 4);\n    fcn.00401680();\n    *(unaff_EDI + iVar1 + 0x28) = arg_8h;\n    *(unaff_EDI + iVar1 + 0x2c) = 0;\n    uVar2 = fcn.00404490();\n    *(unaff_EDI + iVar1 + 0x30) = uVar2;\n    if ((*(unaff_EDI + iVar1 + 0x28) == 0) &&\n       (uVar3 = *(unaff_EDI + iVar1 + 8) & 0x17 | 4,  *(unaff_EDI + iVar1 + 8) = uVar3, \n       (*(unaff_EDI + iVar1 + 0xc) & uVar3) != 0)) {\n        fcn.004015b0(0);\n    }\n    *(unaff_EDI + iVar1 + 4) = 0;\n    return;\n}\n",
        "token_count": 323
    },
    "00403990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403990(uint param_1, uint32_t param_2)\n\n{\n    uchar *in_EAX;\n    char *pcVar1;\n    uint8_t *puVar2;\n    char *unaff_EDI;\n    \n    *in_EAX = 0x25;\n    pcVar1 = in_EAX + 1;\n    if ((param_2 & 0x20) != 0) {\n        *pcVar1 = '+';\n        pcVar1 = in_EAX + 2;\n    }\n    if ((param_2 & 8) != 0) {\n        *pcVar1 = '#';\n        pcVar1 = pcVar1 + 1;\n    }\n    if (*unaff_EDI == 'L') {\n        *pcVar1 = 'I';\n        pcVar1[1] = '6';\n        pcVar1 = pcVar1 + 2;\n        *pcVar1 = '4';\n    }\n    else {\n        *pcVar1 = *unaff_EDI;\n    }\n    puVar2 = pcVar1 + 1;\n    if ((param_2 & 0xe00) == 0x400) {\n        *puVar2 = 0x6f;\n        pcVar1[2] = '\\0';\n        return;\n    }\n    if ((param_2 & 0xe00) != 0x800) {\n        *puVar2 = unaff_EDI[1];\n        pcVar1[2] = '\\0';\n        return;\n    }\n    *puVar2 = ~(param_2 * '\\b') & 0x20U | 0x58;\n    pcVar1[2] = '\\0';\n    return;\n}\n",
        "token_count": 374
    },
    "00403df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403df0(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (arg_8h != NULL) {\n        uVar4 = *(in_EAX + 0x18);\n        puVar1 = in_EAX + 4;\n        puVar2 = puVar1;\n        if (0xf < uVar4) {\n            puVar2 = *puVar1;\n        }\n        if (puVar2 <= arg_8h) {\n            puVar2 = puVar1;\n            if (0xf < uVar4) {\n                puVar2 = *puVar1;\n            }\n            if (arg_8h < *(in_EAX + 0x14) + puVar2) {\n                if (0xf < uVar4) {\n                    puVar1 = *puVar1;\n                }\n                fcn.00404390(in_EAX, arg_8h - puVar1);\n                return;\n            }\n        }\n    }\n    uVar4 = *(in_EAX + 0x14);\n    if ((-uVar4 - 1 <= arg_ch) || (uVar4 + arg_ch < uVar4)) {\n        fcn.00405163();\n    }\n    if (arg_ch != 0) {\n        uVar4 = *(in_EAX + 0x14) + arg_ch;\n        if (uVar4 == 0xffffffff) {\n            fcn.00405163();\n        }\n        if (*(in_EAX + 0x18) < uVar4) {\n            fcn.00404110(uVar4, *(in_EAX + 0x14));\n        }\n        else if (uVar4 == 0) {\n            *(in_EAX + 0x14) = 0;\n            if (*(in_EAX + 0x18) < 0x10) {\n                *(in_EAX + 4) = 0;\n                return;\n            }\n            **(in_EAX + 4) = 0;\n            return;\n        }\n        if (uVar4 != 0) {\n            if (*(in_EAX + 0x18) < 0x10) {\n                iVar3 = in_EAX + 4;\n            }\n            else {\n                iVar3 = *(in_EAX + 4);\n            }\n            fcn.00405ae6(*(in_EAX + 0x14) + iVar3, *(in_EAX + 0x18) - *(in_EAX + 0x14), arg_8h, arg_ch);\n            *(in_EAX + 0x14) = uVar4;\n            if (0xf < *(in_EAX + 0x18)) {\n                *(*(in_EAX + 4) + uVar4) = 0;\n                return;\n            }\n            *(in_EAX + 4 + uVar4) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 675
    },
    "004042d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004042d0(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    char in_AL;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_8h;\n    \n    while( true ) {\n        iVar2 = fcn.00405890(in_ECX, 0, arg_ch);\n        iVar3 = arg_ch;\n        if (iVar2 != 0) {\n            iVar3 = iVar2 - in_ECX;\n        }\n        puVar4 = fcn.00404260(&var_8h, arg_10h, arg_14h);\n        arg_10h = *puVar4;\n        arg_14h = puVar4[1];\n        if (arg_ch - iVar3 == 0) break;\n        if (in_AL != '\\0') {\n            puVar4 = fcn.00403c50(*puVar4, puVar4[1]);\n            arg_10h = *puVar4;\n            arg_14h = puVar4[1];\n        }\n        in_ECX = in_ECX + iVar3 + 1;\n        arg_ch = (arg_ch - iVar3) + -1;\n    }\n    uVar1 = *puVar4;\n    arg_8h[1] = puVar4[1];\n    *arg_8h = uVar1;\n    return arg_8h;\n}\n",
        "token_count": 347
    },
    "00404390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404390(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.0040519b();\n    }\n    uVar1 = *(arg_8h + 0x14) - arg_ch;\n    if (uVar1 < in_EAX) {\n        in_EAX = uVar1;\n    }\n    uVar1 = *(unaff_ESI + 0x14);\n    if ((-uVar1 - 1 <= in_EAX) || (uVar1 + in_EAX < uVar1)) {\n        fcn.00405163();\n    }\n    if (in_EAX != 0) {\n        uVar1 = *(unaff_ESI + 0x14) + in_EAX;\n        if (uVar1 == 0xffffffff) {\n            fcn.00405163();\n        }\n        if (*(unaff_ESI + 0x18) < uVar1) {\n            fcn.00404110(uVar1, *(unaff_ESI + 0x14));\n        }\n        else if (uVar1 == 0) {\n            *(unaff_ESI + 0x14) = 0;\n            if (0xf < *(unaff_ESI + 0x18)) {\n                **(unaff_ESI + 4) = 0;\n                return;\n            }\n            *(unaff_ESI + 4) = 0;\n            return;\n        }\n        if (uVar1 != 0) {\n            if (*(arg_8h + 0x18) < 0x10) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            if (*(unaff_ESI + 0x18) < 0x10) {\n                iVar2 = unaff_ESI + 4;\n            }\n            else {\n                iVar2 = *(unaff_ESI + 4);\n            }\n            fcn.00405ae6(*(unaff_ESI + 0x14) + iVar2, *(unaff_ESI + 0x18) - *(unaff_ESI + 0x14), arg_8h + arg_ch, in_EAX\n                        );\n            *(unaff_ESI + 0x14) = uVar1;\n            if (0xf < *(unaff_ESI + 0x18)) {\n                *(*(unaff_ESI + 4) + uVar1) = 0;\n                return;\n            }\n            *(unaff_ESI + 4 + uVar1) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 633
    },
    "00404a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404a40(int32_t param_1)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    char *pcVar7;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x416b00;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puVar2 = fcn.0040593d();\n    *(var_8h + 8) = 0;\n    *(var_8h + 0x10) = 0;\n    *(var_8h + 0x14) = 0;\n    var_4h = 0;\n    fcn.00404b80();\n    uVar3 = fcn.00404b50();\n    *(var_8h + 8) = uVar3;\n    fcn.00404b80();\n    uVar3 = fcn.00404b50();\n    *(var_8h + 0x10) = uVar3;\n    fcn.00404b80();\n    uVar3 = fcn.00404b50();\n    *(var_8h + 0x14) = uVar3;\n    var_4h = 0xffffffff;\n    fcn.00404b80();\n    *(var_8h + 0xc) = **puVar2;\n    fcn.00404b80();\n    *(var_8h + 0xd) = *puVar2[1];\n    fcn.00404b80();\n    puVar6 = 0x419571;\n    pcVar1 = 0x419571;\n    do {\n        pcVar7 = pcVar1;\n        pcVar1 = pcVar7 + 1;\n    } while (*pcVar7 != '\\0');\n    pcVar7 = pcVar7 + -0x419570;\n    puVar4 = fcn.0040528f(pcVar7);\n    puVar5 = puVar4;\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *puVar5 = *puVar6;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    *(var_8h + 8) = puVar4;\n    fcn.00404b80();\n    *(var_8h + 0xc) = 0x2e;\n    fcn.00404b80();\n    *(var_8h + 0xd) = 0x2c;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 641
    },
    "00404b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404b50(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar2 = in_EAX;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    pcVar2 = pcVar2 + (1 - (in_EAX + 1));\n    pcVar3 = fcn.0040528f(pcVar2);\n    for (; pcVar2 != NULL; pcVar2 = pcVar2 + -1) {\n        *pcVar3 = *in_EAX;\n        pcVar3 = pcVar3 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "004051d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004051d3(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00406985(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.004056d5(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.std::logic_error.0;\n    fcn.00401af0(arg_8h_00 + 0xc);\n    fcn.004069ee();\n    return;\n}\n",
        "token_count": 198
    },
    "0040b39f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b39f(uint arg_8h)\n\n{\n    fcn.0040b273(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "0040bd50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040bd64)\n// WARNING: Removing unreachable block (ram,0x0040bd6a)\n// WARNING: Removing unreachable block (ram,0x0040bd6c)\n\nvoid fcn.0040bd50(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "0040661d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040661d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004086a8(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00401130": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401130(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.004056d5(arg_8h);\n    *in_ECX = vtable.std::runtime_error.0;\n    in_ECX[9] = 0xf;\n    in_ECX[8] = NULL;\n    *(in_ECX + 4) = 0;\n    fcn.004027f0(arg_8h + 0xc, 0, 0xffffffff);\n    return;\n}\n",
        "token_count": 118
    },
    "00401530": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401530(uint arg_8h)\n\n{\n    code **unaff_ESI;\n    \n    fcn.00405654();\n    *unaff_ESI = vtable.std::runtime_error.0;\n    unaff_ESI[8] = NULL;\n    unaff_ESI[9] = 0xf;\n    *(unaff_ESI + 4) = 0;\n    fcn.004027f0(arg_8h, 0, 0xffffffff);\n    *unaff_ESI = vtable.std::ios_base::failure.0;\n    return;\n}\n",
        "token_count": 130
    },
    "00401750": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401750(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.004056d5(arg_8h);\n    *in_ECX = vtable.std::runtime_error.0;\n    in_ECX[9] = 0xf;\n    in_ECX[8] = NULL;\n    *(in_ECX + 4) = 0;\n    fcn.004027f0(arg_8h + 0xc, 0, 0xffffffff);\n    *in_ECX = vtable.std::ios_base::failure.0;\n    return;\n}\n",
        "token_count": 135
    },
    "00401ab0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ab0(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x18) = 0xf;\n    *(in_ECX + 0x14) = 0;\n    *(in_ECX + 4) = 0;\n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403160(arg_8h, pcVar2 - (arg_8h + 1));\n    return;\n}\n",
        "token_count": 160
    },
    "00401af0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401af0(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x14) = 0;\n    *(in_ECX + 0x18) = 0xf;\n    *(in_ECX + 4) = 0;\n    fcn.004027f0(arg_8h, 0, 0xffffffff);\n    return;\n}\n",
        "token_count": 95
    },
    "004015b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004015b0(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    code *var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h != '\\0') {\n        fcn.00406a02(0, 0);\n        in_ECX = extraout_ECX;\n    }\n    uVar2 = *(in_ECX + 0xc) & *(in_ECX + 8);\n    if ((uVar2 & 4) != 0) {\n        var_8h = 0xf;\n        var_ch = 0;\n        var_1ch._0_1_ = 0;\n        fcn.00403160(\"ios_base::badbit set\", 0x14);\n        fcn.00405654();\n        var_48h = vtable.std::runtime_error.0;\n        var_24h = 0xf;\n        var_28h = 0;\n        var_38h._0_1_ = 0;\n        fcn.004027f0(&var_20h, 0, 0xffffffff);\n        var_48h = vtable.std::ios_base::failure.0;\n        uVar2 = fcn.00406a02(&var_48h, 0x41a7b0);\n    }\n    if ((uVar2 & 2) != 0) {\n        fcn.00401ab0(\"ios_base::failbit set\");\n        fcn.00401530(&var_20h);\n        fcn.00406a02(&var_48h, 0x41a7b0);\n    }\n    fcn.00401ab0(\"ios_base::eofbit set\");\n    fcn.00401530(&var_20h);\n    fcn.00406a02(&var_48h, 0x41a7b0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 514
    },
    "00413341": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00413341(void)\n\n{\n    *0x41d074 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "004028e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004028e0(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403160(arg_8h, pcVar2 - (arg_8h + 1));\n    return;\n}\n",
        "token_count": 108
    },
    "0040528f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040528f(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack16 [12];\n    \n    do {\n        iVar2 = fcn.0040973c(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040b087(param_1);\n    } while (iVar2 != 0);\n    if ((*0x41dd4c & 1) == 0) {\n        *0x41dd4c = *0x41dd4c | 1;\n        fcn.00405c07();\n        fcn.00406579(0x416ba6);\n    }\n    fcn.00404880(0x41dd40);\n    fcn.00406a02(auStack16, 0x41a820);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 213
    },
    "0040af7a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040af7a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a764(0x41a488, 0xc);\n    fcn.00409c6a(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x41def8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x41def4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040afbe;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00405801(arg_8h_00);\ncode_r0x0040afbe:\n        fcn.00405801(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040afe1();\n    fcn.0040a7a9();\n    return;\n}\n",
        "token_count": 399
    }
}