{
    "0101c12d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101c12d(uint *param_1)\n\n{\n    *param_1 = 0x10058e0;\n    if (param_1[2] != 0) {\n        fcn.0101c5a9(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "010102f1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.010102f1(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = 0x14c8;\n    if (*0x1044023 <= arg_8h) {\n        iVar1 = (*0x104403c - arg_8h) + -2;\n        *0x1044018 = *0x104403c;\n    }\n    if (*0x1044027 == '\\0') {\n        uVar2 = arg_8h + (iVar1 - *0x1044038);\n    }\n    else {\n        *0x1044038 = *0x1044038 + (iVar1 - arg_8h) + -0x59;\n        uVar2 = arg_8h;\n    }\n    if (*0x1044023 <= uVar2) {\n        iVar1 = (*0x104403c - uVar2) + -2;\n        *0x1044018 = *0x104403c;\n    }\n    if (*0x1044027 != '\\0') {\n        *0x1044038 = *0x1044038 + (iVar1 - uVar2) + -0x59;\n    }\n    *0x104403c = *0x104403c * iVar1 * 0xd8df;\n    return arg_8h;\n}\n",
        "token_count": 308
    },
    "01010442": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __cdecl fcn.01010442(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*0x104400c == 0) && (*0x1044008 <= *0x104403c)) {\n        *0x104403c = *0x104403c - ((arg_8h + 0x59) - *0x1044008);\n        *0x104401d = *0x104401d + arg_8h;\n        bVar3 = CARRY4(*0x104403c, *0x1044008);\n        uVar1 = *0x104403c + *0x1044008;\n        *0x1044008 = uVar1 - arg_8h;\n        *0x104400c = bVar3 - (uVar1 < arg_8h);\n    }\n    *0x1044010 = (*0x104403c + 0x48) - *0x1044008;\n    if (*0x1044018 == 0xff) {\n        *0x1044038 = *0x1044038 + *0x104401a;\n        *0x104403c = *0x1044038 + 0x1f + *0x1044038;\n    }\n    *0x1044038 = fcn.010102f1(*0x1044004);\n    if (*0x1044027 == '\\0') {\n        *0x1044004 = (*0x104403c + *0x1044004) - *0x1044008;\n    }\n    else {\n        uVar1 = (*0x1044004 + 0x59) - *0x104403c;\n        bVar3 = *0x1044008 < uVar1;\n        *0x1044008 = *0x1044008 - uVar1;\n        *0x104400c = *0x104400c - bVar3;\n    }\n    var_10h = *0x1044008 * 2 + 0x48 + *0x1044004 * -2;\n    *0x1044010 = (*0x104403c + 0x48) - *0x1044008;\n    if (*0x1044038 <= *0x104403c) {\n        *0x104403c = *0x104403c - ((*0x1044008 + 0x59) - *0x1044038);\n        *0x104401d = *0x104401d + *0x1044008;\n        *0x1044038 = (*0x1044038 + *0x104403c) - *0x1044008;\n    }\n    *0x1044038 = fcn.010102f1(*0x1044004);\n    iVar5 = CONCAT44(*0x104400c, *0x1044008);\n    if (*0x104401f - *0x1044019 == 0x212) {\n        uVar4 = fcn.0101c7d0(*0x1044008, *0x104400c, 0xd8df, 0);\n        iVar5 = fcn.0101c7d0(uVar4, *0x1044008, *0x104400c);\n        *0x104403c = *0x1044004 + 0x1f + iVar5;\n    }\n    else {\n        *0x104401d = *0x1044004 + 'R' + *0x1044008 + *0x104401d * '\\x02';\n        *0x104403c = *0x1044008 * 2 + 0x1f;\n    }\n    *0x1044008 = iVar5 + 0x2400;\n    uVar1 = *0x1044008;\n    if ((*0x1044008 >> 0x20 == 0) && (uVar1 <= *0x1044010)) {\n        *0x1044010 = *0x1044010 - ((arg_8h + 0x59) - uVar1);\n        *0x104401d = *0x104401d + arg_8h;\n        *0x1044008 = CONCAT44(CARRY4(*0x1044010, uVar1) - (*0x1044010 + uVar1 < arg_8h), (*0x1044010 + uVar1) - arg_8h);\n    }\n    var_4h = 0x19;\n    while( true ) {\n        *0x104400c = *0x1044008 >> 0x20;\n        if (var_4h < 3) break;\n        if (var_10h != *0x1044025) {\n            iVar2 = (*0x104403c + -2) - var_10h;\n            *(var_4h + 0x1044024) = *(var_4h + 0x1044024) - iVar2;\n            var_10h = iVar2 + 0x1f + *0x104403c;\n        }\n        var_4h = var_4h + -2;\n    }\n    *0x104403c = *0x104403c + *0x1044010 + 0xc + *0x1044008;\n    if (*0x1044027 == '\\0') {\n        *0x1044008 = CONCAT44((*0x104400c + CARRY4(*0x104403c, *0x1044008)) - (*0x104403c + *0x1044008 < *0x1044038), \n                              (*0x104403c + *0x1044008) - *0x1044038);\n    }\n    else {\n        *0x1044038 = *0x1044038 - ((*0x1044008 + 'Y') - *0x104403c);\n    }\n    *0x104400c = *0x1044008 >> 0x20;\n    uVar1 = 0;\n    if ((*0x104400c != 0) || (*0x1044023 <= *0x1044008)) {\n        *0x1044018 = *0x1044038;\n        uVar1 = *0x1044038 - 2;\n        *0x104403c = uVar1 - *0x1044008;\n        uVar1 = ((uVar1 >> 0x1f) - *0x104400c) - (uVar1 < *0x1044008);\n    }\n    if (*0x1044038 <= *0x104403c) {\n        *0x104403c = *0x104403c - ((*0x1044038 + 0x59) - *0x1044038);\n        *0x104401d = *0x104401d + *0x1044038;\n        *0x1044038 = *0x104403c;\n    }\n    return *0x1044008 & 0xffffffff | uVar1 << 0x20;\n}\n",
        "token_count": 1693
    },
    "01010c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.01010c14(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    *0x1044010 = *0x1044008 + *0x1044010 * 2 + -0xa3ae + *0x1044004;\n    if ((*0x104400c != 0) || (*0x1044010 <= *0x1044008)) {\n        *0x1044008 = *0x1044010 - 0x59;\n        *0x104400c = (0x58 < *0x1044010) - 1;\n        *0x104401d = *0x104401d + *0x1044008;\n    }\n    uVar3 = 0x75f;\n    do {\n        *0x104403c = *0x104403c + (*0x1044004 - *0x1044038);\n        piVar1 = *0x104d2d4 + -0x75f + uVar3;\n        iVar2 = *piVar1;\n        if (*0x1044018 == -1) {\n            *0x1044004 = *0x1044004 + *0x104401a;\n        }\n        iVar4 = fcn.0101c7d0();\n        *0x104df78 = iVar2 + 0x1008da4;\n        *0x1044008 = iVar4;\n        *piVar1 = *0x104df78;\n        *0x1044034 = (*0x1044008 - *0x104403c) - 2;\n        uVar3 = uVar3 + 4;\n    } while (uVar3 < 0x87f);\n    if (*0x1044027 == '\\0') {\n        *0x1044008 = *0x1044008 + CONCAT44(-(*0x1044034 < *0x1044010), *0x1044034 - *0x1044010);\n    }\n    else {\n        *0x1044010 = (*0x1044010 - 0x59) + (*0x1044034 - *0x1044008);\n    }\n    *0x104400c = *0x1044008 >> 0x20;\n    if (*0x104401f - *0x1044019 == 0x212) {\n        *0x1044010 = *0x1044010 * *0x1044010 * 0xd8df;\n        *0x1044034 = *0x104403c + 0x1f + *0x1044010;\n    }\n    else {\n        *0x104401d = (*0x104401d + ')') * '\\x02' + *0x1044010 + *0x104403c;\n        *0x1044034 = *0x1044010 * 2 + 0x1f;\n    }\n    return;\n}\n",
        "token_count": 671
    },
    "01010f9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.01010f9c(uint32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0x19;\n    iVar2 = 0x3cf;\n    do {\n        if (param_1 != *0x1044015) {\n            *(iVar4 + 0x1044014) = *(iVar4 + 0x1044014) - param_1;\n            iVar2 = *0x104403c + 0x1f + param_1;\n        }\n        iVar4 = iVar4 + -2;\n    } while (2 < iVar4);\n    cVar1 = *0x104403c;\n    iVar4 = 3;\n    do {\n        if ((*0x104403c != *0x104401b) &&\n           (*0x104403c = *0x1044034 + 0x1f + *(iVar4 + 0x1044014) * *0x104403c,  *0x1044034 == *0x104401d)) break;\n        iVar4 = iVar4 + 2;\n    } while (iVar4 < 0x23);\n    iVar4 = (param_1 & 0xff) + iVar2 + -0xa3ae + *0x104403c * 2;\n    if (*0x1044027 == '\\0') {\n        param_1 = param_1 + (iVar2 - iVar4);\n    }\n    else {\n        iVar4 = iVar4 + -0x59 + (iVar2 - param_1);\n    }\n    iVar3 = iVar2 * param_1 * 0xd8df;\n    *0x104403c = *0x1044038 * '\\x02' + cVar1 * '\\x02' + iVar2 + iVar4 + 0xb0 + iVar2 * param_1 * -0xd8df + 0x48;\n    *0x1044034 = (iVar3 - param_1) + -2;\n    *0x1044038 = (*0x104403c - iVar3) + -2;\n    return;\n}\n",
        "token_count": 482
    },
    "01011079": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.01011079(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t unaff_ESI;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char cVar5;\n    \n    *0x1044038 = *0x1044038 + (*0x104403c - *0x1044010) + -0x59;\n    if (*0x1044023 <= param_1) {\n        *0x1044010 = (*0x1044038 - param_1) - 2;\n        *0x1044018 = *0x1044038;\n    }\n    uVar2 = *0x1044010;\n    iVar3 = *0x104403c + -0xa3ae;\n    iVar1 = fcn.0101c7d0(*0x1044008, *0x104400c, 2, 0);\n    iVar3 = iVar3 + iVar1;\n    if (*0x1044027 == '\\0') {\n        unaff_ESI = unaff_ESI + (uVar2 - *0x104403c);\n    }\n    if (*0x1044038 <= uVar2) {\n        *0x104401d = *0x104401d + unaff_ESI;\n        uVar2 = (uVar2 - 0x59) + (*0x1044038 - unaff_ESI);\n        *0x1044038 = *0x1044038 + (uVar2 - unaff_ESI);\n        *0x1044010 = uVar2;\n    }\n    if (*0x1044027 == '\\0') {\n        unaff_ESI = unaff_ESI + (uVar2 - (iVar3 + 0x48));\n    }\n    if (*0x1044018 == 0xff) {\n        *0x1044038 = *0x1044038 + *0x104401a;\n        uVar2 = *0x1044038 * 2 + 0x1f;\n        *0x1044010 = uVar2;\n    }\n    uVar4 = iVar3 - 8;\n    cVar5 = unaff_ESI;\n    if (uVar4 <= uVar2) {\n        *0x104401d = *0x104401d + cVar5;\n        uVar2 = (uVar2 - 0x59) + (uVar4 - unaff_ESI);\n        uVar4 = (uVar4 - unaff_ESI) + uVar2;\n        *0x1044010 = uVar2;\n    }\n    *0x1044038 = *0x1044038 + (uVar4 - uVar2) + -0x59;\n    if (*0x1044038 <= uVar2) {\n        *0x104401d = *0x104401d + cVar5;\n        uVar2 = (uVar2 - 0x59) + (*0x1044038 - unaff_ESI);\n        *0x1044038 = *0x1044038 + (uVar2 - cVar5);\n        *0x1044010 = uVar2;\n    }\n    uVar4 = *0x1044038;\n    iVar3 = uVar4 - uVar2;\n    *0x104403c = iVar3 + 0x48;\n    uVar2 = (param_1 - *0x104403c) + 0x59;\n    param_1 = iVar3 + 0x67 + param_1;\n    *0x1044008 = param_1 - uVar2;\n    *0x104400c = -(param_1 < uVar2);\n    *0x104df80 = 0x19;\n    do {\n        if (unaff_ESI != *0x1044015) {\n            *(*0x104df80 + 0x1044014) = *(*0x104df80 + 0x1044014) - cVar5;\n            *0x1044010 = uVar4 + 0x1f + unaff_ESI;\n        }\n        *0x104df80 = *0x104df80 + -2;\n    } while (2 < *0x104df80);\n    return;\n}\n",
        "token_count": 954
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.ready.dll_Lotexcite(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x1044008;\n    *0x1044010 = *0x1044010 + -0x59 + (*0x1044038 - *0x1044004);\n    *0x1044034 = (*0x104403c - *0x1044010) + -2;\n    if (*0x1044033 <= *0x1044010) {\n        *0x1044028 = *0x1044008;\n    }\n    *0x1044038 = *0x1044010 + *0x1044008 + '\\x1f';\n    *0x1044004 = fcn.01010f9c(*0x1044008);\n    *0x1044034 = (*0x104403c - *0x1044004) - 2;\n    if (*0x1044018 == -1) {\n        *0x1044034 = *0x1044034 + *0x104401a;\n        *0x104403c = *0x1044034 * 2 + 0x1f;\n    }\n    if (*0x1044027 != '\\0') {\n        *0x1044034 = (*0x1044034 - 0x59) + (*0x104403c - uVar1);\n        return;\n    }\n    *0x104400c = (*0x104400c - (*0x104403c < *0x1044034)) + CARRY4(uVar1, *0x104403c - *0x1044034);\n    *0x1044008 = uVar1 + (*0x104403c - *0x1044034);\n    return;\n}\n",
        "token_count": 395
    },
    "0101138a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0101138a(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (param_2 != NULL) {\n        in_EAX = param_1 + 4;\n        puVar1 = in_EAX;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= param_2) {\n            if (0xf < *(param_1 + 0x18)) {\n                in_EAX = *in_EAX;\n            }\n            if (param_2 < *(param_1 + 0x14) + in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 199
    },
    "01011a65": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.01011a65(char **param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    \n    uVar5 = 0;\n    cVar2 = **param_1;\n    while ((cVar2 != '\\0' && (iVar3 = fcn.0101d084((*param_1)[uVar5]),  iVar3 != 0))) {\n        uVar5 = uVar5 + 1;\n        cVar2 = (*param_1)[uVar5];\n    }\n    if (((*param_1)[uVar5] < '0') || ('9' < (*param_1)[uVar5])) {\n        uVar4 = 0;\n    }\n    else {\n        *param_2 = 0;\n        uVar1 = uVar5 + 3;\n        for (; ((uVar5 < uVar1 && (cVar2 = (*param_1)[uVar5],  '/' < cVar2)) && (cVar2 < ':')); uVar5 = uVar5 + 1) {\n            *param_2 = *param_2 * 10 + -0x30 + cVar2;\n        }\n        while (((*param_1)[uVar5] != '\\0' && (iVar3 = fcn.0101d084((*param_1)[uVar5]),  iVar3 != 0))) {\n            uVar5 = uVar5 + 1;\n        }\n        *param_1 = *param_1 + uVar5;\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 379
    },
    "01011b39": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.01011b39(int32_t param_1, uint param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t arg_ch;\n    \n    iVar1 = *(param_1 + 0x10);\n    iVar5 = iVar1;\n    if (iVar1 < 8) {\n        iVar5 = 8;\n    }\n    iVar2 = param_4 + param_3 + *(param_1 + 8);\n    arg_ch = iVar5;\n    if ((iVar5 < iVar2) && (arg_ch = iVar5 * 2,  iVar2 != arg_ch && SBORROW4(iVar2, arg_ch) == iVar2 + iVar5 * -2 < 0))\n    {\n        uVar3 = iVar2 + 0xbU & 0x80000007;\n        if (uVar3 < 0) {\n            uVar3 = (uVar3 - 1 | 0xfffffff8) + 1;\n        }\n        arg_ch = (iVar2 + 0xbU) - uVar3;\n    }\n    if (iVar1 < arg_ch) {\n        uVar4 = fcn.0101cb15(*(param_1 + 0xc), arg_ch);\n        *(param_1 + 0xc) = uVar4;\n        *(param_1 + 4) = uVar4;\n        *(param_1 + 0x10) = arg_ch;\n    }\n    fcn.0101d3f0(*(param_1 + 0xc) + *(param_1 + 8), param_2, param_3);\n    *(param_1 + 8) = *(param_1 + 8) + param_3;\n    if (0 < param_4) {\n        *(*(param_1 + 8) + *(param_1 + 0xc)) = 0;\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "01011f6b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01011f6b(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = *(arg_8h + 0x3c);\n    uVar3 = *(arg_8h + 0x1c);\n    if (*(in_ECX + 8) == 0) {\n        iVar5 = (****(in_ECX + 4))(arg_8h);\n        uVar4 = iVar5 == 0;\n    }\n    else {\n        uVar4 = (****(in_ECX + 4))();\n    }\n    *(arg_8h + 8) = uVar1;\n    *(arg_8h + 0x3c) = uVar2;\n    if (uVar4 == 0) {\n        *(arg_8h + 0x1c) = uVar3;\n    }\n    else {\n        fcn.01012120(uVar3);\n    }\n    return uVar4;\n}\n",
        "token_count": 275
    },
    "01012010": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.01012010(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_3 + 0x1c) <= *param_2) {\n        *param_2 = *(param_3 + 0x1c) + -4;\n    }\n    iVar1 = *param_2;\n    while( true ) {\n        if (iVar1 < 0) {\n            return 0;\n        }\n        if (*(*(param_3 + 0x20) + *param_2 * 4) == *(param_1 + 4)) break;\n        iVar1 = *param_2 + -4;\n        *param_2 = iVar1;\n    }\n    return 1;\n}\n",
        "token_count": 179
    },
    "0101287b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0101287b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 4);\n    if (((-1 < iVar3) && (iVar3 < *(arg_8h + 0x30))) && (iVar3 = *(*(arg_8h + 0x34) + iVar3 * 4),  -1 < iVar3)) {\n        iVar2 = *(*(arg_8h + 0x20) + 4 + iVar3 * 4);\n        iVar3 = *(*(arg_8h + 0x20) + 8 + iVar3 * 4);\n        if (iVar3 < 0) {\n            iVar3 = *(arg_8h + 0x3c);\n        }\n        iVar1 = iVar3;\n        if (iVar3 <= iVar2) {\n            iVar1 = iVar2;\n            iVar2 = iVar3;\n        }\n        iVar3 = *(arg_8h + 0x3c);\n        iVar1 = iVar1 - iVar2;\n        if (*(in_ECX + 8) == 0) {\n            if (iVar1 + iVar3 <= *(arg_8h + 0x50)) {\n                if (*(in_ECX + 0xc) == 0) {\n                    iVar2 = fcn.010121e3(*(arg_8h + 0x4c) + iVar3);\n                }\n                else {\n                    iVar2 = fcn.01011797();\n                }\n                bVar4 = iVar2 == 0;\n                if (!bVar4) {\n                    return bVar4;\n                }\n                fcn.01012120(iVar3);\n                *(arg_8h + 0x3c) = *(arg_8h + 0x3c) + iVar1;\n                return bVar4;\n            }\n        }\n        else if (iVar1 <= iVar3) {\n            if (*(in_ECX + 0xc) == 0) {\n                iVar2 = fcn.010121e3((iVar3 - iVar1) + *(arg_8h + 0x4c));\n            }\n            else {\n                iVar2 = fcn.01011797();\n            }\n            bVar4 = iVar2 == 0;\n            if (!bVar4) {\n                return bVar4;\n            }\n            fcn.01012120(iVar3);\n            *(arg_8h + 0x3c) = *(arg_8h + 0x3c) - iVar1;\n            return bVar4;\n        }\n    }\n    return false;\n}\n",
        "token_count": 624
    },
    "01012a43": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01012a43(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h;\n    var_4h = in_ECX;\n    fcn.01011f4a(&arg_8h);\n    fcn.01011f4a(&var_4h);\n    if (arg_8h == 0) {\n        if (*(in_ECX + 0x24) == 0) goto code_r0x01012a70;\n        piVar2 = *(in_ECX + 0x24);\n    }\n    else {\n        if (*(in_ECX + 0x20) == 0) {\ncode_r0x01012a70:\n            iVar3 = 0;\n            goto code_r0x01012a72;\n        }\n        piVar2 = *(in_ECX + 0x20);\n    }\n    iVar3 = (**(*piVar2 + 4))(iVar1);\n    if (iVar3 != 0) {\n        fcn.01012120(var_4h);\n        fcn.01012120(arg_8h);\n        return iVar3;\n    }\ncode_r0x01012a72:\n    *(iVar1 + 0x1c) = var_4h;\n    return iVar3;\n}\n",
        "token_count": 322
    },
    "01012c0b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01012c0b(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    \n    iVar2 = arg_8h;\n    iVar4 = *(in_ECX + 4);\n    if (-1 < iVar4) {\n        if (*(in_ECX + 8) == 0) {\n            fcn.01011833(iVar4, 0xffffffff);\n            iVar4 = *(iVar2 + 0x34);\n            arg_8h = *(iVar4 + *(in_ECX + 4) * 4);\n            iVar3 = fcn.01012010(&arg_8h, iVar2);\n            if ((iVar3 == 0) || (-1 < *(*(iVar2 + 0x20) + 8 + arg_8h * 4))) {\n                *(iVar4 + *(in_ECX + 4) * 4) = *(iVar2 + 0x1c);\n                fcn.01012120(*(in_ECX + 4));\n                fcn.01012120(*(iVar2 + 0x3c));\n                fcn.01012120(0xffffffff);\n                fcn.01012120(0);\n            }\n            else {\n                piVar1 = *(iVar2 + 0x20) + 0xc + arg_8h * 4;\n                *piVar1 = *piVar1 + -1;\n            }\n        }\n        else {\n            arg_8h = *(*(arg_8h + 0x34) + iVar4 * 4);\n            iVar4 = fcn.01012010(&arg_8h, iVar2);\n            if (iVar4 != 0) {\n                iVar4 = arg_8h * 4 + 0xc;\n                piVar1 = iVar4 + *(iVar2 + 0x20);\n                if (*piVar1 < 0) {\n                    *piVar1 = *piVar1 + 1;\n                }\n                else {\n                    *(*(iVar2 + 0x20) + 8 + arg_8h * 4) = *(iVar2 + 0x3c);\n                    *(iVar4 + *(iVar2 + 0x20)) = *(iVar2 + 0x48);\n                    *(iVar2 + 0x48) = *(iVar2 + 0x48) + 1;\n                }\n            }\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 562
    },
    "01012ce9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01012ce9(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    \n    iVar3 = arg_8h;\n    iVar2 = *(arg_8h + 0x34);\n    arg_8h = *(iVar2 + *(in_ECX + 4) * 4);\n    iVar4 = fcn.01012010(&arg_8h, iVar3);\n    if (iVar4 != 0) {\n        if (*(in_ECX + 8) == 0) {\n            piVar1 = *(iVar3 + 0x20) + 0xc + arg_8h * 4;\n            if (*piVar1 < 0) {\n                *piVar1 = *piVar1 + 1;\n            }\n            else {\n                *(iVar3 + 0x1c) = *(iVar3 + 0x1c) + -4;\n                fcn.01012010(&arg_8h, iVar3);\n                *(iVar2 + *(in_ECX + 4) * 4) = arg_8h;\n            }\n        }\n        else {\n            piVar1 = *(iVar3 + 0x20) + 8 + arg_8h * 4;\n            if (*piVar1 < 0) {\n                piVar1 = *(iVar3 + 0x20) + 0xc + arg_8h * 4;\n                *piVar1 = *piVar1 + -1;\n            }\n            else {\n                *piVar1 = -1;\n                *(*(iVar3 + 0x20) + 0xc + arg_8h * 4) = 0;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 410
    },
    "01012d6d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.01012d6d(int32_t param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint8_t var_2h;\n    uint var_1h;\n    \n    iVar4 = *(param_1 + 0xd8);\n    if (*(param_1 + 0x94) <= iVar4) {\n        var_20h = var_20h & 0xffffff00;\n        *(param_1 + 200) = var_20h;\n        *(param_1 + 0xcc) = 1;\n        *(param_1 + 0xd0) = iVar4;\n        *(param_1 + 0xd4) = 0;\n        return 1;\n    }\n    var_ch = 1;\n    var_8h = iVar4;\n    var_1h._0_1_ = fcn.010119f2(iVar4);\n    if (*(param_1 + 0xe0) != 0) {\n        if ((var_1h != 0x5c) || (cVar1 = fcn.010119f2(iVar4 + 1),  cVar1 != 'E')) {\n            if (*(param_1 + 0xe4) != NULL) {\n                var_1h._0_1_ = (**(param_1 + 0xe4))(var_1h);\n            }\n            *(param_1 + 0xd8) = *(param_1 + 0xd8) + 1;\n            var_20h = var_20h & 0xffffff00 | var_1h;\n            *(param_1 + 200) = var_20h;\n            *(param_1 + 0xcc) = 0;\n            *(param_1 + 0xd0) = iVar4;\n            *(param_1 + 0xd4) = 1;\n            return 1;\n        }\n        *(param_1 + 0xe4) = 0;\n        *(param_1 + 0xe0) = 0;\n        goto code_r0x01012df2;\n    }\n    iVar3 = var_1h;\n    var_18h = iVar4;\n    if (iVar3 < 0x2f) {\n        if (iVar3 == 0x2e) {\ncode_r0x01013386:\n            iVar3 = *(param_1 + 0xdc);\n            var_20h = var_20h & 0xffffff00 | var_1h;\njoined_r0x01013393:\n            if (iVar3 < 1) goto code_r0x01012f1f;\ncode_r0x01013449:\n            var_14h = 1;\ncode_r0x01013450:\n            var_1ch = 0;\n            var_18h = iVar4;\n        }\n        else {\n            if (iVar3 < 0x25) {\n                if (iVar3 != 0x24) {\n                    if ((iVar3 != 0) && (8 < iVar3)) {\n                        if ((iVar3 < 0xe) || (iVar3 == 0x20)) {\n                            if ((*(param_1 + 4) & 0x20) != 0) {\n                                iVar4 = iVar4 + 1;\n                                goto code_r0x01012df5;\n                            }\n                        }\n                        else if ((iVar3 == 0x23) && ((*(param_1 + 4) & 0x20) != 0)) {\n                            iVar4 = iVar4 + 1;\n                            *(param_1 + 0xd8) = iVar4;\n                            if (*(param_1 + 0x94) <= iVar4) {\n                                return 0;\n                            }\n                            while( true ) {\n                                cVar1 = fcn.010119f2(iVar4);\n                                if (cVar1 == '\\n') {\n                                    return 0;\n                                }\n                                cVar1 = fcn.010119f2();\n                                if (cVar1 == '\\r') break;\n                                iVar4 = iVar4 + 1;\n                                *(param_1 + 0xd8) = iVar4;\n                                if (*(param_1 + 0x94) <= iVar4) {\n                                    return 0;\n                                }\n                            }\n                            return 0;\n                        }\n                    }\n                    goto code_r0x01013441;\n                }\n                goto code_r0x01013386;\n            }\n            if (iVar3 != 0x28) {\n                if (iVar3 < 0x29) {\ncode_r0x01013441:\n                    var_20h = var_20h & 0xffffff00 | var_1h;\n                    goto code_r0x01013449;\n                }\n                if (iVar3 < 0x2c) goto code_r0x01013386;\n                if (iVar3 != 0x2d) goto code_r0x01013441;\n                iVar3 = *(param_1 + 0xdc);\n                var_20h = var_20h & 0xffffff00 | var_1h;\n                goto joined_r0x01013393;\n            }\n            cVar1 = fcn.010119f2(iVar4 + 1);\n            if (cVar1 == '?') {\n                iVar4 = iVar4 + 2;\n                iVar3 = iVar4;\n                cVar1 = fcn.010119f2(iVar4);\n                if (cVar1 == '#') {\n                    *(param_1 + 0xd8) = iVar4;\n                    if (iVar4 < *(param_1 + 0x94)) {\n                        do {\n                            iVar4 = *(param_1 + 0xd8);\n                            iVar3 = iVar4;\n                            cVar1 = fcn.010119f2();\n                            if (cVar1 == ')') break;\n                            iVar4 = iVar4 + 1;\n                            *(param_1 + 0xd8) = iVar4;\n                        } while (iVar4 < *(param_1 + 0x94));\n                    }\n                    var_8h = *(param_1 + 0xd8);\n                    cVar1 = fcn.010119f2(var_8h, iVar3);\n                    if (cVar1 == ')') {\n                        *(param_1 + 0xd8) = var_8h + 1;\n                        return 0;\n                    }\n                    goto code_r0x01013461;\n                }\n            }\n            var_20h = var_20h & 0xffffff00 | var_1h;\n            if (*(param_1 + 0xdc) < 1) {\n                var_1ch = 1;\n                var_18h = var_8h;\n                var_14h = 1;\n            }\n            else {\n                var_1ch = 0;\n                var_18h = var_8h;\n                var_14h = 1;\n            }\n        }\n    }\n    else {\n        if (0x5c < iVar3) {\n            if (iVar3 == 0x5d) {\n                iVar3 = *(param_1 + 0xdc);\n                if (0 < iVar3) {\n                    *(param_1 + 0xdc) = iVar3 + -1;\n                    goto code_r0x010130bb;\n                }\n            }\n            else {\n                if (iVar3 == 0x5e) {\n                    if (*(param_1 + 0xdc) != 0) {\n                        var_20h = CONCAT31(var_20h._1_3_, 0x5b);\n                        var_1ch = 1;\n                        var_18h = 0;\n                        var_14h = 0;\n                        iVar4 = fcn.0101192c(&var_20h);\n                        if (iVar4 == 0) {\n                            var_20h = CONCAT31(var_20h._1_3_, 0x5b);\n                            var_1ch = 1;\n                            var_18h = 0;\n                            var_14h = 0;\n                            iVar4 = fcn.0101192c(&var_20h);\n                            if (iVar4 != 0) {\n                                var_20h = CONCAT31(var_20h._1_3_, 0x3a);\n                                var_1ch = 1;\n                                var_18h = 0;\n                                var_14h = 0;\n                                iVar4 = fcn.0101192c(&var_20h);\n                                if (iVar4 != 0) goto code_r0x0101304b;\n                            }\n                            var_1ch = 0;\n                            var_20h = var_20h & 0xffffff00 | var_1h;\n                            var_14h = 1;\n                            var_18h = var_8h;\n                            goto code_r0x0101345d;\n                        }\n                    }\ncode_r0x0101304b:\n                    var_20h = var_20h & 0xffffff00 | var_1h;\n                    var_1ch = 1;\n                    iVar4 = var_8h;\n                    goto code_r0x01013057;\n                }\n                if (iVar3 - 0x7bU < 3) goto code_r0x01013386;\n            }\n            goto code_r0x01013441;\n        }\n        if (iVar3 == 0x5c) {\n            var_10h = iVar4 + 1;\n            var_2h = fcn.010119f2(var_10h);\n            if (var_2h - 0x30 < 10) {\ncode_r0x010130bb:\n                var_20h = var_20h & 0xffffff00 | var_1h;\n                var_1ch = 1;\ncode_r0x01013057:\n                var_14h = 1;\n                var_18h = iVar4;\n                goto code_r0x0101345d;\n            }\n            iVar3 = var_2h;\n            var_ch = 2;\n            if (iVar3 < 0x65) {\n                if (iVar3 == 100) {\ncode_r0x0101313c:\n                    var_1ch = 1;\n                }\n                else {\n                    if (0x51 < iVar3) {\n                        if (iVar3 != 0x53) {\n                            if (iVar3 == 0x55) {\ncode_r0x010131e3:\n                                if (*(param_1 + 0xe4) == NULL) {\n                                    *(param_1 + 0xe4) = fcn.0101cae9;\n                                }\n                                goto code_r0x010131f3;\n                            }\n                            if ((iVar3 != 0x57) && (iVar3 != 0x5a)) {\n                                if (iVar3 == 0x61) {\n                                    var_20h = CONCAT31(var_20h._1_3_, 7);\n                                    goto code_r0x010131d4;\n                                }\n                                if (iVar3 != 0x62) goto code_r0x0101326c;\n                                var_14h = 2;\n                                if (*(param_1 + 0xdc) == iVar3 + -0x62 || *(param_1 + 0xdc) < iVar3 + -0x62) {\n                                    var_20h = var_20h & 0xffffff00 | var_2h;\n                                    var_1ch = 1;\n                                    goto code_r0x0101345d;\n                                }\n                                var_20h = CONCAT31(var_20h._1_3_, 8);\n                                goto code_r0x01013450;\n                            }\n                        }\n                        goto code_r0x0101313c;\n                    }\n                    if (iVar3 == 0x51) {\ncode_r0x010131f3:\n                        *(param_1 + 0xe0) = 1;\ncode_r0x01012df2:\n                        iVar4 = iVar4 + 2;\ncode_r0x01012df5:\n                        *(param_1 + 0xd8) = iVar4;\n                        return 0;\n                    }\n                    if (iVar3 != 0) {\n                        if (iVar3 < 0x41) {\ncode_r0x0101326c:\n                            var_20h = var_20h & 0xffffff00 | var_2h;\n                            goto code_r0x010131d4;\n                        }\n                        if ((iVar3 < 0x43) || (iVar3 == 0x44)) goto code_r0x0101313c;\n                        if (iVar3 == 0x45) {\n                            *(param_1 + 0xe4) = 0;\n                            *(param_1 + 0xe0) = 0;\n                        }\n                        else {\n                            if (iVar3 != 0x47) {\n                                if (iVar3 == 0x4c) {\n                                    if (*(param_1 + 0xe4) == NULL) {\n                                        *(param_1 + 0xe4) = fcn.0101e03d;\n                                    }\n                                    goto code_r0x010131e3;\n                                }\n                                goto code_r0x0101326c;\n                            }\n                            if (*(param_1 + 0xdc) < 1) goto code_r0x0101313c;\n                        }\n                        goto code_r0x01012df2;\n                    }\n                    if (*(param_1 + 0x94) <= var_10h) {\n                        var_1ch = 0;\n                        var_ch = 1;\n                        var_20h = var_20h & 0xffffff00 | var_1h;\n                        goto code_r0x01013057;\n                    }\n                    var_1ch = 0;\n                }\n                var_20h = var_20h & 0xffffff00 | var_2h;\n                var_14h = 2;\n                goto code_r0x0101345d;\n            }\n            if (iVar3 < 0x74) {\n                if (iVar3 == 0x73) goto code_r0x0101313c;\n                if (iVar3 == 0x65) {\n                    var_20h = CONCAT31(var_20h._1_3_, 0x1b);\n                }\n                else if (iVar3 == 0x66) {\n                    var_20h = CONCAT31(var_20h._1_3_, 0xc);\n                }\n                else {\n                    if ((iVar3 == 0x67) || (iVar3 == 0x6b)) goto code_r0x0101313c;\n                    if (iVar3 == 0x6e) {\n                        var_20h = CONCAT31(var_20h._1_3_, 10);\n                    }\n                    else {\n                        if (iVar3 != 0x72) goto code_r0x0101326c;\n                        var_20h = CONCAT31(var_20h._1_3_, 0xd);\n                    }\n                }\n            }\n            else if (iVar3 == 0x74) {\n                var_20h = CONCAT31(var_20h._1_3_, 9);\n            }\n            else {\n                if (iVar3 == 0x75) {\ncode_r0x010132d9:\n                    cVar1 = fcn.010119f2(iVar4 + 2);\n                    var_ch = 0;\n                    if (cVar1 == '{') {\n                        iVar3 = fcn.01011a09(8, &var_ch);\n                        uVar2 = fcn.01011975(iVar3 + 3 + iVar4);\n                        var_ch = var_ch + 2;\n                        iVar4 = iVar4 + var_ch;\n                        if (iVar4 < *(param_1 + 0x94)) {\n                            do {\n                                if ((iVar4 < *(param_1 + 0x94)) && (*(iVar4 + *(param_1 + 0x90)) == '}')) break;\n                                var_ch = var_ch + 1;\n                                iVar4 = iVar4 + 1;\n                            } while (*(param_1 + 0xd8) + var_ch < *(param_1 + 0x94));\n                        }\n                        var_14h = var_ch + 1;\n                        var_1ch = 0;\n                        var_20h = var_20h & 0xffffff00 | uVar2;\n                        var_18h = var_8h;\n                        var_ch = var_14h;\n                        goto code_r0x0101345d;\n                    }\n                    uVar5 = 4;\ncode_r0x01013296:\n                    var_ch = 0;\n                    iVar3 = fcn.01011a09(uVar5, &var_ch);\n                    uVar2 = fcn.01011975(iVar3 + 2 + iVar4);\n                    var_1ch = 0;\n                    var_14h = var_ch + 2;\n                    if (var_ch < 1) {\n                        uVar2 = var_2h;\n                    }\n                    var_20h = var_20h & 0xffffff00 | uVar2;\n                    var_ch = var_14h;\n                    goto code_r0x0101345d;\n                }\n                if (iVar3 != 0x76) {\n                    if (iVar3 != 0x77) {\n                        if (iVar3 == 0x78) {\n                            cVar1 = fcn.010119f2(iVar4 + 2);\n                            if (cVar1 == '{') goto code_r0x010132d9;\n                            uVar5 = 2;\n                            goto code_r0x01013296;\n                        }\n                        if (iVar3 != 0x7a) goto code_r0x0101326c;\n                    }\n                    goto code_r0x0101313c;\n                }\n                var_20h = CONCAT31(var_20h._1_3_, 0xb);\n            }\ncode_r0x010131d4:\n            var_14h = 2;\n            goto code_r0x01013450;\n        }\n        if (iVar3 != 0x3a) {\n            if (iVar3 == 0x3f) goto code_r0x01013386;\n            if (iVar3 != 0x5b) goto code_r0x01013441;\n            if ((*(param_1 + 0xdc) == 0) ||\n               ((iVar4 + 1 < *(param_1 + 0x94) && (*(iVar4 + 1 + *(param_1 + 0x90)) == ':')))) {\n                *(param_1 + 0xdc) = *(param_1 + 0xdc) + 1;\n                goto code_r0x0101304b;\n            }\n            var_20h = var_20h & 0xffffff00 | var_1h;\n            iVar4 = var_8h;\n            goto code_r0x01013449;\n        }\n        var_18h = 0;\n        var_14h = 0;\n        var_20h._0_1_ = 0x5b;\n        var_1ch = 1;\n        iVar3 = fcn.0101192c(&var_20h);\n        var_20h = CONCAT31(var_20h._1_3_, var_1h);\n        if (iVar3 == 0) goto code_r0x01013449;\ncode_r0x01012f1f:\n        var_14h = 1;\n        var_1ch = 1;\n        var_18h = iVar4;\n    }\ncode_r0x0101345d:\n    *(param_1 + 200) = var_20h;\n    *(param_1 + 0xcc) = var_1ch;\n    *(param_1 + 0xd0) = var_18h;\n    *(param_1 + 0xd4) = var_14h;\ncode_r0x01013461:\n    *(param_1 + 0xd8) = var_8h + var_ch;\n    return 1;\n}\n",
        "token_count": 4464
    },
    "010134f3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010134f3(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0xc) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        var_4h = 0;\n        fcn.01011f4a(&var_4h);\n        iVar3 = var_4h;\n        iVar2 = (**(**(*(in_ECX + 0x10) + var_4h * 4) + 4))(arg_8h);\n        while (iVar2 == 0) {\n            iVar3 = iVar3 + 1;\n            if (*(in_ECX + 0xc) <= iVar3) {\n                return 0;\n            }\n            iVar2 = (****(*(in_ECX + 0x10) + iVar3 * 4))(arg_8h);\n        }\n        fcn.01012120(iVar3);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 253
    },
    "01013752": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.01013752(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x3c);\n    iVar7 = 0;\n    iVar5 = iVar2;\n    if (*(in_ECX + 0x40) != 0) {\n        iVar5 = iVar2 + -1;\n    }\n    if ((iVar5 < 0) || (*(arg_8h + 0x50) <= iVar5)) {\n        bVar4 = false;\n    }\n    else {\n        cVar1 = *(iVar5 + *(arg_8h + 0x4c));\n        bVar3 = false;\n        bVar4 = false;\n        do {\n            if (*(in_ECX + 0xc) <= iVar7) break;\n            pcVar6 = *(in_ECX + 0x10) + iVar7;\n            if ((*pcVar6 == cVar1 || *pcVar6 < cVar1) && (cVar1 <= pcVar6[1])) {\n                bVar3 = true;\n                bVar4 = true;\n            }\n            iVar7 = iVar7 + 2;\n        } while (bVar4 == false);\n        iVar5 = 0;\n        if (bVar4 == false) {\n            do {\n                if (*(in_ECX + 0x20) <= iVar5) break;\n                if (*(iVar5 + *(in_ECX + 0x24)) == cVar1) {\n                    bVar3 = true;\n                    bVar4 = true;\n                }\n                iVar5 = iVar5 + 1;\n            } while (bVar4 == false);\n        }\n        for (iVar5 = 0; (bVar4 == false && (iVar5 < *(in_ECX + 0x34))); iVar5 = iVar5 + 1) {\n            iVar7 = (****(*(in_ECX + 0x38) + iVar5 * 4))(arg_8h);\n            if (iVar7 != 0) {\n                *(arg_8h + 0x3c) = iVar2;\n                bVar3 = true;\n                bVar4 = true;\n            }\n        }\n        if (*(in_ECX + 0x44) == 0) {\n            bVar4 = !bVar3;\n        }\n        if (bVar4 != false) {\n            *(arg_8h + 0x3c) = *(arg_8h + 0x3c) + (*(in_ECX + 0x40) == 0) * 2 + -1;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 630
    },
    "0101389b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101389b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h;\n    var_4h = 0;\n    iVar3 = *(arg_8h + 0x3c);\n    arg_8h = iVar3;\n    fcn.01011f4a(&var_4h);\n    if ((var_4h < *(in_ECX + 0xc)) && (iVar2 = (****(in_ECX + 4))(iVar1),  iVar2 != 0)) {\n        do {\n            if (*(iVar1 + 0x3c) != iVar3) break;\n            iVar2 = (**(**(in_ECX + 4) + 4))(iVar1);\n        } while (iVar2 != 0);\n        if (*(iVar1 + 0x3c) != iVar3) {\n            var_4h = var_4h + 1;\ncode_r0x010138ec:\n            fcn.01012120(iVar3);\n            fcn.01012120(var_4h);\n            return 1;\n        }\n    }\n    do {\n        if (var_4h < 1) {\n            return 0;\n        }\n        fcn.01011f4a(&arg_8h);\n        iVar2 = (**(**(in_ECX + 4) + 4))(iVar1);\n        iVar3 = arg_8h;\n        while (iVar2 != 0) {\n            if (*(iVar1 + 0x3c) != iVar3) goto code_r0x010138ec;\n            iVar2 = (**(**(in_ECX + 4) + 4))(iVar1);\n        }\n        var_4h = var_4h + -1;\n    } while( true );\n}\n",
        "token_count": 429
    },
    "01013a26": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01013a26(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.01011f4a(&var_4h);\n    if (var_4h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (**(**(in_ECX + 4) + 4))(arg_8h);\n        if (iVar2 == 0) {\n            var_4h = var_4h + -1;\n        }\n        fcn.01012120(var_4h);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 176
    },
    "01013afb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01013afb(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = arg_8h;\n    uVar1 = *(arg_8h + 0x3c);\n    uVar2 = *(arg_8h + 8);\n    uVar3 = *(arg_8h + 0x1c);\n    arg_8h = 1;\n    iVar6 = iVar4;\n    iVar5 = fcn.01011bbd(iVar4);\n    while (iVar5 != 0) {\n        iVar5 = fcn.010139cc(iVar4);\n        if (iVar5 != 0) goto code_r0x01013b44;\n        iVar6 = iVar4;\n        iVar5 = fcn.01011c0c();\n    }\n    arg_8h = 0;\ncode_r0x01013b44:\n    *(iVar4 + 8) = uVar2;\n    if (arg_8h != 0) {\n        fcn.01012120(uVar1, iVar6);\n        fcn.01012120(uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 306
    },
    "01013bb5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.01013bb5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    bool bVar3;\n    \n    iVar2 = *(arg_8h + 0x3c);\n    iVar1 = *(in_ECX + 0xc);\n    if (*(in_ECX + 0x18) == 0) {\n        if (iVar1 + iVar2 <= *(arg_8h + 0x50)) {\n            if (*(in_ECX + 0x1c) == 0) {\n                iVar2 = fcn.010121e3(iVar2 + *(arg_8h + 0x4c));\n            }\n            else {\n                iVar2 = fcn.01011797();\n            }\n            bVar3 = iVar2 == 0;\n            if (!bVar3) {\n                return bVar3;\n            }\n            *(arg_8h + 0x3c) = *(arg_8h + 0x3c) + iVar1;\n            return bVar3;\n        }\n    }\n    else if (iVar1 <= iVar2) {\n        if (*(in_ECX + 0x1c) == 0) {\n            iVar2 = fcn.010121e3((iVar2 - iVar1) + *(arg_8h + 0x4c));\n        }\n        else {\n            iVar2 = fcn.01011797();\n        }\n        bVar3 = iVar2 == 0;\n        if (!bVar3) {\n            return bVar3;\n        }\n        *(arg_8h + 0x3c) = *(arg_8h + 0x3c) - iVar1;\n        return bVar3;\n    }\n    return false;\n}\n",
        "token_count": 394
    },
    "01013ca2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01013ca2(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    uint8_t uVar5;\n    bool bVar6;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = *(arg_8h + 0x4c);\n    iVar1 = *(arg_8h + 0x50);\n    iVar2 = *(arg_8h + 0x3c);\n    if (iVar2 < 1) {\n        arg_8h = arg_8h & 0xffffff00;\n    }\n    else {\n        arg_8h = arg_8h & 0xffffff00 | *(iVar2 + -1 + iVar4);\n    }\n    if (iVar2 < iVar1) {\n        uVar5 = *(iVar2 + iVar4);\n    }\n    else {\n        uVar5 = 0;\n    }\n    uVar3 = 0;\n    var_4h = in_ECX & 0xffffff00 | uVar5;\n    if (7 < *(in_ECX + 4)) goto code_r0x01013db3;\n    // switch table (8 cases) at 0x1013dce\n    switch(*(in_ECX + 4)) {\n    case 0:\n        uVar3 = iVar2 < 1;\n        goto code_r0x01013db3;\n    case 1:\n        uVar3 = iVar1 <= iVar2;\n        goto code_r0x01013db3;\n    case 2:\n        if (iVar1 <= iVar2) {\ncode_r0x01013d28:\n            uVar3 = 1;\n            goto code_r0x01013db3;\n        }\n        if (*(iVar1 + iVar4 + -1) == '\\n') {\n            if (iVar2 == iVar1 + -1) goto code_r0x01013d28;\n            if (*(iVar1 + iVar4 + -2) == '\\r') {\n                bVar6 = iVar2 == iVar1 + -2;\n                goto code_r0x01013d26;\n            }\n        }\n        break;\n    case 3:\n        if ((iVar2 < 1) || (arg_8h == '\\n')) goto code_r0x01013d28;\n        if (arg_8h == '\\r') {\n            bVar6 = uVar5 == 10;\n            goto code_r0x01013d71;\n        }\n        break;\n    case 4:\n        if ((iVar1 <= iVar2) || (uVar5 == 0xd)) goto code_r0x01013d28;\n        if (uVar5 == 10) {\n            bVar6 = arg_8h == '\\r';\n            goto code_r0x01013d71;\n        }\n        break;\n    case 5:\n        iVar4 = fcn.01012260(arg_8h);\n        if (iVar4 == 0) {\n            iVar4 = fcn.01012260(var_4h);\n            bVar6 = iVar4 == 0;\ncode_r0x01013d71:\n            if (!bVar6) goto code_r0x01013d28;\n        }\n        break;\n    case 6:\n        iVar4 = fcn.01012260(arg_8h);\n        if (iVar4 != 0) {\n            iVar4 = fcn.01012260(var_4h);\n            bVar6 = iVar4 == 0;\ncode_r0x01013d26:\n            if (bVar6) goto code_r0x01013d28;\n        }\n        break;\n    case 7:\n        iVar4 = fcn.01012260(arg_8h);\n        if (iVar4 == 0) {\n            uVar3 = fcn.01012260(var_4h);\n        }\n        else {\n            iVar4 = fcn.01012260(var_4h);\n            uVar3 = iVar4 == 0;\n        }\n        goto code_r0x01013db3;\n    }\n    uVar3 = 0;\ncode_r0x01013db3:\n    if (*(in_ECX + 8) == 0) {\n        uVar3 = uVar3 == 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 965
    },
    "01013e8d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01013e8d(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.0101a01c();\n    }\n    uVar2 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar2 < arg_ch) {\n        arg_ch = uVar2;\n    }\n    if (arg_ch != 0) {\n        puVar3 = in_ECX + 4;\n        puVar1 = puVar3;\n        if (0xf < *(in_ECX + 0x18)) {\n            puVar1 = *puVar3;\n            puVar3 = *puVar3;\n        }\n        fcn.01009397(puVar3 + arg_8h, *(in_ECX + 0x18) - arg_8h, puVar1 + arg_ch + arg_8h, uVar2 - arg_ch);\n        fcn.010122c8(*(in_ECX + 0x14) - arg_ch);\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "01013efc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01013efc(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.010126e4();\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 127
    },
    "01013f31": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01013f31(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.010126e4();\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 127
    },
    "0101403c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101403c(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint8_t *arg_18h, int32_t arg_1ch)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    \n    if (arg_1ch != 0) {\n        do {\n            iVar2 = arg_8h + 8;\n            uVar1 = fcn.010123d0(*arg_18h, 0, arg_8h + 8);\n            fcn.010126e4(iVar2, uVar1);\n            arg_1ch = arg_1ch + -1;\n            arg_18h = arg_18h + 1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 208
    },
    "01014087": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.01014087(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t arg_1ch_00;\n    uint var_10h;\n    uint var_8h;\n    \n    while( true ) {\n        iVar2 = fcn.0101e070(arg_18h, 0, arg_1ch);\n        arg_1ch_00 = arg_1ch;\n        if (iVar2 != 0) {\n            arg_1ch_00 = iVar2 - arg_18h;\n        }\n        puVar3 = fcn.0101403c(arg_8h, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch_00);\n        arg_10h = *puVar3;\n        arg_14h = puVar3[1];\n        if (arg_1ch - arg_1ch_00 == 0) break;\n        if (arg_20h != 0) {\n            puVar3 = fcn.01013f31(arg_8h, &var_10h, *puVar3, puVar3[1], arg_20h, 1);\n            arg_10h = *puVar3;\n            arg_14h = puVar3[1];\n        }\n        arg_18h = arg_18h + arg_1ch_00 + 1;\n        arg_1ch = (arg_1ch - arg_1ch_00) + -1;\n    }\n    uVar1 = *puVar3;\n    arg_ch[1] = puVar3[1];\n    *arg_ch = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 425
    },
    "01014119": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.01014119(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (7 < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.01012370(param_1 + 4, 8, arg_10h, param_3);\n        }\n        fcn.0101c35c(arg_10h);\n    }\n    *(param_1 + 0x18) = 7;\n    fcn.0101270a(param_3);\n    return;\n}\n",
        "token_count": 164
    },
    "01014164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01014164(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = arg_8h;\n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.0101a01c();\n    }\n    uVar2 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar2 < arg_ch) {\n        arg_ch = uVar2;\n    }\n    if (arg_ch != 0) {\n        puVar3 = in_ECX + 4;\n        arg_8h = puVar3;\n        if (7 < *(in_ECX + 0x18)) {\n            arg_8h = *puVar3;\n            puVar3 = *puVar3;\n        }\n        fcn.0101238c(puVar3 + uVar1 * 2, *(in_ECX + 0x18) - uVar1, arg_8h + (uVar1 + arg_ch) * 2, uVar2 - arg_ch);\n        fcn.0101270a(*(in_ECX + 0x14) - arg_ch);\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "010141e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.010141e4(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    int32_t arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0101de44(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar4 = *(unaff_EBP + 8) | 7;\n    if (uVar4 < 0x7fffffff) {\n        uVar1 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar1;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar4 / 3 < uVar2) && (uVar1 <= 0x7ffffffe - uVar2)) {\n            uVar4 = uVar2 + uVar1;\n        }\n    }\n    else {\n        uVar4 = *(unaff_EBP + 8);\n    }\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = fcn.0101262e(uVar4 + 1);\n    if (*(unaff_EBP + 0xc) != 0) {\n        if (*(extraout_ECX + 0x18) < 8) {\n            arg_10h = extraout_ECX + 4;\n        }\n        else {\n            arg_10h = *(extraout_ECX + 4);\n        }\n        fcn.01012370(arg_8h_00, uVar4 + 1, arg_10h, *(unaff_EBP + 0xc));\n    }\n    fcn.01014119(1, 0);\n    uVar3 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 4) = arg_8h_00;\n    *(extraout_ECX + 0x18) = uVar4;\n    fcn.0101270a(uVar3);\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 566
    },
    "01014368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.01014368(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (param_2 != NULL) {\n        in_EAX = param_1 + 4;\n        puVar1 = in_EAX;\n        if (7 < *(param_1 + 0x18)) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= param_2) {\n            if (7 < *(param_1 + 0x18)) {\n                in_EAX = *in_EAX;\n            }\n            in_EAX = in_EAX + *(param_1 + 0x14) * 2;\n            if (param_2 < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 208
    },
    "01014584": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.01014584(int32_t *param_1, uint param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 == 0) {\n        param_5 = 0;\n    }\n    else {\n        if (param_5 == 0) {\n            iVar1 = fcn.0101c87d(0x54);\n            if (iVar1 == 0) {\n                param_5 = 0;\n            }\n            else {\n                param_5 = fcn.01014485();\n            }\n        }\n        *(param_5 + 0x48) = 0;\n        *(param_5 + 0x44) = 0xffffffff;\n        *(param_5 + 0x4c) = param_2;\n        *(param_5 + 0x50) = param_3;\n        if (param_4 < 0) {\n            if ((*(param_1 + 1) & 0x10) == 0) {\n                *(param_5 + 0x40) = 0;\n                *(param_5 + 0x3c) = 0;\n            }\n            else {\n                *(param_5 + 0x40) = param_3;\n                *(param_5 + 0x3c) = param_3;\n            }\n        }\n        else {\n            if (param_3 < param_4) {\n                param_4 = (~(param_1[1] >> 4) & 1) + param_3;\n            }\n            *(param_5 + 0x40) = param_4;\n            *(param_5 + 0x3c) = param_4;\n        }\n    }\n    return param_5;\n}\n",
        "token_count": 403
    },
    "010151ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.010151ac(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    \n    if (param_2 == 0xffffffff) {\n        fcn.01019fe4();\n    }\n    if (*(param_1 + 0x18) < param_2) {\n        fcn.01013f5a(param_2, *(param_1 + 0x14));\n    }\n    else if ((param_3 == '\\0') || (0xf < param_2)) {\n        if (param_2 == 0) {\n            fcn.010122c8(0);\n        }\n    }\n    else {\n        uVar1 = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            uVar1 = param_2;\n        }\n        fcn.01013e42(1, uVar1);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 227
    },
    "010153fd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.010153fd(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    \n    if (0x7ffffffe < param_2) {\n        fcn.01019fe4();\n    }\n    if (*(param_1 + 0x18) < param_2) {\n        fcn.010141e4(param_2, *(param_1 + 0x14));\n    }\n    else if ((param_3 == '\\0') || (7 < param_2)) {\n        if (param_2 == 0) {\n            fcn.0101270a(0);\n        }\n    }\n    else {\n        uVar1 = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            uVar1 = param_2;\n        }\n        fcn.01014119(1, uVar1);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 226
    },
    "0101545e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0101545e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t arg_ch_00;\n    uint var_64h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x58);\n    *(unaff_EBP + -0x10) = 0;\n    if (*extraout_ECX == 0) {\n        fcn.01012b0a();\n    }\n    else {\n        fcn.01014485();\n        arg_ch_00 = *(unaff_EBP + 0x18);\n        *(unaff_EBP + -4) = 0;\n        if (arg_ch_00 == 0) {\n            arg_ch_00 = unaff_EBP + -100;\n        }\n        fcn.01014584(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), arg_ch_00);\n        fcn.010144a1(*(unaff_EBP + 8), arg_ch_00);\n        fcn.01011743();\n    }\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 334
    },
    "01016349": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.01016349(uint arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t *puVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    bool bVar10;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x40);\n    fcn.01014644();\n    pcVar1 = extraout_ECX + 0xa8;\n    *(unaff_EBP + -0x38) = 0x3f;\n    *(unaff_EBP + -0x34) = 1;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    iVar5 = fcn.0101192c(unaff_EBP + -0x38);\n    if (iVar5 == 0) {\n        iVar5 = fcn.0101c87d(0x1c);\n        puVar3 = *(unaff_EBP + 8);\n        if (iVar5 == 0) {\n            uVar8 = 0;\n        }\n        else {\n            uVar8 = fcn.01013570(*puVar3 & 0x10);\n        }\n        fcn.01012120(uVar8);\n        *(extraout_ECX + 8) = *(extraout_ECX + 8) + 1;\n        *(unaff_EBP + -0x20) = *(extraout_ECX + 8);\n        iVar5 = fcn.0101c87d(0x20);\n        if (iVar5 == 0) {\n            *(unaff_EBP + 8) = 0;\n        }\n        else {\n            uVar9 = fcn.01011feb(*(unaff_EBP + -0x20), *puVar3 >> 4 & 1);\n            *(unaff_EBP + 8) = uVar9;\n        }\n        fcn.01012120(*(unaff_EBP + 8));\n        fcn.01012120(*(unaff_EBP + 8));\n        uVar9 = fcn.01016263(*puVar3);\n        fcn.01012120(uVar9);\n        iVar5 = fcn.0101c87d(0x20);\n        if (iVar5 == 0) {\n            uVar9 = 0;\n        }\n        else {\n            uVar9 = fcn.01011feb(*(unaff_EBP + -0x20), ~(*puVar3 >> 4) & 1);\n        }\n        fcn.01012120(uVar9);\n        fcn.01012120(uVar9);\n        iVar5 = *(unaff_EBP + -0x20);\n        fcn.01011833(iVar5, 0);\n        *(*(extraout_ECX + 0x34) + iVar5 * 4) = uVar8;\n        goto code_r0x01016c09;\n    }\n    fcn.01014644();\n    cVar2 = *pcVar1;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x10) = 0x3e;\n    if (cVar2 < '>') {\n        if (cVar2 != '=') {\n            if (cVar2 != '!') {\n                if (cVar2 == '\\'') goto code_r0x010163e2;\n                if (cVar2 != '(') {\n                    if (cVar2 != '<') goto joined_r0x010166a0;\n                    if (*(extraout_ECX + 0xb8) == '!') {\n                        *(unaff_EBP + -0x18) = 1;\n                    }\n                    else if (*(extraout_ECX + 0xb8) != '=') goto code_r0x010163d6;\n                    fcn.01014644();\n                    fcn.01014644();\n                    puVar6 = fcn.0101c87d(0xc);\n                    *(unaff_EBP + -0x28) = puVar6;\n                    *(unaff_EBP + -4) = 1;\n                    if (puVar6 == NULL) {\n                        puVar6 = NULL;\n                    }\n                    else {\n                        uVar8 = fcn.01016263(**(unaff_EBP + 8) | 0x10);\n                        puVar6[1] = uVar8;\n                        iVar5 = *(unaff_EBP + -0x18);\n                        *puVar6 = 0x1005514;\n                        puVar6[2] = iVar5 == 0;\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.01012120(puVar6);\n                    if (puVar6 != NULL) goto code_r0x01016c09;\n                    goto code_r0x010163d6;\n                }\n                iVar5 = fcn.0101c87d(0x28);\n                if (iVar5 == 0) {\n                    iVar5 = 0;\n                }\n                else {\n                    iVar5 = fcn.01012165();\n                }\n                fcn.01012120(iVar5);\n                *(unaff_EBP + -0x30) = 0;\n                *(unaff_EBP + -0x2c) = 0;\n                *(unaff_EBP + -0x38) = 0x3f;\n                *(unaff_EBP + -0x34) = 1;\n                iVar7 = fcn.0101192c(unaff_EBP + -0x38);\n                if (iVar7 == 0) {\n                    fcn.01014644();\n                    *(unaff_EBP + -0x18) = *(extraout_ECX + 0xb0);\n                    iVar7 = fcn.0101c87d(0xc);\n                    *(unaff_EBP + -0x20) = iVar7;\n                    *(unaff_EBP + -4) = 6;\n                    if (iVar7 == 0) {\n                        *(unaff_EBP + -0x1c) = 0;\n                    }\n                    else {\n                        uVar8 = fcn.01016263(**(unaff_EBP + 8));\n                        puVar6 = *(unaff_EBP + -0x20);\n                        *puVar6 = 0x1005514;\n                        puVar6[1] = uVar8;\n                        puVar6[2] = 1;\n                        *(unaff_EBP + -0x1c) = puVar6;\n                    }\n                    fcn.01012120(*(unaff_EBP + -0x1c));\n                    *(iVar5 + 0x1c) = *(unaff_EBP + -0x1c);\n                    var_38h = fcn.01011a09(*(extraout_ECX + 0xb0) - *(unaff_EBP + -0x18), 1);\n                    var_38h = var_38h + *(unaff_EBP + -0x18);\n                    fcn.01011b39(var_38h);\n                    *(unaff_EBP + -0x48) = 0;\n                    *(unaff_EBP + -0x44) = 0;\n                    *(unaff_EBP + -0x4c) = 0x1005470;\n                    *(unaff_EBP + -0x3c) = 0;\n                    *(unaff_EBP + -0x40) = 0;\n                    iVar7 = *(extraout_ECX + 0xb0);\n                    *(unaff_EBP + -4) = 7;\n                    if (*(unaff_EBP + -0x18) < iVar7) {\n                        do {\n                            uVar4 = fcn.010119f2(*(unaff_EBP + -0x18));\n                            *(unaff_EBP + -0x10) = uVar4;\n                            var_38h = unaff_EBP + -0x10;\n                            fcn.01011b39();\n                            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n                        } while (*(unaff_EBP + -0x18) < *(extraout_ECX + 0xb0));\n                        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x40);\n                        if (*(unaff_EBP + -0x40) == 0) goto code_r0x0101659e;\n                    }\n                    else {\ncode_r0x0101659e:\n                        *(unaff_EBP + -0x1c) = 0x1005484;\n                    }\n                    iVar7 = fcn.01011a65(unaff_EBP + -0x1c, unaff_EBP + -0x20, var_38h);\n                    if (iVar7 == 0) {\n                        bVar10 = false;\n                    }\n                    else {\n                        bVar10 = **(unaff_EBP + -0x1c) == '\\0';\n                    }\n                    if (bVar10) {\n                        *(iVar5 + 4) = *(unaff_EBP + -0x20);\n                        *(iVar5 + 0x1c) = 0;\n                    }\n                    else {\n                        *(iVar5 + 4) = 0xffffffff;\n                        fcn.01012120(unaff_EBP + -0x20, iVar5);\n                    }\n                    fcn.01014644();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.010116a0();\n                }\n                else {\n                    uVar8 = fcn.01016349(*(unaff_EBP + 8));\n                    *(iVar5 + 0x1c) = uVar8;\n                }\n                *(unaff_EBP + -0x20) = **(unaff_EBP + 8);\n                uVar8 = fcn.01015e8e(unaff_EBP + -0x20);\n                *(iVar5 + 0x20) = uVar8;\n                if (*pcVar1 == '|') {\n                    fcn.01014644();\n                    uVar8 = fcn.01016263(**(unaff_EBP + 8));\n                    *(iVar5 + 0x24) = uVar8;\n                }\n                else {\n                    *(iVar5 + 0x24) = 0;\n                }\n                goto code_r0x01016c09;\n            }\n            *(unaff_EBP + -0x18) = 1;\n        }\n        fcn.01014644();\n        puVar6 = fcn.0101c87d(0xc);\n        *(unaff_EBP + -0x28) = puVar6;\n        *(unaff_EBP + -4) = 0;\n        if (puVar6 == NULL) {\ncode_r0x01016bf6:\n            puVar6 = NULL;\n        }\n        else {\n            uVar8 = fcn.01016263(**(unaff_EBP + 8) & 0xffffffef);\n            puVar6[1] = uVar8;\n            iVar5 = *(unaff_EBP + -0x18);\n            *puVar6 = 0x1005514;\n            puVar6[2] = iVar5 == 0;\n        }\n    }\n    else {\n        if (cVar2 != '>') {\n            if (cVar2 == 'P') {\ncode_r0x010163d6:\n                if (*pcVar1 == 'P') {\n                    fcn.01014644();\n                }\ncode_r0x010163e2:\n                if (*pcVar1 == '<') {\n                    *(unaff_EBP + -0x10) = 0x3e;\n                }\n                else if (*pcVar1 == '\\'') {\n                    *(unaff_EBP + -0x10) = 0x27;\n                }\n                fcn.01014644();\n                iVar5 = *(extraout_ECX + 0xc);\n                *(unaff_EBP + -0x28) = iVar5;\n                *(extraout_ECX + 0xc) = iVar5 + 1;\n                iVar5 = fcn.0101c87d(0x1c);\n                if (iVar5 == 0) {\n                    uVar8 = 0;\n                }\n                else {\n                    uVar8 = fcn.01013570(**(unaff_EBP + 8) & 0x10);\n                }\n                fcn.01012120(uVar8);\n                iVar5 = fcn.0101c87d(0x20);\n                if (iVar5 == 0) {\n                    *(unaff_EBP + -0x1c) = 0;\n                }\n                else {\n                    uVar9 = fcn.01011feb(0xffffffff, **(unaff_EBP + 8) >> 4 & 1);\n                    *(unaff_EBP + -0x1c) = uVar9;\n                }\n                fcn.01012120(*(unaff_EBP + -0x1c));\n                iVar5 = fcn.0101c87d(0x20);\n                if (iVar5 == 0) {\n                    *(unaff_EBP + -0x18) = 0;\n                }\n                else {\n                    uVar9 = fcn.01011feb(0xffffffff, ~(**(unaff_EBP + 8) >> 4) & 1);\n                    *(unaff_EBP + -0x18) = uVar9;\n                }\n                iVar5 = *(unaff_EBP + -0x18);\n                fcn.01012120(iVar5);\n                *(unaff_EBP + -0x48) = 0;\n                *(unaff_EBP + -0x44) = 0;\n                *(unaff_EBP + -0x4c) = 0x1005470;\n                *(unaff_EBP + -0x3c) = 0;\n                *(unaff_EBP + -0x40) = 0;\n                *(unaff_EBP + -4) = 2;\n                while ((*pcVar1 != '\\0' && (*pcVar1 != *(unaff_EBP + -0x10)))) {\n                    *(unaff_EBP + -0x14) = *pcVar1;\n                    fcn.01011b39(unaff_EBP + -0x14, 1, 1);\n                    *(unaff_EBP + -0x14) = *pcVar1;\n                    iVar5 = unaff_EBP + -0x14;\n                    fcn.01011b39();\n                    fcn.01014644();\n                }\n                fcn.01014644(iVar5);\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x40);\n                if (*(unaff_EBP + -0x40) == 0) {\n                    *(unaff_EBP + -0x20) = 0x1005484;\n                }\n                iVar5 = fcn.01011a65(unaff_EBP + -0x20, unaff_EBP + -0x24);\n                if (iVar5 == 0) {\n                    bVar10 = false;\n                }\n                else {\n                    bVar10 = **(unaff_EBP + -0x20) == '\\0';\n                }\n                if (bVar10) {\n                    uVar9 = *(unaff_EBP + -0x24);\n                    iVar5 = *(unaff_EBP + -0x18);\n                    *(*(unaff_EBP + -0x1c) + 4) = uVar9;\n                    *(iVar5 + 4) = uVar9;\n                    fcn.01013c85();\n                }\n                fcn.01012120(*(unaff_EBP + -0x1c));\n                uVar9 = fcn.01016263(**(unaff_EBP + 8));\n                fcn.01012120(uVar9);\n                fcn.01012120(*(unaff_EBP + -0x18));\n                iVar5 = *(unaff_EBP + -0x28);\n                fcn.01011833(iVar5, 0);\n                *(*(extraout_ECX + 0x5c) + iVar5 * 4) = uVar8;\n            }\n            else {\n                if (cVar2 == 'R') {\n                    do {\n                        fcn.01014644();\n                        if (*pcVar1 == '\\0') break;\n                        iVar5 = fcn.0101d084(*pcVar1);\n                    } while (iVar5 != 0);\n                    cVar2 = *pcVar1;\n                    if ((cVar2 != '<') && (cVar2 != '\\'')) {\n                        *(unaff_EBP + -0x48) = 0;\n                        *(unaff_EBP + -0x44) = 0;\n                        *(unaff_EBP + -0x4c) = 0x1005470;\n                        *(unaff_EBP + -0x3c) = 0;\n                        *(unaff_EBP + -0x40) = 0;\n                        *(unaff_EBP + -4) = 5;\n                        while ((cVar2 != '\\0' && (*pcVar1 != ')'))) {\n                            *(unaff_EBP + 8) = *pcVar1;\n                            fcn.01011b39();\n                            fcn.01014644();\n                            cVar2 = *pcVar1;\n                        }\n                        *(unaff_EBP + -0x20) = 0;\n                        *(unaff_EBP + 8) = *(unaff_EBP + -0x40);\n                        if (*(unaff_EBP + -0x40) == 0) {\n                            *(unaff_EBP + 8) = 0x1005484;\n                        }\n                        fcn.01011a65(unaff_EBP + 8, unaff_EBP + -0x20);\n                        iVar5 = fcn.0101c87d(0x20);\n                        goto joined_r0x01016912;\n                    }\n                    iVar5 = fcn.0101c87d(0x20);\n                    if (iVar5 == 0) {\n                        *(unaff_EBP + -0x1c) = 0;\n                    }\n                    else {\n                        uVar8 = fcn.010120d8(0xfffffffd);\n                        *(unaff_EBP + -0x1c) = uVar8;\n                    }\n                    var_38h = *(unaff_EBP + -0x1c);\n                    fcn.01012120(var_38h);\n                    fcn.01014644();\n                    *(unaff_EBP + -0x48) = 0;\n                    *(unaff_EBP + -0x44) = 0;\n                    *(unaff_EBP + -0x4c) = 0x1005470;\n                    *(unaff_EBP + -0x3c) = 0;\n                    *(unaff_EBP + -0x40) = 0;\n                    *(unaff_EBP + -4) = 4;\n                    while ((*pcVar1 != '\\0' && (*pcVar1 != ((cVar2 != '<') - 1U & 0x17) + 0x27))) {\n                        *(unaff_EBP + 8) = *pcVar1;\n                        fcn.01011b39(unaff_EBP + 8, 1, 1);\n                        *(unaff_EBP + 8) = *pcVar1;\n                        var_38h = unaff_EBP + 8;\n                        fcn.01011b39();\n                        fcn.01014644();\n                    }\n                    fcn.01014644(var_38h);\n                    *(unaff_EBP + 8) = *(unaff_EBP + -0x40);\n                    if (*(unaff_EBP + -0x40) == 0) {\n                        *(unaff_EBP + 8) = 0x1005484;\n                    }\n                    iVar5 = fcn.01011a65(unaff_EBP + 8, unaff_EBP + -0x20);\n                    if (iVar5 == 0) {\n                        bVar10 = false;\n                    }\n                    else {\n                        bVar10 = **(unaff_EBP + 8) == '\\0';\n                    }\n                    iVar7 = *(unaff_EBP + -0x1c);\n                    if (bVar10) {\n                        *(iVar7 + 8) = *(unaff_EBP + -0x20);\n                        fcn.01013c85();\n                    }\n                }\n                else {\njoined_r0x010166a0:\n                    while ((cVar2 != '\\0' && (iVar5 = fcn.0101d084(*pcVar1),  iVar5 != 0))) {\n                        fcn.01014644();\n                        cVar2 = *pcVar1;\n                    }\n                    cVar2 = *pcVar1;\n                    if ((cVar2 < '0') || ('9' < cVar2)) {\n                        uVar8 = **(unaff_EBP + 8);\n                        *(unaff_EBP + -0x38) = 0;\n                        *(unaff_EBP + -0x1c) = uVar8;\n                        while( true ) {\n                            *(unaff_EBP + -0x30) = 0;\n                            *(unaff_EBP + -0x2c) = 0;\n                            *(unaff_EBP + -0x34) = 1;\n                            iVar5 = fcn.0101192c();\n                            if (((iVar5 != 0) || (*pcVar1 == ':')) || (*pcVar1 == ')')) break;\n                            *(unaff_EBP + -0x40) = 0;\n                            *(unaff_EBP + -0x3c) = 0;\n                            *(unaff_EBP + -0x48) = 0x28;\n                            *(unaff_EBP + -0x44) = 1;\n                            iVar5 = fcn.0101192c(unaff_EBP + -0x48);\n                            if (iVar5 != 0) break;\n                            cVar2 = *pcVar1;\n                            var_3ch = 0;\n                            if (cVar2 < 'T') {\n                                if (cVar2 == 'S') {\ncode_r0x010167d9:\n                                    var_3ch = 1;\n                                    goto code_r0x010167e4;\n                                }\n                                if (cVar2 != '-') {\n                                    if (cVar2 != 'G') {\n                                        if (cVar2 != 'I') {\n                                            if (cVar2 != 'M') goto code_r0x010167e4;\n                                            goto code_r0x010167bd;\n                                        }\n                                        goto code_r0x010167dd;\n                                    }\n                                    goto code_r0x010167e1;\n                                }\n                                *(unaff_EBP + -0x18) = 1;\ncode_r0x010167ea:\n                                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) & ~var_3ch;\n                            }\n                            else {\n                                if (cVar2 == 'g') {\ncode_r0x010167e1:\n                                    var_3ch = 4;\n                                }\n                                else if (cVar2 == 'i') {\ncode_r0x010167dd:\n                                    var_3ch = 8;\n                                }\n                                else if (cVar2 == 'm') {\ncode_r0x010167bd:\n                                    var_3ch = 2;\n                                }\n                                else if (cVar2 == 's') goto code_r0x010167d9;\ncode_r0x010167e4:\n                                if (*(unaff_EBP + -0x18) != 0) goto code_r0x010167ea;\n                                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) | var_3ch;\n                            }\n                            fcn.01014644();\n                            *(unaff_EBP + -0x38) = 0;\n                        }\n                        cVar2 = *pcVar1;\n                        *(unaff_EBP + -0x10) = cVar2;\n                        if (cVar2 != ':') {\n                            *(unaff_EBP + -0x40) = 0;\n                            *(unaff_EBP + -0x3c) = 0;\n                            *(unaff_EBP + -0x48) = 0x28;\n                            *(unaff_EBP + -0x44) = 1;\n                            iVar5 = fcn.0101192c();\n                            if (iVar5 == 0) {\n                                **(unaff_EBP + 8) = *(unaff_EBP + -0x1c);\n                                fcn.01014684();\n                                goto code_r0x01016c09;\n                            }\n                        }\n                        if (*(unaff_EBP + -0x10) == ':') {\n                            fcn.01014644();\n                        }\n                        fcn.01016263(*(unaff_EBP + -0x1c));\n                        goto code_r0x01016c09;\n                    }\n                    *(unaff_EBP + -0x48) = 0;\n                    *(unaff_EBP + -0x44) = 0;\n                    *(unaff_EBP + -0x4c) = 0x1005470;\n                    *(unaff_EBP + -0x3c) = 0;\n                    *(unaff_EBP + -0x40) = 0;\n                    *(unaff_EBP + -4) = 8;\n                    while ((cVar2 != '\\0' && (*pcVar1 != ')'))) {\n                        *(unaff_EBP + 8) = *pcVar1;\n                        fcn.01011b39();\n                        fcn.01014644();\n                        cVar2 = *pcVar1;\n                    }\n                    *(unaff_EBP + -0x1c) = 0;\n                    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x40);\n                    if (*(unaff_EBP + -0x40) == 0) {\n                        *(unaff_EBP + -0x20) = 0x1005484;\n                    }\n                    fcn.01011a65(unaff_EBP + -0x20, unaff_EBP + -0x1c);\n                    iVar5 = fcn.0101c87d(0x20);\njoined_r0x01016912:\n                    iVar7 = 0;\n                    if (iVar5 != 0) {\n                        iVar7 = fcn.010120d8();\n                    }\n                    fcn.01012120(iVar7);\n                }\n                fcn.01012120(iVar7);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.010116a0();\n            goto code_r0x01016c09;\n        }\n        fcn.01014644();\n        puVar6 = fcn.0101c87d(8);\n        *(unaff_EBP + -0x28) = puVar6;\n        *(unaff_EBP + -4) = 3;\n        if (puVar6 == NULL) goto code_r0x01016bf6;\n        uVar8 = fcn.01016263(**(unaff_EBP + 8));\n        *puVar6 = 0x1005534;\n        puVar6[1] = uVar8;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.01012120(puVar6);\ncode_r0x01016c09:\n    fcn.01014644();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 6521
    },
    "0101702d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101702d(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *in_ECX;\n    int32_t iVar6;\n    \n    in_ECX[0x24] = *(arg_8h + 4);\n    in_ECX[0x25] = *(arg_8h + 8);\n    in_ECX[0x36] = 0;\n    in_ECX[0x37] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[1] = arg_ch;\n    in_ECX[0x38] = 0;\n    in_ECX[0x39] = 0;\n    in_ECX[0xc] = 0;\n    in_ECX[0x11] = 0;\n    in_ECX[0x16] = 0;\n    in_ECX[0x1b] = 0;\n    in_ECX[0x20] = 0;\n    arg_8h = 3;\n    do {\n        fcn.01014644();\n        arg_8h = arg_8h + -1;\n    } while (arg_8h != 0);\n    uVar3 = fcn.01016263(arg_ch);\n    *in_ECX = uVar3;\n    fcn.01011833(0, 0);\n    *in_ECX[0xd] = *in_ECX;\n    in_ECX[4] = in_ECX[0xc];\n    fcn.01011833(in_ECX[2] + in_ECX[0x16], 0);\n    arg_8h = 0;\n    if (0 < in_ECX[0x16]) {\n        do {\n            piVar5 = in_ECX[0x17] + arg_8h * 4;\n            piVar1 = *(*piVar5 + 0x10);\n            iVar6 = *piVar1;\n            iVar2 = piVar1[2];\n            iVar4 = in_ECX[4];\n            in_ECX[4] = iVar4 + 1;\n            *(in_ECX[0xd] + iVar4 * 4) = *piVar5;\n            if (*(iVar6 + 4) < 1) {\n                iVar4 = fcn.01014600();\n                if (iVar4 < 0) {\n                    in_ECX[2] = in_ECX[2] + 1;\n                    *(iVar6 + 4) = in_ECX[2];\n                    iVar4 = in_ECX[2];\n                }\n                else {\n                    *(iVar6 + 4) = iVar4;\n                }\n                *(iVar2 + 4) = iVar4;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < in_ECX[0x16]);\n    }\n    iVar6 = 1;\n    if (1 < in_ECX[4]) {\n        piVar5 = in_ECX[0xd];\n        do {\n            piVar5 = piVar5 + 1;\n            iVar2 = *(**(*piVar5 + 0x10) + 4);\n            if (in_ECX[2] < iVar2) {\n                in_ECX[2] = iVar2;\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < in_ECX[4]);\n    }\n    arg_8h = 0;\n    if (0 < in_ECX[0x11]) {\n        do {\n            piVar5 = in_ECX[0x12] + arg_8h * 4;\n            if (*(*piVar5 + 8) == -3) {\n                uVar3 = fcn.01014600();\n                *(*piVar5 + 8) = uVar3;\n            }\n            iVar6 = *(in_ECX[0x12] + arg_8h * 4);\n            iVar2 = *(iVar6 + 8);\n            if ((-1 < iVar2) && (iVar2 <= in_ECX[2])) {\n                if (iVar2 == 0) {\n                    uVar3 = *in_ECX;\ncode_r0x010171ca:\n                    *(iVar6 + 4) = uVar3;\n                }\n                else {\n                    iVar4 = 1;\n                    if (1 < in_ECX[0xc]) {\n                        arg_ch = in_ECX[0xd];\n                        do {\n                            arg_ch = arg_ch + 1;\n                            if (iVar2 == *(**(*arg_ch + 0x10) + 4)) {\n                                uVar3 = *(in_ECX[0xd] + iVar4 * 4);\n                                goto code_r0x010171ca;\n                            }\n                            iVar4 = iVar4 + 1;\n                        } while (iVar4 < in_ECX[0xc]);\n                    }\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < in_ECX[0x11]);\n    }\n    arg_8h = 0;\n    if (0 < in_ECX[0x1b]) {\n        do {\n            iVar2 = in_ECX[0x1c];\n            iVar6 = arg_8h * 4;\n            uVar3 = fcn.01014600();\n            arg_8h = arg_8h + 1;\n            *(*(iVar2 + iVar6) + 4) = uVar3;\n        } while (arg_8h < in_ECX[0x1b]);\n    }\n    arg_8h = 0;\n    if (0 < in_ECX[0x20]) {\n        do {\n            iVar6 = fcn.01014600();\n            if (-1 < iVar6) {\n                *(*(in_ECX[0x21] + arg_8h * 4) + 4) = iVar6;\n                *(*(in_ECX[0x21] + arg_8h * 4) + 0x1c) = 0;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < in_ECX[0x20]);\n    }\n    return *in_ECX;\n}\n",
        "token_count": 1413
    },
    "0101725f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0101725f(int32_t param_1, uint32_t param_2, uint param_3)\n\n{\n    if (param_2 != 0) {\n        fcn.01016ea5(*(param_1 + 8) | param_2, param_3);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "010173cb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n\nvoid __cdecl\nfcn.010173cb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint arg_1ch_00;\n    uint arg_18h_00;\n    uint arg_14h_00;\n    uint arg_ch_00;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t unaff_EBP;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0101de7a(0x6c);\n    arg_8h_00 = *(unaff_EBP + 8);\n    pcVar8 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x74) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x60) = *(unaff_EBP + 0x18);\n    uVar2 = fcn.0100952e(unaff_EBP + -0x78);\n    *(unaff_EBP + -4) = 0;\n    piVar3 = fcn.01016f90(uVar2);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -100) = piVar3;\n    fcn.01009499();\n    fcn.0101533f(unaff_EBP + -0x48);\n    iVar6 = *piVar3;\n    *(unaff_EBP + -4) = 1;\n    uVar4 = (**(iVar6 + 8))();\n    *(unaff_EBP + -0x6c) = uVar4 & 0xffff;\n    *(unaff_EBP + -0x14) = 0xf;\n    fcn.010122c8(0);\n    *(unaff_EBP + -4) = 2;\n    uVar4 = fcn.010123d0(0x30, 0, arg_8h_00 + 8);\n    *(unaff_EBP + -0x5c) = uVar4 & 0xffff;\n    cVar1 = *pcVar8;\n    if ((cVar1 == '+') || (*(unaff_EBP + -0x70) = 0,  cVar1 == '-')) {\n        *(unaff_EBP + -0x70) = 1;\n    }\n    puVar5 = fcn.0101d815();\n    *(unaff_EBP + -0x50) = **puVar5;\n    *(unaff_EBP + -0x4f) = 0x65;\n    *(unaff_EBP + -0x4e) = 0;\n    uVar2 = fcn.0101e070(pcVar8, 0x65, *(unaff_EBP + 0x30));\n    *(unaff_EBP + -0x4c) = uVar2;\n    iVar6 = fcn.0101e070(pcVar8, *(unaff_EBP + -0x50), *(unaff_EBP + 0x30));\n    *(unaff_EBP + -0x54) = iVar6;\n    if (iVar6 == 0) {\n        *(unaff_EBP + 0x2c) = 0;\n    }\n    pcVar7 = *(unaff_EBP + -0x44);\n    if (*(unaff_EBP + -0x30) < 0x10) {\n        pcVar7 = unaff_EBP + -0x44;\n    }\n    if (*pcVar7 != '\\x7f') {\n        pcVar7 = *(unaff_EBP + -0x44);\n        if (*(unaff_EBP + -0x30) < 0x10) {\n            pcVar7 = unaff_EBP + -0x44;\n        }\n        if ('\\0' < *pcVar7) {\n            fcn.0101596b(pcVar8, *(unaff_EBP + 0x30));\n            iVar6 = *(unaff_EBP + -0x4c);\n            if (iVar6 == 0) {\n                fcn.01015257(*(unaff_EBP + 0x2c), 0x30);\n            }\n            else {\n                if (*(unaff_EBP + -0x54) == 0) {\n                    fcn.01015257(*(unaff_EBP + 0x24), 0x30);\n                    iVar6 = *(unaff_EBP + -0x4c);\n                    *(unaff_EBP + 0x24) = 0;\n                }\n                fcn.010152a5(iVar6 - pcVar8, *(unaff_EBP + 0x2c), 0x30);\n            }\n            if (*(unaff_EBP + -0x54) == 0) {\n                fcn.01015257(*(unaff_EBP + 0x24));\n            }\n            else {\n                iVar6 = *(unaff_EBP + -0x54) - pcVar8;\n                *(unaff_EBP + -0x54) = iVar6;\n                fcn.010152a5(iVar6 + 1, *(unaff_EBP + 0x28), 0x30);\n                fcn.010152a5(*(unaff_EBP + -0x54), *(unaff_EBP + 0x24), 0x30);\n                *(unaff_EBP + 0x28) = 0;\n            }\n            pcVar8 = *(unaff_EBP + -0x44);\n            *(unaff_EBP + 0x24) = 0;\n            if (*(unaff_EBP + -0x30) < 0x10) {\n                pcVar8 = unaff_EBP + -0x44;\n            }\n            var_44h = unaff_EBP + -0x50;\n            uVar2 = fcn.01012573(0, var_44h);\n            uVar2 = fcn.0101e120(uVar2, 0);\n            *(unaff_EBP + -0x4c) = uVar2;\n            while (((cVar1 = *pcVar8,  cVar1 != '\\x7f' && ('\\0' < cVar1)) &&\n                   (cVar1 < *(unaff_EBP + -0x4c) - *(unaff_EBP + -0x70)))) {\n                *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) - cVar1;\n                var_44h = *(unaff_EBP + -0x4c);\n                fcn.010152a5(var_44h, 1, 0);\n                if ('\\0' < pcVar8[1]) {\n                    pcVar8 = pcVar8 + 1;\n                }\n            }\n            pcVar8 = fcn.01012573(0, var_44h);\n            *(unaff_EBP + 0x2c) = 0;\n            *(unaff_EBP + 0x30) = *(unaff_EBP + -0x18);\n        }\n    }\n    uVar4 = *(*(unaff_EBP + -0x60) + 0x18);\n    uVar9 = *(unaff_EBP + 0x24) + *(unaff_EBP + 0x28) + *(unaff_EBP + 0x2c) + *(unaff_EBP + 0x30);\n    if ((uVar4 < 1) || (uVar4 <= uVar9)) {\n        *(unaff_EBP + -0x4c) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x4c) = uVar4 - uVar9;\n    }\n    uVar4 = *(*(unaff_EBP + -0x60) + 0x10) & 0x1c0;\n    if (uVar4 != 0x40) {\n        if ((uVar4 == 0x100) && (*(unaff_EBP + -0x70) != 0)) {\n            puVar5 = fcn.0101403c(arg_8h_00, unaff_EBP + -0x58, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), pcVar8, 1);\n            *(unaff_EBP + 0x10) = *puVar5;\n            uVar2 = puVar5[1];\n            pcVar8 = pcVar8 + 1;\n            *(unaff_EBP + 0x30) = *(unaff_EBP + 0x30) + -1;\n            *(unaff_EBP + 0x14) = uVar2;\n        }\n        puVar5 = fcn.01013f31(arg_8h_00, unaff_EBP + -0x58, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                              *(unaff_EBP + 0x1c), *(unaff_EBP + -0x4c));\n        *(unaff_EBP + 0x10) = *puVar5;\n        uVar2 = puVar5[1];\n        *(unaff_EBP + -0x4c) = 0;\n        *(unaff_EBP + 0x14) = uVar2;\n    }\n    iVar6 = fcn.0101e070(pcVar8, *(unaff_EBP + -0x50), *(unaff_EBP + 0x30));\n    if (iVar6 != 0) {\n        iVar10 = (iVar6 - pcVar8) + 1;\n        puVar5 = fcn.01014087(arg_8h_00, unaff_EBP + -0x58, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), pcVar8, \n                              iVar6 - pcVar8, *(unaff_EBP + -0x6c));\n        *(unaff_EBP + 0x10) = *puVar5;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        puVar5 = fcn.01013f31(arg_8h_00, unaff_EBP + -0x58, *puVar5, puVar5[1], *(unaff_EBP + -0x5c), \n                              *(unaff_EBP + 0x24));\n        *(unaff_EBP + 0x10) = *puVar5;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        uVar4 = (**(**(unaff_EBP + -100) + 4))();\n        puVar5 = fcn.01013f31(arg_8h_00, unaff_EBP + -0x68, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), uVar4 & 0xffff, 1)\n        ;\n        *(unaff_EBP + 0x10) = *puVar5;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        puVar5 = fcn.01013f31(arg_8h_00, unaff_EBP + -0x68, *puVar5, puVar5[1], *(unaff_EBP + -0x5c), \n                              *(unaff_EBP + 0x28));\n        uVar2 = *puVar5;\n        *(unaff_EBP + 0x30) = *(unaff_EBP + 0x30) - iVar10;\n        *(unaff_EBP + 0x10) = uVar2;\n        pcVar8 = pcVar8 + iVar10;\n        *(unaff_EBP + 0x14) = puVar5[1];\n    }\n    iVar6 = fcn.0101e070(pcVar8, 0x65, *(unaff_EBP + 0x30));\n    if (iVar6 != 0) {\n        iVar10 = (iVar6 - pcVar8) + 1;\n        puVar5 = fcn.01014087(arg_8h_00, unaff_EBP + -0x68, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), pcVar8, \n                              iVar6 - pcVar8, *(unaff_EBP + -0x6c));\n        *(unaff_EBP + 0x10) = *puVar5;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        puVar5 = fcn.01013f31(arg_8h_00, unaff_EBP + -0x68, *puVar5, puVar5[1], *(unaff_EBP + -0x5c), \n                              *(unaff_EBP + 0x2c));\n        uVar2 = *puVar5;\n        *(unaff_EBP + 0x2c) = 0;\n        *(unaff_EBP + 0x10) = uVar2;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        uVar2 = 0x10056cc;\n        if ((*(*(unaff_EBP + -0x60) + 0x10) & 4) == 0) {\n            uVar2 = 0x10056c8;\n        }\n        puVar5 = fcn.0101403c(arg_8h_00, unaff_EBP + -0x68, *puVar5, puVar5[1], uVar2, 1);\n        uVar2 = *puVar5;\n        *(unaff_EBP + 0x30) = *(unaff_EBP + 0x30) - iVar10;\n        *(unaff_EBP + 0x10) = uVar2;\n        pcVar8 = pcVar8 + iVar10;\n        *(unaff_EBP + 0x14) = puVar5[1];\n    }\n    puVar5 = fcn.01014087(arg_8h_00, unaff_EBP + -0x68, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), pcVar8, \n                          *(unaff_EBP + 0x30), *(unaff_EBP + -0x6c));\n    *(unaff_EBP + 0x10) = *puVar5;\n    *(unaff_EBP + 0x14) = puVar5[1];\n    puVar5 = fcn.01013f31(arg_8h_00, unaff_EBP + -0x58, *puVar5, puVar5[1], *(unaff_EBP + -0x5c), *(unaff_EBP + 0x2c));\n    uVar2 = *puVar5;\n    arg_1ch_00 = *(unaff_EBP + -0x4c);\n    arg_18h_00 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + 0x10) = uVar2;\n    arg_14h_00 = puVar5[1];\n    arg_ch_00 = *(unaff_EBP + -0x74);\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    *(*(unaff_EBP + -0x60) + 0x18) = 0;\n    fcn.01013f31(arg_8h_00, arg_ch_00, uVar2, arg_14h_00, arg_18h_00, arg_1ch_00);\n    fcn.01013e42(1, 0);\n    fcn.01013e42(1, 0);\n    fcn.0101defd();\n    return;\n}\n",
        "token_count": 4033
    },
    "01017820": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid __cdecl\nfcn.01017820(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint uVar3;\n    uint arg_14h_00;\n    uint uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t unaff_EBP;\n    char *arg_18h_00;\n    int32_t iVar9;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0101de7a(0x44);\n    iVar5 = *(unaff_EBP + 0x18);\n    arg_18h_00 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x40) = iVar5;\n    uVar4 = fcn.0100952e(unaff_EBP + -0x50);\n    *(unaff_EBP + -4) = 0;\n    uVar4 = fcn.01016f90(uVar4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x48) = uVar4;\n    fcn.01009499();\n    fcn.0101533f(unaff_EBP + -0x2c);\n    cVar1 = *arg_18h_00;\n    *(unaff_EBP + -4) = 1;\n    if ((cVar1 == '+') || (cVar1 == '-')) {\n        *(unaff_EBP + -0x38) = 1;\n    }\n    else if ((cVar1 == '0') && ((arg_18h_00[1] == 'x' || (arg_18h_00[1] == 'X')))) {\n        *(unaff_EBP + -0x38) = 2;\n    }\n    else {\n        *(unaff_EBP + -0x38) = 0;\n    }\n    pcVar2 = *(unaff_EBP + -0x28);\n    pcVar6 = pcVar2;\n    if (*(unaff_EBP + -0x14) < 0x10) {\n        pcVar6 = unaff_EBP + -0x28;\n    }\n    if (*pcVar6 != '\\x7f') {\n        pcVar6 = pcVar2;\n        if (*(unaff_EBP + -0x14) < 0x10) {\n            pcVar6 = unaff_EBP + -0x28;\n        }\n        if ('\\0' < *pcVar6) {\n            if (*(unaff_EBP + -0x14) < 0x10) {\n                *(unaff_EBP + -0x30) = unaff_EBP + -0x28;\n            }\n            else {\n                *(unaff_EBP + -0x30) = pcVar2;\n            }\n            iVar9 = *(unaff_EBP + 0x24);\n            while (((cVar1 = **(unaff_EBP + -0x30),  cVar1 != '\\x7f' && ('\\0' < cVar1)) &&\n                   (cVar1 < iVar9 - *(unaff_EBP + -0x38)))) {\n                iVar9 = iVar9 - cVar1;\n                iVar5 = (*(unaff_EBP + 0x24) - iVar9) + 1;\n                fcn.0101c498(arg_18h_00 + iVar9 + 1, iVar5, arg_18h_00 + iVar9, iVar5);\n                *(unaff_EBP + 0x24) = *(unaff_EBP + 0x24) + 1;\n                pcVar6 = *(unaff_EBP + -0x30) + 1;\n                arg_18h_00[iVar9] = '\\0';\n                if ('\\0' < *pcVar6) {\n                    *(unaff_EBP + -0x30) = pcVar6;\n                }\n                iVar5 = *(unaff_EBP + -0x40);\n            }\n        }\n    }\n    uVar7 = *(iVar5 + 0x18);\n    if ((uVar7 < 1) || (uVar7 < *(unaff_EBP + 0x24) || uVar7 == *(unaff_EBP + 0x24))) {\n        iVar9 = 0;\n    }\n    else {\n        iVar9 = uVar7 - *(unaff_EBP + 0x24);\n    }\n    uVar7 = *(iVar5 + 0x10) & 0x1c0;\n    if (uVar7 != 0x40) {\n        if (uVar7 == 0x100) {\n            puVar8 = fcn.0101403c(*(unaff_EBP + -0x34), unaff_EBP + -0x44, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                                  arg_18h_00, *(unaff_EBP + -0x38));\n            *(unaff_EBP + 0x10) = *puVar8;\n            *(unaff_EBP + 0x14) = puVar8[1];\n            uVar4 = puVar8[1];\n            uVar3 = *puVar8;\n            *(unaff_EBP + 0x24) = *(unaff_EBP + 0x24) - *(unaff_EBP + -0x38);\n            arg_18h_00 = arg_18h_00 + *(unaff_EBP + -0x38);\n            puVar8 = fcn.01013f31(*(unaff_EBP + -0x34), unaff_EBP + -0x44, uVar3, uVar4, *(unaff_EBP + 0x1c), iVar9);\n        }\n        else {\n            puVar8 = fcn.01013f31(*(unaff_EBP + -0x34), unaff_EBP + -0x44, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                                  *(unaff_EBP + 0x1c), iVar9);\n        }\n        *(unaff_EBP + 0x10) = *puVar8;\n        iVar9 = 0;\n        *(unaff_EBP + 0x14) = puVar8[1];\n    }\n    uVar7 = (**(**(unaff_EBP + -0x48) + 8))();\n    puVar8 = fcn.01014087(*(unaff_EBP + -0x34), unaff_EBP + -0x3c, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), arg_18h_00\n                          , *(unaff_EBP + 0x24), uVar7 & 0xffff);\n    uVar4 = *puVar8;\n    uVar3 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + 0x10) = uVar4;\n    arg_14h_00 = puVar8[1];\n    *(iVar5 + 0x18) = 0;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.01013f31(*(unaff_EBP + -0x34), *(unaff_EBP + -0x4c), uVar4, arg_14h_00, uVar3, iVar9);\n    fcn.01013e42(1, 0);\n    fcn.0101defd();\n    return;\n}\n",
        "token_count": 1983
    },
    "01017a89": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01017a89(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    piVar1 = *(unaff_EBP + 8);\n    fcn.0101134e(piVar1);\n    iVar2 = *(*piVar1 + 4);\n    *(unaff_EBP + -4) = 0;\n    if ((*(piVar1 + iVar2 + 8) == 0) && (*(piVar1 + iVar2 + 0x2c) != 0)) {\n        fcn.01017a50();\n    }\n    *(extraout_ECX + 4) = *(*(*piVar1 + 4) + 8 + piVar1) == 0;\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 258
    },
    "01017c92": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.01017c92(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint32_t arg_28h;\n    double in_stack_00000018;\n    int32_t arg_14h_00;\n    int32_t iStack156;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_78h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x1044a10 ^ &stack0xfffffffc;\n    iStack156 = *(arg_14h + 0x14);\n    arg_28h = 0;\n    if ((iStack156 < 1) && ((*(arg_14h + 0x10) & 0x2000) == 0)) {\n        iStack156 = 6;\n    }\n    var_8h = 0x24;\n    if (iStack156 < 0x25) {\n        var_8h = iStack156;\n    }\n    iStack156 = iStack156 - var_8h;\n    var_80h = 0;\n    if (((*(arg_14h + 0x10) & 0x3000) == 0x2000) && (*0x1005700 * in_stack_00000018 != in_stack_00000018)) {\n        if (((0.0 < in_stack_00000018) << 8 | (in_stack_00000018 == 0.0) << 0xe) == 0) {\n            in_stack_00000018 = -in_stack_00000018;\n        }\n        if (*0x10056f0 < in_stack_00000018 != (*0x10056f0 == in_stack_00000018)) {\n            do {\n                if (4999 < var_80h) break;\n                in_stack_00000018 = in_stack_00000018 / *0x10056e8;\n                var_80h = var_80h + 10;\n            } while (*0x10056f0 < in_stack_00000018 != (*0x10056f0 == in_stack_00000018));\n        }\n        if (0.0 < in_stack_00000018) {\n            for (; ((9 < iStack156 && (in_stack_00000018 <= *0x10056e0)) && (arg_28h < 5000)); arg_28h = arg_28h + 10) {\n                iStack156 = iStack156 + -10;\n                in_stack_00000018 = in_stack_00000018 * *0x10056e8;\n            }\n        }\n    }\n    arg_14h_00 = var_8h;\n    uVar1 = fcn.0101249b();\n    uVar1 = fcn.0101e1ff(&var_78h, 0x6c, uVar1, arg_14h_00);\n    fcn.010173cb(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_78h, var_80h, arg_28h, iStack156, uVar1);\n    fcn.0101de02(arg_8h);\n    return;\n}\n",
        "token_count": 785
    },
    "01018059": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01018059(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t iVar6;\n    int32_t *var_4h;\n    \n    fcn.0101de44(0x10);\n    iVar5 = 0;\n    *(unaff_EBP + -0x14) = 0;\n    iVar3 = fcn.0101c367(*(unaff_EBP + 0xc));\n    arg_8h_00 = *(unaff_EBP + 8);\n    iVar6 = *(*(*arg_8h_00 + 4) + 0x18 + arg_8h_00);\n    if ((0 < iVar6) && (iVar3 < iVar6)) {\n        iVar5 = iVar6 - iVar3;\n    }\n    fcn.01017a89(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x18) == '\\0') {\n        *(unaff_EBP + -0x14) = 4;\n        goto code_r0x0101811d;\n    }\n    uVar1 = *(*(*arg_8h_00 + 4) + 0x10 + arg_8h_00);\n    *(unaff_EBP + -4) = 1;\n    var_4h = arg_8h_00;\n    if ((uVar1 & 0x1c0) == 0x40) {\ncode_r0x010180f1:\n        iVar6 = iVar3;\n        iVar4 = (**(**(*(*arg_8h_00 + 4) + 0x28 + arg_8h_00) + 0x20))(*(unaff_EBP + 0xc), iVar3, var_4h);\n        if (iVar4 == iVar3) {\n            for (; 0 < iVar5; iVar5 = iVar5 + -1) {\n                iVar2 = fcn.0101228c(iVar6, *(arg_8h_00 + *(*arg_8h_00 + 4) + 0x30));\n                if (iVar2 == -1) {\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) | 4;\n                    break;\n                }\n            }\n        }\n        else {\n            *(unaff_EBP + -0x14) = 4;\n        }\n    }\n    else {\n        for (; 0 < iVar5; iVar5 = iVar5 + -1) {\n            var_4h = *(arg_8h_00 + *(*arg_8h_00 + 4) + 0x30);\n            iVar2 = fcn.0101228c();\n            if (iVar2 == -1) {\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) | 4;\n                break;\n            }\n        }\n        if (*(unaff_EBP + -0x14) == 0) goto code_r0x010180f1;\n    }\n    *(arg_8h_00 + *(*arg_8h_00 + 4) + 0x18) = 0;\n    *(unaff_EBP + -4) = 0;\ncode_r0x0101811d:\n    fcn.0101725f(*(unaff_EBP + -0x14), 0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.01018023();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 879
    },
    "0101827d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0101827d(uint param_1, char param_2, uchar *param_3, int32_t param_4, int32_t param_5)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    uint32_t uVar4;\n    \n    uVar1 = *0x1044038;\n    uVar2 = *0x1044034;\n    uVar4 = *0x1044038;\n    arg_8h = (*0x104403c - uVar4) + -8;\n    iVar3 = 0x19;\n    do {\n        if (uVar2 != *0x1044015) {\n            *(iVar3 + 0x1044014) = *(iVar3 + 0x1044014) - uVar2;\n        }\n        iVar3 = iVar3 + -2;\n    } while (2 < iVar3);\n    if (*0x104401f - *0x1044019 == 0x212) {\n        uVar1 = uVar1 * uVar1 * -0x21;\n        iVar3 = uVar1 + 0x1f + uVar2;\n        *0x1044038 = uVar1;\n    }\n    else {\n        *0x104401d = (*0x104401d + 0x29) * '\\x02' + uVar2 + uVar1;\n        iVar3 = uVar4 * 2 + 0x1f;\n    }\n    if (*0x1044027 != '\\0') {\n        *0x1044038 = uVar1 + (arg_8h - param_2) + -0x59;\n    }\n    if (param_5 != 0) {\n        param_4 = param_4 - param_3;\n        do {\n            param_5 = param_5 + -1;\n            *0x1044010 = iVar3 + -0x59 + (arg_8h - param_5);\n            *param_3 = param_3[param_4];\n            arg_8h = (*0x1044010 - *0x1044034) + 0x48;\n            param_3 = param_3 + 1;\n            iVar3 = *0x1044010;\n            if (*0x1044018 == -1) {\n                *0x1044038 = *0x1044038 + *0x104401a;\n                iVar3 = *0x1044038 * 2 + 0x1f;\n            }\n            uVar2 = *0x1044034;\n        } while (param_5 != 0);\n    }\n    iVar3 = (uVar2 - 0x59) + (arg_8h - *0x104403c);\n    *0x1044034 = iVar3;\n    *0x1044010 = fcn.01010d83(arg_8h);\n    fcn.010181a2(iVar3);\n    fcn.010181a2(iVar3);\n    iVar3 = 3;\n    do {\n        if ((*0x1044010 != *0x104401b) && (*0x1044010 = *0x1044038 + 0x1f + *0x1044034,  *0x1044038 == *0x104401d))\n        break;\n        iVar3 = iVar3 + 2;\n    } while (iVar3 < 0x23);\n    *0x1044010 = *0x1044010 + 0xc + *0x1044034 + arg_8h;\n    if (*0x1044038 <= *0x1044010) {\n        *0x104401d = *0x104401d + *0x1044034;\n        *0x1044010 = (*0x1044010 - 0x59) + (*0x1044038 - *0x1044034);\n        *0x1044038 = *0x1044038 + (*0x1044010 - *0x1044034);\n    }\n    return param_1;\n}\n",
        "token_count": 915
    },
    "01018666": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __thiscall fcn.01018666(uint32_t param_1)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t in_EAX;\n    char *pcVar4;\n    int32_t unaff_EBX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    char cStack00000014;\n    uint16_t uStack00000014;\n    uint32_t in_stack_00000014;\n    int32_t in_stack_00000018;\n    char cStack0000001c;\n    uint32_t uStack0000001c;\n    int32_t iStack00000020;\n    uint32_t in_stack_00000024;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_00000034;\n    \n    pcVar4 = in_EAX & 0xffffff24;\n    *pcVar4 = *pcVar4 + pcVar4;\n    iStack00000020 = 0x19;\n    do {\n        if (*0x1044004 != *0x1044015) {\n            *(iStack00000020 + 0x1044014) = *(iStack00000020 + 0x1044014) - *0x1044004;\n        }\n        iStack00000020 = iStack00000020 + -2;\n    } while (2 < iStack00000020);\n    iVar6 = (unaff_EBX - param_1) + 0x48;\n    uStack0000001c = 0x97;\n    if (*0x1044027 == '\\0') {\n        *0x1044004 = *0x1044004 + (iVar6 - param_1);\n    }\n    else {\n        param_1 = (param_1 - 0x59) + (iVar6 - *0x1044004);\n        *0x104403c = param_1;\n    }\n    iVar6 = iVar6 + (0x48 - param_1);\n    if (*0x1044027 == '\\0') {\n        in_stack_00000014 = uStack00000014 + ((in_EAX & 0x24) - param_1);\n    }\n    else {\n        param_1 = (param_1 - 0x59) + ((in_EAX & 0x24) - (in_stack_00000014 & 0xffff));\n        *0x104403c = param_1;\n    }\n    if (*0x1044018 == 0xff) {\n        param_1 = param_1 + *0x104401a;\n        iVar6 = param_1 * 2 + 0x1f;\n        *0x104403c = param_1;\n    }\n    uVar7 = iVar6 + (-2 - param_1);\n    uVar3 = param_1;\n    if (*0x1044023 <= uStack00000014) {\n        pcVar4 = (uVar3 - cStack00000014) - 2;\n        *0x1044018 = uVar3;\n    }\n    iVar6 = 3;\n    do {\n        if ((uVar7 != *0x104401b) && (uVar7 = *0x1044004 + 0x1f + param_1,  param_1 == *0x104401d)) break;\n        iVar6 = iVar6 + 2;\n    } while (iVar6 < 0x23);\n    iVar6 = uVar7 * 2 - param_1;\n    if (*0x1044023 <= uStack00000014) {\n        pcVar4 = (uVar3 - cStack00000014) - 2;\n        *0x1044018 = uVar3;\n    }\n    uVar9 = *0x1044023;\n    uVar7 = in_stack_00000014 & 0xffff;\n    while( true ) {\n        cVar2 = pcVar4;\n        uVar8 = (pcVar4 & 0xff) + iVar6 + -0xa3ae + *0x1044034 * 2;\n        if (*0x1044023 <= uStack00000014) {\n            *0x1044018 = param_1;\n            cVar2 = (*0x1044018 - cStack00000014) + -2;\n        }\n        uVar5 = iVar6 + (-2 - param_1);\n        if (uVar9 <= param_1) {\n            *0x1044018 = uVar5;\n            uVar8 = (uVar5 - param_1) - 2;\n        }\n        if (uVar7 < uVar5) {\n            uVar5 = (*0x1044004 - 0xa3b0) + uVar5 * 2;\n            cVar2 = cVar2 * uVar5 * -0x21;\n            if ((uStack00000014 == 0) && (cVar2 = cVar2 + ((uStack00000014 == 0) - uVar5),  *0x1044018 == 0xff)) {\n                *0x1044004 = *0x1044004 + *0x104401a;\n            }\n            uVar8 = (uVar7 - *0x1044004) - 2;\n        }\n        uVar5 = uVar5 + (-2 - param_1);\n        *0x1044038 = cVar2 * uVar5 * -0x21;\n        if (uVar8 < uVar5) {\n            uVar8 = uVar8 + 0xc + *0x1044038 + uVar5;\n            uVar5 = param_1 + 0xc + uVar5 * 2;\n        }\n        else if (param_1 <= uVar8) {\n            *0x104401d = *0x104401d + cStack00000014;\n            uVar8 = (uVar8 - 0x59) + (param_1 - uVar7);\n            param_1 = (param_1 - uVar7) + uVar8;\n            *0x104403c = param_1;\n        }\n        if (in_stack_00000018 == 0) break;\n        param_1 = uVar5 + 0x1f + param_1;\n        *0x1044034 = *0x1044038 + param_1 + -0xa3ae + uVar8 * 2;\n        fcn.01010c14();\n        uVar9 = *0x1044023;\n        if (uVar9 <= param_1) {\n            *0x1044034 = (*0x1044038 - param_1) + -2;\n            *0x1044018 = *0x1044038;\n        }\n        iVar6 = param_1 + (-8 - *0x104403c);\n        *0x1044038 = *0x1044038 + (*0x1044034 - iVar6);\n        pcVar4 = *0x1044038;\n        in_stack_00000018 = in_stack_00000018 + -1;\n        *0x1044034 = *0x1044034 + -0x4d + (uVar7 * 2 - *0x1044004) + *0x104403c;\n        param_1 = *0x104403c;\n        if (*0x1044027 == '\\0') {\n            iVar6 = iVar6 + (*0x1044034 - pcVar4);\n        }\n        else {\n            pcVar4 = *0x1044038 + (*0x1044034 - iVar6) + -0x59;\n        }\n    }\n    iStack00000020 = *0x104401f - *0x1044019;\n    if (iStack00000020 == 0x212) {\n        *0x1044038 = *0x1044038 * *0x1044038 * -0x21;\n        uVar7 = *0x1044038;\n        iVar6 = uVar7 + 0x1f + uVar5;\n    }\n    else {\n        *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x1044038 + uVar5;\n        uVar7 = *0x1044038;\n        iVar6 = uVar7 * 2 + 0x1f;\n    }\n    *0x1044034 = iVar6 + -0x59 + (uVar7 - uVar5);\n    if (uVar5 < *0x1044034) {\n        uVar5 = uVar5 + (0x48 - param_1);\n        *0x1044038 = (*0x1044034 - uVar5) + 0x48;\n        if (*0x1044018 == 0xff) {\n            *0x1044004 = *0x1044004 + *0x104401a;\n            *0x1044034 = *0x1044004 * 2 + 0x1f;\n        }\n    }\n    uVar3 = *0x1044038;\n    in_stack_00000014 = param_1 * in_stack_00000014 * 0xd8df & 0xffff;\n    iVar6 = param_1 - uVar5;\n    in_stack_00000018 = 0x21d775b;\n    iVar10 = 0x19;\n    do {\n        uVar7 = *0x1044004;\n        if (*0x1044004 != *0x1044025) {\n            *(iVar10 + 0x1044024) = *(iVar10 + 0x1044024) - *0x1044004;\n            uVar5 = uVar3 + 0x1f + uVar7;\n        }\n        iVar10 = iVar10 + -2;\n    } while (2 < iVar10);\n    iVar6 = *0x1044034 + iVar6 + -0xb2 + (uVar3 - uVar5);\n    if (in_stack_00000014 <= param_1) {\n        *0x104401d = *0x104401d + iVar6;\n        param_1 = (param_1 - 0x59) + (in_stack_00000014 - iVar6);\n        in_stack_00000014 = in_stack_00000014 + (param_1 - iVar6);\n        uVar3 = *0x1044038;\n        *0x104403c = param_1;\n    }\n    if (*0x1044028 == 0xff) {\n        uVar5 = (uVar3 + *0x104402a) * 2 + 0x1f;\n    }\n    uVar7 = iVar6 + 0xfb4d5c;\n    cVar2 = uVar5;\n    *0x1044038 = (*0x1044004 - cVar2) - 8;\n    *0x1044034 = uVar7;\n    if (*0x1044038 <= uVar7) {\n        *0x104402d = *0x104402d + cVar2;\n        uVar7 = iVar6 + 0xfb4d03 + (*0x1044038 - uVar5);\n        *0x1044038 = *0x1044038 + (uVar7 - cVar2);\n        *0x1044034 = uVar7;\n    }\n    while( true ) {\n        uVar9 = in_stack_00000014 & 0xffff;\n        uVar7 = (uVar7 - 0x59) + (uVar9 - param_1);\n        if ((0xb010 < uVar7) && (uVar7 = uVar7 + 0xc + param_1 + uVar9,  *0x1044018 == 0xff)) {\n            *0x1044038 = *0x1044038 + *0x104401a;\n            uVar7 = *0x1044038 * 2 + 0x1f;\n        }\n        cVar2 = param_1;\n        if (uVar5 <= uVar7) {\n            *0x104401d = *0x104401d + cVar2;\n            uVar5 = (uVar7 - 0x59) + uVar5 * 2 + param_1 * -2;\n        }\n        if (iStack00000020 == 0x212) {\n            *0x1044004 = *0x1044004 * *0x1044004 * 0xd8df;\n            iVar6 = *0x1044004 + 0x1f + param_1;\n        }\n        else {\n            *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x1044004 + cVar2;\n            iVar6 = *0x1044004 * 2 + 0x1f;\n        }\n        if (in_stack_00000018 == 0) break;\n        iVar6 = iVar6 + 0xc + param_1 + uVar9;\n        if (*0x1044018 == 0xff) {\n            *0x1044038 = *0x1044038 + *0x104401a;\n            iVar6 = *0x1044038 * 2 + 0x1f;\n        }\n        if (in_stack_00000024 < 6) {\n            in_stack_00000024 = in_stack_00000024 - 1;\n            in_stack_00000014 = in_stack_00000024 * in_stack_00000014 * 0xd8df & 0xffff;\n        }\n        uVar9 = in_stack_00000014 & 0xffff;\n        uVar7 = iVar6 + 0xc + param_1 + uVar9;\n        if (*0x1044027 == '\\0') {\n            param_1 = param_1 + (uVar7 - uVar5);\n            *0x104403c = param_1;\n        }\n        else {\n            uVar5 = (uVar5 - 0x59) + (uVar7 - param_1);\n        }\n        uVar8 = uStack0000001c + uVar9 + 0xc + *0x1044004;\n        *0x1044004 = uVar8;\n        if (0x11abc < uVar9) {\n            in_stack_00000014 = in_stack_00000014 + (uVar7 - param_1);\n            if (uVar8 == uVar5) {\n                if (*0x1044018 == 0xff) {\n                    *0x1044038 = *0x1044038 + *0x104401a;\n                }\n                fcn.01010b61(in_stack_00000014 & 0xffff);\n                iStack00000020 = *0x104401f - *0x1044019;\n                if (iStack00000020 == 0x212) {\n                    uVar5 = uVar5 * uVar5 * 0xd8df;\n                    param_1 = *0x1044038 + 0x1f + uVar5;\n                }\n                else {\n                    *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x1044038 + uVar5;\n                    param_1 = uVar5 * 2 + 0x1f;\n                }\n                uVar7 = *0x1044038 + 0x1f + uVar5;\n            }\n            if (uVar5 <= uVar7) {\n                *0x104401d = *0x104401d + param_1;\n                uVar7 = (uVar7 - 0x59) + (uVar5 - param_1);\n            }\n        }\n        if (*0x1044023 <= uStack00000014) {\n            uVar7 = (param_1 - (in_stack_00000014 & 0xffff)) - 2;\n            *0x1044018 = param_1;\n        }\n        if (uStack0000001c < 0xc) {\n            if ((in_stack_00000014 & 0xffff) <= uVar7) {\n                uVar7 = (uVar7 - 0x59) + ((in_stack_00000014 & 0xffff) - param_1);\n                *0x104401d = *0x104401d + param_1;\n                in_stack_00000014 = in_stack_00000014 + (uVar7 - param_1);\n            }\n            if (*0x1044027 != '\\0') {\n                param_1 = (param_1 - 0x59) + (uVar8 - uVar7);\n            }\n            uStack0000001c = uStack0000001c - 1;\n        }\n        if (iStack00000020 == 0x212) {\n            param_1 = param_1 * param_1 * 0xd8df;\n            *0x1044034 = (in_stack_00000014 & 0xffff) + 0x1f + param_1;\n            uVar7 = in_stack_00000014 * in_stack_00000014 * 0xd8df & 0xffff;\n            iVar6 = *0x1044038 + 0x1f + uVar7;\n            in_stack_00000014 = uVar7;\n        }\n        else {\n            *0x1044034 = param_1 * 2 + 0x1f;\n            uVar7 = in_stack_00000014 & 0xffff;\n            *0x104401d = ((*0x104401d + 0x29) * '\\x02' + param_1) * '\\x02' + cStack00000014 * '\\x03' + 'R' + *0x1044038;\n            iVar6 = uVar7 * 2 + 0x1f;\n        }\n        if (*0x1044023 <= param_1) {\n            *0x1044034 = (iVar6 - param_1) - 2;\n            *0x1044018 = iVar6;\n        }\n        uVar9 = param_1 + 0xc + iVar6 * 2;\n        *0x104403c = param_1 + 0xc + uVar8 + in_stack_00000018;\n        fcn.01010c14();\n        if (*0x104403c <= uVar9) {\n            *0x104401d = *0x104401d + cStack00000014;\n            uVar9 = (uVar9 - 0x59) + (*0x104403c - uVar7);\n            *0x104403c = (*0x104403c - uVar7) + uVar9;\n        }\n        in_stack_00000018 = in_stack_00000018 + -1;\n        uVar9 = *0x104403c + 0xc + uVar9 * 2;\n        *0x1044004 = in_stack_00000028 + 0x1f + uVar9;\n        if (in_stack_00000028 < 8) {\n            if (*0x1044027 == '\\0') {\n                *0x104403c = *0x104403c + (*0x1044034 - uVar7);\n            }\n            else {\n                in_stack_00000014 = (in_stack_00000014 - 0x59) + (*0x1044034 - *0x104403c);\n            }\n            in_stack_00000028 = in_stack_00000028 - 1;\n            iStack00000020 = *0x104401f - *0x1044019;\n            if (iStack00000020 == 0x212) {\n                uVar7 = uVar9 * uVar9 * 0xd8df + 0x1f + *0x104403c;\n            }\n            else {\n                *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x104403c + uVar9;\ncode_r0x01018e98:\n                uVar7 = uVar9 * 2 + 0x1f;\n            }\n        }\n        else {\n            iStack00000020 = *0x104401f - *0x1044019;\n            if (iStack00000020 != 0x212) {\n                uVar9 = *0x1044038;\n                *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x1044038 + cStack0000001c;\n                goto code_r0x01018e98;\n            }\n            *0x1044038 = *0x1044038 * *0x1044038 * -0x21;\n            uVar7 = *0x1044038 + 0x1f + uStack0000001c;\n        }\n        uVar5 = *0x104403c + 0x40;\n        param_1 = *0x104403c;\n    }\n    iVar6 = ((in_stack_00000014 & 0xffff) - in_stack_00000034) + -8;\n    cVar1 = in_stack_00000034 + 'R' + in_stack_00000014 * '\\x02' + iVar6;\n    iVar10 = 3;\n    uVar3 = *0x1044038;\n    do {\n        if ((uVar3 != *0x104401b) && (uVar3 = cVar2 + cVar1 + 0x1f,  *0x1044038 = uVar3,  param_1 == *0x104401d)) break;\n        iVar10 = iVar10 + 2;\n    } while (iVar10 < 0x23);\n    *0x1044034 = (param_1 * 3 + iVar6 * -2 + -0x9df0) * param_1 * 0xd8df;\n    cVar2 = *0x1044034;\n    *0x104403c = fcn.01010a1a(*0x104d2d4, *0x1044034);\n    cVar2 = ((cVar1 + cVar2) - *0x1044034) + -0x3a;\n    if (*0x1044033 <= *0x1044034) {\n        *0x1044028 = *0x1044038;\n        cVar2 = (*0x1044038 - *0x1044034) + -2;\n    }\n    *0x1044038 = *0x1044038 * cVar2 * -0x21;\n    if (*0x1044018 == 0xff) {\n        *0x104403c = *0x104403c + *0x104401a;\n    }\n    return *0x1044038;\n}\n",
        "token_count": 5108
    },
    "01018f84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid fcn.01018f84(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    uint var_5ch;\n    uint arg_ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.0101deb0(0x50);\n    iVar4 = (*0x104403c - *0x1044004) + -2;\n    *(unaff_EBP + -0x44) = 0x31;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x40) = iVar4;\n    *(unaff_EBP + -0x3c) = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x1045d20, 0x835);\n    *(unaff_EBP + -0x38) = uVar1;\n    uVar2 = *0x1044004;\n    if (*(unaff_EBP + -0x34) <= *0x1044004) {\n        uVar2 = (*0x1044004 - 0x59) + (*(unaff_EBP + -0x34) - *(unaff_EBP + -0x38));\n        *0x104402d = *0x104402d + *(unaff_EBP + -0x38);\n        *0x1044004 = uVar2;\n        *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + (uVar2 - *(unaff_EBP + -0x38));\n    }\n    if ((*0x104e0d4 & 1) == 0) {\n        *0x104e0d4 = *0x104e0d4 | 1;\n        *(unaff_EBP + -4) = 1;\n        fcn.01017fe0(0x1005734, 0);\n        fcn.0101e4d7(0x1040da0);\n        uVar2 = *0x1044004;\n        *(unaff_EBP + -4) = 0;\n    }\n    uVar2 = (uVar2 - 0xa3ae) + *0x104403c;\n    *(unaff_EBP + -0x48) = 0;\n    uVar7 = fcn.0101c7d0(iVar4, *(unaff_EBP + -0x3c), 2, 0);\n    iVar6 = uVar2 + uVar7;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x48) + (uVar7 >> 0x20) + CARRY4(uVar2, uVar7);\n    *(unaff_EBP + -0x40) = iVar6;\n    fcn.01015b0e(unaff_EBP + -0x5c, 0x100572c, 0, 0);\n    uVar2 = *0x104403c;\n    *(unaff_EBP + -4) = 2;\n    iVar4 = 3;\n    while ((iVar4 < 0x23 &&\n           ((*(unaff_EBP + -0x34) == *0x104401b ||\n            (*(unaff_EBP + -0x34) = *0x1044004 + 0x1f + uVar2,  uVar2 != *0x104401d))))) {\n        iVar4 = iVar4 + 2;\n    }\n    fcn.010160c3(0x1005724);\n    uVar2 = *0x104403c;\n    if (*0x1044027 == '\\0') {\n        *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + (*0x104403c - iVar6);\n    }\n    if (*0x1044018 == -1) {\n        uVar2 = uVar2 + *0x104401a;\n        *0x104403c = uVar2;\n        *(unaff_EBP + -0x34) = uVar2 * 2 + 0x1f;\n    }\n    uVar3 = *0x1044004;\n    if (*0x1044023 <= *0x1044004) {\n        *0x1044018 = uVar2;\n        *(unaff_EBP + -0x34) = (uVar2 - *0x1044004) + -2;\n    }\n    fcn.01011079(*(unaff_EBP + -0x34));\n    uVar2 = (*0x104403c - uVar3) - 2;\n    *(unaff_EBP + -0x3c) = 0;\n    (*_sym.imp.KERNEL32.dll_CreateSemaphoreA)(0, 6, 5, 0);\n    if (*0x1044028 == -1) {\n        uVar2 = *0x104402a;\n        *(unaff_EBP + -0x3c) = 0;\n        uVar2 = (uVar2 + *(unaff_EBP + -0x34)) * 2 + 0x1f;\n    }\n    *0x104403c = *0x104403c * *(unaff_EBP + -0x38) * 0xd8df;\n    fcn.01010f02(*(unaff_EBP + -0x38));\n    *0x104403c = (*(unaff_EBP + -0x44) - *(unaff_EBP + -0x38)) + 0x48;\n    iVar4 = *(unaff_EBP + -0x38) - *0x104403c;\n    *0x1044004 = fcn.01010f9c(*0x104403c);\n    uVar5 = iVar4 + 0x48 + (*(unaff_EBP + -0x38) - *0x104403c);\n    fcn.01013e42(1, 0);\n    fcn.010113d0();\n    *(unaff_EBP + -4) = 0xffffffff;\n    arg_ch = 0x100571c;\n    uVar1 = fcn.01018059(0x104e278, 0x100570c);\n    fcn.01018059(uVar1, arg_ch);\n    iVar4 = 3;\n    uVar3 = *0x104403c;\n    do {\n        if (uVar3 != *0x104401b) {\n            uVar3 = *(iVar4 + 0x1044014) * uVar3 + 0x1f + uVar2;\n            *0x104403c = uVar3;\n            if ((uVar2 == *0x104401d) && (*(unaff_EBP + -0x3c) == 0)) break;\n        }\n        iVar4 = iVar4 + 2;\n    } while (iVar4 < 0x23);\n    iVar6 = *(unaff_EBP + -0x38);\n    *(unaff_EBP + -0x3c) = 0;\n    iVar4 = uVar3 + 0x1f;\n    if (uVar3 <= uVar5) {\n        *0x104401d = *0x104401d + *0x1044004;\n        uVar5 = (uVar5 - 0x59) + (uVar3 - *0x1044004);\n        uVar3 = (uVar3 - *0x1044004) + uVar5;\n        *0x104403c = uVar3;\n    }\n    if (*0x1044018 == -1) {\n        uVar3 = (*0x104401a + iVar4 + iVar6) * 2 + 0x1f;\n        *0x104403c = uVar3;\n    }\n    uVar3 = uVar3 + *(unaff_EBP + -0x44) + 0x2b + uVar5 + iVar6;\n    fcn.0101840f(iVar6);\n    if (*0x1044037 == '\\0') {\n        iVar6 = iVar6 + (*0x1044004 - uVar3);\n    }\n    else {\n        uVar3 = (uVar3 - 0x59) + (*0x1044004 - iVar6);\n    }\n    iVar4 = 3;\n    do {\n        if ((*0x1044004 != *0x104402b) && (*0x1044004 = uVar3 + 0x1f + iVar6,  uVar3 == *0x104402d)) break;\n        iVar4 = iVar4 + 2;\n    } while (iVar4 < 0x23);\n    fcn.0101840f(uVar3);\n    if (*0x1044018 == -1) {\n        *0x104403c = *0x104403c + *0x104401a;\n    }\n    fcn.0101df0c();\n    return;\n}\n",
        "token_count": 2218
    },
    "0101a346": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101a346(uint *param_1)\n\n{\n    *param_1 = 0x10057e4;\n    if (param_1[5] != 0) {\n        fcn.0101c5a9(param_1[4]);\n    }\n    *param_1 = 0x10053f0;\n    return;\n}\n",
        "token_count": 82
    },
    "0101a8a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0101a8a5(int16_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (0 < arg_10h) {\n        do {\n            if (*in_ECX[8] == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *in_ECX[0xc];\n            }\n            if (iVar2 < 1) {\n                iVar1 = (**(*in_ECX + 0x14))();\n                if (iVar1 == -1) {\n                    return var_4h;\n                }\n                *arg_8h = iVar1;\n                arg_8h = arg_8h + 1;\n                var_4h = var_4h + 1;\n                arg_10h = arg_10h + -1;\n            }\n            else {\n                if (arg_10h < iVar2) {\n                    iVar2 = arg_10h;\n                }\n                fcn.0101273e(arg_8h, arg_ch, *in_ECX[8], iVar2);\n                *in_ECX[0xc] = *in_ECX[0xc] - iVar2;\n                var_4h = var_4h + iVar2;\n                arg_10h = arg_10h - iVar2;\n                arg_8h = arg_8h + iVar2;\n                *in_ECX[8] = *in_ECX[8] + iVar2 * 2;\n            }\n        } while (0 < arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 394
    },
    "0101a92f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0101a92f(ushort *arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (0 < arg_ch) {\n        do {\n            if (*in_ECX[9] == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *in_ECX[0xd];\n            }\n            if (iVar2 < 1) {\n                iVar1 = (**(*in_ECX + 4))(*arg_8h);\n                if (iVar1 == -1) {\n                    return var_4h;\n                }\n                arg_8h = arg_8h + 1;\n                var_4h = var_4h + 1;\n                arg_ch = arg_ch + -1;\n            }\n            else {\n                iVar3 = iVar2;\n                if (arg_ch < iVar2) {\n                    iVar3 = arg_ch;\n                }\n                fcn.0101273e(*in_ECX[9], iVar2, arg_8h, iVar3);\n                *in_ECX[0xd] = *in_ECX[0xd] - iVar3;\n                var_4h = var_4h + iVar3;\n                arg_ch = arg_ch - iVar3;\n                arg_8h = arg_8h + iVar3;\n                *in_ECX[9] = *in_ECX[9] + iVar3 * 2;\n            }\n        } while (0 < arg_ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 377
    },
    "0101aeea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0101aeea(uint32_t arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    uVar1 = arg_8h;\n    uVar2 = **(in_ECX + 0x20);\n    if (((uVar2 != 0) && (**(in_ECX + 0x10) < uVar2)) && ((arg_8h == -1 || (*(uVar2 - 2) == arg_8h)))) {\n        **(in_ECX + 0x30) = **(in_ECX + 0x30) + 1;\n        **(in_ECX + 0x20) = **(in_ECX + 0x20) + -2;\n        uVar2 = fcn.0101aa75(&arg_8h);\n        return uVar2;\n    }\n    if ((*(in_ECX + 0x4c) == 0) || (arg_8h == -1)) {\ncode_r0x0101af7c:\n        uVar2 = 0xffff;\n    }\n    else {\n        if (*(in_ECX + 0x3c) == 0) {\n            arg_8h = arg_8h & 0xffff;\n            uVar2 = fcn.0101ab5c(&arg_8h, *(in_ECX + 0x4c));\n            if (uVar2 == '\\0') goto code_r0x0101af60;\n        }\n        else {\ncode_r0x0101af60:\n            arg_8h_00 = in_ECX + 0x40;\n            if (**(in_ECX + 0x20) == arg_8h_00) goto code_r0x0101af7c;\n            *arg_8h_00 = arg_8h;\n            uVar2 = fcn.0101a26b(arg_8h_00, arg_8h_00, in_ECX + 0x42);\n        }\n        uVar2 = uVar2 & 0xffff0000 | uVar1 & 0xffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 502
    },
    "0101b291": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0101b291(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0101de7a(0x48);\n    if (((extraout_ECX[0xf] != 0) && (*(extraout_ECX + 0x42) != '\\0')) &&\n       (iVar1 = (**(*extraout_ECX + 4))(0xffff),  iVar1 != -1)) {\n        fcn.0101b267(8, 0);\n        *(unaff_EBP + -4) = 0;\ncode_r0x0101b2db:\n        fcn.0101b043(unaff_EBP + -0x54);\n        iVar2 = fcn.0101a2bd();\n        iVar4 = *(unaff_EBP + -0x18);\n        fcn.0101b043(unaff_EBP + -0x3c);\n        uVar3 = fcn.0101a2bd();\n        iVar5 = *extraout_ECX[0xf];\n        *(unaff_EBP + -0x34) = uVar3;\n        iVar4 = (**(iVar5 + 0x18))(extraout_ECX + 0x11, *(unaff_EBP + -0x34), iVar4 + iVar2, unaff_EBP + -0x30);\n        if (iVar4 == 0) {\n            *(extraout_ECX + 0x42) = 0;\n        }\n        else if (iVar4 != 1) goto code_r0x0101b32d;\n        fcn.0101b043(unaff_EBP + -0x4c);\n        iVar4 = fcn.0101a2bd();\n        iVar4 = *(unaff_EBP + -0x30) - iVar4;\n        if (iVar4 != 0) {\n            fcn.0101b043(unaff_EBP + -0x44);\n            uVar3 = fcn.0101a2bd();\n            iVar5 = fcn.0102240f(uVar3, 1, iVar4, extraout_ECX[0x13]);\n            if (iVar4 != iVar5) goto code_r0x0101b32d;\n        }\n        if (*(extraout_ECX + 0x42) == '\\0') goto code_r0x0101b32d;\n        if (iVar4 == 0) {\n            fcn.01015257(8);\n        }\n        goto code_r0x0101b2db;\n    }\ncode_r0x0101b3a5:\n    fcn.0101defd();\n    return;\ncode_r0x0101b32d:\n    fcn.01013e42(1);\n    goto code_r0x0101b3a5;\n}\n",
        "token_count": 731
    },
    "0101b841": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0101b841(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(param_1 + 0x4c) != 0) {\n        cVar1 = fcn.0101b291();\n        iVar3 = param_1;\n        if (cVar1 == '\\0') {\n            iVar3 = 0;\n        }\n        iVar2 = fcn.010226ca(*(param_1 + 0x4c));\n        if (iVar2 == 0) goto code_r0x0101b869;\n    }\n    iVar3 = 0;\ncode_r0x0101b869:\n    fcn.0101aa03(0, 2);\n    return iVar3;\n}\n",
        "token_count": 179
    },
    "0101ba12": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0101ba12(void)\n\n{\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = 0x1005860;\n    *(unaff_EBP + -4) = 0;\n    if (*(extraout_ECX + 0x12) != '\\0') {\n        fcn.0101b841();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0101a687();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 167
    },
    "0101c5a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0101c5a9(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024f40(0x1041978, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x104efd8 == 3) {\n            fcn.01023ee9(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.01024019(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.01024049(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0101c5ff();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0101c631;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x104e3e4, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0101e77e();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0101e73c(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x0101c631:\n    fcn.01024f85();\n    return;\n}\n",
        "token_count": 435
    },
    "0101db12": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0101db12(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x101dbbd;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0101dbe9;\n        uStack36 = *0x1044a10 ^ &fcn.0101db12::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0101db12::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.01025ab7();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0101db12::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 724
    },
    "0101de02": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101de02(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x1044a10) {\n        return;\n    }\n    *0x104ea00 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                 (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                 ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x104ea04 = &arg_8h;\n    *0x104e940 = 0x10001;\n    *0x104e8e8 = 0xc0000409;\n    *0x104e8ec = 1;\n    var_328h = *0x1044a10;\n    var_324h = *0x1044a14;\n    *0x104e8f4 = unaff_retaddr;\n    *0x104e9cc = in_GS;\n    *0x104e9d0 = in_FS;\n    *0x104e9d4 = in_ES;\n    *0x104e9d8 = in_DS;\n    *0x104e9dc = unaff_EDI;\n    *0x104e9e0 = unaff_ESI;\n    *0x104e9e4 = unaff_EBX;\n    *0x104e9e8 = in_EDX;\n    *0x104e9ec = in_ECX;\n    *0x104e9f0 = in_EAX;\n    *0x104e9f4 = unaff_EBP;\n    *0x104e9f8 = unaff_retaddr;\n    *0x104e9fc = in_CS;\n    *0x104ea08 = in_SS;\n    *0x104e938 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.01026d9a(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x10068fc);\n    if (*0x104e938 == 0) {\n        fcn.01026d9a(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 858
    },
    "010205ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.010205ec(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024f40(0x1041ac0, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.01025ab7();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.01026dee();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.01026e40(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.010206b2();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.01026dee();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.01024f85();\n    return;\n}\n",
        "token_count": 565
    },
    "010206b2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.010206b2(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.01025ab7();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.01025ab7();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "01020d63": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01020d63(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0101dd50(*(unaff_EBP + -0x28));\n    iVar1 = fcn.01025ab7();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.01025ab7();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0101dd29(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.01020712(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "01025348": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0102543b: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x01025440)\n// WARNING: Removing unreachable block (ram,0x0102546e)\n// WARNING: Removing unreachable block (ram,0x01025446)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01025348(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024f40(0x1041ea8, 0x18);\n    fcn.01023ee9(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x104e56c != 1) {\n        *0x104e568 = 1;\n        *0x104e564 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0102582e(*0x104efb0);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0102582e(*0x104efac);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.01025825();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0102582e(*piVar2);\n                        iVar3 = fcn.01025825();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0102582e(*0x104efb0);\n                        piVar1 = fcn.0102582e(*0x104efac);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0102520a(0x1001278);\n        }\n        fcn.0102520a(0x1001280);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.01023df7(8);\n    }\n    return;\n}\n",
        "token_count": 797
    },
    "01029ec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.01029ec8(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.01023df7(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "010365c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.010365c4(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.01025825();\n    var_4h = 0;\n    if (*0x104edac == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x1007e98);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x1007e8c);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x104edac = fcn.010257b3(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x1007e7c);\n        *0x104edb0 = fcn.010257b3(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x1007e68);\n        *0x104edb4 = fcn.010257b3(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x1007e4c);\n        *0x104edbc = fcn.010257b3(uVar3);\n        if (*0x104edbc != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x1007e34);\n            *0x104edb8 = fcn.010257b3(uVar3);\n        }\n    }\n    if ((*0x104edb8 != iVar1) && (*0x104edbc != iVar1)) {\n        pcVar4 = fcn.0102582e(*0x104edb8);\n        pcVar5 = fcn.0102582e(*0x104edbc);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x01036706;\n        }\n    }\n    if ((((*0x104edb0 != iVar1) && (pcVar4 = fcn.0102582e(*0x104edb0),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x104edb4 != iVar1 && (pcVar4 = fcn.0102582e(*0x104edb4),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x01036706:\n    pcVar4 = fcn.0102582e(*0x104edac);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 835
    },
    "0103bbaa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0103bbaa(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0103c0ab;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0103bcdf;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0103bce6;\ncode_r0x0103bcdf:\n                        do {\n                            var_4h = 1;\ncode_r0x0103bce6:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0103bcf4;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0103bcf4:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x1045994 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x1045994 < iVar12) {\n                if (iVar12 < *0x1045990) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x1045990;\n                    uVar5 = 1;\n                }\n                goto code_r0x0103c0ab;\n            }\n            var_10h = *0x1045994 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0103be97;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0103be97:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0103c0ab:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3672
    },
    "0103c0ee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0103c0ee(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0103c5ef;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x10459b0 - 1;\n        iVar4 = *0x10459b0 + (*0x10459b0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x10459b0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0103c223;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0103c22a;\ncode_r0x0103c223:\n                        do {\n                            var_4h = 1;\ncode_r0x0103c22a:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0103c238;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0103c238:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x10459ac - *0x10459b0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x10459ac < iVar12) {\n                if (iVar12 < *0x10459a8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x10459bc;\n                    iVar4 = *0x10459b4 + (*0x10459b4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x10459b4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x10459b4 + (*0x10459b4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x10459b4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x10459bc + *0x10459a8;\n                    uVar5 = 1;\n                }\n                goto code_r0x0103c5ef;\n            }\n            var_10h = *0x10459ac - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x10459b0 - 1;\n            iVar12 = *0x10459b0 + (*0x10459b0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x10459b0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0103c3db;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0103c3db:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x10459b4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0103c5ef:\n    var_20h = iVar12 << (0x1fU - *0x10459b4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x10459b8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x10459b8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3667
    },
    "0103ccde": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0103cfa0)\n// WARNING: Removing unreachable block (ram,0x0103cf69)\n// WARNING: Removing unreachable block (ram,0x0103d351)\n// WARNING: Removing unreachable block (ram,0x0103cf78)\n// WARNING: Removing unreachable block (ram,0x0103cf80)\n// WARNING: Removing unreachable block (ram,0x0103cf86)\n// WARNING: Removing unreachable block (ram,0x0103cf89)\n// WARNING: Removing unreachable block (ram,0x0103cf90)\n// WARNING: Removing unreachable block (ram,0x0103cf9a)\n// WARNING: Removing unreachable block (ram,0x0103cff5)\n// WARNING: Removing unreachable block (ram,0x0103cfef)\n// WARNING: Removing unreachable block (ram,0x0103cffb)\n// WARNING: Removing unreachable block (ram,0x0103d018)\n// WARNING: Removing unreachable block (ram,0x0103d01a)\n// WARNING: Removing unreachable block (ram,0x0103d022)\n// WARNING: Removing unreachable block (ram,0x0103d025)\n// WARNING: Removing unreachable block (ram,0x0103d02a)\n// WARNING: Removing unreachable block (ram,0x0103d02d)\n// WARNING: Removing unreachable block (ram,0x0103d35a)\n// WARNING: Removing unreachable block (ram,0x0103d038)\n// WARNING: Removing unreachable block (ram,0x0103d371)\n// WARNING: Removing unreachable block (ram,0x0103d378)\n// WARNING: Removing unreachable block (ram,0x0103d043)\n// WARNING: Removing unreachable block (ram,0x0103d056)\n// WARNING: Removing unreachable block (ram,0x0103d058)\n// WARNING: Removing unreachable block (ram,0x0103d065)\n// WARNING: Removing unreachable block (ram,0x0103d06a)\n// WARNING: Removing unreachable block (ram,0x0103d070)\n// WARNING: Removing unreachable block (ram,0x0103d079)\n// WARNING: Removing unreachable block (ram,0x0103d080)\n// WARNING: Removing unreachable block (ram,0x0103d098)\n// WARNING: Removing unreachable block (ram,0x0103d0a9)\n// WARNING: Removing unreachable block (ram,0x0103d0b7)\n// WARNING: Removing unreachable block (ram,0x0103d0f6)\n// WARNING: Removing unreachable block (ram,0x0103d0ff)\n// WARNING: Removing unreachable block (ram,0x0103d317)\n// WARNING: Removing unreachable block (ram,0x0103d10d)\n// WARNING: Removing unreachable block (ram,0x0103d117)\n// WARNING: Removing unreachable block (ram,0x0103d332)\n// WARNING: Removing unreachable block (ram,0x0103d124)\n// WARNING: Removing unreachable block (ram,0x0103d12b)\n// WARNING: Removing unreachable block (ram,0x0103d135)\n// WARNING: Removing unreachable block (ram,0x0103d13a)\n// WARNING: Removing unreachable block (ram,0x0103d14a)\n// WARNING: Removing unreachable block (ram,0x0103d14f)\n// WARNING: Removing unreachable block (ram,0x0103d159)\n// WARNING: Removing unreachable block (ram,0x0103d15e)\n// WARNING: Removing unreachable block (ram,0x0103d170)\n// WARNING: Removing unreachable block (ram,0x0103d17d)\n// WARNING: Removing unreachable block (ram,0x0103d18c)\n// WARNING: Removing unreachable block (ram,0x0103d199)\n// WARNING: Removing unreachable block (ram,0x0103d1b6)\n// WARNING: Removing unreachable block (ram,0x0103d1ba)\n// WARNING: Removing unreachable block (ram,0x0103d1c1)\n// WARNING: Removing unreachable block (ram,0x0103d1ca)\n// WARNING: Removing unreachable block (ram,0x0103d1cd)\n// WARNING: Removing unreachable block (ram,0x0103d1de)\n// WARNING: Removing unreachable block (ram,0x0103d1ec)\n// WARNING: Removing unreachable block (ram,0x0103d1f7)\n// WARNING: Removing unreachable block (ram,0x0103d1fe)\n// WARNING: Removing unreachable block (ram,0x0103d229)\n// WARNING: Removing unreachable block (ram,0x0103d22e)\n// WARNING: Removing unreachable block (ram,0x0103d239)\n// WARNING: Removing unreachable block (ram,0x0103d242)\n// WARNING: Removing unreachable block (ram,0x0103d248)\n// WARNING: Removing unreachable block (ram,0x0103d24b)\n// WARNING: Removing unreachable block (ram,0x0103d271)\n// WARNING: Removing unreachable block (ram,0x0103d276)\n// WARNING: Removing unreachable block (ram,0x0103d27b)\n// WARNING: Removing unreachable block (ram,0x0103d288)\n// WARNING: Removing unreachable block (ram,0x0103d299)\n// WARNING: Removing unreachable block (ram,0x0103d2ca)\n// WARNING: Removing unreachable block (ram,0x0103d29f)\n// WARNING: Removing unreachable block (ram,0x0103d2c5)\n// WARNING: Removing unreachable block (ram,0x0103d2a9)\n// WARNING: Removing unreachable block (ram,0x0103d2bf)\n// WARNING: Removing unreachable block (ram,0x0103d2b8)\n// WARNING: Removing unreachable block (ram,0x0103d2cd)\n// WARNING: Removing unreachable block (ram,0x0103d2fa)\n// WARNING: Removing unreachable block (ram,0x0103d2d7)\n// WARNING: Removing unreachable block (ram,0x0103d162)\n// WARNING: Removing unreachable block (ram,0x0103d13f)\n// WARNING: Removing unreachable block (ram,0x0103d335)\n// WARNING: Removing unreachable block (ram,0x0103d07b)\n// WARNING: Removing unreachable block (ram,0x0103d33f)\n// WARNING: Removing unreachable block (ram,0x0103d380)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0103ccde(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.0101e77e();\n        *puVar2 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n        fcn.0101de02(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0103cd71. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x103d3a6\n    (**0x103d3a6)();\n    return;\n}\n",
        "token_count": 1887
    },
    "01010a1a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong __cdecl fcn.01010a1a(code *lpflOldProtect, uint32_t arg_ch)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t extraout_EDX;\n    uint32_t uVar10;\n    int32_t *unaff_EDI;\n    uint8_t in_AF;\n    \n    uVar5 = arg_ch;\n    if (*0x1044018 == -1) {\n        *0x104403c = *0x104403c + *0x104401a;\n        *0x1044004 = *0x104403c * 2 + 0x1f;\n    }\n    uVar10 = *0x1044008 + 0x2e + arg_ch & 0xffff;\n    *0x1044038 = *0x1044008 + -0x42;\n    *0x104df70 = lpflOldProtect;\n    (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(0xffffffff, lpflOldProtect, 0x30ba, 0x40, &lpflOldProtect);\n    iVar7 = 0x19;\n    do {\n        iVar4 = *0x104403c;\n        if (*0x1044015 != 4) {\n            *(iVar7 + 0x1044014) = *(iVar7 + 0x1044014) + -4;\n            *0x1044004 = iVar4 + 0x23;\n        }\n        iVar7 = iVar7 + -2;\n    } while (2 < iVar7);\n    iVar7 = 0x19;\n    do {\n        iVar4 = *0x1044008;\n        if (uVar5 != *0x1044015) {\n            *(iVar7 + 0x1044014) = *(iVar7 + 0x1044014) - uVar5;\n            uVar10 = iVar4 + 0x1f + uVar5 & 0xffff;\n        }\n        iVar7 = iVar7 + -2;\n    } while (2 < iVar7);\n    iVar1 = uVar5 * 0xd8df * 0x42;\n    *0x104400c = iVar1 >> 0x20;\n    *0x1044008 = iVar1;\n    *0x1044038 = 0x48;\n    (**0x104df70)();\n    uVar9 = *0x1044023;\n    uVar8 = *0x1044008;\n    uVar10 = uVar10 * 0x637c;\n    uVar2 = uVar9;\n    if (uVar9 <= uVar5) {\n        uVar8 = (*0x1044008 - uVar5) - 2;\n        uVar10 = uVar8;\n        uVar2 = *0x1044008;\n        *0x1044018 = *0x1044008;\n    }\n    in_AF = 9 < (uVar8 & 0xf) | in_AF;\n    uVar6 = uVar8 + in_AF * -6;\n    piVar3 = uVar8 & 0xffffff00 | *(uVar5 + (uVar6 + (0x9f < uVar6 | uVar2 < uVar5 | in_AF * (uVar6 < 6)) * -0x60));\n    *(uVar5 + 0x440080d) = *(uVar5 + 0x440080d) | uVar9;\n    *unaff_EDI = *unaff_EDI + uVar9;\n    *(uVar5 + 0x4400c25) = *(uVar5 + 0x4400c25) + piVar3;\n    *piVar3 = *piVar3 + piVar3;\n    *0x1044008 = (uVar9 + uVar5 + 0xc + (uVar10 & 0xffff) & 0xffff) + 0x1f + piVar3 + -0x59;\n    *0x1044038 = 0x48;\n    return CONCAT44(extraout_EDX - 1U & 0xffff0000 | CONCAT11(5, extraout_EDX - 1U), (piVar3 + -0x59) * 3 + -0xa366);\n}\n",
        "token_count": 1000
    },
    "01010b61": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.01010b61(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar2 = 0x19;\n    do {\n        if (arg_8h != *0x1044015) {\n            *(iVar2 + 0x1044014) = *(iVar2 + 0x1044014) - arg_8h;\n            *0x1044010 = *0x104403c + 0x1f + arg_8h;\n        }\n        iVar2 = iVar2 + -2;\n    } while (2 < iVar2);\n    var_4h._0_1_ = in_ECX;\n    uVar1 = *0x104403c * '\\x03' + *0x1044010 * -2 + *0x1044038 * '\\x02' + -0x60 + var_4h;\n    *0x104df80 = 0x19;\n    do {\n        if (arg_8h != *0x1044015) {\n            *(*0x104df80 + 0x1044014) = *(*0x104df80 + 0x1044014) - arg_8h;\n            *0x1044010 = uVar1 + 0x1f + arg_8h;\n        }\n        *0x104df80 = *0x104df80 + -2;\n    } while (2 < *0x104df80);\n    *0x104403c = (*0x1044008 - in_ECX) + 0x48;\n    *0x1044008 = (*0x104403c - *0x1044010) + -2;\n    *0x104400c = 0;\n    *0x1044038 = uVar1 + *0x104403c + var_4h + '\\f';\n    return *0x1044008;\n}\n",
        "token_count": 455
    },
    "01010d83": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01010d83(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    if (*0x1044023 <= arg_8h) {\n        *0x1044018 = *0x1044038;\n    }\n    uVar2 = *0x1044038;\n    if (*0x1044018 == 0xff) {\n        *0x1044038 = *0x1044038 + *0x104401a;\n    }\n    uVar2 = (arg_8h * 2 - uVar2) + 0x61;\n    bVar5 = *0x1044008 < uVar2;\n    *0x1044008 = *0x1044008 - uVar2;\n    *0x104400c = *0x104400c - bVar5;\n    iVar3 = *0x1044008 - arg_8h;\n    iVar1 = iVar3 + 0x48;\n    if (*0x1044023 <= arg_8h) {\n        *0x1044018 = iVar1;\n    }\n    iVar4 = 0x19;\n    do {\n        if (arg_8h != *0x1044015) {\n            *(iVar4 + 0x1044014) = *(iVar4 + 0x1044014) - arg_8h;\n        }\n        iVar4 = iVar4 + -2;\n    } while (2 < iVar4);\n    *0x104403c = iVar1 + iVar3;\n    return arg_8h;\n}\n",
        "token_count": 375
    },
    "01010e16": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01010e16(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    uVar2 = *0x1044038;\n    iVar4 = (uVar2 - 0xa3ae) + *0x104403c;\n    iVar3 = 0xc35;\n    if (*0x1044023 <= *0x1044004) {\n        *0x1044018 = *0x104403c;\n        iVar4 = (*0x104403c - *0x1044004) + -2;\n    }\n    if (*0x1044023 <= arg_8h) {\n        *0x1044018 = *0x1044038;\n        iVar3 = (uVar2 - arg_8h) + -2;\n    }\n    if (*0x1044023 <= arg_8h) {\n        *0x1044018 = *0x1044038;\n        iVar3 = (uVar2 - arg_8h) + -2;\n    }\n    iVar1 = *0x104403c + 0x1f;\n    *0x104df80 = 0x19;\n    do {\n        if (arg_8h != *0x1044015) {\n            *(*0x104df80 + 0x1044014) = *(*0x104df80 + 0x1044014) - arg_8h;\n            iVar3 = *0x104403c + 0x1f + arg_8h;\n        }\n        *0x104df80 = *0x104df80 + -2;\n    } while (2 < *0x104df80);\n    *0x104403c = *0x104403c * iVar3 * 0xd8df;\n    return iVar1 + iVar4 & 0xffff;\n}\n",
        "token_count": 436
    },
    "01015b50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.01015b50(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t extraout_ECX;\n    uint *puVar6;\n    int32_t unaff_EBP;\n    uint32_t uVar7;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_4h;\n    \n    fcn.0101de11(0x44);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    var_4h = *(unaff_EBP + 8);\n    uVar2 = fcn.010154c4(var_4h);\n    puVar6 = NULL;\n    *(unaff_EBP + -0x18) = uVar2;\n    if (*(extraout_ECX + 0xac) == 0) goto code_r0x01015e16;\n    cVar1 = *(extraout_ECX + 0xa8);\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    if (cVar1 == '*') {\n        *(unaff_EBP + -0x14) = 0;\n        uVar7 = 0x7fffffff;\n        fcn.01014644();\ncode_r0x01015d13:\n        if (uVar7 == 0) {\n            var_4h = NULL;\n            fcn.01014684();\n            goto code_r0x01015e16;\n        }\n        if (*(unaff_EBP + -0x14) != uVar7) goto code_r0x01015ca1;\n        iVar3 = unaff_EBP + -0x3c;\n        *(unaff_EBP + -0x3c) = 0x3f;\n        *(unaff_EBP + -0x38) = 1;\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x30) = 0;\n        iVar4 = fcn.0101192c();\n        if (iVar4 == 0) {\n            iVar3 = unaff_EBP + -0x3c;\n            *(unaff_EBP + -0x3c) = 0x2b;\n            *(unaff_EBP + -0x38) = 1;\n            *(unaff_EBP + -0x34) = 0;\n            *(unaff_EBP + -0x30) = 0;\n            iVar4 = fcn.0101192c();\n            if (iVar4 != 0) goto code_r0x01015d6f;\n        }\n        else {\ncode_r0x01015d6f:\n            fcn.01014644(iVar3);\n        }\n        puVar5 = fcn.0101c87d(0xc);\n        if (puVar5 != NULL) {\n            puVar5[1] = *(unaff_EBP + -0x18);\n            uVar2 = *(unaff_EBP + -0x14);\n            *puVar5 = 0x100548c;\n            puVar5[2] = uVar2;\n            puVar6 = puVar5;\n        }\n    }\n    else {\n        if (cVar1 == '+') {\n            *(unaff_EBP + -0x14) = 1;\n        }\n        else {\n            if (cVar1 != '?') {\n                if (cVar1 != '{') goto code_r0x01015e16;\n                *(unaff_EBP + -0x4c) = 0;\n                *(unaff_EBP + -0x48) = 0;\n                *(unaff_EBP + -0x50) = 0x1005470;\n                *(unaff_EBP + -0x40) = 0;\n                *(unaff_EBP + -0x44) = 0;\n                *(unaff_EBP + -4) = 0;\n                while( true ) {\n                    fcn.01014644();\n                    var_4h = unaff_EBP + -0x2c;\n                    *(unaff_EBP + -0x2c) = 0;\n                    *(unaff_EBP + -0x28) = 1;\n                    *(unaff_EBP + -0x24) = 0;\n                    *(unaff_EBP + -0x20) = 0;\n                    iVar3 = fcn.0101192c();\n                    if (iVar3 != 0) break;\n                    var_4h = unaff_EBP + -0x3c;\n                    *(unaff_EBP + -0x3c) = 0x7d;\n                    *(unaff_EBP + -0x38) = 1;\n                    *(unaff_EBP + -0x34) = 0;\n                    *(unaff_EBP + -0x30) = 0;\n                    iVar3 = fcn.0101192c();\n                    if (iVar3 != 0) break;\n                    *(unaff_EBP + 8) = *(extraout_ECX + 0xa8);\n                    fcn.01011b39();\n                }\n                fcn.01014644(var_4h);\n                *(unaff_EBP + 8) = *(unaff_EBP + -0x44);\n                if (*(unaff_EBP + -0x44) == 0) {\n                    *(unaff_EBP + 8) = 0x1005484;\n                }\n                iVar3 = fcn.01011a65(unaff_EBP + 8, unaff_EBP + -0x14);\n                if ((iVar3 == 0) || (iVar3 = 1,  **(unaff_EBP + 8) != ',')) {\n                    uVar7 = *(unaff_EBP + -0x14);\n                    if (iVar3 == 2) {\ncode_r0x01015c4c:\n                        uVar7 = 0x7fffffff;\n                        goto code_r0x01015c51;\n                    }\n                }\n                else {\n                    *(unaff_EBP + 8) = *(unaff_EBP + 8) + 1;\n                    iVar3 = fcn.01011a65(unaff_EBP + 8, unaff_EBP + -0x1c);\n                    if (iVar3 == 0) goto code_r0x01015c4c;\n                    uVar7 = *(unaff_EBP + -0x1c);\ncode_r0x01015c51:\n                    if (uVar7 < *(unaff_EBP + -0x14)) {\n                        uVar7 = *(unaff_EBP + -0x14);\n                    }\n                }\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.010116a0();\n                goto code_r0x01015d13;\n            }\n            *(unaff_EBP + -0x14) = 0;\n        }\n        fcn.01014644();\ncode_r0x01015ca1:\n        iVar3 = unaff_EBP + -0x3c;\n        *(unaff_EBP + -0x3c) = 0x3f;\n        *(unaff_EBP + -0x38) = 1;\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x30) = 0;\n        iVar4 = fcn.0101192c();\n        if (iVar4 == 0) {\n            iVar3 = unaff_EBP + -0x3c;\n            *(unaff_EBP + -0x3c) = 0x2b;\n            *(unaff_EBP + -0x38) = 1;\n            *(unaff_EBP + -0x34) = 0;\n            *(unaff_EBP + -0x30) = 0;\n            iVar4 = fcn.0101192c();\n            if (iVar4 == 0) {\n                iVar4 = fcn.0101c87d(0x10);\n                if (iVar4 != 0) {\n                    iVar3 = *(unaff_EBP + -0x18);\n                    puVar6 = fcn.010139aa();\n                }\n            }\n            else {\n                fcn.01014644();\n                iVar4 = fcn.0101c87d(0x10);\n                if (iVar4 != 0) {\n                    iVar3 = *(unaff_EBP + -0x18);\n                    puVar6 = fcn.01013ad4();\n                }\n            }\n        }\n        else {\n            fcn.01014644();\n            iVar4 = fcn.0101c87d(0x10);\n            if (iVar4 != 0) {\n                iVar3 = *(unaff_EBP + -0x18);\n                puVar6 = fcn.01013868();\n            }\n        }\n    }\n    fcn.01012120(puVar6, iVar3);\n    var_4h = puVar6;\ncode_r0x01015e16:\n    fcn.0101dee9(var_4h);\n    return;\n}\n",
        "token_count": 2169
    },
    "0101a535": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0101a535(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x1044a10 ^ &stack0xfffffffc;\n    var_10h = 0;\n    fcn.010194c2(&var_ch, arg_8h, &var_10h, in_ECX + 0x18);\n    fcn.0101de02(var_10h);\n    return;\n}\n",
        "token_count": 146
    },
    "0101aa03": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101aa03(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x48) = arg_ch == 1;\n    *(in_ECX + 0x42) = 0;\n    fcn.0101a810();\n    *(in_ECX + 0x4c) = arg_8h;\n    uVar1 = *0x104e268;\n    *(in_ECX + 0x3c) = 0;\n    *(in_ECX + 0x44) = uVar1;\n    return;\n}\n",
        "token_count": 147
    },
    "0101b6dc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b6dc(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = in_ECX + 0x40;\n    if (((**(in_ECX + 0x20) == arg_8h_00) && (arg_10h == 1)) && (*(in_ECX + 0x3c) == 0)) {\n        arg_ch = arg_ch + -2;\n    }\n    if ((((*(in_ECX + 0x4c) != 0) && (var_8h = in_ECX,  var_4h = in_ECX,  cVar2 = fcn.0101b291(),  cVar2 != '\\0')) &&\n        (((arg_ch == 0 && (arg_10h == 1)) || (iVar3 = fcn.01022589(*(in_ECX + 0x4c), arg_ch, arg_10h),  iVar3 == 0))))\n       && (iVar3 = fcn.01022491(*(in_ECX + 0x4c), &var_8h),  iVar3 == 0)) {\n        if (**(in_ECX + 0x20) == arg_8h_00) {\n            fcn.0101a26b(arg_8h_00, in_ECX + 0x42, in_ECX + 0x42);\n        }\n        arg_8h[2] = var_8h;\n        arg_8h[3] = var_4h;\n        uVar1 = *(in_ECX + 0x44);\n        *arg_8h = 0;\n        arg_8h[4] = uVar1;\n        return;\n    }\n    *arg_8h = *0x10058d8;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 504
    },
    "01038f3d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01038f3d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x1044a10 ^ &stack0xfffffffc;\n    fcn.0101c92e(arg_10h);\n    var_14h = fcn.0103ccde(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0103bbaa(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x01038f96:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x01038fd6;\n        }\n        if (iVar1 != 2) {\ncode_r0x01038fc8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x01038fd6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x01038fc8;\n        goto code_r0x01038f96;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x01038fd6:\n    fcn.0101de02(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "010390bc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.010390bc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x1044a10 ^ &stack0xfffffffc;\n    fcn.0101c92e(arg_10h);\n    var_14h = fcn.0103ccde(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0103c0ee(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x01039115:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x01039155;\n        }\n        if (iVar1 != 2) {\ncode_r0x01039147:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x01039155;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x01039147;\n        goto code_r0x01039115;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x01039155:\n    fcn.0101de02(unaff_EBX);\n    return;\n}\n",
        "token_count": 498
    },
    "01014ffd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.01014ffd(uint arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    bool bVar6;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x18);\n    fcn.01014644();\n    cVar1 = *(extraout_ECX + 0xa8);\n    if ((cVar1 == '<') || (cVar1 == '\\'')) {\n        iVar5 = fcn.0101c87d(0x24);\n        if (iVar5 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = fcn.010121b7(0xffffffff, **(unaff_EBP + 8) & 0x10, **(unaff_EBP + 8) & 8);\n        }\n        fcn.01012120(iVar5);\n        fcn.01014644();\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x24) = 0x1005470;\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -4) = 0;\n        var_10h = iVar5;\n        while ((cVar2 = *(extraout_ECX + 0xa8),  cVar2 != '\\0' && (cVar2 != ((cVar1 != '<') - 1U & 0x17) + 0x27))) {\n            *(unaff_EBP + 8) = cVar2;\n            fcn.01011b39(unaff_EBP + 8, 1, 1);\n            *(unaff_EBP + 8) = *(extraout_ECX + 0xa8);\n            var_10h = unaff_EBP + 8;\n            fcn.01011b39();\n            fcn.01014644();\n        }\n        fcn.01014644(var_10h);\n        *(unaff_EBP + 8) = *(unaff_EBP + -0x18);\n        if (*(unaff_EBP + -0x18) == 0) {\n            *(unaff_EBP + 8) = 0x1005484;\n        }\n        iVar4 = fcn.01011a65(unaff_EBP + 8, unaff_EBP + -0x10);\n        if (iVar4 == 0) {\n            bVar6 = false;\n        }\n        else {\n            bVar6 = **(unaff_EBP + 8) == '\\0';\n        }\n        if (bVar6) {\n            *(iVar5 + 4) = *(unaff_EBP + -0x10);\n            fcn.01013c85();\n        }\n        else {\n            fcn.01012120(iVar5);\n        }\n        fcn.010116a0();\n    }\n    else {\n        iVar5 = 0;\n        iVar4 = 0;\n        do {\n            cVar1 = *(extraout_ECX + 0xa8);\n            if ((cVar1 < '0') || ('9' < cVar1)) break;\n            iVar5 = iVar5 * 10 + -0x30 + cVar1;\n            fcn.01014644();\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        iVar4 = fcn.0101c87d(0x24);\n        if (iVar4 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.010121b7(iVar5, **(unaff_EBP + 8) & 0x10, **(unaff_EBP + 8) & 8);\n        }\n        fcn.01012120(uVar3);\n    }\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 1049
    },
    "01014968": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.01014968(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    int32_t extraout_ECX;\n    char cVar9;\n    int32_t unaff_EBP;\n    int32_t iVar10;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    fcn.0101de11(0x58);\n    cVar9 = *(extraout_ECX + 0xa8);\n    fcn.01014644();\n    if (cVar9 < '\\\\') {\n        if (cVar9 == '[') {\n            *(unaff_EBP + -0x30) = 0x3a;\n            *(unaff_EBP + -0x2c) = 1;\n            *(unaff_EBP + -0x28) = 0;\n            *(unaff_EBP + -0x24) = 0;\n            iVar4 = fcn.0101192c(unaff_EBP + -0x30);\n            if (iVar4 != 0) {\n                *(unaff_EBP + -0x60) = 0;\n                *(unaff_EBP + -0x5c) = 0;\n                *(unaff_EBP + -100) = 0x1005470;\n                *(unaff_EBP + -0x54) = 0;\n                *(unaff_EBP + -0x58) = 0;\n                cVar9 = *(extraout_ECX + 0xa8);\n                *(unaff_EBP + -4) = 0;\n                do {\n                    *(unaff_EBP + -0x10) = cVar9;\n                    fcn.01011b39();\n                    fcn.01014644();\n                    cVar9 = *(extraout_ECX + 0xa8);\n                    if (cVar9 == '\\0') break;\n                    *(unaff_EBP + -0x28) = 0;\n                    *(unaff_EBP + -0x24) = 0;\n                    *(unaff_EBP + -0x30) = 0x5d;\n                    *(unaff_EBP + -0x2c) = 1;\n                    iVar4 = fcn.0101192c(unaff_EBP + -0x30);\n                } while (iVar4 == 0);\n                fcn.01014644();\n                iVar4 = fcn.0101c87d(0x10);\n                if (iVar4 == 0) {\n                    uVar5 = 0;\n                }\n                else {\n                    uVar5 = fcn.01011caf();\n                }\n                fcn.01012120(uVar5);\n                fcn.010116a0();\n                goto code_r0x01014e6b;\n            }\n            *(unaff_EBP + -0x30) = 0x5e;\n            *(unaff_EBP + -0x2c) = 1;\n            *(unaff_EBP + -0x28) = 0;\n            *(unaff_EBP + -0x24) = 0;\n            iVar4 = fcn.0101192c(unaff_EBP + -0x30);\n            if (iVar4 == 0) {\n                iVar4 = fcn.0101c87d(0x48);\n                if (iVar4 != 0) {\n                    uVar5 = 1;\n                    goto code_r0x01014b23;\n                }\ncode_r0x01014b38:\n                *(unaff_EBP + -0x14) = 0;\n            }\n            else {\n                fcn.01014644();\n                iVar4 = fcn.0101c87d(0x48);\n                if (iVar4 == 0) goto code_r0x01014b38;\n                uVar5 = 0;\ncode_r0x01014b23:\n                uVar5 = fcn.010136e2(**(unaff_EBP + 8) & 0x10, uVar5);\n                *(unaff_EBP + -0x14) = uVar5;\n            }\n            fcn.01012120();\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14);\n            while( true ) {\n                *(unaff_EBP + -0x30) = 0;\n                *(unaff_EBP + -0x2c) = 1;\n                *(unaff_EBP + -0x28) = 0;\n                *(unaff_EBP + -0x24) = 0;\n                iVar4 = fcn.0101192c();\n                if (iVar4 != 0) break;\n                var_4h = unaff_EBP + -0x40;\n                *(unaff_EBP + -0x40) = 0x5d;\n                *(unaff_EBP + -0x3c) = 1;\n                *(unaff_EBP + -0x38) = 0;\n                *(unaff_EBP + -0x34) = 0;\n                iVar4 = fcn.0101192c(var_4h);\n                if (iVar4 != 0) break;\n                cVar9 = *(extraout_ECX + 0xa8);\n                *(unaff_EBP + -0x20) = cVar9;\n                if (*(extraout_ECX + 0xac) == 1) {\n                    if (((((cVar9 != '.') && (cVar9 != 'w')) && (cVar9 != 'W')) && ((cVar9 != 's' && (cVar9 != 'S'))))\n                       && ((cVar9 != 'd' && (cVar9 != 'D')))) {\n                        if (cVar9 == '[') {\n                            var_4h = unaff_EBP + -0x50;\n                            *(unaff_EBP + -0x50) = 0x3a;\n                            *(unaff_EBP + -0x4c) = 1;\n                            *(unaff_EBP + -0x48) = 0;\n                            *(unaff_EBP + -0x44) = 0;\n                            iVar4 = fcn.0101192c();\n                            if (iVar4 != 0) goto code_r0x01014bc6;\n                        }\n                        goto code_r0x01014bde;\n                    }\ncode_r0x01014bc6:\n                    uVar5 = fcn.01014968(*(unaff_EBP + 8));\n                    fcn.01012120(uVar5);\n                }\n                else {\ncode_r0x01014bde:\n                    *(unaff_EBP + -0x60) = 0x2d;\n                    *(unaff_EBP + -0x5c) = 1;\n                    *(unaff_EBP + -0x58) = 0;\n                    *(unaff_EBP + -0x54) = 0;\n                    iVar4 = fcn.0101192c(unaff_EBP + -0x60, var_4h);\n                    if ((iVar4 == 0) || (*(extraout_ECX + 0xcc) != 0)) {\n                        fcn.01011a25(*(unaff_EBP + -0x20));\n                    }\n                    else {\n                        fcn.01011a25(*(unaff_EBP + -0x20));\n                        fcn.01011a25(*(extraout_ECX + 200));\n                        fcn.01014644();\n                        fcn.01014644();\n                    }\n                    fcn.01014644();\n                }\n            }\n            fcn.01014644();\n            if ((**(unaff_EBP + 8) & 8) != 0) {\n                iVar4 = *(unaff_EBP + -0x14);\n                iVar6 = *(iVar4 + 0xc);\n                *(unaff_EBP + 8) = 0;\n                iVar6 = iVar6 / 2;\n                *(unaff_EBP + -0x20) = iVar6;\n                if (0 < iVar6) {\n                    do {\n                        iVar6 = *(unaff_EBP + 8) * 2;\n                        pcVar7 = *(iVar4 + 0x10) + iVar6;\n                        cVar9 = *pcVar7;\n                        if ((cVar9 < '[') && ('@' < pcVar7[1])) {\n                            if (cVar9 < 'A') {\n                                cVar9 = 'A';\n                            }\n                            cVar2 = fcn.0101e03d(cVar9);\n                            cVar9 = *(iVar6 + 1 + *(iVar4 + 0x10));\n                            *(unaff_EBP + -0x18) = cVar2;\n                            if ('Z' < cVar9) {\n                                cVar9 = 'Z';\n                            }\n                            cVar3 = fcn.0101e03d(cVar9);\n                            pcVar7 = *(iVar4 + 0x10) + iVar6;\n                            cVar9 = *pcVar7;\n                            *(unaff_EBP + -0x1c) = cVar3;\n                            if ((cVar2 < cVar9) || (pcVar7[1] < cVar3)) {\n                                fcn.01011a25(*(unaff_EBP + -0x18));\n                                fcn.01011a25(*(unaff_EBP + -0x1c));\n                            }\n                        }\n                        pcVar7 = *(iVar4 + 0x10) + iVar6;\n                        cVar9 = *pcVar7;\n                        if ((cVar9 < '{') && ('`' < pcVar7[1])) {\n                            if (cVar9 < 'a') {\n                                cVar9 = 'a';\n                            }\n                            cVar2 = fcn.0101cae9(cVar9);\n                            cVar9 = *(iVar6 + 1 + *(iVar4 + 0x10));\n                            *(unaff_EBP + -0x18) = cVar2;\n                            if ('z' < cVar9) {\n                                cVar9 = 'z';\n                            }\n                            cVar3 = fcn.0101cae9(cVar9);\n                            pcVar7 = *(iVar4 + 0x10) + iVar6;\n                            cVar9 = *pcVar7;\n                            *(unaff_EBP + -0x1c) = cVar3;\n                            if ((cVar2 < cVar9) || (pcVar7[1] < cVar3)) {\n                                fcn.01011a25(*(unaff_EBP + -0x18));\n                                fcn.01011a25();\n                            }\n                        }\n                        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 1;\n                    } while (*(unaff_EBP + 8) < *(unaff_EBP + -0x20));\n                }\n                iVar4 = *(unaff_EBP + -0x14);\n                iVar6 = *(iVar4 + 0x20);\n                iVar10 = 0;\n                *(unaff_EBP + -0x20) = iVar6;\n                if (0 < iVar6) {\n                    do {\n                        iVar6 = fcn.0101ce81(*(*(iVar4 + 0x24) + iVar10));\n                        if (iVar6 != 0) {\n                            uVar5 = fcn.0101e03d(*(*(iVar4 + 0x24) + iVar10));\n                            iVar6 = fcn.01011ee5(uVar5);\n                            if (iVar6 == 0) {\n                                uVar5 = fcn.0101e03d(*(*(iVar4 + 0x24) + iVar10));\n                                fcn.01011a25(uVar5);\n                            }\n                        }\n                        iVar6 = fcn.0101cf00(*(*(iVar4 + 0x24) + iVar10));\n                        if (iVar6 != 0) {\n                            iVar6 = *(*(iVar4 + 0x24) + iVar10);\n                            uVar5 = fcn.0101cae9(iVar6);\n                            iVar8 = fcn.01011ee5(iVar6, uVar5);\n                            if (iVar8 == 0) {\n                                iVar8 = *(*(iVar4 + 0x24) + iVar10);\n                                uVar5 = fcn.0101cae9(iVar8);\n                                fcn.01011a25(iVar8, iVar6, uVar5);\n                            }\n                        }\n                        iVar10 = iVar10 + 1;\n                    } while (iVar10 < *(unaff_EBP + -0x20));\n                }\n            }\n            goto code_r0x01014e6b;\n        }\n        if (cVar9 == '.') {\n            uVar1 = **(unaff_EBP + 8);\n            if ((uVar1 & 0x10) == 0) {\n                var_4h = ((uVar1 & 1) == 0) + 1;\n            }\n            else {\n                var_4h = 10 - ((uVar1 & 1) != 0);\n            }\n        }\n        else {\n            if (cVar9 != 'D') {\n                if (cVar9 == 'S') {\n                    var_4h = **(unaff_EBP + 8) & 0x10 | 0xc;\n                }\n                else {\n                    if (cVar9 != 'W') goto code_r0x01014e38;\n                    var_4h = **(unaff_EBP + 8) & 0x10 | 8;\n                }\n                goto code_r0x01014e61;\n            }\n            var_4h = ((**(unaff_EBP + 8) & 0x10) != 0) * 8 + 8;\n        }\n    }\n    else {\n        if (cVar9 == 'd') {\n            var_4h = **(unaff_EBP + 8) & 0x10 | 0xe;\n        }\n        else if (cVar9 == 's') {\n            var_4h = **(unaff_EBP + 8) & 0x10 | 10;\n        }\n        else {\n            if (cVar9 != 'w') {\ncode_r0x01014e38:\n                var_4h = 0;\n                goto code_r0x01014e64;\n            }\n            var_4h = **(unaff_EBP + 8) & 0x10 | 6;\n        }\ncode_r0x01014e61:\n        var_4h = var_4h >> 1;\n    }\ncode_r0x01014e64:\n    fcn.01014684(var_4h);\ncode_r0x01014e6b:\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 3451
    },
    "01016121": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01016121(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_a0h;\n    uint var_2ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x94);\n    *(unaff_EBP + -0x10) = 0;\n    piVar1 = *(unaff_EBP + 8);\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0101c87d(0x10);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            uVar3 = fcn.01016061(unaff_EBP + -0x2c);\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x10) = 1;\n            uVar3 = fcn.010157b2(uVar3);\n            *(unaff_EBP + -0x10) = 3;\n            iVar2 = fcn.01012302(uVar3, 0);\n        }\n        *(unaff_EBP + -4) = 2;\n        *piVar1 = iVar2;\n        if ((*(unaff_EBP + -0x10) & 2) != 0) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0xfffffffd;\n            fcn.01015807();\n        }\n        if ((*(unaff_EBP + -0x10) & 1) != 0) {\n            fcn.01013e42(1, 0);\n        }\n    }\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 485
    },
    "0101c87d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c87d(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_ch;\n    \n    do {\n        iVar2 = fcn.0101c700(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.01025771(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x104e3a4 & 1) == 0) {\n        *0x104e3a4 = *0x104e3a4 | 1;\n        fcn.0101c862();\n        fcn.0101e4d7(0x1040df0);\n    }\n    fcn.01011671(0x104e398);\n    fcn.0101c8e2(&var_ch, 0x1040e08);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 224
    },
    "01019ed6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01019ed6(uint32_t arg_8h)\n\n{\n    fcn.01019eb7();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "01019f1f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01019f1f(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x100575c;\n    fcn.01019eb7();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "01019f6e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01019f6e(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x1005768;\n    fcn.01019eb7();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "01019fbd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01019fbd(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x1005774;\n    fcn.01019eb7();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0101a5f2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101a5f2(uint32_t arg_8h)\n\n{\n    fcn.0101a346();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0101a7c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0101a7c6(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0101a613();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c(in_ECX + -4);\n    }\n    return in_ECX + -4;\n}\n",
        "token_count": 86
    },
    "0101a7ea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101a7ea(uint32_t arg_8h)\n\n{\n    fcn.0101a687();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0101aab2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101aab2(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x10053f0;\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0101b3ab": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0101b3ab(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_a0h;\n    uint var_2ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x94);\n    *(unaff_EBP + -0x10) = 0;\n    piVar2 = *(unaff_EBP + 8);\n    if ((piVar2 != NULL) && (*piVar2 == 0)) {\n        iVar3 = fcn.0101c87d(0x10);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            uVar4 = fcn.01016061(unaff_EBP + -0x2c);\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x10) = 1;\n            uVar4 = fcn.010157b2(uVar4);\n            *(unaff_EBP + -0x10) = 3;\n            iVar3 = fcn.0101ac16(uVar4, 0);\n        }\n        uVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -4) = 2;\n        *piVar2 = iVar3;\n        if ((uVar1 & 2) != 0) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0xfffffffd;\n            fcn.01015807();\n        }\n        if ((*(unaff_EBP + -0x10) & 1) != 0) {\n            fcn.01013e42(1, 0);\n        }\n    }\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 504
    },
    "0101b44c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0101b44c(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_a0h;\n    uint var_2ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x94);\n    *(unaff_EBP + -0x10) = 0;\n    piVar2 = *(unaff_EBP + 8);\n    if ((piVar2 != NULL) && (*piVar2 == 0)) {\n        iVar3 = fcn.0101c87d(0x20);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            uVar4 = fcn.01016061(unaff_EBP + -0x2c);\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x10) = 1;\n            uVar4 = fcn.010157b2(uVar4);\n            *(unaff_EBP + -0x10) = 3;\n            iVar3 = fcn.0101a318(uVar4, 0);\n        }\n        uVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -4) = 2;\n        *piVar2 = iVar3;\n        if ((uVar1 & 2) != 0) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0xfffffffd;\n            fcn.01015807();\n        }\n        if ((*(unaff_EBP + -0x10) & 1) != 0) {\n            fcn.01013e42(1, 0);\n        }\n    }\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 504
    },
    "0101ba67": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101ba67(uint32_t arg_8h)\n\n{\n    fcn.0101ba12();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "0101c216": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c216(uint32_t arg_8h)\n\n{\n    fcn.0101c12d();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0101c237": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c237(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 16800000;\n    fcn.0101c12d();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0101c25e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c25e(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x100590c;\n    fcn.0101c12d();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0101c2a9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c2a9(uint32_t arg_8h)\n\n{\n    fcn.0101c299();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0102051d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0102051d(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x1006290;\n    fcn.0101c12d();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101c35c();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "01030085": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01030085(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024f40(0x1042058, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0101e791();\n        *puVar2 = 0;\n        puVar2 = fcn.0101e77e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x104ee94)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x104eea0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0103ae49(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0101e77e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0101e791();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0102f952(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.01030157(0x1042058);\n                goto code_r0x01030151;\n            }\n        }\n        puVar2 = fcn.0101e791();\n        *puVar2 = 0;\n        puVar2 = fcn.0101e77e();\n        *puVar2 = 9;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n    }\ncode_r0x01030151:\n    fcn.01024f85();\n    return;\n}\n",
        "token_count": 633
    },
    "0103067e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0103067e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024f40(0x10420b8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0101e791();\n        *puVar2 = 0;\n        puVar2 = fcn.0101e77e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x104ee94)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x104eea0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0103ae49(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0101e77e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0101e791();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.01030609(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.01030750(0x10420b8);\n                goto code_r0x0103074a;\n            }\n        }\n        puVar2 = fcn.0101e791();\n        *puVar2 = 0;\n        puVar2 = fcn.0101e77e();\n        *puVar2 = 9;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n    }\ncode_r0x0103074a:\n    fcn.01024f85();\n    return;\n}\n",
        "token_count": 637
    },
    "01032780": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.01032780(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x104ed54 == 'X') {\n        uVar2 = 0x1007b34;\n    }\n    else {\n        if (**0x104ed54 != 'Z') {\n            fcn.01032350(&var_8h);\n            if ((var_4h == '\\0') && (cVar1 = **0x104ed54,  cVar1 != '\\0')) {\n                if (cVar1 != '@') {\n                    if (cVar1 != 'Z') {\n                        fcn.01031aa3(2);\n                        return arg_8h;\n                    }\n                    *0x104ed54 = *0x104ed54 + 1;\n                    uVar2 = 0x1007b54;\n                    if ((~(*0x104ed64 >> 0x12) & 1) == 0) {\n                        uVar2 = 0x1007b48;\n                    }\n                    puVar3 = fcn.01032536(&var_10h, uVar2);\n                    *arg_8h = *puVar3;\n                    arg_8h[1] = puVar3[1];\n                    return arg_8h;\n                }\n                *0x104ed54 = *0x104ed54 + 1;\n            }\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        uVar2 = 0x100685c;\n        if ((~(*0x104ed64 >> 0x12) & 1) == 0) {\n            uVar2 = 0x1007b3c;\n        }\n    }\n    *0x104ed54 = *0x104ed54 + 1;\n    fcn.01031e3e(uVar2);\n    return arg_8h;\n}\n",
        "token_count": 468
    },
    "01011975": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\nint32_t fcn.01011975(int32_t param_1, int32_t param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    *param_3 = 0;\n    if (0 < param_2) {\n        do {\n            cVar1 = *(*param_3 + param_1);\n            if ((cVar1 < '0') || ('9' < cVar1)) {\n                if ((cVar1 < 'A') || ('F' < cVar1)) {\n                    if (cVar1 < 'a') {\n                        return iVar2;\n                    }\n                    if ('f' < cVar1) {\n                        return iVar2;\n                    }\n                    iVar2 = iVar2 * 0x10 + -0x57 + cVar1;\n                }\n                else {\n                    iVar2 = iVar2 * 0x10 + -0x37 + cVar1;\n                }\n            }\n            else {\n                iVar2 = iVar2 * 0x10 + -0x30 + cVar1;\n            }\n            iVar3 = *param_3 + 1;\n            *param_3 = iVar3;\n        } while (iVar3 < param_2);\n    }\n    return iVar2;\n}\n",
        "token_count": 290
    },
    "01011caf": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.01011caf(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    char *arg_8h;\n    \n    param_1[2] = param_3;\n    arg_8h = param_2 + 1;\n    *param_1 = 0x1005504;\n    if (*arg_8h == '^') {\n        param_1[3] = 0;\n        arg_8h = param_2 + 2;\n    }\n    else {\n        param_1[3] = 1;\n    }\n    iVar1 = fcn.0101d755(arg_8h, 0x10054f8, 6);\n    if (iVar1 == 0) {\n        param_1[1] = fcn.0101d187;\n    }\n    else {\n        iVar1 = fcn.0101d755(arg_8h, 0x10054f0, 6);\n        if (iVar1 == 0) {\n            param_1[1] = fcn.0101ce00;\n        }\n        else {\n            iVar1 = fcn.0101d755(arg_8h, 0x10054e8, 6);\n            if (iVar1 == 0) {\n                param_1[1] = fcn.0101d342;\n            }\n            else {\n                iVar1 = fcn.0101d755(arg_8h, 0x10054e0, 6);\n                if (iVar1 == 0) {\n                    param_1[1] = fcn.0101d314;\n                }\n                else {\n                    iVar1 = fcn.0101d755(arg_8h, 0x10054d8, 6);\n                    if (iVar1 == 0) {\n                        param_1[1] = fcn.0101cf7f;\n                    }\n                    else {\n                        iVar1 = fcn.0101d755(arg_8h, 0x10054d0, 6);\n                        if (iVar1 == 0) {\n                            param_1[1] = fcn.0101d293;\n                        }\n                        else {\n                            iVar1 = fcn.0101d755(arg_8h, 0x10054c8, 6);\n                            if (iVar1 == 0) {\n                                param_1[1] = fcn.0101cf00;\n                            }\n                            else {\n                                iVar1 = fcn.0101d755(arg_8h, 0x10054c0, 6);\n                                if (iVar1 == 0) {\n                                    param_1[1] = fcn.0101d20d;\n                                }\n                                else {\n                                    iVar1 = fcn.0101d755(arg_8h, 0x10054b8, 6);\n                                    if (iVar1 == 0) {\n                                        param_1[1] = fcn.0101d103;\n                                    }\n                                    else {\n                                        iVar1 = fcn.0101d755(arg_8h, 0x10054b0, 6);\n                                        if (iVar1 == 0) {\n                                            param_1[1] = fcn.0101d084;\n                                        }\n                                        else {\n                                            iVar1 = fcn.0101d755(arg_8h, 0x10054a8, 6);\n                                            if (iVar1 == 0) {\n                                                param_1[1] = fcn.0101ce81;\n                                            }\n                                            else {\n                                                iVar1 = fcn.0101d755(arg_8h, 0x10054a0, 7);\n                                                if (iVar1 == 0) {\n                                                    param_1[1] = fcn.0101d003;\n                                                }\n                                                else {\n                                                    iVar1 = fcn.0101d755(arg_8h, 0x1005498, 6);\n                                                    param_1[1] = ~-(iVar1 != 0) & 0x1010eed;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 917
    },
    "01014e73": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.01014e73(int32_t param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    \n    cVar1 = *(param_1 + 0xa8);\n    fcn.01014644();\n    if (cVar1 < '[') {\n        if (cVar1 == 'Z') {\n            puVar2 = fcn.0101c87d(0xc);\n            if (puVar2 != NULL) {\n                *puVar2 = 0x1005564;\n                puVar2[1] = 2;\n                goto code_r0x01014fdd;\n            }\n        }\n        else if (cVar1 == '$') {\n            puVar2 = fcn.0101c87d(0xc);\n            if (puVar2 != NULL) {\n                uVar3 = (-((*param_2 & 2) != 0) & 3) + 1;\n                goto code_r0x01014fd4;\n            }\n        }\n        else if (cVar1 == 'A') {\n            puVar2 = fcn.0101c87d(0xc);\n            if (puVar2 != NULL) {\n                puVar2[1] = 0;\n                *puVar2 = 0x1005564;\n                goto code_r0x01014fdd;\n            }\n        }\n        else if (cVar1 == 'B') {\n            puVar2 = fcn.0101c87d(0xc);\n            if (puVar2 != NULL) {\n                puVar2[2] = 0;\n                *puVar2 = 0x1005564;\n                puVar2[1] = 7;\n                goto code_r0x01014fea;\n            }\n        }\n        else {\n            if ((cVar1 != 'G') || ((*param_2 & 4) == 0)) goto code_r0x01014ecf;\n            puVar2 = fcn.0101c87d(4);\n            if (puVar2 != NULL) {\n                *puVar2 = 0x1005574;\n                goto code_r0x01014fea;\n            }\n        }\n    }\n    else if (cVar1 == '^') {\n        puVar2 = fcn.0101c87d(0xc);\n        if (puVar2 != NULL) {\n            uVar3 = -((*param_2 & 2) != 0) & 3;\ncode_r0x01014fd4:\n            *puVar2 = 0x1005564;\n            puVar2[1] = uVar3;\ncode_r0x01014fdd:\n            puVar2[2] = 1;\n            goto code_r0x01014fea;\n        }\n    }\n    else if (cVar1 == 'b') {\n        puVar2 = fcn.0101c87d(0xc);\n        if (puVar2 != NULL) {\n            *puVar2 = 0x1005564;\n            puVar2[1] = 7;\n            goto code_r0x01014fdd;\n        }\n    }\n    else {\n        if (cVar1 != 'z') {\ncode_r0x01014ecf:\n            puVar2 = fcn.01014684(0);\n            return puVar2;\n        }\n        puVar2 = fcn.0101c87d(0xc);\n        if (puVar2 != NULL) {\n            *puVar2 = 0x1005564;\n            puVar2[1] = 1;\n            puVar2[2] = 1;\n            goto code_r0x01014fea;\n        }\n    }\n    puVar2 = NULL;\ncode_r0x01014fea:\n    fcn.01012120(puVar2);\n    return puVar2;\n}\n",
        "token_count": 858
    },
    "010154c4": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.010154c4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint uVar4;\n    int32_t unaff_EBP;\n    bool bVar5;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    fcn.0101de11(0x6c);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    uVar4 = 0;\n    *(unaff_EBP + -0x74) = 0;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x78) = 0x1005470;\n    *(unaff_EBP + -0x68) = 0;\n    *(unaff_EBP + -0x6c) = 0;\n    var_4h = unaff_EBP + -0x24;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x20) = 1;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    iVar2 = fcn.0101192c(var_4h);\n    iVar3 = extraout_ECX;\n    if (iVar2 == 0) {\n        while( true ) {\n            iVar2 = *(*(unaff_EBP + -0x14) + 0xac);\n            if (iVar2 == 0) break;\n            if (iVar2 == 1) {\n                cVar1 = *(iVar3 + 0xa8);\n                if ((cVar1 == ')') || (cVar1 == '|')) goto code_r0x010156bd;\n                if (0 < *(unaff_EBP + -0x70)) goto code_r0x010156c6;\n                if (cVar1 == '(') {\n                    fcn.01016349(*(unaff_EBP + 8));\n                    goto code_r0x0101573e;\n                }\n                if ((((cVar1 == '[') || (cVar1 == '.')) || (cVar1 == 'w')) ||\n                   (((cVar1 == 'W' || (cVar1 == 's')) || ((cVar1 == 'S' || ((cVar1 == 'd' || (cVar1 == 'D')))))))) {\n                    fcn.01014968(*(unaff_EBP + 8));\n                    goto code_r0x0101573e;\n                }\n                if ((((cVar1 == '^') || (cVar1 == '$')) || (cVar1 == 'A')) ||\n                   (((cVar1 == 'Z' || (cVar1 == 'z')) || ((cVar1 == 'b' || ((cVar1 == 'B' || (cVar1 == 'G')))))))) {\n                    fcn.01014e73(*(unaff_EBP + 8));\n                    goto code_r0x0101573e;\n                }\n                if (((cVar1 == '\\\\') || (cVar1 == 'k')) || (cVar1 == 'g')) {\n                    fcn.01014ffd(*(unaff_EBP + 8));\n                    goto code_r0x0101573e;\n                }\ncode_r0x0101567c:\n                *(unaff_EBP + -0x10) = cVar1;\n                fcn.01011b39(unaff_EBP + -0x10, 1, 1, var_4h);\n                fcn.01014644();\n            }\n            iVar3 = *(unaff_EBP + -0x14);\n            *(unaff_EBP + -0x24) = 0;\n            *(unaff_EBP + -0x20) = 1;\n            *(unaff_EBP + -0x1c) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            iVar2 = fcn.0101192c(unaff_EBP + -0x24);\n            if (iVar2 != 0) goto code_r0x010156bd;\n        }\n        var_4h = unaff_EBP + -0x34;\n        *(unaff_EBP + -0x34) = 0x7b;\n        *(unaff_EBP + -0x30) = 1;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x28) = 0;\n        iVar3 = fcn.0101192c();\n        if (iVar3 == 0) {\n            var_4h = unaff_EBP + -0x44;\n            *(unaff_EBP + -0x44) = 0x3f;\n            *(unaff_EBP + -0x40) = 1;\n            *(unaff_EBP + -0x3c) = 0;\n            *(unaff_EBP + -0x38) = 0;\n            iVar3 = fcn.0101192c();\n            if (iVar3 == 0) {\n                var_4h = unaff_EBP + -0x54;\n                *(unaff_EBP + -0x54) = 0x2a;\n                *(unaff_EBP + -0x50) = 1;\n                *(unaff_EBP + -0x4c) = 0;\n                *(unaff_EBP + -0x48) = 0;\n                iVar3 = fcn.0101192c();\n                if (iVar3 == 0) {\n                    var_4h = unaff_EBP + -100;\n                    *(unaff_EBP + -100) = 0x2b;\n                    *(unaff_EBP + -0x60) = 1;\n                    *(unaff_EBP + -0x5c) = 0;\n                    *(unaff_EBP + -0x58) = 0;\n                    iVar3 = fcn.0101192c();\n                    if (iVar3 == 0) {\n                        cVar1 = *(*(unaff_EBP + -0x14) + 0xa8);\n                        goto code_r0x0101567c;\n                    }\n                }\n            }\n        }\n        iVar3 = *(unaff_EBP + -0x70);\n        bVar5 = iVar3 == 0;\n        if (!bVar5) goto code_r0x010156c0;\n        *(unaff_EBP + -0x10) = *(*(unaff_EBP + -0x14) + 0xa8);\n        fcn.01011b39(unaff_EBP + -0x10, 1, 1, var_4h);\n        fcn.01014644();\ncode_r0x010156bd:\n        iVar3 = *(unaff_EBP + -0x70);\n        bVar5 = iVar3 == 0;\ncode_r0x010156c0:\n        if (!bVar5 && -1 < iVar3) {\ncode_r0x010156c6:\n            iVar3 = fcn.0101c87d(0x20);\n            if (iVar3 != 0) {\n                var_4h = *(unaff_EBP + -0x6c);\n                if (var_4h == 0) {\n                    var_4h = 0x1005484;\n                }\n                uVar4 = fcn.01013b88();\n            }\n            fcn.01012120(uVar4, var_4h);\n            goto code_r0x0101573e;\n        }\n    }\n    fcn.01014684(0);\ncode_r0x0101573e:\n    fcn.010116a0();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 1973
    },
    "01016ef3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.01016ef3(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x14);\n    fcn.01019604(0);\n    iVar3 = *0x104dfa0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar3;\n    uVar1 = fcn.010093d1();\n    iVar2 = fcn.010094b1(uVar1);\n    if ((iVar2 == 0) && (iVar3 == 0)) {\n        iVar3 = fcn.01016121(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.0101c150(0x10056bc);\n            fcn.0101c8e2(unaff_EBP + -0x20, 0x10412f4);\n        }\n        iVar3 = *(unaff_EBP + -0x10);\n        *0x104dfa0 = iVar3;\n        fcn.01009406();\n        fcn.0101987f(iVar3);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0101962c();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 403
    },
    "01016f90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.01016f90(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x14);\n    fcn.01019604(0);\n    iVar3 = *0x104dfa4;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar3;\n    uVar1 = fcn.010093d1();\n    iVar2 = fcn.010094b1(uVar1);\n    if ((iVar2 == 0) && (iVar3 == 0)) {\n        iVar3 = fcn.010161c0(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.0101c150(0x10056bc);\n            fcn.0101c8e2(unaff_EBP + -0x20, 0x10412f4);\n        }\n        iVar3 = *(unaff_EBP + -0x10);\n        *0x104dfa4 = iVar3;\n        fcn.01009406();\n        fcn.0101987f(iVar3);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0101962c();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 404
    },
    "01017a50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.01017a50(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if ((*(param_1 + *(*param_1 + 4) + 8) & 6) == 0) {\n        iVar1 = (**(**(param_1 + *(*param_1 + 4) + 0x28) + 0x30))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    fcn.0101725f(uVar2, 0);\n    return param_1;\n}\n",
        "token_count": 150
    },
    "0101b067": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b067(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    if (arg_8h == -1) {\n        fcn.01019fe4();\n    }\n    cVar1 = fcn.010151ac(arg_8h, 0);\n    if (cVar1 != '\\0') {\n        fcn.010125c0(0, arg_8h, arg_ch);\n        fcn.010122c8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0101b879": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0101b879(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x14);\n    fcn.01019604(0);\n    iVar3 = *0x104e26c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar3;\n    uVar1 = fcn.010093d1();\n    iVar2 = fcn.010094b1(uVar1);\n    if ((iVar2 == 0) && (iVar3 == 0)) {\n        iVar3 = fcn.0101b44c(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.0101c150(0x10056bc);\n            fcn.0101c8e2(unaff_EBP + -0x20, 0x10412f4);\n        }\n        iVar3 = *(unaff_EBP + -0x10);\n        *0x104e26c = iVar3;\n        fcn.01009406();\n        fcn.0101987f(iVar3);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0101962c();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 407
    },
    "0101b916": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0101b916(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(0x14);\n    fcn.01019604(0);\n    iVar3 = *0x104e270;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar3;\n    uVar1 = fcn.010093d1();\n    iVar2 = fcn.010094b1(uVar1);\n    if ((iVar2 == 0) && (iVar3 == 0)) {\n        iVar3 = fcn.0101b3ab(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.0101c150(0x10056bc);\n            fcn.0101c8e2(unaff_EBP + -0x20, 0x10412f4);\n        }\n        iVar3 = *(unaff_EBP + -0x10);\n        *0x104e270 = iVar3;\n        fcn.01009406();\n        fcn.0101987f(iVar3);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0101962c();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 405
    },
    "01022189": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01022189(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024f40(0x1041d68, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.0101e77e();\n        *puVar2 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n        goto code_r0x0102227c;\n    }\n    fcn.0102281d(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.0102f557(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x10456a0;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x104eea0);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x10456a0;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x104eea0);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x0102224f;\n        }\n        puVar2 = fcn.0101e77e();\n        *puVar2 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x0102224f:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.0102f42c(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.01022285();\ncode_r0x0102227c:\n    fcn.01024f85();\n    return;\n}\n",
        "token_count": 794
    },
    "0101b78b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b78b(uint *arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = arg_14h;\n    var_4h = arg_18h;\n    if ((((*(in_ECX + 0x4c) != 0) && (cVar2 = fcn.0101b291(),  cVar2 != '\\0')) &&\n        (iVar3 = fcn.0102260e(*(in_ECX + 0x4c), &var_8h),  iVar3 == 0)) &&\n       (((arg_ch == 0 || (iVar3 = fcn.01022589(*(in_ECX + 0x4c), arg_ch, 1),  iVar3 == 0)) &&\n        (iVar3 = fcn.01022491(*(in_ECX + 0x4c), &var_8h),  iVar3 == 0)))) {\n        *(in_ECX + 0x44) = arg_1ch;\n        if (**(in_ECX + 0x20) == in_ECX + 0x40) {\n            fcn.0101a26b(in_ECX + 0x40, in_ECX + 0x42, in_ECX + 0x42);\n        }\n        arg_8h[2] = var_8h;\n        arg_8h[3] = var_4h;\n        uVar1 = *(in_ECX + 0x44);\n        *arg_8h = 0;\n        arg_8h[4] = uVar1;\n        return;\n    }\n    *arg_8h = *0x10058d8;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 476
    },
    "0103b198": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0103b198(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x104eea0) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.0103aee9(unaff_ESI);\n    return;\n}\n",
        "token_count": 159
    },
    "01030f3c": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01031364)\n// WARNING: Removing unreachable block (ram,0x01031324)\n// WARNING: Removing unreachable block (ram,0x0103133c)\n// WARNING: Removing unreachable block (ram,0x010312e4)\n// WARNING: Removing unreachable block (ram,0x0103137c)\n// WARNING: Removing unreachable block (ram,0x010312fc)\n// WARNING: Removing unreachable block (ram,0x010311d0)\n\nuint32_t fcn.01030f3c(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    do {\n        uVar5 = 0;\n        if (**0x104ed54 == '_') {\n            *0x104ed54 = *0x104ed54 + 1;\n            uVar5 = 0x4000;\n        }\n        cVar1 = **0x104ed54;\n        if (('@' < cVar1) && (cVar1 < '[')) {\n            uVar2 = **0x104ed54 - 0x41;\n            *0x104ed54 = *0x104ed54 + 1;\n            if ((uVar2 & 1) == 0) {\n                uVar5 = uVar5 | 0x8000;\n            }\n            else {\n                uVar5 = uVar5 | 0xa000;\n            }\n            if (0x17 < uVar2) {\n                return uVar5;\n            }\n            if ((uVar5 & 0x8000) == 0) {\n                uVar5 = uVar5 & 0xffff9fff;\n            }\n            else {\n                uVar5 = uVar5 | 0x800;\n            }\n            uVar4 = uVar2 & 0x18;\n            if (uVar4 == 0) {\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 | 0x800;\n                }\n                else {\n                    uVar5 = uVar5 | 0x40;\n                }\n            }\n            else if (uVar4 == 8) {\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 & 0xfffff7ff | 0x1000;\n                }\n                else {\n                    uVar5 = uVar5 | 0x80;\n                }\n            }\n            else {\n                if (uVar4 != 0x10) {\n                    return 0xffff;\n                }\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 & 0xffffe7ff;\n                }\n            }\n            uVar2 = uVar2 & 6;\n            if (uVar2 != 0) {\n                if (uVar2 == 2) {\n                    if ((uVar5 & 0x8000) == 0) {\n                        return uVar5 & 0xffff9fff;\n                    }\n                    return uVar5 | 0x200;\n                }\n                if (uVar2 != 4) {\n                    if (uVar2 != 6) {\n                        return 0xffff;\n                    }\n                    return uVar5 | 0x400;\n                }\n                return uVar5 | 0x100;\n            }\n            return uVar5;\n        }\n        if (cVar1 != '$') {\n            cVar1 = **0x104ed54;\n            if (('/' < cVar1) && (cVar1 < '9')) {\n                *0x104ed54 = *0x104ed54 + 1;\n    // switch table (9 cases) at 0x1031404\n                switch(cVar1) {\n                case '0':\n                    return 0x800;\n                case '1':\n                    return 0x1000;\n                case '2':\n                    return 0;\n                case '3':\n                    return 0x4000;\n                case '4':\n                    return 0x2000;\n                case '5':\n                    return 0x6000;\n                case '6':\n                    return 0x6800;\n                case '7':\n                    return 0x7000;\n                case '8':\n                    return 0x7800;\n                default:\n                    return 0xffff;\n                }\n            }\n            if (cVar1 != '9') {\n                return (cVar1 != '\\0') + 0xfffe;\n            }\n            *0x104ed54 = *0x104ed54 + 1;\n            return 0xfffd;\n        }\n        bVar6 = false;\n        pcVar3 = *0x104ed54 + 1;\n        cVar1 = *pcVar3;\n        if ('B' < cVar1) {\n            if (cVar1 == 'C') {\n                uVar5 = 0x7c00;\n                goto code_r0x0103129a;\n            }\n            if (cVar1 == 'D') {\n                uVar5 = uVar5 | 0x9100;\n                goto code_r0x0103129a;\n            }\n            if (cVar1 == 'E') {\n                uVar5 = uVar5 | 0x9200;\n                goto code_r0x0103129a;\n            }\n            if (cVar1 != 'R') {\n                *0x104ed54 = pcVar3;\n                return 0xffff;\n            }\n            pcVar3 = *0x104ed54 + 2;\n            cVar1 = *pcVar3;\n            bVar6 = true;\n            if ((cVar1 < '0') || ('5' < cVar1)) {\n                *0x104ed54 = pcVar3;\n                return (cVar1 == '\\0') + 0xfffe;\n            }\ncode_r0x010311b0:\n            if (bVar6) {\n                uVar5 = uVar5 | 0x8e00;\n            }\n            else {\n                uVar5 = uVar5 | 0x8d00;\n            }\n            if ((*pcVar3 - 0x30U & 1) != 0) {\n                uVar5 = uVar5 | 0x2000;\n            }\n            uVar2 = *pcVar3 - 0x30U & 6;\n            if (uVar2 == 0) {\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 | 0x800;\n                }\n                else {\n                    uVar5 = uVar5 | 0x40;\n                }\n            }\n            else if (uVar2 == 2) {\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 & 0xfffff7ff | 0x1000;\n                }\n                else {\n                    uVar5 = uVar5 | 0x80;\n                }\n            }\n            else {\n                if (uVar2 != 4) {\n                    *0x104ed54 = pcVar3;\n                    return 0xffff;\n                }\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 & 0xffffe7ff;\n                }\n            }\n            goto code_r0x0103129a;\n        }\n        if (cVar1 == 'B') {\n            uVar5 = uVar5 | 0x9800;\n            goto code_r0x0103129a;\n        }\n        if (cVar1 == '\\0') {\n            uVar5 = 0xfffe;\n            pcVar3 = *0x104ed54;\n            goto code_r0x0103129a;\n        }\n        if (cVar1 != '$') {\n            if (cVar1 < '0') {\n                *0x104ed54 = pcVar3;\n                return 0xffff;\n            }\n            if ('5' < cVar1) {\n                if (cVar1 != 'A') {\n                    *0x104ed54 = pcVar3;\n                    return 0xffff;\n                }\n                uVar5 = uVar5 | 0x9000;\n                goto code_r0x0103129a;\n            }\n            goto code_r0x010311b0;\n        }\n        if ((*0x104ed54)[2] == 'P') {\n            pcVar3 = *0x104ed54 + 2;\n        }\n        *0x104ed54 = pcVar3 + 1;\n        cVar1 = **0x104ed54;\n        if (cVar1 < 'K') {\n            if (cVar1 == 'J') {\ncode_r0x01031129:\n                cVar1 = pcVar3[2];\n                if (('/' < cVar1) && (cVar1 < ':')) {\n                    *0x104ed54 = pcVar3 + cVar1 + -0x2d;\n                    uVar5 = fcn.01030f3c();\n                    return uVar5 | 0x10000;\n                }\n                uVar5 = 0xffff;\n                pcVar3 = pcVar3 + 2;\ncode_r0x0103129a:\n                *0x104ed54 = pcVar3 + 1;\n                return uVar5;\n            }\n            if (cVar1 == '\\0') {\n                return 0xfffe;\n            }\n            if (cVar1 != 'F') {\n                bVar6 = cVar1 == 'H';\ncode_r0x01030fe3:\n                if (!bVar6) {\n                    return 0xffff;\n                }\n            }\n        }\n        else {\n            if (cVar1 < 'L') {\n                return 0xffff;\n            }\n            if ('M' < cVar1) {\n                if ('O' < cVar1) {\n                    bVar6 = cVar1 == 'Q';\n                    goto code_r0x01030fe3;\n                }\n                goto code_r0x01031129;\n            }\n        }\n        *0x104ed54 = pcVar3 + 2;\n    } while( true );\n}\n",
        "token_count": 2256
    },
    "01040160": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.01040160(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 590
    },
    "01009548": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01009548(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = in_EAX;\n    *in_EAX = *in_EAX + cVar1;\n    *in_EAX = *in_EAX + cVar1;\n    *in_EAX = *in_EAX + cVar1;\n    *in_EAX = *in_EAX + cVar1;\n    iVar2 = func_0xf1632e4a();\n    // WARNING: Could not recover jumptable at 0x0100955f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(iVar2 + -0x6e000a98))();\n    return;\n}\n",
        "token_count": 169
    },
    "01010f02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01010f02(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char unaff_DI;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    iVar2 = *0x1044010;\n    uVar3 = *0x1044038;\n    uVar1 = *0x1044010 + 4 + (uVar3 - param_1);\n    iVar4 = fcn.0101c7d0(uVar1 + *0x1044008, *0x104400c + CARRY4(uVar1, *0x1044008), 2, 0);\n    *0x104400c = iVar4 + 0x2880 >> 0x20;\n    *0x104403c = ((uVar3 - param_1) * 2 - iVar2) + 0x3b + iVar4 + 0x2880;\n    iVar2 = iVar2 + *0x104403c;\n    *0x1044038 = (*0x104403c - unaff_DI) + -2;\n    uVar1 = iVar2 + 0xc;\n    uVar3 = iVar2 + 0x1f;\n    iVar4 = fcn.0101c7d0(uVar3 + uVar1, CARRY4(uVar3, uVar1), 2, 0);\n    *0x1044008 = iVar4 + 0x18;\n    *0x104400c = iVar4 + 0x18 >> 0x20;\n    return;\n}\n",
        "token_count": 356
    },
    "01011833": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.01011833(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = *(param_1 + 0x10);\n    iVar3 = param_2 + 1;\n    if (iVar4 < iVar3) {\n        if (iVar4 < 8) {\n            iVar4 = 8;\n        }\n        iVar5 = iVar4;\n        if ((iVar4 < iVar3) && (iVar5 = iVar4 * 2,  iVar3 != iVar5 && SBORROW4(iVar3, iVar5) == iVar3 + iVar4 * -2 < 0))\n        {\n            uVar1 = param_2 + 0xcU & 0x80000007;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffff8) + 1;\n            }\n            iVar5 = (param_2 + 0xcU) - uVar1;\n        }\n        uVar2 = fcn.0101cb15(*(param_1 + 0xc), iVar5 << 2);\n        *(param_1 + 0xc) = uVar2;\n        *(param_1 + 4) = uVar2;\n        *(param_1 + 0x10) = iVar5;\n    }\n    iVar4 = *(param_1 + 8);\n    if (iVar4 < iVar3) {\n        fcn.0101cd30(*(param_1 + 0xc) + iVar4 * 4, param_3, (iVar3 - iVar4) * 4);\n        *(param_1 + 8) = iVar3;\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "01011c6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.01011c6b(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    uint arg_8h;\n    \n    param_1[1] = 0;\n    param_1[2] = param_3;\n    *param_1 = 0x1005470;\n    param_1[4] = param_3 + 1;\n    arg_8h = fcn.0101c700(param_3 + 1);\n    param_1[3] = arg_8h;\n    param_1[1] = arg_8h;\n    fcn.0101d3f0(arg_8h, param_2, param_1[2]);\n    *(param_1[2] + param_1[3]) = 0;\n    return param_1;\n}\n",
        "token_count": 189
    },
    "01011ee5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.01011ee5(int32_t param_1, char param_2)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    bVar1 = false;\n    iVar3 = 0;\n    do {\n        if (*(param_1 + 0xc) <= iVar3) break;\n        pcVar2 = *(param_1 + 0x10) + iVar3;\n        if ((*pcVar2 == param_2 || *pcVar2 < param_2) && (param_2 <= pcVar2[1])) {\n            bVar1 = true;\n        }\n        iVar3 = iVar3 + 2;\n    } while (!bVar1);\n    iVar3 = 0;\n    if (!bVar1) {\n        do {\n            if (*(param_1 + 0x20) <= iVar3) {\n                return;\n            }\n            if (*(iVar3 + *(param_1 + 0x24)) == param_2) {\n                bVar1 = true;\n            }\n            iVar3 = iVar3 + 1;\n        } while (!bVar1);\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0101238c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101238c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.01012342(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 67
    },
    "0101270a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0101270a(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (*(param_1 + 0x18) < 8) {\n        param_1 = param_1 + 4;\n    }\n    else {\n        param_1 = *(param_1 + 4);\n    }\n    *(param_1 + param_2 * 2) = 0;\n    return;\n}\n",
        "token_count": 113
    },
    "01012370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01012370(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.01012323(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 66
    },
    "01012748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.01012748(uint noname_0, uint arg_ch)\n\n{\n    uint8_t *puVar1;\n    ushort uVar2;\n    uint8_t **ppuVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    ulong uVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0101de44(0x14);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    ppuVar3 = fcn.0101d815();\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.01019549();\n    uVar4 = fcn.010126ad(ppuVar3[2], 0, unaff_EBP + -0x20);\n    *(extraout_ECX + 8) = uVar4;\n    uVar5 = fcn.01019549();\n    *(unaff_EBP + -0x20) = uVar5;\n    *(unaff_EBP + -0x1c) = uVar5 >> 0x20;\n    uVar4 = fcn.010123fc(0x10055b8, 0, unaff_EBP + -0x20);\n    *(extraout_ECX + 0x10) = uVar4;\n    uVar5 = fcn.01019549();\n    *(unaff_EBP + -0x20) = uVar5;\n    *(unaff_EBP + -0x1c) = uVar5 >> 0x20;\n    uVar4 = fcn.010123fc(0x10055c0, 0, unaff_EBP + -0x20);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(extraout_ECX + 0x14) = uVar4;\n    uVar5 = fcn.01019549();\n    *(unaff_EBP + -0x20) = uVar5;\n    puVar1 = *ppuVar3;\n    *(unaff_EBP + -0x1c) = uVar5 >> 0x20;\n    uVar2 = fcn.010123d0(*puVar1, 0, unaff_EBP + -0x20);\n    *(extraout_ECX + 0xc) = uVar2;\n    uVar5 = fcn.01019549();\n    *(unaff_EBP + -0x20) = uVar5;\n    puVar1 = ppuVar3[1];\n    *(unaff_EBP + -0x1c) = uVar5 >> 0x20;\n    uVar2 = fcn.010123d0(*puVar1, 0, unaff_EBP + -0x20);\n    *(extraout_ECX + 0xe) = uVar2;\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        fcn.01019549();\n        uVar4 = fcn.010126ad(0x1005484, 0, unaff_EBP + -0x20);\n        *(extraout_ECX + 8) = uVar4;\n        uVar5 = fcn.01019549();\n        *(unaff_EBP + -0x20) = uVar5;\n        *(unaff_EBP + -0x1c) = uVar5 >> 0x20;\n        uVar2 = fcn.010123d0(0x2e, 0, unaff_EBP + -0x20);\n        *(extraout_ECX + 0xc) = uVar2;\n        uVar5 = fcn.01019549();\n        *(unaff_EBP + -0x18) = uVar5;\n        *(unaff_EBP + -0x14) = uVar5 >> 0x20;\n        uVar2 = fcn.010123d0(0x2c, 0, unaff_EBP + -0x18);\n        *(extraout_ECX + 0xe) = uVar2;\n    }\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 1070
    },
    "01012ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01012ab0(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < param_1[7]) {\n        do {\n            piVar1 = *(param_1[8] + iVar2 * 4);\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(1);\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < param_1[7]);\n    }\n    param_1[7] = 0;\n    *param_1 = 0;\n    param_1[2] = 0;\n    fcn.0101cd30(param_1 + 0x3a, 0, 0x44);\n    return;\n}\n",
        "token_count": 186
    },
    "010135a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010135a1(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(in_ECX + 0xc);\n    if (var_8h == 0) {\n        uVar2 = 1;\n    }\n    else {\n        iVar3 = *(in_ECX + 0x18);\n        var_4h = var_8h;\n        if (iVar3 == 0) {\n            var_4h = -1;\n        }\n        iVar1 = (iVar3 == 0) * 2 + -1;\n        iVar4 = var_4h;\n        if (iVar3 != 0) {\n            var_8h = -1;\n        }\n        do {\n            do {\n                iVar4 = iVar1 + iVar4;\n                if (iVar4 == var_8h) {\n                    return 1;\n                }\n                iVar3 = (****(*(in_ECX + 0x10) + iVar4 * 4))(arg_8h);\n            } while (iVar3 != 0);\n            iVar4 = iVar4 - iVar1;\n            if (iVar4 == var_4h) break;\n            do {\n                iVar3 = (**(**(*(in_ECX + 0x10) + iVar4 * 4) + 4))(arg_8h);\n                if (iVar3 != 0) break;\n                iVar4 = iVar4 - iVar1;\n            } while (iVar4 != var_4h);\n        } while (iVar4 != var_4h);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 399
    },
    "01013632": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01013632(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(in_ECX + 0xc);\n    if (var_8h != 0) {\n        iVar3 = *(in_ECX + 0x18);\n        var_4h = var_8h;\n        if (iVar3 == 0) {\n            var_4h = -1;\n        }\n        iVar1 = (iVar3 == 0) * 2 + -1;\n        if (iVar3 != 0) {\n            var_8h = -1;\n        }\n        iVar3 = var_8h - iVar1;\n        if (iVar3 != var_4h) {\n            do {\n                iVar2 = (**(**(*(in_ECX + 0x10) + iVar3 * 4) + 4))(arg_8h);\n                if (iVar2 != 0) break;\n                iVar3 = iVar3 - iVar1;\n            } while (iVar3 != var_4h);\ncode_r0x010136c8:\n            if (iVar3 != var_4h) {\n                do {\n                    iVar3 = iVar3 + iVar1;\n                    if (iVar3 == var_8h) {\n                        return 1;\n                    }\n                    iVar2 = (****(*(in_ECX + 0x10) + iVar3 * 4))(arg_8h);\n                } while (iVar2 != 0);\n                iVar3 = iVar3 - iVar1;\n                if (iVar3 == var_4h) {\n                    return 0;\n                }\n                do {\n                    iVar2 = (**(**(*(in_ECX + 0x10) + iVar3 * 4) + 4))(arg_8h);\n                    if (iVar2 != 0) break;\n                    iVar3 = iVar3 - iVar1;\n                } while (iVar3 != var_4h);\n                goto code_r0x010136c8;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 480
    },
    "010144a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010144a1(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_8h_00 = arg_ch;\n    if (*in_ECX == 0) {\n        fcn.01012b0a();\n    }\n    else {\n        if ((*(in_ECX + 1) & 0x10) == 0) {\n            iVar2 = *(arg_ch + 0x50) + 1;\n            arg_ch = 1;\n        }\n        else {\n            iVar2 = -1;\n            arg_ch = -1;\n        }\n        iVar1 = *(arg_8h_00 + 0x3c);\n        while (iVar1 != iVar2) {\n            *(arg_8h_00 + 0x30) = 0;\n            *(arg_8h_00 + 8) = 0;\n            *(arg_8h_00 + 0x1c) = 0;\n            fcn.01011833(in_ECX[2], 0xffffffff);\n            **(arg_8h_00 + 0x34) = 0;\n            fcn.01012120(0);\n            fcn.01012120(*(arg_8h_00 + 0x3c));\n            fcn.01012120(0xffffffff);\n            fcn.01012120(0xffffffff);\n            iVar1 = (****in_ECX)(arg_8h_00);\n            if (iVar1 != 0) {\n                *(*(arg_8h_00 + 0x20) + 8) = *(arg_8h_00 + 0x3c);\n                if (*(arg_8h_00 + 0x40) == *(arg_8h_00 + 0x3c)) {\n                    *(arg_8h_00 + 0x3c) = *(arg_8h_00 + 0x3c) + arg_ch;\n                }\n                *(arg_8h_00 + 0x44) = *(arg_8h_00 + 0x40);\n                *(arg_8h_00 + 0x40) = *(arg_8h_00 + 0x3c);\n                fcn.01012b7d(arg_8h_00, in_ECX[2]);\n                return arg_8h;\n            }\n            *(arg_8h_00 + 0x3c) = *(arg_8h_00 + 0x3c) + arg_ch;\n            iVar1 = *(arg_8h_00 + 0x3c);\n        }\n        fcn.01012b0a();\n    }\n    return arg_8h;\n}\n",
        "token_count": 630
    },
    "01014600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.01014600(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0x58)) {\n        do {\n            iVar1 = fcn.01013477();\n            if (iVar1 == 0) {\n                return *(**(*(*(param_1 + 0x5c) + iVar2 * 4) + 0x10) + 4);\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0x58));\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 152
    },
    "01015257": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.01015257(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    if (-*(param_1 + 0x14) - 1U <= param_2) {\n        fcn.01019fe4();\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_1 + 0x14) + param_2;\n        cVar1 = fcn.010151ac(iVar2, 0);\n        if (cVar1 != '\\0') {\n            fcn.010125c0(*(param_1 + 0x14), param_2, unaff_retaddr);\n            fcn.010122c8(iVar2);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 192
    },
    "01015356": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015356(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.0101a01c();\n    }\n    uVar2 = *(arg_8h + 0x14) - arg_ch;\n    if (uVar2 < arg_10h) {\n        arg_10h = uVar2;\n    }\n    if ((-*(in_ECX + 0x14) - 1U <= arg_10h) || (*(in_ECX + 0x14) + arg_10h < *(in_ECX + 0x14))) {\n        fcn.01019fe4();\n    }\n    if (arg_10h != 0) {\n        iVar3 = *(in_ECX + 0x14) + arg_10h;\n        cVar1 = fcn.010151ac(iVar3, 0);\n        if (cVar1 != '\\0') {\n            if (*(arg_8h + 0x18) < 0x10) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            if (*(in_ECX + 0x18) < 0x10) {\n                iVar4 = in_ECX + 4;\n            }\n            else {\n                iVar4 = *(in_ECX + 4);\n            }\n            fcn.0100937b(*(in_ECX + 0x14) + iVar4, *(in_ECX + 0x18) - *(in_ECX + 0x14), arg_8h + arg_ch, arg_10h);\n            fcn.010122c8(iVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "01015867": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015867(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint32_t arg_14h;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.0101a01c();\n    }\n    arg_14h = *(arg_8h + 0x14) - arg_ch;\n    if (arg_10h < arg_14h) {\n        arg_14h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.01013e8d(arg_14h + arg_ch, 0xffffffff);\n        fcn.01013e8d(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.010151ac(arg_14h, 0);\n        if (cVar1 != '\\0') {\n            if (*(arg_8h + 0x18) < 0x10) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            if (*(in_ECX + 0x18) < 0x10) {\n                arg_8h_00 = in_ECX + 4;\n            }\n            else {\n                arg_8h_00 = *(in_ECX + 4);\n            }\n            fcn.0100937b(arg_8h_00, *(in_ECX + 0x18), arg_8h + arg_ch, arg_14h);\n            fcn.010122c8(arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "01015a07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015a07(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint32_t arg_14h;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.0101a01c();\n    }\n    arg_14h = *(arg_8h + 0x14) - arg_ch;\n    if (arg_10h < arg_14h) {\n        arg_14h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.01014164(arg_14h + arg_ch, 0xffffffff);\n        fcn.01014164(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.010153fd(arg_14h, 0);\n        if (cVar1 != '\\0') {\n            if (*(arg_8h + 0x18) < 8) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            if (*(in_ECX + 0x18) < 8) {\n                arg_8h_00 = in_ECX + 4;\n            }\n            else {\n                arg_8h_00 = *(in_ECX + 4);\n            }\n            fcn.01012370(arg_8h_00, *(in_ECX + 0x18), arg_8h + arg_ch * 2, arg_14h);\n            fcn.0101270a(arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "01015a9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015a9a(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.01014368(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.010153fd(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            if (*(in_ECX + 0x18) < 8) {\n                iVar2 = in_ECX + 4;\n            }\n            else {\n                iVar2 = *(in_ECX + 4);\n            }\n            fcn.01012370(iVar2, *(in_ECX + 0x18), arg_8h, arg_ch);\n            fcn.0101270a(arg_ch);\n        }\n    }\n    else {\n        if (*(in_ECX + 0x18) < 8) {\n            iVar2 = in_ECX + 4;\n        }\n        else {\n            iVar2 = *(in_ECX + 4);\n        }\n        fcn.01015a07(in_ECX, arg_8h - iVar2 >> 1, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "01015e8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01015e8e(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch._0_1_ = 0;\n    var_18h = 1;\n    var_14h = 0;\n    var_10h = 0;\n    iVar1 = fcn.0101192c(&var_1ch);\n    if (iVar1 == 0) {\n        var_1ch._0_1_ = 0x7c;\n        var_18h = 1;\n        var_14h = 0;\n        var_10h = 0;\n        iVar1 = fcn.0101192c(&var_1ch);\n        if (iVar1 == 0) {\n            var_1ch._0_1_ = 0x29;\n            var_18h = 1;\n            var_14h = 0;\n            var_10h = 0;\n            iVar1 = fcn.0101192c(&var_1ch);\n            if (iVar1 == 0) {\n                var_ch = fcn.01015b50(arg_8h);\n                var_1ch._0_1_ = 0;\n                var_18h = 1;\n                var_14h = 0;\n                var_10h = 0;\n                iVar1 = fcn.0101192c(&var_1ch);\n                if (iVar1 != 0) {\n                    return var_ch;\n                }\n                var_1ch._0_1_ = 0x7c;\n                var_18h = 1;\n                var_14h = 0;\n                var_10h = 0;\n                iVar1 = fcn.0101192c(&var_1ch);\n                if (iVar1 != 0) {\n                    return var_ch;\n                }\n                var_1ch._0_1_ = 0x29;\n                var_18h = 1;\n                var_14h = 0;\n                var_10h = 0;\n                iVar1 = fcn.0101192c(&var_1ch);\n                if (iVar1 != 0) {\n                    return var_ch;\n                }\n                iVar1 = fcn.0101c87d(0x1c);\n                if (iVar1 == 0) {\n                    var_4h = 0;\n                }\n                else {\n                    var_4h = fcn.01013570(*arg_8h & 0x10);\n                }\n                fcn.01012120(var_4h);\n                uVar2 = var_ch;\n                while( true ) {\n                    fcn.01012120(uVar2);\n                    var_1ch._0_1_ = 0;\n                    var_18h = 1;\n                    var_14h = 0;\n                    var_10h = 0;\n                    iVar1 = fcn.0101192c(&var_1ch);\n                    if (iVar1 != 0) {\n                        return var_4h;\n                    }\n                    var_2ch._0_1_ = 0x7c;\n                    var_28h = 1;\n                    var_24h = 0;\n                    var_20h = 0;\n                    iVar1 = fcn.0101192c(&var_2ch);\n                    if (iVar1 != 0) break;\n                    var_3ch._0_1_ = 0x29;\n                    var_38h = 1;\n                    var_34h = 0;\n                    var_30h = 0;\n                    iVar1 = fcn.0101192c(&var_3ch);\n                    if (iVar1 != 0) {\n                        return var_4h;\n                    }\n                    uVar2 = fcn.01015b50(arg_8h);\n                }\n                return var_4h;\n            }\n        }\n    }\n    uVar2 = fcn.01014684(0);\n    return uVar2;\n}\n",
        "token_count": 989
    },
    "01016061": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.01016061(uint arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    fcn.01015e1e(*in_ECX + 0x18, 0);\n    return arg_8h;\n}\n",
        "token_count": 80
    },
    "01016263": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01016263(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h._0_1_ = 0;\n    var_14h = 1;\n    var_10h = 0;\n    var_ch = 0;\n    iVar1 = fcn.0101192c(&var_18h);\n    if (iVar1 == 0) {\n        var_4h = arg_8h;\n        var_8h = fcn.01015e8e(&var_4h);\n        var_18h._0_1_ = 0x7c;\n        var_14h = 1;\n        var_10h = 0;\n        var_ch = 0;\n        iVar1 = fcn.0101192c(&var_18h);\n        arg_8h = var_8h;\n        if (iVar1 != 0) {\n            iVar1 = fcn.0101c87d(0x18);\n            if (iVar1 == 0) {\n                arg_8h = 0;\n            }\n            else {\n                arg_8h = fcn.0101349c();\n            }\n            fcn.01012120(arg_8h);\n            uVar2 = var_8h;\n            while( true ) {\n                fcn.01012120(uVar2);\n                var_18h._0_1_ = 0x7c;\n                var_14h = 1;\n                var_10h = 0;\n                var_ch = 0;\n                iVar1 = fcn.0101192c(&var_18h);\n                if (iVar1 == 0) break;\n                fcn.01014644();\n                uVar2 = fcn.01015e8e(&var_4h);\n            }\n        }\n    }\n    else {\n        arg_8h = fcn.01014684(0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 485
    },
    "01016dac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01016dac(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.0101c075(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x1005658;\n    fcn.01015e1e(arg_8h_00 + 0xc);\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 198
    },
    "01017adc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.01017adc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x1044a10 ^ &stack0xfffffffc;\n    uVar1 = fcn.010124ff();\n    uVar1 = fcn.0101e1ff(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.01017820(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0101de02(var_4ch);\n    return;\n}\n",
        "token_count": 221
    },
    "01017b48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.01017b48(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x1044a10 ^ &stack0xfffffffc;\n    uVar1 = fcn.010124ff();\n    uVar1 = fcn.0101e1ff(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.01017820(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0101de02(var_4ch);\n    return;\n}\n",
        "token_count": 222
    },
    "01017bb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.01017bb4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x1044a10 ^ &stack0xfffffffc;\n    uVar1 = fcn.010124ff();\n    uVar1 = fcn.0101e1ff(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.01017820(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0101de02(var_4ch);\n    return;\n}\n",
        "token_count": 228
    },
    "01017c23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.01017c23(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x1044a10 ^ &stack0xfffffffc;\n    uVar1 = fcn.010124ff();\n    uVar1 = fcn.0101e1ff(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.01017820(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0101de02(var_4ch);\n    return;\n}\n",
        "token_count": 228
    },
    "01017f58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.01017f58(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_24h;\n    uint in_ECX;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x1044a10 ^ &stack0xfffffffc;\n    arg_24h = fcn.0101e1ff(&var_44h, 0x40, 0x1005708, arg_1ch);\n    fcn.01017820(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_44h, arg_24h);\n    fcn.0101de02(var_44h);\n    return;\n}\n",
        "token_count": 211
    },
    "010181a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.010181a2(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0101de44(0x20);\n    *(unaff_EBP + -0x14) = arg_8h_00;\n    *(unaff_EBP + -0x18) = 0;\n    fcn.01017a89(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x20) != '\\0') {\n        uVar4 = fcn.0100952e(unaff_EBP + -0x1c);\n        *(unaff_EBP + -4) = 1;\n        fcn.01016ef3(uVar4);\n        fcn.01009499();\n        iVar2 = *(*arg_8h_00 + 4);\n        iVar3 = *(*arg_8h_00 + 4);\n        uVar1 = *(arg_8h_00 + iVar3 + 0x30);\n        uVar4 = *(arg_8h_00 + iVar3 + 0x28);\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -4) = 2;\n        pcVar5 = fcn.010112ff(unaff_EBP + -0x2c, *(unaff_EBP + -0x2c), uVar4, iVar2 + arg_8h_00, uVar1, *(unaff_EBP + 8)\n                             );\n        if (*pcVar5 != '\\0') {\n            *(unaff_EBP + -0x18) = 4;\n        }\n        *(unaff_EBP + -4) = 0;\n    }\n    fcn.0101725f(*(unaff_EBP + -0x18), 0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.01018023();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 642
    },
    "0101840f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar fcn.0101840f(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char cVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uStack28;\n    int32_t iStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar11 = 0x34;\n    iVar5 = fcn.01010b61(*0x1044038 + param_1 + -0xa3ae + *0x1044034 * 2);\n    if (*0x104403c < 0x35) {\n        *0x104401d = *0x104401d + *0x1044004;\n        iVar11 = (*0x104403c - *0x1044004) + -0x25;\n        *0x104403c = (*0x104403c - *0x1044004) + iVar11;\n    }\n    iVar8 = param_1 + -0xa0ed + iVar11 * 2;\n    iVar11 = iVar5 + -0x59 + (*0x1044038 - iVar8);\n    *0x104d2d4 = 0x1046440;\n    uVar6 = fcn.01010b61(iVar11);\n    if (*0x1044023 <= *0x1044004) {\n        iVar8 = (*0x104403c - *0x1044004) + -2;\n        *0x1044018 = *0x104403c;\n    }\n    uVar9 = iVar8 + (0x48 - *0x104403c);\n    *0x1044038 = iVar11 + '\\f' + *0x1044038 * '\\x02';\n    if (*0x104401f - *0x1044019 == 0x212) {\n        *0x104403c = *0x104403c * *0x104403c * 0xd8df;\n        iVar11 = (uVar6 & 0xffff) + 0x1f + *0x104403c;\n    }\n    else {\n        uStack28._0_1_ = uVar6 & 0xffff;\n        *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x104403c + uStack28;\n        iVar11 = *0x104403c * 2 + 0x1f;\n    }\n    *0x1044034 = iVar11;\n    fcn.01010b61(iVar11);\n    if (*0x104403c <= uVar9) {\n        *0x104401d = *0x104401d + *0x1044004;\n        uVar9 = (uVar9 - 0x59) + (*0x104403c - *0x1044004);\n        *0x104403c = (*0x104403c - *0x1044004) + uVar9;\n    }\n    uVar4 = fcn.01010d83(iVar11);\n    if (*0x1044018 == 0xff) {\n        *0x104403c = *0x104403c + *0x104401a;\n        iVar11 = *0x104403c * 2 + 0x1f;\n        *0x1044034 = iVar11;\n    }\n    fcn.0101827d(iVar11, uVar4, 0x1046440, 0x1001960, 0x4d20);\n    iVar11 = *0x1044034;\n    *0x1044038 = *0x1044038 * uVar9 * -0x21;\n    fcn.01010e16(*0x1044034);\n    iVar5 = 3;\n    do {\n        if ((uVar9 != *0x104401b) && (uVar9 = *0x1044004 + 0x1f + *0x104403c,  *0x104403c == *0x104401d)) break;\n        iVar5 = iVar5 + 2;\n    } while (iVar5 < 0x23);\n    iVar5 = uVar9 + 0x1f + *0x104403c;\n    iStack24 = 0x21d775b;\n    if (*0x1044018 == 0xff) {\n        *0x104403c = *0x104403c + *0x104401a;\n        iVar11 = *0x104403c * 2 + 0x1f;\n    }\n    iVar11 = iVar11 + 0xc + *0x1044038 + iVar5;\n    if (*0x1044023 <= *0x1044004) {\n        *0x1044018 = *0x104403c;\n        iVar5 = (*0x104403c - *0x1044004) + -2;\n    }\n    *0x1044034 = iVar11;\n    uStack28 = fcn.01010e16(iVar11);\n    uVar6 = *0x104403c;\n    cVar7 = *0x104403c * iVar5;\n    uStack28 = uStack28 & 0xffff;\n    uStack8 = 0xd;\n    *0x1044038 = (iVar11 + cVar7 * '!' + -8) * cVar7 * -0x21 * -0x21;\n    uStack12 = 0x73;\n    iStack16 = 0x19;\n    do {\n        if (*0x1044004 != *0x1044015) {\n            *(iStack16 + 0x1044014) = *(iStack16 + 0x1044014) - *0x1044004;\n        }\n        iStack16 = iStack16 + -2;\n    } while (2 < iStack16);\n    iVar11 = (iVar11 - uVar6) + 0x48;\n    uStack20 = 0x97;\n    if (*0x1044027 == '\\0') {\n        *0x1044004 = *0x1044004 + (iVar11 - uVar6);\n    }\n    else {\n        uVar6 = (uVar6 - 0x59) + (iVar11 - *0x1044004);\n        *0x104403c = uVar6;\n    }\n    iVar11 = iVar11 + (0x48 - uVar6);\n    if (*0x1044027 == '\\0') {\n        uStack28 = uStack28 + (*0x1044038 - uVar6);\n    }\n    else {\n        uVar6 = (uVar6 - 0x59) + (*0x1044038 - uStack28);\n        *0x104403c = uVar6;\n    }\n    if (*0x1044018 == 0xff) {\n        uVar6 = uVar6 + *0x104401a;\n        iVar11 = uVar6 * 2 + 0x1f;\n        *0x104403c = uVar6;\n    }\n    uVar9 = iVar11 + (-2 - uVar6);\n    uVar3 = uVar6;\n    if (*0x1044023 <= uStack28) {\n        *0x1044038 = (uVar3 - uStack28) - 2;\n        *0x1044018 = uVar3;\n    }\n    iVar11 = 3;\n    do {\n        if ((uVar9 != *0x104401b) && (uVar9 = *0x1044004 + 0x1f + uVar6,  uVar6 == *0x104401d)) break;\n        iVar11 = iVar11 + 2;\n    } while (iVar11 < 0x23);\n    iVar11 = uVar9 * 2 - uVar6;\n    if (*0x1044023 <= uStack28) {\n        *0x1044038 = (uVar3 - uStack28) - 2;\n        *0x1044018 = uVar3;\n    }\n    uVar9 = *0x1044023;\n    while( true ) {\n        uVar12 = *0x1044038 + iVar11 + -0xa3ae + *0x1044034 * 2;\n        if (*0x1044023 <= uStack28) {\n            *0x1044018 = uVar6;\n            *0x1044038 = (*0x1044018 - uStack28) - 2;\n        }\n        uVar10 = iVar11 + (-2 - uVar6);\n        if (uVar9 <= uVar6) {\n            *0x1044018 = uVar10;\n            uVar12 = (uVar10 - uVar6) - 2;\n        }\n        if (uStack28 < uVar10) {\n            uVar10 = (*0x1044004 - 0xa3b0) + uVar10 * 2;\n            *0x1044038 = *0x1044038 * uVar10 * -0x21;\n            if ((uStack28 == 0) && (*0x1044038 = *0x1044038 + ((uStack28 == 0) - uVar10),  *0x1044018 == 0xff)) {\n                *0x1044004 = *0x1044004 + *0x104401a;\n            }\n            uVar12 = (uStack28 - *0x1044004) - 2;\n        }\n        uVar10 = uVar10 + (-2 - uVar6);\n        *0x1044038 = *0x1044038 * uVar10 * -0x21;\n        if (uVar12 < uVar10) {\n            uVar12 = uVar12 + 0xc + *0x1044038 + uVar10;\n            uVar10 = uVar6 + 0xc + uVar10 * 2;\n        }\n        else if (uVar6 <= uVar12) {\n            *0x104401d = *0x104401d + uStack28;\n            uVar12 = (uVar12 - 0x59) + (uVar6 - uStack28);\n            uVar6 = (uVar6 - uStack28) + uVar12;\n            *0x104403c = uVar6;\n        }\n        if (iStack24 == 0) break;\n        uVar6 = uVar10 + 0x1f + uVar6;\n        *0x1044034 = *0x1044038 + uVar6 + -0xa3ae + uVar12 * 2;\n        fcn.01010c14();\n        uVar9 = *0x1044023;\n        if (uVar9 <= uVar6) {\n            *0x1044034 = (*0x1044038 - uVar6) + -2;\n            *0x1044018 = *0x1044038;\n        }\n        iVar11 = uVar6 + (-8 - *0x104403c);\n        *0x1044038 = *0x1044038 + (*0x1044034 - iVar11);\n        iStack24 = iStack24 + -1;\n        *0x1044034 = *0x1044034 + -0x4d + (uStack28 * 2 - *0x1044004) + *0x104403c;\n        uVar6 = *0x104403c;\n        if (*0x1044027 == '\\0') {\n            iVar11 = iVar11 + (*0x1044034 - *0x1044038);\n        }\n        else {\n            *0x1044038 = *0x1044038 + (*0x1044034 - iVar11) + -0x59;\n        }\n    }\n    iStack16 = *0x104401f - *0x1044019;\n    if (iStack16 == 0x212) {\n        *0x1044038 = *0x1044038 * *0x1044038 * -0x21;\n        uVar9 = *0x1044038;\n        iVar11 = uVar9 + 0x1f + uVar10;\n    }\n    else {\n        *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x1044038 + uVar10;\n        uVar9 = *0x1044038;\n        iVar11 = uVar9 * 2 + 0x1f;\n    }\n    *0x1044034 = iVar11 + -0x59 + (uVar9 - uVar10);\n    if (uVar10 < *0x1044034) {\n        uVar10 = uVar10 + (0x48 - uVar6);\n        *0x1044038 = (*0x1044034 - uVar10) + 0x48;\n        if (*0x1044018 == 0xff) {\n            *0x1044004 = *0x1044004 + *0x104401a;\n            *0x1044034 = *0x1044004 * 2 + 0x1f;\n        }\n    }\n    uVar3 = *0x1044038;\n    uStack28 = uVar6 * uStack28 * 0xd8df & 0xffff;\n    iVar11 = uVar6 - uVar10;\n    iStack24 = 0x21d775b;\n    iVar5 = 0x19;\n    do {\n        uVar9 = *0x1044004;\n        if (*0x1044004 != *0x1044025) {\n            *(iVar5 + 0x1044024) = *(iVar5 + 0x1044024) - *0x1044004;\n            uVar10 = uVar3 + 0x1f + uVar9;\n        }\n        iVar5 = iVar5 + -2;\n    } while (2 < iVar5);\n    iVar11 = *0x1044034 + iVar11 + -0xb2 + (uVar3 - uVar10);\n    if (uStack28 <= uVar6) {\n        *0x104401d = *0x104401d + iVar11;\n        uVar6 = (uVar6 - 0x59) + (uStack28 - iVar11);\n        uStack28 = uStack28 + (uVar6 - iVar11);\n        uVar3 = *0x1044038;\n        *0x104403c = uVar6;\n    }\n    if (*0x1044028 == 0xff) {\n        uVar10 = (uVar3 + *0x104402a) * 2 + 0x1f;\n    }\n    uVar9 = iVar11 + 0xfb4d5c;\n    cVar7 = uVar10;\n    *0x1044038 = (*0x1044004 - cVar7) - 8;\n    *0x1044034 = uVar9;\n    if (*0x1044038 <= uVar9) {\n        *0x104402d = *0x104402d + cVar7;\n        uVar9 = iVar11 + 0xfb4d03 + (*0x1044038 - uVar10);\n        *0x1044038 = *0x1044038 + (uVar9 - cVar7);\n        *0x1044034 = uVar9;\n    }\n    while( true ) {\n        uVar12 = uStack28 & 0xffff;\n        uVar9 = (uVar9 - 0x59) + (uVar12 - uVar6);\n        if ((0xb010 < uVar9) && (uVar9 = uVar9 + 0xc + uVar6 + uVar12,  *0x1044018 == 0xff)) {\n            *0x1044038 = *0x1044038 + *0x104401a;\n            uVar9 = *0x1044038 * 2 + 0x1f;\n        }\n        cVar7 = uVar6;\n        if (uVar10 <= uVar9) {\n            *0x104401d = *0x104401d + cVar7;\n            uVar10 = (uVar9 - 0x59) + uVar10 * 2 + uVar6 * -2;\n        }\n        if (iStack16 == 0x212) {\n            *0x1044004 = *0x1044004 * *0x1044004 * 0xd8df;\n            iVar11 = *0x1044004 + 0x1f + uVar6;\n        }\n        else {\n            *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x1044004 + cVar7;\n            iVar11 = *0x1044004 * 2 + 0x1f;\n        }\n        if (iStack24 == 0) break;\n        iVar11 = iVar11 + 0xc + uVar6 + uVar12;\n        if (*0x1044018 == 0xff) {\n            *0x1044038 = *0x1044038 + *0x104401a;\n            iVar11 = *0x1044038 * 2 + 0x1f;\n        }\n        if (uStack12 < 6) {\n            uStack12 = uStack12 - 1;\n            uStack28 = uStack12 * uStack28 * 0xd8df & 0xffff;\n        }\n        uVar12 = uStack28 & 0xffff;\n        uVar9 = iVar11 + 0xc + uVar6 + uVar12;\n        if (*0x1044027 == '\\0') {\n            uVar6 = uVar6 + (uVar9 - uVar10);\n            *0x104403c = uVar6;\n        }\n        else {\n            uVar10 = (uVar10 - 0x59) + (uVar9 - uVar6);\n        }\n        uVar1 = uStack20 + uVar12 + 0xc + *0x1044004;\n        *0x1044004 = uVar1;\n        if (0x11abc < uVar12) {\n            uStack28 = uStack28 + (uVar9 - uVar6);\n            if (uVar1 == uVar10) {\n                if (*0x1044018 == 0xff) {\n                    *0x1044038 = *0x1044038 + *0x104401a;\n                }\n                fcn.01010b61(uStack28 & 0xffff);\n                iStack16 = *0x104401f - *0x1044019;\n                if (iStack16 == 0x212) {\n                    uVar10 = uVar10 * uVar10 * 0xd8df;\n                    uVar6 = *0x1044038 + 0x1f + uVar10;\n                }\n                else {\n                    *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x1044038 + uVar10;\n                    uVar6 = uVar10 * 2 + 0x1f;\n                }\n                uVar9 = *0x1044038 + 0x1f + uVar10;\n            }\n            if (uVar10 <= uVar9) {\n                *0x104401d = *0x104401d + uVar6;\n                uVar9 = (uVar9 - 0x59) + (uVar10 - uVar6);\n            }\n        }\n        if (*0x1044023 <= uStack28) {\n            uVar9 = (uVar6 - (uStack28 & 0xffff)) - 2;\n            *0x1044018 = uVar6;\n        }\n        if (uStack20 < 0xc) {\n            if ((uStack28 & 0xffff) <= uVar9) {\n                uVar9 = (uVar9 - 0x59) + ((uStack28 & 0xffff) - uVar6);\n                *0x104401d = *0x104401d + uVar6;\n                uStack28 = uStack28 + (uVar9 - uVar6);\n            }\n            if (*0x1044027 != '\\0') {\n                uVar6 = (uVar6 - 0x59) + (uVar1 - uVar9);\n            }\n            uStack20 = uStack20 - 1;\n        }\n        if (iStack16 == 0x212) {\n            uVar6 = uVar6 * uVar6 * 0xd8df;\n            *0x1044034 = (uStack28 & 0xffff) + 0x1f + uVar6;\n            uVar9 = uStack28 * uStack28 * 0xd8df & 0xffff;\n            iVar11 = *0x1044038 + 0x1f + uVar9;\n            uStack28 = uVar9;\n        }\n        else {\n            *0x1044034 = uVar6 * 2 + 0x1f;\n            uVar9 = uStack28 & 0xffff;\n            *0x104401d = ((*0x104401d + 0x29) * '\\x02' + uVar6) * '\\x02' + uStack28 * '\\x03' + 'R' + *0x1044038;\n            iVar11 = uVar9 * 2 + 0x1f;\n        }\n        if (*0x1044023 <= uVar6) {\n            *0x1044034 = (iVar11 - uVar6) - 2;\n            *0x1044018 = iVar11;\n        }\n        uVar12 = uVar6 + 0xc + iVar11 * 2;\n        *0x104403c = uVar6 + 0xc + uVar1 + iStack24;\n        fcn.01010c14();\n        if (*0x104403c <= uVar12) {\n            *0x104401d = *0x104401d + uStack28;\n            uVar12 = (uVar12 - 0x59) + (*0x104403c - uVar9);\n            *0x104403c = (*0x104403c - uVar9) + uVar12;\n        }\n        iStack24 = iStack24 + -1;\n        uVar6 = *0x104403c + 0xc + uVar12 * 2;\n        *0x1044004 = uStack8 + 0x1f + uVar6;\n        if (uStack8 < 8) {\n            if (*0x1044027 == '\\0') {\n                *0x104403c = *0x104403c + (*0x1044034 - uVar9);\n            }\n            else {\n                uStack28 = (uStack28 - 0x59) + (*0x1044034 - *0x104403c);\n            }\n            uStack8 = uStack8 - 1;\n            iStack16 = *0x104401f - *0x1044019;\n            if (iStack16 == 0x212) {\n                uVar9 = uVar6 * uVar6 * 0xd8df + 0x1f + *0x104403c;\n            }\n            else {\n                *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x104403c + uVar6;\ncode_r0x01018e98:\n                uVar9 = uVar6 * 2 + 0x1f;\n            }\n        }\n        else {\n            iStack16 = *0x104401f - *0x1044019;\n            if (iStack16 != 0x212) {\n                uVar6 = *0x1044038;\n                *0x104401d = (*0x104401d + 0x29) * '\\x02' + *0x1044038 + uStack20;\n                goto code_r0x01018e98;\n            }\n            *0x1044038 = *0x1044038 * *0x1044038 * -0x21;\n            uVar9 = *0x1044038 + 0x1f + uStack20;\n        }\n        uVar10 = *0x104403c + 0x40;\n        uVar6 = *0x104403c;\n    }\n    iVar11 = ((uStack28 & 0xffff) - param_1) + -8;\n    cVar2 = param_1 + 'R' + uStack28 * '\\x02' + iVar11;\n    iVar5 = 3;\n    uVar3 = *0x1044038;\n    do {\n        if ((uVar3 != *0x104401b) && (uVar3 = cVar7 + cVar2 + 0x1f,  *0x1044038 = uVar3,  uVar6 == *0x104401d)) break;\n        iVar5 = iVar5 + 2;\n    } while (iVar5 < 0x23);\n    *0x1044034 = (uVar6 * 3 + iVar11 * -2 + -0x9df0) * uVar6 * 0xd8df;\n    cVar7 = *0x1044034;\n    *0x104403c = fcn.01010a1a(*0x104d2d4, *0x1044034);\n    cVar7 = ((cVar2 + cVar7) - *0x1044034) + -0x3a;\n    if (*0x1044033 <= *0x1044034) {\n        *0x1044028 = *0x1044038;\n        cVar7 = (*0x1044038 - *0x1044034) + -2;\n    }\n    *0x1044038 = *0x1044038 * cVar7 * -0x21;\n    if (*0x1044018 == 0xff) {\n        *0x104403c = *0x104403c + *0x104401a;\n    }\n    return *0x1044038;\n}\n",
        "token_count": 5926
    },
    "0101968b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101968b(uint32_t arg_8h)\n\n{\n    fcn.0101bbce((arg_8h & 3) * 0x18 + 0x104e0e0);\n    return;\n}\n",
        "token_count": 56
    },
    "010196a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010196a7(uint32_t arg_8h)\n\n{\n    fcn.0101bbde((arg_8h & 3) * 0x18 + 0x104e0e0);\n    return;\n}\n",
        "token_count": 56
    },
    "0101a08c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0101a08c(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.0101c075(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x1005750;\n    fcn.01015e1e(arg_8h_00 + 0xc);\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 200
    },
    "0101a493": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0101a493(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = in_ECX;\n    iVar1 = fcn.01019cf5(&var_4h, &arg_8h, 1, &var_8h, in_ECX + 0x18);\n    uVar2 = 0xffff;\n    if (-1 < iVar1) {\n        uVar2 = var_4h & 0xffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 161
    },
    "0101aff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101aff8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint arg_10h;\n    \n    arg_10h = 0;\n    if (*(in_ECX + 0x4c) != 0) {\n        if ((arg_8h == 0) && (arg_ch == 0)) {\n            arg_10h = 4;\n        }\n        iVar1 = fcn.01021f28(*(in_ECX + 0x4c), arg_8h, arg_10h, arg_ch * 2);\n        if (iVar1 == 0) {\n            fcn.0101aa03(*(in_ECX + 0x4c), 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0101bb19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0101bb19(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x10058d0;\n        extraout_ECX[1] = 0x10057d8;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = 0x10057d0;\n    fcn.0101bac8(*(unaff_EBP + 8), arg_ch_00);\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 295
    },
    "0101e27f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101e27f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.01028196(arg_8h, arg_ch, arg_10h, 0, &arg_14h);\n    return;\n}\n",
        "token_count": 68
    },
    "0101e29d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101e29d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.01028196(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "0101e2e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101e2e6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.01027e2c(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "0101e2ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101e2ff(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.01027e65(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "0102524b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0102524b(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h == NULL) || (*0x104e560 == 0)) {\n        puVar1 = fcn.0101e77e();\n        *puVar1 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x104e560;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 153
    },
    "01025287": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01025287(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h == NULL) || (*0x104e55c == 0)) {\n        puVar1 = fcn.0101e77e();\n        *puVar1 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x104e55c;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 154
    },
    "01025474": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01025474(uint arg_8h)\n\n{\n    fcn.01025348(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "01027d21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01027d21(uchar *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    if ((arg_ch == 0) || (arg_8h == NULL)) {\n        puVar1 = fcn.0101e77e();\n        *puVar1 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_18h = arg_8h;\n        var_20h = arg_8h;\n        var_1ch = 0x7fffffff;\n        var_14h = 0x42;\n        uVar2 = fcn.01027189(&var_20h, arg_ch, arg_10h, arg_14h);\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.01026f92(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 311
    },
    "01027e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01027e10(uint arg_8h, uint arg_ch)\n\n{\n    fcn.01027db9(fcn.01027189, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "01027e2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01027e2c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.01027db9(fcn.01027189, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "01027e49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01027e49(uint arg_8h, uint arg_ch)\n\n{\n    fcn.01027db9(fcn.0103707f, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "01027e65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01027e65(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.01027db9(fcn.0103707f, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "01027f4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01027f4e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.01027e82(fcn.01027189, arg_8h, arg_ch, arg_10h, 0, arg_14h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 109
    },
    "01027f77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01027f77(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.01027e82(fcn.01027189, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "0102816d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0102816d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.01027e82(fcn.0103707f, arg_8h, arg_ch, arg_10h, 0, arg_14h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 109
    },
    "01028196": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01028196(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.01027e82(fcn.0103707f, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "01038f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.01038f10(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    iVar2 = -1;\n    do {\n        pcVar4 = arg_8h;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar4 = arg_8h + 1;\n        cVar1 = *arg_8h;\n        arg_8h = pcVar4;\n    } while (cVar1 != '\\0');\n    iVar2 = -(iVar2 + 1);\n    pcVar4 = pcVar4 + -1;\n    do {\n        pcVar3 = pcVar4;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar3 = pcVar4 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar3;\n    } while (arg_ch != cVar1);\n    pcVar3 = pcVar3 + 1;\n    if (*pcVar3 != arg_ch) {\n        pcVar3 = NULL;\n    }\n    return pcVar3;\n}\n",
        "token_count": 275
    },
    "01029574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01029588)\n// WARNING: Removing unreachable block (ram,0x0102958e)\n// WARNING: Removing unreachable block (ram,0x01029590)\n\nvoid fcn.01029574(void)\n\n{\n    return;\n}\n",
        "token_count": 61
    },
    "01036e39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01036e39(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.01022746();\n    fcn.010228cc(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 53
    },
    "01036e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01036e4c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0103b320(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "01036e65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01036e65(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0103b33d(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "01036e7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01036e7e(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0103b33d(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "01036e96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01036e96(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0103b35a(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "01036eaf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01036eaf(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0103b35a(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 47
    },
    "01038fe5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01038fe5(uint arg_8h, uint arg_ch)\n\n{\n    fcn.01038f3d(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "01039164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01039164(uint arg_8h, uint arg_ch)\n\n{\n    fcn.010390bc(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "01039801": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01039801(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0101e77e();\n        *puVar1 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x10457d4;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 140
    },
    "0103983a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0103983a(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0101e77e();\n        *puVar1 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x10457d8;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 141
    },
    "01039873": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01039873(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0101e77e();\n        *puVar1 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x10457d0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 140
    },
    "0103b290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0103b290(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024f40(0x1042360, 0x10);\n    iVar1 = fcn.01022746();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.0101e77e();\n        *puVar2 = 0x16;\n        fcn.0101d9b1(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.0102281d(iVar1);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.0103b1c0(iVar1);\n        uVar3 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar3;\n        fcn.0103b25c(arg_8h_00, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0103b318();\n    }\n    fcn.01024f85();\n    return;\n}\n",
        "token_count": 447
    },
    "0103b320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0103b320(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0103b290(fcn.01027189, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "0103b33d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0103b33d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0103b290(fcn.0103833f, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "0103b35a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0103b35a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0103b290(fcn.0103707f, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "0103b377": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0103b377(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0103b290(fcn.01027189, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "0103b393": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0103b393(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0103b290(fcn.0103833f, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "0103b3af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0103b3af(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0103b290(fcn.0103707f, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "0101da8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101da8a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.010215f5(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "0101962c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101962c(int32_t *param_1)\n\n{\n    if (*param_1 < 4) {\n        fcn.0101bbde(*param_1 * 0x18 + 0x104e0e0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "01040cd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01040cd6(void)\n\n{\n    *0x104df94 = 0x3fd088b;\n    return;\n}\n",
        "token_count": 32
    },
    "0101a4f2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0101a4f2(uint8_t *arg_8h, uint8_t *arg_ch, ushort *arg_10h, uint32_t arg_14h)\n\n{\n    ushort uVar1;\n    \n    if (arg_14h < arg_ch - arg_8h) {\n        fcn.0101d9d7();\n    }\n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.0101a493(*arg_8h);\n            *arg_10h = uVar1;\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 179
    },
    "0101a5ab": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0101a5ab(uint16_t *arg_8h, uint16_t *arg_ch, uint arg_10h, uchar *arg_14h, uint32_t arg_18h)\n\n{\n    uchar uVar1;\n    \n    if (arg_18h < arg_ch - arg_8h >> 1) {\n        fcn.0101d9d7();\n    }\n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.0101a535(*arg_8h, arg_10h);\n            arg_8h = arg_8h + 1;\n            *arg_14h = uVar1;\n            arg_14h = arg_14h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 192
    },
    "01013b88": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.01013b88(uint *param_1, uint param_2, uint param_3)\n\n{\n    *param_1 = 0x100562c;\n    fcn.01011c6b(param_2, param_3);\n    param_1[6] = param_2;\n    param_1[7] = param_3;\n    return param_1;\n}\n",
        "token_count": 91
    },
    "01014684": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.01014684(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint uVar6;\n    \n    puVar4 = NULL;\n    while ((param_2 < 0 || (0x10 < param_2))) {\n        param_2 = 0;\n    }\n    piVar1 = param_1 + 0xe8 + param_2 * 4;\n    if (*piVar1 != 0) goto code_r0x0101491b;\n    // switch table (17 cases) at 0x1014924\n    switch(param_2) {\n    case 0:\n        puVar2 = fcn.0101c87d(4);\n        if (puVar2 != NULL) {\n            *puVar2 = 0x1005478;\n            puVar4 = puVar2;\n        }\n        goto code_r0x010146cf;\n    case 1:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 0;\ncode_r0x01014762:\n            puVar4 = fcn.010136e2(uVar6, 0);\n        }\n        goto code_r0x010146cf;\n    case 2:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 0;\ncode_r0x0101477c:\n            puVar4 = fcn.010136e2(uVar6, 0);\n        }\n        goto code_r0x01014785;\n    case 3:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 1;\ncode_r0x010146eb:\n            uVar5 = 0;\ncode_r0x010146ec:\n            puVar4 = fcn.010136e2(uVar5, uVar6);\n        }\n        break;\n    case 4:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 0;\n            goto code_r0x010146eb;\n        }\n        break;\n    case 5:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 1;\ncode_r0x010147a0:\n            puVar4 = fcn.010136e2(0, uVar6);\n        }\n        goto code_r0x010147aa;\n    case 6:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 0;\n            goto code_r0x010147a0;\n        }\ncode_r0x010147aa:\n        fcn.01012120(puVar4);\n        fcn.01011a25(0x20);\n        fcn.01011a25(9);\n        fcn.01011a25(0xd);\n        uVar6 = 10;\n        goto code_r0x01014914;\n    case 7:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 1;\ncode_r0x010147f9:\n            uVar5 = 0;\ncode_r0x010148f2:\n            puVar4 = fcn.010136e2(uVar5, uVar6);\n        }\n        goto code_r0x010148fb;\n    case 8:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 0;\n            goto code_r0x010147f9;\n        }\n        goto code_r0x010148fb;\n    case 9:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 1;\n            goto code_r0x01014762;\n        }\ncode_r0x010146cf:\n        fcn.01012120(puVar4);\n        goto code_r0x01014919;\n    case 10:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 1;\n            goto code_r0x0101477c;\n        }\ncode_r0x01014785:\n        fcn.01012120(puVar4);\n        uVar6 = 10;\n        goto code_r0x01014914;\n    case 0xb:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 1;\ncode_r0x01014824:\n            uVar5 = 1;\n            goto code_r0x010146ec;\n        }\n        break;\n    case 0xc:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 0;\n            goto code_r0x01014824;\n        }\n        break;\n    case 0xd:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 1;\ncode_r0x0101487c:\n            puVar4 = fcn.010136e2(1, uVar6);\n        }\n        goto code_r0x01014887;\n    case 0xe:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 0;\n            goto code_r0x0101487c;\n        }\ncode_r0x01014887:\n        fcn.01012120(puVar4);\n        fcn.01011a25(0x20);\n        fcn.01011a25(9);\n        fcn.01011a25(0xd);\n        fcn.01011a25(10);\n        fcn.01011a25(0xc);\n        uVar6 = 0xb;\n        goto code_r0x01014914;\n    case 0xf:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 1;\ncode_r0x010148f0:\n            uVar5 = 1;\n            goto code_r0x010148f2;\n        }\n        goto code_r0x010148fb;\n    case 0x10:\n        iVar3 = fcn.0101c87d(0x48);\n        if (iVar3 != 0) {\n            uVar6 = 0;\n            goto code_r0x010148f0;\n        }\ncode_r0x010148fb:\n        fcn.01012120(puVar4);\n        fcn.01011a25(0x30);\n        uVar6 = 0x39;\n        goto code_r0x01014914;\n    default:\n        goto code_r0x0101491b;\n    }\n    fcn.01012120(puVar4);\n    fcn.01011a25(0x41);\n    fcn.01011a25(0x5a);\n    fcn.01011a25(0x61);\n    fcn.01011a25(0x7a);\n    fcn.01011a25(0x30);\n    fcn.01011a25(0x39);\n    uVar6 = 0x5f;\ncode_r0x01014914:\n    fcn.01011a25(uVar6);\ncode_r0x01014919:\n    *piVar1 = puVar4;\ncode_r0x0101491b:\n    return *piVar1;\n}\n",
        "token_count": 1805
    },
    "010143d6": {
        "rules": [
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid fcn.010143d6(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0101de11(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.01012af3();\n    *(unaff_EBP + -4) = 0;\n    fcn.01012af3();\n    fcn.01012b21();\n    fcn.01012b38();\n    fcn.01012b4f();\n    fcn.01012b66();\n    *(extraout_ECX + 0x8c) = 0x1005468;\n    *(extraout_ECX + 0x90) = 0;\n    *(extraout_ECX + 0x94) = 0;\n    *(extraout_ECX + 0x98) = 0;\n    *(extraout_ECX + 0x9c) = 0;\n    *(extraout_ECX + 0xa0) = 0;\n    *(extraout_ECX + 0xa4) = 0;\n    *(extraout_ECX + 0xa8) = 0;\n    *(extraout_ECX + 0xac) = 0;\n    *(extraout_ECX + 0xb0) = 0;\n    *(extraout_ECX + 0xb4) = 0;\n    *(extraout_ECX + 0xb8) = 0;\n    *(extraout_ECX + 0xbc) = 0;\n    *(extraout_ECX + 0xc0) = 0;\n    *(extraout_ECX + 0xc4) = 0;\n    *(unaff_EBP + -4) = 6;\n    *(extraout_ECX + 200) = 0;\n    *(extraout_ECX + 0xcc) = 0;\n    *(extraout_ECX + 0xd0) = 0;\n    *(extraout_ECX + 0xd4) = 0;\n    fcn.01012ab0();\n    fcn.0101dee9();\n    return;\n}\n",
        "token_count": 484
    },
    "0103f2b0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0103f2b0(void)\n\n{\n    *0x1045a34 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x1007f70, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 68
    },
    "010116bf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.010116bf(uint *param_1, char *param_2)\n\n{\n    char cVar1;\n    \n    *param_1 = 0x1005468;\n    param_1[1] = param_2;\n    param_1[2] = 0;\n    if (param_2 != NULL) {\n        cVar1 = *param_2;\n        while (cVar1 != '\\0') {\n            param_1[2] = param_1[2] + 1;\n            cVar1 = *(param_1[2] + param_1[1]);\n        }\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "01011797": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.01011797(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            cVar1 = *(iVar4 + *(param_1 + 4));\n            if (cVar1 != *(iVar4 + param_2)) {\n                iVar2 = fcn.0101cae9(cVar1);\n                iVar3 = fcn.0101cae9(*(iVar4 + param_2));\n                if (iVar2 != iVar3) {\n                    return *(iVar4 + *(param_1 + 4)) - *(iVar4 + param_2);\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *(param_1 + 8));\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "01011bbd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.01011bbd(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(param_1 + 8) != 0) && (iVar2 = 0,  0 < *(param_1 + 8))) {\n        do {\n            iVar1 = (****(param_1 + 4))(param_2);\n            if (iVar1 == 0) {\n                iVar2 = iVar2 + -1;\n                if (iVar2 < 0) {\n                    return 0;\n                }\n                do {\n                    iVar1 = (**(**(param_1 + 4) + 4))(param_2);\n                    if (iVar1 != 0) break;\n                    iVar2 = iVar2 + -1;\n                } while (-1 < iVar2);\n                if (iVar2 < 0) {\n                    return 0;\n                }\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 8));\n    }\n    return 1;\n}\n",
        "token_count": 241
    },
    "01011c0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.01011c0c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 8);\n    if (iVar3 != 0) {\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                iVar1 = (**(**(param_1 + 4) + 4))(param_2);\n                if (iVar1 != 0) break;\n                iVar3 = iVar3 + -1;\n            } while (-1 < iVar3);\ncode_r0x01011c54:\n            iVar1 = iVar3;\n            if (-1 < iVar3) {\n                do {\n                    iVar3 = iVar1;\n                    if (*(param_1 + 8) <= iVar3 + 1) {\n                        return 1;\n                    }\n                    iVar2 = (****(param_1 + 4))(param_2);\n                    iVar1 = iVar3 + 1;\n                } while (iVar2 != 0);\n                if (iVar3 < 0) goto code_r0x01011c63;\n                do {\n                    iVar1 = (**(**(param_1 + 4) + 4))(param_2);\n                    if (iVar1 != 0) break;\n                    iVar3 = iVar3 + -1;\n                } while (-1 < iVar3);\n                goto code_r0x01011c54;\n            }\n        }\ncode_r0x01011c63:\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 357
    },
    "010121e3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.010121e3(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            if (*(*(param_1 + 4) + iVar1) != *(iVar1 + param_2)) {\n                return *(*(param_1 + 4) + iVar1) - *(iVar1 + param_2);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 8));\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "01012b7d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01012b7d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    fcn.01012b0a();\n    if (arg_8h != 0) {\n        fcn.01011833(arg_ch * 2 + 3, 0xffffffff);\n        var_4h = 0;\n        **(in_ECX + 0xc) = 1;\n        *(*(in_ECX + 0xc) + 4) = arg_ch;\n        if (-1 < arg_ch) {\n            do {\n                iVar2 = *(*(arg_8h + 0x34) + var_4h * 4);\n                if (-1 < iVar2) {\n                    iVar1 = *(*(arg_8h + 0x20) + 4 + iVar2 * 4);\n                    iVar2 = *(*(arg_8h + 0x20) + 8 + iVar2 * 4);\n                    iVar3 = iVar1;\n                    if (iVar2 <= iVar1) {\n                        iVar3 = iVar2;\n                    }\n                    *(*(in_ECX + 0xc) + 8 + var_4h * 8) = iVar3;\n                    if (iVar2 <= iVar1) {\n                        iVar2 = iVar1;\n                    }\n                    *(*(in_ECX + 0xc) + 0xc + var_4h * 8) = iVar2;\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h <= arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "010139cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.010139cc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(param_2 + 0x3c);\n    if (0 < *(param_1 + 0xc)) {\n        do {\n            iVar1 = (****(param_1 + 4))(param_2);\n            if (iVar1 == 0) break;\n            iVar1 = *(param_2 + 0x3c);\n            if (iVar1 == iVar2) {\n                do {\n                    iVar1 = (**(**(param_1 + 4) + 4))(param_2);\n                    if (iVar1 == 0) break;\n                } while (*(param_2 + 0x3c) == iVar2);\n                iVar1 = *(param_2 + 0x3c);\n                if (iVar1 == iVar2) break;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar1;\n        } while (iVar3 < *(param_1 + 0xc));\n    }\n    fcn.01012120(iVar3);\n    return 1;\n}\n",
        "token_count": 276
    },
    "01014644": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01014644(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x98) = *(param_1 + 0xa8);\n    *(param_1 + 0x9c) = *(param_1 + 0xac);\n    *(param_1 + 0xa0) = *(param_1 + 0xb0);\n    *(param_1 + 0xa4) = *(param_1 + 0xb4);\n    *(param_1 + 0xa8) = *(param_1 + 0xb8);\n    *(param_1 + 0xac) = *(param_1 + 0xbc);\n    *(param_1 + 0xb0) = *(param_1 + 0xc0);\n    *(param_1 + 0xb4) = *(param_1 + 0xc4);\n    *(param_1 + 0xb8) = *(param_1 + 200);\n    *(param_1 + 0xbc) = *(param_1 + 0xcc);\n    *(param_1 + 0xc0) = *(param_1 + 0xd0);\n    *(param_1 + 0xc4) = *(param_1 + 0xd4);\n    do {\n        iVar1 = fcn.01012d6d();\n    } while (iVar1 == 0);\n    return;\n}\n",
        "token_count": 314
    },
    "01019e69": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.01019e69(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack16 [12];\n    \n    do {\n        iVar2 = fcn.0101c700(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.01025771(param_1);\n    } while (iVar2 != 0);\n    if ((*0x104e3a4 & 1) == 0) {\n        *0x104e3a4 = *0x104e3a4 | 1;\n        fcn.0101c862();\n        fcn.0101e4d7(0x1040df0);\n    }\n    fcn.01011671(0x104e398);\n    fcn.0101c8e2(auStack16, 0x1040e08);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 222
    },
    "01022fab": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01022fab(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024f40(0x1041e08, 0xc);\n    fcn.01023ee9(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x104e3e0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x104e3dc;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x01022fef;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0101c5a9(arg_8h_00);\ncode_r0x01022fef:\n        fcn.0101c5a9(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.01023012();\n    fcn.01024f85();\n    return;\n}\n",
        "token_count": 401
    },
    "0103678d": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0103678d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 70
    }
}