{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 24576 named .text\n    iVar3 = *0x42f028;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar1)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar4, 0x42e820, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar2)(uVar4, uVar6);\n                (*pcVar1)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x42f024;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 849
    },
    "00401439": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00401439(int32_t *lpExistingFileName)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t **ppiVar5;\n    char *pcVar6;\n    char *pcVar7;\n    code *pcVar8;\n    int32_t iVar9;\n    uint uVar10;\n    int32_t *piVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint uVar14;\n    int32_t *piVar15;\n    int32_t **arg_8h;\n    uint *puVar16;\n    int32_t *piVar17;\n    int32_t **arg_8h_00;\n    bool bVar18;\n    uint in_stack_fffffdf0;\n    uint in_stack_fffffdf4;\n    uint uVar19;\n    uint uVar20;\n    int32_t **ppiVar21;\n    uint lpFindFileData;\n    uint *puStack420;\n    uint *puStack416;\n    uint uStack408;\n    int32_t *piStack404;\n    int32_t **ppiStack400;\n    uint var_178h;\n    int32_t *lpFileOp;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_4ah;\n    uint lpNumberOfBytesWritten;\n    uint lpRect;\n    int32_t var_38h;\n    int32_t **lpExitCode;\n    int32_t *lpNumberOfBytesRead;\n    int32_t **nNumberOfBytesToWrite;\n    int32_t var_28h;\n    int32_t *var_24h;\n    int32_t *dwFileAttributes;\n    int32_t *var_1ch;\n    int32_t *lpLastWriteTime;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint8_t lpBuffer;\n    int32_t *lpNewFileName;\n    uint32_t var_4h;\n    \n    ppiVar5 = *0x40afe8;\n    piVar11 = *0x40928c;\n    pcVar8 = _sym.imp.USER32.dll_ShowWindow;\n    lpNewFileName = *0x42f024;\n    uVar14 = 0;\n    piVar15 = lpExistingFileName;\n    piVar17 = &fcn.00401439::var_28h;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *piVar17 = *piVar15;\n        piVar15 = piVar15 + 1;\n        piVar17 = piVar17 + 1;\n    }\n    iVar13 = var_24h * 0x400;\n    arg_8h = iVar13 + 0x430000;\n    arg_8h_00 = dwFileAttributes * 0x400 + 0x430000;\n    *0x409be0 = &fcn.00401439::var_24h;\n    var_4h = 0;\n    if (0x41 < var_28h - 2U) goto code_r0x00402932;\n    // switch table (66 cases) at 0x402944\n    switch(*((var_28h - 2U) * 4 + 0x402944)) {\n    case 0x401493:\ncode_r0x00401495:\n        fcn.00404d69(in_stack_fffffdf0, in_stack_fffffdf4);\n        return 0x7fffffff;\n    case 0x40149f:\n        *0x42e7ec = *0x42e7ec + 1;\n        if (lpNewFileName == NULL) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014ba:\n        if (var_24h < 0) {\n            var_24h = fcn.0040591b((var_24h + 1U) * -0x400 + 0x430000);\n        }\n        piVar11 = fcn.0040136d(var_24h - 1, 0);\n        return piVar11;\n    case 0x4014dc:\n        if (dwFileAttributes == NULL) {\n            fcn.00404d69(var_24h, 0);\n        }\n        else if ((dwFileAttributes & 8) == 0) {\n            *0x40928c = dwFileAttributes;\n            *0x40900c = piVar11;\n        }\n        else {\n            *0x40928c = *0x40900c;\n        }\n        break;\n    case 0x401518:\n        iVar13 = fcn.00402a80(0);\n        if (iVar13 < 2) {\n            iVar13 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar13);\n        break;\n    case 0x401532:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(lpNewFileName);\n        break;\n    case 0x401540:\n        uVar14 = fcn.00402a80(1);\n        *(var_24h * 4 + 0x42f0a0) = uVar14;\n        break;\n    case 0x401556:\n        puVar1 = var_1ch * 4 + 0x42f0a0;\n        uVar12 = *puVar1;\n        piVar11 = (&fcn.00401439::var_24h)[uVar12 == 0];\n        *puVar1 = uVar12 & lpLastWriteTime;\n        return piVar11;\n    case 0x401577:\n        goto code_r0x004028da;\n    case 0x401587:\n        if (*0x42e7f0 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x42e7f0, dwFileAttributes);\n        }\n        if (*0x42e804 != 0) {\n            (*pcVar8)(*0x42e804, var_24h);\n        }\n        break;\n    case 0x4015b7:\n        uVar14 = fcn.00402a9d(0xfffffff0);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar14, dwFileAttributes);\n        goto code_r0x004015c8;\n    case 0x4015d5:\n        uVar14 = fcn.00402a9d(0xfffffff0);\n        puVar3 = fcn.00405530(uVar14);\n        if (puVar3 != NULL) {\n            do {\n                puVar3 = fcn.004054c8(puVar3, 0x5c);\n                uVar2 = *puVar3;\n                *puVar3 = 0;\n                lpExistingFileName = lpExistingFileName & 0xffffff | uVar2 << 0x18;\n                iVar13 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(uVar14, 0);\n                if ((iVar13 == 0) &&\n                   ((iVar13 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar13 != 0xb7 ||\n                    (uVar12 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar14),  (uVar12 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *puVar3 = lpExistingFileName._3_1_;\n                puVar3 = puVar3 + 1;\n            } while (lpExistingFileName._3_1_ != 0);\n        }\n        if (dwFileAttributes == NULL) {\n            uVar14 = 0xfffffff5;\n            goto code_r0x004021e5;\n        }\n        fcn.00401428(0xffffffe6);\n        fcn.004059a4(0x435800, uVar14);\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar14);\n        break;\n    case 0x401656:\n        uVar14 = fcn.00402a9d(0);\n        iVar13 = fcn.00405c6c(uVar14);\n        lpLastWriteTime = dwFileAttributes;\n        goto joined_r0x00401a39;\n    case 0x401667:\n        lpExistingFileName = fcn.00402a9d(0xffffffd0);\n        lpNewFileName = fcn.00402a9d(0xffffffdf);\n        fcn.004059a4(0x409fe8, lpExistingFileName);\n        iVar13 = sub.KERNEL32.dll_lstrlenA(lpNewFileName);\n        iVar9 = sub.KERNEL32.dll_lstrlenA(lpExistingFileName);\n        if (iVar13 + iVar9 < 0x3fd) {\n            sub.KERNEL32.dll_lstrcatA(0x409fe8, 0x40901c);\n            sub.KERNEL32.dll_lstrcatA(0x409fe8, lpNewFileName);\n        }\n        iVar13 = (*_sym.imp.KERNEL32.dll_MoveFileA)(lpExistingFileName, lpNewFileName);\n        if (iVar13 == 0) {\n            if ((var_1ch == NULL) || (iVar13 = fcn.00405c6c(lpExistingFileName),  iVar13 == 0)) goto code_r0x004026d7;\n            fcn.004056f7(lpExistingFileName, lpNewFileName);\n            uVar14 = 0xffffffe4;\n        }\n        else {\n            uVar14 = 0xffffffe3;\n        }\n        goto code_r0x004021e5;\n    case 0x4016fb:\n        piVar11 = fcn.00402a9d(0);\n        iVar13 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(piVar11, 0x400, arg_8h_00, &fcn.00401439::lpExistingFileName)\n        ;\n        if (iVar13 == 0) {\ncode_r0x0040173b:\n            var_4h = 1;\n            *arg_8h_00 = 0;\n        }\n        else if ((piVar11 < lpExistingFileName) && (*lpExistingFileName != '\\0')) {\n            iVar13 = fcn.00405c6c(piVar11);\n            if (iVar13 == 0) goto code_r0x0040173b;\n            fcn.004059a4(lpExistingFileName, iVar13 + 0x2c);\n        }\n        if (var_1ch == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(arg_8h_00, arg_8h_00, 0x400);\n        }\n        break;\n    case 0x40175f:\n        uVar14 = fcn.00402a9d(0xffffffff);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar14, 0, 0x400, arg_8h, &fcn.00401439::lpExistingFileName);\n        goto code_r0x0040177b;\n    case 0x401786:\n        uVar14 = fcn.00402a9d(0xffffffef);\n        iVar13 = fcn.004056af(arg_8h, uVar14);\n        goto code_r0x004015c8;\n    case 0x401799:\n        ppiVar5 = fcn.00402a9d(0x31);\n        lpExistingFileName = var_24h & 7;\n        lpExitCode = ppiVar5;\n        iVar13 = fcn.00405509(ppiVar5);\n        if (iVar13 == 0) {\n            uVar10 = 0x435800;\n            uVar14 = fcn.004059a4(0x409be8, 0x435800, ppiVar5);\n            uVar14 = fcn.0040549d(uVar14);\n            sub.KERNEL32.dll_lstrcatA(uVar14);\n        }\n        else {\n            uVar10 = 0x409be8;\n            fcn.004059a4(0x409be8);\n        }\n        fcn.00405bd3(0x409be8);\n        do {\n            if (2 < lpExistingFileName) {\n                iVar13 = fcn.00405c6c(0x409be8);\n                uVar12 = 0;\n                if (iVar13 != 0) {\n                    uVar12 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar13 + 0x14, &fcn.00401439::lpLastWriteTime);\n                }\n                lpExistingFileName = ((lpExistingFileName - 3U | 0x80000000) & uVar12) == 0;\n            }\n            if (lpExistingFileName == NULL) {\n                fcn.00405661(0x409be8);\n            }\n            lpNewFileName = fcn.00405680(0x409be8, 0x40000000, (lpExistingFileName != 0x1) + '\\x01');\n            if (lpNewFileName != 0xffffffff) {\n                fcn.00404d69(0xffffffea, lpExitCode);\n                *0x40928c = *0x40928c + 1;\n                iVar13 = fcn.00402eb4(var_1ch, lpNewFileName, 0, 0);\n                *0x40928c = *0x40928c - 1;\n                if ((lpLastWriteTime != 0xffffffff) || (var_14h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (lpNewFileName, &fcn.00401439::lpLastWriteTime, 0, &fcn.00401439::lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(lpNewFileName);\n                if (-1 < iVar13) goto code_r0x00402932;\n                if (iVar13 == -2) {\n                    uVar20 = 0xffffffe9;\n                    fcn.004059c6(0x409be8, 0xffffffe9);\n                    uVar19 = 0x409be8;\n                    sub.KERNEL32.dll_lstrcatA(uVar10, lpExitCode, 0x409be8);\n                }\n                else {\n                    uVar20 = 0xffffffee;\n                    uVar19 = 0x409be8;\n                    fcn.004059c6(0x409be8, 0xffffffee);\n                }\n                uVar10 = 0x200010;\n                uVar14 = 0x409be8;\n                goto code_r0x0040228b;\n            }\n            if (lpExistingFileName != NULL) {\n                fcn.00404d69(0xffffffe2, lpExitCode);\n                bVar18 = lpExistingFileName == 0x2;\n                goto code_r0x004015ca;\n            }\n            fcn.004059a4(0x40a3e8, 0x430000);\n            fcn.004059a4(0x430000, 0x409be8);\n            fcn.004059c6(0x409fe8, var_10h);\n            fcn.004059a4(0x430000, 0x40a3e8);\n            iVar13 = fcn.0040529a();\n        } while (iVar13 == 4);\n        if (iVar13 != 5) {\n            in_stack_fffffdf4 = 0x409be8;\n            in_stack_fffffdf0 = 0xfffffffa;\n            goto code_r0x00401495;\n        }\n        *0x42f0a8 = *0x42f0a8 + 1;\n        goto code_r0x0040293b;\n    case 0x40193d:\n        uVar14 = 0;\n        goto code_r0x00401974;\n    case 0x401940:\n        uVar14 = fcn.00402a9d(0x31);\n        piVar11 = fcn.0040529a(uVar14, var_24h);\n        if (piVar11 == NULL) goto code_r0x004026d7;\n        if (piVar11 == var_1ch) {\n            return lpLastWriteTime;\n        }\n        if (piVar11 == var_14h) {\n            return var_10h;\n        }\n        break;\n    case 0x401972:\n        uVar14 = 0xfffffff0;\ncode_r0x00401974:\n        uVar14 = fcn.00402a9d(uVar14);\n        fcn.004052dc(uVar14, dwFileAttributes);\n        break;\n    case 0x401987:\n        uVar14 = fcn.00402a9d(1);\n        sub.KERNEL32.dll_lstrlenA(uVar14);\n        goto code_r0x004028da;\n    case 0x401999:\n        lpExistingFileName = fcn.00402a80(2);\n        iVar13 = fcn.00402a80(3);\n        nNumberOfBytesToWrite = fcn.00402a9d(1);\n        *arg_8h = 0;\n        if (((var_1ch == NULL) || (lpExistingFileName != NULL)) &&\n           ((iVar9 = sub.KERNEL32.dll_lstrlenA(nNumberOfBytesToWrite),  -1 < iVar13 ||\n            (iVar13 = iVar13 + iVar9,  -1 < iVar13)))) {\n            if (iVar9 < iVar13) {\n                iVar13 = iVar9;\n            }\n            fcn.004059a4(arg_8h, nNumberOfBytesToWrite + iVar13);\n            iVar13 = lpExistingFileName;\n            if (lpExistingFileName != NULL) {\n                if (lpExistingFileName < 0) {\n                    iVar9 = sub.KERNEL32.dll_lstrlenA(arg_8h);\n                    lpExistingFileName = iVar13 + iVar9;\n                    if (lpExistingFileName < 0) {\n                        lpExistingFileName = NULL;\n                    }\n                }\n                if (lpExistingFileName < 0x400) {\n                    *(lpExistingFileName + arg_8h) = 0;\n                }\n            }\n        }\n        break;\n    case 0x401a1a:\n        uVar14 = fcn.00402a9d(0x20);\n        uVar10 = fcn.00402a9d(0x31);\n        if (var_14h == NULL) {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        }\n        else {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar14, uVar10);\n        }\n        goto joined_r0x00401a39;\n    case 0x401a4b:\n        lpExistingFileName = fcn.00402a9d(1);\n        iVar9 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(lpExistingFileName, arg_8h, 0x400);\n        if ((iVar9 == 0) ||\n           ((var_1ch != NULL && (iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(lpExistingFileName, arg_8h),  iVar9 == 0))))\n        {\n            var_4h = 1;\n            *arg_8h = 0;\n        }\n        *(iVar13 + 0x4303ff) = 0;\n        break;\n    case 0x401a8b:\n        uVar12 = fcn.00402a80(0);\n        uVar4 = fcn.00402a80(1);\n        if (var_10h != NULL) {\n            if (uVar12 < uVar4) {\n                return lpLastWriteTime;\n            }\n            if (uVar12 <= uVar4) {\n                return var_1ch;\n            }\n            return var_14h;\n        }\n        if (uVar12 < uVar4) {\n            return lpLastWriteTime;\n        }\n        if (uVar12 <= uVar4) {\n            return var_1ch;\n        }\n        return var_14h;\n    case 0x401abd:\n        fcn.00402a80(1);\n        iVar13 = fcn.00402a80(2);\n        if (0xc < lpLastWriteTime) goto code_r0x004028da;\n    // switch table (13 cases) at 0x402a4c\n        switch(*(lpLastWriteTime * 4 + 0x402a4c)) {\n        case 0x401ade:\n            break;\n        case 0x401ae2:\n            break;\n        case 0x401ae6:\n            break;\n        case 0x401aed:\n            goto joined_r0x00401b28;\n        case 0x401afa:\n            break;\n        case 0x401afe:\n            break;\n        case 0x401b02:\n            break;\n        case 0x401b06:\n            break;\n        case 0x401b0f:\n            break;\n        case 0x401b19:\n            break;\n        case 0x401b26:\njoined_r0x00401b28:\n            if (iVar13 == 0) {\n                var_4h = 1;\n            }\n            break;\n        case 0x401b3e:\n            break;\n        case 0x401b42:\n        }\n        goto code_r0x004028da;\n    case 0x401b4a:\n        uVar14 = fcn.00402a9d(1);\n        uVar10 = fcn.00402a80(2);\n        (*_sym.imp.USER32.dll_wsprintfA)(arg_8h, uVar14, uVar10);\n        break;\n    case 0x401b6b:\n        if (var_1ch != NULL) {\n            do {\n                var_1ch = var_1ch - 1;\n                if (ppiVar5 == NULL) goto code_r0x0040227d;\n                ppiVar5 = *ppiVar5;\n            } while (var_1ch != NULL);\n            if (ppiVar5 == NULL) goto code_r0x0040227d;\n            puVar16 = 0x409be8;\n            fcn.004059a4(0x409be8, ppiVar5 + 1);\n            arg_8h = *0x40afe8 + 1;\n            fcn.004059a4(ppiVar5 + 1, arg_8h);\n            goto code_r0x00402858;\n        }\n        if (dwFileAttributes != NULL) {\n            if (*0x40afe8 != NULL) {\n                fcn.004059a4(arg_8h, *0x40afe8 + 1);\n                *0x40afe8 = *ppiVar5;\n                ppiVar21 = arg_8h;\n                goto code_r0x00401bdb;\n            }\n            goto code_r0x004026d7;\n        }\n        ppiVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x404);\n        fcn.004059c6(ppiVar5 + 1, var_24h);\n        *ppiVar5 = *0x40afe8;\n        *0x40afe8 = ppiVar5;\n        break;\n    case 0x401c13:\n        lpNewFileName = fcn.00402a9d(0x33);\n        lpExistingFileName = fcn.00402a9d(0x44);\n        if ((var_10h & 1) == 0) {\n            lpNewFileName = fcn.0040591b(lpNewFileName);\n        }\n        if ((var_10h & 2) == 0) {\n            lpExistingFileName = fcn.0040591b(lpExistingFileName);\n        }\n        if (var_28h == 0x21) {\n            uVar14 = fcn.00402a80();\n            uVar10 = fcn.00402a80(2);\n            if (var_10h >> 2 == 0) {\n                lpExitCode = (*_sym.imp.USER32.dll_SendMessageA)(uVar14, uVar10, lpNewFileName, lpExistingFileName);\n                dwFileAttributes = var_24h;\n            }\n            else {\n                iVar13 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                                   (uVar14, uVar10, lpNewFileName, lpExistingFileName, 0, var_10h >> 2, \n                                    &fcn.00401439::lpExitCode);\n                var_4h = iVar13 == 0;\n                dwFileAttributes = var_24h;\n            }\n        }\n        else {\n            pcVar6 = fcn.00402a9d(1);\n            pcVar7 = fcn.00402a9d(0x12);\n            lpExitCode = (*_sym.imp.USER32.dll_FindWindowExA)\n                                   (lpNewFileName, lpExistingFileName, -(*pcVar6 != '\\0') & pcVar6, \n                                    -(*pcVar7 != '\\0') & pcVar7);\n            dwFileAttributes = var_24h;\n        }\njoined_r0x0040266a:\n        if (-1 < dwFileAttributes) goto code_r0x004028da;\n        break;\n    case 0x401cd5:\n        uVar14 = fcn.00402a80(0);\n        iVar13 = (*_sym.imp.USER32.dll_IsWindow)(uVar14);\n        lpLastWriteTime = dwFileAttributes;\njoined_r0x00401a39:\n        if (iVar13 == 0) {\n            return var_1ch;\n        }\n        return lpLastWriteTime;\n    case 0x401cf2:\n        uVar14 = fcn.00402a80(2);\n        uVar14 = fcn.00402a80(1, uVar14);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar14);\n        goto code_r0x004028da;\n    case 0x401d0d:\n        uVar14 = fcn.00402a80(0, 0xffffffeb, *0x42f068 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar14);\n        break;\n    case 0x401d2c:\n        uVar14 = (*_sym.imp.USER32.dll_GetDlgItem)(lpNewFileName, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar14, &fcn.00401439::lpRect);\n        uVar10 = fcn.00402a9d(0, 0, var_38h * var_1ch, lpExitCode * var_1ch, 0x10);\n        uVar10 = (*_sym.imp.USER32.dll_LoadImageA)(0, uVar10);\n        iVar13 = (*_sym.imp.USER32.dll_SendMessageA)(uVar14, 0x172, 0, uVar10);\n        if (iVar13 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar13);\n        }\n        break;\n    case 0x401d88:\n        uVar14 = (*_sym.imp.USER32.dll_GetDC)(lpNewFileName, 0x5a, 0x48);\n        uVar14 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar14);\n        uVar14 = fcn.00402a80(2, uVar14);\n        *0x40afec = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar14);\n        *0x40afec = -*0x40afec;\n        *0x40affc = fcn.00402a80(3);\n        *0x40b000 = var_14h & 1;\n        *0x40b003 = 1;\n        *0x40b001 = var_14h & 2;\n        *0x40b002 = var_14h & 4;\n        fcn.004059c6(0x40b008, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x40afec);\ncode_r0x004028da:\n        fcn.00405902(arg_8h);\n        break;\n    case 0x401e02:\n        uVar14 = fcn.00402a80(0);\n        uVar10 = fcn.00402a80(1);\n        if (lpLastWriteTime == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar14, uVar10);\n        }\n        break;\n    case 0x401e2e:\n        pcVar6 = fcn.00402a9d(0);\n        uVar14 = fcn.00402a9d(0x31);\n        pcVar7 = fcn.00402a9d(0x22);\n        (*_sym.imp.USER32.dll_wsprintfA)(0x409fe8, \"%s %s\", pcVar6, uVar14);\n        fcn.00401428(0xffffffec);\n        iVar13 = (*_sym.imp.SHELL32.dll_ShellExecuteA)\n                           (lpNewFileName, -(*pcVar6 != '\\0') & pcVar6, uVar14, -(*pcVar7 != '\\0') & pcVar7, 0x435800, \n                            lpLastWriteTime);\n        if (iVar13 < 0x21) goto code_r0x004026d7;\n        break;\n    case 0x401e96:\n        uVar14 = fcn.00402a9d(0);\n        uVar10 = 0xffffffeb;\n        fcn.00404d69(0xffffffeb, uVar14);\n        lpExistingFileName = fcn.00405222(uVar14, 0x435800);\n        pcVar8 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        if (lpExistingFileName == NULL) goto code_r0x004026d7;\n        piVar11 = lpExistingFileName;\n        if (var_1ch != NULL) {\n            while (iVar13 = (*pcVar8)(lpExistingFileName, 100),  iVar13 == 0x102) {\n                fcn.00405cd4(0xf);\n            }\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(lpExistingFileName, &fcn.00401439::lpExitCode);\n            if (dwFileAttributes < 0) {\n                piVar11 = lpExistingFileName;\n                if (lpExitCode != NULL) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.00405902(uVar10, lpExitCode, arg_8h_00);\n                piVar11 = lpExistingFileName;\n            }\n        }\ncode_r0x00401f0a:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(piVar11);\n        break;\n    case 0x401f15:\n        uVar14 = fcn.00402a9d(2);\n        lpExistingFileName = fcn.00405c6c(uVar14);\n        if (lpExistingFileName != NULL) {\n            fcn.00405902(arg_8h_00, lpExistingFileName[5]);\n            goto code_r0x004028da;\n        }\n        *arg_8h = 0;\n        *arg_8h_00 = 0;\n        goto code_r0x004026d7;\n    case 0x401f45:\n        lpExistingFileName = &fcn.00401439::var_58h;\n        nNumberOfBytesToWrite = fcn.00402a9d(0xffffffee);\n        lpNewFileName =\n             sub.VERSION.dll_GetFileVersionInfoSizeA(nNumberOfBytesToWrite, &fcn.00401439::lpNumberOfBytesRead);\n        *arg_8h = 0;\n        *arg_8h_00 = 0;\n        var_4h = 1;\n        if ((lpNewFileName != NULL) &&\n           (ppiStack400 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, lpNewFileName),  ppiStack400 != NULL)) {\n            piStack404 = lpNewFileName;\n            uStack408 = 0;\n            puStack416 = 0x401f96;\n            ppiVar21 = nNumberOfBytesToWrite;\n            lpExitCode = ppiStack400;\n            iVar13 = sub.VERSION.dll_GetFileVersionInfoA();\n            ppiVar5 = lpExitCode;\n            if (iVar13 != 0) {\n                puStack416 = &fcn.00401439::lpNumberOfBytesWritten;\n                puStack420 = &fcn.00401439::lpExistingFileName;\n                lpFindFileData = 0x409010;\n                ppiVar21 = lpExitCode;\n                iVar13 = sub.VERSION.dll_VerQueryValueA();\n                ppiVar5 = lpExitCode;\n                if (iVar13 != 0) {\n                    fcn.00405902(arg_8h, lpExistingFileName[2]);\n                    fcn.00405902(arg_8h_00, lpExistingFileName[3]);\n                    var_4h = 0;\n                    ppiVar5 = lpExitCode;\n                    ppiVar21 = arg_8h_00;\n                }\n            }\ncode_r0x00401bdb:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar5, ppiVar21);\n        }\n        break;\n    case 0x401fd6:\n        var_4h = 1;\n        (*_sym.imp.KERNEL32.dll_SetErrorMode)(0x8001);\n        if (*0x42f0d0 < 0) {\n            uVar14 = 0xffffffe7;\ncode_r0x00402092:\n            fcn.00401428(uVar14);\n        }\n        else {\n            uVar14 = fcn.00402a9d(0xfffffff0);\n            lpExistingFileName = fcn.00402a9d(1);\n            if (((var_14h == NULL) || (iVar13 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar14),  iVar13 == 0)) &&\n               (iVar13 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar14, 0, 8),  iVar13 == 0)) {\n                uVar14 = 0xfffffff6;\n                goto code_r0x00402092;\n            }\n            pcVar8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar13, lpExistingFileName);\n            if (pcVar8 == NULL) {\n                fcn.00404d69(0xfffffff7, lpExistingFileName);\n            }\n            else {\n                var_4h = 0;\n                if (var_1ch == NULL) {\n                    (*pcVar8)(lpNewFileName, 0x400, 0x430000, 0x40afe8, 0x409000);\n                }\n                else {\n                    fcn.00401428(var_1ch);\n                    iVar9 = (*pcVar8)();\n                    if (iVar9 != 0) {\n                        var_4h = 1;\n                    }\n                }\n            }\n            if (lpLastWriteTime == NULL) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar13);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n        break;\n    case 0x4020a3:\n        lpNumberOfBytesRead = fcn.00402a9d(0xfffffff0);\n        uVar14 = fcn.00402a9d(0xffffffdf);\n        nNumberOfBytesToWrite = fcn.00402a9d(2);\n        lpExitCode = fcn.00402a9d(0xffffffcd);\n        lpNumberOfBytesWritten = fcn.00402a9d(0x45);\n        iVar13 = fcn.00405509(uVar14);\n        if (iVar13 == 0) {\n            fcn.00402a9d(0x21);\n        }\n        iVar13 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x407428, 0, 1, 0x407418, &fcn.00401439::lpExistingFileName);\n        if (-1 < iVar13) {\n            iVar13 = (***lpExistingFileName)(lpExistingFileName, 0x407438, &fcn.00401439::lpNewFileName);\n            if (-1 < iVar13) {\n                iVar13 = (**(*lpExistingFileName + 0x50))(lpExistingFileName, uVar14);\n                (**(*lpExistingFileName + 0x24))(lpExistingFileName, 0x435800);\n                uVar12 = var_14h >> 8 & 0xff;\n                if (uVar12 != 0) {\n                    (**(*lpExistingFileName + 0x3c))(lpExistingFileName, uVar12);\n                }\n                (**(*lpExistingFileName + 0x34))(lpExistingFileName, var_14h >> 0x10);\n                if (*lpExitCode != '\\0') {\n                    (**(*lpExistingFileName + 0x44))(lpExistingFileName, lpExitCode, var_14h & 0xff);\n                }\n                (**(*lpExistingFileName + 0x2c))(lpExistingFileName, nNumberOfBytesToWrite);\n                (**(*lpExistingFileName + 0x1c))(lpExistingFileName, lpNumberOfBytesWritten);\n                if (-1 < iVar13) {\n                    *0x4093e0 = 0;\n                    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpNumberOfBytesRead, 0xffffffff, 0x4093e0, 0x400)\n                    ;\n                    iVar13 = (**(*lpNewFileName + 0x18))(lpNewFileName, 0x4093e0, 1);\n                }\n                (**(*lpNewFileName + 8))(lpNewFileName);\n            }\n            (**(*lpExistingFileName + 8))(lpExistingFileName);\n            if (-1 < iVar13) {\n                uVar14 = 0xfffffff4;\n                goto code_r0x004021e5;\n            }\n        }\n        var_4h = 1;\n        uVar14 = 0xfffffff0;\n        goto code_r0x004021e5;\n    case 0x4021f3:\n        iVar13 = fcn.00402a9d(0);\n        lpExistingFileName = iVar13;\n        var_58h = fcn.00402a9d(0x11);\n        lpFileOp = lpNewFileName;\n        var_60h = 2;\n        iVar9 = sub.KERNEL32.dll_lstrlenA(iVar13);\n        *(iVar9 + 1 + iVar13) = 0;\n        iVar13 = sub.KERNEL32.dll_lstrlenA(var_58h);\n        *(iVar13 + 1 + var_58h) = 0;\n        fcn.004059c6(0x40a3e8, 0xfffffff8);\n        sub.KERNEL32.dll_lstrcatA(0x40a3e8, var_58h);\n        var_5ch = lpExistingFileName;\n        var_4ah = 0x40a3e8;\n        var_54h._0_2_ = var_1ch._0_2_;\n        fcn.00404d69(0, 0x40a3e8);\n        iVar13 = (*_sym.imp.SHELL32.dll_SHFileOperationA)(&fcn.00401439::lpFileOp);\n        if (iVar13 != 0) {\n            fcn.00404d69(0xfffffff9, 0);\n            goto code_r0x004026d7;\n        }\n        break;\n    case 0x402276:\n        if (var_24h != 0xbadf00d) {\ncode_r0x0040227d:\n            uVar20 = 0x200010;\n            uVar19 = 0xffffffe8;\n            uVar10 = 0;\n            uVar14 = fcn.004059c6(0, 0xffffffe8);\ncode_r0x0040228b:\n            fcn.0040529a(uVar14, uVar10, uVar19, uVar20);\n            return 0x7fffffff;\n        }\n        *0x42f0b4 = *0x42f0b4 + 1;\n        break;\n    case 0x4022a5:\n        uVar10 = 0;\n        uVar19 = 0;\n        if (var_24h != NULL) {\n            uVar10 = fcn.00402a9d(0);\n        }\n        if (dwFileAttributes != NULL) {\n            uVar19 = fcn.00402a9d(0x11);\n        }\n        if (var_14h != NULL) {\n            uVar14 = fcn.00402a9d(0x22);\n        }\n        uVar20 = fcn.00402a9d(0xffffffcd);\n        iVar13 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(uVar10, uVar19, uVar14, uVar20);\ncode_r0x004015c8:\n        bVar18 = iVar13 == 0;\ncode_r0x004015ca:\n        if (bVar18) goto code_r0x004026d7;\n        break;\n    case 0x4022e7:\n        lpExistingFileName = 0x7e4e21;\n        uVar14 = fcn.00402a9d(1);\n        lpNumberOfBytesRead = fcn.00402a9d(0x12);\n        uVar10 = fcn.00402a9d(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (uVar14, lpNumberOfBytesRead, &fcn.00401439::lpExistingFileName, arg_8h, 0x3ff, uVar10);\n        iVar13 = *arg_8h - lpExistingFileName;\ncode_r0x0040177b:\n        if (iVar13 == 0) {\ncode_r0x004026ab:\n            var_4h = 1;\n            *arg_8h = 0;\n        }\n        break;\n    case 0x402327:\n        if (var_14h == NULL) {\n            iVar9 = fcn.00402b79(2);\n            if (iVar9 == 0) goto code_r0x004026d7;\n            uVar14 = fcn.00402a9d(0x33);\n            iVar13 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar9, uVar14);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar9);\n        }\n        else {\n            uVar14 = fcn.00402a9d(0x22);\n            uVar10 = fcn.00402b64(dwFileAttributes, uVar14, var_14h & 2);\n            iVar13 = fcn.00402add(uVar10, dwFileAttributes, uVar14);\n        }\n        if (iVar13 != 0) goto code_r0x004026d7;\n        break;\n    case 0x402383:\n        uVar14 = fcn.00402b64(var_24h);\n        lpNumberOfBytesRead = var_10h;\n        lpNumberOfBytesWritten = fcn.00402a9d(2);\n        uVar10 = fcn.00402a9d(0x11);\n        var_4h = 1;\n        piVar11 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                            (uVar14, uVar10, 0, 0, 0, 2, 0, &fcn.00401439::lpExistingFileName, 0);\n        if (piVar11 == NULL) {\n            if (var_14h == 0x1) {\n                fcn.00402a9d(0x23);\n                iVar13 = sub.KERNEL32.dll_lstrlenA(0x40a3e8);\n                piVar11 = iVar13 + 1;\n            }\n            if (var_14h == 0x4) {\n                *0x40a3e8 = fcn.00402a80(3);\n                piVar11 = var_14h;\n            }\n            if (var_14h == 0x3) {\n                piVar11 = fcn.00402eb4(lpLastWriteTime, 0, 0x40a3e8, 0xc00);\n            }\n            iVar13 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                               (lpExistingFileName, lpNumberOfBytesWritten, 0, lpNumberOfBytesRead, 0x40a3e8, piVar11);\n            piVar11 = lpExistingFileName;\n            if (iVar13 == 0) {\n                var_4h = 0;\n            }\n            goto code_r0x004024f8;\n        }\n        break;\n    case 0x402427:\n        piVar11 = fcn.00402b79(0x20019);\n        uVar14 = fcn.00402a9d(0x33);\n        *arg_8h = 0;\n        if (piVar11 == NULL) goto code_r0x004026d7;\n        lpExitCode = 0x3ff;\n        iVar13 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                           (piVar11, uVar14, 0, &fcn.00401439::lpExistingFileName, arg_8h, &fcn.00401439::lpExitCode);\n        if (iVar13 == 0) {\n            if (lpExistingFileName == 0x4) {\n                if (var_14h == NULL) {\n                    var_4h = 1;\n                }\n                fcn.00405902();\n            }\n            else {\n                if ((lpExistingFileName != 0x1) && (lpExistingFileName != 0x2)) goto code_r0x0040249b;\n                if (var_14h != NULL) {\n                    var_4h = 1;\n                }\n                *(lpExitCode + var_24h * 0x100 + 0x10c000) = 0;\n            }\n        }\n        else {\ncode_r0x0040249b:\n            *arg_8h = 0;\n            var_4h = 1;\n        }\ncode_r0x004024f8:\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(piVar11);\n        break;\n    case 0x4024a2:\n        piVar11 = fcn.00402b79(0x20019);\n        uVar14 = fcn.00402a80(3);\n        *arg_8h = 0;\n        if (piVar11 != NULL) {\n            lpExistingFileName = 0x3ff;\n            if (var_14h == NULL) {\n                iVar9 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)\n                                  (piVar11, uVar14, arg_8h, &fcn.00401439::lpExistingFileName, 0, 0, 0, 0);\n                if (iVar9 != 0) goto code_r0x004026d7;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(piVar11, uVar14, arg_8h, 0x3ff);\n            }\n            *(iVar13 + 0x4303ff) = 0;\n            goto code_r0x004024f8;\n        }\n        goto code_r0x004026d7;\n    case 0x402503:\n        if (*arg_8h != '\\0') {\n            piVar11 = fcn.0040591b(arg_8h);\n            goto code_r0x00401f0a;\n        }\n        break;\n    case 0x402517:\n        uVar14 = fcn.00402a9d(0xffffffed);\n        iVar13 = fcn.00405680(uVar14, dwFileAttributes, var_1ch);\n        if (iVar13 != -1) goto code_r0x004028da;\ncode_r0x004026d5:\n        *arg_8h = 0;\n        goto code_r0x004026d7;\n    case 0x402539:\n        if (var_1ch == NULL) {\n            uVar14 = fcn.00402a9d(0x11);\n            uVar14 = sub.KERNEL32.dll_lstrlenA(uVar14);\n        }\n        else {\n            *0x409fe8 = fcn.00402a80(1);\n            uVar14 = 1;\n        }\n        if (*arg_8h != '\\0') {\n            puVar16 = &fcn.00401439::lpExistingFileName;\n            uVar20 = 0;\n            uVar19 = 0x409fe8;\n            uVar10 = fcn.0040591b(arg_8h);\n            iVar13 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar10, arg_8h, uVar19, uVar14, puVar16, uVar20);\n            goto code_r0x004015c8;\n        }\ncode_r0x004026d7:\n        var_4h = 1;\n        break;\n    case 0x402581:\n        nNumberOfBytesToWrite = NULL;\n        lpNewFileName = fcn.00402a80(2);\n        if (lpNewFileName < 1) break;\n        if (0x3ff < lpNewFileName) {\n            lpNewFileName = 0x3ff;\n        }\n        iVar13 = nNumberOfBytesToWrite;\n        if (*arg_8h != '\\0') {\n            lpExistingFileName = lpExistingFileName & 0xffffff;\n            lpExitCode = fcn.0040591b(arg_8h);\n            iVar13 = nNumberOfBytesToWrite;\n            if (0 < lpNewFileName) {\n                while( true ) {\n                    iVar9 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                      (lpExitCode, &stack0xfffffff3, 1, &fcn.00401439::lpNumberOfBytesRead, 0);\n                    if ((iVar9 == 0) || (lpNumberOfBytesRead != 0x1)) goto code_r0x0040263c;\n                    if (lpLastWriteTime != NULL) {\n                        fcn.00405902(arg_8h_00, lpBuffer);\n                        goto code_r0x0040293b;\n                    }\n                    if ((lpExistingFileName._3_1_ == 0xd) || (lpExistingFileName._3_1_ == 10)) break;\n                    *(iVar13 + arg_8h_00) = lpBuffer;\n                    iVar13 = iVar13 + 1;\n                    lpExistingFileName = lpExistingFileName & 0xffffff | lpBuffer << 0x18;\n                    if ((lpBuffer == 0) || (lpNewFileName <= iVar13)) goto code_r0x0040263c;\n                }\n                if ((lpExistingFileName._3_1_ == lpBuffer) || ((lpBuffer != 0xd && (lpBuffer != 10)))) {\n                    (*_sym.imp.KERNEL32.dll_SetFilePointer)(lpExitCode, 0xffffffff, 0, 1);\n                }\n                else {\n                    *(iVar13 + arg_8h_00) = lpBuffer;\n                    iVar13 = iVar13 + 1;\n                }\n            }\n        }\ncode_r0x0040263c:\n        *(iVar13 + arg_8h_00) = 0;\n        bVar18 = iVar13 == 0;\n        goto code_r0x004015ca;\n    case 0x402646:\n        if (*arg_8h != '\\0') {\n            uVar14 = fcn.00402a80(2, 0, lpLastWriteTime);\n            uVar10 = fcn.0040591b(arg_8h);\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar10, arg_8h, uVar14);\n            arg_8h = arg_8h_00;\n            goto joined_r0x0040266a;\n        }\n        break;\n    case 0x402675:\n        if (*arg_8h != '\\0') {\n            uVar14 = fcn.0040591b(arg_8h);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar14);\n        }\n        break;\n    case 0x40268f:\n        if (*arg_8h_00 != '\\0') {\n            puVar16 = &fcn.00401439::lpFindFileData;\n            uVar14 = fcn.0040591b(arg_8h_00);\n            iVar13 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(uVar14, arg_8h_00, puVar16);\n            if (iVar13 != 0) goto code_r0x004026ea;\n        }\n        goto code_r0x004026ab;\n    case 0x4026b9:\n        uVar14 = fcn.00402a9d(2);\n        iVar13 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar14, &fcn.00401439::lpFindFileData);\n        if (iVar13 == -1) {\n            *arg_8h_00 = 0;\n            goto code_r0x004026d5;\n        }\n        fcn.00405902(arg_8h_00, iVar13);\ncode_r0x004026ea:\n        puVar16 = &fcn.00401439::var_178h;\ncode_r0x00402858:\n        fcn.004059a4(arg_8h, puVar16);\n        break;\n    case 0x4026f7:\n        lpExitCode = 0xfffffd66;\n        uVar14 = fcn.00402a9d(0);\n        iVar13 = fcn.00405509(uVar14);\n        if (iVar13 == 0) {\n            uVar14 = fcn.004059a4(0x409fe8, 0x435400, uVar14);\n            uVar14 = fcn.0040549d(uVar14);\n            sub.KERNEL32.dll_lstrcatA(uVar14);\n        }\n        else {\n            fcn.004059a4(0x409fe8);\n        }\n        fcn.00405bd3(0x409fe8);\n        fcn.00405661(0x409fe8);\n        lpExistingFileName = fcn.00405680(0x409fe8, 0x40000000, 2);\n        pcVar8 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (lpExistingFileName != 0xffffffff) {\n            nNumberOfBytesToWrite = *0x42f02c;\n            iVar13 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42f02c);\n            if (iVar13 != 0) {\n                fcn.00403112(0);\n                fcn.004030e0(iVar13, nNumberOfBytesToWrite);\n                piVar11 = (*pcVar8)(0x40, var_1ch);\n                lpNumberOfBytesRead = piVar11;\n                if (piVar11 != NULL) {\n                    fcn.00402eb4(dwFileAttributes, 0, piVar11, var_1ch);\n                    for (; *piVar11 != '\\0'; piVar11 = piVar11 + var_38h + 8) {\n                        var_38h = *piVar11;\n                        dwFileAttributes = piVar11[1] + iVar13;\n                        fcn.00405641();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lpNumberOfBytesRead, dwFileAttributes);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (lpExistingFileName, iVar13, nNumberOfBytesToWrite, &fcn.00401439::lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar13);\n                lpExitCode = fcn.00402eb4(0xffffffff, lpExistingFileName, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(lpExistingFileName);\n        }\n        uVar14 = 0xfffffff3;\n        if (lpExitCode < 0) {\n            uVar14 = 0xffffffef;\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x409fe8);\n            var_4h = 1;\n        }\ncode_r0x004021e5:\n        fcn.00401428(uVar14);\n        break;\n    case 0x402824:\n        lpExistingFileName = fcn.00402a80(0);\n        if (*0x42f04c <= lpExistingFileName) goto code_r0x004026d7;\n        iVar13 = lpExistingFileName * 0x418 + *0x42f048;\n        if (-1 < var_1ch) {\n            arg_8h = arg_8h_00;\n            if (var_1ch == NULL) {\n                puVar16 = iVar13 + 0x18;\n                goto code_r0x00402858;\n            }\n            goto code_r0x004028da;\n        }\n        var_1ch = -1 - var_1ch;\n        if (var_1ch == NULL) {\n            fcn.004059c6(iVar13 + 0x18, var_14h);\n            *(iVar13 + 9) = *(iVar13 + 9) | 1;\n        }\n        else {\n            dwFileAttributes = fcn.00402a80(1);\n        }\n        *(iVar13 + var_1ch * 4) = dwFileAttributes;\n        if (lpLastWriteTime != NULL) {\n            fcn.0040117d(lpExistingFileName);\n        }\n        break;\n    case 0x4028aa:\n        uVar12 = fcn.00402a80(0);\n        if (0x1f < uVar12) goto code_r0x004026d7;\n        if (lpLastWriteTime == NULL) {\n            if (var_1ch == NULL) {\n                fcn.004059c6(arg_8h_00, *(*0x42f028 + 0x94 + uVar12 * 4));\n            }\n            else {\n                *(*0x42f028 + 0x94 + uVar12 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (var_1ch == NULL) {\n                fcn.004012e2(0);\n                arg_8h = arg_8h_00;\n                goto code_r0x004028da;\n            }\n            fcn.00401299(uVar12);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x40290d:\n        (*_sym.imp.USER32.dll_SendMessageA)(lpNewFileName, 0xb, *0x42b488 & var_24h, 0);\n        if (var_24h != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpNewFileName, 0, 0);\n        }\n        break;\n    case 0x40293d:\n        goto code_r0x0040293d;\n    }\ncode_r0x00402932:\n    *0x42f0a8 = *0x42f0a8 + var_4h;\ncode_r0x0040293b:\n    var_24h = NULL;\ncode_r0x0040293d:\n    return var_24h;\n}\n",
        "token_count": 13273
    },
    "00402c3a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402c3a(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    uint32_t arg_ch;\n    uint *puVar8;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t dwBytes;\n    int32_t var_14h;\n    int32_t hFile;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    hWnd = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    var_ch = NULL;\n    var_8h = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x435c00, 0x400);\n    iVar2 = fcn.00405680(0x435c00, 0x80000000, 3);\n    if (iVar2 == -1) {\n        *0x409020 = iVar2;\n        return \"Error launching installer\";\n    }\n    *0x409020 = iVar2;\n    hFile = iVar2;\n    fcn.004054e4(0x435c00);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar2, 0);\n    *0x428c38 = uVar3;\n    if (0 < uVar3) {\n        do {\n            uVar4 = (-(*0x42f02c != 0) & 0x7e00) + 0x200;\n            arg_ch = uVar3;\n            if (uVar4 <= uVar3) {\n                arg_ch = uVar4;\n            }\n            puVar8 = 0x420c38;\n            iVar2 = fcn.004030e0(0x420c38, arg_ch);\n            if (iVar2 == 0) {\n                if (hWnd != 0) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(hWnd);\n                }\n                goto code_r0x00402e4c;\n            }\n            if (*0x42f02c == 0) {\n                puVar8 = &var_2ch;\n                fcn.00405641();\n                if (((((var_2ch & 0xfffffff0) == 0) && (var_28h == -0x21524111)) && (var_1ch == 0x74736e49)) &&\n                   ((var_20h == 0x74666f73 && (var_24h == 0x6c6c754e)))) {\n                    arg_8h = arg_8h | var_2ch;\n                    *0x42f0c0 = *0x42f0c0 | arg_8h & 2;\n                    *0x42f02c = *0x414c30;\n                    if (uVar3 < var_14h) goto code_r0x00402e4c;\n                    if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                    var_8h = var_8h + 1;\n                    uVar3 = var_14h - 4;\n                    if (uVar3 < arg_ch) {\n                        arg_ch = uVar3;\n                    }\n                }\n            }\n            else if ((arg_8h & 2) == 0) {\n                if (hWnd == 0) {\n                    uVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                    if (iVar1 + 1000U < uVar4) {\n                        hWnd = (*_sym.imp.USER32.dll_CreateDialogParamA)\n                                         (*0x42f020, 0x6f, 0, fcn.00402bae, \"verifying installer: %d%%\");\n                    }\n                }\n                else {\n                    puVar8 = NULL;\n                    fcn.00405cd4(0);\n                }\n            }\n            if (uVar3 < *0x428c38) {\n                puVar5 = fcn.00405d07();\n                puVar8 = var_ch;\n                var_ch = puVar5;\n            }\n            *0x414c30 = *0x414c30 + arg_ch;\n            uVar3 = uVar3 - arg_ch;\n        } while (0 < uVar3);\n        if (hWnd != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(hWnd, puVar8);\n        }\n    }\n    if (*0x42f02c != 0) {\n        if (var_8h != 0) {\n            fcn.00403112(*0x414c30);\n            iVar1 = fcn.004030e0(&arg_8h, 4);\n            if ((iVar1 == 0) || (var_ch != arg_8h)) goto code_r0x00402e4c;\n        }\n        puVar8 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.00403112(*0x42f02c + 0x1c);\n        iVar1 = fcn.00402eb4(0xffffffff, 0, puVar8, dwBytes);\n        if (iVar1 == dwBytes) {\n            *0x42f030 = *puVar8;\n            if ((var_2ch & 1) != 0) {\n                *0x42f034 = *0x42f034 + 1;\n            }\n            piVar6 = puVar8 + 0x11;\n            iVar1 = 8;\n            *0x42f028 = puVar8;\n            do {\n                piVar6 = piVar6 + -2;\n                *piVar6 = *piVar6 + puVar8;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n            uVar7 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 1);\n            puVar8[0xf] = uVar7;\n            fcn.00405641(0x42f040, puVar8 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00402e4c:\n    return \n    \"The installer you are trying to use is corrupted or incomplete.\\nThis could be the result of a damaged disk, a failed download or a virus.\\n\\nYou may want to contact the author of this installer to obtain a new copy.\\n\\nIt may be possible to skip this check using the /NCRC command line switch\\n(NOT RECOMMENDED).\"\n    ;\n}\n",
        "token_count": 1525
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    code *pcVar9;\n    char *pcVar10;\n    uint psfi;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t *var_10h;\n    int32_t uExitCode;\n    char *var_8h;\n    int32_t *var_4h;\n    \n    uExitCode = 0;\n    var_8h = \"Error writing temporary file. Make sure your temp folder is valid.\";\n    var_4h = NULL;\n    var_14h = CONCAT31(var_14h._1_3_, 0x20);\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    *0x42f0d0 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoA)(0x429440, 0, &psfi, 0x160, 0);\n    fcn.004059a4(0x42e820, \"NSIS Error\");\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    fcn.004059a4(0x435000, uVar3);\n    *0x42f020 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    uVar3 = 0x435000;\n    if (*0x435000 == '\\\"') {\n        var_14h = CONCAT31(var_14h._1_3_, 0x22);\n        uVar3 = 0x435001;\n    }\n    piVar4 = fcn.004054c8(uVar3, var_14h);\n    piVar5 = (*_sym.imp.USER32.dll_CharNextA)(piVar4);\n    var_10h = piVar5;\n    while (uVar2 = var_14h,  cVar1 = *piVar5,  cVar1 != '\\0') {\n        while (cVar1 == ' ') {\n            piVar5 = piVar5 + 1;\n            cVar1 = *piVar5;\n        }\n        var_14h = CONCAT31(var_14h._1_3_, 0x20);\n        if (*piVar5 == '\\\"') {\n            piVar5 = piVar5 + 1;\n            var_14h = uVar2 & 0xffffff00 | 0x22;\n        }\n        piVar6 = piVar5;\n        if (*piVar5 == '/') {\n            piVar6 = piVar5 + 1;\n            if ((*piVar6 == 'S') && ((*(piVar5 + 2) | 0x20) == 0x20)) {\n                var_4h = var_4h | 2;\n            }\n            if ((*piVar6 == 0x4352434e) && ((*(piVar5 + 5) | 0x20) == 0x20)) {\n                var_4h = var_4h | 4;\n            }\n            if (*(piVar5 + -1) == 0x3d442f20) {\n                *(piVar5 + -1) = 0;\n                fcn.004059a4(0x435400, piVar5 + 3);\n                break;\n            }\n        }\n        piVar5 = fcn.004054c8();\n        piVar4 = piVar6;\n        if (*piVar5 == '\\\"') {\n            piVar5 = piVar5 + 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, 0x436400, piVar4);\n    iVar7 = fcn.00403129();\n    if (iVar7 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x436400, 0x3fb);\n        piVar5 = 0x436400;\n        sub.KERNEL32.dll_lstrcatA(0x436400, \"\\\\Temp\");\n        iVar7 = fcn.00403129();\n        if (iVar7 == 0) goto code_r0x0040332e;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x436000);\n    piVar5 = var_4h;\n    var_8h = fcn.00402c3a(var_4h);\n    if (var_8h == NULL) {\n        if (*0x42f034 != 0) {\n            for (piVar4 = fcn.004054c8(0x435000, 0); (0x434fff < piVar4 && (*piVar4 != 0x3d3f5f20));\n                piVar4 = piVar4 + -1) {\n            }\n            var_8h = \"Error launching installer\";\n            if (piVar4 < 0x435000) goto code_r0x00403357;\n            *piVar4 = 0;\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar4;\n            iVar7 = fcn.0040557d();\n            if (iVar7 == 0) goto code_r0x0040332e;\n            fcn.004059a4(0x435400, piVar4);\n            piVar5 = 0x435800;\n            fcn.004059a4(0x435800, piVar4);\n            var_8h = NULL;\n        }\n        *0x42f0cc = -1;\n        uExitCode = fcn.0040352e();\n    }\ncode_r0x0040332e:\n    do {\n        fcn.00403509(piVar5);\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (var_8h == NULL) {\n            if (*0x42f0b4 != 0) {\n                pcVar10 = \"OpenProcessToken\";\n                var_4h = fcn.00405caa(\"ADVAPI32.dll\", \"OpenProcessToken\");\n                pcVar8 = fcn.00405caa(\"ADVAPI32.dll\", \"LookupPrivilegeValueA\");\n                pcVar9 = fcn.00405caa(\"ADVAPI32.dll\", \"AdjustTokenPrivileges\");\n                if (((var_4h != NULL) && (pcVar8 != NULL)) && (pcVar9 != NULL)) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &var_10h);\n                    iVar7 = (*var_4h)(uVar3);\n                    if (iVar7 != 0) {\n                        (*pcVar8)(0, \"SeShutdownPrivilege\", &var_1ch);\n                        var_20h = 1;\n                        var_14h = 2;\n                        (*pcVar9)(var_10h, 0, &var_20h, 0, 0, 0);\n                    }\n                }\n                iVar7 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n                if (iVar7 == 0) {\n                    fcn.00401410(pcVar10, 9);\n                }\n            }\n            if (*0x42f0cc != -1) {\n                uExitCode = *0x42f0cc;\n            }\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(uExitCode);\n            if (*0x409020 != -1) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409020);\n                *0x409020 = -1;\n            }\n            fcn.004052dc(0x436800, 7);\n            return;\n        }\n        fcn.0040529a(var_8h, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x00403357:\n        var_18h = str.Au_.exe._0_4_;\n        pcVar10 = \"~nsu.tmp\";\n        var_14h = str.Au_.exe._4_4_;\n        sub.KERNEL32.dll_lstrcatA(0x436400, \"~nsu.tmp\");\n        uVar3 = 0;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x436400, 0);\n        if (*0x435400 == '\\0') {\n            pcVar10 = 0x435400;\n            fcn.004059a4(uVar3, 0x435c00, 0x435400);\n        }\n        fcn.004059a4(0x430000, var_10h, pcVar10);\n        piVar5 = 0x430400;\n        fcn.004059a4(0x430400, &var_18h);\n        var_4h = NULL;\n        do {\n            fcn.004059c6(0x428c40, *(*0x42f028 + 0x120));\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x428c40);\n            if (var_8h != NULL) {\n                iVar7 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x429040, 0x400);\n                iVar7 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(iVar7 + 0x42903a, &var_18h + 1);\n                if (iVar7 == 0) break;\n                iVar7 = (*_sym.imp.KERNEL32.dll_CopyFileA)(0x429040, 0x428c40, 1);\n                if (iVar7 != 0) {\n                    fcn.004056f7(0x428c40, 0);\n                    fcn.004056f7(0x436400, 0);\n                    fcn.004059c6(0x428c40, *(*0x42f028 + 0x124));\n                    piVar5 = 0x428c40;\n                    iVar7 = fcn.00405222(0x428c40, 0x436400);\n                    if (iVar7 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                        var_8h = NULL;\n                    }\n                }\n            }\n            *0x430400 = *0x430400 + '\\x01';\n            var_4h = var_4h + 1;\n        } while (var_4h < 0x1a);\n    } while( true );\n}\n",
        "token_count": 2364
    },
    "00403509": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403509(void)\n\n{\n    if (*0x409020 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409020);\n        *0x409020 = -1;\n    }\n    fcn.004052dc(0x436800, 7);\n    return;\n}\n",
        "token_count": 72
    },
    "0040352e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040352e(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint uStack168;\n    int32_t iStack164;\n    int32_t iStack160;\n    int32_t iStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uint uStack144;\n    \n    iVar5 = *0x42f028;\n    pcVar2 = fcn.00405caa();\n    if (pcVar2 == NULL) {\n        *0x436000 = 0x7830;\n        fcn.00405898(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x42a488);\n        if (*0x42a488 == '\\0') {\n            fcn.00405898(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x42a488);\n        }\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    else {\n        (*pcVar2)();\n        fcn.00405902();\n    }\n    fcn.004037fa();\n    *0x42f0a0 = *0x42f030 & 0x20;\n    iVar3 = fcn.0040557d();\n    if ((iVar3 == 0) && (*(iVar5 + 0x48) != 0)) {\n        uVar7 = 0x42dfc0;\n        fcn.00405898(*(iVar5 + 0x44), *(iVar5 + 0x48) + *0x42f058, *(iVar5 + 0x4c) + *0x42f058, 0x42dfc0);\n        if (*0x42dfc0 != '\\0') {\n            if (*0x42dfc0 == '\\\"') {\n                uVar7 = 0x42dfc1;\n                puVar4 = fcn.004054c8();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenA();\n            if (((uVar7 < iVar3 + -4 + uVar7) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(),  iVar3 == 0)) &&\n               ((uVar7 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(),  uVar7 == 0xffffffff || ((uVar7 & 0x10) == 0))))\n            {\n                fcn.004054e4();\n            }\n            fcn.0040549d();\n            fcn.004059a4();\n        }\n    }\n    iVar3 = fcn.0040557d();\n    if (iVar3 == 0) {\n        uStack144 = 0x403665;\n        fcn.004059c6(0x435400, *(iVar5 + 0x118));\n    }\n    uStack144 = 0x8040;\n    uStack148 = 0;\n    iStack152 = 0;\n    iStack156 = 1;\n    iStack160 = 0x67;\n    iStack164 = *0x42f020;\n    uStack168 = 0x40367c;\n    *0x42e808 = (*_sym.imp.USER32.dll_LoadImageA)();\n    if (*(iVar5 + 0x50) == -1) {\ncode_r0x00403719:\n        uStack168 = 0;\n        iVar5 = fcn.00401410();\n        if (iVar5 == 0) {\n            fcn.004037fa();\n            if (*0x42f0c0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x42a460, 5);\n                pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n                iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"RichEd20.dll\");\n                if (iVar5 == 0) {\n                    str.RichEd20.dll._6_2_ = 0x3233;\n                    (*pcVar2)(\"RichEd20.dll\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                iVar5 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x42e7c0);\n                if (iVar5 == 0) {\n                    str.RichEdit20A[8] = 0;\n                    (*pcVar2)(0, \"RichEdit20A\", 0x42e7c0);\n                    *0x42e7e4 = \"RichEdit20A\";\n                    str.RichEdit20A[8] = 0x32;\n                    (*_sym.imp.USER32.dll_RegisterClassA)(0x42e7c0);\n                }\n                uVar6 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x42f020, *0x42e800 + 0x69U & 0xffff, 0, 0x4038c7, 0);\n                fcn.00401410(5);\n                return uVar6;\n            }\n            iVar5 = fcn.00404e3b(0);\n            if (iVar5 == 0) {\n                fcn.00401410(1);\n                goto code_r0x004037f0;\n            }\n            if (*0x42e7ec == 0) {\n                fcn.00401410(2);\n            }\n        }\n        uVar6 = 2;\n    }\n    else {\n        *0x42e7e4 = &stack0xffffff6c;\n        uStack168 = 0x42e7c0;\n        uStack148 = 0x624e5f;\n        *0x42e7c4 = fcn.00401000;\n        *0x42e7d0 = *0x42f020;\n        *0x42e7d4 = *0x42e808;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &stack0xffffff6c, 0);\n            *0x42a460 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0x80, &stack0xffffff58, 0, 0x80000000, iStack164, iStack160, iStack156 - iStack164, \n                                   iStack152 - iStack160, 0, 0, *0x42f020, 0);\n            goto code_r0x00403719;\n        }\ncode_r0x004037f0:\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 1512
    },
    "004046b8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046b8(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    var_4h = (*pcVar2)(arg_8h, 0x408);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    var_10h = *0x42f028 + 0x94;\n    var_1ch = *0x42f048;\n    if (arg_ch == 0x110) {\n        *0x42f080 = arg_8h;\n        var_18h = 0;\n        var_ch = 2;\n        *0x42a47c = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42f04c << 2);\n        var_14h = (*_sym.imp.USER32.dll_LoadBitmapA)(*0x42f020, 0x6e);\n        *0x42a470 = 0xffffffff;\n        *0x42a478 = (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffffc, fcn.00404cb9);\n        *0x42a464 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x42a464, var_14h, 0xff00ff);\n        (*pcVar2)(var_4h, 0x1109, 2, *0x42a464);\n        iVar3 = (*pcVar2)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar2)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_14h);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_10h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar4 = fcn.004059c6(0, iVar7);\n                uVar4 = (*pcVar2)(var_8h, 0x143, 0, uVar4);\n                (*pcVar2)(var_8h, 0x151, uVar4, iVar3);\n            }\n            uVar6 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.00403daf(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.00403daf(arg_8h, 0x16, *(arg_14h + 0x34 + uVar6 * 4));\n        iVar3 = 0;\n        uVar4 = 0;\n        if (*0x42f04c < 1) {\ncode_r0x004048ea:\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffff0, uVar6 & 0xfffffffb);\n        }\n        else {\n            var_14h = var_1ch + 8;\n            do {\n                puVar8 = var_14h + 4;\n                if (*puVar8 != '\\0') {\n                    uVar6 = *var_14h;\n                    var_40h = uVar6 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar4;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar6 & 2) == 0) {\n                        if ((uVar6 & 4) == 0) {\n                            uVar5 = (*pcVar2)(var_4h, 0x1100, 0, &var_50h);\n                            *(*0x42a47c + iVar3 * 4) = uVar5;\n                        }\n                        else {\n                            uVar4 = (*pcVar2)(var_4h, 0x110a, 3, uVar4);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar4 = (*pcVar2)(var_4h, 0x1100, 0, &var_50h);\n                        var_18h = 1;\n                        *(*0x42a47c + iVar3 * 4) = uVar4;\n                        uVar4 = *(*0x42a47c + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_14h = var_14h + 0x106;\n            } while (iVar3 < *0x42f04c);\n            if (var_18h == 0) goto code_r0x004048ea;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.00403de4(var_8h);\n            goto code_r0x00404ca4;\n        }\n        fcn.00403de4(var_4h);\n    }\n    iVar3 = var_1ch;\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x42f030 & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar7 = fcn.00404638(var_4h, arg_ch != 0x413),  -1 < iVar7)\n            ))) {\n            puVar8 = iVar7 * 0x418 + 8 + iVar3;\n            uVar6 = *puVar8;\n            if ((uVar6 & 0x10) == 0) {\n                if ((uVar6 & 0x40) == 0) {\n                    uVar6 = uVar6 ^ 1;\n                }\n                else {\n                    uVar6 = uVar6 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar6 = uVar6 | 1;\n                    }\n                    else {\n                        uVar6 = uVar6 & 0xfffffffe;\n                    }\n                }\n                *puVar8 = uVar6;\n                fcn.0040117d(iVar7);\n                arg_ch = 0x40f;\n                arg_14h = ~*0x42f030 >> 8 & 1;\n                arg_10h = 1;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x192) {\n                (*pcVar2)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x196) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + iVar3;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + iVar3;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar2)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x00404ca4;\n        iVar3 = (*pcVar2)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_10h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar2)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = 1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar2)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x42a464 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x42a464);\n        }\n        if (*0x42a47c != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x42a47c);\n        }\n        *0x42a464 = 0;\n        *0x42a47c = 0;\n        *0x42f080 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            fcn.00401410(8);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x42a47c);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_10h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar2)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x42a47c;\n        var_38h = 0xf030;\n        var_ch = 0;\n        if (0 < *0x42f04c) {\n            puVar8 = *0x42f048 + 8;\n            do {\n                uVar6 = *(var_1ch + var_ch * 4);\n                if (uVar6 != 0) {\n                    uVar1 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar1 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar1 & 0x40) == 0) {\n                        iVar3 = (uVar1 & 1) + 1;\n                        if ((uVar1 & 0x10) != 0) {\n                            iVar3 = (uVar1 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar1 & 8) * 2 | uVar1 & 0x20;\n                    var_40h = uVar6;\n                    (*pcVar2)(var_4h, 0x1102, (uVar1 >> 5 & 1U) + 1, uVar6);\n                    (*pcVar2)(var_4h, 0x110d, 0, &var_44h);\n                }\n                var_ch = var_ch + 1;\n                puVar8 = puVar8 + 0x106;\n            } while (var_ch < *0x42f04c);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x42e7fc + 0x10) != 0) {\n            uVar4 = fcn.0040460b(5);\n            fcn.00404556(0x3ff, 0xfffffffb, uVar4);\n        }\n    }\n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x42f030 & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3);\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar2)(uVar4);\n    }\ncode_r0x00404ca4:\n    fcn.00403e16(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3315
    },
    "00404ea7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404ea7(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t iVar8;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    ushort *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar5 = arg_ch;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar8 = 0;\n    var_4h = *0x42e804;\n    if (arg_ch == 0x110) {\n        var_2ch = 0xffffffff;\n        var_20h = 0xffffffff;\n        var_34h = 2;\n        var_30h = 0;\n        var_28h = NULL;\n        var_24h = 0;\n        var_1ch = 0;\n        uStack28 = 0;\n        arg_10h = *(*0x42f028 + 0x5c);\n        arg_ch = *(*0x42f028 + 0x60);\n        *0x42e7f0 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x42e7e8 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x42e804 = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x42e804;\n        fcn.00403de4(*0x42e7f0);\n        *0x42e7f4 = fcn.0040460b(4);\n        *0x42e80c = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_14h);\n        var_2ch = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n        var_2ch = var_ch - var_2ch;\n        (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x101b, 0, &var_34h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < arg_10h) {\n            (*pcVar2)(var_4h, 0x1001, 0, arg_10h);\n            (*pcVar2)(var_4h, 0x1026, 0, arg_10h);\n        }\n        if (-1 < arg_ch) {\n            (*pcVar2)(var_4h, 0x1024, 0, arg_ch);\n        }\n        fcn.00403daf(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x42f030 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x42e7f0, 0);\n            if ((*0x42f030 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x42e7f0 = 0;\n            }\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x42f030 & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, arg_ch);\n            (*pcVar2)(uVar3, 0x2001, 0, arg_10h);\n        }\ncode_r0x0040521b:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &arg_ch);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00404e3b, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (iVar5 == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x42e7f0, 0);\n                (*pcVar1)(var_4h, 8);\n                fcn.00404182();\n                goto code_r0x004050a4;\n            }\n        }\n        else {\ncode_r0x004050a4:\n            if (iVar5 == 0x404) {\n                if (*0x42e7ec != 0) {\n                    *0x429850 = 2;\n                    fcn.00403d88();\n                    goto code_r0x004050c5;\n                }\n                (*pcVar1)(*0x42f024, 8);\n                if (*0x42f0ac == 0) {\n                    fcn.00404d69(*(*0x429c58 + 0x34), 0);\n                }\n                fcn.00403d88(1);\n            }\n            if ((iVar5 == 0x7b) && (arg_10h == var_4h)) {\n                arg_10h = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n                if (0 < arg_10h) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar4 = fcn.004059c6(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuA)(uVar3, 0, 1, uVar4);\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_14h);\n                    }\n                    else {\n                        var_14h = arg_14h;\n                        var_10h = arg_14h >> 0x10;\n                    }\n                    iVar5 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, var_14h, var_10h, 0, arg_8h, 0);\n                    if (iVar5 == 1) {\n                        iVar5 = 1;\n                        var_34h = 0;\n                        var_28h = 0x42a488;\n                        var_24h = 0xfff;\n                        arg_8h = arg_10h;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, arg_8h, &var_3ch);\n                            iVar5 = iVar5 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar5);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_28h = puVar7;\n                            iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, iVar8, &var_3ch);\n                            *(puVar7 + iVar5) = 0xa0d;\n                            puVar7 = puVar7 + iVar5 + 1;\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 < arg_10h);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x0040521b;\n            }\n        }\ncode_r0x004050c5:\n        uVar3 = fcn.00403e16(iVar5, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 1984
    },
    "00405222": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405222(uint lpCommandLine, uint lpFileName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t var_10h;\n    uint hObject;\n    \n    *0x42c490 = 0x44;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpFileName);\n    if ((uVar1 == 0xffffffff) || ((uVar1 & 0x10) == 0)) {\n        lpFileName = 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, lpCommandLine, 0, 0, 0, 0, 0, lpFileName, 0x42c490, &var_10h);\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar2 = var_10h;\n    }\n    return iVar2;\n}\n",
        "token_count": 214
    },
    "004052dc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004052dc(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint lpFindFileData;\n    uint var_11ch;\n    uint var_18h;\n    int32_t var_8h;\n    int32_t hFindFile;\n    \n    var_8h = fcn.0040557d(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_8h != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.004059a4(0x42b490, arg_8h);\n            if (uVar1 == 0) {\n                fcn.004054e4(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatA(0x42b490, \"\\\\*.*\");\n            }\n            sub.KERNEL32.dll_lstrcatA(arg_8h, 0x409010);\n            iVar2 = arg_8h;\n            iVar3 = sub.KERNEL32.dll_lstrlenA(arg_8h);\n            hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x42b490, &lpFindFileData);\n            if (hFindFile != -1) {\n                do {\n                    puVar6 = &var_11ch;\n                    pcVar4 = fcn.004054c8(&var_11ch, 0x3f);\n                    if ((*pcVar4 != '\\0') && (var_18h != '\\0')) {\n                        puVar6 = &var_18h;\n                    }\n                    if ((*puVar6 != '.') ||\n                       ((*(puVar6 + 1) != '\\0' && ((*(puVar6 + 1) != '.' || (*(puVar6 + 2) != '\\0')))))) {\n                        fcn.004059a4(iVar3 + arg_8h, puVar6);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            fcn.00405661(arg_8h);\n                            iVar2 = arg_8h;\n                            iVar5 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n                            if (iVar5 == 0) {\n                                if ((arg_ch & 4) == 0) {\n                                    *0x42f0a8 = *0x42f0a8 + 1;\n                                }\n                                else {\n                                    fcn.00404d69(0xfffffff1, arg_8h);\n                                    iVar2 = arg_8h;\n                                    fcn.004056f7();\n                                }\n                            }\n                            else {\n                                iVar2 = -0xe;\n                                fcn.00404d69(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            iVar2 = arg_8h;\n                            fcn.004052dc(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(hFindFile, &lpFindFileData, iVar2);\n                } while (iVar5 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            }\n            if (uVar1 != 0) {\n                *(iVar3 + arg_8h + -1) = 0;\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_8h != 0) {\n                iVar2 = fcn.00405c6c(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.0040549d(arg_8h);\n                fcn.00405661(arg_8h);\n                iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(arg_8h);\n                if (iVar2 != 0) {\n                    fcn.00404d69(0xffffffe5, arg_8h);\n                    return;\n                }\n                if ((arg_ch & 4) != 0) {\n                    fcn.00404d69(0xfffffff1, arg_8h);\n                    fcn.004056f7(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x42f0a8 = *0x42f0a8 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n        *0x42f0a8 = *0x42f0a8 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 1087
    },
    "0040557d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.0040557d(uint param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    \n    fcn.004059a4(0x42b890, param_1);\n    pcVar1 = fcn.00405530(0x42b890);\n    if ((pcVar1 != NULL) &&\n       ((pcVar5 = pcVar1,  fcn.00405bd3(pcVar1),  (*0x42f030 & 0x80) == 0 || ((*pcVar1 != '\\0' && (*pcVar1 != '\\\\'))))))\n    {\n        while( true ) {\n            uVar4 = 0x42b890;\n            iVar3 = sub.KERNEL32.dll_lstrlenA(0x42b890);\n            if (iVar3 <= pcVar1 + -0x42b890) {\n                fcn.0040549d(0x42b890, uVar4, pcVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x42b890);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.00405c6c(0x42b890);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            pcVar5 = 0x42b890;\n            fcn.004054e4();\n        }\n    }\n    return false;\n}\n",
        "token_count": 344
    },
    "00405661": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405661(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004056f7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.004056f7(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t unaff_retaddr;\n    char *pcStack92;\n    int32_t iStack88;\n    char *pcStack84;\n    uchar *puStack80;\n    char *pcStack76;\n    uint uStack72;\n    char *pcStack68;\n    char *pcStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    char *pcStack48;\n    \n    pcVar1 = fcn.00405caa();\n    if ((pcVar1 == NULL) || (iVar2 = (*pcVar1)(),  iVar2 == 0)) {\n        pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n        *0x42c618 = 0x4c554e;\n        if (unaff_retaddr != 0) {\n            fcn.00405680();\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            pcStack48 = 0x42c618;\n            uStack56 = 0x405757;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                return;\n            }\n            if (0x400 < iVar2) {\n                return;\n            }\n        }\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            return;\n        }\n        if (0x400 < iVar2) {\n            return;\n        }\n        pcStack48 = \"%s=%s\\r\\n\";\n        uStack52 = 0x42bc90;\n        uStack56 = 0x405796;\n        pcVar3 = (*_sym.imp.USER32.dll_wsprintfA)();\n        pcStack48 = 0x4057ac;\n        fcn.004059c6(0x42c090, *(*0x42f028 + 0x128));\n        pcStack48 = 0x4;\n        uStack52 = 0xc0000000;\n        uStack56 = 0x42c090;\n        uStack60 = 0x4057b9;\n        pcVar4 = fcn.00405680();\n        if (pcVar4 != 0xffffffff) {\n            uStack60 = 0;\n            pcStack68 = 0x4057d1;\n            pcStack64 = pcVar4;\n            pcVar5 = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n            pcStack68 = pcVar5 + 10 + pcVar3;\n            uStack72 = 0x40;\n            pcStack76 = 0x4057e0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if (iVar2 != 0) {\n                puStack80 = &stack0xffffffd0;\n                pcStack76 = NULL;\n                pcStack92 = pcVar4;\n                iStack88 = iVar2;\n                pcStack84 = pcVar5;\n                iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n                if ((iVar6 != 0) && (pcVar5 == pcStack48)) {\n                    pcStack76 = \"[Rename]\\r\\n\";\n                    pcStack84 = 0x40580b;\n                    puStack80 = iVar2;\n                    iStack88 = fcn.004055f5();\n                    if (iStack88 == 0) {\n                        iStack88 = iVar2 + pcVar5;\n                        pcStack84 = \"[Rename]\\r\\n\";\n                        pcStack92 = 0x40581d;\n                        fcn.004059a4();\n                        pcVar5 = pcVar5 + 10;\n                        pcVar7 = pcVar5;\n                    }\n                    else {\n                        iStack88 = iStack88 + 10;\n                        pcStack84 = 0x4092f4;\n                        pcStack92 = 0x405877;\n                        iVar6 = fcn.004055f5();\n                        pcVar7 = pcVar5;\n                        if (iVar6 != 0) {\n                            for (pcVar4 = iVar6 + 1; pcVar4 < pcVar5 + iVar2; pcVar4 = pcVar4 + 1) {\n                                pcVar4[pcVar3] = *pcVar4;\n                            }\n                            pcVar7 = iVar6 + 1 + -iVar2;\n                            pcVar4 = pcStack68;\n                        }\n                    }\n                    pcStack92 = pcVar3;\n                    fcn.00405641(pcVar7 + iVar2, 0x42bc90);\n                    (*_sym.imp.KERNEL32.dll_SetFilePointer)(pcVar4, 0, 0, 0);\n                    (*_sym.imp.KERNEL32.dll_WriteFile)(pcVar4, iVar2, pcVar5 + pcVar3, &stack0xffffffa4, 0);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar2);\n                }\n            }\n            puStack80 = 0x40585c;\n            pcStack76 = pcVar4;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    *0x42f0b0 = *0x42f0b0 + 1;\n    return;\n}\n",
        "token_count": 1171
    },
    "00405c6c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405c6c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(0x8001);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(unaff_retaddr, 0x42c4d8);\n    (*pcVar1)(0);\n    if (iVar2 == -1) {\n        uVar3 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n        uVar3 = 0x42c4d8;\n    }\n    return uVar3;\n}\n",
        "token_count": 175
    },
    "0040117d": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x418 + 8 + *0x42f048);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x42f04c) {\n            puVar3 = uVar4 * 0x418 + 8 + *0x42f048;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x106;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x42f04c);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "004012e2": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x42f028 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x42f04c == 0;\n            if (*0x42f04c != 0) {\n                puVar2 = *0x42f048 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x106;\n                } while (uVar1 < *0x42f04c);\n                bVar3 = uVar1 == *0x42f04c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 394
    },
    "00403ef7": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ef7(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n    pcVar3 = _sym.imp.USER32.dll_GetDlgItem;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x42e7fc - (iVar7 * 4 + 4));\n        }\n        cVar2 = *(iVar7 + *0x42f058);\n        var_8h = 0;\n        pcVar10 = iVar7 + *0x42f058 + 1;\n        var_4h = fcn.00403ec3;\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = pcVar10;\n        fcn.00403daf(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.00403daf(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.00403dd1(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00403de4(uVar6);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x42f028 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar3)(uVar6, 0x443, 0, iVar7);\n        (*pcVar3)(uVar6, 0x445, 0, 0x4010000);\n        *0x42944c = 0;\n        uVar8 = sub.KERNEL32.dll_lstrlenA(pcVar10);\n        (*pcVar3)(uVar6, 0x435, 0, uVar8);\n        (*pcVar3)(uVar6, 0x449, cVar2, &var_ch);\n        *0x42a468 = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x42a468 != 0)) || (puVar1 = *0x429c58 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x0040416f;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar5)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.00403dd1(uVar9 & 1);\n        fcn.00404182();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*pcVar3)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x42dfc0;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar5)(uVar6, 1099, 0, &var_ch);\n                pcVar4 = _sym.imp.USER32.dll_LoadCursorA;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n                pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(arg_8h, \"open\", var_4h, 0, 0, 1);\n                uVar6 = (*pcVar4)(0, 0x7f00);\n                (*pcVar3)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar5)(*0x42f024, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar5)(*0x42f024, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x42a468 = *0x42a468 + 1;\n    }\ncode_r0x0040416f:\n    uVar6 = fcn.00403e16(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1376
    },
    "00404d69": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d69(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x42e804;\n    if (*0x42e804 != 0) {\n        var_8h = *0x40928c;\n        uVar4 = *0x40928c & 1;\n        if (uVar4 == 0) {\n            fcn.004059c6(0x429c60, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenA(0x429c60);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenA(lpString2);\n            if (0x7ff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatA(0x429c60, lpString2);\n        }\n        if ((var_8h & 4) != 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x42e7e8, 0x429c60);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if ((var_8h & 2) != 0) {\n            var_1ch = 0x429c60;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x1007 - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 + 0x429c60) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "00405d07": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00405d07(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x42ca1c == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x42ca18) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x42ca18);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 309
    },
    "00405d75": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00405d75(uint8_t **arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t **ppuVar7;\n    char cVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint8_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *var_40h;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t **var_30h;\n    uint8_t *var_2ch;\n    uint8_t **var_20h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    uint8_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    var_38h = *arg_8h;\n    ppuVar1 = arg_8h + 4;\n    var_34h = arg_8h[1];\n    var_30h = arg_8h[0x26ee];\n    puVar10 = arg_8h[0x14a];\n    var_40h = arg_8h[0x14b];\n    if (var_30h < arg_8h[0x26ed]) {\n        var_2ch = arg_8h[0x26ed] + (-1 - var_30h);\n    }\n    else {\n        var_2ch = arg_8h[0x26ec] + -var_30h;\n    }\ncode_r0x00406789:\n    while (*ppuVar1 < 0x10) {\n    // switch table (16 cases) at 0x4067c4\n        switch(*(*ppuVar1 * 4 + 0x4067c4)) {\n        case 0x405ded:\n            for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406799;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = puVar10 + -3;\n            puVar5 = var_40h >> 3;\n            uVar14 = (var_40h & 7) >> 1;\n            arg_8h[0x149] = (-((var_40h & 1) != 0) & 7) + 8;\n            if (uVar14 == 0) {\n                *ppuVar1 = 0x9;\n                var_40h = puVar5 >> (puVar10 & 7);\n                puVar10 = puVar10 + -(puVar10 & 7);\n            }\n            else {\n                var_40h = puVar5;\n                if (uVar14 == 1) {\n                    if (*0x42dfa0 == '\\0') {\n                        var_8h = NULL;\n                        piVar4 = 0x42ce20;\n                        do {\n                            cVar8 = '\\b';\n                            if (0x42d05c < piVar4) {\n                                if (piVar4 < 0x42d220) {\n                                    cVar8 = '\\t';\n                                }\n                                else if (piVar4 < 0x42d280) {\n                                    cVar8 = '\\a';\n                                }\n                            }\n                            *piVar4 = cVar8;\n                            piVar4 = piVar4 + 1;\n                        } while (piVar4 < 0x42d2a0);\n                        fcn.0040686c(0x42ce20, 0x120, 0x101, 0x407320, 0x407360, 0x42ce1c, 0x4093d4, 0x42d720, &var_8h);\n                        puVar12 = 0x42ce20;\n                        for (iVar6 = 0x1e; iVar6 != 0; iVar6 = iVar6 + -1) {\n                            *puVar12 = 5;\n                            puVar12 = puVar12 + 1;\n                        }\n                        fcn.0040686c(0x42ce20, 0x1e, 0, 0x4073a0, 0x4073dc, 0x42ce18, 0x4093d8, 0x42d720, &var_8h);\n                        *0x42dfa0 = *0x42dfa0 + '\\x01';\n                    }\n                    *(arg_8h + 8) = *0x4093d4;\n                    *(arg_8h + 0x21) = *0x4093d8;\n                    arg_8h[9] = *0x42ce1c;\n                    arg_8h[10] = *0x42ce18;\n                    goto code_r0x00405f45;\n                }\n                if (uVar14 != 2) goto code_r0x00405e25;\n                *ppuVar1 = 0xb;\n            }\n            break;\n        case 0x405e2c:\n            goto code_r0x00405e2c;\n        case 0x405f82:\n            for (; puVar10 < 0x10; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406799;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = NULL;\n            puVar5 = var_40h & 0xffff;\n            var_40h = NULL;\n            arg_8h[5] = puVar5;\n            if (puVar5 == NULL) goto code_r0x00406088;\n            puVar5 = 0xa;\n            goto code_r0x0040608e;\n        case 0x405fa7:\n            if (var_34h == NULL) {\ncode_r0x00406799:\n                uVar11 = 0;\n                arg_8h[0x14b] = var_40h;\n                arg_8h[0x14a] = puVar10;\n                arg_8h[1] = NULL;\n                goto code_r0x00405e4d;\n            }\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x00406054;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406804(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar3;\n                        }\n                    }\n                }\n                if (var_2ch == NULL) goto code_r0x004067b5;\n            }\ncode_r0x00406054:\n            puVar5 = var_2ch;\n            if (var_34h <= var_2ch) {\n                puVar5 = var_34h;\n            }\n            puVar9 = arg_8h[5];\n            if (puVar5 <= arg_8h[5]) {\n                puVar9 = puVar5;\n            }\n            fcn.00405641();\n            var_38h = var_38h + puVar9;\n            var_34h = var_34h + -puVar9;\n            var_30h = var_30h + puVar9;\n            var_2ch = var_2ch + -puVar9;\n            ppuVar7 = arg_8h + 5;\n            *ppuVar7 = *ppuVar7 + -puVar9;\n            if (*ppuVar7 == NULL) {\ncode_r0x00406088:\n                puVar5 = arg_8h[0x149];\ncode_r0x0040608e:\n                *ppuVar1 = puVar5;\n            }\n            break;\n        case 0x4060b5:\n            for (; puVar10 < 0xe; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406799;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = var_40h & 0x3fff;\n            if (((var_40h & 0x3fff & 0x1f) < 0x1e) && ((var_40h & 0x3e0) < 0x3a1)) {\n                var_40h = var_40h >> 0xe;\n                puVar10 = puVar10 + -0xe;\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xc;\n                goto code_r0x004060f4;\n            }\n            goto code_r0x00405e2c;\n        case 0x4060f4:\ncode_r0x004060f4:\n            if (arg_8h[6] < (arg_8h[5] >> 10) + 4) {\n                do {\n                    for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x00406799;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    puVar5 = var_40h & 7;\n                    puVar10 = puVar10 + -3;\n                    var_40h = var_40h >> 3;\n                    arg_8h[arg_8h[6][0x40730c] + 7] = puVar5;\n                    arg_8h[6] = arg_8h[6] + 1;\n                } while (arg_8h[6] < (arg_8h[5] >> 10) + 4);\n            }\n            while (arg_8h[6] < 0x13) {\n                arg_8h[arg_8h[6][0x40730c] + 7] = NULL;\n                arg_8h[6] = arg_8h[6] + 1;\n            }\n            ppuVar7 = arg_8h + 0x147;\n            var_8h = NULL;\n            *ppuVar7 = 0x7;\n            iVar6 = fcn.0040686c(arg_8h + 7, 0x13, 0x13, 0, 0, arg_8h + 0x148, ppuVar7, arg_8h + 0x14c, &var_8h);\n            if ((iVar6 == 0) && (*ppuVar7 != NULL)) {\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xd;\ncode_r0x004062d7:\n                while (arg_8h[6] < (arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f)) {\n                    for (; puVar10 < arg_8h[0x147]; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x00406799;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    uVar14 = *(arg_8h[0x147] * 2 + 0x4093b0) & var_40h;\n                    uVar2 = arg_8h[0x148][uVar14 * 4 + 1];\n                    uVar15 = uVar2;\n                    var_14h = *(arg_8h[0x148] + uVar14 * 4 + 2);\n                    if (var_14h < 0x10) {\n                        puVar10 = puVar10 + -uVar15;\n                        var_40h = var_40h >> (uVar2 & 0x1f);\n                        arg_8h[arg_8h[6] + 7] = var_14h;\n                        arg_8h[6] = arg_8h[6] + 1;\n                    }\n                    else {\n                        if (var_14h == 0x12) {\n                            var_8h = 0xb;\n                            puVar5 = 0x7;\n                        }\n                        else {\n                            puVar5 = var_14h + -0xe;\n                            var_8h = 0x3;\n                        }\n                        for (; puVar10 < puVar5 + uVar15; puVar10 = puVar10 + 8) {\n                            if (var_34h == NULL) goto code_r0x00406799;\n                            var_34h = var_34h + -1;\n                            var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                            var_38h = var_38h + 1;\n                        }\n                        uVar14 = var_40h >> (uVar2 & 0x1f);\n                        puVar10 = puVar10 + (-puVar5 - uVar15);\n                        puVar9 = var_8h + (*(puVar5 * 2 + 0x4093b0) & uVar14);\n                        var_40h = uVar14 >> (puVar5 & 0x1f);\n                        puVar5 = arg_8h[6];\n                        if ((arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f) < puVar9 + puVar5)\n                        goto code_r0x00405e2c;\n                        if (var_14h == 0x10) {\n                            if (puVar5 == NULL) goto code_r0x00405e2c;\n                            puVar13 = arg_8h[puVar5 + 6];\n                        }\n                        else {\n                            puVar13 = NULL;\n                        }\n                        ppuVar7 = arg_8h + puVar5 + 7;\n                        do {\n                            *ppuVar7 = puVar13;\n                            puVar5 = puVar5 + 1;\n                            ppuVar7 = ppuVar7 + 1;\n                            puVar9 = puVar9 + -1;\n                        } while (puVar9 != NULL);\n                        arg_8h[6] = puVar5;\n                    }\n                }\n                arg_8h[0x148] = NULL;\n                var_ch = 0;\n                uVar14 = arg_8h[5] & 0x1f;\n                uVar15 = uVar14 + 0x101;\n                var_14h = (arg_8h[5] >> 5 & 0x1f) + 1;\n                var_4h = 9;\n                var_10h = 6;\n                iVar6 = fcn.0040686c(arg_8h + 7, uVar15, 0x101, 0x407320, 0x407360, &var_18h, &var_4h, arg_8h + 0x14c, \n                                     &var_ch);\n                if (var_4h == 0) {\n                    iVar6 = -1;\n                }\n                if (((iVar6 != 0) ||\n                    (iVar6 = fcn.0040686c(arg_8h + uVar14 + 0x108, var_14h, 0, 0x4073a0, 0x4073dc, &var_1ch, &var_10h, \n                                          arg_8h + 0x14c, &var_ch),  iVar6 != 0)) ||\n                   ((var_10h == 0 && (0x101 < uVar15)))) goto code_r0x00405e2c;\n                *ppuVar1 = NULL;\n                *(arg_8h + 0x21) = var_10h;\n                arg_8h[9] = var_18h;\n                *(arg_8h + 8) = var_4h;\n                arg_8h[10] = var_1ch;\ncode_r0x004063c1:\n                arg_8h[7] = *(arg_8h + 8);\n                arg_8h[6] = arg_8h[9];\n                *ppuVar1 = 0x1;\ncode_r0x004063d4:\n                for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                    if (var_34h == NULL) goto code_r0x00406799;\n                    var_34h = var_34h + -1;\n                    var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                    var_38h = var_38h + 1;\n                }\n                puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x4093b0) & var_40h) * 4;\n                var_40h = var_40h >> (puVar5[1] & 0x1f);\n                puVar10 = puVar10 + -puVar5[1];\n                uVar2 = *puVar5;\n                puVar9 = uVar2;\n                if (puVar9 == NULL) {\n                    arg_8h[6] = *(puVar5 + 2);\n                    *ppuVar1 = 0x6;\n                }\n                else if ((uVar2 & 0x10) == 0) {\n                    if ((uVar2 & 0x40) == 0) goto code_r0x00406527;\n                    if ((uVar2 & 0x20) == 0) goto code_r0x00405e2c;\n                    *ppuVar1 = 0x7;\n                }\n                else {\n                    arg_8h[6] = puVar9 & 0xf;\n                    arg_8h[5] = *(puVar5 + 2);\n                    *ppuVar1 = 0x2;\n                }\n            }\n            else {\n                *ppuVar1 = 0x11;\n            }\n            break;\n        case 0x4062d7:\n            goto code_r0x004062d7;\n        case 0x4063c1:\n            goto code_r0x004063c1;\n        case 0x4063d4:\n            goto code_r0x004063d4;\n        case 0x40646a:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406799;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = arg_8h[5] + (*(puVar5 * 2 + 0x4093b0) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            arg_8h[7] = *(arg_8h + 0x21);\n            arg_8h[6] = arg_8h[10];\n            *ppuVar1 = 0x3;\n        case 0x4064bb:\n            for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406799;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x4093b0) & var_40h) * 4;\n            var_40h = var_40h >> (puVar5[1] & 0x1f);\n            puVar10 = puVar10 + -puVar5[1];\n            uVar2 = *puVar5;\n            puVar9 = uVar2;\n            if ((uVar2 & 0x10) == 0) {\n                if ((uVar2 & 0x40) != 0) goto code_r0x00405e2c;\ncode_r0x00406527:\n                arg_8h[7] = puVar9;\n                arg_8h[6] = puVar5 + *(puVar5 + 2) * 4;\n            }\n            else {\n                arg_8h[6] = puVar9 & 0xf;\n                arg_8h[7] = *(puVar5 + 2);\n                *ppuVar1 = 0x4;\n            }\n            break;\n        case 0x406539:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406799;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[7] = arg_8h[7] + (*(puVar5 * 2 + 0x4093b0) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            *ppuVar1 = 0x5;\n        case 0x40657d:\n            puVar5 = arg_8h[7];\n            if (var_30h + (-0x1ba0 - ppuVar1) < puVar5) {\n                puVar5 = arg_8h[0x26ec] + (-ppuVar1 - puVar5) + -0x1ba0;\n            }\n            else {\n                puVar5 = -puVar5;\n            }\n            var_20h = puVar5 + var_30h;\n            puVar5 = arg_8h[5];\n            ppuVar7 = var_30h;\n            while (var_30h = ppuVar7,  puVar5 != NULL) {\n                if (var_2ch == NULL) {\n                    if (ppuVar7 == arg_8h[0x26ec]) {\n                        ppuVar3 = arg_8h[0x26ed];\n                        var_30h = arg_8h + 0x6ec;\n                        if (ppuVar3 != var_30h) {\n                            if (var_30h < ppuVar3) {\n                                var_2ch = ppuVar3 + (-1 - var_30h);\n                            }\n                            else {\n                                var_2ch = arg_8h[0x26ec] - var_30h;\n                            }\n                            ppuVar7 = var_30h;\n                            if (var_2ch != NULL) goto code_r0x00406651;\n                        }\n                    }\n                    arg_8h[0x26ee] = ppuVar7;\n                    fcn.00406804();\n                    var_30h = arg_8h[0x26ee];\n                    ppuVar7 = arg_8h[0x26ed];\n                    if (var_30h < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - var_30h);\n                    }\n                    else {\n                        var_2ch = arg_8h[0x26ec] + -var_30h;\n                    }\n                    var_8h = arg_8h[0x26ec];\n                    if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = var_8h - ppuVar3;\n                        }\n                    }\n                    if (var_2ch == NULL) goto code_r0x004067b5;\n                }\ncode_r0x00406651:\n                *var_30h = *var_20h;\n                ppuVar7 = var_30h + 1;\n                var_20h = var_20h + 1;\n                var_2ch = var_2ch + -1;\n                if (var_20h == arg_8h[0x26ec]) {\n                    var_20h = arg_8h + 0x6ec;\n                }\n                ppuVar3 = arg_8h + 5;\n                *ppuVar3 = *ppuVar3 + -1;\n                puVar5 = *ppuVar3;\n            }\ncode_r0x00405f45:\n            *ppuVar1 = NULL;\n            break;\n        case 0x406683:\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x00406722;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406804(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                var_8h = arg_8h[0x26ec];\n                if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                    var_30h = ppuVar3;\n                    if (ppuVar3 < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - ppuVar3);\n                    }\n                    else {\n                        var_2ch = var_8h - ppuVar3;\n                    }\n                }\n                if (var_2ch != NULL) goto code_r0x00406722;\n                goto code_r0x004067b5;\n            }\ncode_r0x00406722:\n            *var_30h = *(arg_8h + 6);\n            var_2ch = var_2ch + -1;\n            var_30h = var_30h + 1;\n            goto code_r0x00405f45;\n        case 0x406734:\n            if (0x7 < puVar10) {\n                puVar10 = puVar10 + -8;\n                var_34h = var_34h + 1;\n                var_38h = var_38h + -1;\n            }\n        case 0x406742:\n            arg_8h[0x26ee] = var_30h;\n            fcn.00406804();\n            var_30h = arg_8h[0x26ee];\n            ppuVar7 = arg_8h[0x26ed];\n            if (var_30h < ppuVar7) {\n                var_2ch = ppuVar7 + (-1 - var_30h);\n            }\n            else {\n                var_2ch = arg_8h[0x26ec] + -var_30h;\n            }\n            if (var_30h != ppuVar7) {\ncode_r0x004067b5:\n                uVar11 = 0;\n                goto code_r0x00405e35;\n            }\n            *ppuVar1 = arg_8h[0x149];\n            if (arg_8h[0x149] != 0x8) {\n                uVar11 = 1;\n                goto code_r0x00405e35;\n            }\n        }\n    }\n    goto code_r0x00405e2c;\ncode_r0x00405e25:\n    if (uVar14 == 3) {\ncode_r0x00405e2c:\n        uVar11 = 0xffffffff;\n        *ppuVar1 = 0x11;\ncode_r0x00405e35:\n        arg_8h[0x14b] = var_40h;\n        arg_8h[0x14a] = puVar10;\n        arg_8h[1] = var_34h;\ncode_r0x00405e4d:\n        *arg_8h = var_38h;\n        arg_8h[0x26ee] = var_30h;\n        fcn.00406804(arg_8h);\n        return uVar11;\n    }\n    goto code_r0x00406789;\n}\n",
        "token_count": 7404
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x42f048;\n    iVar5 = arg_8h * 0x418 + *0x42f048;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x42f04c) {\n        do {\n            puVar1 = arg_8h * 0x418 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x42f04c);\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "00402eb4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402eb4(int32_t nDenominator, uint hFile, uint32_t arg_10h, uint32_t nNumber)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_58h;\n    int32_t var_18h;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_10h;\n    uint32_t lpBuffer;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = nNumber;\n    uVar6 = arg_10h;\n    var_8h = nNumber;\n    if (arg_10h == 0) {\n        var_8h = 0x8000;\n    }\n    var_4h = 0;\n    lpBuffer = arg_10h;\n    if (arg_10h == 0) {\n        lpBuffer = 0x418c38;\n    }\n    if (-1 < nDenominator) {\n        fcn.00403112(*0x42f078 + nDenominator);\n    }\n    iVar2 = fcn.004030e0(&nNumber, 4);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    if (iVar2 != 0) {\n        if ((nNumber & 0x80000000) == 0) {\n            if (uVar6 == 0) {\n                while( true ) {\n                    if (nNumber < 1) {\n                        return var_4h;\n                    }\n                    uVar6 = var_8h;\n                    if (nNumber < var_8h) {\n                        uVar6 = nNumber;\n                    }\n                    iVar2 = fcn.004030e0(0x414c38, 0x414c38);\n                    if (iVar2 == 0) break;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, 0x414c38, uVar6, &arg_10h, 0);\n                    if ((iVar2 == 0) || (uVar6 != arg_10h)) {\n                        return 0xfffffffe;\n                    }\n                    var_4h = var_4h + uVar6;\n                    nNumber = nNumber - uVar6;\n                }\n            }\n            else {\n                if (nNumber < uVar5) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.004030e0(uVar6, uVar5);\n                if (iVar2 != 0) {\n                    return uVar5;\n                }\n            }\n        }\n        else {\n            var_10h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *0x40b55c = 0;\n            *0x40b558 = 0;\n            uVar6 = nNumber & 0x7fffffff;\n            *0x40b040 = 8;\n            *0x414be8 = 0x40cbe0;\n            *0x414be4 = 0x40cbe0;\n            *0x414be0 = 0x414be0;\n            nNumber = uVar6;\n            if (uVar6 == 0) {\n                *0x40b040 = 8;\n                *0x40b558 = 0;\n                *0x40b55c = 0;\n                *0x414be0 = 0x414be0;\n                *0x414be4 = 0x40cbe0;\n                *0x414be8 = 0x40cbe0;\n                return var_4h;\n            }\n            while( true ) {\n                uVar5 = 0x4000;\n                if (nNumber < 0x4000) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.004030e0(0x414c38, 0x414c38);\n                if (iVar2 == 0) break;\n                nNumber = nNumber - uVar5;\n                *0x40b030 = 0x414c38;\n                *0x40b034 = uVar5;\n                while( true ) {\n                    uVar5 = lpBuffer;\n                    *0x40b038 = lpBuffer;\n                    *0x40b03c = var_8h;\n                    var_18h = fcn.00405d75(0x40b030);\n                    if (var_18h < 0) {\n                        return 0xfffffffc;\n                    }\n                    iVar4 = *0x40b038 - uVar5;\n                    iVar2 = (*pcVar1)();\n                    if (((*0x40928c & 1) != 0) && ((200 < iVar2 - var_10h || (nNumber == 0)))) {\n                        uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar6 - nNumber, 100, uVar6);\n                        (*_sym.imp.USER32.dll_wsprintfA)(&var_58h, \"... %d%%\", uVar3);\n                        fcn.00404d69(0, &var_58h);\n                        var_10h = iVar2;\n                    }\n                    if (iVar4 == 0) break;\n                    if (arg_10h == 0) {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, iVar4, &lpNumberOfBytesWritten, 0);\n                        if (iVar2 == 0) {\n                            return 0xfffffffe;\n                        }\n                        if (lpNumberOfBytesWritten != iVar4) {\n                            return 0xfffffffe;\n                        }\n                        var_4h = var_4h + iVar4;\n                    }\n                    else {\n                        var_8h = var_8h - iVar4;\n                        var_4h = var_4h + iVar4;\n                        lpBuffer = *0x40b038;\n                        if (var_8h < 1) {\n                            return var_4h;\n                        }\n                    }\n                    if (var_18h == 1) {\n                        return var_4h;\n                    }\n                }\n                if (nNumber < 1) {\n                    return var_4h;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1394
    },
    "00403e16": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e16(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((arg_8h - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 455
    },
    "0040460b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040460b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x42f048;\n    iVar3 = *0x42f04c;\n    if (*0x42f04c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x418;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 167
    },
    "00404e3b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404e3b(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x42f04c;\n    iVar2 = *0x42f048;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x42f0d0 = *0x42f0d0 | uVar1;\n    uVar5 = 0;\n    fcn.00403dfb(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.0040136d();\n                if (iVar2 != 0) {\n                    *0x42f0ac = *0x42f0ac + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x106;\n        } while (iVar4 != 0);\n    }\n    fcn.00403dfb(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x42f0ac;\n}\n",
        "token_count": 317
    },
    "0040136d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.0040136d(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *lpExistingFileName;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_ESI;\n    \n    while ((-1 < param_1 && (lpExistingFileName = param_1 * 0x1c + *0x42f050,  *lpExistingFileName != 1))) {\n        iVar1 = fcn.00401439(lpExistingFileName);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        if (iVar1 < 0) {\n            iVar1 = fcn.0040591b((iVar1 + 1) * -0x400 + 0x430000);\n        }\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (param_2 != 0) {\n            *0x42e80c = *0x42e80c + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x42e80c, 30000, (*0x42e7f4 == 0) + *0x42e7f4, 0);\n            (*_sym.imp.USER32.dll_SendMessageA)(unaff_ESI, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 366
    },
    "00404182": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404182(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x429448;\n    if (*0x42f0ac == 0) {\n        uVar1 = *0x42a480;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 88
    },
    "004044f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004044f0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 1) {\n        fcn.0040527e(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x466, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.00401410(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "00404638": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404638(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x110c, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 320
    },
    "0040529a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040529a(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x42f0c0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x42f0c8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        (*_sym.imp.USER32.dll_MessageBoxA)(*0x42f024, param_1, 0x42e820, uVar1);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00405530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.00405530(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    piVar2 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    uVar3 = (*pcVar1)(piVar2);\n    if ((*param_1 == '\\0') || (*piVar2 != 0x5c3a)) {\n        if (*param_1 == 0x5c5c) {\n            iVar5 = 2;\n            do {\n                iVar5 = iVar5 + -1;\n                pcVar4 = fcn.004054c8();\n                if (*pcVar4 == '\\0') goto code_r0x00405575;\n                pcVar4 = pcVar4 + 1;\n            } while (iVar5 != 0);\n        }\n        else {\ncode_r0x00405575:\n            pcVar4 = NULL;\n        }\n    }\n    else {\n        pcVar4 = (*pcVar1)(uVar3);\n    }\n    return pcVar4;\n}\n",
        "token_count": 269
    },
    "00405898": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405898(uint lpcbData, uint phkResult, uint lpValueName, uchar *lpType)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = lpType;\n    *lpType = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(lpcbData, phkResult, 0, 0x20019, &phkResult);\n    if (iVar2 == 0) {\n        lpcbData = 0x400;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(phkResult, lpValueName, 0, &lpType, puVar1, &lpcbData);\n        if ((iVar2 != 0) || ((lpType != 0x1 && (lpType != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x3ff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "004059c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004059c6(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint *arg_8h_00;\n    char *pcVar7;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint *ppidl;\n    \n    puVar2 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x42e7fc - (arg_ch * 4 + 4));\n    }\n    puVar5 = arg_ch + *0x42f058;\n    arg_8h_00 = 0x42dfc0;\n    if (arg_8h + -0x10b7f0 < 0x800) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar2;\n    }\n    do {\n        while( true ) {\n            uVar1 = *puVar5;\n            if ((uVar1 == 0) || (0x3ff < arg_8h_00 + -0x10b7f0)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.004059a4(arg_8h, 0x42dfc0);\n                }\n                return;\n            }\n            puVar4 = puVar5 + 1;\n            if (0xfc < uVar1) break;\n            if (uVar1 == 0xfc) {\n                *arg_8h_00 = *puVar4;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar4;\n            }\n        }\n        var_ch = puVar5[2];\n        var_14h = *puVar4;\n        uVar6 = (var_ch & 0x7f) << 7 | var_14h & 0x7f;\n        var_8h = var_ch | 0x8000;\n        var_10h = var_14h | 0x8000;\n        if (uVar1 == 0xfe) {\n            arg_ch = 2;\n            if (*0x42f0a4 != 0) {\n                arg_ch = 4;\n            }\n            do {\n                arg_ch = arg_ch + -1;\n                pcVar7 = &ppidl;\n                iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)(*0x42f024, (&var_14h)[arg_ch], pcVar7);\n                if (iVar3 == 0) {\n                    pcVar7 = ppidl;\n                    iVar3 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(ppidl, arg_8h_00);\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(ppidl);\n                    if (iVar3 != 0) break;\n                }\n                *arg_8h_00 = 0;\n            } while (arg_ch != 0);\n            if (*arg_8h_00 == 0) {\n                if (var_14h == 0x2b) {\n                    pcVar7 = \"CommonFilesDir\";\n                    fcn.00405898(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", \"CommonFilesDir\", arg_8h_00\n                                );\n                }\n                else if (var_14h == 0x26) {\n                    pcVar7 = \"ProgramFilesDir\";\n                    fcn.00405898(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", \"ProgramFilesDir\", \n                                 arg_8h_00);\n                    if (*arg_8h_00 != 0) goto code_r0x00405b32;\n                    fcn.004059a4(arg_8h_00, \"C:\\\\Program Files\");\n                }\n                else if (var_14h == 0x25) {\n                    pcVar7 = arg_8h_00;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(arg_8h_00, 0x400);\n                }\n                else if (var_14h == 0x24) {\n                    pcVar7 = arg_8h_00;\n                    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(arg_8h_00, 0x400);\n                }\n                if (*arg_8h_00 != 0) goto code_r0x00405b32;\n            }\n            else {\ncode_r0x00405b32:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatA(pcVar7, \"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\", arg_8h_00);\n                }\n            }\ncode_r0x00405b43:\n            fcn.00405bd3(arg_8h_00);\n        }\n        else if (uVar1 == 0xfd) {\n            if (uVar6 == 0x1b) {\n                fcn.00405902(arg_8h_00, *0x42f024);\n            }\n            else {\n                fcn.004059a4(arg_8h_00, uVar6 * 0x400 + 0x430000);\n            }\n            if (uVar6 - 0x15 < 6) goto code_r0x00405b43;\n        }\n        else if (uVar1 == 0xff) {\n            fcn.004059c6(arg_8h_00, -1 - uVar6);\n        }\n        iVar3 = sub.KERNEL32.dll_lstrlenA();\n        arg_8h_00 = arg_8h_00 + iVar3;\n        puVar5 = puVar5 + 3;\n    } while( true );\n}\n",
        "token_count": 1410
    },
    "00405bd3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405bd3(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.00405509(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffffff00 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (pcVar4 = fcn.004054c8(\"*?|<>/\\\":\", uVar3),  *pcVar4 == '\\0')) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00405641(puVar6, puVar7, iVar5 - puVar7);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffffff00 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "0040686c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040686c(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    int32_t iVar1;\n    unkbyte3 Var2;\n    uint uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    uint var_ech;\n    uint var_b0h;\n    uint var_ach;\n    int32_t aiStack172 [14];\n    uint32_t var_70h;\n    uint var_6ch;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    uint32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar15 = arg_20h;\n    puVar13 = &var_70h;\n    for (iVar5 = 0x10; piVar6 = arg_8h,  uVar8 = arg_ch,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    do {\n        (&var_70h)[*piVar6] = (&var_70h)[*piVar6] + 1;\n        uVar8 = uVar8 - 1;\n        piVar6 = piVar6 + 1;\n    } while (uVar8 != 0);\n    if (var_70h == arg_ch) {\n        *arg_1ch = 0;\n        *arg_20h = 0;\n        uVar3 = 0;\n    }\n    else {\n        uVar8 = 1;\n        arg_20h = *arg_20h;\n        uVar9 = 0xf;\n        do {\n            iVar5 = 0;\n            if ((&var_70h)[uVar8] != 0) break;\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < 0x10);\n        var_4h = uVar8;\n        if (arg_20h < uVar8) {\n            arg_20h = uVar8;\n        }\n        do {\n            if ((&var_70h)[uVar9] != 0) break;\n            uVar9 = uVar9 - 1;\n        } while (uVar9 != 0);\n        var_18h = uVar9;\n        if (uVar9 < arg_20h) {\n            arg_20h = uVar9;\n        }\n        *puVar15 = arg_20h;\n        var_30h = 1 << (uVar8 & 0x1f);\n        for (; uVar8 < uVar9; uVar8 = uVar8 + 1) {\n            if (var_30h - (&var_70h)[uVar8] < 0) goto code_r0x00406b9d;\n            var_30h = (var_30h - (&var_70h)[uVar8]) * 2;\n        }\n        iVar7 = (&var_70h)[uVar9];\n        var_30h = var_30h - iVar7;\n        if (-1 < var_30h) {\n            var_ach = 0;\n            (&var_70h)[uVar9] = iVar7 + var_30h;\n            iVar7 = 0;\n            iVar10 = uVar9 - 1;\n            if (iVar10 != 0) {\n                iVar14 = 0;\n                do {\n                    iVar7 = iVar7 + *(&var_6ch + iVar14);\n                    iVar10 = iVar10 + -1;\n                    *(aiStack172 + iVar14) = iVar7;\n                    iVar14 = iVar14 + 4;\n                } while (iVar10 != 0);\n            }\n            uVar8 = 0;\n            piVar6 = arg_8h;\n            do {\n                iVar7 = *piVar6;\n                piVar6 = piVar6 + 1;\n                if (iVar7 != 0) {\n                    iVar10 = (&var_b0h)[iVar7];\n                    *(iVar10 * 4 + 0x42d2a0) = uVar8;\n                    (&var_b0h)[iVar7] = iVar10 + 1;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < arg_ch);\n            iVar7 = (&var_b0h)[uVar9];\n            var_ch = -1;\n            var_24h = 0;\n            iVar10 = -arg_20h;\n            var_8h = 0;\n            var_b0h = 0;\n            var_20h = 0x42d2a0;\n            var_ech = 0;\n            if (var_4h <= var_18h) {\n                var_28h = var_4h - 1;\n                var_1ch = &var_70h + var_4h;\n                do {\n                    var_10h = *var_1ch;\n                    while (var_10h != 0) {\n                        arg_8h._2_2_ = arg_8h >> 0x10;\n                        var_2ch = var_10h - 1;\n                        var_14h = arg_20h + iVar10;\n                        if (arg_20h + iVar10 < var_4h) {\n                            do {\n                                iVar14 = var_ch + 1;\n                                var_ch = iVar14;\n                                uVar8 = var_18h - var_14h;\n                                if (arg_20h < var_18h - var_14h) {\n                                    uVar8 = arg_20h;\n                                }\n                                uVar9 = var_4h - var_14h;\n                                uVar11 = 1 << (uVar9 & 0x1f);\n                                if ((var_10h < uVar11) &&\n                                   (iVar5 = uVar11 + (-1 - var_2ch),  puVar15 = var_1ch,  uVar9 < uVar8)) {\n                                    while (uVar9 = uVar9 + 1,  uVar9 < uVar8) {\n                                        uVar11 = puVar15[1];\n                                        if (iVar5 * 2 <= uVar11) break;\n                                        iVar5 = iVar5 * 2 - uVar11;\n                                        puVar15 = puVar15 + 1;\n                                    }\n                                }\n                                var_24h = 1 << (uVar9 & 0x1f);\n                                uVar8 = *arg_28h + var_24h;\n                                if (0x5a0 < uVar8) goto code_r0x00406b9d;\n                                iVar5 = arg_24h + *arg_28h * 4;\n                                *arg_28h = uVar8;\n                                (&var_ech)[iVar14] = iVar5;\n                                uVar8 = var_8h;\n                                if (iVar14 == 0) {\n                                    *arg_1ch = iVar5;\n                                }\n                                else {\n                                    iVar1 = *(&stack0xffffff0c + iVar14 * 4);\n                                    (&var_b0h)[iVar14] = var_8h;\n                                    arg_8h._0_2_ = uVar9 & 0xff | (arg_20h & 0xff) << 8;\n                                    uVar8 = uVar8 >> (iVar10 & 0x1f);\n                                    arg_8h = CONCAT22((iVar5 - iVar1 >> 2) - uVar8, arg_8h);\n                                    *(iVar1 + uVar8 * 4) = arg_8h;\n                                }\n                                iVar10 = var_14h;\n                                var_14h = var_14h + arg_20h;\n                            } while (var_14h < var_4h);\n                        }\n                        uVar12 = iVar10;\n                        Var2 = CONCAT21(arg_8h._2_2_, var_4h - uVar12);\n                        if (var_20h < iVar7 * 4 + 0x42d2a0U) {\n                            uVar8 = *var_20h;\n                            if (uVar8 < arg_10h) {\n                                arg_8h._0_2_ = CONCAT31(Var2, (uVar8 < 0x100) + -1) & 0xff60;\n                                uVar4 = *var_20h;\n                                var_20h = var_20h + 1;\n                            }\n                            else {\n                                iVar14 = (uVar8 - arg_10h) * 2;\n                                var_20h = var_20h + 1;\n                                arg_8h = CONCAT31(Var2, *(iVar14 + arg_18h) + 'P');\n                                uVar4 = *(iVar14 + arg_14h);\n                            }\n                            arg_8h = CONCAT22(uVar4, arg_8h);\n                        }\n                        else {\n                            arg_8h = CONCAT31(Var2, 0xc0);\n                        }\n                        for (uVar8 = var_8h >> (uVar12 & 0x1f); uVar8 < var_24h;\n                            uVar8 = uVar8 + (1 << (var_4h - uVar12 & 0x1f))) {\n                            *(iVar5 + uVar8 * 4) = arg_8h;\n                        }\n                        uVar8 = 1 << (var_28h & 0x1f);\n                        while ((var_8h & uVar8) != 0) {\n                            var_8h = var_8h ^ uVar8;\n                            uVar8 = uVar8 >> 1;\n                        }\n                        var_8h = var_8h ^ uVar8;\n                        var_10h = 1;\n                        var_10h = var_2ch;\n                        if (((1 << (uVar12 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]) {\n                            do {\n                                iVar10 = iVar10 - arg_20h;\n                                var_ch = var_ch + -1;\n                            } while (((1 << (iVar10 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]);\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                    var_1ch = var_1ch + 1;\n                    var_28h = var_28h + 1;\n                } while (var_4h <= var_18h);\n            }\n            if (var_30h == 0) {\n                return 0;\n            }\n            if (var_18h == 1) {\n                return 0;\n            }\n        }\ncode_r0x00406b9d:\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 2605
    },
    "004041ed": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.004041ed(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar *puVar4;\n    uint32_t arg_10h_00;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint32_t arg_10h_01;\n    uint32_t uVar8;\n    uint *var_48h;\n    uint *var_44h;\n    char *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    int32_t var_30h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = *0x429c58;\n    var_8h = *(*0x429c58 + 0x38);\n    iVar6 = *(*0x429c58 + 0x3c) * 0x400 + 0x430000;\n    if (arg_ch == 0x40b) {\n        fcn.0040527e(0x3fb, iVar6);\n        fcn.00405bd3(iVar6);\n    }\n    if (arg_ch == 0x110) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar2 = fcn.00405509(iVar6);\n        if (iVar2 != 0) {\n            iVar2 = fcn.00405530(iVar6);\n            if (iVar2 == 0) {\n                fcn.0040549d(iVar6);\n            }\n        }\n        *0x42e7f8 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextA)(uVar1, iVar6);\n        var_40h = *(arg_14h + 0x34);\n        var_44h = 0x1;\n        var_48h = arg_8h;\n        fcn.00403daf();\n        fcn.00403daf(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.00403de4(uVar1);\n        pcVar3 = fcn.00405caa(\"shlwapi.dll\", \"SHAutoComplete\");\n        if (pcVar3 == NULL) goto code_r0x004044db;\n        (*pcVar3)(uVar1, 1);\n    }\n    iVar2 = var_8h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x004044db;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar7 = &fcn.004041ed::var_44h;\n            for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_48h = arg_8h;\n            var_40h = 0x42a488;\n            var_34h = fcn.004044f0;\n            var_30h = iVar6;\n            var_3ch = fcn.004059c6(0x429858, iVar2);\n            var_38h = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&fcn.004041ed::var_48h);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                fcn.0040549d(iVar6);\n                if ((*(*0x42f028 + 0x11c) != 0) && (iVar6 == 0x435400)) {\n                    uVar1 = 0;\n                    fcn.004059c6(0, *(*0x42f028 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x42dfc0, 0x42a488);\n                    if (iVar2 != 0) {\n                        sub.KERNEL32.dll_lstrcatA(uVar1, 0x42dfc0, 0x435400);\n                    }\n                }\n                *0x42a474 = *0x42a474 + 1;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x3fb, iVar6);\n            }\n        }\n    }\n    if ((arg_ch != 0x40f) && (arg_ch != 0x405)) goto code_r0x004044db;\n    var_4h = 0;\n    var_8h = 0;\n    arg_10h_01 = 0xffffffff;\n    fcn.0040527e(0x3fb, iVar6);\n    iVar2 = fcn.0040557d(iVar6);\n    if (iVar2 == 0) {\n        var_4h = 1;\n    }\n    fcn.004059a4(0x429450, iVar6);\n    puVar4 = fcn.00405530(0x429450);\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    var_40h = \"KERNEL32.dll\";\n    pcVar3 = fcn.00405caa();\n    if (pcVar3 == NULL) {\ncode_r0x00404414:\n        var_44h = &fcn.004041ed::var_24h;\n        var_48h = &fcn.004041ed::var_ch;\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)(0x429450, &fcn.004041ed::var_10h, &fcn.004041ed::var_18h);\n        if (iVar6 != 0) {\n            var_44h = 0x400;\n            var_48h = var_ch;\n            arg_10h_01 = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_18h);\n            goto code_r0x00404443;\n        }\n    }\n    else {\n        iVar6 = (*pcVar3)(0x429450, &fcn.004041ed::var_28h, &fcn.004041ed::var_14h, &fcn.004041ed::var_1ch);\n        if (iVar6 == 0) goto code_r0x00404414;\n        arg_10h_01 = var_28h >> 10 | var_24h << 0x16;\ncode_r0x00404443:\n        var_8h = 1;\n    }\n    uVar8 = 5;\n    var_48h = 0x404451;\n    arg_10h_00 = fcn.0040460b();\n    if (arg_10h_01 < arg_10h_00) {\n        var_4h = 2;\n    }\n    if (*(*0x42e7fc + 0x10) != 0) {\n        var_48h = arg_10h_00;\n        fcn.00404556(0x3ff, 0xfffffffb, arg_10h_00);\n        if (var_8h == 0) {\n            sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x400, 0x429440);\n            uVar8 = arg_8h;\n        }\n        else {\n            uVar8 = 0x400;\n            fcn.00404556(0x400, 0xfffffffc, arg_10h_01);\n        }\n    }\n    *0x42f0c4 = var_4h;\n    if (var_4h == 0) {\n        uVar8 = 7;\n        var_4h = fcn.00401410();\n    }\n    if ((*(var_20h + 0x14) & 0x400) != 0) {\n        var_4h = 0;\n    }\n    fcn.00403dd1(var_4h == 0, uVar8);\n    if ((var_4h == 0) && (*0x42a474 == 0)) {\n        fcn.00404182();\n    }\n    *0x42a474 = 0;\ncode_r0x004044db:\n    fcn.00403e16(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2048
    },
    "0040591b": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040591b(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_4h = 1;\n    cVar2 = '\\n';\n    cVar6 = '9';\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_4h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if (('/' < uVar1) && (uVar1 < '8')) {\n            cVar2 = '\\b';\n            cVar6 = '7';\n        }\n        if ((uVar1 & 0xdf) == 0x58) {\n            cVar2 = '\\x10';\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (cVar6 < uVar4)) {\n            if ((cVar2 != '\\x10') || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_4h * iVar7;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        iVar7 = cVar2 * iVar7 + iVar5;\n    } while( true );\n}\n",
        "token_count": 447
    },
    "00402add": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402add(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_10ch;\n    uint phkResult;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpSubKey, 0, 8, &phkResult);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (iVar2 == 0) {\n        do {\n            iVar2 = (*pcVar1)(phkResult, 0, &var_10ch, 0x105);\n            if (iVar2 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                return 1;\n            }\n            iVar2 = fcn.00402add(phkResult, &var_10ch, 0);\n        } while (iVar2 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(hKey, lpSubKey);\n    }\n    return iVar2;\n}\n",
        "token_count": 285
    },
    "00404556": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404556(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint arg_ch_00;\n    int8_t iVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint *arg_8h;\n    uint var_40h;\n    uint var_20h;\n    \n    iVar6 = 0x14;\n    arg_ch_00 = 0xffffffdc;\n    if (arg_10h < 0x100000) {\n        iVar6 = 10;\n        arg_ch_00 = 0xffffffdd;\n    }\n    if (arg_10h < 0x400) {\n        iVar6 = 0;\n        arg_ch_00 = 0xffffffde;\n    }\n    if (arg_10h < 0xffff3333) {\n        arg_10h = arg_10h + (1 << iVar6) / 0x14;\n    }\n    uVar1 = fcn.004059c6(&var_20h, 0xffffffdf);\n    arg_8h = &var_40h;\n    uVar2 = fcn.004059c6(arg_8h, arg_ch_00);\n    uVar5 = ((arg_10h & 0xffffff) * 10 >> iVar6) % 10;\n    arg_10h = arg_10h >> iVar6;\n    pcVar8 = \"%u.%u%s%s\";\n    uVar7 = 0x42a488;\n    iVar3 = fcn.004059c6(0x42a488, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenA(0x42a488, uVar7, arg_ch, pcVar8, arg_10h, uVar5, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar3 + iVar4);\n    sub.USER32.dll_SetDlgItemTextA(*0x42e7f8, nIDDlgItem, 0x42a488);\n    return;\n}\n",
        "token_count": 493
    },
    "00406804": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00406804(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *(param_1 + 0x9bb4);\n    while( true ) {\n        uVar2 = *(param_1 + 0x9bb8);\n        if (uVar2 < uVar4) {\n            uVar2 = *(param_1 + 0x9bb0);\n        }\n        uVar1 = *(param_1 + 0xc);\n        uVar3 = uVar2 - uVar4;\n        if (uVar1 <= uVar2 - uVar4) {\n            uVar3 = uVar1;\n        }\n        *(param_1 + 0xc) = uVar1 - uVar3;\n        fcn.00405641();\n        *(param_1 + 8) = *(param_1 + 8) + uVar3;\n        if (uVar4 + uVar3 != *(param_1 + 0x9bb0)) break;\n        uVar4 = param_1 + 0x1bb0;\n        if (*(param_1 + 0x9bb8) == *(param_1 + 0x9bb0)) {\n            *(param_1 + 0x9bb8) = uVar4;\n        }\n    }\n    *(param_1 + 0x9bb4) = uVar4 + uVar3;\n    return;\n}\n",
        "token_count": 341
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x42f04c != 0)) {\n        puVar2 = *0x42f048 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x106;\n        } while (uVar3 < *0x42f04c);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00402a9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402a9d(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.004059c6((uVar1 >> 4) * 0x400 + 0x409be8, *(*0x409be0 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.00405bd3(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "00402b64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402b64(int32_t param_1)\n\n{\n    if (param_1 == 0) {\n        param_1 = *0x42f0a4 + -0x7fffffff;\n    }\n    return param_1;\n}\n",
        "token_count": 59
    },
    "00402bae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402bae(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n        *0x40b028 = arg_14h;\n    }\n    if (arg_ch == 0x113) {\n        iVar2 = *0x414c30;\n        if (*0x428c38 <= *0x414c30) {\n            iVar2 = *0x428c38;\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, *0x428c38);\n        (*_sym.imp.USER32.dll_wsprintfA)(0x414bf0, *0x40b028, uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x414bf0);\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x406, 0x414bf0);\n        (*_sym.imp.USER32.dll_ShowWindow)(arg_8h, 5);\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "004037fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004037fa(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    uVar4 = 0xffff;\n    uVar1 = fcn.0040591b(0x436000);\n    do {\n        if (*0x42f064 != 0) {\n            puVar3 = *(*0x42f028 + 100) * *0x42f064 + *0x42f060;\n            iVar5 = *0x42f064;\n            do {\n                puVar3 = puVar3 - *(*0x42f028 + 100);\n                iVar5 = iVar5 + -1;\n                if (((*puVar3 ^ uVar1) & uVar4) == 0) {\n                    *0x42e800 = *(puVar3 + 1);\n                    *0x42f0c8 = *(puVar3 + 3);\n                    *0x42e7fc = puVar3 + 5;\n                    if (*0x42e7fc != NULL) {\n                        fcn.00405902(0x436000, *puVar3);\n                        uVar2 = fcn.004059c6(0x42e820, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextA)(*0x42a460, uVar2);\n                        piVar6 = *0x42f048;\n                        for (iVar5 = *0x42f04c; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            if (*piVar6 != 0) {\n                                fcn.004059c6(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x106;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar5 != 0);\n        }\n        if (uVar4 == 0xffff) {\n            uVar4 = 0x3ff;\n        }\n        else {\n            uVar4 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 482
    },
    "00403daf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403daf(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.004059c6(0, param_3);\n    sub.USER32.dll_SetDlgItemTextA(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "00403ec3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ec3(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x42944c + arg_8h, arg_10h);\n    iVar1 = sub.KERNEL32.dll_lstrlenA(arg_ch);\n    *arg_14h = iVar1;\n    *0x42944c = *0x42944c + iVar1;\n    return 0;\n}\n",
        "token_count": 131
    },
    "004041a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041a6(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.00403daf(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 1000, *(arg_14h + 0x3c) * 0x400 + 0x430000);\n    }\n    fcn.00403e16(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 148
    },
    "0040549d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040549d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, iVar1 + param_1);\n    if (*pcVar2 != '\\\\') {\n        sub.KERNEL32.dll_lstrcatA(param_1, 0x409010);\n    }\n    return param_1;\n}\n",
        "token_count": 116
    },
    "004054e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004054e4(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = param_1 + iVar1;\n    do {\n        if (*pcVar2 == '\\\\') break;\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar2);\n    } while (param_1 < pcVar2);\n    *pcVar2 = '\\0';\n    return;\n}\n",
        "token_count": 122
    },
    "004056af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004056af(uchar *arg_8h, uint lpPathName)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = arg_8h;\n    iVar4 = 100;\n    do {\n        iVar4 = iVar4 + -1;\n        arg_8h = 0x61736e;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        arg_8h._0_3_ = CONCAT12(arg_8h._2_1_ + uVar2 % 0x1a, arg_8h._0_2_);\n        arg_8h = arg_8h & 0xff000000 | arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &arg_8h, 0, puVar1);\n        if (iVar3 != 0) {\n            return puVar1;\n        }\n    } while (iVar4 != 0);\n    *puVar1 = 0;\n    return NULL;\n}\n",
        "token_count": 254
    },
    "00405902": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405902(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_1, 0x407308, param_2);\n    return;\n}\n",
        "token_count": 49
    },
    "00405680": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405680(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 110
    },
    "00402b79": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402b79(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00402a9d(0x22, 0, arg_8h, &arg_8h);\n    uVar1 = fcn.00402b64(*(*0x409be0 + 4), uVar1);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 135
    },
    "004054c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004054c8(char *param_1, char param_2)\n\n{\n    for (; (*param_1 != '\\0' && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004055f5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004055f5(uint param_1, uint param_2)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    int32_t iVar4;\n    \n    iVar2 = sub.KERNEL32.dll_lstrlenA(param_2);\n    iVar4 = unaff_retaddr;\n    while( true ) {\n        iVar3 = sub.KERNEL32.dll_lstrlenA(unaff_retaddr);\n        if (iVar3 < iVar2) {\n            return 0;\n        }\n        uVar1 = *(iVar2 + unaff_retaddr);\n        *(iVar2 + unaff_retaddr) = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(unaff_retaddr, iVar4);\n        *(iVar2 + unaff_retaddr) = uVar1;\n        if (iVar3 == 0) break;\n        unaff_retaddr = (*_sym.imp.USER32.dll_CharNextA)(unaff_retaddr);\n    }\n    return unaff_retaddr;\n}\n",
        "token_count": 235
    },
    "00405641": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405641(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (0 < param_3) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00405cd4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405cd4(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00403129": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nvoid fcn.00403129(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.00405bd3(0x436400);\n    iVar1 = fcn.00405509(0x436400);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.0040549d(0x436400);\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x436400, 0);\n    fcn.004056af(0x436000, 0x436400);\n    return;\n}\n",
        "token_count": 122
    },
    "004030e0": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004030e0(uint lpBuffer, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_ch;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x409020, lpBuffer, arg_ch, &arg_ch, 0);\n    if ((iVar2 == 0) || (arg_ch != iVar1)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 131
    },
    "00405caa": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00405caa(uint param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(param_1);\n    if ((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(unaff_retaddr),  iVar1 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, param_1);\n    return;\n}\n",
        "token_count": 117
    }
}