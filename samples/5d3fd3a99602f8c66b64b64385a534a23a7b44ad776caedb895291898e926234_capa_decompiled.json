{
    "00401050": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040109d)\n// WARNING: Removing unreachable block (ram,0x00401070)\n// WARNING: Removing unreachable block (ram,0x00401086)\n// WARNING: Removing unreachable block (ram,0x004010b4)\n\nvoid fcn.00401050(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 8;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 115
    },
    "004010d0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401127)\n\nvoid __thiscall fcn.004010d0(int32_t param_1, uint8_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint16_t *puStack8;\n    \n    if (param_2 == '\\0') {\n        puStack8 = param_1 + 0x20022;\n        uVar4 = 0;\n        uVar6 = 0;\n        param_2 = 0xb;\n        iVar5 = 0;\ncode_r0x00401100:\n        do {\n            iVar2 = 0x1f;\n            if (uVar6 < 0x20) {\n                do {\n                    uVar4 = uVar4 + *(param_1 + 0x20000 + iVar2) + param_2 & 0xff;\n                    iVar2 = iVar2 + -1;\n                } while (uVar6 <= iVar2);\n            }\n            uVar6 = uVar6 + 1 & 0x8000001f;\n            bVar1 = true;\n            if (uVar6 < 0) {\n                uVar6 = (uVar6 - 1 | 0xffffffe0) + 1;\n            }\n            if (-1 < iVar5) {\n                puVar3 = param_1 + 0x20022;\n                iVar2 = iVar5 + 1;\n                do {\n                    if (uVar4 == *puVar3) {\n                        bVar1 = false;\n                    }\n                    puVar3 = puVar3 + 0x100;\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n                if (!bVar1) {\n                    param_2 = param_2 + 1;\n                    goto code_r0x00401100;\n                }\n            }\n            *puStack8 = uVar4;\n            iVar5 = iVar5 + 1;\n            puStack8 = puStack8 + 0x100;\n        } while (iVar5 < 0x100);\n    }\n    return;\n}\n",
        "token_count": 489
    },
    "004011b0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004011b0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack8;\n    \n    uVar5 = 0;\n    iVar7 = 0;\n    iStack8 = 1;\n    do {\n        uVar5 = uVar5 + 1 & 0x800000ff;\n        if (uVar5 < 0) {\n            uVar5 = (uVar5 - 1 | 0xffffff00) + 1;\n        }\n        uVar6 = iStack8 + 0x25 + iVar7;\n        do {\n            uVar6 = uVar6 + 1;\n            iVar7 = iVar7 + 1;\n            uVar1 = uVar6 & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            iVar3 = (*(uVar1 + 0x20000 + param_1) + *(param_1 + 0x20020) + iVar7) % 0xff + 1;\n        } while (*(param_1 + 0x20022 + iVar3 * 2) != 0x400);\n        iVar2 = 0;\n        puVar4 = param_1 + 0x20022 + iVar3 * 2;\n        do {\n            uVar6 = iVar2 + uVar5 & 0x800000ff;\n            if (uVar6 < 0) {\n                uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n            }\n            *puVar4 = *(uVar6 * 0x200 + 0x20022 + param_1);\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + 0x100;\n        } while (iVar2 < 0x100);\n        iStack8 = iStack8 + 1;\n    } while (iStack8 < 0x100);\n    return;\n}\n",
        "token_count": 500
    },
    "00401300": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401300(int32_t param_1)\n\n{\n    uchar uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint32_t uStack56;\n    uint8_t auStack20 [4];\n    uchar uStack16;\n    uchar uStack15;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    uchar uStack11;\n    uchar uStack10;\n    uchar uStack9;\n    uchar uStack8;\n    uchar uStack7;\n    uchar uStack6;\n    uchar uStack5;\n    uchar uStack4;\n    uchar uStack3;\n    uchar uStack2;\n    uchar uStack1;\n    \n    auStack20[3] = 0xd9;\n    uStack13 = 0xd9;\n    uStack12 = 0x25;\n    uStack11 = 0x25;\n    uStack9 = 0x25;\n    auStack20[2] = 0x32;\n    uStack3 = 0x32;\n    uStack16 = 0xc9;\n    uStack6 = 0xc9;\n    uStack1 = 0xc9;\n    auStack20[0] = 0x78;\n    auStack20[1] = 0x61;\n    uStack14 = 0x67;\n    uStack10 = 0x66;\n    uStack7 = 0x33;\n    uStack5 = 0x6b;\n    uStack4 = 0x74;\n    uStack2 = 0x67;\n    uStack8 = 0x2f;\n    uStack15 = 0x62;\n    uStack56 = 1;\n    puVar2 = param_1 + 0x20000;\n    do {\n        puVar3 = puVar2 + (-0x20000 - param_1);\n        *puVar2 = puVar3 + auStack20[(CONCAT44((puVar2 + (-0x1fff5 - param_1) | 0x1f) >> 0x1f, \n                                               puVar2 + (-0x1fff5 - param_1)) | 0x1f) % 0x14] * auStack20[puVar3 % 0x14]\n                  ^ *((puVar3 & 0xff) * 0x100 + auStack20[puVar3 % 0x14] + param_1);\n        puVar2[1] = puVar3 + auStack20[(CONCAT44((puVar2 + (-0x1fff4 - param_1) | 0x1f) >> 0x1f, \n                                                 puVar2 + (-0x1fff4 - param_1)) | 0x1f) % 0x14] *\n                             auStack20[uStack56 % 0x14] + 1 ^\n                    *((uStack56 & 0xff) * 0x100 + auStack20[uStack56 % 0x14] + param_1);\n        puVar2[2] = puVar3 + auStack20[(CONCAT44((puVar2 + (-0x1fff3 - param_1) | 0x1f) >> 0x1f, \n                                                 puVar2 + (-0x1fff3 - param_1)) | 0x1f) % 0x14] *\n                             auStack20[(puVar2 + (-0x1fffe - param_1)) % 0x14] + 2 ^\n                    *((puVar2 + (-0x1fffe - param_1) & 0xff) * 0x100 + auStack20[(puVar2 + (-0x1fffe - param_1)) % 0x14]\n                     + param_1);\n        uStack56 = uStack56 + 4;\n        puVar2[3] = puVar3 + auStack20[(CONCAT44((puVar2 + (-0x1fff2 - param_1) | 0x1f) >> 0x1f, \n                                                 puVar2 + (-0x1fff2 - param_1)) | 0x1f) % 0x14] *\n                             auStack20[(puVar2 + (-0x1fffd - param_1)) % 0x14] + 3 ^\n                    *((puVar2 + (-0x1fffd - param_1) & 0xff) * 0x100 + auStack20[(puVar2 + (-0x1fffd - param_1)) % 0x14]\n                     + param_1);\n        puVar2 = puVar2 + 4;\n    } while (puVar2 + (-0x20000 - param_1) < 0x20);\n    uVar1 = fcn.00401050(param_1 + 0x20000);\n    *(param_1 + 0x20020) = uVar1;\n    fcn.00401280(0);\n    return 1;\n}\n",
        "token_count": 1112
    },
    "00403080": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t fcn.00403080(uint32_t param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if (param_2 == NULL) {\n        return 0;\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            if ((param_2 & 3) == 0) break;\n            param_1 = param_1 >> 8 ^ *(((*param_2 ^ param_1) & 0xff) * 4 + 0x41b2b0);\n            param_2 = param_2 + 1;\n            param_3 = param_3 - 1;\n        } while (param_3 != 0);\n    }\n    if (0x1f < param_3) {\n        uVar3 = param_3 >> 5;\n        puVar1 = param_2;\n        do {\n            param_1 = param_1 ^ *puVar1;\n            uVar2 = *((param_1 >> 0x10 & 0xff) * 4 + 0x41b6b0) ^ *((param_1 >> 8 & 0xff) * 4 + 0x41bab0) ^\n                    *((param_1 >> 0x18) * 4 + 0x41b2b0) ^ *((param_1 & 0xff) * 4 + 0x41beb0) ^ puVar1[1];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x41b6b0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x41bab0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x41b2b0) ^ *((uVar2 & 0xff) * 4 + 0x41beb0) ^ puVar1[2];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x41b6b0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x41bab0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x41b2b0) ^ *((uVar2 & 0xff) * 4 + 0x41beb0) ^ puVar1[3];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x41b6b0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x41bab0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x41b2b0) ^ *((uVar2 & 0xff) * 4 + 0x41beb0) ^ puVar1[4];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x41b6b0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x41bab0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x41b2b0) ^ *((uVar2 & 0xff) * 4 + 0x41beb0) ^ puVar1[5];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x41b6b0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x41bab0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x41b2b0) ^ *((uVar2 & 0xff) * 4 + 0x41beb0) ^ puVar1[6];\n            param_2 = puVar1 + 8;\n            param_3 = param_3 - 0x20;\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x41b6b0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x41bab0) ^\n                    *((uVar2 >> 0x18) * 4 + 0x41b2b0) ^ *((uVar2 & 0xff) * 4 + 0x41beb0) ^ puVar1[7];\n            param_1 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x41b6b0) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x41bab0) ^\n                      *((uVar2 >> 0x18) * 4 + 0x41b2b0) ^ *((uVar2 & 0xff) * 4 + 0x41beb0);\n            uVar3 = uVar3 - 1;\n            puVar1 = param_2;\n        } while (uVar3 != 0);\n    }\n    if (3 < param_3) {\n        uVar3 = param_3 >> 2;\n        do {\n            param_1 = param_1 ^ *param_2;\n            param_2 = param_2 + 1;\n            param_1 = *((param_1 >> 0x10 & 0xff) * 4 + 0x41b6b0) ^ *((param_1 >> 8 & 0xff) * 4 + 0x41bab0) ^\n                      *((param_1 >> 0x18) * 4 + 0x41b2b0) ^ *((param_1 & 0xff) * 4 + 0x41beb0);\n            param_3 = param_3 - 4;\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    for (; param_3 != 0; param_3 = param_3 - 1) {\n        param_1 = param_1 >> 8 ^ *(((*param_2 ^ param_1) & 0xff) * 4 + 0x41b2b0);\n        param_2 = param_2 + 1;\n    }\n    return ~param_1;\n}\n",
        "token_count": 1443
    },
    "004073a0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004073a0(uint8_t **param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t *extraout_EDX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint8_t *arg_ch;\n    int32_t iVar12;\n    uint8_t *puVar13;\n    uint8_t *puStack44;\n    uint uStack40;\n    uint8_t *puStack36;\n    char cStack32;\n    uchar uStack31;\n    uchar uStack30;\n    uchar uStack29;\n    uint32_t uStack28;\n    uint8_t *puStack24;\n    uint8_t *puStack20;\n    uint8_t *puStack16;\n    int32_t iStack12;\n    uint8_t *puStack8;\n    uint8_t *puStack4;\n    uint8_t *puVar4;\n    \n    if ((((param_1 == NULL) || (puVar1 = param_1[7],  puVar1 == NULL)) || (param_1[3] == NULL)) ||\n       ((*param_1 == NULL && (param_1[1] != NULL)))) {\n        return -2;\n    }\n    if (*puVar1 == 0xb) {\n        *puVar1 = 0xc;\n    }\n    puStack24 = param_1[3];\n    puVar7 = param_1[1];\n    uVar11 = puVar1[0xe];\n    arg_ch = *param_1;\n    puStack36 = param_1[4];\n    uVar5 = *puVar1;\n    puVar13 = puVar1[0xf];\n    iStack12 = 0;\n    puStack44 = puVar7;\n    puStack4 = puVar7;\n    puStack20 = puStack36;\n    do {\n        if (0x1c < uVar5) {\n            return -2;\n        }\n    // switch table (29 cases) at 0x4087c4\n        puVar3 = puVar7;\n        switch(*(uVar5 * 4 + 0x4087c4)) {\n        case 0x407427:\n            if (puVar1[2] == 0) {\n                *puVar1 = 0xc;\n            }\n            else {\n                for (; puVar7 = puStack44,  puVar13 < 0x10; puVar13 = puVar13 + 8) {\n                    if (puVar3 == NULL) goto code_r0x004086b9;\n                    uVar9 = *arg_ch;\n                    puVar3 = puVar3 + -1;\n                    arg_ch = arg_ch + 1;\n                    uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                    puStack44 = puVar3;\n                }\n                puStack44 = puVar7;\n                if (((*(puVar1 + 2) & 2) == 0) || (uVar11 != 0x8b1f)) {\n                    puVar1[4] = 0;\n                    if (puVar1[8] != 0) {\n                        *(puVar1[8] + 0x30) = 0xffffffff;\n                    }\n                    if (((*(puVar1 + 2) & 1) == 0) || (((uVar11 & 0xff) * 0x100 + (uVar11 >> 8)) % 0x1f != 0)) {\n                        param_1[6] = 0x41d338;\n                    }\n                    else {\n                        if ((uVar11 & 0xf) == 8) {\n                            uVar5 = uVar11 >> 4;\n                            uVar10 = (uVar5 & 0xf) + 8;\n                            puVar13 = puVar13 + -4;\n                            if (puVar1[9] <= uVar10 && uVar10 != puVar1[9]) goto code_r0x0040864a;\n                            puVar1[5] = 1 << uVar10;\n                            puVar13 = fcn.004024a0(0, 0, 0);\n                            puVar1[6] = puVar13;\n                            param_1[0xc] = puVar13;\n                            *puVar1 = ~(uVar11 >> 0xc) & 2 | 9;\n                            uVar11 = 0;\n                            puVar13 = NULL;\n                            break;\n                        }\n                        param_1[6] = 0x41d338;\n                    }\n                    goto code_r0x00408655;\n                }\n                uVar5 = fcn.00403080(0, 0, 0);\n                puVar1[6] = uVar5;\n                cStack32 = '\\x1f';\n                uStack31 = 0x8b;\n                uVar5 = fcn.00403080(puVar1[6], &cStack32, 2);\n                uVar11 = 0;\n                puVar1[6] = uVar5;\n                puVar13 = NULL;\n                *puVar1 = 1;\n            }\n            break;\n        case 0x407572:\n            for (; puVar13 < 0x10; puVar13 = puVar13 + 8) {\n                puVar3 = puVar7;\n                if (puVar7 == NULL) goto code_r0x004086b9;\n                uVar9 = *arg_ch;\n                puVar7 = puVar7 + -1;\n                arg_ch = arg_ch + 1;\n                uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                puStack44 = puVar7;\n            }\n            puVar1[4] = uVar11;\n            uVar5 = uVar11;\n            if (uVar11 == '\\b') {\n                if ((uVar11 & 0xe000) != 0) goto code_r0x004075ab;\n                if (puVar1[8] != NULL) {\n                    *puVar1[8] = uVar11 >> 8 & 1;\n                }\n                if ((puVar1[4] & 0x200) != 0) {\n                    uStack31 = uVar11 >> 8;\n                    cStack32 = uVar11;\n                    uVar5 = fcn.00403080(puVar1[6], &cStack32, 2);\n                    puVar1[6] = uVar5;\n                    puVar7 = puStack44;\n                }\n                uVar11 = 0;\n                puVar13 = NULL;\n                *puVar1 = 2;\n                do {\n                    puVar3 = puVar7;\n                    if (puVar7 == NULL) goto code_r0x004086b9;\n                    uVar9 = *arg_ch;\n                    uVar8 = puVar13;\n                    puVar7 = puVar7 + -1;\n                    puVar13 = puVar13 + 8;\n                    arg_ch = arg_ch + 1;\n                    uVar11 = uVar11 + (uVar9 << (uVar8 & 0x1f));\n                    puStack44 = puVar7;\njoined_r0x00407609:\n                } while (puVar13 < 0x20);\n                if (puVar1[8] != 0) {\n                    *(puVar1[8] + 4) = uVar11;\n                }\n                if ((puVar1[4] & 0x200) != 0) {\n                    cStack32 = uVar11;\n                    uStack31 = uVar11 >> 8;\n                    uStack30 = uVar11 >> 0x10;\n                    uStack29 = uVar11 >> 0x18;\n                    uVar5 = fcn.00403080(puVar1[6], &cStack32, 4);\n                    puVar1[6] = uVar5;\n                    puVar7 = puStack44;\n                }\n                uVar11 = 0;\n                puVar13 = NULL;\n                *puVar1 = 3;\n                do {\n                    puVar3 = puVar7;\n                    if (puVar7 == NULL) goto code_r0x004086b9;\n                    uVar9 = *arg_ch;\n                    uVar8 = puVar13;\n                    puVar7 = puVar7 + -1;\n                    puVar13 = puVar13 + 8;\n                    arg_ch = arg_ch + 1;\n                    uVar11 = uVar11 + (uVar9 << (uVar8 & 0x1f));\n                    puStack44 = puVar7;\njoined_r0x00407689:\n                } while (puVar13 < 0x10);\n                if (puVar1[8] != 0) {\n                    *(puVar1[8] + 8) = uVar11 & 0xff;\n                    *(puVar1[8] + 0xc) = uVar11 >> 8;\n                }\n                if ((puVar1[4] & 0x200) != 0) {\n                    cStack32 = uVar11;\n                    uStack31 = uVar11 >> 8;\n                    uVar5 = fcn.00403080(puVar1[6], &cStack32, 2);\n                    puVar1[6] = uVar5;\n                    puVar7 = puStack44;\n                }\n                uVar11 = 0;\n                puVar13 = NULL;\n                *puVar1 = 4;\n                goto code_r0x00407705;\n            }\n            goto code_r0x0040864a;\n        case 0x407606:\n            goto joined_r0x00407609;\n        case 0x407686:\n            goto joined_r0x00407689;\n        case 0x407705:\ncode_r0x00407705:\n            if ((puVar1[4] & 0x400) == 0) {\n                if (puVar1[8] != 0) {\n                    *(puVar1[8] + 0x10) = 0;\n                }\n            }\n            else {\n                for (; puVar13 < 0x10; puVar13 = puVar13 + 8) {\n                    puVar3 = puVar7;\n                    if (puVar7 == NULL) goto code_r0x004086b9;\n                    uVar9 = *arg_ch;\n                    puVar7 = puVar7 + -1;\n                    arg_ch = arg_ch + 1;\n                    uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                    puStack44 = puVar7;\n                }\n                puVar1[0x10] = uVar11;\n                if (puVar1[8] != 0) {\n                    *(puVar1[8] + 0x14) = uVar11;\n                }\n                if ((puVar1[4] & 0x200) != 0) {\n                    cStack32 = uVar11;\n                    uStack31 = uVar11 >> 8;\n                    uVar5 = fcn.00403080(puVar1[6], &cStack32, 2);\n                    puVar1[6] = uVar5;\n                    puVar7 = puStack44;\n                }\n                uVar11 = 0;\n                puVar13 = NULL;\n            }\n            *puVar1 = 5;\n        case 0x407788:\n            if ((puVar1[4] & 0x400) == 0) {\ncode_r0x00407833:\n                puVar1[0x10] = 0;\n                *puVar1 = 6;\ncode_r0x00407840:\n                if ((puVar1[4] & 0x800) == 0) {\n                    if (puVar1[8] != 0) {\n                        *(puVar1[8] + 0x1c) = 0;\n                    }\ncode_r0x004078e8:\n                    puVar1[0x10] = 0;\n                    *puVar1 = 7;\ncode_r0x004078f5:\n                    if ((puVar1[4] & 0x1000) == 0) {\n                        if (puVar1[8] != 0) {\n                            *(puVar1[8] + 0x24) = 0;\n                        }\ncode_r0x004079a1:\n                        *puVar1 = 8;\ncode_r0x004079a7:\n                        if ((puVar1[4] & 0x200) != 0) {\n                            for (; puVar13 < 0x10; puVar13 = puVar13 + 8) {\n                                puVar3 = puVar7;\n                                if (puVar7 == NULL) goto code_r0x004086b9;\n                                uVar9 = *arg_ch;\n                                puVar7 = puVar7 + -1;\n                                arg_ch = arg_ch + 1;\n                                uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                                puStack44 = puVar7;\n                            }\n                            if (uVar11 != *(puVar1 + 6)) {\n                                param_1[6] = 0x41d338;\ncode_r0x00408655:\n                                *puVar1 = 0x1b;\n                                break;\n                            }\n                            uVar11 = 0;\n                            puVar13 = NULL;\n                        }\n                        if (puVar1[8] != 0) {\n                            *(puVar1[8] + 0x2c) = puVar1[4] >> 9 & 1;\n                            *(puVar1[8] + 0x30) = 1;\n                        }\n                        puVar7 = fcn.00403080(0, 0, 0);\n                        puVar1[6] = puVar7;\n                        param_1[0xc] = puVar7;\n                        *puVar1 = 0xb;\n                        puVar7 = puStack44;\n                        break;\n                    }\n                    puVar3 = puVar7;\n                    if (puVar7 != NULL) {\n                        puVar3 = NULL;\n                        do {\n                            puVar4 = puVar3 + arg_ch;\n                            uStack28 = *puVar4;\n                            puVar3 = puVar3 + 1;\n                            uVar5 = puVar1[8];\n                            if (((uVar5 != 0) && (puStack8 = *(uVar5 + 0x24),  puStack8 != NULL)) &&\n                               (puVar1[0x10] < *(uVar5 + 0x28))) {\n                                puStack8[puVar1[0x10]] = *puVar4;\n                                puVar1[0x10] = puVar1[0x10] + 1;\n                                puVar7 = puStack44;\n                            }\n                        } while ((uStack28 != 0) && (puVar3 < puVar7));\n                        if ((puVar1[4] & 0x200) != 0) {\n                            uVar5 = fcn.00403080(puVar1[6], arg_ch, puVar3);\n                            puVar1[6] = uVar5;\n                            puVar7 = puStack44;\n                        }\n                        puVar7 = puVar7 + -puVar3;\n                        arg_ch = arg_ch + puVar3;\n                        puVar3 = puVar7;\n                        puStack44 = puVar7;\n                        if (uStack28 == 0) goto code_r0x004079a1;\n                    }\n                }\n                else {\n                    puVar3 = puVar7;\n                    if (puVar7 != NULL) {\n                        puVar3 = NULL;\n                        do {\n                            puVar4 = puVar3 + arg_ch;\n                            uStack28 = *puVar4;\n                            puVar3 = puVar3 + 1;\n                            uVar5 = puVar1[8];\n                            if (((uVar5 != 0) && (puStack8 = *(uVar5 + 0x1c),  puStack8 != NULL)) &&\n                               (puVar1[0x10] < *(uVar5 + 0x20))) {\n                                puStack8[puVar1[0x10]] = *puVar4;\n                                puVar1[0x10] = puVar1[0x10] + 1;\n                                puVar7 = puStack44;\n                            }\n                        } while ((uStack28 != 0) && (puVar3 < puVar7));\n                        if ((puVar1[4] & 0x200) != 0) {\n                            uVar5 = fcn.00403080(puVar1[6], arg_ch, puVar3);\n                            puVar1[6] = uVar5;\n                            puVar7 = puStack44;\n                        }\n                        puVar7 = puVar7 + -puVar3;\n                        arg_ch = arg_ch + puVar3;\n                        puVar3 = puVar7;\n                        puStack44 = puVar7;\n                        if (uStack28 == 0) goto code_r0x004078e8;\n                    }\n                }\n            }\n            else {\n                puVar3 = puVar1[0x10];\n                if (puVar7 < puVar1[0x10]) {\n                    puVar3 = puVar7;\n                }\n                if (puVar3 != NULL) {\n                    if ((puVar1[8] != 0) && (puStack8 = *(puVar1[8] + 0x10),  puStack8 != NULL)) {\n                        uStack28 = *(puVar1[8] + 0x14) - puVar1[0x10];\n                        puVar7 = puVar3;\n                        if (*(puVar1[8] + 0x18) < puVar3 + uStack28) {\n                            puVar7 = *(puVar1[8] + 0x18) + -uStack28;\n                        }\n                        fcn.0040b350(puStack8 + uStack28, arg_ch, puVar7);\n                        puVar7 = puStack44;\n                    }\n                    if ((puVar1[4] & 0x200) != 0) {\n                        uVar5 = fcn.00403080(puVar1[6], arg_ch, puVar3);\n                        puVar1[6] = uVar5;\n                        puVar7 = puStack44;\n                    }\n                    puVar7 = puVar7 + -puVar3;\n                    arg_ch = arg_ch + puVar3;\n                    puVar1[0x10] = puVar1[0x10] - puVar3;\n                    puStack44 = puVar7;\n                }\n                puVar3 = puVar7;\n                if (puVar1[0x10] == 0) goto code_r0x00407833;\n            }\ncode_r0x004086b9:\n            param_1[3] = puStack24;\n            param_1[4] = puStack36;\n            *param_1 = arg_ch;\n            param_1[1] = puVar3;\n            puVar1[0xe] = uVar11;\n            puVar1[0xf] = puVar13;\n            if (((puVar1[10] == 0) && ((0x17 < *puVar1 || (puStack20 == param_1[4])))) ||\n               (iVar6 = fcn.004072b0(),  iVar6 == 0)) {\n                iVar12 = puStack4 - param_1[1];\n                iVar6 = puStack20 - param_1[4];\n                param_1[2] = param_1[2] + iVar12;\n                param_1[5] = param_1[5] + iVar6;\n                puVar1[7] = puVar1[7] + iVar6;\n                if ((puVar1[2] != 0) && (iVar6 != 0)) {\n                    if (puVar1[4] == 0) {\n                        puVar7 = fcn.004024a0(puVar1[6], param_1[3] - iVar6, iVar6);\n                    }\n                    else {\n                        puVar7 = fcn.00403080(puVar1[6], param_1[3] - iVar6);\n                    }\n                    puVar1[6] = puVar7;\n                    param_1[0xc] = puVar7;\n                }\n                param_1[0xb] = (-(puVar1[1] != 0) & 0x40) + ((*puVar1 != 0xb) - 1 & 0x80) + puVar1[0xf];\n                if (((iVar12 != 0) || (iVar6 != 0)) && (param_2 != 4)) {\n                    return iStack12;\n                }\n                if (iStack12 != 0) {\n                    return iStack12;\n                }\n                return -5;\n            }\n            *puVar1 = 0x1c;\ncode_r0x00408701:\n            return -4;\n        case 0x407840:\n            goto code_r0x00407840;\n        case 0x4078f5:\n            goto code_r0x004078f5;\n        case 0x4079a7:\n            goto code_r0x004079a7;\n        case 0x407a35:\n            for (; puVar13 < 0x20; puVar13 = puVar13 + 8) {\n                puVar3 = puVar7;\n                if (puVar7 == NULL) goto code_r0x004086b9;\n                uVar9 = *arg_ch;\n                puVar7 = puVar7 + -1;\n                arg_ch = arg_ch + 1;\n                uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                puStack44 = puVar7;\n            }\n            puVar13 = ((uVar11 & 0xff00) + uVar11 * 0x10000) * 0x100 + (uVar11 >> 8 & 0xff00) + (uVar11 >> 0x18);\n            puVar1[6] = puVar13;\n            param_1[0xc] = puVar13;\n            uVar11 = 0;\n            puVar13 = NULL;\n            *puVar1 = 10;\n        case 0x407a98:\n            if (puVar1[3] == 0) {\n                param_1[3] = puStack24;\n                *param_1 = arg_ch;\n                param_1[4] = puStack36;\n                param_1[1] = puVar7;\n                puVar1[0xf] = puVar13;\n                puVar1[0xe] = uVar11;\n                return 2;\n            }\n            puVar7 = fcn.004024a0(0, 0, 0);\n            puVar1[6] = puVar7;\n            param_1[0xc] = puVar7;\n            *puVar1 = 0xb;\n            puVar7 = puStack44;\ncode_r0x00407ac4:\n            puVar3 = puVar7;\n            if (param_2 != 5) {\ncode_r0x00407acf:\n                if (puVar1[1] == 0) {\n                    for (; puVar13 < 0x3; puVar13 = puVar13 + 8) {\n                        puVar3 = puVar7;\n                        if (puVar7 == NULL) goto code_r0x004086b9;\n                        uVar9 = *arg_ch;\n                        puVar7 = puVar7 + -1;\n                        arg_ch = arg_ch + 1;\n                        uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                        puStack44 = puVar7;\n                    }\n                    puVar1[1] = uVar11 & 1;\n    // switch table (4 cases) at 0x408838\n                    switch(uVar11 >> 1 & 3) {\n                    case 0:\n                        uVar11 = uVar11 >> 3;\n                        *puVar1 = 0xd;\n                        puVar13 = puVar13 + -3;\n                        break;\n                    case 1:\n                        fcn.00407290();\n                        uVar11 = uVar11 >> 3;\n                        *puVar1 = 0x12;\n                        puVar13 = puVar13 + -3;\n                        puVar7 = extraout_EDX;\n                        break;\n                    case 2:\n                        uVar11 = uVar11 >> 3;\n                        *puVar1 = 0xf;\n                        puVar13 = puVar13 + -3;\n                        break;\n                    case 3:\n                        param_1[6] = 0x41d338;\n                        *puVar1 = 0x1b;\n                    default:\n                        uVar11 = uVar11 >> 3;\n                        puVar13 = puVar13 + -3;\n                    }\n                }\n                else {\n                    uVar11 = uVar11 >> (puVar13 & 7);\n                    puVar13 = puVar13 + -(puVar13 & 7);\n                    *puVar1 = 0x18;\n                }\n                break;\n            }\n            goto code_r0x004086b9;\n        case 0x407ac4:\n            goto code_r0x00407ac4;\n        case 0x407acf:\n            goto code_r0x00407acf;\n        case 0x407b82:\n            uVar11 = uVar11 >> (puVar13 & 7);\n            for (puVar13 = puVar13 + -(puVar13 & 7); puVar13 < 0x20; puVar13 = puVar13 + 8) {\n                puVar3 = puVar7;\n                if (puVar7 == NULL) goto code_r0x004086b9;\n                uVar9 = *arg_ch;\n                puVar7 = puVar7 + -1;\n                arg_ch = arg_ch + 1;\n                uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                puStack44 = puVar7;\n            }\n            uVar5 = uVar11 & 0xffff;\n            if (uVar5 == ~uVar11 >> 0x10) {\n                uVar11 = 0;\n                puVar1[0x10] = uVar5;\n                puVar13 = NULL;\n                *puVar1 = 0xe;\n                goto code_r0x00407bdf;\n            }\n            param_1[6] = 0x41d338;\n            goto code_r0x00408655;\n        case 0x407bdf:\ncode_r0x00407bdf:\n            uStack40 = puVar1[0x10];\n            if (uStack40 != NULL) {\n                if (puVar7 < uStack40) {\n                    uStack40 = puVar7;\n                }\n                if (puStack36 < uStack40) {\n                    uStack40 = puStack36;\n                }\n                puVar3 = puVar7;\n                if (uStack40 == NULL) goto code_r0x004086b9;\n                fcn.0040b350(puStack24, arg_ch, uStack40);\n                puStack36 = puStack36 + -uStack40;\n                puStack24 = puStack24 + uStack40;\n                arg_ch = arg_ch + uStack40;\n                puVar1[0x10] = puVar1[0x10] - uStack40;\n                puVar7 = puStack44 + -uStack40;\n                puStack44 = puStack44 + -uStack40;\n                break;\n            }\n            goto code_r0x00408222;\n        case 0x407c3f:\n            for (; puVar13 < 0xe; puVar13 = puVar13 + 8) {\n                puVar3 = puVar7;\n                if (puVar7 == NULL) goto code_r0x004086b9;\n                uVar9 = *arg_ch;\n                puVar7 = puVar7 + -1;\n                arg_ch = arg_ch + 1;\n                uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                puStack44 = puVar7;\n            }\n            puVar1[0x18] = (uVar11 & 0x1f) + 0x101;\n            uVar10 = uVar11 >> 10;\n            uVar5 = (uVar11 >> 5 & 0x1f) + 1;\n            uVar11 = uVar11 >> 0xe;\n            puVar13 = puVar13 + -0xe;\n            puVar1[0x19] = uVar5;\n            puVar1[0x17] = (uVar10 & 0xf) + 4;\n            if ((0x11e < puVar1[0x18]) || (0x1e < uVar5)) {\ncode_r0x004075ab:\n                param_1[6] = 0x41d338;\n                goto code_r0x00408655;\n            }\n            puVar1[0x1a] = 0;\n            *puVar1 = 0x10;\n        case 0x407cb5:\n            if (puVar1[0x1a] < puVar1[0x17]) {\n                do {\n                    for (; puVar13 < 0x3; puVar13 = puVar13 + 8) {\n                        puVar3 = puVar7;\n                        if (puVar7 == NULL) goto code_r0x004086b9;\n                        uVar9 = *arg_ch;\n                        puVar7 = puVar7 + -1;\n                        arg_ch = arg_ch + 1;\n                        uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                        puStack44 = puVar7;\n                    }\n                    *(puVar1 + *(puVar1[0x1a] * 2 + 0x41e468) * 2 + 0x70) = uVar11 & 7;\n                    puVar1[0x1a] = puVar1[0x1a] + 1;\n                    uVar11 = uVar11 >> 3;\n                    puVar13 = puVar13 + -3;\n                } while (puVar1[0x1a] < puVar1[0x17]);\n            }\n            uVar5 = puVar1[0x1a];\n            while (uVar5 < 0x13) {\n                *(puVar1 + *(puVar1[0x1a] * 2 + 0x41e468) * 2 + 0x70) = 0;\n                puVar1[0x1a] = puVar1[0x1a] + 1;\n                uVar5 = puVar1[0x1a];\n            }\n            puVar1[0x1b] = puVar1 + 0x14c;\n            puVar1[0x13] = puVar1 + 0x14c;\n            puVar1[0x15] = 7;\n            iStack12 = fcn.00408c60(0, puVar1 + 0x1c, 0x13, puVar1 + 0x1b, puVar1 + 0x15, puVar1 + 0xbc);\n            puVar7 = puStack44;\n            uVar5 = uVar11;\n            if (iStack12 != 0) {\ncode_r0x0040864a:\n                param_1[6] = 0x41d338;\n                uVar11 = uVar5;\n                goto code_r0x00408655;\n            }\n            puVar1[0x1a] = 0;\n            *puVar1 = 0x11;\ncode_r0x00407d83:\n            if (puVar1[0x1a] < puVar1[0x19] + puVar1[0x18]) {\n                do {\n                    uVar5 = *(puVar1[0x13] + ((1 << (puVar1[0x15] & 0x1f)) - 1U & uVar11) * 4);\n                    if (puVar13 < (uVar5 >> 8 & 0xff)) {\n                        do {\n                            puVar3 = puVar7;\n                            if (puVar7 == NULL) goto code_r0x004086b9;\n                            uVar9 = puVar13;\n                            puVar7 = puVar7 + -1;\n                            puVar13 = puVar13 + 8;\n                            uVar11 = uVar11 + (*arg_ch << (uVar9 & 0x1f));\n                            arg_ch = arg_ch + 1;\n                            uVar5 = *(puVar1[0x13] + ((1 << (puVar1[0x15] & 0x1f)) - 1U & uVar11) * 4);\n                            puStack44 = puVar7;\n                        } while (puVar13 < (uVar5 >> 8 & 0xff));\n                    }\n                    uStack40._2_2_ = uVar5 >> 0x10;\n                    if (uVar5 >> 0x10 < 0x10) {\n                        if (puVar13 < (uVar5 >> 8 & 0xff)) {\n                            do {\n                                puVar3 = puVar7;\n                                if (puVar7 == NULL) goto code_r0x004086b9;\n                                uVar9 = *arg_ch;\n                                uVar8 = puVar13;\n                                puVar7 = puVar7 + -1;\n                                puVar13 = puVar13 + 8;\n                                arg_ch = arg_ch + 1;\n                                uVar11 = uVar11 + (uVar9 << (uVar8 & 0x1f));\n                                puStack44 = puVar7;\n                            } while (puVar13 < (uVar5 >> 8 & 0xff));\n                        }\n                        uVar5 = uVar5 >> 8 & 0xff;\n                        uVar11 = uVar11 >> (uVar5 & 0x1f);\n                        puVar13 = puVar13 + -uVar5;\n                        *(puVar1 + puVar1[0x1a] * 2 + 0x70) = uStack40._2_2_;\n                        puVar1[0x1a] = puVar1[0x1a] + 1;\n                    }\n                    else {\n                        if (uStack40._2_2_ == 0x10) {\n                            puStack16 = uVar5 >> 8 & 0xff;\n                            if (puVar13 < puStack16 + 2) {\n                                do {\n                                    puVar3 = puVar7;\n                                    if (puVar7 == NULL) goto code_r0x004086b9;\n                                    uVar9 = puVar13;\n                                    puVar7 = puVar7 + -1;\n                                    puVar13 = puVar13 + 8;\n                                    uVar11 = uVar11 + (*arg_ch << (uVar9 & 0x1f));\n                                    arg_ch = arg_ch + 1;\n                                    puStack44 = puVar7;\n                                } while (puVar13 < puStack16 + 2);\n                            }\n                            uVar5 = uVar11 >> (puStack16 & 0x1f);\n                            puVar13 = puVar13 + -puStack16;\n                            if (puVar1[0x1a] == 0) goto code_r0x0040864a;\n                            uStack28 = *(puVar1 + puVar1[0x1a] * 2 + 0x6e);\n                            uStack40 = (uVar5 & 3) + 3;\n                            uVar11 = uVar5 >> 2;\n                            puVar13 = puVar13 + -2;\n                        }\n                        else {\n                            puStack16 = uVar5 >> 8 & 0xff;\n                            if (uStack40._2_2_ == 0x11) {\n                                if (puVar13 < puStack16 + 3) {\n                                    do {\n                                        puVar3 = puVar7;\n                                        if (puVar7 == NULL) goto code_r0x004086b9;\n                                        uVar9 = puVar13;\n                                        puVar7 = puVar7 + -1;\n                                        puVar13 = puVar13 + 8;\n                                        uVar11 = uVar11 + (*arg_ch << (uVar9 & 0x1f));\n                                        arg_ch = arg_ch + 1;\n                                        puStack44 = puVar7;\n                                    } while (puVar13 < puStack16 + 3);\n                                }\n                                uVar11 = uVar11 >> (puStack16 & 0x1f);\n                                uStack40 = (uVar11 & 7) + 3;\n                                uVar11 = uVar11 >> 3;\n                                iVar6 = -3;\n                            }\n                            else {\n                                if (puVar13 < puStack16 + 7) {\n                                    do {\n                                        puVar3 = puVar7;\n                                        if (puVar7 == NULL) goto code_r0x004086b9;\n                                        uVar9 = puVar13;\n                                        puVar7 = puVar7 + -1;\n                                        puVar13 = puVar13 + 8;\n                                        uVar11 = uVar11 + (*arg_ch << (uVar9 & 0x1f));\n                                        arg_ch = arg_ch + 1;\n                                        puStack44 = puVar7;\n                                    } while (puVar13 < puStack16 + 7);\n                                }\n                                uVar11 = uVar11 >> (puStack16 & 0x1f);\n                                uStack40 = (uVar11 & 0x7f) + 0xb;\n                                uVar11 = uVar11 >> 7;\n                                iVar6 = -7;\n                            }\n                            puVar13 = puVar13 + (iVar6 - puStack16);\n                            uStack28 = 0;\n                        }\n                        if (puVar1[0x19] + puVar1[0x18] < puVar1[0x1a] + uStack40) goto code_r0x004075ab;\n                        for (; uStack40 != NULL; uStack40 = uStack40 + -1) {\n                            *(puVar1 + puVar1[0x1a] * 2 + 0x70) = uStack28;\n                            puVar1[0x1a] = puVar1[0x1a] + 1;\n                        }\n                    }\n                } while (puVar1[0x1a] < puVar1[0x19] + puVar1[0x18]);\n            }\n            if (*puVar1 == 0x1b) break;\n            puVar1[0x1b] = puVar1 + 0x14c;\n            puVar1[0x13] = puVar1 + 0x14c;\n            puVar1[0x15] = 9;\n            iStack12 = fcn.00408c60(1, puVar1 + 0x1c, puVar1[0x18], puVar1 + 0x1b, puVar1 + 0x15, puVar1 + 0xbc);\n            puVar7 = puStack44;\n            if (iStack12 == 0) {\n                puVar1[0x14] = puVar1[0x1b];\n                puVar1[0x16] = 6;\n                iStack12 = fcn.00408c60(2, puVar1 + puVar1[0x18] * 2 + 0x70, puVar1[0x19], puVar1 + 0x1b, puVar1 + 0x16\n                                        , puVar1 + 0xbc);\n                if (iStack12 != 0) {\n                    param_1[6] = 0x41d338;\n                    goto code_r0x00408655;\n                }\n                *puVar1 = 0x12;\ncode_r0x0040805f:\n                if ((0x5 < puVar7) && (0x101 < puStack36)) {\n                    param_1[4] = puStack36;\n                    param_1[3] = puStack24;\n                    *param_1 = arg_ch;\n                    param_1[1] = puStack44;\n                    puVar1[0xe] = uVar11;\n                    puVar1[0xf] = puVar13;\n                    fcn.00406ca0(param_1, puStack20);\n                    puStack36 = param_1[4];\n                    puStack24 = param_1[3];\n                    arg_ch = *param_1;\n                    uVar11 = puVar1[0xe];\n                    puVar13 = puVar1[0xf];\n                    puVar7 = param_1[1];\n                    puStack44 = param_1[1];\n                    break;\n                }\n                puVar4 = *(puVar1[0x13] + ((1 << (puVar1[0x15] & 0x1f)) - 1U & uVar11) * 4);\n                if (puVar13 < (puVar4 >> 8 & 0xff)) {\n                    do {\n                        puVar3 = puVar7;\n                        if (puVar7 == NULL) goto code_r0x004086b9;\n                        uVar9 = puVar13;\n                        puVar7 = puVar7 + -1;\n                        puVar13 = puVar13 + 8;\n                        uVar11 = uVar11 + (*arg_ch << (uVar9 & 0x1f));\n                        arg_ch = arg_ch + 1;\n                        puVar4 = *(puVar1[0x13] + ((1 << (puVar1[0x15] & 0x1f)) - 1U & uVar11) * 4);\n                        puStack44 = puVar7;\n                    } while (puVar13 < (puVar4 >> 8 & 0xff));\n                }\n                cVar2 = puVar4;\n                uStack40 = puVar4;\n                if ((cVar2 != '\\0') && ((puVar4 & 0xf0) == 0)) {\n                    puStack8 = puVar4 >> 8;\n                    uStack28 = puStack8 & 0xff;\n                    uStack40 = *(puVar1[0x13] +\n                                ((((1 << (cVar2 + uStack28 & 0x1f)) - 1U & uVar11) >> (uStack28 & 0x1f)) +\n                                (puVar4 >> 0x10)) * 4);\n                    puStack8._0_1_ = puVar4 >> 8;\n                    puStack16 = puVar4;\n                    if (puVar13 < (uStack40 >> 8 & 0xff) + (puStack8 & 0xff)) {\n                        do {\n                            puVar3 = puVar7;\n                            if (puVar7 == NULL) goto code_r0x004086b9;\n                            uVar9 = puVar13;\n                            puVar7 = puVar7 + -1;\n                            puVar13 = puVar13 + 8;\n                            uVar11 = uVar11 + (*arg_ch << (uVar9 & 0x1f));\n                            uStack28 = puVar4 >> 8 & 0xff;\n                            arg_ch = arg_ch + 1;\n                            uStack40 = *(puVar1[0x13] +\n                                        ((((1 << (cVar2 + uStack28 & 0x1f)) - 1U & uVar11) >> (uStack28 & 0x1f)) +\n                                        (puVar4 >> 0x10)) * 4);\n                            puStack44 = puVar7;\n                        } while (puVar13 < (uStack40 >> 8 & 0xff) + uStack28);\n                    }\n                    uVar11 = uVar11 >> (puStack8 & 0x1f);\n                    puVar13 = puVar13 + -puStack8;\n                }\n                uStack28 = uStack40 >> 8 & 0xff;\n                uVar11 = uVar11 >> (uStack28 & 0x1f);\n                puVar13 = puVar13 + -uStack28;\n                puVar1[0x10] = uStack40 >> 0x10;\n                if (uStack40 == '\\0') {\n                    *puVar1 = 0x17;\n                    break;\n                }\n                if ((uStack40 & 0x20) != 0) {\ncode_r0x00408222:\n                    *puVar1 = 0xb;\n                    break;\n                }\n                if ((uStack40 & 0x40) != 0) {\n                    param_1[6] = 0x41d338;\n                    goto code_r0x00408655;\n                }\n                puVar1[0x12] = uStack40 & 0xf;\n                *puVar1 = 0x13;\ncode_r0x00408250:\n                if (puVar1[0x12] != NULL) {\n                    if (puVar13 < puVar1[0x12]) {\n                        do {\n                            puVar3 = puVar7;\n                            if (puVar7 == NULL) goto code_r0x004086b9;\n                            uVar9 = *arg_ch;\n                            uVar8 = puVar13;\n                            puVar7 = puVar7 + -1;\n                            puVar13 = puVar13 + 8;\n                            arg_ch = arg_ch + 1;\n                            uVar11 = uVar11 + (uVar9 << (uVar8 & 0x1f));\n                            puStack44 = puVar7;\n                        } while (puVar13 < puVar1[0x12]);\n                    }\n                    uVar9 = puVar1[0x12];\n                    puVar1[0x10] = puVar1[0x10] + ((1 << (uVar9 & 0x1f)) - 1U & uVar11);\n                    uVar11 = uVar11 >> (uVar9 & 0x1f);\n                    puVar13 = puVar13 + -puVar1[0x12];\n                }\n                *puVar1 = 0x14;\ncode_r0x0040829a:\n                puVar4 = *(puVar1[0x14] + ((1 << (puVar1[0x16] & 0x1f)) - 1U & uVar11) * 4);\n                if (puVar13 < (puVar4 >> 8 & 0xff)) {\n                    do {\n                        puVar3 = puVar7;\n                        if (puVar7 == NULL) goto code_r0x004086b9;\n                        uVar9 = puVar13;\n                        puVar7 = puVar7 + -1;\n                        puVar13 = puVar13 + 8;\n                        uVar11 = uVar11 + (*arg_ch << (uVar9 & 0x1f));\n                        arg_ch = arg_ch + 1;\n                        puVar4 = *(puVar1[0x14] + ((1 << (puVar1[0x16] & 0x1f)) - 1U & uVar11) * 4);\n                        puStack44 = puVar7;\n                    } while (puVar13 < (puVar4 >> 8 & 0xff));\n                }\n                uStack40 = puVar4;\n                if ((puVar4 & 0xf0) == 0) {\n                    puStack8 = puVar4 >> 8;\n                    uStack28 = puStack8 & 0xff;\n                    uStack40 = *(puVar1[0x14] +\n                                ((((1 << (puVar4 + uStack28 & 0x1f)) - 1U & uVar11) >> (uStack28 & 0x1f)) +\n                                (puVar4 >> 0x10)) * 4);\n                    puStack8._0_1_ = puVar4 >> 8;\n                    puStack16 = puVar4;\n                    if (puVar13 < (uStack40 >> 8 & 0xff) + (puStack8 & 0xff)) {\n                        do {\n                            puVar3 = puVar7;\n                            if (puVar7 == NULL) goto code_r0x004086b9;\n                            uVar9 = puVar13;\n                            puVar7 = puVar7 + -1;\n                            puVar13 = puVar13 + 8;\n                            uVar11 = uVar11 + (*arg_ch << (uVar9 & 0x1f));\n                            uStack28 = puVar4 >> 8 & 0xff;\n                            arg_ch = arg_ch + 1;\n                            uStack40 = *(puVar1[0x14] +\n                                        ((((1 << (puVar4 + uStack28 & 0x1f)) - 1U & uVar11) >> (uStack28 & 0x1f)) +\n                                        (puVar4 >> 0x10)) * 4);\n                            puStack44 = puVar7;\n                        } while (puVar13 < (uStack40 >> 8 & 0xff) + uStack28);\n                    }\n                    uVar11 = uVar11 >> (puStack8 & 0x1f);\n                    puVar13 = puVar13 + -puStack8;\n                }\n                uStack28 = uStack40 >> 8 & 0xff;\n                uVar11 = uVar11 >> (uStack28 & 0x1f);\n                puVar13 = puVar13 + -uStack28;\n                if ((uStack40 & 0x40) != 0) {\n                    param_1[6] = 0x41d338;\n                    goto code_r0x00408655;\n                }\n                puVar1[0x11] = uStack40 >> 0x10;\n                puVar1[0x12] = uStack40 & 0xf;\n                *puVar1 = 0x15;\ncode_r0x004083f9:\n                if (puVar1[0x12] != NULL) {\n                    if (puVar13 < puVar1[0x12]) {\n                        do {\n                            puVar3 = puVar7;\n                            if (puVar7 == NULL) goto code_r0x004086b9;\n                            uVar9 = *arg_ch;\n                            uVar8 = puVar13;\n                            puVar7 = puVar7 + -1;\n                            puVar13 = puVar13 + 8;\n                            arg_ch = arg_ch + 1;\n                            uVar11 = uVar11 + (uVar9 << (uVar8 & 0x1f));\n                            puStack44 = puVar7;\n                        } while (puVar13 < puVar1[0x12]);\n                    }\n                    uVar9 = puVar1[0x12];\n                    puVar1[0x11] = puVar1[0x11] + ((1 << (uVar9 & 0x1f)) - 1U & uVar11);\n                    uVar11 = uVar11 >> (uVar9 & 0x1f);\n                    puVar13 = puVar13 + -puVar1[0x12];\n                }\n                if (puStack20 + (puVar1[0xb] - puStack36) <= puVar1[0x11] &&\n                    puVar1[0x11] != puStack20 + (puVar1[0xb] - puStack36)) {\n                    param_1[6] = 0x41d338;\n                    goto code_r0x00408655;\n                }\n                *puVar1 = 0x16;\ncode_r0x0040845e:\n                puVar3 = puVar7;\n                if (puStack36 != NULL) {\n                    uVar5 = puVar1[0x11];\n                    if (puStack20 - puStack36 < uVar5) {\n                        uStack40 = uVar5 - (puStack20 - puStack36);\n                        if (puVar1[0xc] < uStack40) {\n                            uStack40 = uStack40 + -puVar1[0xc];\n                            puStack16 = (puVar1[0xd] + puVar1[10]) - uStack40;\n                        }\n                        else {\n                            puStack16 = (puVar1[0xd] - uStack40) + puVar1[0xc];\n                        }\n                        puStack8 = puVar1[0x10];\n                        if (puStack8 < uStack40) goto code_r0x004084c5;\n                    }\n                    else {\n                        puStack16 = puStack24 + -uVar5;\n                        puStack8 = puVar1[0x10];\ncode_r0x004084c5:\n                        uStack40 = puStack8;\n                    }\n                    if (puStack36 < uStack40) {\n                        uStack40 = puStack36;\n                    }\n                    puStack36 = puStack36 + -uStack40;\n                    puVar1[0x10] = puStack8 - uStack40;\n                    do {\n                        uVar9 = *puStack16;\n                        puStack16 = puStack16 + 1;\n                        *puStack24 = uVar9;\n                        puStack24 = puStack24 + 1;\n                        uStack40 = uStack40 + -1;\n                    } while (uStack40 != NULL);\n                    if (puVar1[0x10] == 0) {\n                        *puVar1 = 0x12;\n                    }\n                    break;\n                }\n                goto code_r0x004086b9;\n            }\n            param_1[6] = 0x41d338;\n            goto code_r0x00408655;\n        case 0x407d83:\n            goto code_r0x00407d83;\n        case 0x40805f:\n            goto code_r0x0040805f;\n        case 0x408250:\n            goto code_r0x00408250;\n        case 0x40829a:\n            goto code_r0x0040829a;\n        case 0x4083f9:\n            goto code_r0x004083f9;\n        case 0x40845e:\n            goto code_r0x0040845e;\n        case 0x40851d:\n            if (puStack36 == NULL) goto code_r0x004086b9;\n            *puStack24 = *(puVar1 + 0x10);\n            puStack24 = puStack24 + 1;\n            puStack36 = puStack36 + -1;\n            *puVar1 = 0x12;\n            break;\n        case 0x408545:\n            if (puVar1[2] != 0) {\n                for (; puVar13 < 0x20; puVar13 = puVar13 + 8) {\n                    puVar3 = puVar7;\n                    if (puVar7 == NULL) goto code_r0x004086b9;\n                    uVar9 = *arg_ch;\n                    puVar7 = puVar7 + -1;\n                    arg_ch = arg_ch + 1;\n                    uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                    puStack44 = puVar7;\n                }\n                puStack20 = puStack20 - puStack36;\n                param_1[5] = param_1[5] + puStack20;\n                puVar1[7] = puVar1[7] + puStack20;\n                if (puStack20 != NULL) {\n                    if (puVar1[4] == 0) {\n                        puVar7 = fcn.004024a0(puVar1[6], puStack24 - puStack20, puStack20);\n                    }\n                    else {\n                        puVar7 = fcn.00403080();\n                    }\n                    puVar1[6] = puVar7;\n                    param_1[0xc] = puVar7;\n                    puVar7 = puStack44;\n                }\n                uVar5 = uVar11;\n                if (puVar1[4] == 0) {\n                    uVar5 = ((uVar11 & 0xff00) + uVar11 * 0x10000) * 0x100 + (uVar11 >> 8 & 0xff00) + (uVar11 >> 0x18);\n                }\n                puStack20 = puStack36;\n                if (uVar5 != puVar1[6]) {\n                    param_1[6] = 0x41d338;\n                    goto code_r0x00408655;\n                }\n                uVar11 = 0;\n                puVar13 = NULL;\n            }\n            *puVar1 = 0x19;\n        case 0x40860c:\n            if ((puVar1[2] == 0) || (puVar1[4] == 0)) {\ncode_r0x004086a1:\n                *puVar1 = 0x1a;\ncode_r0x004086a7:\n                iStack12 = 1;\n                puVar3 = puVar7;\n                goto code_r0x004086b9;\n            }\n            for (; puVar13 < 0x20; puVar13 = puVar13 + 8) {\n                puVar3 = puVar7;\n                if (puVar7 == NULL) goto code_r0x004086b9;\n                uVar9 = *arg_ch;\n                puVar7 = puVar7 + -1;\n                arg_ch = arg_ch + 1;\n                uVar11 = uVar11 + (uVar9 << (puVar13 & 0x1f));\n                puStack44 = puVar7;\n            }\n            uVar5 = uVar11;\n            if (uVar11 == puVar1[7]) {\n                uVar11 = 0;\n                puVar13 = NULL;\n                goto code_r0x004086a1;\n            }\n            goto code_r0x0040864a;\n        case 0x4086a7:\n            goto code_r0x004086a7;\n        case 0x4086b1:\n            iStack12 = -3;\n            goto code_r0x004086b9;\n        case 0x408701:\n            goto code_r0x00408701;\n        }\n        uVar5 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 13005
    },
    "004017e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004017e0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *arg_ch;\n    \n    if (param_1 == NULL) {\n        fcn.00401000(0x80070057);\n    }\n    arg_ch = param_1;\n    if (param_1 < 0) {\n        fcn.00401000(0x80070057);\n        arg_ch = extraout_ECX;\n    }\n    if (param_2 == 0) {\n        fcn.00401000(0x80070057);\n        arg_ch = extraout_ECX_00;\n    }\n    iVar1 = *param_1;\n    if (iVar1 == param_2) goto code_r0x00401858;\n    if (param_2 < arg_ch) {\n        iVar1 = fcn.0040b783(iVar1, arg_ch, 2);\n        if (iVar1 != 0) goto code_r0x00401869;\n        iVar1 = fcn.00401000(0x8007000e);\n    }\n    fcn.0040b6b5(iVar1);\n    do {\n        *param_1 = param_2;\n        while( true ) {\n            if (*param_1 != 0) {\n                return;\n            }\n            fcn.00401000(0x8007000e);\n            arg_ch = extraout_ECX_01;\ncode_r0x00401858:\n            if (arg_ch <= param_2) break;\n            iVar1 = fcn.0040b743(arg_ch, 2);\ncode_r0x00401869:\n            *param_1 = iVar1;\n        }\n    } while( true );\n}\n",
        "token_count": 419
    },
    "00408c60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00408c60(int32_t param_1, int32_t param_2, uint32_t param_3, int32_t *param_4, uint32_t *param_5, \n                 uint16_t *param_6)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    uint16_t *puVar15;\n    uint uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    int32_t iStack108;\n    uint16_t *puStack104;\n    uint32_t uStack100;\n    int32_t iStack96;\n    uint16_t *puStack92;\n    uint16_t *puStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint16_t auStack32 [16];\n    \n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack40 = 0;\n    uStack36 = 0;\n    uVar3 = 0;\n    if (param_3 != 0) {\n        do {\n            piVar1 = &uStack64 + *(param_2 + uVar3 * 2) * 2;\n            *piVar1 = *piVar1 + 1;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < param_3);\n    }\n    uVar3 = 0xf;\n    do {\n        if (*(&uStack64 + uVar3 * 2) != 0) break;\n        uVar3 = uVar3 - 1;\n    } while (uVar3 != 0);\n    uStack120 = *param_5;\n    if (uVar3 < *param_5) {\n        uStack120 = uVar3;\n    }\n    if (uVar3 == 0) {\n        **param_4 = 0x140;\n        *param_4 = *param_4 + 4;\n        **param_4 = 0x140;\n        *param_4 = *param_4 + 4;\n        *param_5 = 1;\n        return 0;\n    }\n    uStack116 = 1;\n    do {\n        if (*(&uStack64 + uStack116 * 2) != 0) break;\n        if (*(&uStack64 + uStack116 * 2 + 2) != 0) {\n            uStack116 = uStack116 + 1;\n            break;\n        }\n        if (*(&uStack60 + uStack116 * 2) != 0) {\n            uStack116 = uStack116 + 2;\n            break;\n        }\n        if (*(&uStack60 + uStack116 * 2 + 2) != 0) {\n            uStack116 = uStack116 + 3;\n            break;\n        }\n        if (*(&uStack56 + uStack116 * 2) != 0) {\n            uStack116 = uStack116 + 4;\n            break;\n        }\n        uStack116 = uStack116 + 5;\n    } while (uStack116 < 0x10);\n    if (uStack120 < uStack116) {\n        uStack120 = uStack116;\n    }\n    iVar11 = 1;\n    uVar4 = 1;\n    do {\n        iVar11 = iVar11 * 2 - *(&uStack64 + uVar4 * 2);\n        if (iVar11 < 0) {\n            return 0xffffffff;\n        }\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x10);\n    if ((0 < iVar11) && ((param_1 == 0 || (uVar3 != 1)))) {\n        return 0xffffffff;\n    }\n    auStack32[1] = 0;\n    uVar4 = 2;\n    do {\n        uVar5 = uVar4 + 2;\n        *(auStack32 + uVar4 + 2) = *(auStack32 + uVar4) + *(&uStack64 + uVar4);\n        uVar4 = uVar5;\n    } while (uVar5 < 0x1e);\n    uVar4 = 0;\n    if (param_3 != 0) {\n        do {\n            if (*(param_2 + uVar4 * 2) != 0) {\n                param_6[auStack32[*(param_2 + uVar4 * 2)]] = uVar4;\n                auStack32[*(param_2 + uVar4 * 2)] = auStack32[*(param_2 + uVar4 * 2)] + 1;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < param_3);\n    }\n    if (param_1 == 0) {\n        puStack88 = param_6;\n        iStack96 = 0x13;\n        puStack92 = param_6;\n    }\n    else if (param_1 == 1) {\n        puStack88 = 0x41e28e;\n        puStack92 = 0x41e2ce;\n        iStack96 = 0x100;\n    }\n    else {\n        puStack88 = 0x41e510;\n        puStack92 = 0x41e550;\n        iStack96 = -1;\n    }\n    iStack108 = *param_4;\n    uVar7 = uStack120;\n    uStack100 = 1 << (uVar7 & 0x1f);\n    uStack84 = 0xffffffff;\n    uVar14 = 0;\n    uVar5 = 0;\n    uVar4 = uStack100 - 1;\n    if ((param_1 != 1) || (uStack100 < 0x5b0)) {\n        puStack104 = param_6;\n        uStack80 = uStack100;\ncode_r0x00408ed2:\n        do {\n            uVar2 = *puStack104;\n            uVar13 = uVar5;\n            uVar8 = uStack116 - uVar13;\n            if (uVar2 < iStack96) {\n                uStack124 = uVar8 << 8;\n                uStack124 = uStack124 | uVar2 << 0x10;\n            }\n            else if (iStack96 < uVar2) {\n                uStack124 = CONCAT22(puStack88[*puStack104], CONCAT11(uVar8, *(puStack92 + *puStack104)));\n            }\n            else {\n                uStack124 = CONCAT31(uVar8, 0x60);\n            }\n            iVar11 = 1 << (uStack116 - uVar13 & 0x1f);\n            puVar9 = iStack108 + ((uVar14 >> (uVar13 & 0x1f)) + uStack80) * 4;\n            uVar6 = uStack80;\n            do {\n                uVar6 = uVar6 - iVar11;\n                puVar9 = puVar9 + -iVar11;\n                *puVar9 = uStack124;\n            } while (uVar6 != 0);\n            for (uVar6 = 1 << (uStack116 - 1U & 0x1f); (uVar14 & uVar6) != 0; uVar6 = uVar6 >> 1) {\n            }\n            if (uVar6 == 0) {\n                uVar14 = 0;\n            }\n            else {\n                uVar14 = (uVar6 - 1 & uVar14) + uVar6;\n            }\n            puStack104 = puStack104 + 1;\n            piVar1 = &uStack64 + uStack116 * 2;\n            *piVar1 = *piVar1 + -1;\n            if (*(&uStack64 + uStack116 * 2) == 0) {\n                if (uStack116 == uVar3) {\n                    uStack124._0_2_ = CONCAT11(uStack116 - uVar13, 0x40);\n                    uStack124 = uStack124;\n                    goto joined_r0x004090a2;\n                }\n                uStack116 = *(param_2 + *puStack104 * 2);\n            }\n        } while ((uStack116 <= uStack120) || (uVar6 = uVar4 & uVar14,  uVar6 == uStack84));\n        if (uVar5 == 0) {\n            uVar5 = uStack120;\n        }\n        iStack108 = iStack108 + uStack80 * 4;\n        iVar10 = uStack116 - uVar5;\n        uVar12 = uVar5 + iVar10;\n        iVar11 = 1 << (iVar10 & 0x1f);\n        if (uVar12 < uVar3) {\n            puVar15 = &uStack64 + uVar12 * 2;\n            do {\n                uVar2 = *puVar15;\n                if (iVar11 - uVar2 < 1) break;\n                uVar12 = uVar12 + 1;\n                iVar10 = iVar10 + 1;\n                puVar15 = puVar15 + 1;\n                iVar11 = (iVar11 - uVar2) * 2;\n            } while (uVar12 < uVar3);\n        }\n        uStack80 = 1 << (iVar10 & 0x1f);\n        uStack100 = uStack100 + uStack80;\n        if ((param_1 != 1) || (uStack100 < 0x5b0)) {\n            *(*param_4 + uVar6 * 4) = iVar10;\n            *(*param_4 + 1 + uVar6 * 4) = uVar7;\n            *(*param_4 + 2 + uVar6 * 4) = iStack108 - *param_4 >> 2;\n            uStack84 = uVar6;\n            goto code_r0x00408ed2;\n        }\n    }\n    return 1;\njoined_r0x004090a2:\n    if (uVar14 == 0) {\ncode_r0x004090fa:\n        *param_4 = *param_4 + uStack100 * 4;\n        *param_5 = uStack120;\n        return 0;\n    }\n    if ((uVar5 != 0) && ((uVar4 & uVar14) != uStack84)) {\n        iStack108 = *param_4;\n        uVar5 = 0;\n        uStack124._0_2_ = CONCAT11(uVar7, uStack124);\n        uStack124 = uStack124;\n        uStack116 = uStack120;\n    }\n    *(iStack108 + (uVar14 >> (uVar5 & 0x1f)) * 4) = uStack124;\n    for (uVar3 = 1 << (uStack116 - 1U & 0x1f); (uVar14 & uVar3) != 0; uVar3 = uVar3 >> 1) {\n    }\n    if (uVar3 == 0) goto code_r0x004090fa;\n    uVar14 = (uVar3 - 1 & uVar14) + uVar3;\n    goto joined_r0x004090a2;\n}\n",
        "token_count": 2658
    },
    "0040ac60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040ac60(uint param_1, uint *param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack24;\n    uint uStack20;\n    \n    iStack52 = param_4;\n    uStack56 = param_3;\n    uStack40 = *param_2;\n    uStack44 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    iVar1 = fcn.00407270(&uStack56, 0x41b2a4, 0x38);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004073a0(&uStack56, 4);\n        if (iVar1 != 1) {\n            fcn.00408850(&uStack56);\n            if ((iVar1 != 2) && ((iVar1 != -5 || (iStack52 != 0)))) {\n                return iVar1;\n            }\n            return -3;\n        }\n        *param_2 = uStack36;\n        iVar1 = fcn.00408850(&uStack56);\n    }\n    return iVar1;\n}\n",
        "token_count": 293
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040b6b5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b6b5(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e1d8(0x420ff8, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x4250b0 == 3) {\n            fcn.0040d6e0(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0040d713(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0040d743(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040b70b();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0040b73d;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4234b4, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040bfc1();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040bf7f(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x0040b73d:\n    fcn.0040e21d();\n    return;\n}\n",
        "token_count": 444
    },
    "0040ce09": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce09(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x422234) {\n        return;\n    }\n    *0x423ba8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x423bac = &arg_8h;\n    *0x423ae8 = 0x10001;\n    *0x423a90 = 0xc0000409;\n    *0x423a94 = 1;\n    var_328h = *0x422234;\n    var_324h = *0x422238;\n    *0x423a9c = unaff_retaddr;\n    *0x423b74 = in_GS;\n    *0x423b78 = in_FS;\n    *0x423b7c = in_ES;\n    *0x423b80 = in_DS;\n    *0x423b84 = unaff_EDI;\n    *0x423b88 = unaff_ESI;\n    *0x423b8c = unaff_EBX;\n    *0x423b90 = in_EDX;\n    *0x423b94 = in_ECX;\n    *0x423b98 = in_EAX;\n    *0x423b9c = unaff_EBP;\n    *0x423ba0 = unaff_retaddr;\n    *0x423ba4 = in_CS;\n    *0x423bb0 = in_SS;\n    *0x423ae0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004138fc(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x41fb80);\n    if (*0x423ae0 == 0) {\n        fcn.004138fc(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 824
    },
    "0040d152": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d152(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0040b6b5(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040e8de": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040e9d1: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040e9d6)\n// WARNING: Removing unreachable block (ram,0x0040ea04)\n// WARNING: Removing unreachable block (ram,0x0040e9dc)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e8de(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e1d8(0x4212c0, 0x18);\n    fcn.0040d6e0(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x423640 != 1) {\n        *0x42363c = 1;\n        *0x423638 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.004104e9(*0x42508c);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.004104e9(*0x425088);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.004104e0();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.004104e9(*piVar2);\n                        iVar3 = fcn.004104e0();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.004104e9(*0x42508c);\n                        piVar1 = fcn.004104e9(*0x425088);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040e818(0x41b1b4);\n        }\n        fcn.0040e818(0x41b1bc);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040d606(8);\n    }\n    return;\n}\n",
        "token_count": 808
    },
    "00413b24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413b24(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040d606(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00413b7e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00413b7e(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004104e0();\n    var_4h = 0;\n    if (*0x423e1c == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x423e1c = fcn.0041046e(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x423e20 = fcn.0041046e(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x423e24 = fcn.0041046e(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x423e2c = fcn.0041046e(uVar3);\n        if (*0x423e2c != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x423e28 = fcn.0041046e(uVar3);\n        }\n    }\n    if ((*0x423e28 != iVar1) && (*0x423e2c != iVar1)) {\n        pcVar4 = fcn.004104e9(*0x423e28);\n        pcVar5 = fcn.004104e9(*0x423e2c);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00413cc0;\n        }\n    }\n    if ((((*0x423e20 != iVar1) && (pcVar4 = fcn.004104e9(*0x423e20),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x423e24 != iVar1 && (pcVar4 = fcn.004104e9(*0x423e24),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00413cc0:\n    pcVar4 = fcn.004104e9(*0x423e1c);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 829
    },
    "00418244": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418244(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00418745;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00418379;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00418380;\ncode_r0x00418379:\n                        do {\n                            var_4h = 1;\ncode_r0x00418380:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0041838e;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0041838e:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42305c - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42305c < iVar12) {\n                if (iVar12 < *0x423058) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x423058;\n                    uVar5 = 1;\n                }\n                goto code_r0x00418745;\n            }\n            var_10h = *0x42305c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00418531;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00418531:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00418745:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3652
    },
    "00418788": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418788(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00418c89;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x423078 - 1;\n        iVar4 = *0x423078 + (*0x423078 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x423078 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004188bd;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004188c4;\ncode_r0x004188bd:\n                        do {\n                            var_4h = 1;\ncode_r0x004188c4:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004188d2;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004188d2:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x423074 - *0x423078) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x423074 < iVar12) {\n                if (iVar12 < *0x423070) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x423084;\n                    iVar4 = *0x42307c + (*0x42307c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42307c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x42307c + (*0x42307c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42307c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x423084 + *0x423070;\n                    uVar5 = 1;\n                }\n                goto code_r0x00418c89;\n            }\n            var_10h = *0x423074 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x423078 - 1;\n            iVar12 = *0x423078 + (*0x423078 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x423078 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00418a75;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00418a75:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x42307c + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00418c89:\n    var_20h = iVar12 << (0x1fU - *0x42307c & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x423080 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x423080 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3617
    },
    "00401560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __thiscall fcn.00401560(int32_t param_1, uint param_2, int32_t param_3, uint8_t *param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1h;\n    \n    if (0 < param_3) {\n        fcn.0040afe0(param_4, param_2, param_3);\n        if (param_3 == 1) {\n            *param_4 = *(*(param_1 + 0x20020) + (*param_4 + 0x100) * 0x100 + param_1);\n            return;\n        }\n        iVar2 = param_3 + -1;\n        iVar1 = 0;\n        if (0 < iVar2) {\n            do {\n                param_4[iVar1] = *(param_4[iVar1 + 1] + (param_4[iVar1] + 0x100) * 0x100 + param_1);\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < iVar2);\n        }\n        param_4[param_3 + -1] = *((param_4[param_3 + -1] + 0x100) * 0x100 + (*(param_1 + 0x20020) ^ 0x55) + param_1);\n        for (; 0 < iVar2; iVar2 = iVar2 + -1) {\n            param_4[iVar2] = *((param_4[iVar2] + 0x100) * 0x100 + param_4[iVar2 + -1] + param_1);\n        }\n        *param_4 = *(*(param_1 + 0x20020) + (*param_4 + 0x100) * 0x100 + param_1);\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "004024a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004024a0(uint32_t param_1, uint8_t *param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    \n    uVar18 = param_1 >> 0x10;\n    param_1 = param_1 & 0xffff;\n    if (param_3 == 1) {\n        param_1 = param_1 + *param_2;\n        if (0xfff0 < param_1) {\n            param_1 = param_1 - 0xfff1;\n        }\n        uVar18 = uVar18 + param_1;\n        if (0xfff0 < uVar18) {\n            uVar18 = uVar18 - 0xfff1;\n        }\n        return uVar18 << 0x10 | param_1;\n    }\n    if (param_2 == NULL) {\n        return 1;\n    }\n    if (param_3 < 0x10) {\n        if (param_3 != 0) {\n            do {\n                param_1 = param_1 + *param_2;\n                param_3 = param_3 - 1;\n                param_2 = param_2 + 1;\n                uVar18 = uVar18 + param_1;\n            } while (param_3 != 0);\n        }\n        if (0xfff0 < param_1) {\n            param_1 = param_1 - 0xfff1;\n        }\n        return ((uVar18 / 0xfff1) * 0xf + uVar18) * 0x10000 | param_1;\n    }\n    if (0x15af < param_3) {\n        uVar17 = param_3 / 0x15b0;\n        do {\n            param_3 = param_3 - 0x15b0;\n            iVar1 = 0x15b;\n            do {\n                iVar2 = param_1 + *param_2;\n                iVar3 = iVar2 + param_2[1];\n                iVar4 = iVar3 + param_2[2];\n                iVar5 = iVar4 + param_2[3];\n                iVar6 = iVar5 + param_2[4];\n                iVar7 = iVar6 + param_2[5];\n                iVar8 = iVar7 + param_2[6];\n                iVar9 = iVar8 + param_2[7];\n                iVar10 = iVar9 + param_2[8];\n                iVar11 = iVar10 + param_2[9];\n                iVar12 = iVar11 + param_2[10];\n                iVar13 = iVar12 + param_2[0xb];\n                iVar14 = iVar13 + param_2[0xc];\n                iVar15 = iVar14 + param_2[0xd];\n                iVar16 = iVar15 + param_2[0xe];\n                param_1 = iVar16 + param_2[0xf];\n                uVar18 = uVar18 + iVar2 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 +\n                         iVar12 + iVar13 + iVar14 + iVar15 + iVar16 + param_1;\n                param_2 = param_2 + 0x10;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n            param_1 = param_1 % 0xfff1;\n            uVar18 = uVar18 % 0xfff1;\n            uVar17 = uVar17 - 1;\n        } while (uVar17 != 0);\n    }\n    if (param_3 != 0) {\n        if (0xf < param_3) {\n            uVar17 = param_3 >> 4;\n            do {\n                iVar1 = param_1 + *param_2;\n                iVar2 = iVar1 + param_2[1];\n                iVar3 = iVar2 + param_2[2];\n                iVar4 = iVar3 + param_2[3];\n                iVar5 = iVar4 + param_2[4];\n                iVar6 = iVar5 + param_2[5];\n                iVar7 = iVar6 + param_2[6];\n                iVar8 = iVar7 + param_2[7];\n                iVar9 = iVar8 + param_2[8];\n                iVar10 = iVar9 + param_2[9];\n                iVar11 = iVar10 + param_2[10];\n                iVar12 = iVar11 + param_2[0xb];\n                iVar13 = iVar12 + param_2[0xc];\n                iVar14 = iVar13 + param_2[0xd];\n                iVar15 = iVar14 + param_2[0xe];\n                param_1 = iVar15 + param_2[0xf];\n                param_3 = param_3 - 0x10;\n                uVar18 = uVar18 + iVar1 + iVar2 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 +\n                         iVar11 + iVar12 + iVar13 + iVar14 + iVar15 + param_1;\n                param_2 = param_2 + 0x10;\n                uVar17 = uVar17 - 1;\n            } while (uVar17 != 0);\n        }\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            param_1 = param_1 + *param_2;\n            param_2 = param_2 + 1;\n            uVar18 = uVar18 + param_1;\n        }\n        param_1 = param_1 % 0xfff1;\n        uVar18 = uVar18 % 0xfff1;\n    }\n    return uVar18 << 0x10 | param_1;\n}\n",
        "token_count": 1364
    },
    "00406ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406ca0(int32_t *param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint8_t *puVar18;\n    uint8_t *puVar19;\n    int32_t iVar20;\n    uchar *puVar21;\n    uchar *puVar22;\n    uchar *puVar23;\n    uchar *puVar24;\n    uint32_t uVar25;\n    int32_t iVar26;\n    uint8_t *puStack60;\n    \n    puVar3 = param_1[7];\n    uVar17 = puVar3[0xe];\n    puVar18 = *param_1 + -1;\n    puVar2 = puVar18 + param_1[1] + -5;\n    iVar4 = param_1[4];\n    iVar15 = iVar4 - param_2;\n    puVar21 = param_1[3] + -1;\n    iVar20 = puVar3[10];\n    uVar5 = puVar3[0xb];\n    uVar6 = puVar3[0xc];\n    iVar26 = puVar3[0xd];\n    iVar7 = puVar3[0x13];\n    iVar8 = puVar3[0x14];\n    uVar9 = puVar3[0x15];\n    uVar10 = puVar3[0x16];\n    uVar25 = puVar3[0xf];\n    puVar22 = puVar21;\n    puStack60 = puVar18;\ncode_r0x00406d37:\n    if (uVar25 < 0xf) {\n        puVar19 = puVar18 + 1;\n        puVar18 = puVar18 + 2;\n        uVar17 = uVar17 + (*puVar19 << (uVar25 & 0x1f)) + (*puVar18 << (uVar25 + 8 & 0x1f));\n        uVar25 = uVar25 + 0x10;\n        puStack60 = puVar18;\n    }\n    uVar16 = *(iVar7 + ((1 << (uVar9 & 0x1f)) - 1U & uVar17) * 4);\n    uVar12 = uVar16 >> 8 & 0xff;\n    uVar17 = uVar17 >> (uVar12 & 0x1f);\n    uVar25 = uVar25 - uVar12;\n    while ((uVar16 & 0xff) != 0) {\n        if ((uVar16 & 0x10) != 0) {\n            param_2 = uVar16 >> 0x10;\n            uVar16 = uVar16 & 0xf;\n            if (uVar16 != 0) {\n                if (uVar25 < uVar16) {\n                    puVar19 = puVar18 + 1;\n                    puVar18 = puVar18 + 1;\n                    uVar17 = uVar17 + (*puVar19 << (uVar25 & 0x1f));\n                    uVar25 = uVar25 + 8;\n                    puStack60 = puVar18;\n                }\n                param_2 = param_2 + ((1 << uVar16) - 1U & uVar17);\n                uVar17 = uVar17 >> uVar16;\n                uVar25 = uVar25 - uVar16;\n            }\n            if (uVar25 < 0xf) {\n                puVar19 = puVar18 + 1;\n                puVar1 = puVar18 + 2;\n                puVar18 = puVar18 + 2;\n                uVar17 = uVar17 + (*puVar19 << (uVar25 & 0x1f)) + (*puVar1 << (uVar25 + 8 & 0x1f));\n                uVar25 = uVar25 + 0x10;\n                puStack60 = puVar18;\n            }\n            uVar16 = *(iVar8 + ((1 << (uVar10 & 0x1f)) - 1U & uVar17) * 4);\n            uVar12 = uVar16 >> 8 & 0xff;\n            uVar17 = uVar17 >> (uVar12 & 0x1f);\n            uVar25 = uVar25 - uVar12;\n            goto joined_r0x00406e41;\n        }\n        if ((uVar16 & 0x40) != 0) {\n            if ((uVar16 & 0x20) == 0) goto code_r0x0040707e;\n            *puVar3 = 0xb;\n            goto code_r0x00407097;\n        }\n        uVar16 = *(iVar7 + (((1 << (uVar16 & 0xff & 0x1f)) - 1U & uVar17) + (uVar16 >> 0x10)) * 4);\n        uVar12 = uVar16 >> 8 & 0xff;\n        uVar17 = uVar17 >> (uVar12 & 0x1f);\n        uVar25 = uVar25 - uVar12;\n    }\n    puVar22[1] = uVar16 >> 0x10;\n    puVar23 = puVar22 + 1;\n    goto code_r0x00406fef;\njoined_r0x00406e41:\n    if ((uVar16 & 0x10) != 0) goto code_r0x00406e7c;\n    if ((uVar16 & 0x40) != 0) goto code_r0x0040707e;\n    uVar16 = *(iVar8 + (((1 << (uVar16 & 0x1f)) - 1U & uVar17) + (uVar16 >> 0x10)) * 4);\n    uVar12 = uVar16 >> 8 & 0xff;\n    uVar17 = uVar17 >> (uVar12 & 0x1f);\n    uVar25 = uVar25 - uVar12;\n    goto joined_r0x00406e41;\ncode_r0x00406e7c:\n    uVar11 = uVar16 & 0xf;\n    puVar19 = puVar18;\n    uVar12 = uVar25;\n    if (uVar25 < uVar11) {\n        puVar19 = puVar18 + 1;\n        uVar12 = uVar25 + 8;\n        uVar17 = uVar17 + (puVar18[1] << (uVar25 & 0x1f));\n        puStack60 = puVar19;\n        if (uVar12 < uVar11) {\n            puVar19 = puVar18 + 2;\n            uVar17 = uVar17 + (puVar18[2] << (uVar12 & 0x1f));\n            uVar12 = uVar25 + 0x10;\n            puStack60 = puVar19;\n        }\n    }\n    uVar25 = uVar12 - uVar11;\n    uVar16 = (uVar16 >> 0x10) + ((1 << uVar11) - 1U & uVar17);\n    uVar17 = uVar17 >> uVar11;\n    if (uVar16 <= puVar22 - (puVar21 + iVar15)) {\n        iVar13 = puVar22 - uVar16;\n        do {\n            puVar24 = puVar22;\n            iVar14 = iVar13;\n            puVar24[1] = *(iVar14 + 1);\n            puVar24[2] = *(iVar14 + 2);\n            puVar22 = puVar24 + 3;\n            *puVar22 = *(iVar14 + 3);\n            param_2 = param_2 - 3;\n            iVar13 = iVar14 + 3;\n        } while (2 < param_2);\n        puVar18 = puVar19;\n        puVar23 = puVar22;\n        if (param_2 != 0) {\n            puVar24[4] = *(iVar14 + 4);\n            puVar23 = puVar24 + 4;\n            if (1 < param_2) {\n                puVar24[5] = *(iVar14 + 5);\n                puVar23 = puVar24 + 5;\n            }\n        }\n        goto code_r0x00406fef;\n    }\n    uVar12 = uVar16 - (puVar22 - (puVar21 + iVar15));\n    puVar18 = puStack60;\n    if (uVar5 < uVar12) {\n        param_1[6] = 0x41d338;\n        *puVar3 = 0x1b;\n        goto code_r0x00407097;\n    }\n    iVar13 = iVar26 + -1;\n    if (uVar6 == 0) {\n        iVar14 = iVar13 + (iVar20 - uVar12);\n        uVar11 = uVar12;\n        if (uVar12 < param_2) {\n            do {\n                puVar24 = iVar14 + 1;\n                iVar14 = iVar14 + 1;\n                puVar22 = puVar22 + 1;\n                uVar11 = uVar11 - 1;\n                *puVar22 = *puVar24;\n            } while (uVar11 != 0);\ncode_r0x00406f8e:\n            param_2 = param_2 - uVar12;\n            iVar14 = puVar22 - uVar16;\n        }\n    }\n    else if (uVar6 < uVar12) {\n        uVar11 = uVar12 - uVar6;\n        iVar14 = iVar13 + (uVar6 - uVar12) + iVar20;\n        if (uVar11 < param_2) {\n            param_2 = param_2 - uVar11;\n            do {\n                puVar24 = iVar14 + 1;\n                iVar14 = iVar14 + 1;\n                puVar22 = puVar22 + 1;\n                uVar11 = uVar11 - 1;\n                *puVar22 = *puVar24;\n            } while (uVar11 != 0);\n            iVar14 = iVar13;\n            if (uVar6 < param_2) {\n                param_2 = param_2 - uVar6;\n                uVar12 = uVar6;\n                do {\n                    puVar24 = iVar13 + 1;\n                    iVar13 = iVar13 + 1;\n                    puVar22 = puVar22 + 1;\n                    uVar12 = uVar12 - 1;\n                    *puVar22 = *puVar24;\n                } while (uVar12 != 0);\n                iVar14 = puVar22 - uVar16;\n            }\n        }\n    }\n    else {\n        iVar14 = iVar13 + (uVar6 - uVar12);\n        uVar11 = uVar12;\n        if (uVar12 < param_2) {\n            do {\n                puVar24 = iVar14 + 1;\n                iVar14 = iVar14 + 1;\n                puVar22 = puVar22 + 1;\n                uVar11 = uVar11 - 1;\n                *puVar22 = *puVar24;\n            } while (uVar11 != 0);\n            goto code_r0x00406f8e;\n        }\n    }\n    if (2 < param_2) {\n        iVar13 = (param_2 - 3) / 3 + 1;\n        do {\n            param_2 = param_2 - 3;\n            puVar22[1] = *(iVar14 + 1);\n            puVar22[2] = *(iVar14 + 2);\n            puVar24 = iVar14 + 3;\n            iVar14 = iVar14 + 3;\n            puVar22 = puVar22 + 3;\n            iVar13 = iVar13 + -1;\n            *puVar22 = *puVar24;\n        } while (iVar13 != 0);\n    }\n    puVar23 = puVar22;\n    if (param_2 != 0) {\n        puVar23 = puVar22 + 1;\n        *puVar23 = *(iVar14 + 1);\n        if (1 < param_2) {\n            puVar23 = puVar22 + 2;\n            *puVar23 = *(iVar14 + 2);\n        }\n    }\ncode_r0x00406fef:\n    puVar22 = puVar23;\n    if ((puVar2 <= puVar18) || (puVar21 + iVar4 + -0x101 <= puVar23)) goto code_r0x00407097;\n    goto code_r0x00406d37;\ncode_r0x0040707e:\n    param_1[6] = 0x41d338;\n    *puVar3 = 0x1b;\ncode_r0x00407097:\n    iVar20 = puVar18 - (uVar25 >> 3);\n    iVar26 = uVar25 + (uVar25 >> 3) * -8;\n    *param_1 = iVar20 + 1;\n    param_1[3] = puVar22 + 1;\n    param_1[4] = puVar21 + iVar4 + -0x101 + (0x101 - puVar22);\n    param_1[1] = puVar2 + (5 - iVar20);\n    puVar3[0xf] = iVar26;\n    puVar3[0xe] = uVar17 & (1 << (iVar26 & 0x1f)) - 1U;\n    return;\n}\n",
        "token_count": 3078
    },
    "00416a3d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416a3d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x422234 ^ &stack0xfffffffc;\n    fcn.0040ec86(arg_10h);\n    var_14h = fcn.00418ccc(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00418244(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00416a96:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00416ad6;\n        }\n        if (iVar1 != 2) {\ncode_r0x00416ac8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00416ad6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00416ac8;\n        goto code_r0x00416a96;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00416ad6:\n    fcn.0040ce09(unaff_EBX);\n    return;\n}\n",
        "token_count": 501
    },
    "00416ae5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416ae5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x422234 ^ &stack0xfffffffc;\n    fcn.0040ec86(arg_10h);\n    var_14h = fcn.00418ccc(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00418788(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00416b3e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00416b7e;\n        }\n        if (iVar1 != 2) {\ncode_r0x00416b70:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00416b7e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00416b70;\n        goto code_r0x00416b3e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00416b7e:\n    fcn.0040ce09(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "00401280": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401280(int32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    \n    puVar5 = param_1 + 0x20022;\n    puVar7 = puVar5;\n    for (iVar3 = 0x8000; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar7 = 0x4000400;\n        puVar7 = puVar7 + 1;\n    }\n    fcn.004010d0(param_2);\n    fcn.004011b0(param_2);\n    iVar6 = 0;\n    iVar3 = param_1;\n    do {\n        iVar2 = 0;\n        do {\n            uVar1 = *puVar5;\n            *(iVar3 + iVar2) = uVar1;\n            iVar4 = (uVar1 + 0x100) * 0x100 + iVar2;\n            iVar2 = iVar2 + 1;\n            puVar5 = puVar5 + 2;\n            *(iVar4 + param_1) = iVar6;\n        } while (iVar2 < 0x100);\n        iVar6 = iVar6 + 1;\n        iVar3 = iVar3 + 0x100;\n    } while (iVar6 < 0x100);\n    return;\n}\n",
        "token_count": 337
    },
    "0041a400": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.0041a400(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "004071a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.004071a0(int32_t param_1, uint32_t param_2, char *param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((param_3 == NULL) || (*param_3 != '1')) || (param_4 != 0x38)) {\n        return 0xfffffffa;\n    }\n    if (param_1 != 0) {\n        *(param_1 + 0x18) = 0;\n        if (*(param_1 + 0x20) == 0) {\n            *(param_1 + 0x20) = 0x40ad50;\n            *(param_1 + 0x28) = 0;\n        }\n        if (*(param_1 + 0x24) == 0) {\n            *(param_1 + 0x24) = 0x40ad70;\n        }\n        iVar1 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1, 0x2530);\n        if (iVar1 == 0) {\n            return 0xfffffffc;\n        }\n        *(param_1 + 0x1c) = iVar1;\n        if (param_2 < 0) {\n            *(iVar1 + 8) = 0;\n            param_2 = -param_2;\n        }\n        else {\n            *(iVar1 + 8) = (param_2 >> 4) + 1;\n            if (param_2 < 0x30) {\n                param_2 = param_2 & 0xf;\n            }\n        }\n        if (param_2 - 8 < 8) {\n            *(iVar1 + 0x24) = param_2;\n            *(iVar1 + 0x34) = 0;\n            uVar2 = fcn.004070f0(param_1);\n            return uVar2;\n        }\n        (**(param_1 + 0x24))(*(param_1 + 0x28), iVar1);\n        *(param_1 + 0x1c) = 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 483
    },
    "0040f944": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f944(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e1d8(0x4212e0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040bfd4();\n        *puVar2 = 0;\n        puVar2 = fcn.0040bfc1();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x423f50)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x423f60;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00415599(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040bfc1();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040bfd4();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040f211(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040fa16(0x4212e0);\n                goto code_r0x0040fa10;\n            }\n        }\n        puVar2 = fcn.0040bfd4();\n        *puVar2 = 0;\n        puVar2 = fcn.0040bfc1();\n        *puVar2 = 9;\n        fcn.0040e744(0, 0, 0, 0, 0);\n    }\ncode_r0x0040fa10:\n    fcn.0040e21d();\n    return;\n}\n",
        "token_count": 639
    },
    "00411939": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411939(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e1d8(0x4213b0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040bfd4();\n        *puVar2 = 0;\n        puVar2 = fcn.0040bfc1();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x423f50)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x423f60;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00415599(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040bfc1();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040bfd4();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004118c4(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00411a0b(0x4213b0);\n                goto code_r0x00411a05;\n            }\n        }\n        puVar2 = fcn.0040bfd4();\n        *puVar2 = 0;\n        puVar2 = fcn.0040bfc1();\n        *puVar2 = 9;\n        fcn.0040e744(0, 0, 0, 0, 0);\n    }\ncode_r0x00411a05:\n    fcn.0040e21d();\n    return;\n}\n",
        "token_count": 639
    },
    "0040c4f0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c4f0(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e1d8(0x421120, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.0040bfc1();\n        *puVar3 = 0x16;\n        fcn.0040e744(0, 0, 0, 0, 0);\n        goto code_r0x0040c5eb;\n    }\n    fcn.0040fb29(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.0040fa20(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x4227e0;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x423f60);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x4227e0;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x423f60);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x0040c5b6;\n        }\n        puVar3 = fcn.0040bfc1();\n        *puVar3 = 0x16;\n        fcn.0040e744(0, 0, 0, 0, 0);\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x0040c5b6:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.0040f0ad(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040c5f4();\ncode_r0x0040c5eb:\n    fcn.0040e21d();\n    return;\n}\n",
        "token_count": 848
    },
    "00416292": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00416292(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x423f60) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.00415639(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401000(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    // [00] -r-x section size 106496 named .text\n    (*_sym.imp.KERNEL32.dll_RaiseException)((-(param_1 != -0x7ff8fff2) & 6) + 0xc0000017, 1, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 109
    },
    "00401650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuint fcn.00401650(uint8_t *param_1, uint param_2)\n\n{\n    uint8_t uStack36;\n    uint8_t uStack35;\n    uint8_t uStack34;\n    uint8_t uStack33;\n    uint8_t uStack32;\n    uint8_t uStack31;\n    uint8_t uStack30;\n    uint8_t uStack29;\n    uint8_t uStack28;\n    uint8_t uStack27;\n    uint8_t uStack26;\n    uint8_t uStack25;\n    uint8_t uStack24;\n    uint8_t uStack23;\n    uint8_t uStack22;\n    uint8_t uStack21;\n    uint8_t uStack20;\n    uint8_t uStack19;\n    uint8_t uStack18;\n    uint8_t uStack17;\n    uint8_t uStack16;\n    uint8_t uStack15;\n    uint8_t uStack14;\n    uint8_t uStack13;\n    uint8_t uStack12;\n    uint8_t uStack11;\n    uint8_t uStack10;\n    uint8_t uStack9;\n    uint8_t uStack8;\n    uint8_t uStack7;\n    uint8_t uStack6;\n    uint8_t uStack5;\n    uchar uStack4;\n    \n    uStack36 = *param_1 ^ 0xa3;\n    uStack35 = param_1[1] ^ 0x54;\n    uStack34 = ~param_1[2];\n    uStack33 = param_1[3] ^ 0x75;\n    uStack32 = param_1[4] ^ 0xe7;\n    uStack31 = param_1[5] ^ 0x44;\n    uStack30 = param_1[6] ^ 0x4b;\n    uStack29 = param_1[7] ^ 0x23;\n    uStack28 = param_1[8] ^ 0xbf;\n    uStack27 = param_1[9] ^ 0x45;\n    uStack26 = param_1[10] ^ 0x3b;\n    uStack25 = param_1[0xb] ^ 0x56;\n    uStack24 = param_1[0xc] ^ 0xf8;\n    uStack23 = param_1[0xd] ^ 0x98;\n    uStack22 = param_1[0xe] ^ 0x5b;\n    uStack21 = param_1[0xf] ^ 0xf4;\n    uStack20 = param_1[0x10] ^ 0xb5;\n    uStack19 = param_1[0x11] ^ 0x87;\n    uStack18 = param_1[0x12] ^ 0x7b;\n    uStack17 = param_1[0x13] ^ 0xf;\n    uStack16 = param_1[0x14] ^ 0xf4;\n    uStack15 = param_1[0x15] ^ 0x76;\n    uStack14 = param_1[0x16] ^ 0xb9;\n    uStack13 = param_1[0x17] ^ 0x34;\n    uStack12 = param_1[0x18] ^ 0xbf;\n    uStack11 = param_1[0x19] ^ 0x1e;\n    uStack10 = param_1[0x1a] ^ 0xe7;\n    uStack9 = param_1[0x1b] ^ 0x78;\n    uStack8 = param_1[0x1c] ^ 0x98;\n    uStack7 = param_1[0x1d] ^ 0xe9;\n    uStack6 = param_1[0x1e] ^ 0x6f;\n    uStack5 = param_1[0x1f] ^ 0xb4;\n    uStack4 = 0;\n    fcn.0040b350(param_2, &uStack36, 0x20);\n    return param_2;\n}\n",
        "token_count": 905
    },
    "00401870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.00401870(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0040af66(0xc);\n    if (piVar1 != NULL) {\n        piVar1[1] = 0;\n        piVar1[2] = 1;\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(param_2);\n        *piVar1 = iVar2;\n        if ((iVar2 != 0) || (param_2 == 0)) goto code_r0x004018b4;\n        fcn.0040ad90(0x8007000e);\n    }\n    piVar1 = NULL;\ncode_r0x004018b4:\n    *param_1 = piVar1;\n    if (piVar1 == NULL) {\n        fcn.0040ad90(0x8007000e);\n    }\n    return param_1;\n}\n",
        "token_count": 234
    },
    "004018f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004018f0(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t iVar6;\n    \n    if (param_2 == 0) {\n        *param_1 = 0;\n        return;\n    }\n    iVar6 = param_2;\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2);\n    iVar1 = iVar1 + 1;\n    fcn.004017e0(param_1, iVar1, param_1 + 1, 0x80);\n    iVar4 = param_2;\n    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(param_2, 0, param_2, iVar1, *param_1, iVar1);\n    bVar5 = iVar2 == 0;\n    if (bVar5) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 0x7a) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(iVar6, 0, param_2, iVar1, 0, 0);\n            fcn.004017e0(param_1, uVar3, param_1 + 1, 0x80);\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(iVar4, 0, param_2, iVar1, *param_1, uVar3);\n            bVar5 = iVar4 == 0;\n        }\n        if (bVar5) {\n            fcn.00401030();\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "004019a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004019a0(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(piVar1 + 2);\n        if ((iVar2 == 0) && (piVar1 != NULL)) {\n            if (*piVar1 != 0) {\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(*piVar1);\n            }\n            if (piVar1[1] != 0) {\n                fcn.0040afcb(piVar1[1]);\n            }\n            fcn.0040aec0(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00407270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407270(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.004071a0(param_1, 0xf, param_2, param_3);\n    return;\n}\n",
        "token_count": 52
    },
    "004072b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint fcn.004072b0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    \n    iVar1 = *(unaff_EBX + 0x1c);\n    if (*(iVar1 + 0x34) == 0) {\n        iVar2 = (**(unaff_EBX + 0x20))(*(unaff_EBX + 0x28), 1 << (*(iVar1 + 0x24) & 0x1f), 1);\n        *(iVar1 + 0x34) = iVar2;\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    if (*(iVar1 + 0x28) == 0) {\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = 1 << (*(iVar1 + 0x24) & 0x1f);\n    }\n    uVar4 = in_EAX - *(unaff_EBX + 0x10);\n    uVar3 = *(iVar1 + 0x28);\n    if (uVar3 <= uVar4) {\n        fcn.0040b350(*(iVar1 + 0x34), *(unaff_EBX + 0xc) - uVar3, uVar3);\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x2c) = *(iVar1 + 0x28);\n        return 0;\n    }\n    uVar3 = uVar3 - *(iVar1 + 0x30);\n    if (uVar4 < uVar3) {\n        uVar3 = uVar4;\n    }\n    fcn.0040b350(*(iVar1 + 0x34) + *(iVar1 + 0x30), *(unaff_EBX + 0xc) - uVar4, uVar3);\n    iVar2 = uVar4 - uVar3;\n    if (iVar2 != 0) {\n        fcn.0040b350(*(iVar1 + 0x34), *(unaff_EBX + 0xc) - iVar2, iVar2);\n        *(iVar1 + 0x30) = iVar2;\n        *(iVar1 + 0x2c) = *(iVar1 + 0x28);\n        return 0;\n    }\n    *(iVar1 + 0x30) = *(iVar1 + 0x30) + uVar3;\n    if (*(iVar1 + 0x30) == *(iVar1 + 0x28)) {\n        *(iVar1 + 0x30) = 0;\n    }\n    if (*(iVar1 + 0x2c) < *(iVar1 + 0x28)) {\n        *(iVar1 + 0x2c) = *(iVar1 + 0x2c) + uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 681
    },
    "00408850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00408850(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (((param_1 != 0) && (*(param_1 + 0x1c) != 0)) && (*(param_1 + 0x24) != NULL)) {\n        iVar1 = *(*(param_1 + 0x1c) + 0x34);\n        if (iVar1 != 0) {\n            (**(param_1 + 0x24))(*(param_1 + 0x28), iVar1);\n        }\n        (**(param_1 + 0x24))(*(param_1 + 0x28), *(param_1 + 0x1c));\n        *(param_1 + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 188
    },
    "0040b99e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b99e(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e1d8(0x421038, 0x10);\n    if (*(unaff_EBP + 8) != 0) {\n        uVar2 = fcn.0040efaa(*(unaff_EBP + 8), 0x7fff);\n        if (uVar2 < 0x7fff) {\n            fcn.0040d6e0(7);\n            *(unaff_EBP + -4) = 0;\n            uVar3 = fcn.0040b917(*(unaff_EBP + 8));\n            *(unaff_EBP + -0x1c) = uVar3;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040ba18();\n            goto code_r0x0040ba12;\n        }\n    }\n    puVar1 = fcn.0040bfc1();\n    *puVar1 = 0x16;\n    fcn.0040e744(0, 0, 0, 0, 0);\ncode_r0x0040ba12:\n    fcn.0040e21d();\n    return;\n}\n",
        "token_count": 335
    },
    "0040cb9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb9d(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040cad9(arg_8h, arg_ch, 0x40);\n    return;\n}\n",
        "token_count": 48
    },
    "0040ea0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ea0a(uint arg_8h)\n\n{\n    fcn.0040e8de(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "004129c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004129dd)\n// WARNING: Removing unreachable block (ram,0x004129e3)\n// WARNING: Removing unreachable block (ram,0x004129e5)\n\nvoid fcn.004129c9(void)\n\n{\n    return;\n}\n",
        "token_count": 63
    },
    "004161f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004161f4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e1d8(0x421578, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0040bfc1();\n        *puVar1 = 0x16;\n        fcn.0040e744(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00415ad5(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00416292();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.0040e21d();\n    return;\n}\n",
        "token_count": 457
    },
    "004162c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004162c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004161f4(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 78
    },
    "00418153": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418153(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0040bfc1();\n        *puVar1 = 0x16;\n        fcn.0040e744(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x423f48;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "004070f0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint fcn.004070f0(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    if ((param_1 != 0) && (puVar2 = *(param_1 + 0x1c),  puVar2 != NULL)) {\n        puVar2[7] = 0;\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 8) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x30) = 1;\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        puVar2[3] = 0;\n        puVar2[8] = 0;\n        puVar2[10] = 0;\n        puVar2[0xb] = 0;\n        puVar2[0xc] = 0;\n        puVar2[0xe] = 0;\n        puVar2[0xf] = 0;\n        puVar1 = puVar2 + 0x14c;\n        puVar2[5] = 0x8000;\n        puVar2[0x1b] = puVar1;\n        puVar2[0x14] = puVar1;\n        puVar2[0x13] = puVar1;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 324
    },
    "00417e95": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00417e95(void)\n\n{\n    *0x423054 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "0040cfdc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040cfdc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e1d8(0x4211e0, 0xc);\n    fcn.0040d6e0(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4234ac;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4234a8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040d020;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040b6b5(arg_8h_00);\ncode_r0x0040d020:\n        fcn.0040b6b5(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040d043();\n    fcn.0040e21d();\n    return;\n}\n",
        "token_count": 408
    }
}