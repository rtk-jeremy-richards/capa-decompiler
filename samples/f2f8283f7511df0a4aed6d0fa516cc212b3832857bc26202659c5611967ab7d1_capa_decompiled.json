{
    "00401000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(uint *arg_8h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint lpString1;\n    uint lpString2;\n    \n    // [00] -r-x section size 73728 named .text\n    puVar2 = arg_8h;\n    uVar3 = fcn.00401f9d(0x27);\n    pcVar1 = _sym.imp.USER32.dll_wsprintfW;\n    (*_sym.imp.USER32.dll_wsprintfW)(&lpString1, uVar3, *arg_8h, arg_8h[3]);\n    arg_8h = NULL;\n    if (puVar2[4] != 0) {\n        puVar4 = puVar2 + 5;\n        do {\n            (*pcVar1)(&lpString2, L\"\\t0x%p\\n\", *puVar4);\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, &lpString2);\n            arg_8h = arg_8h + 1;\n            puVar4 = puVar4 + 1;\n        } while (arg_8h < puVar2[4]);\n    }\n    fcn.004076a8(&lpString1);\n    fcn.00403e0d();\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(10);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 338
    },
    "00401117": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00401117(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        iVar2 = iVar2 + 1;\n        iVar1 = param_1[iVar2];\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040118a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040118a(uint noname_0, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (((((*0x41776c & 1) == 0) &&\n         (iVar1 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(*0x417788, &var_8h, 0, 0),  iVar1 != 0)) &&\n        (var_4h <= arg_10h)) && ((var_4h < arg_10h || (var_8h < arg_ch)))) {\n        arg_8h = fcn.00401f9d(0x2a);\n        iVar1 = fcn.00407717(arg_8h);\n        if (iVar1 != 1) {\n            *0x417728 = 0x6a;\n            return 0x80004005;\n        }\n        *0x41776c = *0x41776c | 1;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*0x4177dc, 0x8001, 0, &arg_ch);\n    return 0;\n}\n",
        "token_count": 288
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040150b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040150b(uint32_t lpExitCode, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint uVar2;\n    uint uVar3;\n    uint32_t arglist;\n    uint lpThreadId;\n    \n    fcn.00408726(lpExitCode);\n    fcn.00401329(arg_ch);\n    fcn.00401429(0x5c);\n    *0x417728 = 0;\n    *0x417720 = in_ECX;\n    *0x417724 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x40129c);\n    if (*0x417768 != 2) {\n        fcn.0040786b();\n    }\n    uVar2 = *0x417724;\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x417724, 0xffffffff);\n    *0x4177dc = 0;\n    if (*0x417728 == 0) {\n        if (*0x4177e4 != 0) {\n            *0x4177dc = 0;\n            return 0x80004005;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetExitCodeThread)(*0x417724, &lpExitCode);\n        if ((iVar1 != 0) && (lpExitCode == 0)) {\n            return 0;\n        }\n        if ((lpExitCode & 0x80070000) == 0x80070000) {\n            if (((lpExitCode & 0xffff) == 0xe) && (*0x41776c == -1)) {\n                return 0x80004005;\n            }\n            (*_sym.imp.KERNEL32.dll_SetLastError)(lpExitCode & 0xffff);\n            uVar3 = 0x22;\n            uVar2 = 1;\n            arglist = lpExitCode;\n        }\n        else {\n            uVar3 = 0x21;\n            arglist = lpExitCode;\ncode_r0x004015ee:\n            uVar2 = 0;\n        }\n        fcn.00407776(uVar2, uVar3, arglist);\n    }\n    else {\n        if (*0x417728 == 1) {\n            uVar3 = 0x11;\n        }\n        else if (*0x417728 == 2) {\n            uVar3 = 0x13;\n        }\n        else {\n            if (*0x417728 != 3) {\n                if ((0x67 < *0x417728) && (*0x417728 < 0x6b)) {\n                    *0x4177dc = 0;\n                    return 0x80004005;\n                }\n                uVar3 = 0x14;\n                arglist = *0x417728;\n                goto code_r0x004015ee;\n            }\n            uVar3 = 0x12;\n        }\n        fcn.00407776(0, uVar3, uVar2);\n    }\n    return 0x80004005;\n}\n",
        "token_count": 675
    },
    "00401626": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040189c)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401626(int32_t *arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t *var_4h;\n    \n    if (*0x4177e4 != 0) {\n        return -0x7fffbffc;\n    }\n    var_4h = arg_8h + 8;\n    fcn.0040874d();\n    var_3ch._0_2_ = 0;\n    var_3ch._2_2_ = 0;\n    iVar3 = (**(*arg_8h[2] + 0x18))(arg_8h[2], arg_ch, 3, &var_3ch);\n    if (iVar3 != 0) goto code_r0x00401671;\n    fcn.00401411();\n    if ((var_3ch == 0) || (var_3ch != 8)) {\n        iVar3 = (**(*arg_8h + 0x1c))(arg_8h, 100);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n        fcn.0040eca9();\n        return iVar3;\n    }\n    fcn.00401329(var_34h);\n    piVar1 = arg_8h + 9;\n    uVar4 = fcn.00401454(&var_1ch, arg_8h + 3, &var_10h);\n    fcn.00401362(uVar4);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n    if (arg_14h != 0) {\n        *arg_10h = 0;\n        goto code_r0x0040194d;\n    }\n    var_2ch._0_2_ = 0;\n    var_2ch._2_2_ = 0;\n    iVar3 = (**(*arg_8h[2] + 0x18))(arg_8h[2], arg_ch, 9, &var_2ch);\n    if (iVar3 == 0) {\n        if (var_2ch == 0) {\n            arg_8h[0xf] = 0;\ncode_r0x0040174b:\n            iVar3 = (**(*arg_8h[2] + 0x18))(arg_8h[2], arg_ch, 6, &var_2ch);\n            if (iVar3 != 0) goto code_r0x004016fa;\n            arg_8h[0xe] = var_24h != 0;\n            iVar3 = (**(*arg_8h[2] + 0x18))(arg_8h[2], arg_ch, 0xc, &var_2ch);\n            if (iVar3 != 0) {\n                fcn.0040eca9();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                goto code_r0x00401671;\n            }\n            if (var_2ch == 0) {\n                (*_sym.imp.KERNEL32.dll_GetLocalTime)(&var_4ch);\n                (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&var_4ch, arg_8h + 0xc);\n            }\n            else {\n                if (var_2ch != 0x40) {\n                    uVar4 = 0x66;\n                    goto code_r0x00401727;\n                }\n                arg_8h[0xc] = var_24h;\n                arg_8h[0xd] = var_20h;\n            }\n            iVar3 = 0;\n            if (arg_8h[0xe] == 0) {\n                iVar5 = fcn.0040301a(*piVar1, arg_8h + 0xc);\n                if (iVar5 == -1) {\n                    iVar3 = *arg_8h;\n                    uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    iVar3 = (**(iVar3 + 0x20))(arg_8h, 0x69, uVar4);\n                }\n                else {\n                    if (iVar5 != 1) {\n                        puVar6 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x18);\n                        if (puVar6 == NULL) {\n                            puVar6 = NULL;\n                        }\n                        else {\n                            puVar6[1] = 0;\n                            *puVar6 = 0x413330;\n                            puVar6[2] = 0xffffffff;\n                        }\n                        arg_8h[7] = puVar6;\n                        fcn.004010e2(puVar6);\n                        iVar3 = *piVar1;\n                        iVar5 = arg_8h[7];\n                        *(iVar5 + 0x10) = 0;\n                        *(iVar5 + 0x14) = 0;\n                        cVar2 = fcn.0040db53(iVar3, 1);\n                        if (cVar2 != '\\0') {\ncode_r0x0040190f:\n                            fcn.00408726(0);\n                            *arg_10h = 0;\n                            fcn.0040eca9();\ncode_r0x0040194d:\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                            fcn.0040eca9();\n                            return 0;\n                        }\n                        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        fcn.004012f7(piVar1);\n                        iVar3 = fcn.00402d5a(&var_1ch);\n                        if (iVar3 < 0) {\n                            iVar3 = (**(*arg_8h + 0x20))(arg_8h, 0x6a, uVar4);\n                        }\n                        else {\n                            *(var_1ch + iVar3 * 2) = 0;\n                            var_18h = iVar3;\n                            iVar3 = fcn.00403354(var_1ch);\n                            if (iVar3 == 0) {\n                                iVar3 = (**(*arg_8h + 0x1c))(arg_8h, 0x68);\n                            }\n                            else {\n                                iVar3 = *piVar1;\n                                iVar5 = arg_8h[7];\n                                *(iVar5 + 0x10) = 0;\n                                *(iVar5 + 0x14) = 0;\n                                cVar2 = fcn.0040db53(iVar3, 1);\n                                if (cVar2 != '\\0') {\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                                    goto code_r0x0040190f;\n                                }\n                                iVar3 = *arg_8h;\n                                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                                iVar3 = (**(iVar3 + 0x20))(arg_8h, 0x6a, uVar4);\n                            }\n                        }\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                        fcn.0040eca9();\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                        goto code_r0x00401671;\n                    }\n                    *arg_10h = 0;\n                }\n            }\n            else {\n                iVar5 = fcn.00403354(*piVar1);\n                if (iVar5 == 0) {\n                    uVar4 = 0x68;\n                    goto code_r0x00401727;\n                }\n            }\n        }\n        else {\n            if (var_2ch == 0x13) {\n                arg_8h[0xf] = var_24h;\n                goto code_r0x0040174b;\n            }\n            uVar4 = 0x65;\ncode_r0x00401727:\n            iVar3 = (**(*arg_8h + 0x1c))(arg_8h, uVar4);\n        }\n        fcn.0040eca9();\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n    }\n    else {\ncode_r0x004016fa:\n        arg_8h = iVar3;\n        fcn.0040eca9();\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n        iVar3 = arg_8h;\n    }\ncode_r0x00401671:\n    fcn.0040eca9();\n    return iVar3;\n}\n",
        "token_count": 2010
    },
    "00401a85": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401a85(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharUpperW;\n    var_4h = 0;\n    if (0 < arg_10h) {\n        piVar6 = arg_ch;\n        do {\n            iVar2 = *((arg_8h - arg_ch) + piVar6);\n            if ((iVar2 == 0) || (*piVar6 == 0)) break;\n            iVar2 = (*pcVar1)(iVar2);\n            iVar3 = (*pcVar1)(*piVar6);\n            if (iVar2 != iVar3) {\n                uVar4 = (*pcVar1)(*(var_4h * 2 + arg_8h));\n                uVar5 = (*pcVar1)(arg_ch[var_4h]);\n                return (uVar4 & 0xffff) - (uVar5 & 0xffff);\n            }\n            var_4h = var_4h + 1;\n            piVar6 = piVar6 + 1;\n        } while (var_4h < arg_10h);\n    }\n    return var_4h != arg_10h;\n}\n",
        "token_count": 338
    },
    "00401bdf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401bdf(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_44h;\n    code *var_4h;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    pcVar2 = _sym.imp.KERNEL32.dll_FindResourceExA;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindResourceExA)(uVar3, arg_8h, arg_ch, *0x41772c);\n    if ((iVar4 != 0) || (iVar4 = (*pcVar2)(uVar3, arg_8h, arg_ch, 0x409),  iVar4 != 0)) {\n        if (arg_10h != NULL) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_SizeofResource)(uVar3, iVar4);\n            *arg_10h = uVar5;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar3, iVar4);\n        if (iVar4 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar4);\n            return uVar3;\n        }\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    if (*0x41773c == 0) {\n        *0x41773c = 1;\n        uVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32\", \"SetProcessPreferredUILanguages\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        var_4h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3);\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_44h, L\"%04X%c%04X%c\", *0x41772c, 0, 0x409, 0);\n        if (var_4h == NULL) {\n            uVar3 = (*pcVar2)(\"kernel32\", \"SetThreadPreferredUILanguages\");\n            var_4h = (*pcVar1)(uVar3);\n            if (var_4h == NULL) {\n                return 0;\n            }\n        }\n        (*var_4h)(4, &var_44h, 0);\n    }\n    return 0;\n}\n",
        "token_count": 546
    },
    "00401cc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401cc8(uint hgdiobj)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint lpvObject;\n    uint var_28h;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hDC;\n    \n    hDC = (*_sym.imp.USER32.dll_GetWindowDC)(0);\n    iVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(hDC, 0x58);\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    if (iVar2 < 1) {\n        iVar2 = 0x60;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, 0x60);\n    if (iVar2 < 0x76) {\n        if (iVar2 < 0x92) {\n            (*_sym.imp.USER32.dll_ReleaseDC)(0, hDC);\n            uVar4 = (*_sym.imp.USER32.dll_CopyImage)(hgdiobj, 0, 0, 0, 0);\n            return uVar4;\n        }\n    }\n    else if (iVar2 < 0x92) {\n        uVar4 = 4;\n        uVar5 = 3;\n        goto code_r0x00401d1e;\n    }\n    uVar4 = 3;\n    uVar5 = 2;\ncode_r0x00401d1e:\n    (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n    nWidth = (*pcVar1)(var_28h, uVar4, uVar5);\n    nHeight = (*pcVar1)(var_24h, uVar4, uVar5);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    uVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(hDC);\n    uVar5 = (*pcVar1)(hDC);\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    var_10h = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, hgdiobj);\n    uVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(hDC, nWidth, nHeight);\n    var_14h = (*pcVar1)(uVar5, uVar3);\n    (*_sym.imp.GDI32.dll_SetStretchBltMode)(uVar5, 4);\n    (*_sym.imp.GDI32.dll_StretchBlt)(uVar5, 0, 0, nWidth, nHeight, uVar4, 0, 0, var_28h, var_24h, 0xcc0020);\n    nWidth = (*_sym.imp.GDI32.dll_GetCurrentObject)(uVar5, 7);\n    (*pcVar1)(uVar4, var_10h);\n    (*pcVar1)(uVar5, var_14h);\n    pcVar1 = _sym.imp.GDI32.dll_DeleteDC;\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar4);\n    (*pcVar1)(uVar5);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, hDC);\n    return nWidth;\n}\n",
        "token_count": 753
    },
    "00401f47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "identify system language via API"
        ],
        "decompiled_code": "\nuint16_t fcn.00401f47(void)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    \n    if (*0x41772c == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetUserDefaultUILanguage)();\n        *0x41772c = *0x41772c & 0xffff0000 | uVar1;\n        if ((uVar1 & 0x3ff) != 9) {\n            return uVar1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDefaultUILanguage)();\n        if (iVar2 == 0x409) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetSystemDefaultLCID)();\n            if (uVar3 == *0x414060) {\n                *0x41772c = *0x41772c & 0xffff0000 | *0x414060 & 0xffff;\n            }\n        }\n    }\n    return *0x41772c;\n}\n",
        "token_count": 231
    },
    "00402185": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00402185(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    if (*0x417730 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32\", \"Wow64RevertWow64FsRedirection\");\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        if (pcVar2 != NULL) {\n            (*pcVar2)(*0x417734);\n            *0x417730 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "004021ed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.004021ed(int32_t arg_8h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint var_24h;\n    \n    if (arg_8h == 0) {\ncode_r0x004021fb:\n        bVar1 = true;\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32\", \"GetNativeSystemInfo\");\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        if (pcVar3 == NULL) {\n            return arg_8h == 1;\n        }\n        (*pcVar3)(&var_24h);\n        if (var_24h == 9) {\n            if (arg_8h == 2) {\n                fcn.004021b9();\n                goto code_r0x004021fb;\n            }\n        }\n        else if ((var_24h == 0) && (arg_8h == 1)) {\n            return true;\n        }\n        bVar1 = false;\n    }\n    return bVar1;\n}\n",
        "token_count": 260
    },
    "0040245a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040245a(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint lpBuffer;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    lpBuffer = 0x40;\n    if (((((*0x41776c & 2) == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&lpBuffer),  iVar1 != 0)) &&\n        (var_2ch == 0)) && (var_30h < arg_8h)) {\n        arg_8h_00 = fcn.00401f9d(0x2b);\n        iVar1 = fcn.00407717(arg_8h_00);\n        if (iVar1 != 1) {\n            *0x41776c = 0xffffffff;\n            return 0;\n        }\n        *0x41776c = *0x41776c | 2;\n    }\n    return 1;\n}\n",
        "token_count": 252
    },
    "0040272e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0040272e(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00401411();\n    if (param_2[1] != 0) {\n        uVar1 = *param_2;\n        iVar3 = param_2[1];\n        uVar2 = fcn.00402535(iVar3, iVar3 + 1);\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(param_2, 0, uVar1, iVar3, uVar2);\n        *(*param_1 + iVar3 * 2) = 0;\n        param_1[1] = iVar3;\n    }\n    return param_1;\n}\n",
        "token_count": 183
    },
    "004027c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027c7(uint *arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00401411();\n    if (var_4h < 2) {\n        fcn.0040112b(1);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW;\n    iVar3 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(*arg_8h, var_ch, 1);\n    if (iVar3 == 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    else {\n        uVar1 = *arg_8h;\n        uVar4 = fcn.00402535(iVar3 + 1, iVar3 + 1);\n        (*pcVar2)(uVar1, uVar4);\n        var_8h = fcn.00401117(var_ch);\n        *(var_ch + var_8h * 2) = 0;\n        fcn.00401362(&var_ch);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "004029c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004029c3(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint var_18h;\n    uint var_ch;\n    \n    if (*0x4177f0 == 3) {\n        uVar2 = fcn.004019f0(0x7a);\n    }\n    else {\n        fcn.004025ae();\n        cVar1 = *(arg_ch + *arg_8h);\n        while( true ) {\n            if (((cVar1 == '\\0') || (cVar1 == '\\n')) || (cVar1 == '\\r')) break;\n            fcn.00402640();\n            arg_ch = arg_ch + 1;\n            cVar1 = *(arg_ch + *arg_8h);\n        }\n        fcn.0040272e(&var_ch, &var_18h, 0xfde9);\n        if (arg_10h == '\\0') {\n            fcn.00407776(0, 0xb, *0x417050);\n        }\n        else {\n            fcn.00407776(0, 0x20, var_ch);\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n        uVar2 = sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 328
    },
    "00402c86": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check if file exists",
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.00402c86(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*0x4177f0 != 0) {\n        return 1;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (uVar1 == 0xffffffff) {\n        return 1;\n    }\n    if ((uVar1 & 0x10) != 0) {\n        uVar3 = fcn.00402b79(param_1);\n        return uVar3;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(param_1, 0);\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(param_1);\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "00403093": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00403093(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    uchar uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint unaff_EDI;\n    uint uVar9;\n    uint32_t uVar10;\n    uint var_5ch;\n    uint var_50h;\n    uint var_44h;\n    uint var_38h;\n    uint var_2ch;\n    uchar *var_20h;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.004025ae();\n    do {\n        cVar4 = fcn.004023aa();\n        if (cVar4 == '\\0') {\ncode_r0x00403344:\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n            return 1;\n        }\n        fcn.00401411();\n        fcn.00401411();\n        uVar9 = 0xfde9;\n        var_8h = var_4h;\n        uVar6 = fcn.00402986(&fcn.00403093::var_38h);\n        iVar7 = fcn.0040272e(&fcn.00403093::var_2ch, uVar6, uVar9);\n        fcn.00401362();\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_2ch);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_38h);\n        uVar6 = unaff_EDI;\n        if (var_ch == 0) {\ncode_r0x00403309:\n            uVar5 = fcn.004029c3(arg_8h, iVar7, uVar6);\n            fcn.00402425();\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n            return uVar5;\n        }\n        var_4h = var_4h + var_ch;\n        cVar4 = fcn.004023aa();\n        iVar7 = var_8h;\n        uVar6 = arg_10h;\n        if ((cVar4 == '\\0') || (*(var_4h + *arg_8h) != '=')) goto code_r0x00403309;\n        var_4h = var_4h + 1;\n        cVar4 = fcn.004023aa();\n        pcVar3 = _sym.imp.MSVCRT.dll_strncmp;\n        iVar7 = var_8h;\n        if ((cVar4 == '\\0') || (*(var_4h + *arg_8h) != '\\\"')) goto code_r0x00403309;\n        iVar8 = var_4h + 1;\n        var_1ch = 0;\n        *var_20h = 0;\n        var_4h = iVar8;\n        while( true ) {\n            uVar9 = 5;\n            iVar7 = (*pcVar3)(*arg_8h + iVar8, \"{\\\\rtf\", 5);\n            if (iVar7 == 0) break;\n            while (iVar7 = (*pcVar3)(*arg_8h + iVar8, \"{\\\\rtf\", 5),  iVar7 != 0) {\n                iVar7 = var_8h;\n                if (arg_8h[1] <= iVar8) goto code_r0x00403309;\n                uVar2 = *(*arg_8h + iVar8);\n                iVar7 = iVar8 + 1;\n                var_14h = var_14h & 0xffffff00 | uVar2;\n                var_4h = iVar7;\n                if (uVar2 == 0x22) goto code_r0x00403234;\n                uVar10 = var_14h;\n                if (uVar2 == 0x5c) {\n                    uVar2 = *(*arg_8h + iVar7);\n                    iVar7 = iVar8 + 2;\n                    var_10h = var_10h & 0xffffff00 | uVar2;\n                    var_4h = iVar7;\n                    if (uVar2 == 0x22) {\n                        uVar10 = 0x22;\n                    }\n                    else if (uVar2 == 0x5c) {\n                        uVar10 = 0x5c;\n                    }\n                    else if (uVar2 == 0x6e) {\n                        uVar10 = 10;\n                    }\n                    else if (uVar2 == 0x74) {\n                        uVar10 = 9;\n                    }\n                    else {\n                        fcn.00402640(0x5c);\n                        uVar10 = var_10h;\n                    }\n                }\n                fcn.00402640(uVar10);\n                iVar8 = iVar7;\n            }\n        }\n        while( true ) {\n            iVar7 = *arg_8h;\n            cVar4 = *(iVar7 + iVar8);\n            if ((cVar4 == '\\0') || (cVar4 == '\\\"')) break;\n            if ((cVar4 == '\\\\') && (*(iVar7 + 1 + iVar8) == '\\\"')) {\n                iVar8 = iVar8 + 1;\n            }\n            puVar1 = iVar7 + iVar8;\n            iVar8 = iVar8 + 1;\n            var_4h = iVar8;\n            fcn.00402640(uVar9, *puVar1);\n        }\n        if (*(iVar8 + *arg_8h) != '\\0') {\n            var_4h = iVar8 + 1;\n        }\ncode_r0x00403234:\n        unaff_EDI = fcn.0040272e(&fcn.00403093::var_44h, &fcn.00403093::var_20h, 0xfde9);\n        fcn.00401362();\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_44h);\n        fcn.00402a69(&fcn.00403093::var_50h);\n        pcVar3 = _sym.imp.KERNEL32.dll_lstrcmpW;\n        iVar7 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(var_5ch, L\"SetEnvironment\");\n        if (iVar7 == 0) {\n            unaff_EDI = 0x403284;\n            iVar8 = fcn.00402689(0x3d, 0);\n            iVar7 = var_8h;\n            if (iVar8 < 1) goto code_r0x00403309;\n            if (arg_10h != '\\0') {\n                fcn.00402f6c(&fcn.00403093::var_5ch);\n                fcn.00402425();\n                goto code_r0x00403344;\n            }\n        }\n        if ((arg_10h == '\\0') || (unaff_EDI = arg_ch,  iVar7 = fcn.004023dd(arg_ch, var_5ch, 0),  iVar7 == 0)) {\ncode_r0x004032db:\n            fcn.00402f6c(&fcn.00403093::var_5ch);\n        }\n        else {\n            unaff_EDI = 0x4032bc;\n            iVar7 = (*pcVar3)(var_5ch, L\"GUIFlags\");\n            if (iVar7 == 0) goto code_r0x004032db;\n            unaff_EDI = 0x4032ca;\n            iVar7 = (*pcVar3)(var_5ch, L\"MiscFlags\");\n            if (iVar7 == 0) goto code_r0x004032db;\n            fcn.00401329(var_50h);\n        }\n        fcn.00402425();\n    } while( true );\n}\n",
        "token_count": 1768
    },
    "00403805": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403805(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_8h;\n    if (*(arg_8h + 4) == 0) {\n        arg_8h = 0;\n    }\n    else {\n        cVar3 = fcn.00402715(arg_8h, arg_ch);\n        if (cVar3 == '\\0') {\n            uVar1 = *(arg_8h + 4);\n            iVar2 = *(arg_ch + 4);\n            iVar4 = 0;\n            arg_8h = 0;\n            if (0 < *(in_ECX + 4)) {\n                do {\n                    iVar4 = fcn.0040224f(arg_8h_00, iVar4);\n                    if (iVar4 < 0) {\n                        return arg_8h;\n                    }\n                    fcn.004026b1(iVar4, uVar1);\n                    fcn.00402f96(iVar4, arg_ch);\n                    iVar4 = iVar4 + iVar2;\n                    arg_8h = arg_8h + 1;\n                } while (iVar4 < *(in_ECX + 4));\n            }\n        }\n        else {\n            arg_8h = 0;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 356
    },
    "00403e0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403e0d(void)\n\n{\n    if (*0x417740 == '\\0') {\n        fcn.00402c86(*0x417788);\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "00403ef6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403ef6(int32_t *param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *param_2;\n    while (cVar1 != '\\0') {\n        iVar2 = iVar2 + 1;\n        cVar1 = param_2[iVar2];\n    }\n    fcn.004022fc(iVar2);\n    fcn.0040236e(param_1[1] + *param_1, param_2);\n    param_1[1] = param_1[1] + iVar2;\n    return param_1;\n}\n",
        "token_count": 155
    },
    "0040408b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040408b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    int32_t *piVar7;\n    uint var_18h;\n    uint16_t *var_ch;\n    int32_t var_8h;\n    \n    piVar7 = 0x417398;\n    if (*0x417398 != 0) {\n        do {\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*piVar7);\n            iVar5 = fcn.00401a85(arg_8h, *piVar7, iVar4);\n            if ((iVar5 == 0) && (*(arg_8h + iVar4 * 2) == 0x3d)) {\n                fcn.004024fc(arg_8h);\n                bVar2 = false;\n                uVar1 = *var_ch;\n                puVar6 = var_ch;\n                while ((uVar1 != 0 && ((uVar1 = *puVar6,  0x20 < uVar1 || (bVar2))))) {\n                    if (uVar1 == 0x22) {\n                        bVar2 = !bVar2;\n                    }\n                    else if ((uVar1 == 0x5c) && (puVar6[1] == 0x22)) {\n                        puVar6 = puVar6 + 1;\n                    }\n                    puVar6 = puVar6 + 1;\n                    uVar1 = *puVar6;\n                }\n                var_8h = puVar6 - var_ch >> 1;\n                iVar4 = var_8h * 2;\n                var_ch[var_8h] = 0;\n                fcn.00402776(&var_18h, &var_ch, 0xfde9);\n                cVar3 = fcn.00403093(&var_18h, arg_ch, 1);\n                if (cVar3 == '\\0') {\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n                    arg_8h = 1;\n                }\n                else {\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n                    arg_8h = arg_8h + iVar4;\n                }\n                return arg_8h;\n            }\n            piVar7 = piVar7 + 1;\n        } while (*piVar7 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 607
    },
    "00404594": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t * fcn.00404594(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *param_1;\n    if (uVar1 == 0x22) {\n        param_1 = param_1 + 1;\n        uVar1 = *param_1;\n        if (uVar1 != 0) {\n            do {\n                if (uVar1 == 0x22) break;\n                fcn.00401429();\n                param_1 = param_1 + 1;\n                uVar1 = *param_1;\n            } while (uVar1 != 0);\n            if (*param_1 != 0) {\n                do {\n                    param_1 = param_1 + 1;\ncode_r0x004045f7:\n                } while ((*param_1 != 0) && (*param_1 < 0x21));\n            }\n        }\n    }\n    else if (uVar1 != 0) {\n        do {\n            if (uVar1 < 0x21) goto code_r0x004045f7;\n            fcn.00401429();\n            param_1 = param_1 + 1;\n            uVar1 = *param_1;\n            if (uVar1 == 0) goto code_r0x004045f7;\n        } while( true );\n    }\n    return param_1;\n}\n",
        "token_count": 308
    },
    "004048ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048ab(code *arg_8h, uint arg_ch, uint arg_10h, uint16_t *arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint var_10h;\n    int32_t var_4h;\n    \n    fcn.00401411();\n    bVar2 = false;\n    puVar5 = arg_14h;\n    while ((((uVar1 = *puVar5,  0x2f < uVar1 && (uVar1 < 0x3a)) || ((0x60 < uVar1 && (uVar1 < 0x7b)))) ||\n           (((0x40 < uVar1 && (uVar1 < 0x5b)) || ((arg_14h == puVar5 && (arg_18h == -1))))))) {\n        fcn.00401329(arg_10h);\n        uVar3 = *puVar5;\n        fcn.00401429();\n        var_4h = 0;\n        puVar5 = puVar5 + 1;\n        iVar4 = fcn.0040243b(arg_ch, var_10h, &var_4h);\n        if (iVar4 != 0) {\n            bVar2 = true;\n            do {\n                (*arg_8h)(iVar4, uVar3);\n                var_4h = var_4h + 1;\n                iVar4 = fcn.0040243b(arg_ch, var_10h, &var_4h);\n            } while (iVar4 != 0);\n        }\n    }\n    if ((arg_18h != 0) && ((arg_18h == 1 || ((((*arg_14h != 0 || (arg_18h != -1)) && (!bVar2)) && (*arg_14h != 0)))))) {\n        fcn.004048ab(arg_8h, arg_ch, arg_10h, 0x414440, 0xffffffff);\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n    return;\n}\n",
        "token_count": 500
    },
    "00404faa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404faa(void)\n\n{\n    uint16_t *arg_8h;\n    char cVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *piVar5;\n    uint16_t *puVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    int16_t *piVar9;\n    uint16_t uVar10;\n    uint16_t *puVar11;\n    uint uVar12;\n    int32_t *piVar13;\n    char16_t *pcVar14;\n    uint lpFileName;\n    uint var_10h;\n    uint var_1ch;\n    uint var_28h;\n    uint var_2ch;\n    uint var_30h;\n    uint var_34h;\n    uint var_38h;\n    uint var_3ch_2;\n    uint var_40h;\n    uint var_48h;\n    uint var_4ch;\n    uint var_54h;\n    uint var_66h;\n    uint var_58h;\n    uint var_60h;\n    uint *puVar15;\n    char16_t *arg_10h;\n    uchar *puVar16;\n    uchar *puStack676;\n    uint16_t *puStack672;\n    char16_t *pcStack668;\n    uint *puStack664;\n    int32_t iStack660;\n    uint lpVersionInformation;\n    uint var_234h;\n    uint var_228h;\n    uchar auStack400 [80];\n    uint uStack320;\n    uint uStack308;\n    uint var_124h;\n    uint uStack292;\n    uint uStack280;\n    uint var_110h;\n    int32_t iStack272;\n    uint32_t var_108h;\n    uint uStack240;\n    uint uStack236;\n    int32_t iStack224;\n    uint var_d4h;\n    uchar auStack212 [8];\n    uint var_c8h;\n    uint uStack200;\n    uint pExecInfo;\n    ushort *var_b8h;\n    uint uStack184;\n    int32_t var_ach;\n    uint16_t *var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    int32_t iStack160;\n    int16_t *piStack152;\n    uint uStack140;\n    uint hObject;\n    int32_t var_80h;\n    ushort *puStack124;\n    int32_t var_74h;\n    int32_t iStack112;\n    int32_t var_68h;\n    uint uStack104;\n    uint var_5ch;\n    uint uStack92;\n    uint var_50h;\n    uint var_4ch_2;\n    uint var_44h;\n    uint var_40h_2;\n    uint var_3ch;\n    uint var_38h_2;\n    uint var_34h_2;\n    uint uStack52;\n    uint var_2ch_2;\n    int32_t iStack44;\n    uint var_20h;\n    int32_t var_1ch_2;\n    uint var_18h;\n    uint16_t *puStack24;\n    uint16_t *var_10h_2;\n    uint var_ch;\n    int32_t *piStack12;\n    uint var_4h;\n    \n    fcn.00401b37();\n    puStack676 = 0x114;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&stack0xfffffd5c);\n    if (((iVar3 == 0) || (iStack660 != 2)) || (puStack672 < 5)) {\n        (*_sym.imp.USER32.dll_MessageBoxA)\n                  (0, \"Sorry, this program requires Microsoft Windows 2000 or later.\", \"7-Zip SFX\", 0x10);\n        return 0x14;\n    }\n    var_ach = -1;\n    var_a4h = -1;\n    str.___InstallEnd__[0] = ';';\n    str.___Install__UTF_8_[0] = ';';\n    puStack24 = 0x414440;\n    var_4h._2_1_ = '\\0';\n    var_4h._3_1_ = '\\0';\n    var_4h._0_1_ = '\\0';\n    var_4h._1_1_ = '\\0';\n    fcn.00401411();\n    fcn.00401411();\n    var_3ch = 0;\n    var_38h_2 = 0;\n    var_34h_2 = 0;\n    uStack52 = 4;\n    var_40h_2 = 0x414134;\n    fcn.00403e23(0x20);\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)(&fcn.00404faa::var_b8h);\n    uVar4 = fcn.00404594(uVar4);\n    fcn.0040254d();\n    fcn.00402a69(&stack0xffffff20);\n    puVar11 = iStack224 + 2;\n    piVar5 = fcn.00403d71(puVar11, L\"sfxlang\");\n    if ((piVar5 != NULL) && (*piVar5 == 0x3a)) {\n        iVar3 = (*_sym.imp.MSVCRT.dll__wtol)(piVar5 + 1);\n        if (iVar3 - 1U < 0xffff) {\n            *0x41772c = iVar3;\n        }\n        for (; 0x20 < *puVar11; puVar11 = puVar11 + 1) {\n        }\n        for (; (*puVar11 != 0 && (*puVar11 < 0x21)); puVar11 = puVar11 + 1) {\n        }\n    }\n    fcn.00404405();\n    iVar3 = fcn.00403d71(puVar11, L\"sfxversion\");\n    if (iVar3 != 0) {\n        fcn.00404996();\ncode_r0x004050ec:\n        uVar12 = 0;\n        goto code_r0x004050ee;\n    }\n    if (*0x4177cc < 0x209) {\n        fcn.0040112b(0x208);\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, *0x4177c4, 0x208);\n    puVar16 = *0x4177c4;\n    if (iVar3 == 0) {\n        uVar12 = 1;\n        fcn.00407776(1, 6, uVar4);\n        goto code_r0x004050ee;\n    }\n    *0x4177c8 = fcn.00401117(*0x4177c4);\n    *(puVar16 + *0x4177c8 * 2) = 0;\n    puVar6 = fcn.00403d71(puVar11, L\"sfxtest\");\n    if (puVar6 != NULL) {\n        if (*puVar6 != 0x3a) goto code_r0x00405185;\n        uVar10 = puVar6[1] | 0x20;\n        puVar11 = puVar6;\n        if (uVar10 == 0x61) {\n            *0x4177f0 = 2;\n        }\n        else {\n            if (uVar10 != 99) {\n                if (uVar10 == 100) {\n                    if (puVar6[1] != 0x44) {\n                        puVar11 = puVar6 + 2;\ncode_r0x00405207:\n                        *0x4177ec = 0;\n                        if (*puVar11 == 0x3a) {\n                            pcStack668 = puVar11 + 1;\n                            puStack672 = 0x40521d;\n                            *0x4177ec = (*_sym.imp.MSVCRT.dll__wtol)();\n                            if ((0xe10 < *0x4177ec) || (*0x4177ec == 0)) goto code_r0x0040522e;\n                        }\n                        else {\ncode_r0x0040522e:\n                            *0x4177ec = 10;\n                        }\n                        *0x4177f0 = 1;\n                        goto code_r0x00405266;\n                    }\n                    if (puVar6[2] == 0x3a) {\n                        for (puVar11 = puVar6 + 3; (uVar10 = *puVar11,  0x20 < uVar10 && (uVar10 != 0x3a));\n                            puVar11 = puVar11 + 1) {\n                            puStack664 = uVar10;\n                            puStack672 = 0x4051f0;\n                            fcn.00401429();\n                        }\n                        if (*0x4177f8 != 0) goto code_r0x00405207;\n                    }\n                }\n                else {\n                    if (uVar10 == 0x66) {\n                        uVar12 = 0x2033;\n                        goto code_r0x004050ee;\n                    }\n                    if (uVar10 == 0x76) {\n                        uVar12 = 0x4703;\n                        goto code_r0x004050ee;\n                    }\n                }\ncode_r0x00405185:\n                uVar12 = 100;\n                goto code_r0x004050ee;\n            }\n            *0x4177f0 = (puVar6[2] == 99) + 3;\n        }\ncode_r0x00405266:\n        for (; 0x20 < *puVar11; puVar11 = puVar11 + 1) {\n        }\n        for (; (*puVar11 != 0 && (*puVar11 < 0x21)); puVar11 = puVar11 + 1) {\n        }\n        pcStack668 = L\"sfxconfig\";\n        puStack676 = 0x405289;\n        puStack672 = puVar11;\n        puStack672 = fcn.00403d71();\n        if (puStack672 != NULL) {\n            if (*puStack672 != 0x3a) goto code_r0x0040529f;\n            do {\n                puStack672 = puStack672 + 1;\ncode_r0x0040529f:\n            } while ((*puStack672 != 0) && (*puStack672 < 0x21));\n            *var_b8h = 0;\n            pcStack668 = &fcn.00404faa::var_b8h;\n            uStack184 = 0;\n            puStack676 = 0x4052ba;\n            puVar11 = fcn.00404594();\n            if (*0x4177f0 != 2) {\n                puStack664 = &fcn.00404faa::var_b8h;\n                puStack672 = 0x4052d5;\n                fcn.00401362();\n            }\n        }\n    }\n    pcStack668 = 0x4177c4;\n    puStack672 = 0x4052e5;\n    fcn.00401362();\n    uVar4 = 0x4177c4;\n    puStack676 = 0x4052f2;\n    fcn.00401362();\n    puStack676 = 0x4177c4;\n    iVar3 = fcn.00402d5a();\n    if (-1 < iVar3) {\n        iVar7 = iVar3 * 2;\n        *(iVar7 + *0x417794) = 0;\n        puStack676 = *0x4177c4 + iVar7 + 2;\n        *0x417798 = iVar3;\n        fcn.00401329();\n        fcn.00401329(*0x4177c4 + iVar7 + 2);\n        iVar3 = fcn.00402583(0x2e);\n        if (0 < iVar3) {\n            *(*0x4177b8 + iVar3 * 2) = 0;\n            *0x4177bc = iVar3;\n        }\n        fcn.00401362(0x4177b8);\n        uVar4 = fcn.00401f9d(4);\n        fcn.0040254d(uVar4);\n        *0x41775c = *0x4177b8;\n        *0x417764 = *0x4177ac;\n    }\n    uVar12 = 0;\n    iVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x10, uVar4);\n    if (iVar3 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = fcn.004041b5();\n    }\n    fcn.004010e2(uVar4);\n    puVar16 = *0x4177c4;\n    cVar1 = fcn.0040dc1b();\n    if (cVar1 == '\\0') {\n        fcn.00407776(1, 7, *0x4177c4);\n        if (piStack12 != NULL) {\n            (**(*piStack12 + 8))(piStack12);\n        }\n        uVar12 = 2;\n        goto code_r0x004050ee;\n    }\n    fcn.004025ae();\n    fcn.004025ae();\n    fcn.004025ae();\n    fcn.00404e3f(*0x41772c, &fcn.00404faa::var_4ch_2, &stack0xffffffa4);\n    piVar13 = piStack12;\n    cVar1 = fcn.00402844(piStack12, var_4ch_2, uStack92, &fcn.00404faa::var_20h);\n    if ((cVar1 == '\\0') &&\n       (cVar1 = fcn.00402844(piVar13, \",!@Install@!UTF-8!\", \",!@InstallEnd@!\", &fcn.00404faa::var_20h),  cVar1 == '\\0'))\n    {\n        fcn.00407776(0, 9, puVar16);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n        if (piVar13 != NULL) {\n            (**(*piVar13 + 8))(piVar13);\n        }\n        uVar12 = 3;\n        goto code_r0x004050ee;\n    }\n    if ((*0x4177f0 == 0) && (puVar6 = fcn.00403d71(puVar11, L\"sfxconfig\"),  puVar6 != NULL)) {\n        if (*puVar6 == 0x3a) {\n            puVar6 = puVar6 + 1;\n        }\n        uVar10 = *puVar6;\n        if (uVar10 != 0) {\n            do {\n                if (0x20 < uVar10) break;\n                puVar6 = puVar6 + 1;\n                uVar10 = *puVar6;\n            } while (uVar10 != 0);\n            if ((*puVar6 != 0) && (cVar1 = fcn.00404cbc(puVar6, &fcn.00404faa::var_20h),  cVar1 == '\\0')) {\n                fcn.00407776(0, 10, puVar16);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n                goto code_r0x004054f5;\n            }\n        }\n    }\n    else {\n        fcn.0040e8da();\n        if ((var_1ch_2 != 0) &&\n           (cVar1 = fcn.00403093(&fcn.00404faa::var_20h, &fcn.00404faa::var_40h_2, 0),  cVar1 == '\\0')) {\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\ncode_r0x004054f5:\n            if (piVar13 != NULL) {\n                (**(*piVar13 + 8))(piVar13);\n            }\n            uVar12 = 4;\n            goto code_r0x004050ee;\n        }\n        if (*0x4177f0 != 4) {\n            piVar13 = 0x417058;\n            iVar3 = *0x417058;\n            while (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_wsprintfW)(&stack0xfffffe70, L\"7zSfxString%d\", iVar3);\n                fcn.00401411();\n                fcn.00401411();\n                fcn.00401329(&stack0xfffffe70);\n                uVar4 = fcn.00401f9d(*piVar13);\n                fcn.00401329(uVar4);\n                puVar16 = &stack0xffffff2c;\n                fcn.00402f6c();\n                piVar13 = piVar13 + 4;\n                fcn.00402425();\n                iVar3 = *piVar13;\n            }\n            fcn.00404603(&fcn.00404faa::var_40h_2);\n            puVar11 = puVar11 + -1;\n            uVar12 = 0x20;\n            puVar6 = puVar11;\ncode_r0x004055ff:\n            while( true ) {\n                var_10h_2 = puVar6;\n                uVar10 = *puVar11;\n                while (0x20 < uVar10) {\n                    puVar11 = puVar11 + 1;\n                    var_10h_2 = puVar11;\n                    uVar10 = *puVar11;\n                }\n                while ((*puVar11 != 0 && (*puVar11 < 0x21))) {\n                    puVar11 = puVar11 + 1;\n                    var_10h_2 = puVar11;\n                }\n                if ((*puVar11 != 0x2f) && (*puVar11 != 0x2d)) goto code_r0x00405861;\n                arg_8h = puVar11 + 1;\n                if ((*arg_8h == 0x21) && (puVar11[2] < 0x21)) break;\n                iVar3 = fcn.00403b94(arg_8h, 0x414668);\n                if (iVar3 == 0) {\n                    iVar3 = fcn.00403b94(arg_8h, 0x414660);\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.00403b94(arg_8h, 0x414658);\n                        if (iVar3 != 0) {\n                            if (((0x2f < puVar11[3]) && (puVar11[3] < 0x33)) && (puVar11[4] < 0x21)) {\n                                pcVar14 = L\"GUIMode\";\n                                goto code_r0x00405781;\n                            }\n                            goto code_r0x00405861;\n                        }\n                        iVar3 = fcn.00403b94(arg_8h, 0x414650);\n                        if (iVar3 != 0) {\n                            pcVar14 = L\"GUIFlags\";\n                            goto code_r0x00405781;\n                        }\n                        iVar3 = fcn.00403b94(arg_8h, 0x414648);\n                        if (iVar3 != 0) {\n                            pcVar14 = L\"MiscFlags\";\n                            goto code_r0x00405781;\n                        }\n                        iVar3 = fcn.00403b94(arg_8h, 0x414640);\n                        if (iVar3 != 0) {\n                            if (((puVar11[3] == 0x30) || (puVar11[3] == 0x31)) && (puVar11[4] < 0x21)) {\n                                pcVar14 = L\"SelfDelete\";\n                                goto code_r0x00405781;\n                            }\n                            goto code_r0x00405861;\n                        }\n                        iVar3 = fcn.00403b94(arg_8h, 0x414638);\n                        if (iVar3 == 0) {\n                            iVar3 = fcn.00403b94(arg_8h, 0x414630);\n                            if (iVar3 == 0) {\n                                uVar10 = *arg_8h;\n                                puVar6 = var_10h_2;\n                                if (((uVar10 == 0x79) || (uVar10 == 0x59)) && (puVar11[2] < 0x21)) {\n                                    var_4h._2_1_ = '\\x01';\n                                }\n                                else {\n                                    if ((((uVar10 != 0x3f) && (uVar10 != 0x68)) && (uVar10 != 0x48)) ||\n                                       (0x20 < puVar11[2])) {\n                                        puVar11 = fcn.0040408b(arg_8h, &fcn.00404faa::var_40h_2);\n                                        if (puVar11 != NULL) goto code_r0x0040583e;\n                                        goto code_r0x00405861;\n                                    }\n                                    var_4h._1_1_ = '\\x01';\n                                }\n                            }\n                            else {\n                                uVar10 = puVar11[3];\n                                if ((uVar10 < 0x30) || (0x39 < uVar10)) goto code_r0x00405861;\n                                *0x417358 = (*_sym.imp.MSVCRT.dll__wtol)(puVar11 + 3);\n                                puVar6 = var_10h_2;\n                            }\n                        }\n                        else {\n                            if (0x20 < puVar11[3]) goto code_r0x00405861;\n                            var_4h._0_1_ = '\\x01';\n                            puVar6 = var_10h_2;\n                        }\n                    }\n                    else {\n                        pcVar14 = L\"OverwriteMode\";\ncode_r0x00405781:\n                        fcn.0040484d(pcVar14, puVar11 + 3, &fcn.00404faa::var_40h_2);\n                        puVar6 = var_10h_2;\n                    }\n                }\n                else {\n                    puVar6 = puVar11 + 3;\n                    uVar10 = *puVar6;\n                    if ((((uVar10 < 0x30) || (0x39 < uVar10)) && ((uVar10 < 0x61 || (0x7a < uVar10)))) &&\n                       ((uVar10 < 0x41 || (0x5a < uVar10)))) {\n                        if (0x20 < uVar10) goto code_r0x00405861;\n                        puStack24 = 0x414440;\n                        puVar6 = puStack24;\n                    }\n                    puStack24 = puVar6;\n                    var_4h._2_1_ = '\\x01';\n                    var_4h._3_1_ = '\\x01';\n                    puVar6 = var_10h_2;\n                }\n            }\n            for (var_10h_2 = puVar11 + 2; (*var_10h_2 != 0 && (*var_10h_2 < 0x21)); var_10h_2 = var_10h_2 + 1) {\n            }\ncode_r0x00405861:\n            fcn.00404603(&fcn.00404faa::var_40h_2);\n            var_68h = 0;\n            while (iVar3 = fcn.0040243b(&fcn.00404faa::var_40h_2, L\"SetEnvironment\", &fcn.00404faa::var_68h), \n                  iVar3 != 0) {\n                fcn.004024fc(iVar3);\n                iVar7 = fcn.00402689(0x3d, 0);\n                if (iVar7 < 1) {\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack124);\n                    break;\n                }\n                puStack124[iVar7] = 0;\n                var_74h = iVar7;\n                fcn.00401411();\n                fcn.00401411();\n                fcn.00401362(&stack0xffffff84);\n                fcn.00401329(iVar7 * 2 + 2 + iVar3);\n                fcn.00402f6c(&stack0xffffff2c);\n                var_68h = var_68h + 1;\n                fcn.00402425();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n            }\n            fcn.00404034();\n            if (*0x41734c == 0xffffffff) {\n                *0x41734c = 0;\n            }\n            if (var_4h._1_1_ != '\\0') {\n                iVar3 = fcn.0040243b(&fcn.00404faa::var_40h_2, L\"HelpText\", 0);\n                if (iVar3 == 0) {\n                    iVar3 = fcn.00401f9d(0x18);\n                }\n                fcn.00403b40();\n                fcn.004073d1(0x11, *0x41775c, iVar3, 0);\n                fcn.00406673();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n                if (piStack12 != NULL) {\n                    (**(*piStack12 + 8))(piStack12);\n                }\n                goto code_r0x004050ec;\n            }\n            if (var_4h._2_1_ != '\\0') {\n                *0x41734c = *0x41734c & 0xfffffeff;\n            }\n            (*_sym.imp.ole32.dll_CoInitialize)(0);\n            puVar8 = fcn.0040243b(&fcn.00404faa::var_40h_2, L\"InstallPath\", 0);\n            if (puVar8 != NULL) {\n                fcn.00401329();\n                puVar16 = puVar8;\n            }\n            fcn.00403b59(0x417788);\n            if (*0x4177f8 == 0) {\n                if (*0x4177f0 != 3) {\n                    do {\n                        iVar3 = fcn.0040243b(&fcn.00404faa::var_40h_2, L\"BeginPrompt\", 0);\n                        if ((iVar3 != 0) && (var_4h._2_1_ == '\\0')) {\n                            iVar3 = fcn.00407613(*0x41775c, iVar3);\n                            if (iVar3 != 0) {\n                                iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x10);\n                                if (iVar2 < 0) {\n                                    var_4h._3_1_ = '\\x01';\n                                }\n                                goto code_r0x00405ab0;\n                            }\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n                            goto code_r0x00405bf3;\n                        }\ncode_r0x00405ab0:\n                        fcn.00401411();\n                        puVar11 = puStack24;\n                        if (var_4h._3_1_ != '\\0') {\n                            do {\n                                puVar16 = 0x405ace;\n                                fcn.00401329(L\"AutoInstall\");\n                                fcn.00401429();\n                                iVar3 = fcn.0040243b(&fcn.00404faa::var_40h_2, var_2ch_2, 0);\n                                if (iVar3 == 0) {\n                                    fcn.00407776(0, 0xe, var_2ch_2);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_2ch_2);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n                                    if (piStack12 != NULL) {\n                                        (**(*piStack12 + 8))(piStack12);\n                                    }\n                                    uVar12 = 6;\n                                    goto code_r0x004050ee;\n                                }\n                                puVar11 = puVar11 + 1;\n                                uVar10 = *puVar11;\n                            } while ((((0x2f < uVar10) && (uVar10 < 0x3a)) || ((0x60 < uVar10 && (uVar10 < 0x7b)))) ||\n                                    ((0x40 < uVar10 && (uVar10 < 0x5b))));\n                            fcn.00401329(L\"AutoInstall\");\n                            fcn.00401429(*puStack24);\n                        }\n                        var_4h._1_1_ = '\\0';\n                        if (iStack44 == 0) {\n                            iVar3 = fcn.0040243b(&fcn.00404faa::var_40h_2, L\"ExecuteFile\", 0);\n                            if (iVar3 != 0) {\n                                fcn.00401329(L\"ExecuteFile\");\n                                var_4h._1_1_ = '\\x01';\n                                if (iStack44 != 0) goto code_r0x00405b82;\n                            }\n                            iVar3 = fcn.0040243b(&fcn.00404faa::var_40h_2, L\"RunProgram\", 0);\n                            if (iVar3 != 0) {\n                                fcn.00401329(L\"RunProgram\");\n                            }\n                        }\ncode_r0x00405b82:\n                        if ((((var_4h._3_1_ != '\\0') || (var_4h._2_1_ != '\\0')) || ((*0x41734c & 0xc0) != 0x80)) ||\n                           (iVar3 = fcn.00407674(*0x417754, *0x417750),  iVar3 != 0)) {\n                            if (*0x41778c == 0) {\n                                uVar4 = fcn.00403f85(&fcn.00404faa::hObject, L\"7ZipSfx.%03x\");\n                                fcn.00401362(uVar4);\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n                                *0x417740 = '\\0';\n                            }\n                            else {\n                                puVar15 = 0x417788;\n                                fcn.004012f7();\n                                fcn.00403b59(&fcn.00404faa::hObject);\n                                if (var_80h == 0) {\n                                    puVar15 = &fcn.00404faa::hObject;\n                                    fcn.00401362();\n                                }\n                                *0x417740 = '\\x01';\n                                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(hObject, puVar15);\n                            }\n                            piVar13 = piStack12;\n                            iVar2 = *(*0x417788 + -2 + *0x41778c * 2);\n                            if ((iVar2 == 0x5c) || (iVar2 == 0x2f)) {\n                                *0x41778c = *0x41778c + -1;\n                                *(*0x417788 + *0x41778c * 2) = 0;\n                            }\n                            if (var_4h._2_1_ != '\\0') {\n                                *0x41776c = *0x41776c | 3;\n                            }\n                            if (*0x4177ec == 0) {\n                                iVar3 = fcn.00404a44(piStack12, 0x417788);\ncode_r0x00405d35:\n                                if (iVar3 != 0) {\n                                    fcn.00403e0d();\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_2ch_2);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n                                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n                                    if (piVar13 != NULL) {\n                                        (**(*piVar13 + 8))(piVar13);\n                                    }\n                                    uVar12 = 8;\n                                    goto code_r0x004050ee;\n                                }\n                            }\n                            else {\n                                iVar3 = fcn.0040786b();\n                                piVar13 = piStack12;\n                                if (iVar3 == 0) {\n                                    iVar3 = -0x7fffbffb;\n                                    goto code_r0x00405d35;\n                                }\n                            }\n                            fcn.00404034();\n                            if ((var_4h != '\\0') && (*0x417740 != '\\0')) goto code_r0x00406373;\n                            iStack112 = 0;\n                            fcn.00401411();\n                            if (var_4h._3_1_ == '\\0') {\n                                fcn.0040453e(&fcn.00404faa::var_40h_2, &stack0xffffff84);\n                            }\n                            var_ch._2_1_ = '\\0';\n                            var_a8h = puStack24;\n                            goto code_r0x00405db4;\n                        }\n                        if (*0x417778 == '\\0') {\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_2ch_2);\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\ncode_r0x00405bf3:\n                            if (piStack12 != NULL) {\n                                (**(*piStack12 + 8))(piStack12);\n                            }\n                            uVar12 = 5;\n                            goto code_r0x004050ee;\n                        }\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_2ch_2);\n                    } while( true );\n                }\n                uVar12 = fcn.004082e9(&fcn.00404faa::var_40h_2);\n            }\n            else {\n                uVar12 = fcn.004083b6(&fcn.00404faa::var_40h_2);\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n            goto code_r0x00405893;\n        }\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n    if (piVar13 != NULL) {\n        (**(*piVar13 + 8))(piVar13);\n    }\ncode_r0x004050ee:\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack224);\n    fcn.00403e70();\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack236);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_b8h);\n    return uVar12;\ncode_r0x0040583e:\n    puVar6 = puVar11;\n    if (puVar11 == 0x1) goto code_r0x00405878;\n    goto code_r0x004055ff;\ncode_r0x00405878:\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\ncode_r0x00405893:\n    if (piStack12 != NULL) {\n        (**(*piStack12 + 8))(piStack12);\n    }\n    goto code_r0x004050ee;\ncode_r0x00405db4:\n    uStack140 = 0;\n    var_ch._3_1_ = '\\0';\n    var_4h._3_1_ = '\\0';\n    fcn.00401411();\n    fcn.00401411();\n    if (iStack44 == 0) {\n        if (*0x417740 == '\\0') {\n            pcVar14 = L\"setup.exe\";\n            arg_10h = L\"setup.exe\";\n            uVar4 = fcn.004043c6(&stack0xffffff38, 0x417788, 0x41350c);\n            uVar4 = fcn.004043c6(&stack0xfffffecc, uVar4, arg_10h);\n            fcn.00401362(uVar4);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack308);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack200);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(uStack104);\n            if (iVar3 == -1) {\n                fcn.00403e0d();\n                fcn.00407776(0, 0xf, puVar16);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack152);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack104);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack124);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_2ch_2);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n                if (piVar13 != NULL) {\n                    (**(*piVar13 + 8))(piVar13);\n                }\n                uVar12 = 7;\n                goto code_r0x004050ee;\n            }\n            var_ch._2_1_ = '\\x01';\n            goto code_r0x00405e45;\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack152);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack104);\n        goto code_r0x00406314;\n    }\n    pcVar14 = fcn.0040243b(&fcn.00404faa::var_40h_2, var_2ch_2, &stack0xffffff90);\n    if (pcVar14 == NULL) {\n        puVar11 = var_a8h + 1;\n        uVar10 = *puVar11;\n        var_a8h = puVar11;\n        if ((((uVar10 < 0x30) || (0x39 < uVar10)) && ((uVar10 < 0x61 || (0x7a < uVar10)))) &&\n           ((uVar10 < 0x41 || (0x5a < uVar10)))) {\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack152);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack104);\n            goto code_r0x00406314;\n        }\n        fcn.00401329(L\"AutoInstall\");\n        fcn.00401429(*puVar11);\n        iStack112 = 0;\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack152);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack104);\n        goto code_r0x00405db4;\n    }\ncode_r0x00405e45:\n    fcn.00401329(pcVar14);\n    fcn.00403b7f(&stack0xffffff68);\n    piVar5 = piStack152;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                while( true ) {\n                    while( true ) {\n                        while( true ) {\n                            while( true ) {\n                                while (piVar9 = piVar5,  piVar5 = fcn.00403bce(piVar9, L\"hidcon\", 0),  piVar5 != NULL) {\n                                    var_ch._3_1_ = '\\x01';\n                                }\n                                piVar5 = fcn.00403bce(piVar9, L\"nowait\", 0);\n                                if (piVar5 == NULL) break;\n                                var_4h._3_1_ = *0x417740;\n                            }\n                            piVar5 = fcn.00403bce(piVar9, L\"forcenowait\", 0);\n                            if (piVar5 == NULL) break;\n                            var_4h._3_1_ = '\\x01';\n                        }\n                        piVar5 = fcn.00403bce(piVar9, 0x414630, 2);\n                        if (piVar5 == NULL) break;\n                        if (*0x417358 == -1) {\n                            *0x417358 = (*_sym.imp.MSVCRT.dll__wtol)(piVar9 + 2);\n                        }\n                    }\n                    piVar5 = fcn.00403bce(piVar9, 0x414590, 3);\n                    if (piVar5 == NULL) break;\n                    var_ach = piVar9[3] - 0x30;\n                }\n                piVar5 = fcn.00403bce(piVar9, 0x414588, 3);\n                if (piVar5 == NULL) break;\n                var_a4h = piVar9[3] - 0x30;\n            }\n            piVar5 = fcn.00403bce(piVar9, 0x414580, 0);\n            if ((piVar5 == NULL) && (piVar5 = fcn.00403bce(piVar9, L\"i386\", 0),  piVar5 == NULL)) break;\n            uStack140 = 1;\n        }\n        piVar5 = fcn.00403bce(piVar9, 0x414568, 0);\n        if ((piVar5 == NULL) && (piVar5 = fcn.00403bce(piVar9, 0x414560, 0),  piVar5 == NULL)) break;\n        uStack140 = 2;\n    }\n    if (var_4h._1_1_ == '\\0') {\n        puVar8 = &stack0xffffff84;\n        fcn.00401362(puVar8);\ncode_r0x00406089:\n        fcn.0040254d(piVar9, puVar8);\n    }\n    else {\n        if (*piVar9 == 0x22) {\n            fcn.00401329(piVar9);\n        }\n        else {\n            fcn.00401329(0x414434);\n            fcn.0040254d(piVar9);\n            fcn.0040254d(0x414434);\n        }\n        piVar9 = fcn.0040243b(&fcn.00404faa::var_40h_2, L\"ExecuteParameters\", 0);\n        if (piVar9 != NULL) {\n            puVar8 = 0x41455c;\n            fcn.0040254d();\n            goto code_r0x00406089;\n        }\n    }\n    fcn.00401411();\n    fcn.00401411();\n    sub.MSVCRT.dll_memset(&fcn.00404faa::var_124h, 0, 0x3c);\n    uVar4 = uStack104;\n    var_124h = 0x3c;\n    iStack272 = *0x417788;\n    uStack292 = 0x740;\n    if (var_ch._3_1_ != '\\0') {\n        uStack292 = 0x8740;\n    }\n    var_108h = var_ch._3_1_ == '\\0';\n    uVar12 = fcn.00404594(uStack104, &fcn.00404faa::hObject);\n    fcn.00401329(uVar12);\n    fcn.00403b7f(&fcn.00404faa::hObject);\n    uStack280 = hObject;\n    if ((*0x4177f0 == 0) && (iVar3 = fcn.004021ed(uStack140),  puVar11 = var_10h_2,  iVar3 != 0)) {\n        if (*var_10h_2 != 0) {\n            fcn.00401429(0x20);\n            fcn.0040254d(puVar11);\n            uVar10 = *puVar11;\n            while (uVar10 != 0) {\n                puVar11 = puVar11 + 1;\n                var_10h_2 = puVar11;\n                uVar10 = *puVar11;\n            }\n        }\n        fcn.00403b7f(&fcn.00404faa::var_a0h);\n        if (iStack160 != 0) {\n            var_110h = var_a0h;\n        }\n        iVar3 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&fcn.00404faa::var_124h);\n        if (iVar3 == 0) {\n            fcn.00407776(1, 0x10, uVar4);\n            fcn.00403e0d();\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_a0h);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(hObject);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack152);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar4);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack124);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_2ch_2);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n            if (piStack12 != NULL) {\n                (**(*piStack12 + 8))(piStack12);\n            }\n            uVar12 = 9;\n            goto code_r0x004050ee;\n        }\n        if (var_4h._3_1_ == '\\0') {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack240, 0xffffffff);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack240);\n        fcn.00402185();\n    }\n    if ((var_4h._1_1_ != '\\0') || (var_ch._2_1_ != '\\0')) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_a0h);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(hObject);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack152);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar4);\n        piVar13 = piStack12;\ncode_r0x00406314:\n        if (*0x4177f0 == 0) {\n            fcn.00404034();\n            fcn.004048ab(fcn.00404edf, &fcn.00404faa::var_40h_2, L\"Shortcut\", puStack24, var_ach);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(*0x417794);\n            fcn.004048ab(fcn.00404186, &fcn.00404faa::var_40h_2, L\"Delete\", puStack24, var_a4h);\n            fcn.00403e0d();\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puStack124);\ncode_r0x00406373:\n        if (*0x417358 == -1) {\n            if (var_4h._2_1_ != '\\0') goto code_r0x004063f7;\n            *0x417358 = 1;\n        }\n        if ((0 < *0x417358) && (iVar3 = fcn.0040243b(&fcn.00404faa::var_40h_2, L\"FinishMessage\", 0),  iVar3 != 0)) {\n            if (999 < *0x417358) {\n                *0x417358 = 999;\n            }\n            fcn.00403f48();\n            fcn.004073d1(0x11, *0x41775c, iVar3, 0);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack320);\n            fcn.00406673();\n        }\ncode_r0x004063f7:\n        if ((((var_4h == '\\0') && (*0x4177f0 == 0)) &&\n            (piVar5 = fcn.0040243b(&fcn.00404faa::var_40h_2, L\"SelfDelete\", 0),  piVar5 != NULL)) && (*piVar5 == 0x31))\n        {\n            uVar4 = 0x4177c4;\n            fcn.004012f7();\n            fcn.00404aff(uVar4);\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_2ch_2);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack92);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch_2);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_20h);\n        if (piVar13 != NULL) {\n            (**(*piVar13 + 8))(piVar13);\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iStack224);\n        fcn.00403e70();\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack236);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_b8h);\n        return 0;\n    }\n    var_74h = 0;\n    *puStack124 = 0;\n    iStack112 = iStack112 + 1;\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_a0h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(hObject);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piStack152);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar4);\n    piVar13 = piStack12;\n    goto code_r0x00405db4;\n}\n",
        "token_count": 11471
    },
    "0040692c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040692c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    if (*(param_1 + 0x38) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), param_2);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_ShowWindow)(iVar1, -(unaff_retaddr != 0) & 5);\n        }\n    }\n    else {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 149
    },
    "00407011": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407011(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x60) != 0) {\n        (**(**(param_1 + 0x60) + 0x28))(*(param_1 + 0x60), *(param_1 + 4), param_2);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00407085": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407085(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00406a47();\n    pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n    if (*0x417768 == 1) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 4));\n        iVar2 = var_8h;\n    }\n    else {\n        fcn.0040690f(0x4b4, &var_14h);\n        iVar2 = var_10h;\n    }\n    iVar2 = iVar2 + -10;\n    (*pcVar1)(*(param_1 + 4), &var_14h);\n    var_4h = var_ch + -0x18;\n    if ((*0x41734c & 4) != 0) {\n        iVar2 = iVar2 - *(param_1 + 0x48);\n        fcn.00406a18(0x4b5, 0xc, iVar2, var_4h, *(param_1 + 0x48) + 1, 0);\n        iVar2 = iVar2 + -5;\n    }\n    fcn.0040690f(0x4b8, &var_14h);\n    fcn.00406a18(0x4b8, 0xc, (var_10h - var_8h) + iVar2, var_4h, var_8h - var_10h, 0);\n    return;\n}\n",
        "token_count": 385
    },
    "004073d1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004073d1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    int32_t var_18h;\n    int32_t var_ch;\n    \n    if ((arg_ch == 0) || (arg_10h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.004024fc(arg_10h);\n        fcn.004024fc(arg_ch);\n        fcn.00403b7f(&var_18h);\n        fcn.00403b7f(&var_ch);\n        in_ECX[2] = arg_8h;\n        in_ECX[3] = var_ch;\n        in_ECX[4] = var_18h;\n        uVar1 = (**(*in_ECX + 4))(arg_14h);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 256
    },
    "0040744b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040744b(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((*0x41734c & 0x100) == 0) {\ncode_r0x00407456:\n        uVar1 = 1;\n    }\n    else {\n        if (param_1 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            if (*0x4177f8 != 0) goto code_r0x00407456;\n            uVar1 = *(param_1 + 4);\n        }\n        uVar1 = fcn.004073d1(8, *0x41775c, *0x41774c, uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 167
    },
    "004076a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid __cdecl fcn.004076a8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_3ch;\n    \n    if (*0x4177e8 == '\\0') {\n        *0x4177e8 = '\\x01';\n        fcn.0040661a();\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*0x4177dc, 0x414784);\n        if (iVar1 != 0) {\n            uVar2 = 0x68;\n            iVar1 = (*_sym.imp.KERNEL32.dll_IsBadReadPtr)(*0x4177e0, 0x68);\n            if (iVar1 == 0) {\n                fcn.00407011(uVar2, 4);\n            }\n        }\n        fcn.004073d1(0xd, *0x417764, arg_8h, *0x4177dc);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0040786b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040786b(void)\n\n{\n    uint arg_8h;\n    uint var_68h;\n    \n    arg_8h = 2;\n    if (*0x417744 == 0) {\n        *0x417744 = 0x41335c;\n    }\n    if ((*0x41734c & 0x20) != 0) {\n        arg_8h = 6;\n    }\n    fcn.0040719f();\n    fcn.004073d1(arg_8h, *0x417758, *0x417744, 0);\n    return;\n}\n",
        "token_count": 135
    },
    "00407998": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407998(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint ARG_0;\n    uint var_ch;\n    \n    if (*(in_ECX + 0x40) == 0) {\n        uVar1 = fcn.00401f9d(0x19);\n        fcn.0040725a(0x4b3, uVar1);\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 4), 0x4b3);\n        uVar1 = fcn.00402d7d(&var_ch, uVar1);\n        fcn.00401362(uVar1);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    fcn.00401362(in_ECX + 0x3c);\n    uVar1 = fcn.00401f9d(0x1d);\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x4147dc, *0x417358, uVar1);\n    fcn.0040254d(&ARG_0);\n    fcn.00407134(0x4b3, *arg_8h);\n    return;\n}\n",
        "token_count": 286
    },
    "00407a3a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407a3a(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.004071b8();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n    if (param_1[5] < *0x417350 - iVar2) {\n        iVar2 = (*pcVar1)(7);\n        param_1[5] = *0x417350 - iVar2;\n    }\n    fcn.004024fc(param_1[3]);\n    if ((*0x41734c & 2) == 0) {\n        fcn.0040254d(L\" 100%% \");\n    }\n    iVar2 = fcn.004067ed(var_14h, &var_8h);\n    if ((iVar2 != 0) && (param_1[5] < var_8h)) {\n        param_1[5] = var_8h;\n    }\n    fcn.0040690f(0x4b8, &var_24h);\n    param_1[6] = param_1[6] + (var_18h - var_20h) + 0xe;\n    if ((*0x41734c & 4) != 0) {\n        iVar2 = (**(*param_1 + 8))(L\" 100%% \", param_1 + 0xf, param_1[0xd], 0x820);\n        if (iVar2 != 0) {\n            param_1[6] = param_1[6] + param_1[0x12];\n        }\n        param_1[6] = param_1[6] + 5;\n    }\n    param_1[6] = param_1[6] + -0x12;\n    if (*0x417768 == 1) {\n        fcn.0040690f(0x4b4, &var_24h);\n        param_1[6] = param_1[6] + (var_20h - var_18h);\n    }\n    else {\n        param_1[6] = param_1[6] + 10;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_14h);\n    return;\n}\n",
        "token_count": 564
    },
    "00407b33": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407b33(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    ulong uVar3;\n    uint *puVar4;\n    uint var_24h;\n    uint var_ch;\n    \n    puVar1 = arg_8h;\n    fcn.00401411();\n    if ((*(in_ECX + 0x50) | *(in_ECX + 0x54)) == 0) {\n        arg_8h = NULL;\n    }\n    else {\n        uVar3 = fcn.00411d50(*arg_8h, arg_8h[1], 30000, 0);\n        arg_8h = fcn.00411ca0(uVar3, *(in_ECX + 0x50), *(in_ECX + 0x54));\n    }\n    if (30000 < arg_8h) {\n        arg_8h = 0x7530;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 4), 0x4b8);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x402, arg_8h, 0);\n    (*_sym.imp.USER32.dll_wsprintfW)(&var_24h, L\"%d%%\", (arg_8h + 299) / 300);\n    if ((*0x41734c & 4) != 0) {\n        fcn.00407134(0x4b5, &var_24h);\n    }\n    if ((*0x41734c & 2) == 0) {\n        if ((*0x41734c & 1) == 0) {\n            fcn.00401329(&var_24h);\n            fcn.00401429(0x20);\n            puVar4 = *0x417758;\n        }\n        else {\n            fcn.00401329(*0x417758);\n            fcn.00401429(0x20);\n            puVar4 = &var_24h;\n        }\n        fcn.0040254d(puVar4);\n        fcn.004078e9(var_ch);\n    }\n    if (*(in_ECX + 0x60) != 0) {\n        (**(**(in_ECX + 0x60) + 0x24))\n                  (*(in_ECX + 0x60), *(in_ECX + 4), *puVar1, puVar1[1], *(in_ECX + 0x50), *(in_ECX + 0x54));\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 605
    },
    "00407c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c60(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (arg_8h == 0x113) {\n        puVar1 = in_ECX + 0x58;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + 1;\n        *(in_ECX + 0x5c) = *(in_ECX + 0x5c) + (0xfffffffe < uVar3);\n        if ((-1 < *(in_ECX + 0x5c)) && ((0 < *(in_ECX + 0x5c) || (100 < *puVar1)))) {\n            (*_sym.imp.USER32.dll_EndDialog)(*(in_ECX + 4), 1);\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x8002, 0, puVar1);\n    }\n    else if (arg_8h == 0x8001) {\n        *(in_ECX + 0x50) = *arg_10h;\n        *(in_ECX + 0x54) = arg_10h[1];\n        piVar2 = *(in_ECX + 0x60);\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 0x28))(piVar2, *(in_ECX + 4), 2);\n            (**(**(in_ECX + 0x60) + 0x24))(*(in_ECX + 0x60), *(in_ECX + 4), 0, 0, *(in_ECX + 0x50), *(in_ECX + 0x54));\n        }\n    }\n    else if (arg_8h == 0x8002) {\n        fcn.00407b33(arg_10h);\n    }\n    fcn.004066d6(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 481
    },
    "0040807c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040807c(int32_t param_1)\n\n{\n    uint var_ch;\n    \n    if (1 < *0x417358) {\n        fcn.00401411();\n        fcn.00407998(&var_ch);\n        if (*(param_1 + 0x38) == 0) {\n            fcn.00406ce7(0x4b3, var_ch);\n        }\n        (*_sym.imp.USER32.dll_SetTimer)(*(param_1 + 4), 1, 1000, 0);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    fcn.00407d06();\n    (*_sym.imp.USER32.dll_MessageBeep)(0x40);\n    return 0;\n}\n",
        "token_count": 172
    },
    "004087ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004087ea(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint32_t unaff_EDI;\n    \n    *arg_ch = 0;\n    if (*(in_ECX + 8) != 0) {\n        do {\n            uVar1 = *(*(in_ECX + 0xc) + 4 + *arg_ch * 8);\n            unaff_EDI = arg_8h;\n            if (arg_8h < uVar1) goto code_r0x0040882a;\n            unaff_EDI = arg_8h - uVar1;\n            uVar1 = *arg_ch + 1;\n            *arg_ch = uVar1;\n            arg_8h = unaff_EDI;\n        } while (uVar1 < *(in_ECX + 8));\n    }\n    arg_ch = 0x1;\n    sub.MSVCRT.dll__CxxThrowException(&arg_ch, 0x414cfc);\ncode_r0x0040882a:\n    *arg_10h = unaff_EDI;\n    return;\n}\n",
        "token_count": 268
    },
    "00408ea4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.00408ea4(int32_t *param_1, uint32_t param_2, int32_t *param_3, int32_t param_4, int32_t param_5, \n                      uint param_6, uint param_7)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t iVar10;\n    bool bVar11;\n    int32_t **ppiVar12;\n    uint *puVar13;\n    uchar auStack248 [72];\n    uint *puStack176;\n    uint uStack148;\n    uchar auStack144 [24];\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    uint uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t *piStack20;\n    uint *puStack16;\n    int32_t *piStack12;\n    char *pcStack8;\n    \n    iVar6 = param_5;\n    cVar4 = fcn.0040aef3();\n    if (cVar4 == '\\0') {\n        return 0x80004001;\n    }\n    uStack52 = 0;\n    iStack48 = 0;\n    iStack44 = 0;\n    uStack40 = 4;\n    uStack56 = 0x4148f4;\n    uStack148 = 0;\n    fcn.004065ea(auStack144);\n    fcn.00408726(param_1);\n    param_1 = NULL;\n    if (0 < *(iVar6 + 0x30)) {\n        do {\n            puVar5 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x18);\n            if (puVar5 == NULL) {\n                puVar5 = NULL;\n            }\n            else {\n                puVar5[1] = 0;\n                *puVar5 = 0x41490c;\n            }\n            fcn.004010e2(puVar5);\n            puVar5[2] = &uStack148;\n            puVar5[4] = param_2;\n            puVar5[5] = param_3;\n            puVar1 = param_4 + param_1 * 8;\n            bVar11 = CARRY4(param_2, *puVar1);\n            param_2 = param_2 + *puVar1;\n            param_3 = param_3 + bVar11 + puVar1[1];\n            puVar5 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x28);\n            if (puVar5 == NULL) {\n                puVar5 = NULL;\n            }\n            else {\n                puVar5[1] = 0;\n                *puVar5 = 0x41491c;\n                puVar5[2] = 0;\n            }\n            fcn.004010e2(puVar5);\n            fcn.00408726(piStack20);\n            puVar5[4] = *puVar1;\n            puVar5[5] = puVar1[1];\n            ppiVar12 = &piStack28;\n            puVar5[6] = 0;\n            puVar5[7] = 0;\n            *(puVar5 + 8) = 0;\n            fcn.0040cdb8();\n            if (piStack28 != NULL) {\n                (**(*piStack28 + 8))(piStack28);\n            }\n            if (piStack20 != NULL) {\n                (**(*piStack20 + 8))(piStack20, ppiVar12);\n            }\n            param_1 = param_1 + 1;\n        } while (param_1 < *(param_5 + 0x30));\n    }\n    iStack32 = *(param_5 + 8);\n    fcn.00408d21();\n    fcn.00408b7c(auStack248);\n    if ((*pcStack8 == '\\0') || (cVar4 = fcn.00408858(),  cVar4 == '\\0')) {\n        pcVar3 = pcStack8;\n        fcn.0040e8da();\n        fcn.0040874d();\n        if (pcVar3[0x68] != '\\0') {\n            iVar6 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x88);\n            if (iVar6 == 0) {\n                uVar7 = 0;\n            }\n            else {\n                uVar7 = fcn.00408c96();\n            }\n            *(pcVar3 + 0x6c) = uVar7;\n            fcn.00408726(uVar7);\n            if (*(pcVar3 + 0x6c) == 0) {\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = *(pcVar3 + 0x6c) + 4;\n            }\n            *(pcVar3 + 0x70) = iVar6;\n        }\n        piVar8 = (****(pcVar3 + 0x70))(auStack248);\n        if (piVar8 != NULL) goto code_r0x00409081;\n        puStack16 = NULL;\n        if (0 < iStack32) {\n            do {\n                puVar5 = *(*(param_5 + 0xc) + puStack16 * 4);\n                param_1 = NULL;\n                param_3 = NULL;\n                piStack24 = fcn.0040d94b(*puVar5, puVar5[1], &param_1, &param_3, 0);\n                if (piStack24 != NULL) {\n                    piVar9 = param_1;\n                    if (param_3 != NULL) {\n                        (**(*param_3 + 8))(param_3);\n                        piVar9 = param_1;\n                    }\n                    goto code_r0x00409293;\n                }\n                piStack12 = NULL;\n                if ((puVar5[5] == 1) && (puVar5[6] == 1)) {\n                    if (param_1 == NULL) {\n                        if (param_3 != NULL) {\n                            (**(*param_3 + 8))(param_3);\n                            goto code_r0x004092b2;\n                        }\ncode_r0x004092bf:\n                        piVar8 = 0x80004001;\n                        goto code_r0x00409081;\n                    }\n                    fcn.00408726(param_1);\n                    if (pcVar3[0x68] != '\\0') {\n                        fcn.0040d6cb(param_1);\n                    }\n                }\n                else {\n                    if (param_3 == NULL) {\ncode_r0x004092b2:\n                        if (param_1 != NULL) {\n                            (**(*param_1 + 8))(param_1);\n                        }\n                        goto code_r0x004092bf;\n                    }\n                    fcn.00408726(param_3);\n                    if (pcVar3[0x68] != '\\0') {\n                        fcn.0040d6f0(param_3);\n                    }\n                }\n                fcn.0040cdb8(&piStack12);\n                if (piStack12 != NULL) {\n                    (**(*piStack12 + 8))(piStack12);\n                }\n                if (param_3 != NULL) {\n                    (**(*param_3 + 8))(param_3);\n                }\n                if (param_1 != NULL) {\n                    (**(*param_1 + 8))(param_1);\n                }\n                puStack16 = puStack16 + 1;\n            } while (puStack16 < iStack32);\n        }\n        fcn.00408e83(auStack248);\n        *pcVar3 = '\\x01';\n    }\n    pcVar3 = pcStack8;\n    (**(**(pcStack8 + 0x70) + 4))();\n    puStack16 = NULL;\n    iStack36 = 0;\n    piStack28 = NULL;\n    if (0 < iStack32) {\n        pcStack8 = NULL;\n        do {\n            iVar6 = *(*(param_5 + 0xc) + piStack28 * 4);\n            puVar5 = **(pcStack8 + *(pcVar3 + 0x84));\n            piStack12 = NULL;\n            (***puVar5)(puVar5, 0x414868, &piStack12);\n            if (piStack12 != NULL) {\n                piStack24 = (**(*piStack12 + 0xc))(piStack12, *(iVar6 + 0x10), *(iVar6 + 0xc));\n                piVar9 = piStack12;\n                if (piStack24 != NULL) goto code_r0x00409293;\n                if (piStack12 != NULL) {\n                    (**(*piStack12 + 8))(piStack12);\n                }\n            }\n            piStack24 = *(iVar6 + 0x14);\n            iVar10 = *(iVar6 + 0x18);\n            pcStack8 = pcStack8 + 4;\n            uStack60 = 4;\n            uStack80 = 4;\n            uStack72 = 0;\n            uStack68 = 0;\n            uStack64 = 0;\n            uStack76 = 0x4149e8;\n            uStack92 = 0;\n            uStack88 = 0;\n            uStack84 = 0;\n            uStack96 = 0x4149e8;\n            fcn.0040e811(piStack24);\n            iVar6 = iVar10;\n            fcn.0040e811(iVar10);\n            iVar2 = param_5;\n            for (piStack20 = iVar10; piStack20 != NULL; piStack20 = piStack20 + -1) {\n                iVar6 = *(iVar2 + 0x48) + iStack36 * 8;\n                fcn.00408761();\n                iStack36 = iStack36 + 1;\n            }\n            piStack20 = NULL;\n            if (piStack24 != NULL) {\n                do {\n                    puVar13 = puStack16;\n                    iVar6 = fcn.00408a55();\n                    if (iVar6 < 0) {\n                        puVar5 = puStack16;\n                        iVar10 = fcn.00408aa0();\n                        iVar6 = param_4;\n                        if (iVar10 < 0) {\n                            fcn.0040e959();\n                            fcn.0040e959();\n                            piVar8 = 0x80004005;\n                            goto code_r0x00409081;\n                        }\n                    }\n                    else {\n                        iVar10 = *(*(iVar2 + 0x20) + 4 + iVar6 * 8);\n                        iVar6 = *(iVar2 + 0x48);\n                    }\n                    iVar6 = iVar6 + iVar10 * 8;\n                    fcn.00408761(iVar6, puVar13, puVar5);\n                    piStack20 = piStack20 + 1;\n                    puStack16 = puStack16 + 1;\n                } while (piStack20 < piStack24);\n            }\n            piVar8 = piStack28;\n            (**(**(pcVar3 + 0x70) + 8))(piStack28, uStack64, uStack84, iVar6);\n            fcn.0040e959();\n            fcn.0040e959();\n            piStack28 = piVar8 + 1;\n        } while (piStack28 < iStack32);\n    }\n    fcn.004087ea(*puStack176, &param_5, &param_4);\n    if (pcVar3[0x68] != '\\0') {\n        *(*(pcVar3 + 0x6c) + 0x70) = param_5;\n    }\n    piVar8 = NULL;\n    if (iStack32 != 0) {\n        uStack116 = 0;\n        uStack112 = 0;\n        uStack108 = 0;\n        uStack104 = 4;\n        uStack120 = 0x4149e8;\n        iVar6 = iStack48;\n        fcn.0040e811(iStack48);\n        iVar10 = 0;\n        if (0 < iStack48) {\n            do {\n                iVar6 = **(iStack44 + iVar10 * 4);\n                fcn.00408761();\n                iVar10 = iVar10 + 1;\n            } while (iVar10 < iStack48);\n        }\n        uStack100 = param_6;\n        piVar8 = (**(**(pcVar3 + 0x74) + 0xc))\n                           (*(pcVar3 + 0x74), uStack108, 0, iStack48, &uStack100, 0, 1, param_7, iVar6);\n        fcn.0040e959();\n    }\ncode_r0x00409081:\n    fcn.0040e959();\n    fcn.00408835();\n    fcn.00408931();\n    fcn.00408963();\n    return piVar8;\ncode_r0x00409293:\n    piVar8 = piStack24;\n    if (piVar9 != NULL) {\n        (**(*piVar9 + 8))(piVar9);\n        piVar8 = piStack24;\n    }\n    goto code_r0x00409081;\n}\n",
        "token_count": 3081
    },
    "00409bcd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00409bcd(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((param_2 < *(param_1 + 0x120)) && (*(param_2 + *(param_1 + 0x124)) != '\\0')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "00409cde": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409cde(int32_t param_1)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (*(*(param_1 + 0x28) + *(*(param_1 + 0x18) + 0xc)) == '\\0') {\n        var_4h = 2;\n    }\n    else {\n        var_4h = *(param_1 + 0x2c) != '\\0';\n    }\n    iVar5 = *(param_1 + 0x24) + *(param_1 + 0x28);\n    var_8h = NULL;\n    iVar4 = (**(**(param_1 + 0x1c) + 0x14))(*(param_1 + 0x1c), *(param_1 + 0x20) + iVar5, &var_8h, var_4h);\n    if (iVar4 == 0) {\n        fcn.00408726(var_8h);\n        uVar1 = *(param_1 + 0x2d);\n        iVar4 = *(param_1 + 0xc);\n        *(iVar4 + 0x18) = 0xffffffff;\n        *(iVar4 + 0x10) = 0;\n        *(iVar4 + 0x14) = 0;\n        *(iVar4 + 0x1c) = uVar1;\n        *(param_1 + 0x2e) = 1;\n        puVar2 = *(*(*(param_1 + 0x14) + 0x70) + iVar5 * 4);\n        *(param_1 + 0x30) = *puVar2;\n        *(param_1 + 0x34) = puVar2[1];\n        if ((((var_4h == 0) && (var_8h == NULL)) && (cVar3 = fcn.00409bcd(iVar5),  cVar3 == '\\0')) &&\n           (*(puVar2 + 0x1d) == '\\0')) {\n            var_4h = 2;\n        }\n        iVar4 = (**(**(param_1 + 0x1c) + 0x18))(*(param_1 + 0x1c), var_4h);\n        if (var_8h != NULL) {\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    else if (var_8h != NULL) {\n        (**(*var_8h + 8))(var_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 612
    },
    "00409e3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409e3e(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    piVar3 = arg_14h;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    if (arg_10h != NULL) {\n        do {\n            if (*(arg_8h + 0x2e) == '\\0') {\n                iVar4 = fcn.00409dff();\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n                if (*(arg_8h + 0x28) == *(*(arg_8h + 0x18) + 8)) {\n                    if (piVar3 == NULL) {\n                        return 0;\n                    }\n                    *piVar3 = *piVar3 + arg_10h;\n                    return 0;\n                }\n                iVar4 = fcn.00409cde();\ncode_r0x00409ee9:\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n            }\n            else {\n                arg_14h = arg_10h;\n                if ((*(arg_8h + 0x34) == 0) && (*(arg_8h + 0x30) <= arg_10h)) {\n                    arg_14h = *(arg_8h + 0x30);\n                }\n                iVar4 = (**(**(arg_8h + 0x10) + 0xc))(*(arg_8h + 0x10), arg_ch, arg_14h, &arg_14h);\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n                if (arg_14h == NULL) {\n                    return 0;\n                }\n                arg_ch = arg_ch + arg_14h;\n                arg_10h = arg_10h - arg_14h;\n                ppiVar1 = arg_8h + 0x30;\n                piVar2 = *ppiVar1;\n                *ppiVar1 = *ppiVar1 - arg_14h;\n                *(arg_8h + 0x34) = *(arg_8h + 0x34) - (piVar2 < arg_14h);\n                if (piVar3 != NULL) {\n                    *piVar3 = *piVar3 + arg_14h;\n                }\n                if ((*(arg_8h + 0x30) | *(arg_8h + 0x34)) == 0) {\n                    iVar4 = fcn.00409dc2();\n                    if (iVar4 != 0) {\n                        return iVar4;\n                    }\n                    iVar4 = fcn.00409dff();\n                    goto code_r0x00409ee9;\n                }\n            }\n        } while (arg_10h != NULL);\n    }\n    return 0;\n}\n",
        "token_count": 677
    },
    "00409f49": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00409f49(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    do {\n        if (*(*(param_1 + 0x18) + 8) <= *(param_1 + 0x28)) {\n            return 0;\n        }\n        if (*(param_1 + 0x2e) == '\\0') {\n            iVar1 = fcn.00409cde();\n        }\n        else {\n            iVar1 = fcn.00409ba7(param_2);\n        }\n    } while (iVar1 == 0);\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "0040a11a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a11a(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    int32_t var_ch_2;\n    uint32_t uStack12;\n    \n    fcn.0040b4b2();\n    fcn.0040ad6e();\n    fcn.0040e8da();\n    fcn.0040e811(*(param_1 + 0x44));\n    fcn.0040e8da();\n    fcn.0040e811(*(param_1 + 0x6c));\n    iVar3 = 0;\n    uStack12 = 0;\n    var_ch_2 = 0;\n    if (0 < *(param_1 + 0x6c)) {\n        do {\n            uVar2 = *(*(param_1 + 0x70) + var_ch_2 * 4);\n            bVar4 = *(uVar2 + 0x1c) != '\\0';\n            if (bVar4) {\n                if (uStack12 == 0) {\n                    while( true ) {\n                        if (*(param_1 + 0x44) <= iVar3) {\n                            sub.MSVCRT.dll__CxxThrowException(&stack0xffffffd7, 0x414ef8, iVar3, uVar2 & 0xffffff);\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                        fcn.00408761();\n                        if (*(*(param_1 + 0x5c) + iVar3 * 4) != 0) break;\n                        iVar3 = iVar3 + 1;\n                        uVar2 = extraout_ECX;\n                    }\n                }\ncode_r0x0040b58e:\n                fcn.00408761();\n                if ((bVar4) && (uStack12 = uStack12 + 1,  *(*(param_1 + 0x5c) + iVar3 * 4) <= uStack12)) {\n                    iVar3 = iVar3 + 1;\n                    uStack12 = 0;\n                }\n            }\n            else {\n                if (uStack12 != 0) goto code_r0x0040b58e;\n                fcn.00408761();\n            }\n            var_ch_2 = var_ch_2 + 1;\n        } while (var_ch_2 < *(param_1 + 0x6c));\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "0040ac2d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0040ac2d(void)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar2 = 0;\n    do {\n        pcVar1 = iVar2 + 0x417404;\n        if (pcVar1[unaff_EDI + -0x417404] != *pcVar1) {\n            return pcVar1 & 0xffffff00;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 6);\n    if ((*(unaff_EDI + 0x1a) == '\\0') && (*(unaff_EDI + 0x1b) == '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 171
    },
    "0040aef3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040aef3(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint32_t auStack176 [32];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    if ((*(param_1 + 8) < 0x21) && (*(param_1 + 0x1c) < 0x21)) {\n        iVar6 = 0;\n        uStack24 = 0;\n        uStack20 = 0;\n        iStack16 = 0;\n        uStack12 = 1;\n        uStack28 = 0x4149e8;\n        fcn.0040ac7a(&uStack28);\n        if (0 < *(param_1 + 0x1c)) {\n            do {\n                cVar3 = fcn.0040aca4();\n                if (cVar3 != '\\0') goto code_r0x0040b0cb;\n            } while (extraout_EDX + 1 < *(param_1 + 0x1c));\n        }\n        if (0 < *(param_1 + 0x30)) {\n            do {\n                cVar3 = fcn.0040aca4();\n                if (cVar3 != '\\0') goto code_r0x0040b0cb;\n            } while (extraout_EDX_00 + 1 < *(param_1 + 0x30));\n        }\n        fcn.0040ac7a(&uStack28);\n        if (0 < *(param_1 + 0x1c)) {\n            do {\n                cVar3 = fcn.0040aca4();\n                if (cVar3 != '\\0') goto code_r0x0040b0cb;\n            } while (extraout_EDX_01 + 1 < *(param_1 + 0x1c));\n        }\n        fcn.0040e959();\n        iVar2 = *(param_1 + 8);\n        puVar4 = auStack176;\n        for (iVar5 = 0x20; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        uStack44 = 0;\n        uStack40 = 0;\n        iStack36 = 0;\n        uStack32 = 4;\n        uStack48 = 0x4149e8;\n        uStack24 = 0;\n        uStack20 = 0;\n        iStack16 = 0;\n        uStack12 = 4;\n        uStack28 = 0x4149e8;\n        if (0 < iVar2) {\n            do {\n                iVar2 = *(*(param_1 + 0xc) + iVar6 * 4);\n                uStack8 = 0;\n                if (*(iVar2 + 0x14) != 0) {\n                    do {\n                        fcn.00408761(iVar6);\n                        uStack8 = uStack8 + 1;\n                    } while (uStack8 < *(iVar2 + 0x14));\n                }\n                uStack8 = 0;\n                if (*(iVar2 + 0x18) != 0) {\n                    do {\n                        fcn.00408761(iVar6);\n                        uStack8 = uStack8 + 1;\n                    } while (uStack8 < *(iVar2 + 0x18));\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < *(param_1 + 8));\n        }\n        if (0 < *(param_1 + 0x1c)) {\n            piVar7 = *(param_1 + 0x20);\n            uStack8 = *(param_1 + 0x1c);\n            do {\n                iVar6 = *piVar7;\n                piVar1 = piVar7 + 1;\n                piVar7 = piVar7 + 2;\n                auStack176[*(iStack36 + iVar6 * 4)] =\n                     auStack176[*(iStack36 + iVar6 * 4)] | 1 << (*(iStack16 + *piVar1 * 4) & 0x1f);\n                uStack8 = uStack8 - 1;\n            } while (uStack8 != 0);\n        }\n        fcn.0040e959();\n        fcn.0040e959();\n        puVar4 = auStack176;\n        uStack8 = 0x20;\n        do {\n            iVar6 = 0;\n            do {\n                if ((*puVar4 & 1 << (iVar6 & 0x1f)) != 0) {\n                    *puVar4 = auStack176[iVar6] | *puVar4;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < 0x20);\n            puVar4 = puVar4 + 1;\n            uStack8 = uStack8 + -1;\n        } while (uStack8 != 0);\n        iVar6 = 0;\n        while (in_EAX = 1 << (iVar6 & 0x1f),  (auStack176[iVar6] & in_EAX) == 0) {\n            iVar6 = iVar6 + 1;\n            if (0x1f < iVar6) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\ncode_r0x0040b0d3:\n    return in_EAX & 0xffffff00;\ncode_r0x0040b0cb:\n    in_EAX = fcn.0040e959();\n    goto code_r0x0040b0d3;\n}\n",
        "token_count": 1385
    },
    "0040b0dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b0dc(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    ushort *puVar5;\n    uint32_t var_4h;\n    \n    puVar5 = *in_ECX + in_ECX[2];\n    uVar4 = in_ECX[1] - in_ECX[2] & 0xfffffffe;\n    var_4h = 0;\n    if (uVar4 != 0) {\n        do {\n            if ((*(var_4h + puVar5) == '\\0') && (*(var_4h + 1 + puVar5) == '\\0')) break;\n            var_4h = var_4h + 2;\n        } while (var_4h < uVar4);\n    }\n    uVar2 = var_4h;\n    if (var_4h != uVar4) goto code_r0x0040b11c;\n    do {\n        fcn.0040aaab();\n        uVar2 = extraout_ECX;\ncode_r0x0040b11c:\n        uVar4 = uVar2 >> 1;\n    } while ((uVar2 & 0xfffffffe) != uVar2);\n    iVar1 = fcn.00402535(uVar4);\n    iVar3 = 0;\n    if (uVar4 != 0) {\n        do {\n            *(iVar1 + iVar3 * 2) = *puVar5;\n            iVar3 = iVar3 + 1;\n            puVar5 = puVar5 + 1;\n        } while (iVar3 < uVar4);\n    }\n    *(*arg_8h + (uVar2 & 0xfffffffe)) = 0;\n    arg_8h[1] = uVar4;\n    in_ECX[2] = in_ECX[2] + var_4h + 2;\n    return;\n}\n",
        "token_count": 459
    },
    "0040b163": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.0040b163(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    uint var_20h;\n    uint var_1ch;\n    uint s2;\n    int32_t var_14h;\n    int32_t var_10h;\n    char *var_ch;\n    char *var_8h;\n    uint32_t n;\n    \n    var_10h = in_ECX;\n    iVar2 = fcn.0040f0b6(arg_8h, in_ECX + 0x28, 0x20);\n    if (iVar2 == 0) {\n        cVar1 = fcn.0040ac2d();\n        if (cVar1 == '\\0') {\n            fcn.0040adc3(0x10000);\n            n = 0x1f;\n            sub.MSVCRT.dll_memcpy(0, in_ECX + 0x29, 0x1f);\n            pcVar7 = *(in_ECX + 0x20) + 1;\n            iVar2 = *(in_ECX + 0x24) + (0xfffffffe < *(in_ECX + 0x20));\n            do {\n                if (arg_ch != NULL) {\n                    uVar6 = pcVar7 - *(var_10h + 0x20);\n                    uVar3 = (iVar2 - *(var_10h + 0x24)) - (pcVar7 < *(var_10h + 0x20));\n                    bVar9 = arg_ch[1] <= uVar3;\n                    if ((bVar9 && uVar3 != arg_ch[1]) || ((bVar9 && (*arg_ch <= uVar6 && uVar6 != *arg_ch)))) {\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n                        return 1;\n                    }\n                }\n                do {\n                    iVar4 = (**(*arg_8h + 0xc))(arg_8h, n, 0x10000 - n, &var_14h);\n                    if (iVar4 != 0) goto code_r0x0040b2ed;\n                    n = n + var_14h;\n                    if (var_14h == 0) {\n                        iVar4 = 1;\n                        goto code_r0x0040b2ed;\n                    }\n                } while (n < 0x20);\n                var_ch = n - 0x1f;\n                var_8h = NULL;\n                pcVar5 = var_ch;\n                if (var_ch != NULL) {\n                    do {\n                        for (; (*var_8h != '7' && (var_8h < pcVar5)); var_8h = var_8h + 1) {\n                        }\n                        if (var_8h == pcVar5) break;\n                        cVar1 = fcn.0040ac2d();\n                        pcVar5 = var_8h;\n                        if (cVar1 != '\\0') {\n                            sub.MSVCRT.dll_memcpy(var_10h + 0x28, var_8h, 0x20);\n                            pcVar8 = pcVar7 + pcVar5;\n                            iVar2 = iVar2 + CARRY4(pcVar7, pcVar5);\n                            *(var_10h + 0x20) = pcVar8;\n                            *(var_10h + 0x24) = iVar2;\n                            iVar4 = (**(*arg_8h + 0x10))(arg_8h, pcVar8 + 0x20, iVar2 + (0xffffffdf < pcVar8), 0, 0);\ncode_r0x0040b2ed:\n                            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n                            return iVar4;\n                        }\n                        var_8h = var_8h + 1;\n                        pcVar5 = var_ch;\n                    } while (var_8h < var_ch);\n                }\n                bVar9 = CARRY4(pcVar7, pcVar5);\n                pcVar7 = pcVar7 + pcVar5;\n                iVar2 = iVar2 + bVar9;\n                n = n - pcVar5;\n                (*_sym.imp.MSVCRT.dll_memmove)(0, pcVar5, n);\n            } while( true );\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 1034
    },
    "0040b718": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b718(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = arg_8h;\n    fcn.0040e8da();\n    fcn.0040e811(*(arg_8h + 8));\n    _var_10h = CONCAT44(var_ch, var_10h);\n    while( true ) {\n        while( true ) {\n            iVar5 = fcn.0040ab46();\n            _var_10h = iVar5;\n            if (iVar5 != 0xd) break;\n            iVar3 = 0;\n            if (0 < *(arg_8h + 8)) {\n                do {\n                    fcn.0040abdb();\n                    fcn.00408761();\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < *(arg_8h + 8));\n            }\n        }\n        if (((iVar5 == 10) || (iVar5 == 9)) || (iVar5 == 0)) break;\n        fcn.0040acb7();\n    }\n    if ((*(arg_ch + 8) == 0) && (iVar3 = 0,  0 < *(arg_8h + 8))) {\n        do {\n            fcn.00408761();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(arg_8h + 8));\n    }\n    var_4h = 0;\n    iVar5 = _var_10h;\n    if (0 < *(arg_ch + 8)) {\n        do {\n            uVar1 = *(*(arg_ch + 0xc) + var_4h * 4);\n            iVar3 = var_4h;\n            if (uVar1 != 0) {\n                _var_18h = 0;\n                if (1 < uVar1) {\n                    arg_8h = uVar1 - 1;\n                    _var_18h = 0;\n                    do {\n                        if (iVar5 == 9) {\n                            _var_10h = iVar5;\n                            iVar5 = fcn.0040ab46();\n                            fcn.004087c0();\n                            _var_18h = iVar5 + _var_18h;\n                            iVar3 = var_4h;\n                            iVar5 = _var_10h;\n                        }\n                        arg_8h = arg_8h + -1;\n                    } while (arg_8h != 0);\n                }\n                _var_10h = iVar5;\n                iVar5 = fcn.004095b7();\n                fcn.004087c0(iVar5 - _var_18h);\n                iVar5 = _var_10h;\n            }\n            var_4h = iVar3 + 1;\n        } while (var_4h < *(arg_ch + 8));\n    }\n    if (iVar5 == 9) {\n        _var_10h = iVar5;\n        iVar5 = fcn.0040ab46();\n    }\n    iVar3 = 0;\n    var_4h = 0;\n    arg_8h = 0;\n    if (0 < *(iVar2 + 8)) {\n        do {\n            iVar4 = *(*(arg_ch + 0xc) + iVar3 * 4);\n            if ((iVar4 != 1) || (*(*(*(iVar2 + 0xc) + iVar3 * 4) + 0x54) == '\\0')) {\n                var_4h = var_4h + iVar4;\n            }\n            arg_8h = arg_8h + iVar4;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(iVar2 + 8));\n    }\n    do {\n        _var_10h = iVar5;\n        if (iVar5 == 10) {\n            var_3ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_24h = 0;\n            var_20h = 0;\n            var_30h = 1;\n            var_40h = 0x4149e8;\n            var_1ch = 4;\n            var_2ch = 0x4149e8;\n            fcn.0040b390(var_4h, &var_40h, &var_2ch);\n            iVar3 = 0;\n            arg_10h = 0;\n            if (0 < *(iVar2 + 8)) {\n                do {\n                    iVar4 = *(*(arg_ch + 0xc) + iVar3 * 4);\n                    if (iVar4 != 1) goto joined_r0x0040b920;\n                    if (*(*(*(iVar2 + 0xc) + iVar3 * 4) + 0x54) == '\\0') {\n                        do {\n                            fcn.00409403(*(var_34h + arg_10h));\n                            fcn.00408761();\n                            arg_10h = arg_10h + 1;\n                            iVar4 = iVar4 + -1;\njoined_r0x0040b920:\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        fcn.00409403(1);\n                        fcn.00408761();\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < *(iVar2 + 8));\n            }\n            fcn.0040e959();\n            fcn.0040e959();\n        }\n        else {\n            if (iVar5 == 0) {\n                if (*(arg_14h + 8) == 0) {\n                    fcn.0040ac7a(arg_14h);\n                    fcn.0040e8da();\n                    if (0 < arg_8h) {\n                        do {\n                            fcn.00408761();\n                            arg_8h = arg_8h + -1;\n                        } while (arg_8h != 0);\n                    }\n                }\n                return;\n            }\n            fcn.0040acb7();\n        }\n        iVar5 = fcn.0040ab46();\n    } while( true );\n}\n",
        "token_count": 1526
    },
    "0040ba22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ba22(int32_t param_1)\n\n{\n    fcn.0040e7f0();\n    if (*(param_1 + 0xc) != 0) {\n        *(param_1 + 0x18) = *(*(param_1 + 0x10) + -4 + *(param_1 + 0xc) * 4);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0040baa1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040baa1(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != '\\0') {\n        fcn.0040ba22();\n        *(param_1 + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0040bb9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bb9a(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *arg_8h_00;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    ulong uVar8;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uchar var_35h;\n    uint var_34h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t *var_ch;\n    uchar *var_8h;\n    uint32_t *var_4h;\n    \n    var_14h = fcn.0040abdb();\n    fcn.0040e8da();\n    fcn.0040e811(var_14h);\n    var_4h = NULL;\n    var_18h = 0;\n    var_10h = 0;\n    if (var_14h != 0) {\n        do {\n            var_4ch = 0x4149b0;\n            var_48h = 0;\n            var_44h = 0;\n            fcn.0040bb37(&var_54h);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n            puVar7 = *(*(arg_8h + 0xc) + -4 + *(arg_8h + 8) * 4);\n            uVar5 = fcn.0040aacb();\n            uVar2 = uVar5 << 0x18;\n            var_ch = uVar5 & 0xf;\n            fcn.0040aae2(&var_34h, var_ch);\n            puVar1 = var_ch;\n            if (8 < var_ch) goto code_r0x0040bd76;\n            var_24h = 0;\n            var_20h = 0;\n            if (0 < var_ch) {\n                var_ch = NULL;\n                var_8h = &var_35h + puVar1;\n                var_1ch = puVar1;\n                do {\n                    uVar8 = fcn.00411db0();\n                    var_24h = var_24h | uVar8;\n                    var_20h = var_20h | uVar8 >> 0x20;\n                    var_8h = var_8h + -1;\n                    var_ch = var_ch + 2;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != NULL);\n            }\n            *puVar7 = var_24h;\n            puVar7[1] = var_20h;\n            if ((uVar2 & 0x10000000) == 0) {\n                uVar5 = 1;\n                puVar7[5] = 1;\n            }\n            else {\n                uVar5 = fcn.0040abdb();\n                puVar7[5] = uVar5;\n                uVar5 = fcn.0040abdb();\n            }\n            puVar7[6] = uVar5;\n            if ((uVar2 & 0x20000000) != 0) {\n                var_1ch = fcn.0040abdb();\n                fcn.0040adc3(var_1ch);\n                fcn.0040aae2(puVar7[4], var_1ch);\n            }\n            if ((uVar2 & 0x80000000) != 0) goto code_r0x0040bd76;\n            var_4h = var_4h + puVar7[5];\n            var_18h = var_18h + puVar7[6];\n            var_10h = var_10h + 1;\n        } while (var_10h < var_14h);\n    }\n    arg_8h_00 = var_18h + -1;\n    fcn.0040e8da();\n    fcn.0040e811(arg_8h_00);\n    puVar3 = arg_8h_00;\n    puVar1 = var_1ch;\n    puVar7 = var_4h;\n    while (var_1ch = puVar3,  var_4h = puVar7,  var_1ch != NULL) {\n        var_24h = fcn.0040abdb();\n        uVar4 = fcn.0040abdb();\n        fcn.004087c0(var_24h, uVar4);\n        puVar1 = var_1ch + -1;\n        puVar7 = var_4h;\n        puVar3 = puVar1;\n    }\n    var_1ch = puVar1;\n    if (puVar7 < arg_8h_00) goto code_r0x0040bd76;\n    iVar6 = puVar7 - arg_8h_00;\n    fcn.0040e811(iVar6);\n    if (iVar6 == 1) {\n        puVar7 = NULL;\n        if (var_4h != NULL) {\n            do {\n                iVar6 = fcn.00408a55(puVar7);\n                if (iVar6 < 0) goto code_r0x0040bd7b;\n                puVar7 = puVar7 + 1;\n            } while (puVar7 < var_4h);\n        }\n        while (*(arg_8h + 0x30) != 1) {\ncode_r0x0040bd76:\n            fcn.0040aaab();\ncode_r0x0040bd7b:\n            fcn.00408761(puVar7);\n        }\n    }\n    else {\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            fcn.0040abdb();\n            fcn.00408761();\n        }\n    }\n    return;\n}\n",
        "token_count": 1362
    },
    "0040c9fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n\nint32_t __cdecl fcn.0040c9fc(int32_t arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t **in_ECX;\n    int64_t iVar8;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.0040a0bf();\n    *(arg_8h + 0x138) = in_ECX[8];\n    *(arg_8h + 0x13c) = in_ECX[9];\n    *(arg_8h + 0x130) = *(in_ECX + 0x2e);\n    *(arg_8h + 0x131) = *(in_ECX + 0x2f);\n    if (*(arg_8h + 0x130) == '\\0') goto code_r0x0040ca41;\n    do {\n        do {\n            do {\n                do {\n                    do {\n                        fcn.0040aaab();\ncode_r0x0040ca41:\n                        piVar7 = in_ECX[0xc];\n                        piVar2 = in_ECX[0x10];\n                        var_18h = in_ECX[0xd];\n                        var_14h = in_ECX[0xe];\n                        var_10h = in_ECX[0xf];\n                        var_4h = in_ECX[0x11];\n                        piVar5 = fcn.00408660();\n                        piVar3 = in_ECX[8];\n                        piVar4 = in_ECX[9];\n                        *(arg_8h + 0x140) = piVar3 + 8;\n                        *(arg_8h + 0x144) = piVar4 + (0xffffffdf < piVar3);\n                    } while (piVar5 != piVar7);\n                    if ((var_10h | piVar2) == 0) {\n                        return 0;\n                    }\n                    if (piVar2 != NULL) {\n                        return 1;\n                    }\n                    iVar6 = (**(**in_ECX + 0x10))(*in_ECX, var_18h, var_14h, 1, 0);\n                    if (iVar6 != 0) {\n                        return iVar6;\n                    }\n                    var_20h = 0;\n                    var_1ch = 0;\n                    var_24h = 0x4149b0;\n                    var_28h = 0x40cad8;\n                    piVar7 = var_10h;\n                    fcn.0040adc3();\n                    var_28h = var_10h;\n                    var_30h = *in_ECX;\n                    var_2ch = var_1ch;\n                    var_34h = 0x40cae6;\n                    iVar6 = fcn.0040f0b6(var_30h, var_1ch, var_10h);\n                    if (iVar6 != 0) {\ncode_r0x0040caef:\n                        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch, piVar7);\n                        return iVar6;\n                    }\n                    ppiVar1 = in_ECX + 0x12;\n                    piVar7 = *ppiVar1;\n                    *ppiVar1 = *ppiVar1 + var_10h + 8;\n                    in_ECX[0x13] = in_ECX[0x13] + CARRY4(piVar7, var_10h + 8) + (0xffffffdf < var_10h);\n                    *(arg_8h + 0x1c8) = var_10h + var_18h + 0x20;\n                    *(arg_8h + 0x1cc) = var_14h + (0xffffffdf < var_10h + var_18h) + CARRY4(var_10h, var_18h);\n                    var_28h = 0x40cb33;\n                    piVar7 = fcn.00408660();\n                } while (piVar7 != var_4h);\n                var_28h = &fcn.0040c9fc::var_24h;\n                var_4h = var_4h & 0xffffff00;\n                var_30h = 0x40cb4d;\n                fcn.0040bada();\n                var_34h = 0;\n                var_2ch = 0;\n                var_28h = 0x4;\n                var_38h = 0x4149f0;\n                var_30h = 0x40cb6e;\n                iVar8 = fcn.0040ab46();\n                if (iVar8 == 1) goto code_r0x0040cc1b;\n            } while (iVar8 != 0x17);\n            var_30h = &fcn.0040c9fc::var_38h;\n            var_34h = arg_8h + 0x150;\n            var_38h = *(arg_8h + 0x144);\n            piVar7 = *(arg_8h + 0x140);\n            iVar6 = fcn.0040c0dc();\n            if (iVar6 != 0) {\n                fcn.0040ae60();\n                fcn.0040baa1();\n                goto code_r0x0040caef;\n            }\n            if (var_30h == NULL) {\n                fcn.0040ae60();\n                fcn.0040baa1();\n                iVar6 = 0;\n                goto code_r0x0040caef;\n            }\n        } while (1 < var_30h);\n        fcn.0040baa1();\n        fcn.0040bada();\n        iVar8 = fcn.0040ab46();\n    } while (iVar8 != 1);\ncode_r0x0040cc1b:\n    *(arg_8h + 0x1c0) = in_ECX[0x12];\n    *(arg_8h + 0x1c4) = in_ECX[0x13];\n    iVar6 = fcn.0040c3d8(arg_8h);\n    fcn.0040ae60();\n    fcn.0040baa1();\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n    return iVar6;\n}\n",
        "token_count": 1579
    },
    "0040cd51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cd51(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint32_t unaff_EDI;\n    \n    *arg_ch = 0;\n    if (*(in_ECX + 8) != 0) {\n        do {\n            uVar1 = *(*(in_ECX + 0xc) + *arg_ch * 8);\n            unaff_EDI = arg_8h;\n            if (arg_8h < uVar1) goto code_r0x0040cd90;\n            unaff_EDI = arg_8h - uVar1;\n            uVar1 = *arg_ch + 1;\n            *arg_ch = uVar1;\n            arg_8h = unaff_EDI;\n        } while (uVar1 < *(in_ECX + 8));\n    }\n    arg_ch = 0x1;\n    sub.MSVCRT.dll__CxxThrowException(&arg_ch, 0x414cfc);\ncode_r0x0040cd90:\n    *arg_10h = unaff_EDI;\n    return;\n}\n",
        "token_count": 266
    },
    "0040ce70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ce70(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    fcn.0040e8da();\n    fcn.0040e8da();\n    uVar4 = 0;\n    if (*(param_1 + 0x1c) != 0) {\n        do {\n            piVar1 = *(param_1 + 0x58) + uVar4 * 4;\n            if (*piVar1 != 0) {\n                *piVar1 = *(param_1 + 0x30) + uVar4 * 8;\n            }\n            fcn.00408761();\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + 0x1c));\n    }\n    uVar4 = 0;\n    if (*(param_1 + 0x20) != 0) {\n        do {\n            piVar1 = *(param_1 + 0x6c) + uVar4 * 4;\n            if (*piVar1 != 0) {\n                *piVar1 = *(param_1 + 0x44) + uVar4 * 8;\n            }\n            fcn.00408761();\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + 0x20));\n    }\n    if (*(param_1 + 0x14) == NULL) {\n        uVar2 = (**(**(param_1 + 0x18) + 0xc))\n                          (*(param_1 + 0x18), *(param_1 + 0xac), *(param_1 + 0x58), *(param_1 + 0x1c), *(param_1 + 0xc0)\n                           , *(param_1 + 0x6c), *(param_1 + 0x20), param_2);\n    }\n    else {\n        uVar2 = (**(**(param_1 + 0x14) + 0xc))\n                          (*(param_1 + 0x14), **(param_1 + 0xac), **(param_1 + 0xc0), **(param_1 + 0x58), \n                           **(param_1 + 0x6c));\n    }\n    iVar3 = 0;\n    *(param_1 + 0x74) = uVar2;\n    if (0 < *(param_1 + 0x80)) {\n        do {\n            fcn.0040874d();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0x80));\n    }\n    iVar3 = 0;\n    if (0 < *(param_1 + 0x94)) {\n        do {\n            fcn.0040874d();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 685
    },
    "0040d038": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d038(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (0 < *(in_ECX + 0x7c)) {\n        do {\n            puVar1 = *(in_ECX + 0x18) + var_4h * 8;\n            fcn.0040e8da();\n            var_8h = NULL;\n            if (*puVar1 != 0) {\n                var_14h = 0;\n                do {\n                    fcn.0040cdb8(&var_14h);\n                    var_8h = var_8h + 1;\n                } while (var_8h < *puVar1);\n            }\n            fcn.0040e8da();\n            var_8h = NULL;\n            if (puVar1[1] != 0) {\n                var_14h = 0;\n                do {\n                    fcn.0040cdb8(&var_14h);\n                    var_8h = var_8h + 1;\n                } while (var_8h < puVar1[1]);\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0x7c));\n    }\n    var_4h = 0;\n    if (0 < *(in_ECX + 0x28)) {\n        do {\n            puVar2 = *(in_ECX + 0x2c) + var_4h * 8;\n            fcn.0040cd51(*puVar2, &var_1ch, &var_10h);\n            fcn.004087ea(puVar2[1], &var_18h, &var_14h);\n            fcn.0040efa5(*(*(*(var_1ch * 4 + *(in_ECX + 0x80)) + 0x84) + var_10h * 4), \n                         *(*(*(var_18h * 4 + *(in_ECX + 0x80)) + 0x98) + var_14h * 4));\n            var_ch = NULL;\n            var_8h = NULL;\n            fcn.0040cd9b(0x4148c8, &var_ch);\n            uVar4 = 0x4148c8;\n            fcn.0040cd9b();\n            if (var_ch == NULL) {\ncode_r0x0040d1a9:\n                if (var_8h != NULL) {\n                    (**(*var_8h + 8))(var_8h, uVar4);\n                }\n            }\n            else if (var_8h != NULL) {\n                (**(*var_ch + 0xc))(var_ch, var_10h, 0x80000);\n                (**(*var_8h + 0x10))(var_8h, var_14h, 0x80000);\n                goto code_r0x0040d1a9;\n            }\n            if (var_ch != NULL) {\n                (**(*var_ch + 8))(var_ch);\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0x28));\n    }\n    iVar3 = 0;\n    if (0 < *(in_ECX + 0x3c)) {\n        do {\n            fcn.0040cd51(*(*(in_ECX + 0x40) + iVar3 * 4), &var_1ch, &var_18h);\n            fcn.00408726();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(in_ECX + 0x3c));\n    }\n    iVar3 = 0;\n    if (0 < *(in_ECX + 0x50)) {\n        do {\n            fcn.004087ea(*(*(in_ECX + 0x54) + iVar3 * 4), &arg_8h, &var_1ch);\n            fcn.00408726();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(in_ECX + 0x50));\n    }\n    return 0;\n}\n",
        "token_count": 1031
    },
    "0040d296": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040d296(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, uint arg_18h, uint noname_5, int32_t arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    if ((arg_14h == *(arg_8h + 0x3c)) && (arg_20h == *(arg_8h + 0x50))) {\n        fcn.0040d038(arg_ch, arg_18h);\n        iVar4 = 0;\n        if (0 < *(arg_8h + 0x7c)) {\n            do {\n                if ((iVar4 != *(arg_8h + 0x70)) && (iVar2 = fcn.0040f160(),  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < *(arg_8h + 0x7c));\n        }\n        iVar4 = 0;\n        if (0 < *(arg_8h + 0x7c)) {\n            do {\n                if (iVar4 != *(arg_8h + 0x70)) {\n                    fcn.0040f1bc();\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < *(arg_8h + 0x7c));\n        }\n        fcn.0040ce70(arg_24h);\n        iVar4 = 0;\n        if (0 < *(arg_8h + 0x7c)) {\n            do {\n                if (iVar4 != *(arg_8h + 0x70)) {\n                    fcn.00406532(*(*(*(arg_8h + 0x80) + iVar4 * 4) + 8));\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < *(arg_8h + 0x7c));\n        }\n        iVar4 = fcn.0040d26b(0x80004004);\n        if ((iVar4 == 0) && (iVar4 = fcn.0040d26b(0x8007000e),  iVar4 == 0)) {\n            iVar2 = *(arg_8h + 0x7c);\n            iVar4 = 0;\n            if (0 < iVar2) {\n                piVar3 = *(arg_8h + 0x80);\n                do {\n                    iVar1 = *(*piVar3 + 0x74);\n                    if (((iVar1 != 0) && (iVar1 != -0x7fffbffb)) && (iVar1 != 1)) {\n                        return iVar1;\n                    }\n                    iVar4 = iVar4 + 1;\n                    piVar3 = piVar3 + 1;\n                } while (iVar4 < iVar2);\n            }\n            iVar4 = fcn.0040d26b(1);\n            if (iVar4 == 0) {\n                iVar4 = 0;\n                if (0 < iVar2) {\n                    piVar3 = *(arg_8h + 0x80);\n                    do {\n                        if (*(*piVar3 + 0x74) != 0) {\n                            return *(*piVar3 + 0x74);\n                        }\n                        iVar4 = iVar4 + 1;\n                        piVar3 = piVar3 + 1;\n                    } while (iVar4 < iVar2);\n                }\n                iVar4 = 0;\n            }\n        }\n    }\n    else {\n        iVar4 = -0x7ff8ffa9;\n    }\n    return iVar4;\n}\n",
        "token_count": 827
    },
    "0040d89f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040d89f(code *arg_8h, code *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    if (*0x417908 != 0) {\n        do {\n            ppcVar1 = *(uVar4 * 4 + 0x417808);\n            if ((ppcVar1[2] == arg_8h) && (ppcVar1[3] == arg_ch)) {\n                if (arg_1ch == '\\0') {\n                    if (*ppcVar1 != NULL) {\n                        uVar2 = (**ppcVar1)();\n                        goto code_r0x0040d8e8;\n                    }\n                }\n                else if (ppcVar1[1] != NULL) {\n                    uVar2 = (*ppcVar1[1])();\ncode_r0x0040d8e8:\n                    if (*(ppcVar1 + 6) == '\\0') {\n                        if (ppcVar1[5] == 0x1) {\n                            fcn.00408726(uVar2);\n                        }\n                        else {\n                            fcn.00408726(uVar2);\n                        }\n                    }\n                    else {\n                        fcn.00408726(uVar2);\n                    }\n                    break;\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *0x417908);\n    }\n    if ((arg_20h != '\\0') && (*arg_10h != 0)) {\n        iVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x60);\n        if (iVar3 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.0040e456();\n        }\n        fcn.00408726(uVar2);\n        fcn.00408726(*arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 481
    },
    "0040dc8b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0040dc8b(char param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != '\\0') {\n        return 0;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (uVar1 == 0) {\n        return 0x80004005;\n    }\n    if (0 < uVar1) {\n        uVar1 = uVar1 & 0xffff | 0x80070000;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0040dde6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040dde6(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (((*(param_1 + 0x38) != '\\0') &&\n        (uVar3 = *(param_1 + 0x40) - *(param_1 + 0x48), \n        *(param_1 + 0x44) - *(param_1 + 0x4c) == *(param_1 + 0x40) < *(param_1 + 0x48))) && (uVar3 < param_3)) {\n        param_3 = uVar3;\n    }\n    iVar2 = fcn.0040f0df(param_2, *(param_1 + 0x20), param_3);\n    if (iVar2 == 0) {\n        puVar1 = param_1 + 0x48;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + param_3;\n        *(param_1 + 0x4c) = *(param_1 + 0x4c) + CARRY4(uVar3, param_3);\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0040df0e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040df0e(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00401472(arg_ch, 0x414c04);\n    if ((iVar1 == 0) && (iVar1 = fcn.00401472(arg_ch, 0x414858),  iVar1 == 0)) {\n        iVar1 = fcn.00401472(arg_ch, 0x414898);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00401472(arg_ch, 0x414818);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00401472(arg_ch, 0x4148a8);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.00401472(arg_ch, 0x414828);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.00401472(arg_ch, 0x414838);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.00401472(arg_ch, 0x414868);\n                            if (iVar1 == 0) {\n                                return -0x7fffbffe;\n                            }\n                            if ((arg_8h[0x15] == 0) &&\n                               (iVar1 = (***arg_8h[0x16])(arg_8h[0x16], 0x414868, arg_8h + 0x15),  iVar1 != 0)) {\n                                return iVar1;\n                            }\n                            *arg_10h = arg_8h + 6;\n                            (**(*arg_8h + 4))(arg_8h);\n                            return 0;\n                        }\n                        piVar2 = arg_8h + 5;\n                    }\n                    else {\n                        piVar2 = arg_8h + 4;\n                    }\n                }\n                else {\n                    piVar2 = arg_8h + 3;\n                }\n            }\n            else {\n                piVar2 = arg_8h + 2;\n            }\n        }\n        else {\n            piVar2 = arg_8h + 1;\n        }\n        *arg_10h = -(arg_8h != NULL) & piVar2;\n    }\n    else {\n        *arg_10h = arg_8h;\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    return 0;\n}\n",
        "token_count": 564
    },
    "0040e01f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e01f(int32_t arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    iVar4 = arg_8h;\n    iVar1 = fcn.0040de31();\n    if (iVar1 == 0) {\n        iVar1 = 0;\n        *(iVar4 + 0x38) = arg_18h != NULL;\n        if (arg_18h != NULL) {\n            *(iVar4 + 0x40) = *arg_18h;\n            *(iVar4 + 0x44) = arg_18h[1];\n        }\n        while ((*(iVar4 + 0x38) == '\\0' ||\n               ((uVar3 = *(iVar4 + 0x4c),  bVar6 = uVar3 < *(iVar4 + 0x44),  bVar6 || uVar3 == *(iVar4 + 0x44) &&\n                ((bVar6 || (*(iVar4 + 0x48) < *(iVar4 + 0x40)))))))) {\n            arg_8h = 0x20000 - iVar1;\n            iVar2 = fcn.0040f06b(arg_ch, *(iVar4 + 0x20) + iVar1, &arg_8h);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            uVar5 = iVar1 + arg_8h;\n            uVar3 = (**(**(iVar4 + 0x58) + 0x10))(*(iVar4 + 0x58), *(iVar4 + 0x20), uVar5);\n            if (uVar5 < uVar3) {\n                do {\n                    *(uVar5 + *(iVar4 + 0x20)) = 0;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < uVar3);\n                uVar3 = (**(**(iVar4 + 0x58) + 0x10))(*(iVar4 + 0x58), *(iVar4 + 0x20), uVar5);\n            }\n            if (uVar3 == 0) {\n                if (uVar5 != 0) {\n                    iVar4 = fcn.0040dde6(arg_10h, uVar5);\n                    return iVar4;\n                }\n                break;\n            }\n            iVar1 = fcn.0040dde6(arg_10h, uVar3);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            if ((arg_1ch != NULL) && (iVar1 = (**(*arg_1ch + 0xc))(arg_1ch, iVar4 + 0x48, iVar4 + 0x48),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = 0;\n            for (; uVar3 < uVar5; uVar3 = uVar3 + 1) {\n                *(*(iVar4 + 0x20) + iVar1) = *(*(iVar4 + 0x20) + uVar3);\n                iVar1 = iVar1 + 1;\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 770
    },
    "0040e15c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e15c(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    if (arg_10h != 0) {\n        do {\n            uVar3 = 0x20000 - *(arg_8h + 0x1c);\n            if (arg_10h < uVar3) {\n                uVar3 = arg_10h;\n            }\n            sub.MSVCRT.dll_memcpy(*(arg_8h + 0x10) + *(arg_8h + 0x1c), arg_ch, uVar3);\n            arg_10h = arg_10h - uVar3;\n            if (arg_14h != NULL) {\n                *arg_14h = *arg_14h + uVar3;\n            }\n            arg_ch = arg_ch + uVar3;\n            uVar3 = *(arg_8h + 0x1c) + uVar3;\n            uVar1 = (**(**(arg_8h + 0x48) + 0x10))(*(arg_8h + 0x48), *(arg_8h + 0x10), uVar3);\n            *(arg_8h + 0x1c) = uVar1;\n            if (uVar1 == 0) {\n                *(arg_8h + 0x1c) = uVar3;\n                return 0;\n            }\n            if (uVar3 < uVar1) {\n                if (arg_10h == 0) {\n                    return 0;\n                }\n                return -0x7fffbffb;\n            }\n            iVar2 = fcn.0040dde6(*(arg_8h + 0x18), uVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = 0;\n            while (*(arg_8h + 0x1c) < uVar3) {\n                *(*(arg_8h + 0x10) + iVar2) = *(*(arg_8h + 0x10) + *(arg_8h + 0x1c));\n                iVar2 = iVar2 + 1;\n                *(arg_8h + 0x1c) = *(arg_8h + 0x1c) + 1;\n            }\n            *(arg_8h + 0x1c) = iVar2;\n        } while (arg_10h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 612
    },
    "0040e58f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040e58f(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 1;\n    if (param_2 == 0) {\n        param_2 = 1;\n    }\n    if ((*(param_1 + 8) == 0) || (*(param_1 + 0x18) != param_2)) {\n        fcn.0040e556();\n        *(param_1 + 0x18) = param_2;\n        uVar1 = fcn.004024c4(param_2);\n        *(param_1 + 8) = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 185
    },
    "0040e5d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e5d3(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if (*(param_1 + 7) == '\\0') {\n        uVar2 = *param_1 - param_1[2];\n        puVar1 = param_1 + 4;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + uVar2;\n        param_1[5] = param_1[5] + (uVar2 >> 0x1f) + CARRY4(uVar3, uVar2);\n        var_8h = param_1;\n        var_4h = param_1;\n        var_4h = (**(*param_1[3] + 0xc))(param_1[3], param_1[2], param_1[6], &var_8h);\n        if (var_4h != NULL) {\n            sub.MSVCRT.dll__CxxThrowException(&var_4h, 0x414f84);\n        }\n        *param_1 = param_1[2];\n        uVar3 = param_1[2] + var_8h;\n        param_1[1] = uVar3;\n        *(param_1 + 7) = var_8h == NULL;\n        uVar3 = uVar3 & 0xffffff00 | var_8h != NULL;\n    }\n    else {\n        uVar3 = in_EAX & 0xffffff00;\n    }\n    return uVar3;\n}\n",
        "token_count": 392
    },
    "0040e9b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040e9b5(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 1;\n    if (param_2 == 0) {\n        param_2 = 1;\n    }\n    if ((*param_1 == 0) || (param_1[4] != param_2)) {\n        fcn.0040e964();\n        param_1[4] = param_2;\n        uVar1 = fcn.004024c4(param_2);\n        *param_1 = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 171
    },
    "0040eac4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eac4(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    piVar2 = *(arg_8h + 8);\n    uVar5 = 0;\n    if (piVar2 != NULL) {\n        uVar5 = (**(*piVar2 + 0xc))(piVar2, arg_ch, arg_10h, &arg_10h);\n    }\n    if (*(arg_8h + 0x1c) != '\\0') {\n        uVar4 = fcn.0040864e(arg_10h);\n        *(arg_8h + 0x18) = uVar4;\n    }\n    puVar1 = arg_8h + 0x10;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + arg_10h;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + CARRY4(uVar3, arg_10h);\n    if (arg_14h != NULL) {\n        *arg_14h = arg_10h;\n    }\n    return uVar5;\n}\n",
        "token_count": 313
    },
    "0040eb5b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040eb5b(int32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(arg_8h + 0x20);\n    var_4h = *(arg_8h + 0x24);\n    var_10h = *(arg_8h + 0x28);\n    var_ch = *(arg_8h + 0x2c);\n    if (arg_ch != NULL) {\n        bVar5 = CARRY4(var_8h, *arg_ch);\n        var_8h = var_8h + *arg_ch;\n        var_4h = var_4h + arg_ch[1] + bVar5;\n    }\n    if (arg_10h != NULL) {\n        bVar5 = CARRY4(var_10h, *arg_10h);\n        var_10h = var_10h + *arg_10h;\n        var_ch = var_ch + arg_10h[1] + bVar5;\n    }\n    if (((*(arg_8h + 0x30) != '\\0') && (piVar1 = *(arg_8h + 0xc),  piVar1 != NULL)) &&\n       (iVar3 = (**(*piVar1 + 0xc))(piVar1, &var_8h, &var_10h),  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar2 = *(arg_8h + 0x18);\n    bVar5 = CARRY4(var_8h, uVar2);\n    var_8h = var_8h + uVar2;\n    var_4h = var_4h + *(arg_8h + 0x1c) + bVar5;\n    bVar5 = CARRY4(var_10h, uVar2);\n    var_10h = var_10h + uVar2;\n    var_ch = var_ch + *(arg_8h + 0x1c) + bVar5;\n    if (*(arg_8h + 0x31) == '\\0') {\n        iVar3 = 0;\n    }\n    else {\n        puVar4 = &var_8h;\n        if (*(arg_8h + 0x10) == '\\0') {\n            puVar4 = &var_10h;\n        }\n        iVar3 = (**(**(arg_8h + 8) + 0x10))(*(arg_8h + 8), puVar4);\n    }\n    return iVar3;\n}\n",
        "token_count": 644
    },
    "0040f160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f160(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 4;\n    if (((*piVar1 != 0) || (iVar3 = fcn.004065dc(piVar1),  iVar3 == 0)) &&\n       ((piVar2 = param_1 + 8,  *piVar2 != 0 || (iVar3 = fcn.004065dc(piVar2),  iVar3 == 0)))) {\n        fcn.004065a2(piVar1);\n        fcn.004065a2(piVar2);\n        *(param_1 + 0x10) = 0;\n        if (*(param_1 + 0xc) == 0) {\n            iVar3 = fcn.0040653f(param_1 + 0xc, 0x40f12c, param_1);\n        }\n        else {\n            iVar3 = 0;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 245
    },
    "0040f1cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f1cb(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = param_1 + 1;\n    *param_1 = 0x414a08;\n    *(param_1 + 4) = 1;\n    if (*piVar1 != 0) {\n        fcn.0040658e(piVar1);\n    }\n    iVar2 = param_1[3];\n    if (iVar2 != 0) {\n        fcn.00406532(iVar2);\n    }\n    fcn.0040650f(param_1 + 3);\n    fcn.0040650f(param_1 + 2);\n    fcn.0040650f(piVar1);\n    return;\n}\n",
        "token_count": 178
    },
    "0040f22c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040f22c(uint32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, uint noname_3, uint32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    \n    iVar3 = arg_8h;\n    if (*(arg_8h + 0xc) == 0) {\n        iVar5 = fcn.004024c4(0x20000);\n        *(iVar3 + 0xc) = iVar5;\n        if (iVar5 == 0) {\n            return -0x7ff8fff2;\n        }\n    }\n    puVar4 = arg_18h;\n    puVar1 = iVar3 + 0x10;\n    *puVar1 = 0;\n    *(iVar3 + 0x14) = 0;\n    while( true ) {\n        arg_8h = 0x20000;\n        if (((puVar4 != NULL) && (puVar4[1] - *(iVar3 + 0x14) == *puVar4 < *puVar1)) && (*puVar4 - *puVar1 < 0x20000)) {\n            arg_8h = *puVar4 - *puVar1;\n        }\n        iVar5 = (**(*arg_ch + 0xc))(arg_ch, *(iVar3 + 0xc), arg_8h, &arg_8h);\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        if (arg_8h == 0) {\n            return 0;\n        }\n        if ((arg_10h != 0) && (iVar5 = fcn.0040f0df(arg_10h, *(iVar3 + 0xc), arg_8h),  iVar5 != 0)) break;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + arg_8h;\n        *(iVar3 + 0x14) = *(iVar3 + 0x14) + CARRY4(uVar2, arg_8h);\n        if ((arg_1ch != NULL) && (iVar5 = (**(*arg_1ch + 0xc))(arg_1ch, puVar1, puVar1),  iVar5 != 0)) {\n            return iVar5;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 565
    },
    "0040f476": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040f476(uint32_t arg_8h, uint8_t *arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int16_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint16_t *puVar14;\n    uint *in_EDX;\n    uint32_t uVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uchar *puVar19;\n    int32_t iStack108;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint8_t *var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = in_EDX[4];\n    var_ch = in_EDX[0xd];\n    uVar5 = in_EDX[2];\n    var_24h = in_EDX[0xe];\n    var_34h = in_EDX[0xf];\n    var_38h = in_EDX[0x10];\n    var_44h = in_EDX[0x11];\n    uVar6 = in_EDX[1];\n    var_8h = in_EDX[6];\n    uVar15 = in_EDX[7];\n    var_28h = 0;\n    uVar7 = *in_EDX;\n    iVar8 = in_EDX[5];\n    uVar9 = in_EDX[10];\n    var_14h = in_EDX[9];\n    var_20h = in_EDX[0xb];\n    uVar10 = in_EDX[0xc];\n    var_4h = in_EDX[8];\n    do {\n        uVar13 = var_44h;\n        uVar12 = var_20h & (1 << (uVar5 & 0x1f)) - 1U;\n        puVar14 = iVar4 + (var_ch * 0x10 + uVar12) * 2;\n        uVar3 = *puVar14;\n        uVar17 = uVar15;\n        if (uVar15 < 0x1000000) {\n            var_4h = var_4h << 8 | *var_8h;\n            uVar17 = uVar15 << 8;\n            var_8h = var_8h + 1;\n        }\n        uVar15 = (uVar17 >> 0xb) * uVar3;\n        if (var_4h < uVar15) {\n            iVar16 = iVar4 + 0xe6c;\n            *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n            if ((uVar10 != 0) || (var_20h != 0)) {\n                uVar13 = var_14h;\n                if (var_14h == 0) {\n                    uVar13 = uVar9;\n                }\n                var_4ch._0_1_ = uVar7;\n                iVar16 = iVar16 + ((*((uVar13 - 1) + iVar8) >> (8 - var_4ch & 0x1f)) +\n                                  ((var_20h & (1 << (uVar6 & 0x1f)) - 1U) << (var_4ch & 0x1f))) * 0x600;\n            }\n            if (var_ch < 7) {\n                uVar17 = var_ch;\n                if (3 < var_ch) {\n                    uVar17 = 3;\n                }\n                uVar13 = 1;\n                do {\n                    uVar13 = uVar13 * 2;\n                    uVar3 = *(uVar13 + iVar16);\n                    uVar12 = uVar15;\n                    if (uVar15 < 0x1000000) {\n                        var_4h = var_4h << 8 | *var_8h;\n                        uVar12 = uVar15 << 8;\n                        var_8h = var_8h + 1;\n                    }\n                    uVar15 = (uVar12 >> 0xb) * uVar3;\n                    if (var_4h < uVar15) {\n                        *(uVar13 + iVar16) = (0x800 - uVar3 >> 5) + uVar3;\n                    }\n                    else {\n                        var_4h = var_4h - uVar15;\n                        uVar15 = uVar12 - uVar15;\n                        *(uVar13 + iVar16) = uVar3 - (uVar3 >> 5);\n                        uVar13 = uVar13 + 1;\n                    }\n                } while (uVar13 < 0x100);\n            }\n            else {\n                var_2ch = 0x100;\n                var_48h = *(((-(var_14h < var_24h) & uVar9) - var_24h) + in_EDX[5] + var_14h);\n                uVar17 = (-(var_ch < 10) & 0xfffffffd) + 6;\n                uVar13 = 1;\n                do {\n                    var_48h = var_48h << 1;\n                    uVar18 = var_2ch & var_48h;\n                    puVar14 = iVar16 + (var_2ch + uVar18 + uVar13) * 2;\n                    uVar3 = *puVar14;\n                    uVar12 = uVar15;\n                    if (uVar15 < 0x1000000) {\n                        var_4h = var_4h << 8 | *var_8h;\n                        uVar12 = uVar15 << 8;\n                        var_8h = var_8h + 1;\n                    }\n                    uVar15 = (uVar12 >> 0xb) * uVar3;\n                    if (var_4h < uVar15) {\n                        uVar18 = ~uVar18;\n                        iVar11 = 0x800 - uVar3 >> 5;\n                        uVar13 = uVar13 * 2;\n                    }\n                    else {\n                        var_4h = var_4h - uVar15;\n                        uVar15 = uVar12 - uVar15;\n                        iVar11 = -(uVar3 >> 5);\n                        uVar13 = uVar13 * 2 + 1;\n                    }\n                    var_2ch = var_2ch & uVar18;\n                    *puVar14 = iVar11 + uVar3;\n                } while (uVar13 < 0x100);\n            }\n            var_ch = var_ch - uVar17;\n            var_20h = var_20h + 1;\n            *(var_14h + iVar8) = uVar13;\n            var_14h = var_14h + 1;\n        }\n        else {\n            var_4h = var_4h - uVar15;\n            *puVar14 = uVar3 - (uVar3 >> 5);\n            uVar17 = uVar17 - uVar15;\n            puVar14 = iVar4 + 0x180 + var_ch * 2;\n            uVar3 = *puVar14;\n            if (uVar17 < 0x1000000) {\n                var_4h = var_4h * 0x100 | *var_8h;\n                uVar17 = uVar17 * 0x100;\n                var_8h = var_8h + 1;\n            }\n            uVar18 = (uVar17 >> 0xb) * uVar3;\n            if (var_4h < uVar18) {\n                var_ch = var_ch + 0xc;\n                *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                puVar14 = iVar4 + 0x664;\n            }\n            else {\n                var_4h = var_4h - uVar18;\n                uVar17 = uVar17 - uVar18;\n                *puVar14 = uVar3 - (uVar3 >> 5);\n                if ((uVar10 == 0) && (var_20h == 0)) {\n                    return 1;\n                }\n                puVar14 = iVar4 + 0x198 + var_ch * 2;\n                uVar3 = *puVar14;\n                if (uVar17 < 0x1000000) {\n                    var_4h = var_4h * 0x100 | *var_8h;\n                    uVar17 = uVar17 * 0x100;\n                    var_8h = var_8h + 1;\n                }\n                uVar18 = (uVar17 >> 0xb) * uVar3;\n                if (var_4h < uVar18) {\n                    *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                    puVar14 = iVar4 + ((var_ch + 0xf) * 0x10 + uVar12) * 2;\n                    uVar3 = *puVar14;\n                    if (uVar18 < 0x1000000) {\n                        uVar18 = uVar18 * 0x100;\n                        var_4h = var_4h << 8 | *var_8h;\n                        var_8h = var_8h + 1;\n                    }\n                    uVar15 = (uVar18 >> 0xb) * uVar3;\n                    if (var_4h < uVar15) {\n                        *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                        *(var_14h + iVar8) = *(((-(var_14h < var_24h) & uVar9) - var_24h) + var_14h + iVar8);\n                        var_14h = var_14h + 1;\n                        var_20h = var_20h + 1;\n                        var_ch = (-(var_ch < 7) & 0xfffffffe) + 0xb;\n                        goto code_r0x004100c0;\n                    }\n                    var_4h = var_4h - uVar15;\n                    uVar18 = uVar18 - uVar15;\n                    *puVar14 = uVar3 - (uVar3 >> 5);\n                }\n                else {\n                    var_4h = var_4h - uVar18;\n                    uVar17 = uVar17 - uVar18;\n                    *puVar14 = uVar3 - (uVar3 >> 5);\n                    puVar14 = iVar4 + 0x1b0 + var_ch * 2;\n                    uVar3 = *puVar14;\n                    if (uVar17 < 0x1000000) {\n                        var_4h = var_4h * 0x100 | *var_8h;\n                        uVar17 = uVar17 * 0x100;\n                        var_8h = var_8h + 1;\n                    }\n                    uVar18 = (uVar17 >> 0xb) * uVar3;\n                    if (var_4h < uVar18) {\n                        *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                        uVar13 = var_34h;\n                    }\n                    else {\n                        var_4h = var_4h - uVar18;\n                        *puVar14 = uVar3 - (uVar3 >> 5);\n                        uVar17 = uVar17 - uVar18;\n                        puVar14 = iVar4 + 0x1c8 + var_ch * 2;\n                        uVar3 = *puVar14;\n                        if (uVar17 < 0x1000000) {\n                            var_4h = var_4h * 0x100 | *var_8h;\n                            uVar17 = uVar17 * 0x100;\n                            var_8h = var_8h + 1;\n                        }\n                        uVar18 = (uVar17 >> 0xb) * uVar3;\n                        if (var_4h < uVar18) {\n                            *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                            uVar13 = var_38h;\n                        }\n                        else {\n                            var_4h = var_4h - uVar18;\n                            uVar18 = uVar17 - uVar18;\n                            *puVar14 = uVar3 - (uVar3 >> 5);\n                            var_44h = var_38h;\n                        }\n                        var_38h = var_34h;\n                    }\n                    var_34h = var_24h;\n                    var_24h = uVar13;\n                }\n                var_ch = (-(var_ch < 7) & 0xfffffffd) + 0xb;\n                puVar14 = iVar4 + 0xa68;\n            }\n            uVar3 = *puVar14;\n            if (uVar18 < 0x1000000) {\n                var_4h = var_4h << 8 | *var_8h;\n                uVar18 = uVar18 << 8;\n                var_8h = var_8h + 1;\n            }\n            uVar15 = (uVar18 >> 0xb) * uVar3;\n            if (var_4h < uVar15) {\n                var_2ch = 0;\n                *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                puVar14 = puVar14 + uVar12 * 8 + 2;\n                var_28h = 8;\n            }\n            else {\n                var_4h = var_4h - uVar15;\n                uVar18 = uVar18 - uVar15;\n                *puVar14 = uVar3 - (uVar3 >> 5);\n                uVar3 = puVar14[1];\n                if (uVar18 < 0x1000000) {\n                    var_4h = var_4h * 0x100 | *var_8h;\n                    uVar18 = uVar18 * 0x100;\n                    var_8h = var_8h + 1;\n                }\n                uVar15 = (uVar18 >> 0xb) * uVar3;\n                if (var_4h < uVar15) {\n                    puVar14[1] = (0x800 - uVar3 >> 5) + uVar3;\n                    puVar14 = puVar14 + uVar12 * 8 + 0x82;\n                    var_2ch = 8;\n                    var_28h = 8;\n                }\n                else {\n                    var_4h = var_4h - uVar15;\n                    uVar15 = uVar18 - uVar15;\n                    puVar14[1] = uVar3 - (uVar3 >> 5);\n                    puVar14 = puVar14 + 0x102;\n                    var_2ch = 0x10;\n                    var_28h = 0x100;\n                }\n            }\n            uVar13 = 1;\n            do {\n                uVar17 = uVar13 * 2;\n                uVar3 = puVar14[uVar13];\n                uVar12 = uVar15;\n                if (uVar15 < 0x1000000) {\n                    var_4h = var_4h << 8 | *var_8h;\n                    uVar12 = uVar15 << 8;\n                    var_8h = var_8h + 1;\n                }\n                uVar15 = (uVar12 >> 0xb) * uVar3;\n                if (var_4h < uVar15) {\n                    puVar14[uVar13] = (0x800 - uVar3 >> 5) + uVar3;\n                }\n                else {\n                    var_4h = var_4h - uVar15;\n                    uVar15 = uVar12 - uVar15;\n                    puVar14[uVar13] = uVar3 - (uVar3 >> 5);\n                    uVar17 = uVar17 + 1;\n                }\n                uVar13 = uVar17;\n            } while (uVar17 < var_28h);\n            uVar17 = uVar17 + (var_2ch - var_28h);\n            if (0xb < var_ch) {\n                uVar13 = uVar17;\n                if (3 < uVar17) {\n                    uVar13 = 3;\n                }\n                iVar16 = uVar13 * 0x80 + 0x360 + iVar4;\n                uVar3 = *(iVar16 + 2);\n                if (uVar15 < 0x1000000) {\n                    var_4h = var_4h << 8 | *var_8h;\n                    uVar15 = uVar15 << 8;\n                    var_8h = var_8h + 1;\n                }\n                uVar13 = (uVar15 >> 0xb) * uVar3;\n                if (var_4h < uVar13) {\n                    *(iVar16 + 2) = (0x800 - uVar3 >> 5) + uVar3;\n                    iStack108 = 2;\n                }\n                else {\n                    var_4h = var_4h - uVar13;\n                    uVar13 = uVar15 - uVar13;\n                    *(iVar16 + 2) = uVar3 - (uVar3 >> 5);\n                    iStack108 = 3;\n                }\n                iStack108 = iStack108 * 2;\n                uVar3 = *(iStack108 + iVar16);\n                if (uVar13 < 0x1000000) {\n                    var_4h = var_4h << 8 | *var_8h;\n                    uVar13 = uVar13 << 8;\n                    var_8h = var_8h + 1;\n                }\n                uVar15 = (uVar13 >> 0xb) * uVar3;\n                if (var_4h < uVar15) {\n                    *(iStack108 + iVar16) = (0x800 - uVar3 >> 5) + uVar3;\n                }\n                else {\n                    var_4h = var_4h - uVar15;\n                    uVar15 = uVar13 - uVar15;\n                    *(iStack108 + iVar16) = uVar3 - (uVar3 >> 5);\n                    iStack108 = iStack108 + 1;\n                }\n                iStack108 = iStack108 * 2;\n                uVar3 = *(iStack108 + iVar16);\n                if (uVar15 < 0x1000000) {\n                    var_4h = var_4h << 8 | *var_8h;\n                    uVar15 = uVar15 << 8;\n                    var_8h = var_8h + 1;\n                }\n                uVar13 = (uVar15 >> 0xb) * uVar3;\n                if (var_4h < uVar13) {\n                    *(iStack108 + iVar16) = (0x800 - uVar3 >> 5) + uVar3;\n                }\n                else {\n                    var_4h = var_4h - uVar13;\n                    uVar13 = uVar15 - uVar13;\n                    *(iStack108 + iVar16) = uVar3 - (uVar3 >> 5);\n                    iStack108 = iStack108 + 1;\n                }\n                iStack108 = iStack108 * 2;\n                uVar3 = *(iStack108 + iVar16);\n                if (uVar13 < 0x1000000) {\n                    var_4h = var_4h << 8 | *var_8h;\n                    uVar13 = uVar13 << 8;\n                    var_8h = var_8h + 1;\n                }\n                uVar15 = (uVar13 >> 0xb) * uVar3;\n                if (var_4h < uVar15) {\n                    *(iStack108 + iVar16) = (0x800 - uVar3 >> 5) + uVar3;\n                }\n                else {\n                    var_4h = var_4h - uVar15;\n                    uVar15 = uVar13 - uVar15;\n                    *(iStack108 + iVar16) = uVar3 - (uVar3 >> 5);\n                    iStack108 = iStack108 + 1;\n                }\n                iStack108 = iStack108 * 2;\n                uVar3 = *(iStack108 + iVar16);\n                if (uVar15 < 0x1000000) {\n                    var_4h = var_4h << 8 | *var_8h;\n                    uVar15 = uVar15 << 8;\n                    var_8h = var_8h + 1;\n                }\n                uVar13 = (uVar15 >> 0xb) * uVar3;\n                if (var_4h < uVar13) {\n                    *(iStack108 + iVar16) = (0x800 - uVar3 >> 5) + uVar3;\n                }\n                else {\n                    var_4h = var_4h - uVar13;\n                    uVar13 = uVar15 - uVar13;\n                    *(iStack108 + iVar16) = uVar3 - (uVar3 >> 5);\n                    iStack108 = iStack108 + 1;\n                }\n                iStack108 = iStack108 * 2;\n                puVar14 = iVar16 + iStack108;\n                uVar3 = *puVar14;\n                if (uVar13 < 0x1000000) {\n                    var_4h = var_4h << 8 | *var_8h;\n                    uVar13 = uVar13 << 8;\n                    var_8h = var_8h + 1;\n                }\n                uVar15 = (uVar13 >> 0xb) * uVar3;\n                if (var_4h < uVar15) {\n                    *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                }\n                else {\n                    var_4h = var_4h - uVar15;\n                    uVar15 = uVar13 - uVar15;\n                    *puVar14 = uVar3 - (uVar3 >> 5);\n                    iStack108 = iStack108 + 1;\n                }\n                var_18h = iStack108 - 0x40;\n                if (3 < var_18h) {\n                    iVar16 = 1;\n                    var_50h = (var_18h >> 1) - 1;\n                    uVar13 = var_18h & 1 | 2;\n                    if (var_18h < 0xe) {\n                        uVar13 = uVar13 << (var_50h & 0x1f);\n                        var_48h = 1;\n                        iVar2 = iVar4 + 0x55e + (uVar13 - var_18h) * 2;\n                        var_18h = uVar13;\n                        do {\n                            iVar16 = iVar16 * 2;\n                            uVar3 = *(iVar16 + iVar2);\n                            uVar13 = uVar15;\n                            if (uVar15 < 0x1000000) {\n                                var_4h = var_4h << 8 | *var_8h;\n                                uVar13 = uVar15 << 8;\n                                var_8h = var_8h + 1;\n                            }\n                            uVar15 = (uVar13 >> 0xb) * uVar3;\n                            if (var_4h < uVar15) {\n                                *(iVar16 + iVar2) = (0x800 - uVar3 >> 5) + uVar3;\n                            }\n                            else {\n                                var_4h = var_4h - uVar15;\n                                *(iVar16 + iVar2) = uVar3 - (uVar3 >> 5);\n                                uVar15 = uVar13 - uVar15;\n                                iVar16 = iVar16 + 1;\n                                var_18h = var_18h | var_48h;\n                            }\n                            var_48h = var_48h << 1;\n                            var_50h = var_50h + -1;\n                        } while (var_50h != 0);\n                    }\n                    else {\n                        iVar16 = (var_18h >> 1) - 5;\n                        do {\n                            if (uVar15 < 0x1000000) {\n                                var_4h = var_4h << 8 | *var_8h;\n                                uVar15 = uVar15 << 8;\n                                var_8h = var_8h + 1;\n                            }\n                            uVar15 = uVar15 >> 1;\n                            uVar12 = var_4h - uVar15 >> 0x1f;\n                            uVar13 = uVar12 + 1 + uVar13 * 2;\n                            var_4h = (var_4h - uVar15) + (uVar12 & uVar15);\n                            iVar16 = iVar16 + -1;\n                        } while (iVar16 != 0);\n                        uVar3 = *(iVar4 + 0x646);\n                        var_18h = uVar13 * 0x10;\n                        if (uVar15 < 0x1000000) {\n                            var_4h = var_4h * 0x100 | *var_8h;\n                            uVar15 = uVar15 << 8;\n                            var_8h = var_8h + 1;\n                        }\n                        uVar13 = (uVar15 >> 0xb) * uVar3;\n                        if (var_4h < uVar13) {\n                            *(iVar4 + 0x646) = (0x800 - uVar3 >> 5) + uVar3;\n                            iStack108 = 2;\n                        }\n                        else {\n                            var_4h = var_4h - uVar13;\n                            uVar13 = uVar15 - uVar13;\n                            var_18h = var_18h | 1;\n                            *(iVar4 + 0x646) = uVar3 - (uVar3 >> 5);\n                            iStack108 = 3;\n                        }\n                        iStack108 = iStack108 * 2;\n                        puVar14 = iStack108 + 0x644 + iVar4;\n                        uVar3 = *puVar14;\n                        if (uVar13 < 0x1000000) {\n                            var_4h = var_4h << 8 | *var_8h;\n                            uVar13 = uVar13 << 8;\n                            var_8h = var_8h + 1;\n                        }\n                        uVar15 = (uVar13 >> 0xb) * uVar3;\n                        if (var_4h < uVar15) {\n                            *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                        }\n                        else {\n                            var_4h = var_4h - uVar15;\n                            uVar15 = uVar13 - uVar15;\n                            *puVar14 = uVar3 - (uVar3 >> 5);\n                            iStack108 = iStack108 + 1;\n                            var_18h = var_18h | 2;\n                        }\n                        iStack108 = iStack108 * 2;\n                        puVar14 = iStack108 + 0x644 + iVar4;\n                        uVar3 = *puVar14;\n                        if (uVar15 < 0x1000000) {\n                            var_4h = var_4h << 8 | *var_8h;\n                            uVar15 = uVar15 << 8;\n                            var_8h = var_8h + 1;\n                        }\n                        uVar13 = (uVar15 >> 0xb) * uVar3;\n                        if (var_4h < uVar13) {\n                            *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                        }\n                        else {\n                            var_4h = var_4h - uVar13;\n                            uVar13 = uVar15 - uVar13;\n                            *puVar14 = uVar3 - (uVar3 >> 5);\n                            iStack108 = iStack108 + 1;\n                            var_18h = var_18h | 4;\n                        }\n                        puVar14 = iVar4 + 0x644 + iStack108 * 2;\n                        uVar3 = *puVar14;\n                        if (uVar13 < 0x1000000) {\n                            var_4h = var_4h << 8 | *var_8h;\n                            uVar13 = uVar13 << 8;\n                            var_8h = var_8h + 1;\n                        }\n                        uVar15 = (uVar13 >> 0xb) * uVar3;\n                        if (var_4h < uVar15) {\n                            *puVar14 = (0x800 - uVar3 >> 5) + uVar3;\n                        }\n                        else {\n                            var_4h = var_4h - uVar15;\n                            uVar15 = uVar13 - uVar15;\n                            *puVar14 = uVar3 - (uVar3 >> 5);\n                            var_18h = var_18h | 8;\n                        }\n                        if (var_18h == 0xffffffff) {\n                            var_28h = uVar17 + 0x112;\n                            var_ch = var_ch - 0xc;\ncode_r0x004100e8:\n                            if (uVar15 < 0x1000000) {\n                                var_4h = var_4h << 8 | *var_8h;\n                                uVar15 = uVar15 << 8;\n                                var_8h = var_8h + 1;\n                            }\n                            in_EDX[6] = var_8h;\n                            in_EDX[8] = var_4h;\n                            in_EDX[0x12] = var_28h;\n                            in_EDX[9] = var_14h;\n                            in_EDX[0xb] = var_20h;\n                            in_EDX[0xe] = var_24h;\n                            in_EDX[0xf] = var_34h;\n                            in_EDX[0x10] = var_38h;\n                            in_EDX[0x11] = var_44h;\n                            in_EDX[0xd] = var_ch;\n                            in_EDX[7] = uVar15;\n                            return 0;\n                        }\n                    }\n                }\n                var_44h = var_38h;\n                var_38h = var_34h;\n                var_34h = var_24h;\n                var_24h = var_18h + 1;\n                uVar13 = uVar10;\n                if (uVar10 == 0) {\n                    uVar13 = var_20h;\n                }\n                if (uVar13 <= var_18h) {\n                    return 1;\n                }\n                var_ch = (-(var_ch < 0x13) & 0xfffffffd) + 10;\n            }\n            uVar17 = uVar17 + 2;\n            if (arg_8h == var_14h) {\n                return 1;\n            }\n            var_48h = uVar17;\n            if (arg_8h - var_14h < uVar17) {\n                var_48h = arg_8h - var_14h;\n            }\n            var_20h = var_20h + var_48h;\n            var_28h = uVar17 - var_48h;\n            uVar13 = ((-(var_14h < var_24h) & uVar9) - var_24h) + var_14h;\n            if (uVar9 < uVar13 + var_48h) {\n                do {\n                    puVar1 = uVar13 + iVar8;\n                    uVar17 = var_14h + 1;\n                    uVar13 = uVar13 + 1;\n                    *(var_14h + iVar8) = *puVar1;\n                    if (uVar13 == uVar9) {\n                        uVar13 = 0;\n                    }\n                    var_48h = var_48h - 1;\n                    var_14h = uVar17;\n                } while (var_48h != 0);\n            }\n            else {\n                iVar16 = uVar13 - var_14h;\n                puVar19 = iVar8 + var_14h;\n                var_14h = var_14h + var_48h;\n                puVar1 = puVar19 + var_48h;\n                do {\n                    *puVar19 = puVar19[iVar16];\n                    puVar19 = puVar19 + 1;\n                } while (puVar19 != puVar1);\n            }\n        }\ncode_r0x004100c0:\n        if ((arg_8h <= var_14h) || (arg_ch <= var_8h)) goto code_r0x004100e8;\n    } while( true );\n}\n",
        "token_count": 7499
    },
    "0041014a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041014a(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(in_EAX + 0x48);\n    if ((uVar1 != 0) && (uVar1 < 0x112)) {\n        uVar5 = *(in_EAX + 0x24);\n        uVar2 = *(in_EAX + 0x38);\n        uVar3 = *(in_EAX + 0x28);\n        iVar4 = *(in_EAX + 0x14);\n        uVar6 = uVar1;\n        if (arg_8h - uVar5 < uVar1) {\n            uVar6 = arg_8h - uVar5;\n        }\n        if ((*(in_EAX + 0x30) == 0) && (*(in_EAX + 0xc) - *(in_EAX + 0x2c) <= uVar6)) {\n            *(in_EAX + 0x30) = *(in_EAX + 0xc);\n        }\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + uVar6;\n        *(in_EAX + 0x48) = uVar1 - uVar6;\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *(uVar5 + iVar4) = *(((-(uVar5 < uVar2) & uVar3) - uVar2) + uVar5 + iVar4);\n            uVar5 = uVar5 + 1;\n        }\n        *(in_EAX + 0x24) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "004101c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004101c3(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_8h;\n    int32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    \n    while( true ) {\n        arg_8h = unaff_EDI;\n        if (*(unaff_ESI + 0x30) == 0) {\n            uVar1 = *(unaff_ESI + 0xc) - *(unaff_ESI + 0x2c);\n            if (uVar1 < unaff_EDI - *(unaff_ESI + 0x24)) {\n                arg_8h = *(unaff_ESI + 0x24) + uVar1;\n            }\n        }\n        iVar2 = fcn.0040f476(arg_8h, param_1);\n        if (iVar2 != 0) break;\n        if (*(unaff_ESI + 0xc) <= *(unaff_ESI + 0x2c)) {\n            *(unaff_ESI + 0x30) = *(unaff_ESI + 0xc);\n        }\n        fcn.0041014a(unaff_EDI);\n        if (((unaff_EDI <= *(unaff_ESI + 0x24)) || (param_1 <= *(unaff_ESI + 0x18))) || (0x111 < *(unaff_ESI + 0x48))) {\n            if (0x112 < *(unaff_ESI + 0x48)) {\n                *(unaff_ESI + 0x48) = 0x112;\n            }\n            return 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 378
    },
    "0041022d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041022d(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = in_EAX[8];\n    puVar5 = arg_8h + arg_ch;\n    iVar3 = in_EAX[4];\n    uVar8 = in_EAX[7];\n    uVar9 = in_EAX[0xd];\n    uVar6 = (1 << (in_EAX[2] & 0x1f)) - 1U & in_EAX[0xb];\n    if (uVar8 < 0x1000000) {\n        if (puVar5 <= arg_8h) {\n            return 0;\n        }\n        var_4h = var_4h << 8 | *arg_8h;\n        uVar8 = uVar8 << 8;\n        arg_8h = arg_8h + 1;\n    }\n    uVar2 = (uVar8 >> 0xb) * *(iVar3 + (uVar9 * 0x10 + uVar6) * 2);\n    if (var_4h < uVar2) {\n        var_ch = iVar3 + 0xe6c;\n        if ((in_EAX[0xc] != 0) || (in_EAX[0xb] != 0)) {\n            iVar3 = in_EAX[9];\n            if (iVar3 == 0) {\n                iVar3 = in_EAX[10];\n            }\n            var_ch = var_ch + ((*(in_EAX[5] + -1 + iVar3) >> (8U - *in_EAX & 0x1f)) +\n                              (((1 << (in_EAX[1] & 0x1f)) - 1U & in_EAX[0xb]) << (*in_EAX & 0x1f))) * 0x600;\n        }\n        if (uVar9 < 7) {\n            uVar8 = 1;\n            do {\n                uVar8 = uVar8 * 2;\n                uVar9 = uVar2;\n                if (uVar2 < 0x1000000) {\n                    if (puVar5 <= arg_8h) {\n                        return 0;\n                    }\n                    var_4h = var_4h << 8 | *arg_8h;\n                    uVar9 = uVar2 << 8;\n                    arg_8h = arg_8h + 1;\n                }\n                uVar2 = (uVar9 >> 0xb) * *(uVar8 + var_ch);\n                if (uVar2 <= var_4h) {\n                    var_4h = var_4h - uVar2;\n                    uVar2 = uVar9 - uVar2;\n                    uVar8 = uVar8 + 1;\n                }\n            } while (uVar8 < 0x100);\n        }\n        else {\n            if (in_EAX[9] < in_EAX[0xe]) {\n                iVar3 = in_EAX[10];\n            }\n            else {\n                iVar3 = 0;\n            }\n            var_10h = *((in_EAX[5] - in_EAX[0xe]) + in_EAX[9] + iVar3);\n            var_8h = 0x100;\n            uVar8 = 1;\n            do {\n                var_10h = var_10h << 1;\n                uVar9 = var_8h & var_10h;\n                if (uVar2 < 0x1000000) {\n                    if (puVar5 <= arg_8h) {\n                        return 0;\n                    }\n                    var_4h = var_4h << 8 | *arg_8h;\n                    uVar2 = uVar2 << 8;\n                    arg_8h = arg_8h + 1;\n                }\n                uVar6 = (uVar2 >> 0xb) * *(var_ch + (uVar9 + uVar8 + var_8h) * 2);\n                if (var_4h < uVar6) {\n                    uVar8 = uVar8 * 2;\n                    uVar9 = ~uVar9;\n                    uVar2 = uVar6;\n                }\n                else {\n                    uVar2 = uVar2 - uVar6;\n                    var_4h = var_4h - uVar6;\n                    uVar8 = uVar8 * 2 + 1;\n                }\n                var_8h = var_8h & uVar9;\n            } while (uVar8 < 0x100);\n        }\n        var_10h = 1;\n        goto code_r0x004107d4;\n    }\n    var_4h = var_4h - uVar2;\n    uVar8 = uVar8 - uVar2;\n    if (uVar8 < 0x1000000) {\n        if (puVar5 <= arg_8h) {\n            return 0;\n        }\n        var_4h = var_4h * 0x100 | *arg_8h;\n        uVar8 = uVar8 * 0x100;\n        arg_8h = arg_8h + 1;\n    }\n    uVar1 = (uVar8 >> 0xb) * *(iVar3 + 0x180 + uVar9 * 2);\n    if (var_4h < uVar1) {\n        var_18h = 0;\n        puVar4 = iVar3 + 0x664;\n        var_10h = 2;\n    }\n    else {\n        var_4h = var_4h - uVar1;\n        uVar8 = uVar8 - uVar1;\n        var_10h = 3;\n        if (uVar8 < 0x1000000) {\n            if (puVar5 <= arg_8h) {\n                return 0;\n            }\n            var_4h = var_4h * 0x100 | *arg_8h;\n            uVar8 = uVar8 * 0x100;\n            arg_8h = arg_8h + 1;\n        }\n        uVar2 = (uVar8 >> 0xb) * *(iVar3 + 0x198 + uVar9 * 2);\n        if (var_4h < uVar2) {\n            if (uVar2 < 0x1000000) {\n                if (puVar5 <= arg_8h) {\n                    return 0;\n                }\n                uVar2 = uVar2 * 0x100;\n                var_4h = var_4h << 8 | *arg_8h;\n                arg_8h = arg_8h + 1;\n            }\n            uVar1 = (uVar2 >> 0xb) * *(iVar3 + ((uVar9 + 0xf) * 0x10 + uVar6) * 2);\n            if (var_4h < uVar1) {\n                if ((uVar1 < 0x1000000) && (puVar5 <= arg_8h)) {\n                    return 0;\n                }\n                return 3;\n            }\ncode_r0x00410588:\n            var_4h = var_4h - uVar1;\n            uVar1 = uVar2 - uVar1;\n        }\n        else {\n            var_4h = var_4h - uVar2;\n            uVar8 = uVar8 - uVar2;\n            if (uVar8 < 0x1000000) {\n                if (puVar5 <= arg_8h) {\n                    return 0;\n                }\n                var_4h = var_4h * 0x100 | *arg_8h;\n                uVar8 = uVar8 * 0x100;\n                arg_8h = arg_8h + 1;\n            }\n            uVar1 = (uVar8 >> 0xb) * *(iVar3 + 0x1b0 + uVar9 * 2);\n            if (uVar1 <= var_4h) {\n                var_4h = var_4h - uVar1;\n                uVar2 = uVar8 - uVar1;\n                if (uVar2 < 0x1000000) {\n                    if (puVar5 <= arg_8h) {\n                        return 0;\n                    }\n                    var_4h = var_4h * 0x100 | *arg_8h;\n                    uVar2 = uVar2 * 0x100;\n                    arg_8h = arg_8h + 1;\n                }\n                uVar1 = (uVar2 >> 0xb) * *(iVar3 + 0x1c8 + uVar9 * 2);\n                if (uVar1 <= var_4h) goto code_r0x00410588;\n            }\n        }\n        var_18h = 0xc;\n        puVar4 = iVar3 + 0xa68;\n    }\n    if (uVar1 < 0x1000000) {\n        if (puVar5 <= arg_8h) {\n            return 0;\n        }\n        var_4h = var_4h << 8 | *arg_8h;\n        uVar1 = uVar1 << 8;\n        arg_8h = arg_8h + 1;\n    }\n    uVar2 = (uVar1 >> 0xb) * *puVar4;\n    if (var_4h < uVar2) {\n        var_14h = 0;\n        puVar4 = puVar4 + uVar6 * 8 + 2;\n        var_ch = 8;\n    }\n    else {\n        var_4h = var_4h - uVar2;\n        uVar1 = uVar1 - uVar2;\n        if (uVar1 < 0x1000000) {\n            if (puVar5 <= arg_8h) {\n                return 0;\n            }\n            var_4h = var_4h * 0x100 | *arg_8h;\n            uVar1 = uVar1 * 0x100;\n            arg_8h = arg_8h + 1;\n        }\n        uVar2 = (uVar1 >> 0xb) * puVar4[1];\n        if (var_4h < uVar2) {\n            puVar4 = puVar4 + uVar6 * 8 + 0x82;\n            var_14h = 8;\n            var_ch = 8;\n        }\n        else {\n            var_4h = var_4h - uVar2;\n            uVar2 = uVar1 - uVar2;\n            puVar4 = puVar4 + 0x102;\n            var_14h = 0x10;\n            var_ch = 0x100;\n        }\n    }\n    uVar8 = 1;\n    do {\n        uVar9 = uVar8 * 2;\n        uVar6 = uVar2;\n        if (uVar2 < 0x1000000) {\n            if (puVar5 <= arg_8h) {\n                return 0;\n            }\n            var_4h = var_4h << 8 | *arg_8h;\n            uVar6 = uVar2 << 8;\n            arg_8h = arg_8h + 1;\n        }\n        uVar2 = (uVar6 >> 0xb) * puVar4[uVar8];\n        if (uVar2 <= var_4h) {\n            var_4h = var_4h - uVar2;\n            uVar2 = uVar6 - uVar2;\n            uVar9 = uVar9 + 1;\n        }\n        uVar8 = uVar9;\n    } while (uVar9 < var_ch);\n    uVar9 = uVar9 + (var_14h - var_ch);\n    if (var_18h < 4) {\n        if (3 < uVar9) {\n            uVar9 = 3;\n        }\n        uVar8 = 1;\n        do {\n            uVar8 = uVar8 * 2;\n            uVar6 = uVar2;\n            if (uVar2 < 0x1000000) {\n                if (puVar5 <= arg_8h) {\n                    return 0;\n                }\n                var_4h = var_4h << 8 | *arg_8h;\n                uVar6 = uVar2 << 8;\n                arg_8h = arg_8h + 1;\n            }\n            uVar2 = (uVar6 >> 0xb) * *(uVar8 + uVar9 * 0x80 + 0x360 + iVar3);\n            if (uVar2 <= var_4h) {\n                var_4h = var_4h - uVar2;\n                uVar2 = uVar6 - uVar2;\n                uVar8 = uVar8 + 1;\n            }\n        } while (uVar8 < 0x40);\n        uVar8 = uVar8 - 0x40;\n        if (3 < uVar8) {\n            var_14h = (uVar8 >> 1) - 1;\n            if (uVar8 < 0xe) {\n                iVar3 = iVar3 + 0x55e + (((uVar8 & 1 | 2) << (var_14h & 0x1f)) - uVar8) * 2;\n            }\n            else {\n                iVar7 = (uVar8 >> 1) - 5;\n                do {\n                    if (uVar2 < 0x1000000) {\n                        if (puVar5 <= arg_8h) {\n                            return 0;\n                        }\n                        var_4h = var_4h << 8 | *arg_8h;\n                        uVar2 = uVar2 << 8;\n                        arg_8h = arg_8h + 1;\n                    }\n                    uVar2 = uVar2 >> 1;\n                    var_4h = var_4h - (0xffffffffU - (var_4h - uVar2 >> 0x1f) & uVar2);\n                    iVar7 = iVar7 + -1;\n                } while (iVar7 != 0);\n                iVar3 = iVar3 + 0x644;\n                var_14h = 4;\n            }\n            iVar7 = 1;\n            do {\n                iVar7 = iVar7 * 2;\n                uVar8 = uVar2;\n                if (uVar2 < 0x1000000) {\n                    if (puVar5 <= arg_8h) {\n                        return 0;\n                    }\n                    var_4h = var_4h << 8 | *arg_8h;\n                    uVar8 = uVar2 << 8;\n                    arg_8h = arg_8h + 1;\n                }\n                uVar2 = (uVar8 >> 0xb) * *(iVar7 + iVar3);\n                if (uVar2 <= var_4h) {\n                    var_4h = var_4h - uVar2;\n                    uVar2 = uVar8 - uVar2;\n                    iVar7 = iVar7 + 1;\n                }\n                var_14h = var_14h + -1;\n            } while (var_14h != 0);\n        }\n    }\ncode_r0x004107d4:\n    if (0xffffff < uVar2) {\n        return var_10h;\n    }\n    if (puVar5 <= arg_8h) {\n        return 0;\n    }\n    return var_10h;\n}\n",
        "token_count": 3570
    },
    "00410895": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.00410895(uint32_t arg_8h, uint32_t arg_ch, uchar *s2, uint32_t *arg_14h, int32_t arg_18h, uint *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_14h;\n    iVar1 = arg_8h;\n    uVar5 = *arg_14h;\n    *arg_14h = 0;\n    fcn.0041014a(arg_ch);\n    *arg_1ch = 0;\n    iVar4 = *(arg_8h + 0x48);\n    arg_14h = uVar5;\n    while( true ) {\n        if (iVar4 == 0x112) {\n            if (*(iVar1 + 0x20) == 0) {\n                *arg_1ch = 1;\n            }\n            return *(iVar1 + 0x20) != 0;\n        }\n        if (*(iVar1 + 0x4c) != 0) {\n            while ((arg_14h != NULL && (*(iVar1 + 0x58) < 5))) {\n                *(*(iVar1 + 0x58) + 0x5c + iVar1) = *s2;\n                *(iVar1 + 0x58) = *(iVar1 + 0x58) + 1;\n                s2 = s2 + 1;\n                *puVar2 = *puVar2 + 1;\n                arg_14h = arg_14h - 1;\n            }\n            if (*(iVar1 + 0x58) < 5) goto code_r0x00410a6c;\n            if (*(iVar1 + 0x5c) != '\\0') {\n                return true;\n            }\n            fcn.004107ec();\n            *(iVar1 + 0x58) = 0;\n        }\n        bVar3 = false;\n        if (arg_ch <= *(iVar1 + 0x24)) break;\ncode_r0x00410962:\n        if (*(iVar1 + 0x50) != 0) {\n            fcn.00410855();\n        }\n        uVar5 = *(iVar1 + 0x58);\n        if (uVar5 == 0) {\n            if ((arg_14h < 0x14) || (bVar3)) {\n                iVar4 = fcn.0041022d(s2, arg_14h);\n                if (iVar4 == 0) {\n                    sub.MSVCRT.dll_memcpy(iVar1 + 0x5c, s2, arg_14h);\n                    *(iVar1 + 0x58) = arg_14h;\n                    *puVar2 = *puVar2 + arg_14h;\ncode_r0x00410a6c:\n                    *arg_1ch = 3;\n                    return false;\n                }\n                puVar6 = s2;\n                if ((bVar3) && (iVar4 != 2)) goto code_r0x00410a9f;\n            }\n            else {\n                puVar6 = s2 + (arg_14h - 0x14);\n            }\n            *(iVar1 + 0x18) = s2;\n            iVar4 = fcn.004101c3(puVar6);\n            if (iVar4 != 0) {\n                return true;\n            }\n            iVar4 = *(iVar1 + 0x18) - s2;\n            *puVar2 = *puVar2 + iVar4;\n        }\n        else {\n            for (arg_8h = 0; (uVar5 < 0x14 && (arg_8h < arg_14h)); arg_8h = arg_8h + 1) {\n                *(uVar5 + 0x5c + iVar1) = s2[arg_8h];\n                uVar5 = uVar5 + 1;\n            }\n            *(iVar1 + 0x58) = uVar5;\n            if ((uVar5 < 0x14) || (bVar3)) {\n                iVar4 = fcn.0041022d(iVar1 + 0x5c, uVar5);\n                if (iVar4 == 0) {\n                    *puVar2 = *puVar2 + arg_8h;\n                    goto code_r0x00410a6c;\n                }\n                if ((bVar3) && (iVar4 != 2)) goto code_r0x00410a9f;\n            }\n            *(iVar1 + 0x18) = iVar1 + 0x5c;\n            iVar4 = fcn.004101c3(iVar1 + 0x5c);\n            if (iVar4 != 0) {\n                return true;\n            }\n            iVar4 = (arg_8h - 0x5c) + ((*(iVar1 + 0x18) - uVar5) - iVar1);\n            *puVar2 = *puVar2 + iVar4;\n            *(iVar1 + 0x58) = 0;\n        }\n        arg_14h = arg_14h - iVar4;\n        s2 = s2 + iVar4;\n        iVar4 = *(iVar1 + 0x48);\n    }\n    if ((*(iVar1 + 0x48) == 0) && (*(iVar1 + 0x20) == 0)) {\n        *arg_1ch = 4;\n        return false;\n    }\n    if (arg_18h == 0) {\n        bVar3 = false;\n        goto code_r0x00410a91;\n    }\n    if (*(iVar1 + 0x48) == 0) {\n        bVar3 = true;\n        goto code_r0x00410962;\n    }\ncode_r0x00410a9f:\n    bVar3 = true;\ncode_r0x00410a91:\n    *arg_1ch = 2;\n    return bVar3;\n}\n",
        "token_count": 1353
    },
    "00410c16": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00410c16(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    code **unaff_EBX;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar2 = (0x300 << (in_EAX[1] + *in_EAX & 0x1fU)) + 0x736;\n    if ((*(unaff_EDI + 0x10) == 0) || (iVar2 != *(unaff_EDI + 0x54))) {\n        fcn.00410b74();\n        iVar1 = (**unaff_EBX)();\n        *(unaff_EDI + 0x10) = iVar1;\n        *(unaff_EDI + 0x54) = iVar2;\n        if (iVar1 == 0) {\n            return 2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00410f28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00410f28(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    bool bVar7;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    if ((*(in_ECX + 0x20) == 0) || (*(in_ECX + 0x9c) == '\\0')) {\ncode_r0x0041114a:\n        uVar5 = 1;\n    }\n    else {\n        var_1ch = *(in_ECX + 0xa8);\n        var_8h = *(in_ECX + 0x54);\n        var_18h = *(in_ECX + 0xac);\n        if (*(in_ECX + 0xc0) <= var_8h - *(in_ECX + 0x50)) {\n            var_8h = *(in_ECX + 0xc0) + *(in_ECX + 0x50);\n        }\n        do {\n            do {\n                piVar1 = in_ECX + 0x28;\n                if (*(in_ECX + 0x24) == *piVar1) {\n                    *piVar1 = 0;\n                    *(in_ECX + 0x24) = 0;\n                    uVar5 = (**(*arg_8h + 0xc))(arg_8h, *(in_ECX + 0x20), *(in_ECX + 0xb8), piVar1);\n                    if (uVar5 != 0) {\n                        return uVar5;\n                    }\n                }\n                iVar3 = *(in_ECX + 0x50);\n                var_ch = 0;\n                uVar5 = var_8h - iVar3;\n                if ((((*(in_ECX + 0x9d) != '\\0') &&\n                     (uVar6 = *(in_ECX + 0xa0) - *(in_ECX + 0xb0), \n                     *(in_ECX + 0xa4) - *(in_ECX + 0xb4) == *(in_ECX + 0xa0) < *(in_ECX + 0xb0))) && (uVar6 < uVar5)) &&\n                   (uVar5 = uVar6,  *(in_ECX + 200) != '\\0')) {\n                    var_ch = 1;\n                }\n                var_10h = *piVar1 - *(in_ECX + 0x24);\n                var_ch = fcn.00410895(in_ECX + 0x2c, uVar5 + iVar3, *(in_ECX + 0x20) + *(in_ECX + 0x24), &var_10h, \n                                      var_ch, &var_14h);\n                *(in_ECX + 0x24) = *(in_ECX + 0x24) + var_10h;\n                iVar4 = *(in_ECX + 0x50);\n                puVar2 = in_ECX + 0xa8;\n                uVar5 = *puVar2;\n                *puVar2 = *puVar2 + var_10h;\n                *(in_ECX + 0xac) = *(in_ECX + 0xac) + CARRY4(uVar5, var_10h);\n                uVar6 = iVar4 - iVar3;\n                puVar2 = in_ECX + 0xb0;\n                uVar5 = *puVar2;\n                *puVar2 = *puVar2 + uVar6;\n                *(in_ECX + 0xb4) = *(in_ECX + 0xb4) + CARRY4(uVar5, uVar6);\n                if ((var_10h != 0) || (var_2h._0_1_ = '\\x01',  uVar6 != 0)) {\n                    var_2h._0_1_ = '\\0';\n                }\n                if (*(in_ECX + 0x9d) == '\\0') {\ncode_r0x0041107e:\n                    var_2h._1_1_ = '\\0';\n                }\n                else {\n                    uVar5 = *(in_ECX + 0xb4);\n                    bVar7 = uVar5 < *(in_ECX + 0xa4);\n                    if ((bVar7) || ((bVar7 || uVar5 == *(in_ECX + 0xa4) && (*puVar2 < *(in_ECX + 0xa0)))))\n                    goto code_r0x0041107e;\n                    var_2h._1_1_ = '\\x01';\n                }\n                if ((((var_ch != 0) || (iVar4 == var_8h)) || (var_2h != '\\0')) || (var_2h._1_1_ != '\\0')) {\n                    var_10h = fcn.0040f0df(arg_ch, *(in_ECX + 0x40) + *(in_ECX + 0xc4), iVar4 - *(in_ECX + 0xc4));\n                    var_8h = *(in_ECX + 0x54);\n                    *(in_ECX + 0xc4) = *(in_ECX + 0x50);\n                    if (*(in_ECX + 0x50) == var_8h) {\n                        *(in_ECX + 0x50) = 0;\n                        *(in_ECX + 0xc4) = 0;\n                    }\n                    if (*(in_ECX + 0xc0) <= var_8h - *(in_ECX + 0x50)) {\n                        var_8h = *(in_ECX + 0xc0) + *(in_ECX + 0x50);\n                    }\n                    if (var_ch != 0) goto code_r0x0041114a;\n                    if (var_10h != 0) {\n                        return var_10h;\n                    }\n                    if (var_2h._1_1_ != '\\0') {\n                        return 0;\n                    }\n                    if (var_2h != '\\0') {\n                        return var_14h != 1;\n                    }\n                }\n            } while (arg_10h == NULL);\n            var_24h = *(in_ECX + 0xa8) - var_1ch;\n            var_20h = (*(in_ECX + 0xac) - var_18h) - (*(in_ECX + 0xa8) < var_1ch);\n            uVar5 = (**(*arg_10h + 0xc))(arg_10h, &var_24h, puVar2);\n        } while (uVar5 == 0);\n    }\n    return uVar5;\n}\n",
        "token_count": 1611
    },
    "00411154": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411154(int32_t arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0x80070057;\n    }\n    else {\n        (**(*(arg_8h + 0x10) + 0xc))(arg_8h + 0x10, arg_18h);\n        uVar1 = fcn.00410f28(arg_ch, arg_10h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 156
    },
    "004113ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004113ce(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar7 = arg_ch;\n    iVar4 = 0;\n    uVar6 = *arg_14h & 7;\n    if (arg_ch < 5) {\n        return;\n    }\n    arg_ch = -1;\n    puVar1 = arg_8h + -4 + uVar7;\n    do {\n        while( true ) {\n            for (puVar8 = iVar4 + arg_8h; (puVar8 < puVar1 && ((*puVar8 & 0xfe) != 0xe8)); puVar8 = puVar8 + 1) {\n            }\n            iVar5 = puVar8 - arg_8h;\n            if (puVar1 <= puVar8) {\n                *arg_14h = ~-(3 < iVar5 - arg_ch) & uVar6 << ((iVar5 - arg_ch) - 1U & 0x1f) & 7;\n                return;\n            }\n            if (3 < iVar5 - arg_ch) break;\n            uVar6 = uVar6 << ((iVar5 - arg_ch) - 1U & 0x1f) & 7;\n            if ((uVar6 == 0) ||\n               (((*(uVar6 + 0x414b88) != '\\0' && (puVar8[4 - *(uVar6 + 0x414b90)] != 0)) &&\n                (puVar8[4 - *(uVar6 + 0x414b90)] != 0xff)))) goto code_r0x0041142b;\ncode_r0x0041148e:\n            uVar6 = (uVar6 & 3) * 2 | 1;\n            iVar4 = iVar5 + 1;\n            arg_ch = iVar5;\n        }\n        uVar6 = 0;\ncode_r0x0041142b:\n        uVar2 = puVar8[4];\n        if ((uVar2 != 0) && (uVar2 != 0xff)) goto code_r0x0041148e;\n        uVar7 = CONCAT31(CONCAT21(CONCAT11(uVar2, puVar8[3]), puVar8[2]), puVar8[1]);\n        while( true ) {\n            if (arg_18h == 0) {\n                uVar7 = (uVar7 - iVar5) - (arg_10h + 5);\n            }\n            else {\n                uVar7 = uVar7 + iVar5 + arg_10h + 5;\n            }\n            if (uVar6 == 0) break;\n            cVar3 = uVar7 >> (*(uVar6 + 0x414b90) * -8 + 0x18U & 0x1f);\n            if ((cVar3 != '\\0') && (cVar3 != -1)) break;\n            uVar7 = (1 << (*(uVar6 + 0x414b90) * -8 + 0x20U & 0x1f)) - 1U ^ uVar7;\n        }\n        puVar8[4] = ~((uVar7 >> 0x18 & 1) - 1);\n        puVar8[3] = uVar7 >> 0x10;\n        puVar8[2] = uVar7 >> 8;\n        puVar8[1] = uVar7;\n        iVar4 = iVar5 + 5;\n        arg_ch = iVar5;\n    } while( true );\n}\n",
        "token_count": 884
    },
    "004117b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004117b9(uint *arg_8h, uint noname_1, uint32_t arg_10h, uint *arg_14h, uint noname_4, uint32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_10h == 4) && (arg_1ch == 1)) {\n        cVar2 = fcn.0040e58f(*(in_ECX + 0x4c8));\n        if ((((cVar2 != '\\0') && (cVar2 = fcn.0040e58f(*(in_ECX + 0x4cc)),  cVar2 != '\\0')) &&\n            (cVar2 = fcn.0040e58f(*(in_ECX + 0x4d0)),  cVar2 != '\\0')) &&\n           ((cVar2 = fcn.0040e58f(*(in_ECX + 0x4d4)),  cVar2 != '\\0' &&\n            (cVar2 = fcn.0040e9b5(*(in_ECX + 0x4d8)),  cVar2 != '\\0')))) {\n            fcn.0040e5cb(*arg_8h);\n            fcn.0040e5cb(arg_8h[1]);\n            fcn.0040e5cb(arg_8h[2]);\n            fcn.0040e5cb(arg_8h[3]);\n            fcn.0040e9ef(*arg_14h);\n            fcn.0040e568();\n            fcn.0040e568();\n            fcn.0040e568();\n            fcn.0041168a();\n            fcn.0040e974();\n            arg_8h = NULL;\n            puVar5 = in_ECX + 0x98;\n            for (iVar3 = 0x102; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = 0x400;\n                puVar5 = puVar5 + 1;\n            }\n            arg_14h = arg_14h & 0xffffff00;\ncode_r0x004118c1:\n            do {\n                do {\n                    piVar1 = arg_20h;\n                    if ((0xfffff < arg_8h) && (arg_20h != NULL)) {\n                        uVar6 = fcn.0040e98c();\n                        _var_ch = uVar6;\n                        iVar3 = (**(*piVar1 + 0xc))(piVar1, 0, &var_ch);\n                        if (iVar3 != 0) {\ncode_r0x00411a0a:\n                            fcn.0041178a();\n                            return iVar3;\n                        }\n                        arg_8h = NULL;\n                    }\n                    arg_1ch = arg_1ch & 0xffffff00;\n                    uVar4 = 0;\n                    do {\n                        cVar2 = fcn.0041164e(&arg_1ch);\n                        if (cVar2 == '\\0') {\n                            iVar3 = fcn.0040ea88();\n                            goto code_r0x00411a0a;\n                        }\n                        fcn.004115a9();\n                        cVar2 = fcn.004115e2(arg_14h, arg_1ch);\n                        if (cVar2 != '\\0') break;\n                        uVar4 = uVar4 + 1;\n                        arg_14h = arg_14h & 0xffffff00 | arg_1ch & 0xff;\n                    } while (uVar4 < 0x40000);\n                    arg_8h = arg_8h + uVar4;\n                } while (uVar4 == 0x40000);\n                fcn.00411606(arg_14h, arg_1ch, in_ECX + 0x70);\n                iVar3 = fcn.004116c7();\n                if (iVar3 == 1) {\n                    uVar4 = 0;\n                    var_4h = in_ECX + 0x30;\n                    if (arg_1ch != -0x18) {\n                        var_4h = in_ECX + 0x50;\n                    }\n                    iVar3 = 0;\n                    do {\n                        cVar2 = fcn.0041164e(&arg_10h + 3);\n                        if (cVar2 == '\\0') {\n                            iVar3 = 1;\n                            goto code_r0x00411a0a;\n                        }\n                        uVar4 = uVar4 << 8 | arg_10h >> 0x18;\n                        iVar3 = iVar3 + 1;\n                    } while (iVar3 < 4);\n                    iVar3 = fcn.0040e98c();\n                    uVar4 = (uVar4 - iVar3) - 4;\n                    fcn.004115a9(uVar4);\n                    fcn.004115a9(uVar4 >> 8);\n                    fcn.004115a9(uVar4 >> 0x10);\n                    var_4h = uVar4 >> 0x18;\n                    fcn.004115a9();\n                    arg_8h = arg_8h + 4;\n                    arg_14h = arg_14h & 0xffffff00 | var_4h & 0xff;\n                    goto code_r0x004118c1;\n                }\n                arg_14h = arg_14h & 0xffffff00 | arg_1ch & 0xff;\n            } while( true );\n        }\n        iVar3 = -0x7ff8fff2;\n    }\n    else {\n        iVar3 = -0x7ff8ffa9;\n    }\n    return iVar3;\n}\n",
        "token_count": 1326
    },
    "0040301a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040301a(uint lpFileName, uint lpFileTime2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpFindFileData;\n    uint lpFileTime1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(lpFileName);\n    if (uVar1 == 0xffffffff) {\n        return 0;\n    }\n    if ((uVar1 & 0x10) == 0) {\n        if (*0x417770 != 0) {\n            if (*0x417770 != 2) {\n                return 1;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n            if (iVar3 != -1) {\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n                iVar3 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(&lpFileTime1, lpFileTime2);\n                if (-1 < iVar3) {\n                    return 1;\n                }\n            }\n        }\n        uVar2 = fcn.00402fed(lpFileName);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_SetLastError)(0x10);\n    return 0xffffffff;\n}\n",
        "token_count": 290
    },
    "00403354": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403354(uint16_t *lpString)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint lpSystemTimeAsFileTime;\n    int32_t n;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    n = iVar3;\n    fcn.004024fc(lpString);\n    if (var_10h < 1) {\n        fcn.0040112b(0);\n    }\n    if ((lpString[iVar3 + -1] == 0x5c) || (iVar6 = iVar3,  lpString[iVar3 + -1] == 0x2f)) {\n        *(var_18h + -2 + iVar3 * 2) = 0;\n        iVar3 = iVar3 + -1;\n        n = iVar3;\n        iVar6 = iVar3;\n    }\n    while (iVar4 = fcn.00401986(var_18h),  iVar4 == 0) {\n        for (; ((0 < iVar3 && (iVar2 = *(var_18h + iVar3 * 2),  iVar2 != 0x2f)) && (iVar2 != 0x5c)); iVar3 = iVar3 + -1)\n        {\n        }\n        if (iVar3 == 0) {\n            if (((iVar6 != 2) || ((*lpString | 0x20) < 0x61)) || ((0x7a < (*lpString | 0x20) || (lpString[1] != 0x3a))))\n            {\n                fcn.00407776(1, 0xc, lpString);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n                return 0;\n            }\n            uVar7 = 1;\n            goto code_r0x0040349c;\n        }\n        *(var_18h + iVar3 * 2) = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&lpSystemTimeAsFileTime);\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(var_18h);\n    if (((uVar5 & 0x10) != 0) || (iVar4 = fcn.0040301a(var_18h, &lpSystemTimeAsFileTime),  iVar4 == 0)) {\n        iVar4 = fcn.00401986(var_18h);\n        if (iVar4 != 0) {\n            if (iVar3 < iVar6) {\n                do {\n                    piVar1 = var_18h + iVar3 * 2;\n                    sub.MSVCRT.dll_memcpy(piVar1, lpString + iVar3, (n - iVar3) + 1);\n                    if (*piVar1 == 0) goto code_r0x00403451;\n                    do {\n                        iVar3 = iVar3 + 1;\ncode_r0x00403451:\n                    } while (((*(var_18h + iVar3 * 2) != 0) && (iVar2 = *(var_18h + iVar3 * 2),  iVar2 != 0x5c)) &&\n                            (iVar2 != 0x2f));\n                    *(var_18h + iVar3 * 2) = 0;\n                    iVar6 = fcn.00401986(var_18h);\n                    if (iVar6 == 0) goto code_r0x0040340a;\n                } while (iVar3 < n);\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n            return 1;\n        }\ncode_r0x0040340a:\n        fcn.00407776(1, 0xc, var_18h);\n    }\n    uVar7 = 0;\ncode_r0x0040349c:\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    return uVar7;\n}\n",
        "token_count": 923
    },
    "00403d1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d1f(int16_t *arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    var_4h = *0x417774 | *0x417770;\n    if ((*arg_8h != 0x2b) && (*arg_8h != 0x2d)) {\n        var_4h = 0;\n    }\n    fcn.00403c63(arg_8h, &var_4h);\n    if ((var_4h & 7) < 3) {\n        *0x417770 = var_4h & 7;\n    }\n    *0x417774 = var_4h & 0xfffffff8;\n    return;\n}\n",
        "token_count": 163
    },
    "00404a44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404a44(int32_t *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00408676();\n    iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x1e8);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0040a9f8();\n    }\n    fcn.00408726(uVar2);\n    (**(*arg_8h + 0x10))(arg_8h, 0, 0, 0, 0);\n    uVar2 = 0;\n    iVar1 = (**(_pe_dos_header + 0xc))(0, arg_8h, 0x4140e0, 0);\n    if (iVar1 == 0) {\n        if ((*0x4177f0 == 2) || (iVar1 = fcn.00403354(*arg_ch),  iVar1 != 0)) {\n            iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x40);\n            if (iVar1 != 0) {\n                fcn.00404292();\n            }\n            uVar2 = fcn.0040150b(0, *arg_ch);\n        }\n        else {\n            uVar2 = 0x80004005;\n        }\n        (**(_pe_dos_header + 8))(0);\n    }\n    else {\n        fcn.00407776(0, 8, uVar2);\n        (**(_pe_dos_header + 8))(0);\n        uVar2 = 0x80004005;\n    }\n    return uVar2;\n}\n",
        "token_count": 396
    },
    "00404aff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404aff(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ushort *puVar3;\n    uint var_34h;\n    uint lpFileName;\n    uint var_1ch;\n    int32_t var_18h;\n    uint lpRootPathName;\n    ushort var_ch;\n    ushort var_ah;\n    int32_t lpNumberOfBytesWritten;\n    int32_t hObject;\n    \n    puVar3 = arg_8h;\n    if ((arg_8h[1] == 0x3a) && ((arg_8h[2] == 0x5c || (arg_8h[2] == 0x2f)))) {\n        lpRootPathName._0_2_ = *arg_8h;\n        lpRootPathName._2_2_ = 0x3a;\n        var_ch = 0x5c;\n        var_ah = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&lpRootPathName);\n        if (iVar1 == 3) {\n            fcn.00403f85(&lpFileName, L\"7ZSfx%03x.cmd\");\n            hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x40000000, 0, 0, 2, 0x80, 0);\n            if (hObject != -1) {\n                fcn.00401411();\n                fcn.00401329(L\":Repeat\\r\\n\");\n                fcn.0040254d(L\"del \\\"\");\n                fcn.004013e2(&arg_8h);\n                fcn.0040254d(0x414498);\n                fcn.0040254d(L\"if exist \\\"\");\n                fcn.004013e2(&arg_8h);\n                fcn.0040254d(L\"\\\" goto Repeat\\r\\n\");\n                fcn.0040254d(L\"del \\\"\");\n                fcn.004013e2(&lpFileName);\n                fcn.0040254d(0x414498);\n                iVar1 = var_18h;\n                puVar2 = fcn.00402776(&var_34h, &var_1ch, 1);\n                iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hObject, *puVar2, iVar1, &lpNumberOfBytesWritten, 0);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_34h);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n                if ((iVar1 == 0) || (lpNumberOfBytesWritten != var_18h)) {\n                    fcn.00402c86(lpFileName);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpFileName);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(arg_8h);\n                    return;\n                }\n                (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(arg_8h, 0);\n                (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, L\"open\", lpFileName, 0, 0, 0);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                puVar3 = arg_8h;\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpFileName);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar3);\n            return;\n        }\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar3);\n    return;\n}\n",
        "token_count": 822
    },
    "004082e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004082e9(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040243b(param_1, L\"BeginPrompt\", 0);\n    if (iVar1 != 0) {\n        fcn.004019f0(0x62);\n    }\n    if ((*0x41734c & 0x100) != 0) {\n        fcn.004019f0(99);\n    }\n    if ((*0x41734c & 0xc0) == 0x80) {\n        fcn.004019f0(0x70);\n    }\n    if (*0x417768 != 2) {\n        fcn.004019f0(0x65);\n    }\n    iVar1 = fcn.0040243b(param_1, L\"ErrorTitle\", 0);\n    if (iVar1 != 0) {\n        fcn.004019f0(0x7a);\n    }\n    iVar1 = fcn.0040243b(param_1, L\"FinishMessage\", 0);\n    if (iVar1 != 0) {\n        fcn.004019f0(0x66);\n    }\n    iVar1 = fcn.0040243b(param_1, L\"HelpText\", 0);\n    if (iVar1 != 0) {\n        fcn.004019f0(0x68);\n    }\n    iVar1 = fcn.0040243b(param_1, L\"WarningTitle\", 0);\n    if (iVar1 != 0) {\n        fcn.004019f0(0x77);\n    }\n    return 0;\n}\n",
        "token_count": 365
    },
    "004083b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004083b6(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    char16_t *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint16_t *puVar4;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_10h;\n    uint var_4h;\n    \n    uVar1 = **0x4177f4;\n    var_4h = 0;\n    puVar4 = *0x4177f4;\n    do {\n        if (uVar1 == 0) {\n            return var_4h;\n        }\n        if (uVar1 < 99) {\n            if (uVar1 == 0x62) {\ncode_r0x004084a3:\n                pcVar2 = fcn.0040243b(arg_8h, L\"BeginPrompt\", 0);\n                if (pcVar2 == NULL) {\n                    if (*puVar4 == 0x42) {\n                        pcVar2 = L\"BeginPrompt\";\n                    }\n                    else {\n                        var_4h = 100;\n                    }\n                }\n                fcn.00407613(*0x41775c, pcVar2);\n            }\n            else if (uVar1 < 0x49) {\n                if (uVar1 == 0x48) {\ncode_r0x00408597:\n                    iVar3 = fcn.0040243b(arg_8h, L\"HelpText\", 0);\n                    if ((iVar3 == 0) && ((*puVar4 != 0x48 || (iVar3 = fcn.00401f9d(0x18),  iVar3 == 0)))) {\n                        var_4h = 100;\n                    }\n                    fcn.00403b40();\n                    fcn.004073d1(0x11, *0x41775c, iVar3, 0);\n                    goto code_r0x00408633;\n                }\n                if (uVar1 == 0x42) goto code_r0x004084a3;\n                if (uVar1 == 0x43) goto code_r0x004085fe;\n                if (uVar1 == 0x45) goto code_r0x004085e8;\n                if (uVar1 == 0x46) goto code_r0x00408416;\n            }\n            else if (uVar1 == 0x50) {\ncode_r0x0040856a:\n                if (((*0x41734c & 0xc0) != 0x80) && (uVar1 != 0x50)) goto code_r0x0040860f;\n                fcn.00407674(*0x417754, *0x417750);\n            }\n            else if (uVar1 == 0x57) {\ncode_r0x00408539:\n                iVar3 = fcn.0040243b(arg_8h, L\"WarningTitle\", 0);\n                if ((iVar3 == 0) && (*puVar4 != 0x57)) goto code_r0x0040860f;\n                arg_8h_00 = fcn.00401f9d(0x2a);\n                fcn.00407717(arg_8h_00);\n            }\n            else if (uVar1 == 0x5a) {\ncode_r0x00408510:\n                iVar3 = fcn.0040243b(arg_8h, L\"ErrorTitle\", 0);\n                if ((iVar3 == 0) && (*puVar4 != 0x5a)) goto code_r0x0040860f;\n                fcn.00407776(0, 0xf, unaff_ESI);\n            }\n        }\n        else {\n            if (uVar1 == 99) {\ncode_r0x004085fe:\n                if (((*0x41734c & 0x100) != 0) || (uVar1 == 0x43)) {\n                    fcn.0040661a();\n                    fcn.0040744b(0);\ncode_r0x00408633:\n                    fcn.00406673();\n                    goto code_r0x00408638;\n                }\n            }\n            else if (uVar1 == 0x65) {\ncode_r0x004085e8:\n                if ((*0x417768 != 2) || (uVar1 == 0x45)) {\n                    fcn.0040786b();\n                    goto code_r0x00408638;\n                }\n            }\n            else {\n                if (uVar1 != 0x66) {\n                    if (uVar1 == 0x68) goto code_r0x00408597;\n                    if (uVar1 != 0x70) {\n                        if (uVar1 != 0x77) {\n                            if (uVar1 == 0x7a) goto code_r0x00408510;\n                            goto code_r0x00408638;\n                        }\n                        goto code_r0x00408539;\n                    }\n                    goto code_r0x0040856a;\n                }\ncode_r0x00408416:\n                pcVar2 = fcn.0040243b(arg_8h, L\"FinishMessage\", 0);\n                if ((pcVar2 == NULL) && (*puVar4 == 0x46)) {\n                    pcVar2 = L\"FinishMessage\";\n                }\n                if (*0x417358 < 0) {\n                    *0x417358 = 1;\n                }\n                if ((*0x417358 != 0) || (*puVar4 == 0x46)) {\n                    fcn.00403f48();\n                    fcn.004073d1(0x11, *0x41775c, pcVar2, 0);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                    goto code_r0x00408633;\n                }\n            }\ncode_r0x0040860f:\n            var_4h = 100;\n        }\ncode_r0x00408638:\n        puVar4 = puVar4 + 1;\n        uVar1 = *puVar4;\n    } while( true );\n}\n",
        "token_count": 1374
    },
    "0040c3d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c877)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __thiscall fcn.0040c3d8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint32_t arg_8h;\n    uint32_t uVar8;\n    uint uVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    int64_t iVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar uStack200;\n    uchar uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    int32_t iStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    int32_t iStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint32_t uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar4 = param_2;\n    iVar13 = fcn.0040ab46();\n    if (iVar13 == 2) {\n        uStack24 = iVar13;\n        fcn.0040b344(param_2 + 0x130);\n        iVar13 = fcn.0040ab46();\n    }\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 4;\n    uStack68 = 0x4149f0;\n    if (iVar13 == 3) {\n        uStack24 = iVar13;\n        iVar7 = fcn.0040c0dc(*(param_2 + 0x140), *(param_2 + 0x144), param_2 + 0x150, &uStack68);\n        if (iVar7 != 0) goto code_r0x0040c465;\n        puVar2 = param_2 + 0x150;\n        uVar11 = *puVar2;\n        *puVar2 = *puVar2 + *(param_2 + 0x140);\n        *(param_2 + 0x154) = *(param_2 + 0x154) + *(param_2 + 0x144) + CARRY4(uVar11, *(param_2 + 0x140));\n        iVar13 = fcn.0040ab46();\n    }\n    uStack164 = 0;\n    uStack160 = 0;\n    iStack156 = 0;\n    uStack152 = 8;\n    uStack168 = 0x4149e8;\n    uStack144 = 0;\n    uStack140 = 0;\n    iStack136 = 0;\n    uStack132 = 1;\n    uStack148 = 0x4149e8;\n    uStack104 = 0;\n    iStack100 = 0;\n    iStack96 = 0;\n    uStack92 = 4;\n    uStack108 = 0x4149e8;\n    uStack24 = iVar13;\n    if (iVar13 == 4) {\n        fcn.0040c05d(&uStack68, param_2 + 0x148, param_2, param_2 + 0x14, param_2 + 0x28, param_2 + 0x3c, param_2 + 0x50\n                     , &uStack168, &uStack148, &uStack108);\n        puVar2 = param_2 + 0x148;\n        uVar11 = *puVar2;\n        *puVar2 = *puVar2 + *(param_2 + 0x140);\n        *(param_2 + 0x14c) = *(param_2 + 0x14c) + *(param_2 + 0x144) + CARRY4(uVar11, *(param_2 + 0x140));\n        iVar13 = fcn.0040ab46();\n        uStack24 = iVar13;\n    }\n    else {\n        piVar1 = param_2 + 0x44;\n        param_2 = 0;\n        if (0 < *piVar1) {\n            do {\n                fcn.00408761(1);\n                uStack8 = *(*(iVar4 + 0x48) + param_2 * 4);\n                uVar14 = fcn.004095b7();\n                fcn.004087c0(uVar14);\n                fcn.00409403(*(uStack8 + 0x54));\n                fcn.00408761();\n                param_2 = param_2 + 1;\n            } while (param_2 < *(iVar4 + 0x44));\n        }\n    }\n    fcn.0040e8da();\n    iVar13 = CONCAT44(uStack40._4_4_, uStack40);\n    uVar15 = CONCAT44(uStack32._4_4_, uStack32);\n    if (uStack24 != 0) {\n        uStack32 = CONCAT44(uStack32._4_4_, uStack32);\n        if (uStack24 == 5) goto code_r0x0040c5d0;\ncode_r0x0040c5cb:\n        do {\n            fcn.0040aaab();\n            uVar15 = uStack32;\n            iVar13 = uStack40;\ncode_r0x0040c5d0:\n            uStack32 = uVar15;\n            uStack40 = iVar13;\n            arg_8h = fcn.0040abdb();\n            uVar8 = arg_8h;\n            fcn.0040e811(arg_8h);\n            uVar5 = arg_8h;\n            uVar11 = uStack8;\n            while (uStack8 = uVar5,  uStack8 != 0) {\n                uVar8 = fcn.0040b63d();\n                fcn.0040b9be();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uStack220);\n                uVar11 = uStack8 - 1;\n                uVar5 = uVar11;\n            }\n            uStack8 = uVar11;\n            fcn.004087c0(9, 0, uVar8);\n            if (*(iVar4 + 8) != 0) {\n                fcn.004087c0(6, 0);\n            }\n            if ((arg_8h != 0) && (iStack100 != 0)) {\n                fcn.004087c0(10, 0);\n            }\n            uStack84 = 0;\n            uStack80 = 0;\n            iStack76 = 0;\n            uStack72 = 1;\n            uStack88 = 0x4149e8;\n            fcn.0040ac7a(&uStack88);\n            uStack184 = 0;\n            uStack180 = 0;\n            iStack176 = 0;\n            uStack172 = 1;\n            uStack188 = 0x4149e8;\n            uStack124 = 0;\n            uStack120 = 0;\n            iStack116 = 0;\n            uStack112 = 1;\n            uStack128 = 0x4149e8;\n            uStack16 = 0;\n            uVar15 = uStack32;\n            do {\n                uStack32 = uVar15;\n                iVar13 = fcn.0040ab46();\n                if (iVar13 == 0) {\n                    iVar7 = 0;\n                    uVar11 = 0;\n                    uStack24._4_4_ = 0;\n                    uStack8 = 0;\n                    if (uStack16 != 0) {\n                        do {\n                            if (*(iStack116 + uVar11) != '\\0') {\n                                uStack8 = uStack8 + 1;\n                            }\n                            uVar11 = uVar11 + 1;\n                        } while (uVar11 < uStack16);\n                    }\n                    uStack12 = 0;\n                    if (arg_8h != 0) {\n                        do {\n                            bVar12 = *(iStack76 + uStack12) == '\\0';\n                            puVar10 = *(*(iVar4 + 0x70) + uStack12 * 4);\n                            *(puVar10 + 7) = bVar12;\n                            if (bVar12) {\n                                *(puVar10 + 0x1d) = 0;\n                                *puVar10 = *(iStack156 + iVar7 * 8);\n                                puVar10[1] = *(iStack156 + 4 + iVar7 * 8);\n                                puVar10[3] = *(iStack96 + iVar7 * 4);\n                                uStack16 = uStack16 & 0xffffff00;\n                                *(puVar10 + 0x1e) = *(iStack136 + iVar7);\n                                iVar7 = iVar7 + 1;\n                            }\n                            else {\n                                *(puVar10 + 0x1d) = *(iStack176 + uStack24._4_4_) == '\\0';\n                                puVar3 = iStack116 + uStack24._4_4_;\n                                uStack24._4_4_ = uStack24._4_4_ + 1;\n                                uStack16 = uStack16 & 0xffffff00 | *puVar3;\n                                *puVar10 = 0;\n                                puVar10[1] = 0;\n                                *(puVar10 + 0x1e) = 0;\n                            }\n                            if (uStack8 != 0) {\n                                uStack40 = iVar13;\n                                fcn.00409403();\n                                iVar13 = uStack40;\n                            }\n                            uStack12 = uStack12 + 1;\n                        } while (uStack12 < arg_8h);\n                    }\n                    uStack40 = iVar13;\n                    fcn.0040e959();\n                    fcn.0040e959();\n                    fcn.0040e959();\n                    fcn.0040e959();\n                    fcn.0040e959();\n                    fcn.0040e959();\n                    fcn.0040ae60();\n                    return 0;\n                }\n                uStack40 = iVar13;\n                uVar15 = fcn.0040ab46();\n                uStack8 = *(*(param_1 + 0x18) + 8);\n                uStack32 = uVar15;\n                if ((uStack40._4_4_ != 0) || (0x40000000 < uStack40)) {\ncode_r0x0040c881:\n                    fcn.0040ab19(uVar15);\n                    uVar15 = uStack32;\n                    goto code_r0x0040c88c;\n                }\n    // switch table (12 cases) at 0x40c9cc\n                switch(uStack40) {\n                case 0xe:\n                    fcn.0040accf(arg_8h, &uStack88);\n                    uVar11 = 0;\n                    if (uStack80 != 0) {\n                        do {\n                            if (*(iStack76 + uVar11) != '\\0') {\n                                uStack16 = uStack16 + 1;\n                            }\n                            uVar11 = uVar11 + 1;\n                        } while (uVar11 < uStack80);\n                    }\n                    fcn.0040ac7a(&uStack188);\n                    fcn.0040ac7a(&uStack128);\n                    break;\n                case 0xf:\n                    puVar10 = &uStack188;\n                    goto code_r0x0040c800;\n                case 0x10:\n                    puVar10 = &uStack128;\ncode_r0x0040c800:\n                    fcn.0040accf(uStack16, puVar10);\n                    break;\n                case 0x11:\n                    uStack200 = 0;\n                    fcn.0040baf0(param_1, &uStack68);\n                    uStack12 = 0;\n                    if (0 < *(iVar4 + 0x6c)) {\n                        do {\n                            fcn.0040b0dc(*(*(iVar4 + 0x70) + uStack12 * 4) + 0x10);\n                            uStack12 = uStack12 + 1;\n                        } while (uStack12 < *(iVar4 + 0x6c));\n                    }\n                    fcn.0040baa1();\n                    break;\n                case 0x12:\n                    iVar7 = iVar4 + 0x78;\n                    goto code_r0x0040c81b;\n                case 0x13:\n                    iVar7 = iVar4 + 0xa0;\n                    goto code_r0x0040c81b;\n                case 0x14:\n                    iVar7 = iVar4 + 200;\n                    goto code_r0x0040c81b;\n                case 0x15:\n                    uStack220 = 0;\n                    uStack216 = 0;\n                    iStack212 = 0;\n                    uStack208 = 1;\n                    uStack224 = 0x4149e8;\n                    fcn.0040ad23(*(iVar4 + 0x6c), &uStack224);\n                    uStack192 = 0;\n                    fcn.0040baf0(param_1, &uStack68);\n                    uStack12 = 0;\n                    if (arg_8h != 0) {\n                        do {\n                            uStack24._4_4_ = *(*(iVar4 + 0x70) + uStack12 * 4);\n                            cVar6 = *(iStack212 + uStack12);\n                            *(uStack24._4_4_ + 0x1f) = cVar6;\n                            if (cVar6 != '\\0') {\n                                uVar9 = fcn.0040abf1();\n                                *(uStack24._4_4_ + 8) = uVar9;\n                            }\n                            uStack12 = uStack12 + 1;\n                        } while (uStack12 < arg_8h);\n                    }\n                    fcn.0040baa1();\n                    fcn.0040e959();\n                    break;\n                default:\n                    goto code_r0x0040c881;\n                case 0x18:\n                    iVar7 = iVar4 + 0xf0;\ncode_r0x0040c81b:\n                    fcn.0040bdab(&uStack68, iVar7, arg_8h);\n                    break;\n                case 0x19:\n                    uStack48 = 0;\n                    iStack44 = 0;\n                    if (uVar15 != 0) {\n                        do {\n                            cVar6 = fcn.0040aacb();\n                            if (cVar6 != '\\0') goto code_r0x0040c5cb;\n                            bVar12 = 0xfffffffe < uStack48;\n                            uStack48 = uStack48 + 1;\n                            iStack44 = iStack44 + bVar12;\n                            uVar15 = uStack32;\n                        } while (CONCAT44(iStack44, uStack48) < uStack32);\n                    }\n                    goto code_r0x0040c88c;\n                }\n                fcn.004087c0(uStack40);\n                uVar15 = uStack32;\ncode_r0x0040c88c:\n                uStack32._4_4_ = uVar15 >> 0x20;\n                uStack32._0_4_ = uVar15;\n            } while (((*(iVar4 + 0x130) == '\\0') && (*(iVar4 + 0x131) < 3)) ||\n                    ((uStack32 = uVar15,  *(*(param_1 + 0x18) + 8) - uStack8 == uStack32 && (uStack32._4_4_ == 0))));\n        } while( true );\n    }\n    fcn.0040e959();\n    fcn.0040e959();\n    fcn.0040e959();\n    iVar7 = 0;\ncode_r0x0040c465:\n    fcn.0040ae60();\n    return iVar7;\n}\n",
        "token_count": 3802
    },
    "0040dcfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dcfb(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint *arg_18h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (arg_14h < 3) {\n        uVar1 = fcn.0040d9f0(arg_ch, arg_10h, arg_14h, &arg_ch);\n        arg_14h = arg_14h & 0xffffff00 | uVar1;\n        if (arg_18h != NULL) {\n            *arg_18h = arg_ch;\n            arg_18h[1] = arg_10h;\n        }\n        uVar2 = fcn.0040dc8b(arg_14h);\n    }\n    else {\n        uVar2 = 0x80030001;\n    }\n    return uVar2;\n}\n",
        "token_count": 202
    },
    "0040dd9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dd9c(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint *arg_18h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (arg_14h < 3) {\n        uVar1 = fcn.0040d9f0(arg_ch, arg_10h, arg_14h, &arg_ch);\n        arg_14h = arg_14h & 0xffffff00 | uVar1;\n        if (arg_18h != NULL) {\n            *arg_18h = arg_ch;\n            arg_18h[1] = arg_10h;\n        }\n        uVar2 = fcn.0040dc8b(arg_14h);\n    }\n    else {\n        uVar2 = 0x80030001;\n    }\n    return uVar2;\n}\n",
        "token_count": 203
    },
    "0040ec65": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ec65(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    \n    uVar1 = *param_1;\n    if (uVar1 < 0x14) {\n        if ((0xf < uVar1) || ((1 < uVar1 && ((uVar1 < 8 || ((9 < uVar1 && (uVar1 < 0xc)))))))) {\ncode_r0x0040ec9d:\n            *param_1 = 0;\n            param_1[1] = 0;\n            return 0;\n        }\n    }\n    else if ((0x14 < uVar1) && ((uVar1 < 0x18 || (uVar1 == 0x40)))) goto code_r0x0040ec9d;\n    uVar2 = (*_sym.imp.OLEAUT32.dll_VariantCopy)(param_1);\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "00408676": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.00408676(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    do {\n        iVar3 = 8;\n        uVar1 = uVar2;\n        do {\n            uVar1 = uVar1 >> 1 ^ ~((uVar1 & 1) - 1) & 0xedb88320;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        *(uVar2 * 4 + 0x417920) = uVar1;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x100);\n    while (uVar2 < 0x800) {\n        uVar1 = *(uVar2 * 4 + 0x417520);\n        uVar2 = uVar2 + 1;\n        *(uVar2 * 4 + 0x41791c) = uVar1 >> 8 ^ *((uVar1 & 0xff) * 4 + 0x417920);\n    }\n    *0x417800 = 0x412070;\n    iVar3 = fcn.0040d806();\n    if (iVar3 == 0) {\n        *0x417800 = 0x411f90;\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "004089cd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.004089cd(int32_t **param_1, uint8_t param_2)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 118
    },
    "00409457": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00409457(uint param_1, uint8_t param_2)\n\n{\n    fcn.0040e959();\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 75
    },
    "00409bef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00409bef(int32_t param_1, uint8_t param_2)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 8);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 119
    },
    "0040a2c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040a2c0(int32_t param_1, uint8_t param_2)\n\n{\n    *(param_1 + 8) = 0x4149b0;\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(param_1 + 0x10));\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 115
    },
    "0040a31f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040a31f(int32_t param_1, uint8_t param_2)\n\n{\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(param_1 + 0x10));\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 96
    },
    "0040ef2b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040ef2b(uint *param_1, uint8_t param_2)\n\n{\n    *param_1 = 0x414abc;\n    fcn.0040ee18();\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 91
    },
    "0040ef68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040ef68(uint *param_1, uint8_t param_2)\n\n{\n    *param_1 = 0x414acc;\n    fcn.0040ee82();\n    if ((param_2 & 1) != 0) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 90
    },
    "00401986": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00401986(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(param_1, 0);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar1 == 0xb7) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(unaff_ESI);\n        if (uVar2 == 0xffffffff) {\n            return 1;\n        }\n        if ((uVar2 & 0x10) != 0) {\n            return 1;\n        }\n        iVar1 = 0xb7;\n    }\n    (*_sym.imp.KERNEL32.dll_SetLastError)(iVar1);\n    return 0;\n}\n",
        "token_count": 202
    },
    "00401f9d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401f9d(int32_t arg_8h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    bool bVar11;\n    uint lpLCData;\n    uint var_68h;\n    uint dwErrCode;\n    uint lpString2;\n    uint32_t var_4h;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_GetLastError;\n    iVar10 = 0;\n    if (*0x417058 != 0) {\n        piVar4 = 0x417058;\n        do {\n            if (*piVar4 == arg_8h) break;\n            iVar10 = iVar10 + 1;\n            piVar4 = iVar10 * 0x10 + 0x417058;\n        } while (*piVar4 != 0);\n    }\n    iVar10 = iVar10 * 0x10;\n    if (*(iVar10 + 0x417058) == 0) {\n        return 0x41335c;\n    }\n    dwErrCode = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    (*_sym.imp.USER32.dll_wsprintfW)(&var_68h, L\"7zSfxString%d\", arg_8h);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetEnvironmentVariableW;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(&var_68h, 0, 0);\n    iVar5 = (*pcVar3)();\n    if (iVar5 != 0) goto code_r0x00402095;\n    iVar1 = (var_4h + 2) * 2;\n    lpString2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(-(iVar1 >> 0x20 != 0) | iVar1);\n    uVar6 = (*pcVar2)(&var_68h, lpString2, var_4h + 1);\n    uVar8 = lpString2;\n    if ((uVar6 <= var_4h) && (iVar5 = (*pcVar3)(),  uVar8 = lpString2,  iVar5 == 0)) {\n        if (*(iVar10 + 0x417064) == 0) {\n            *(iVar10 + 0x417064) = lpString2;\n            goto code_r0x00402095;\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(iVar10 + 0x417064), lpString2);\n        if (iVar5 != 0) {\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(iVar10 + 0x417064));\n            *(iVar10 + 0x417064) = uVar8;\n            goto code_r0x00402095;\n        }\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(uVar8);\ncode_r0x00402095:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n    iVar5 = *(iVar10 + 0x417064);\n    if (iVar5 == 0) {\n        iVar5 = *(iVar10 + 0x41705c);\n        if ((*(iVar10 + 0x417060) != 0) && (iVar7 = fcn.00401f47(),  iVar7 == *0x414060)) {\n            iVar5 = *(iVar10 + 0x417060);\n        }\n        iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar5);\n        iVar1 = (iVar7 + 3) * 2;\n        uVar8 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(-(iVar1 >> 0x20 != 0) | iVar1);\n        bVar11 = *0x417054 == -1;\n        *(iVar10 + 0x417064) = uVar8;\n        if (bVar11) {\n            *0x417054 = 0;\n            iVar9 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(*0x41772c, 0x1004, &lpLCData, 0x1f);\n            if (0 < iVar9) {\n                *0x417054 = (*_sym.imp.MSVCRT.dll__wtol)(&lpLCData);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(*0x417054, 0, iVar5, iVar7 + 1, *(iVar10 + 0x417064), iVar7 + 2);\n        iVar5 = *(iVar10 + 0x417064);\n    }\n    return iVar5;\n}\n",
        "token_count": 1076
    },
    "00402b79": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402b79(uint lpPathName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpPathName_00;\n    uint lpFindFileData;\n    uint lpString1;\n    uint lpFileName;\n    \n    fcn.004024fc(lpPathName);\n    fcn.0040254d(0x413454);\n    lpPathName_00 = lpFileName;\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    pcVar1 = _sym.imp.KERNEL32.dll_SetFileAttributesW;\n    if (iVar2 != -1) {\n        do {\n            fcn.00401329(lpPathName);\n            fcn.00401429(0x5c);\n            fcn.0040254d(&lpString1);\n            lpPathName_00 = lpFileName;\n            if ((lpFindFileData & 0x10) == 0) {\n                iVar3 = (*pcVar1)(lpFileName, 0);\n                if (iVar3 == 0) goto code_r0x00402c78;\n                iVar3 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpPathName_00);\ncode_r0x00402c34:\n                if (iVar3 == 0) goto code_r0x00402c78;\n            }\n            else {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, 0x413450);\n                if ((iVar3 != 0) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, 0x413448),  iVar3 != 0)) {\n                    iVar3 = fcn.00402b79(lpPathName_00);\n                    goto code_r0x00402c34;\n                }\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, &lpFindFileData);\n        } while (iVar3 != 0);\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n    }\n    iVar2 = (*pcVar1)(lpPathName, 0);\n    if ((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)(lpPathName),  iVar2 != 0)) {\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpPathName_00);\n        return 1;\n    }\ncode_r0x00402c78:\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpPathName_00);\n    return 0;\n}\n",
        "token_count": 593
    },
    "00403cc6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403cc6(int16_t *param_1)\n\n{\n    if ((*0x41734c == -1) || ((*param_1 != 0x2b && (*param_1 != 0x2d)))) {\n        *0x41734c = 0;\n    }\n    fcn.00403c63(param_1, 0x41734c);\n    return;\n}\n",
        "token_count": 90
    },
    "00403f85": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00403f85(int32_t *arg_8h, uint ARG_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    piVar2 = arg_8h;\n    fcn.00401411();\n    uVar3 = fcn.00402535(2);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTempPathW;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetTempPathW)(1, uVar3);\n    **arg_8h = 0;\n    arg_8h[1] = 0;\n    if (iVar4 != 0) {\n        uVar3 = fcn.00402535(iVar4 + 1);\n        (*pcVar1)(iVar4 + 1, uVar3);\n        iVar4 = *arg_8h;\n        iVar5 = fcn.00401117(iVar4);\n        *(iVar4 + iVar5 * 2) = 0;\n        arg_8h[1] = iVar5;\n    }\n    iVar4 = arg_8h[1];\n    arg_8h = NULL;\n    do {\n        iVar5 = fcn.00402535(iVar4 + 0xf);\n        (*_sym.imp.USER32.dll_wsprintfW)(iVar5 + iVar4 * 2, ARG_1, arg_8h);\n        iVar5 = *piVar2;\n        iVar6 = fcn.00401117(iVar5);\n        *(iVar5 + iVar6 * 2) = 0;\n        piVar2[1] = iVar6;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(*piVar2);\n        if (iVar5 == -1) {\n            return piVar2;\n        }\n        arg_8h = arg_8h + 1;\n    } while (arg_8h < 0xfff);\n    return piVar2;\n}\n",
        "token_count": 463
    },
    "0040d985": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d985(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        *param_1 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 92
    },
    "0040d9a5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d9a5(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    ulong uVar2;\n    uint *lpFileSizeHigh;\n    \n    lpFileSizeHigh = in_ECX;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*in_ECX, &lpFileSizeHigh);\n    if ((iVar1 == -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 != 0)) {\n        return 0;\n    }\n    uVar2 = fcn.00411d50(lpFileSizeHigh, 0, 0, 1);\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar2 >> 0x20;\n    return 1;\n}\n",
        "token_count": 183
    },
    "0040d9f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0040d9f0(uint lDistanceToMove, int32_t arg_ch, uint dwMoveMethod, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint var_8h;\n    int32_t lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_ch;\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)\n                      (*in_ECX, lDistanceToMove, &lpDistanceToMoveHigh, dwMoveMethod, lDistanceToMove);\n    if ((iVar1 == -1) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0)) {\n        return 0;\n    }\n    *arg_14h = iVar1;\n    arg_14h[1] = lpDistanceToMoveHigh;\n    return 1;\n}\n",
        "token_count": 220
    },
    "0040da56": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040da56(uint lpFileName, uint dwDesiredAccess, uint dwShareMode, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    \n    uVar1 = fcn.0040d985();\n    if (uVar1 != '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, dwDesiredAccess, dwShareMode, 0, arg_14h, arg_18h, 0);\n        *in_ECX = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "004019cc": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint32_t fcn.004019cc(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    \n    cVar1 = in_EAX;\n    if (cVar1 == '\\n') {\n        *0x417050 = *0x417050 + 1;\n        return in_EAX & 0xffffff00 | 1;\n    }\n    if ((((cVar1 != ' ') && (cVar1 != '\\r')) && (cVar1 != '\\0')) && (cVar1 != '\\t')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 130
    },
    "00402385": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402385(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    \n    while( true ) {\n        if (param_2[1] <= *in_EAX) {\n            return 0;\n        }\n        if (*(*in_EAX + *param_2) == '\\n') break;\n        *in_EAX = *in_EAX + 1;\n    }\n    *0x417050 = *0x417050 + 1;\n    return 1;\n}\n",
        "token_count": 120
    },
    "0040b3e8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b3e8(uint *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    uVar3 = fcn.0040ab46();\n    *arg_8h = uVar3;\n    arg_8h[1] = uVar3 >> 0x20;\n    arg_8h_00 = fcn.0040abdb();\n    fcn.0040b361(9, 0);\n    fcn.0040e8da();\n    iVar1 = arg_8h_00;\n    fcn.0040e811(arg_8h_00);\n    for (iVar2 = arg_8h_00; iVar2 != 0; iVar2 = iVar2 + -1) {\n        iVar1 = fcn.0040ab46();\n        fcn.004087c0();\n    }\n    iVar4 = fcn.0040ab46(iVar1);\n    while (iVar4 != 0) {\n        if (iVar4 == 10) {\n            fcn.0040b390(arg_8h_00, arg_10h, arg_14h);\n        }\n        else {\n            fcn.0040acb7();\n        }\n        iVar4 = fcn.0040ab46();\n    }\n    if (*(arg_10h + 8) == 0) {\n        fcn.0040ac7a(arg_10h);\n        fcn.0040e811(arg_8h_00);\n        fcn.0040e8da();\n        for (; arg_8h_00 != 0; arg_8h_00 = arg_8h_00 + -1) {\n            fcn.00408761();\n        }\n    }\n    return;\n}\n",
        "token_count": 430
    },
    "0040bec7": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bec7(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint var_8ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.0040b361(0xb, 0);\n    var_4h = fcn.0040abdb();\n    fcn.0040baf0();\n    fcn.0040e8da();\n    fcn.0040e811(var_4h);\n    if (var_4h != 0) {\n        arg_8h = var_4h;\n        do {\n            uVar2 = fcn.0040b5c8();\n            fcn.0040be9d(uVar2);\n            fcn.0040a35b();\n            fcn.0040bb9a(*(*(arg_ch + 0xc) + -4 + *(arg_ch + 8) * 4));\n            arg_8h = arg_8h - 1;\n        } while (arg_8h != 0);\n    }\n    fcn.0040baa1();\n    fcn.0040b361(0xc, 0);\n    arg_8h = 0;\n    if (var_4h != 0) {\n        do {\n            iVar3 = fcn.0040b623();\n            fcn.0040e811(iVar3);\n            for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n                uVar5 = fcn.0040ab46();\n                fcn.004087c0(uVar5);\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < var_4h);\n    }\n    while (iVar6 = fcn.0040ab46(),  iVar6 != 0) {\n        if (iVar6 == 10) {\n            var_28h = 0;\n            var_24h = 0;\n            var_20h = 0;\n            var_1ch = 1;\n            var_2ch = 0x4149e8;\n            var_14h = 0;\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 4;\n            var_18h = 0x4149e8;\n            fcn.0040b390(var_4h, &var_2ch, &var_18h);\n            uVar4 = 0;\n            if (var_4h != 0) {\n                do {\n                    iVar1 = *(*(arg_ch + 0xc) + uVar4 * 4);\n                    *(iVar1 + 0x54) = *(var_20h + uVar4);\n                    iVar3 = uVar4 * 4;\n                    uVar4 = uVar4 + 1;\n                    *(iVar1 + 0x50) = *(var_ch + iVar3);\n                } while (uVar4 < var_4h);\n            }\n            fcn.0040e959();\n            fcn.0040e959();\n        }\n        else {\n            fcn.0040acb7();\n        }\n    }\n    return;\n}\n",
        "token_count": 822
    },
    "0040d806": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint fcn.0040d806(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint var_20h;\n    uint32_t var_10h;\n    \n    iVar1 = fcn.0040d76f(&var_20h);\n    if (iVar1 == 0) {\n        return 1;\n    }\n    uVar2 = var_10h >> 4 & 0xf00f;\n    uVar3 = var_10h >> 8 & 0xff00f;\n    iVar1 = fcn.0040d7cc(&var_20h);\n    if (iVar1 == 0) {\n        if (uVar3 < 6) {\n            return 1;\n        }\n        if (uVar3 != 6) {\n            return 0;\n        }\n        bVar4 = uVar2 == 0x100c;\n    }\n    else {\n        if (iVar1 != 1) {\n            if (iVar1 != 2) {\n                return 1;\n            }\n            if (uVar3 < 6) {\n                return 1;\n            }\n            if (uVar3 != 6) {\n                return 0;\n            }\n            if (uVar2 < 0xf) {\n                return 1;\n            }\n            return 0;\n        }\n        if (uVar3 < 5) {\n            return 1;\n        }\n        if (uVar3 != 5) {\n            return 0;\n        }\n        if (uVar2 < 6) {\n            return 1;\n        }\n        bVar4 = uVar2 == 10;\n    }\n    if (bVar4) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 393
    },
    "00401a1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t fcn.00401a1f(uint16_t param_1)\n\n{\n    if (param_1 - 0x30 < 10) {\n        return param_1 - 0x30;\n    }\n    if (param_1 - 0x61 < 0x1a) {\n        return param_1 - 0x57;\n    }\n    if (param_1 - 0x41 < 0x1a) {\n        return param_1 - 0x37;\n    }\n    return -1;\n}\n",
        "token_count": 119
    },
    "00404603": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404603(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint16_t *puVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = fcn.0040243b(arg_8h, 0x414168, 0);\n    if (iVar3 != 0) {\n        fcn.00401329(iVar3);\n        uVar4 = fcn.00401f9d(4);\n        fcn.0040254d(uVar4);\n        *0x417764 = *0x4177ac;\n        fcn.00401329(iVar3);\n        uVar4 = fcn.00401f9d(0x29);\n        fcn.0040254d(uVar4);\n        *0x417760 = *0x41777c;\n        *0x41775c = iVar3;\n    }\n    iVar3 = fcn.0040243b(arg_8h, L\"ErrorTitle\", 0);\n    if (iVar3 != 0) {\n        *0x417764 = iVar3;\n    }\n    iVar3 = fcn.0040243b(arg_8h, L\"WarningTitle\", 0);\n    if (iVar3 != 0) {\n        *0x417760 = iVar3;\n    }\n    iVar3 = fcn.0040243b(arg_8h, L\"ExtractTitle\", 0);\n    if (iVar3 != 0) {\n        *0x417758 = iVar3;\n    }\n    iVar3 = fcn.0040243b(arg_8h, L\"Progress\", 0);\n    if (iVar3 != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(iVar3, 0x41442c);\n        if (iVar3 == 0) {\n            *0x417768 = 2;\n        }\n    }\n    puVar5 = fcn.0040243b(arg_8h, L\"GUIMode\", 0);\n    if (((puVar5 != NULL) && (uVar1 = *puVar5,  0x2f < uVar1)) && (uVar1 < 0x33)) {\n        *0x417768 = uVar1 - 0x30;\n    }\n    iVar3 = fcn.0040243b(arg_8h, L\"OverwriteMode\", 0);\n    if (iVar3 != 0) {\n        fcn.00403d1f(iVar3);\n    }\n    var_4h = 0;\n    iVar3 = fcn.0040243b(arg_8h, L\"GUIFlags\", &var_4h);\n    while (iVar3 != 0) {\n        var_4h = var_4h + 1;\n        fcn.00403cc6(iVar3);\n        iVar3 = fcn.0040243b(arg_8h, L\"GUIFlags\", &var_4h);\n    }\n    var_4h = 0;\n    iVar3 = fcn.0040243b(arg_8h, L\"MiscFlags\", &var_4h);\n    while (iVar3 != 0) {\n        var_4h = var_4h + 1;\n        fcn.00403cf7(iVar3);\n        iVar3 = fcn.0040243b(arg_8h, L\"MiscFlags\", &var_4h);\n    }\n    *0x417748 = fcn.0040243b(arg_8h, L\"ExtractCancelText\", 0);\n    *0x417744 = fcn.0040243b(arg_8h, L\"ExtractDialogText\", 0);\n    iVar3 = fcn.0040243b(arg_8h, L\"ExtractDialogWidth\", 0);\n    pcVar2 = _sym.imp.MSVCRT.dll__wtol;\n    if (iVar3 != 0) {\n        *0x417350 = (*_sym.imp.MSVCRT.dll__wtol)(iVar3);\n    }\n    iVar3 = fcn.0040243b(arg_8h, L\"ExtractPathWidth\", 0);\n    if (iVar3 != 0) {\n        *0x417354 = (*pcVar2)(iVar3);\n    }\n    iVar3 = fcn.0040243b(arg_8h, L\"ExtractPathTitle\", 0);\n    if (iVar3 != 0) {\n        *0x417754 = iVar3;\n    }\n    iVar3 = fcn.0040243b(arg_8h, L\"ExtractPathText\", 0);\n    if (iVar3 != 0) {\n        *0x417750 = iVar3;\n    }\n    iVar3 = fcn.0040243b(arg_8h, L\"CancelPrompt\", 0);\n    if (iVar3 != 0) {\n        *0x41774c = iVar3;\n    }\n    return;\n}\n",
        "token_count": 1118
    },
    "004023aa": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004023aa(uint param_1, int32_t param_2)\n\n{\n    char extraout_CL;\n    int32_t *unaff_ESI;\n    ulong uVar1;\n    \n    do {\n        if (*(param_2 + 4) <= *unaff_ESI) {\n            return 0;\n        }\n        uVar1 = fcn.004019cc();\n        param_2 = uVar1 >> 0x20;\n        if (uVar1 == '\\0') {\n            if (extraout_CL != ';') {\n                return 1;\n            }\n            uVar1 = fcn.00402385();\n            param_2 = uVar1 >> 0x20;\n            if (uVar1 == '\\0') {\n                return 0;\n            }\n        }\n        *unaff_ESI = *unaff_ESI + 1;\n    } while( true );\n}\n",
        "token_count": 197
    },
    "00402986": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00402986(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char extraout_CL;\n    uint32_t in_ECX;\n    int32_t *unaff_ESI;\n    uint8_t *unaff_EDI;\n    uint32_t var_4h;\n    \n    fcn.004025ae();\n    *unaff_ESI = 0;\n    uVar2 = *unaff_EDI;\n    var_4h = in_ECX;\n    while( true ) {\n        var_4h = var_4h & 0xffffff00 | uVar2;\n        cVar1 = fcn.004019cc(var_4h);\n        if ((cVar1 != '\\0') || (extraout_CL == '=')) break;\n        fcn.00402640();\n        *unaff_ESI = *unaff_ESI + 1;\n        uVar2 = unaff_EDI[*unaff_ESI];\n    }\n    return arg_8h;\n}\n",
        "token_count": 241
    },
    "00402fed": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00402fed(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402c86(param_1);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar1 == 5) && ((*0x417774 & 8) != 0)) {\n        return 1;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 107
    },
    "00410bb6": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00410bb6(uint32_t *param_1, uint8_t *param_2, uint32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    \n    if (4 < param_3) {\n        uVar2 = *(param_2 + 1);\n        if (uVar2 < 0x1000) {\n            uVar2 = 0x1000;\n        }\n        param_1[3] = uVar2;\n        uVar1 = *param_2;\n        if (uVar1 < 0xe1) {\n            *param_1 = uVar1 % 9;\n            param_1[2] = (uVar1 / 9) / 5;\n            param_1[1] = (uVar1 / 9) % 5;\n            return 0;\n        }\n    }\n    return 4;\n}\n",
        "token_count": 203
    },
    "00404dcf": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404dcf(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    \n    piVar1 = arg_8h;\n    arg_10h_00 = arg_ch[1];\n    arg_8h_00 = 0;\n    if (0 < arg_8h[1]) {\n        arg_8h = arg_10h_00 * 2;\n        do {\n            if (*(*piVar1 + arg_8h_00 * 2) == 0x25) {\n                iVar2 = fcn.00401a85(*piVar1 + 2 + arg_8h_00 * 2, *arg_ch, arg_10h_00);\n                if ((iVar2 == 0) && (*(*piVar1 + 2 + arg_8h) == 0x25)) {\n                    fcn.004026b1(arg_8h_00, arg_10h_00 + 2);\n                    fcn.00402f96(arg_8h_00, arg_10h);\n                }\n            }\n            arg_8h = arg_8h + 2;\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < piVar1[1]);\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "004115ca": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint fcn.004115ca(char param_1, uint8_t param_2)\n\n{\n    if ((param_1 == '\\x0f') && ((param_2 & 0xf0) == 0x80)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "0040c0dc": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040c0dc(int32_t *param_1, uint32_t param_2, int32_t param_3, uint32_t *param_4, int32_t param_5)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    int32_t iStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    int32_t iStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    int32_t *piStack12;\n    int32_t iStack8;\n    \n    uStack188 = 0x4149e8;\n    uStack148 = 0x4149e8;\n    uStack88 = 0x4149e8;\n    uStack64 = 0x4149e8;\n    uStack108 = 0x4149e8;\n    uStack172 = 4;\n    uStack28 = 4;\n    uStack132 = 4;\n    uStack72 = 4;\n    uStack60 = 0;\n    uStack56 = 0;\n    iStack52 = 0;\n    uStack48 = 8;\n    uStack164 = 0;\n    uStack160 = 0;\n    uStack156 = 0;\n    uStack152 = 1;\n    uStack168 = 0x4149e8;\n    uStack184 = 0;\n    uStack180 = 0;\n    uStack176 = 0;\n    uStack40 = 0;\n    iStack36 = 0;\n    iStack32 = 0;\n    uStack44 = 0x414990;\n    uStack144 = 0;\n    uStack140 = 0;\n    uStack136 = 0;\n    uStack104 = 0;\n    uStack100 = 0;\n    uStack96 = 0;\n    uStack92 = 8;\n    uStack124 = 0;\n    uStack120 = 0;\n    uStack116 = 0;\n    uStack112 = 1;\n    uStack128 = 0x4149e8;\n    uStack84 = 0;\n    uStack80 = 0;\n    uStack76 = 0;\n    fcn.0040c05d(0, param_4, &uStack64, &uStack168, &uStack188, &uStack44, &uStack148, &uStack108, &uStack128, &uStack88\n                );\n    iStack24 = 0;\n    fcn.00408e4e(1);\n    uStack20 = *param_4 + param_2;\n    iStack16 = param_4[1] + param_3 + CARRY4(*param_4, param_2);\n    param_3 = 0;\n    if (0 < iStack36) {\n        uStack212 = 0;\n        uStack208 = 0;\n        uStack216 = 0x4149b0;\n        do {\n            iVar2 = *(iStack32 + param_3 * 4);\n            puVar5 = &uStack216;\n            fcn.0040ba46();\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(0);\n            iStack8 = *(*(param_5 + 0xc) + -4 + *(param_5 + 8) * 4);\n            uVar9 = fcn.004095b7();\n            uStack204 = uVar9;\n            if (uVar9 >> 0x20 != 0) {\ncode_r0x0040c376:\n                fcn.0040aaab(puVar5);\ncode_r0x0040c37b:\n                if (piStack12 != NULL) {\n                    (**(*piStack12 + 8))(piStack12);\n                }\n                fcn.00409530();\n                fcn.0040e959();\n                fcn.0040e959();\n                fcn.0040e959();\n                fcn.0040e959();\n                fcn.0040a262();\n                fcn.0040e959();\n                fcn.0040e959();\n                fcn.0040e959();\n                return iStack68;\n            }\n            fcn.0040adc3(uStack204);\n            puVar5 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(0x14);\n            if (puVar5 == NULL) {\n                puVar5 = NULL;\n            }\n            else {\n                puVar5[1] = 0;\n                *puVar5 = 0x4149f8;\n            }\n            fcn.004010e2(puVar5);\n            iVar7 = iStack24;\n            puVar5[2] = *(iStack8 + 8);\n            puVar5[3] = uStack204;\n            puVar5[4] = 0;\n            puVar5 = *param_1;\n            iStack68 = fcn.00408ea4();\n            if (iStack68 != 0) goto code_r0x0040c37b;\n            if ((*(iVar2 + 0x54) != '\\0') && (iVar6 = fcn.00408660(),  iVar6 != *(iVar2 + 0x50))) goto code_r0x0040c376;\n            iStack8 = 0;\n            if (0 < *(iVar2 + 0x30)) {\n                do {\n                    iStack192 = *(iStack52 + 4 + iVar7 * 8);\n                    uVar3 = *(iStack52 + iVar7 * 8);\n                    iVar7 = iVar7 + 1;\n                    bVar8 = CARRY4(uStack20, uVar3);\n                    uStack20 = uStack20 + uVar3;\n                    iStack16 = iStack16 + iStack192 + bVar8;\n                    puVar1 = param_1 + 0x12;\n                    uVar4 = *puVar1;\n                    *puVar1 = *puVar1 + uVar3;\n                    param_1[0x13] = param_1[0x13] + iStack192 + CARRY4(uVar4, uVar3);\n                    iStack8 = iStack8 + 1;\n                    iStack24 = iVar7;\n                } while (iStack8 < *(iVar2 + 0x30));\n            }\n            if (piStack12 != NULL) {\n                (**(*piStack12 + 8))(piStack12);\n            }\n            param_3 = param_3 + 1;\n        } while (param_3 < iStack36);\n    }\n    fcn.00409530();\n    fcn.0040e959();\n    fcn.0040e959();\n    fcn.0040e959();\n    fcn.0040e959();\n    fcn.0040a262();\n    fcn.0040e959();\n    fcn.0040e959();\n    fcn.0040e959();\n    return 0;\n}\n",
        "token_count": 1846
    },
    "0040ab46": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0040ab46(int32_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t extraout_ECX;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    uVar3 = param_1[2];\n    piVar6 = param_1;\n    if (uVar3 < param_1[1]) {\n        uVar1 = *(*param_1 + uVar3);\n        piVar6 = param_1 & 0xffffff00 | uVar1;\n        uVar3 = uVar3 + 1;\n        param_1[2] = uVar3;\n        var_2h._1_1_ = 0x80;\n        var_14h = 0;\n        var_8h = 0;\n        while( true ) {\n            if ((var_2h._1_1_ & piVar6) == 0) {\n                iVar5 = fcn.00411db0();\n                return iVar5 + var_14h;\n            }\n            if (param_1[1] <= uVar3) break;\n            uVar4 = fcn.00411db0();\n            var_14h = var_14h | uVar4;\n            var_2h._1_1_ = var_2h._1_1_ >> 1;\n            var_8h = var_8h + 8;\n            uVar3 = uVar3 + 1;\n            param_1[2] = uVar3;\n            if (0x3f < var_8h) {\n                return var_14h;\n            }\n            piVar6 = extraout_ECX & 0xffffff00 | uVar1;\n        }\n    }\n    sub.MSVCRT.dll__CxxThrowException(&stack0xffffffd7, 0x414ef8, param_1, piVar6 & 0xffffff);\n    pcVar2 = swi(3);\n    uVar3 = (*pcVar2)();\n    return uVar3;\n}\n",
        "token_count": 535
    },
    "0040accf": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040accf(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    fcn.0040e8da();\n    fcn.0040e811(arg_8h);\n    uVar1 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (uVar1 == 0) {\n                fcn.0040aacb();\n                uVar1 = 0x80;\n            }\n            fcn.00409403();\n            uVar1 = uVar1 >> 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00410855": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410855(uint param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar1 = (0x300 << (param_2[1] + *param_2 & 0x1fU)) + 0x736;\n    if (uVar1 != 0) {\n        puVar3 = param_2[4];\n        for (uVar2 = uVar1 >> 1; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = 0x4000400;\n            puVar3 = puVar3 + 1;\n        }\n        for (uVar1 = (uVar1 & 1) != 0; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar3 = 0x400;\n            puVar3 = puVar3 + 2;\n        }\n    }\n    param_2[0xd] = 0;\n    param_2[0x14] = 0;\n    param_2[0x11] = 1;\n    param_2[0x10] = 1;\n    param_2[0xf] = 1;\n    param_2[0xe] = 1;\n    return;\n}\n",
        "token_count": 308
    },
    "0040daac": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid fcn.0040daac(uint param_1, char param_2)\n\n{\n    fcn.0040da8f(param_1, -(param_2 != '\\0') & 2U | 1, 3, 0x80);\n    return;\n}\n",
        "token_count": 61
    },
    "0040e8e2": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e8e2(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *(param_1 + 4);\n    if (*(param_1 + 8) == uVar1) {\n        uVar2 = 1;\n        if (uVar1 < 0x40) {\n            if (7 < uVar1) {\n                uVar2 = 8;\n            }\n        }\n        else {\n            uVar2 = uVar1 >> 2;\n        }\n        fcn.0040e811(uVar1 + uVar2);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "004107ec": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004107ec(int32_t param_1)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uchar uVar4;\n    int32_t in_EAX;\n    \n    uVar1 = *(in_EAX + 1);\n    uVar3 = *(in_EAX + 3);\n    uVar2 = *(in_EAX + 2);\n    uVar4 = *(in_EAX + 4);\n    *(param_1 + 0x1c) = 0xffffffff;\n    *(param_1 + 0x4c) = 0;\n    *(param_1 + 0x20) = CONCAT31(CONCAT21(CONCAT11(uVar1, uVar2), uVar3), uVar4);\n    return;\n}\n",
        "token_count": 176
    },
    "0041168a": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041168a(uint8_t **param_1)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.0040e568();\n    param_1[9] = NULL;\n    param_1[8] = 0xffffffff;\n    iVar3 = 5;\n    do {\n        puVar1 = *param_1;\n        if (puVar1 < param_1[1]) {\n            uVar2 = *puVar1;\n            *param_1 = puVar1 + 1;\n        }\n        else {\n            uVar2 = fcn.0040e63c();\n        }\n        iVar3 = iVar3 + -1;\n        param_1[9] = param_1[9] << 8 | uVar2 & 0xff;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 204
    },
    "004116c7": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004116c7(uint32_t *param_1, uint8_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    puVar1 = (param_2[8] >> 0xb) * *param_1;\n    if (param_2[9] < puVar1) {\n        param_2[8] = puVar1;\n        *param_1 = (0x800 - *param_1 >> 5) + *param_1;\n        if (param_2[8] < 0x1000000) {\n            puVar1 = *param_2;\n            if (puVar1 < param_2[1]) {\n                uVar2 = *puVar1;\n                *param_2 = puVar1 + 1;\n            }\n            else {\n                uVar2 = fcn.0040e63c();\n            }\n            param_2[8] = param_2[8] << 8;\n            param_2[9] = param_2[9] << 8 | uVar2 & 0xff;\n        }\n        uVar3 = 0;\n    }\n    else {\n        param_2[8] = param_2[8] + -puVar1;\n        param_2[9] = param_2[9] + -puVar1;\n        *param_1 = *param_1 - (*param_1 >> 5);\n        if (param_2[8] < 0x1000000) {\n            puVar1 = *param_2;\n            if (puVar1 < param_2[1]) {\n                uVar2 = *puVar1;\n                *param_2 = puVar1 + 1;\n            }\n            else {\n                uVar2 = fcn.0040e63c();\n            }\n            param_2[8] = param_2[8] << 8;\n            param_2[9] = param_2[9] << 8 | uVar2 & 0xff;\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 481
    },
    "00401398": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401398(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(param_1 + 8);\n    iVar3 = (iVar1 - *(param_1 + 4)) + -1;\n    if (iVar3 < param_2) {\n        if (iVar1 < 0x41) {\n            iVar2 = ((iVar1 < 9) - 1 & 0xc) + 4;\n        }\n        else {\n            iVar2 = iVar1 / 2;\n        }\n        if (iVar2 + iVar3 < param_2) {\n            iVar2 = param_2 - iVar3;\n        }\n        fcn.0040112b(iVar1 + iVar2);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00401b37": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00401b37(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0);\n    iVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)(0, 0x41334c, 0x41335c, 0, 0xfffffff6, 0xfffffff6, 5, 5, 0, 0, uVar1);\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_SetTimer)(iVar2, 1, 1, 0);\n        (*_sym.imp.USER32.dll_GetMessageW)(&lpMsg, 0, 0, 0);\n        (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n        (*_sym.imp.USER32.dll_KillTimer)(iVar2, 1);\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar2);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "004022fc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004022fc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(param_1 + 8);\n    iVar3 = (iVar1 - *(param_1 + 4)) + -1;\n    if (iVar3 < param_2) {\n        if (iVar1 < 0x41) {\n            iVar2 = ((iVar1 < 9) - 1 & 0xc) + 4;\n        }\n        else {\n            iVar2 = iVar1 / 2;\n        }\n        if (iVar2 + iVar3 < param_2) {\n            iVar2 = param_2 - iVar3;\n        }\n        fcn.004022b0(iVar1 + iVar2);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00402844": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: s1\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00402844(int32_t *arg_8h, uint arg_ch, uint s2, uint *arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint *unaff_ESI;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_1020h;\n    uint uStack76;\n    uint *puStack72;\n    int32_t iStack68;\n    int32_t *piStack64;\n    int32_t *piStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    int32_t n;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *s1;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x402851;\n    fcn.00411c20();\n    var_10h = 0;\n    var_14h = 0;\n    n = 0;\n    var_1ch = 0;\n    var_20h = arg_8h;\n    uStack40 = 0x402863;\n    s1 = unaff_ESI;\n    _auStack8 = unaff_EBX;\n    (**(*arg_8h + 0x10))();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    uStack40 = arg_ch;\n    arg_14h[1] = 0;\n    **arg_14h = 0;\n    uStack44 = 0x402878;\n    var_ch = (*pcVar1)();\n    uStack44 = s2;\n    puStack48 = 0x402880;\n    n = (*pcVar1)();\n    iVar4 = 0;\n    _auStack8 = _auStack8 & 0xffffff;\n    var_14h = 0;\n    var_10h = 0;\n    do {\n        puStack48 = &fcn.00402844::var_1ch;\n        iStack52 = 0x1000 - iVar4;\n        iStack56 = &fcn.00402844::var_1020h + iVar4;\n        piStack64 = 0x4028ad;\n        piStack60 = arg_8h;\n        uVar2 = (**(*arg_8h + 0xc))();\n        if ((uVar2 != 0) || (uVar2 = var_1ch,  var_1ch == 0)) {\ncode_r0x0040297f:\n            return uVar2 & 0xffffff00;\n        }\n        iVar4 = iVar4 + var_1ch;\n        s1 = &fcn.00402844::var_1020h;\n        uVar5 = 0;\n        while( true ) {\n            while (var_1h == '\\0') {\n                if (iVar4 - var_ch < uVar5) goto code_r0x0040293b;\n                piStack64 = var_ch;\n                iStack68 = arg_ch;\n                puStack72 = s1;\n                uStack76 = 0x402926;\n                iVar3 = sub.MSVCRT.dll_memcmp();\n                if (iVar3 != 0) goto code_r0x0040290b;\n                uVar5 = uVar5 + var_ch;\n                s1 = s1 + var_ch;\n                _auStack8 = CONCAT13(1, auStack8);\n            }\n            if (iVar4 - n < uVar5) break;\n            piStack64 = n;\n            iStack68 = s2;\n            puStack72 = s1;\n            uStack76 = 0x4028e9;\n            iVar3 = sub.MSVCRT.dll_memcmp();\n            if (iVar3 == 0) {\n                return 1;\n            }\n            uVar2 = s1 & 0xffffff00;\n            var_20h = var_20h & 0xffffff00 | *s1;\n            if (*s1 == 0) goto code_r0x0040297f;\n            piStack64 = var_20h;\n            iStack68 = 0x40290b;\n            fcn.00402640();\ncode_r0x0040290b:\n            uVar5 = uVar5 + 1;\n            s1 = s1 + 1;\n        }\ncode_r0x0040293b:\n        iVar4 = iVar4 - uVar5;\n        bVar6 = CARRY4(var_14h, uVar5);\n        var_14h = var_14h + uVar5;\n        iStack68 = &fcn.00402844::var_1020h + uVar5;\n        var_10h = var_10h + bVar6;\n        puStack72 = &fcn.00402844::var_1020h;\n        uStack76 = 0x402959;\n        piStack64 = iVar4;\n        (*_sym.imp.MSVCRT.dll_memmove)();\n        if ((var_10h != 0) || (0x100000 < var_14h)) {\n            return arg_14h[1] != 0;\n        }\n    } while( true );\n}\n",
        "token_count": 1259
    },
    "00402dc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402dc0(uint hWnd)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint lpClassName;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 0x40);\n    if (((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"STATIC\"),  iVar2 == 0)) &&\n       (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0),  (uVar3 & 0xe) == 0)) {\n        fcn.00402d7d(&var_18h, hWnd);\n        iVar2 = fcn.00401a85(var_18h, 0x413480, 5);\n        if ((iVar2 == 0) && (var_4h = (*_sym.imp.USER32.dll_GetParent)(hWnd),  var_4h != 0)) {\n            (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"riched20\");\n            fcn.00401ba3(hWnd, &var_34h);\n            uVar4 = (*_sym.imp.USER32.dll_GetMenu)(hWnd);\n            (*_sym.imp.KERNEL32.dll_SetThreadLocale)(0x419);\n            iVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (0, L\"RichEdit20W\", 0x41335c, 0x50000804, var_34h, var_30h, var_2ch - var_34h, \n                               var_28h - var_30h, var_4h, uVar4, 0, 0);\n            if (iVar2 != 0) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(hWnd);\n                pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x459, 0x22, 0);\n                uVar4 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n                (*pcVar1)(iVar2, 0x443, 0, uVar4);\n                var_8h = 0xfde9;\n                var_ch = 0;\n                fcn.00402776(&var_24h, &var_18h, 0xfde9);\n                (*pcVar1)(iVar2, 0x461, &var_ch, var_24h);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_24h);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n                return iVar2;\n            }\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    }\n    return 0;\n}\n",
        "token_count": 718
    },
    "004034c1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "get common file path",
            "create shortcut via IShellLink"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034c1(int32_t *ppv)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint lpszPath;\n    uint var_70h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_4h;\n    \n    piVar5 = ppv;\n    pcVar1 = _sym.imp.MSVCRT.dll__wtol;\n    uVar2 = *ppv;\n    if ((uVar2 < 0x30) || (0x39 < uVar2)) {\n        uVar2 = uVar2 | 0x20;\n        if (uVar2 == 100) {\n            iVar3 = (-((*(ppv + 2) | 0x20) != 0x75) & 9) + 0x10;\n        }\n        else if (uVar2 == 0x70) {\n            iVar3 = (-((*(ppv + 2) | 0x20) != 0x75) & 0x15) + 2;\n        }\n        else if (uVar2 == 0x73) {\n            iVar3 = (-((*(ppv + 2) | 0x20) != 0x75) & 0xb) + 0xb;\n        }\n        else {\n            if (uVar2 != 0x74) {\n                return 0;\n            }\n            iVar3 = (-((*(ppv + 2) | 0x20) != 0x75) & 0x11) + 7;\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.MSVCRT.dll__wtol)(ppv);\n    }\n    while( true ) {\n        if (*piVar5 == 0x2c) {\n            iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)(0, &lpszPath, iVar3, 0);\n            if (iVar3 != 0) {\n                fcn.004024fc(&lpszPath);\n                fcn.00401411();\n                fcn.00401411();\n                fcn.00401411();\n                fcn.00401411();\n                fcn.00401411();\n                fcn.00401411();\n                fcn.00401411();\n                fcn.00401411();\n                uVar4 = fcn.00402cd0(piVar5, &var_64h);\n                if (var_60h == 0) {\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_70h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_58h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_40h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_28h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_34h);\n                }\n                else {\n                    uVar4 = fcn.00402cd0(uVar4, &var_34h);\n                    uVar4 = fcn.00402cd0(uVar4, &var_4ch);\n                    uVar4 = fcn.00402cd0(uVar4, &var_28h);\n                    uVar4 = fcn.00402cd0(uVar4, &var_10h);\n                    uVar4 = fcn.00402cd0(uVar4, &var_40h);\n                    uVar4 = fcn.00402cd0(uVar4, &var_58h);\n                    fcn.00402cd0(uVar4, &var_70h);\n                    uVar4 = (*pcVar1)(var_70h);\n                    if (var_ch == 0) {\n                        iVar3 = fcn.00402d5a(&var_64h);\n                        fcn.00401329(var_64h + 2 + iVar3 * 2);\n                        iVar3 = fcn.00402583(0x2e);\n                        if (-1 < iVar3) {\n                            *(var_10h + iVar3 * 2) = 0;\n                            var_ch = iVar3;\n                        }\n                    }\n                    uVar6 = 0x5c;\n                    fcn.00401429();\n                    if (var_48h != 0) {\n                        fcn.004013e2(&var_4ch);\n                        uVar6 = 0x5c;\n                        fcn.00401429(0x5c);\n                    }\n                    iVar3 = fcn.00403354(var_1ch);\n                    if (iVar3 != 0) {\n                        fcn.004013e2(&var_10h, uVar6);\n                        fcn.0040254d(L\".lnk\");\n                        ppv = NULL;\n                        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x414bf4, 0, 1, 0x414be4, &ppv);\n                        if (-1 < iVar3) {\n                            var_4h = NULL;\n                            (**(*ppv + 0x50))(ppv, var_64h);\n                            if (var_24h != 0) {\n                                (**(*ppv + 0x1c))(ppv, var_28h);\n                            }\n                            if (var_30h != 0) {\n                                (**(*ppv + 0x2c))(ppv, var_34h);\n                            }\n                            if (var_3ch != 0) {\n                                (**(*ppv + 0x24))(ppv, var_40h);\n                            }\n                            if (var_54h != 0) {\n                                (**(*ppv + 0x44))(ppv, var_58h, uVar4);\n                            }\n                            iVar3 = (***ppv)(ppv, 0x414c24, &var_4h);\n                            if (-1 < iVar3) {\n                                (**(*var_4h + 0x18))(var_4h, var_1ch, 1);\n                                (**(*var_4h + 8))(var_4h);\n                            }\n                            (**(*ppv + 8))(ppv);\n                        }\n                    }\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_70h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_58h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_40h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_28h);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4ch);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_34h);\n                }\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_64h);\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n            }\n            return 0;\n        }\n        if (*piVar5 == 0) break;\n        piVar5 = piVar5 + 2;\n    }\n    return 0;\n}\n",
        "token_count": 1724
    },
    "00404034": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "set environment variable"
        ],
        "decompiled_code": "\nvoid fcn.00404034(void)\n\n{\n    int32_t iVar1;\n    uint lpValue;\n    \n    iVar1 = 0;\n    if (0 < *0x41738c) {\n        do {\n            fcn.004012f7(*(*0x417390 + iVar1 * 4) + 0xc);\n            fcn.00403b7f(&lpValue);\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(**(*0x417390 + iVar1 * 4), lpValue);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpValue);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *0x41738c);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00404343": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404343(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_4h;\n    \n    iVar1 = in_ECX[1];\n    if (iVar1 < arg_ch + arg_10h) {\n        arg_10h = iVar1 - arg_ch;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar1)) {\n        fcn.004025f6();\n    }\n    else {\n        var_4h = in_ECX;\n        fcn.004025ae();\n        fcn.004022b0(arg_10h);\n        iVar1 = 0;\n        if (0 < arg_10h) {\n            do {\n                *(var_10h + iVar1) = *(*var_4h + iVar1 + arg_ch);\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_10h);\n        }\n        *(var_10h + arg_10h) = 0;\n        var_ch = arg_10h;\n        fcn.004025f6(&var_10h);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 314
    },
    "00404996": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00404996(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_4ch;\n    uint var_ch;\n    \n    *0x41734c = 8;\n    fcn.0040661a();\n    uVar1 = fcn.00401f9d(1);\n    fcn.004024fc(uVar1);\n    uVar2 = 0;\n    if (*0x417908 != 0) {\n        do {\n            if (uVar2 != 0) {\n                fcn.0040254d();\n            }\n            fcn.0040254d(*(*(uVar2 * 4 + 0x417808) + 0x10));\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *0x417908);\n    }\n    fcn.0040254d(0x414444);\n    uVar1 = fcn.00401f9d(0x2c);\n    fcn.0040254d(uVar1);\n    fcn.004073d1(0x11, *0x41775c, var_ch, 0);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    fcn.00406673();\n    return;\n}\n",
        "token_count": 287
    },
    "00404edf": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404edf(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_ch;\n    \n    fcn.004024fc(arg_8h);\n    fcn.00403880(&var_18h, 0x417788);\n    fcn.0040393b(&var_18h, 0x417794);\n    fcn.004039f6(&var_18h, 0x4177a0);\n    iVar1 = 0;\n    if (0 < *0x41738c) {\n        do {\n            fcn.00402f10(&var_ch, **(*0x417390 + iVar1 * 4));\n            fcn.004027c7(&var_ch);\n            fcn.00403880(&var_ch, 0x417788);\n            fcn.0040393b(&var_ch, 0x417794);\n            fcn.004039f6(&var_ch, 0x4177a0);\n            fcn.00404dcf(&var_18h, *(*0x417390 + iVar1 * 4), &var_ch);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *0x41738c);\n    }\n    fcn.004034c1(var_18h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    return;\n}\n",
        "token_count": 335
    },
    "0040695e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040695e(uint arg_8h, uint *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = false;\n    iVar3 = (*_sym.imp.USER32.dll_GetDC)(*(in_ECX + 4));\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar3 != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n        iVar5 = (*pcVar2)(0x3d);\n        iVar5 = iVar5 + (-0x3c - iVar4);\n        iVar4 = (*pcVar2)(0x3e);\n        arg_ch[3] = 0;\n        arg_ch[1] = 0;\n        *arg_ch = 0;\n        arg_ch[2] = iVar5;\n        uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, arg_10h);\n        iVar7 = (*_sym.imp.USER32.dll_DrawTextW)(iVar3, arg_8h, 0xffffffff, arg_ch, arg_14h | 0x400);\n        bVar1 = 0 < iVar7;\n        if (iVar5 < arg_ch[2]) {\n            arg_ch[2] = iVar5;\n        }\n        if (iVar4 + -0x78 < arg_ch[3]) {\n            arg_ch[3] = iVar4 + -0x78;\n        }\n        (*_sym.imp.GDI32.dll_SelectObject)(iVar3, uVar6);\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(in_ECX + 4), iVar3);\n    }\n    return bVar1;\n}\n",
        "token_count": 449
    },
    "00406a47": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406a47(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint arg_1ch;\n    uint uVar7;\n    uint uVar8;\n    int32_t lpRect;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n    var_ch = 0;\n    var_10h = 0;\n    uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), 0x4b3);\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar3, 0xfffffff0);\n    if ((uVar4 & 0x10000000) != 0) {\n        fcn.0040690f(0x4b3, &lpRect);\n        var_10h = var_24h - lpRect;\n        var_1ch = 0x4b3;\n        var_14h = var_20h - var_28h;\n    }\n    uVar3 = (*pcVar2)(*(param_1 + 4), 0x4b4);\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar3, 0xfffffff0);\n    if ((uVar4 & 0x10000000) != 0) {\n        fcn.0040690f(0x4b4, &lpRect);\n        var_ch = var_24h - lpRect;\n        var_1ch = 0x4b4;\n        var_14h = var_20h - var_28h;\n    }\n    var_4h = var_ch;\n    if ((var_10h != 0) && (var_4h = var_10h,  var_ch != 0)) {\n        var_4h = var_ch + 10 + var_10h;\n    }\n    if (*(param_1 + 0x14) < var_4h + 0x1a) {\n        *(param_1 + 0x14) = var_4h + 0x1a;\n    }\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x10);\n    var_18h = (*pcVar2)(0x11);\n    iVar6 = (*pcVar2)(8);\n    *(param_1 + 0x14) = *(param_1 + 0x14) + iVar6;\n    iVar6 = (*pcVar2)(7);\n    *(param_1 + 0x18) = *(param_1 + 0x18) + iVar6;\n    var_8h = (var_18h - *(param_1 + 0x18)) / 2;\n    iVar5 = (iVar5 - *(param_1 + 0x14)) / 2;\n    var_18h = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 4));\n    if (var_18h != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)(var_18h, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ClientToScreen;\n        (*_sym.imp.USER32.dll_ClientToScreen)(var_18h, &lpRect);\n        (*pcVar1)(var_18h, &var_24h);\n        var_8h = var_28h;\n        if (*(param_1 + 0x14) < var_24h - lpRect) {\n            lpRect = ((var_24h - *(param_1 + 0x14)) - lpRect) / 2 + lpRect;\n        }\n        if (*(param_1 + 0x18) < var_20h - var_28h) {\n            var_8h = ((var_20h - *(param_1 + 0x18)) - var_28h) / 2 + var_28h;\n        }\n        iVar5 = lpRect + 10;\n        var_8h = var_8h + 10;\n    }\n    (*_sym.imp.USER32.dll_SetWindowPos)(*(param_1 + 4), 0, iVar5, var_8h, *(param_1 + 0x14), *(param_1 + 0x18), 4);\n    if (*(param_1 + 0x30) == 0) {\n        uVar8 = 0;\n        iVar5 = *(param_1 + 0x2c) + 1;\n        iVar6 = *(param_1 + 0x28) + 1;\n        uVar7 = 10;\n        uVar3 = 0xc;\n    }\n    else {\n        uVar8 = 1;\n        iVar5 = 0;\n        iVar6 = 0;\n        uVar7 = 0xc;\n        uVar3 = 0xc;\n        fcn.00406a18(0x4b1, 0xc, 0xc, 0, 0, 1);\n        fcn.0040690f(0x4b1, &lpRect);\n        var_20h = var_20h + (2 - var_28h);\n    }\n    fcn.00406a18(0x4b2, uVar3, uVar7, iVar6, iVar5, uVar8);\n    (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 4), &lpRect);\n    if ((var_10h == 0) || (var_ch == 0)) {\n        arg_1ch = 1;\n        uVar8 = 0;\n        iVar5 = (var_20h - var_14h) + -10;\n        uVar7 = 0;\n        iVar6 = (var_24h - var_4h) / 2;\n        uVar3 = var_1ch;\n    }\n    else {\n        arg_1ch = 1;\n        uVar8 = 0;\n        iVar5 = (var_20h - var_14h) + -10;\n        uVar7 = 0;\n        iVar6 = (var_24h - var_4h) / 2;\n        uVar3 = 0x4b3;\n        fcn.00406a18(0x4b3, iVar6, iVar5, 0, 0, 1);\n        fcn.0040690f(0x4b3, &lpRect);\n    }\n    fcn.00406a18(uVar3, iVar6, iVar5, uVar7, uVar8, arg_1ch);\n    iVar5 = (*pcVar2)(8);\n    *(param_1 + 0x14) = *(param_1 + 0x14) - iVar5;\n    iVar5 = (*pcVar2)(7);\n    *(param_1 + 0x18) = *(param_1 + 0x18) - iVar5;\n    return;\n}\n",
        "token_count": 1660
    },
    "00406ce7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ce7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = (**(*in_ECX + 8))(arg_ch, &var_20h, in_ECX[0xd], 0x20);\n    if (iVar1 != 0) {\n        var_18h = var_18h + 0x20;\n        fcn.0040690f(arg_8h, &var_10h);\n        if (var_8h - var_10h < var_18h) {\n            iVar1 = ((var_10h - var_8h) + 1 + var_18h) / 2;\n            fcn.00406a18(arg_8h, var_10h - iVar1, var_ch, (iVar1 * 2 - var_10h) + var_8h, var_4h - var_ch, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "004071b8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004071b8(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    param_1[0xb] = 0;\n    param_1[10] = 0;\n    param_1[9] = 0;\n    param_1[8] = 0;\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (param_1[0xc] != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n        iVar4 = iVar4 + 0xb;\n        iVar3 = (*pcVar1)(0xc);\n        iVar3 = iVar3 + 2;\n    }\n    iVar2 = (**(*param_1 + 8))(param_1[4], param_1 + 8, param_1[0xd], 0x850);\n    if (iVar2 != 0) {\n        iVar4 = iVar4 + param_1[10];\n        if (iVar3 < param_1[0xb]) {\n            iVar3 = param_1[0xb];\n        }\n    }\n    iVar2 = fcn.004067ed(param_1[3], &var_8h);\n    if (iVar2 != 0) {\n        if (iVar4 < var_8h) {\n            iVar4 = var_8h;\n        }\n        iVar3 = iVar3 + var_4h;\n    }\n    fcn.0040690f(0x4b3, &var_18h);\n    param_1[5] = iVar4 + 0x1a;\n    param_1[6] = (var_ch - var_14h) + 0x26 + iVar3;\n    return;\n}\n",
        "token_count": 459
    },
    "00407288": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407288(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    fcn.004071b8();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n    if (*(param_1 + 0x14) < *0x417354 - iVar2) {\n        iVar2 = (*pcVar1)(7);\n        *(param_1 + 0x14) = *0x417354 - iVar2;\n    }\n    fcn.0040690f(0x4b6, &var_10h);\n    *(param_1 + 0x18) = *(param_1 + 0x18) + (var_4h - var_ch) + 0xe;\n    return;\n}\n",
        "token_count": 216
    },
    "00407776": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407776(int32_t hMem, uint arg_ch, uint arglist)\n\n{\n    ushort *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint ARG_0;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar4 = fcn.00401f9d(arg_ch);\n    var_4h = &arglist;\n    (*_sym.imp.USER32.dll_wvsprintfW)(&ARG_0, uVar4, var_4h);\n    if (hMem == 0) {\ncode_r0x00407859:\n        fcn.004076a8(&ARG_0);\n    }\n    else {\n        var_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        pcVar3 = _sym.imp.KERNEL32.dll_FormatMessageW;\n        iVar5 = (*_sym.imp.KERNEL32.dll_FormatMessageW)(0x1100, 0, var_8h, *0x41772c, &hMem, 0, &var_4h);\n        if (iVar5 == 0) {\n            iVar5 = (*pcVar3)(0x1100, 0, var_8h, 0, &hMem, 0, &var_4h);\n            if (iVar5 == 0) goto code_r0x00407859;\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&ARG_0);\n        iVar6 = (*pcVar3)(hMem);\n        iVar2 = (iVar6 + 2 + iVar5) * 2;\n        iVar6 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(-(iVar2 >> 0x20 != 0) | iVar2);\n        pcVar3 = _sym.imp.KERNEL32.dll_lstrcpyW;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(iVar6, &ARG_0);\n        puVar1 = iVar6 + iVar5 * 2;\n        *puVar1 = 10;\n        (*pcVar3)(puVar1 + 1, hMem);\n        fcn.004076a8(iVar6);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar6);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n    }\n    return;\n}\n",
        "token_count": 554
    },
    "00407939": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407939(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    \n    if (arg_8h == 0x4b7) {\n        fcn.0040748a();\n    }\n    else if (arg_8h == 0x4b3) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 4), 0x4b6);\n        uVar1 = fcn.00402d7d(&var_ch, uVar1);\n        fcn.00401362(uVar1);\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    }\n    fcn.00406741(arg_8h);\n    return;\n}\n",
        "token_count": 180
    },
    "004080e5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004080e5(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    uint var_ch;\n    \n    if (arg_8h == 0x113) {\n        *0x417358 = *0x417358 + -1;\n        if (*0x417358 == 0) {\n            (*_sym.imp.USER32.dll_EndDialog)(*(in_ECX + 4), 1);\n        }\n        else {\n            fcn.00401411();\n            fcn.00407998(&var_ch);\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n        }\n    }\n    fcn.004066d6(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 178
    },
    "0040aae2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040aae2(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_1[1] - param_1[2] < param_3) {\n        fcn.0040aaab();\n        param_1 = extraout_ECX;\n    }\n    uVar1 = 0;\n    if (param_3 != 0) {\n        do {\n            *(uVar1 + param_2) = *(*param_1 + param_1[2]);\n            param_1[2] = param_1[2] + 1;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_3);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0040ab19": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ab19(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 8);\n    if ((param_3 != 0) || (*(param_1 + 4) - iVar1 < param_2)) {\n        fcn.0040aaab();\n        param_1 = extraout_ECX;\n        iVar1 = extraout_EDX;\n    }\n    *(param_1 + 8) = iVar1 + param_2;\n    return;\n}\n",
        "token_count": 151
    },
    "0040d4f3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d4f3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    fcn.00408d46(arg_8h);\n    fcn.0040e8da();\n    arg_8h = 0;\n    if (0 < *(in_ECX + 0x24)) {\n        do {\n            fcn.0040cde2();\n            fcn.00408b18();\n            iVar1 = fcn.0040edc8();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < *(in_ECX + 0x24));\n    }\n    return 0;\n}\n",
        "token_count": 202
    },
    "0040e2f8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e2f8(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg_10h;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    if (arg_10h == 0) {\n        return 0;\n    }\ncode_r0x0040e315:\n    uVar2 = *(arg_8h + 0x2c);\n    if (*(arg_8h + 0x28) != uVar2) {\n        uVar2 = *(arg_8h + 0x2c) - *(arg_8h + 0x28);\n        if (uVar2 <= uVar3) {\n            uVar3 = uVar2;\n        }\n        sub.MSVCRT.dll_memcpy(arg_ch, *(arg_8h + 0x18) + *(arg_8h + 0x28), uVar3);\n        *(arg_8h + 0x28) = *(arg_8h + 0x28) + uVar3;\n        if (arg_14h == NULL) {\n            return 0;\n        }\n        *arg_14h = *arg_14h + uVar3;\n        return 0;\n    }\n    iVar1 = 0;\n    while (uVar2 < *(arg_8h + 0x24)) {\n        *(*(arg_8h + 0x18) + iVar1) = *(*(arg_8h + 0x2c) + *(arg_8h + 0x18) + iVar1);\n        iVar1 = iVar1 + 1;\n        uVar2 = *(arg_8h + 0x2c) + iVar1;\n    }\n    *(arg_8h + 0x2c) = 0;\n    *(arg_8h + 0x28) = 0;\n    arg_10h = 0x20000 - iVar1;\n    *(arg_8h + 0x24) = iVar1;\n    iVar1 = fcn.0040f06b(*(arg_8h + 0x1c), *(arg_8h + 0x18) + iVar1, &arg_10h);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    *(arg_8h + 0x24) = *(arg_8h + 0x24) + arg_10h;\n    uVar2 = (**(**(arg_8h + 0x50) + 0x10))(*(arg_8h + 0x50), *(arg_8h + 0x18), *(arg_8h + 0x24));\n    *(arg_8h + 0x2c) = uVar2;\n    if (uVar2 != 0) goto code_r0x0040e397;\n    iVar1 = *(arg_8h + 0x24);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    goto code_r0x0040e3c6;\ncode_r0x0040e397:\n    if (*(arg_8h + 0x24) < uVar2) {\n        do {\n            *(*(arg_8h + 0x24) + *(arg_8h + 0x18)) = 0;\n            *(arg_8h + 0x24) = *(arg_8h + 0x24) + 1;\n        } while (*(arg_8h + 0x24) < *(arg_8h + 0x2c));\n        iVar1 = (**(**(arg_8h + 0x50) + 0x10))(*(arg_8h + 0x50), *(arg_8h + 0x18), *(arg_8h + 0x24));\ncode_r0x0040e3c6:\n        *(arg_8h + 0x2c) = iVar1;\n    }\n    goto code_r0x0040e315;\n}\n",
        "token_count": 942
    },
    "0040e98c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e98c(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    \n    uVar1 = *(param_1 + 0xc);\n    uVar2 = *(param_1 + 4);\n    uVar3 = *(param_1 + 0x18) - uVar1;\n    uVar4 = uVar3 + uVar2;\n    iVar5 = (*(param_1 + 0x1c) - (*(param_1 + 0x18) < uVar1)) + CARRY4(uVar3, uVar2);\n    if (uVar2 < uVar1) {\n        bVar6 = CARRY4(uVar4, *(param_1 + 0x10));\n        uVar4 = uVar4 + *(param_1 + 0x10);\n        iVar5 = iVar5 + bVar6;\n    }\n    return CONCAT44(iVar5, uVar4);\n}\n",
        "token_count": 248
    },
    "0040e9f7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e9f7(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar4 = param_1[1];\n    if (uVar4 <= param_1[3]) {\n        uVar4 = param_1[4];\n    }\n    uVar4 = uVar4 - param_1[3];\n    var_8h = 0;\n    if (param_1[8] != 0) {\n        var_4h = param_1;\n        (*_sym.imp.MSVCRT.dll_memmove)(param_1[8], *param_1 + param_1[3], uVar4);\n        param_1[8] = param_1[8] + uVar4;\n    }\n    piVar2 = param_1[5];\n    var_4h = uVar4;\n    if (piVar2 != NULL) {\n        var_4h = NULL;\n        var_8h = (**(*piVar2 + 0xc))(piVar2, *param_1 + param_1[3], uVar4, &var_4h);\n    }\n    param_1[3] = param_1[3] + var_4h;\n    uVar4 = param_1[4];\n    if (param_1[3] == uVar4) {\n        param_1[3] = 0;\n    }\n    if (param_1[1] == uVar4) {\n        *(param_1 + 9) = 1;\n        param_1[1] = 0;\n    }\n    uVar3 = param_1[3];\n    if (param_1[1] <= uVar3 && uVar3 != param_1[1]) {\n        uVar4 = uVar3;\n    }\n    puVar1 = param_1 + 6;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + var_4h;\n    param_1[2] = uVar4;\n    param_1[7] = param_1[7] + CARRY4(uVar3, var_4h);\n    return var_8h;\n}\n",
        "token_count": 529
    },
    "0040f021": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f021(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(arg_8h + 0xc) - *(arg_8h + 0x10);\n    if (arg_10h < uVar1) {\n        uVar1 = arg_10h;\n    }\n    sub.MSVCRT.dll_memcpy(*(arg_8h + 8) + *(arg_8h + 0x10), arg_ch, uVar1);\n    *(arg_8h + 0x10) = *(arg_8h + 0x10) + uVar1;\n    if (arg_14h != NULL) {\n        *arg_14h = uVar1;\n    }\n    return -(uVar1 != arg_10h) & 0x80004005;\n}\n",
        "token_count": 214
    },
    "00410ac2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00410ac2(int32_t arg_8h, int32_t s1, uint32_t *s2, int32_t arg_14h, int32_t *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint arg_18h_00;\n    int32_t iVar4;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = s2;\n    arg_8h_00 = arg_8h;\n    var_4h = *s2;\n    var_8h = *arg_18h;\n    *s2 = 0;\n    *arg_18h = 0;\n    while( true ) {\n        piVar2 = arg_18h;\n        arg_8h = var_8h;\n        iVar3 = *(arg_8h_00 + 0x28);\n        if (*(arg_8h_00 + 0x24) == iVar3) {\n            *(arg_8h_00 + 0x24) = 0;\n        }\n        s2 = *(arg_8h_00 + 0x24);\n        if (iVar3 - s2 < var_4h) {\n            arg_18h_00 = 0;\n        }\n        else {\n            iVar3 = s2 + var_4h;\n            arg_18h_00 = arg_1ch;\n        }\n        iVar3 = fcn.00410895(arg_8h_00, iVar3, arg_14h, &arg_8h, arg_18h_00, arg_20h);\n        *piVar2 = *piVar2 + arg_8h;\n        arg_14h = arg_14h + arg_8h;\n        var_8h = var_8h - arg_8h;\n        iVar4 = *(arg_8h_00 + 0x24) - s2;\n        sub.MSVCRT.dll_memcpy(s1, *(arg_8h_00 + 0x14) + s2, iVar4);\n        s1 = s1 + iVar4;\n        var_4h = var_4h - iVar4;\n        *puVar1 = *puVar1 + iVar4;\n        if (iVar3 != 0) break;\n        if ((iVar4 == 0) || (var_4h == 0)) {\n            return 0;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 587
    },
    "004111af": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004111af(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t in_ECX;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_8h;\n    var_4h = in_ECX;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    while( true ) {\n        piVar1 = uVar3 + 0x14;\n        if (*(uVar3 + 0x10) == *piVar1) {\n            *piVar1 = 0;\n            *(uVar3 + 0x10) = 0;\n            iVar5 = (**(**(uVar3 + 8) + 0xc))(*(uVar3 + 8), *(uVar3 + 0xc), *(uVar3 + 0xa4), piVar1);\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n        }\n        arg_8h = *piVar1 - *(uVar3 + 0x10);\n        if (((*(uVar3 + 0x89) != '\\0') &&\n            (uVar6 = *(uVar3 + 0x8c) - *(uVar3 + 0x9c), \n            *(uVar3 + 0x90) - *(uVar3 + 0xa0) == *(uVar3 + 0x8c) < *(uVar3 + 0x9c))) && (uVar6 < arg_10h)) {\n            arg_10h = uVar6;\n        }\n        var_4h = arg_10h;\n        fcn.00410ac2(uVar3 + 0x18, arg_ch, &var_4h, *(uVar3 + 0xc) + *(uVar3 + 0x10), &arg_8h, 0, &var_8h);\n        uVar4 = var_4h;\n        *(uVar3 + 0x10) = *(uVar3 + 0x10) + arg_8h;\n        puVar2 = uVar3 + 0x94;\n        uVar6 = *puVar2;\n        *puVar2 = *puVar2 + arg_8h;\n        *(uVar3 + 0x98) = *(uVar3 + 0x98) + CARRY4(uVar6, arg_8h);\n        puVar2 = uVar3 + 0x9c;\n        uVar6 = *puVar2;\n        *puVar2 = *puVar2 + var_4h;\n        *(uVar3 + 0xa0) = *(uVar3 + 0xa0) + CARRY4(uVar6, var_4h);\n        arg_10h = arg_10h - var_4h;\n        arg_ch = arg_ch + var_4h;\n        if (arg_14h != NULL) {\n            *arg_14h = *arg_14h + var_4h;\n        }\n        uVar7 = fcn.0040f3c0();\n        if (uVar7 != 0) break;\n        if (((uVar7 >> 0x20 == 0) && (uVar4 == 0)) || (arg_10h == 0)) {\n            return 0;\n        }\n    }\n    return uVar7;\n}\n",
        "token_count": 836
    },
    "0040125c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040125c(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t arglist;\n    \n    (*_sym.imp.KERNEL32.dll_SetLastError)(arg_10h);\n    if (arg_ch == 0x6a) {\n        arglist = arg_8h[9];\n        arg_ch_00 = 0x1e;\n    }\n    else {\n        if (arg_ch != 0x69) goto code_r0x0040128e;\n        arglist = arg_8h[9];\n        arg_ch_00 = 0x1f;\n    }\n    fcn.00407776(1, arg_ch_00, arglist);\ncode_r0x0040128e:\n    (**(*arg_8h + 0x1c))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 205
    },
    "004013e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004013e2(int32_t *param_1, uint *param_2)\n\n{\n    fcn.00401398(param_2[1]);\n    fcn.004010fb(*param_1 + param_1[1] * 2, *param_2);\n    param_1[1] = param_1[1] + param_2[1];\n    return param_1;\n}\n",
        "token_count": 98
    },
    "00401472": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00401472(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.MSVCRT.dll_memcmp(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "00401ba3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401ba3(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetParent)(param_1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(unaff_retaddr, param_1);\n    pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n    (*_sym.imp.USER32.dll_ScreenToClient)(iVar2, param_1);\n    (*pcVar1)(iVar2, param_1 + 8);\n    return 1;\n}\n",
        "token_count": 153
    },
    "00401df3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401df3(uint hWnd)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint lpClassName;\n    uint lpvObject;\n    uint cx;\n    uint cy;\n    int32_t *var_10h;\n    int32_t *lpPictDesc;\n    uint32_t dwBytes;\n    int32_t lParam;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 0x40);\n    if (((iVar1 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"STATIC\"),  iVar1 == 0)) &&\n       (uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0),  (uVar2 & 0xe) != 0)) {\n        uVar3 = hWnd;\n        uVar2 = (*_sym.imp.USER32.dll_GetMenu)(hWnd, &dwBytes);\n        iVar1 = fcn.00401bdf(\"IMAGES\", uVar2 & 0xffff, uVar3);\n        if ((iVar1 != 0) && (0xf < dwBytes)) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n            sub.MSVCRT.dll_memcpy(uVar3, iVar1, dwBytes);\n            (*_sym.imp.ole32.dll_CoInitialize)(0);\n            iVar1 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(uVar3, 0, &lpPictDesc);\n            if ((iVar1 == 0) && (lpPictDesc != NULL)) {\n                (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(lpPictDesc, 0, 0, 0x414c14, &var_10h);\n                (**(*lpPictDesc + 8))(lpPictDesc);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar3);\n                if (var_10h != NULL) {\n                    lParam = 0;\n                    (**(*var_10h + 0xc))(var_10h, &lParam);\n                    if (lParam != 0) {\n                        lParam = fcn.00401cc8(lParam);\n                        (*_sym.imp.GDI32.dll_GetObjectW)(lParam, 0x18, &lpvObject);\n                        (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, 0, 0, cx, cy, 6);\n                        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x172, 0, lParam);\n                    }\n                    (**(*var_10h + 8))(var_10h);\n                    return 1;\n                }\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar3);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 654
    },
    "00402346": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402346(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    (*_sym.imp.MSVCRT.dll_memmove)(*param_1 + param_2 * 2, *param_1 + param_3 * 2, (param_1[1] - param_3) * 2 + 2);\n    return;\n}\n",
        "token_count": 93
    },
    "0040243b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040243b(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004023dd(param_1, param_2, param_3);\n    if (iVar1 != 0) {\n        return *(iVar1 + 0xc);\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "0040254d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040254d(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00401117(param_2);\n    fcn.00401398(iVar1);\n    fcn.004010fb(*param_1 + param_1[1] * 2, unaff_retaddr);\n    param_1[1] = param_1[1] + iVar1;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "00402668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402668(uint param_1, int32_t param_2)\n\n{\n    fcn.004012f7(param_2);\n    fcn.004012f7(param_2 + 0xc);\n    return param_1;\n}\n",
        "token_count": 59
    },
    "004026e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004026e6(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (*param_2 != iVar1 && iVar1 <= *param_2) {\n        *param_2 = iVar1;\n    }\n    fcn.00401398(param_3);\n    fcn.00402346(*param_2 + param_3, *param_2);\n    return;\n}\n",
        "token_count": 121
    },
    "00402a69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a69(int16_t **arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    fcn.00401411();\n    piVar6 = *arg_8h;\n    iVar1 = *piVar6;\n    if (iVar1 != 0) {\n        piVar5 = piVar6 + 2;\n        do {\n            if (iVar1 == 0x7e) {\n                if ((piVar6[1] == 0x78) && (iVar2 = fcn.00401a57(piVar5),  -1 < iVar2)) {\n                    fcn.004025c6(iVar2);\n                    fcn.00401411();\n                    uVar3 = fcn.0040272e(&var_34h, &var_28h, 0);\n                    fcn.00401362(uVar3);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_34h);\n                    fcn.004013e2(&var_1ch);\n                    piVar6 = piVar6 + 4;\n                    piVar5 = piVar5 + 4;\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_1ch);\n                    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_28h);\n                }\n                else {\n                    if ((piVar6[1] != 0x58) ||\n                       ((var_4h = fcn.00401a57(piVar5),  var_4h < 0 || (uVar4 = fcn.00401a57(piVar6 + 4),  uVar4 < 0))))\n                    goto code_r0x00402b46;\n                    fcn.00401429((var_4h & 0xff) << 8 | uVar4);\n                    piVar6 = piVar6 + 6;\n                    piVar5 = piVar5 + 6;\n                }\n            }\n            else {\ncode_r0x00402b46:\n                fcn.00401429(iVar1);\n                piVar6 = piVar6 + 1;\n                piVar5 = piVar5 + 1;\n            }\n            iVar1 = *piVar6;\n        } while (iVar1 != 0);\n    }\n    fcn.00401362(&var_10h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_10h);\n    return;\n}\n",
        "token_count": 608
    },
    "00402cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * fcn.00402cd0(uint16_t *param_1, uint *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint uVar3;\n    \n    param_2[1] = 0;\n    **param_2 = 0;\n    uVar3 = 2;\n    for (; (*param_1 != 0 && (*param_1 < 0x21)); param_1 = param_1 + 1) {\n    }\n    if (*param_1 != 0x2c) goto code_r0x00402d0f;\n    while( true ) {\n        param_1 = param_1 + 1;\ncode_r0x00402d0f:\n        uVar1 = *param_1;\n        if (uVar1 == 0x7b) break;\n        if ((uVar1 == 0) || (uVar1 == 0x2c)) {\n            return param_1;\n        }\n    }\n    do {\n        puVar2 = param_1 + 1;\n        uVar1 = *puVar2;\n        if (uVar1 == 0) {\n            return puVar2;\n        }\n        if (uVar1 == 0x7b) {\n            if (param_1[2] == 0x7b) goto code_r0x00402d3d;\n        }\n        else if (uVar1 == 0x7d) {\n            if (param_1[2] != 0x7d) {\n                return param_1 + 2;\n            }\ncode_r0x00402d3d:\n            puVar2 = param_1 + 2;\n        }\n        fcn.00401429(uVar3, *puVar2);\n        param_1 = puVar2;\n    } while( true );\n}\n",
        "token_count": 410
    },
    "00402f96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402f96(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    iVar2 = in_ECX[1];\n    if (iVar2 < arg_8h) {\n        arg_8h = iVar2;\n    }\n    iVar1 = arg_ch[1];\n    if (iVar1 != 0) {\n        fcn.004026e6(&arg_8h, iVar1);\n        iVar2 = 0;\n        if (0 < iVar1) {\n            arg_8h = arg_8h * 2;\n            do {\n                *(arg_8h + *in_ECX) = *(*arg_ch + iVar2 * 2);\n                iVar2 = iVar2 + 1;\n                arg_8h = arg_8h + 2;\n            } while (iVar2 < iVar1);\n        }\n        in_ECX[1] = in_ECX[1] + iVar1;\n        iVar2 = in_ECX[1];\n    }\n    return iVar2;\n}\n",
        "token_count": 250
    },
    "00403ab1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ab1(uint hWnd)\n\n{\n    uint uVar1;\n    uint var_24h;\n    uint var_18h;\n    uint lpString;\n    \n    fcn.00402d7d(&lpString, hWnd);\n    fcn.00403b7f(&lpString);\n    fcn.004024fc(0x413558);\n    fcn.004024fc(0x413550);\n    fcn.00403805(&var_18h, &var_24h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_18h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_24h);\n    uVar1 = (*_sym.imp.USER32.dll_SetWindowTextW)(hWnd, lpString);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(lpString);\n    return uVar1;\n}\n",
        "token_count": 198
    },
    "00403b59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403b59(uint param_1)\n\n{\n    fcn.0040393b(param_1, 0x417794);\n    fcn.004039f6(param_1, 0x4177a0);\n    fcn.004027c7(param_1);\n    return;\n}\n",
        "token_count": 69
    },
    "00403b94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403b94(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_2);\n    iVar4 = unaff_retaddr;\n    iVar3 = (*pcVar1)(unaff_retaddr);\n    if ((iVar2 <= iVar3) && (iVar4 = (*_sym.imp.MSVCRT.dll__wcsnicmp)(unaff_retaddr, iVar4, iVar2),  iVar4 == 0)) {\n        return unaff_retaddr + iVar2 * 2;\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "00403bce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * fcn.00403bce(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    puVar1 = fcn.00403b94(param_1, param_2);\n    if (puVar1 != NULL) {\n        if (param_3 == 1) {\n            if (((0x2f < *puVar1) && (*puVar1 < 0x3a)) && (puVar1[1] == 0x3a)) {\ncode_r0x00403c5f:\n                return puVar1 + 2;\n            }\n        }\n        else {\n            if (param_3 == 2) {\n                uVar2 = *puVar1;\n                if (uVar2 < 0x30) {\n                    return NULL;\n                }\n                if (0x39 < uVar2) {\n                    return NULL;\n                }\n                do {\n                    if (0x39 < uVar2) break;\n                    puVar1 = puVar1 + 1;\n                    uVar2 = *puVar1;\n                } while (0x2f < uVar2);\n            }\n            else if (param_3 == 3) {\n                if (puVar1[1] != 0x3a) {\n                    return NULL;\n                }\n                uVar2 = *puVar1;\n                if (((uVar2 < 0x30) || (0x39 < uVar2)) && ((uVar2 < 0x61 || (0x7a < uVar2)))) {\n                    if (uVar2 < 0x41) {\n                        return NULL;\n                    }\n                    if (0x5a < uVar2) {\n                        return NULL;\n                    }\n                }\n                goto code_r0x00403c5f;\n            }\n            if (*puVar1 == 0x3a) {\n                return puVar1 + 1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 444
    },
    "00403d71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint16_t * fcn.00403d71(int16_t *param_1, uint param_2)\n\n{\n    uint16_t *puVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint unaff_retaddr;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar2 = *param_1;\n    piVar6 = param_1;\n    if (iVar2 == 0x2d) {\n        if (param_1[1] == 0x2d) {\n            piVar6 = param_1 + 1;\n        }\n        iVar2 = *piVar6;\n        if (iVar2 == 0x2d) goto code_r0x00403d9a;\n    }\n    if (iVar2 != 0x2f) {\n        return NULL;\n    }\ncode_r0x00403d9a:\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_2);\n    arg_10h = (*pcVar3)(param_1);\n    iVar5 = fcn.00401a85(piVar6 + 1, unaff_retaddr, arg_10h);\n    if (iVar5 == 0) {\n        puVar1 = piVar6 + iVar4 + 1;\n        if (*puVar1 < 0x21) {\n            return puVar1;\n        }\n        if (*puVar1 == 0x3a) {\n            return puVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 366
    },
    "00403e56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403e56(int32_t param_1, int32_t param_2, int32_t *param_3)\n\n{\n    if (*(param_1 + 8) < *param_3 + param_2) {\n        *param_3 = *(param_1 + 8) - param_2;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00404186": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404186(uint arg_8h)\n\n{\n    uint var_ch;\n    \n    fcn.004024fc(arg_8h);\n    fcn.00403b7f(&var_ch);\n    fcn.00402c86(var_ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 80
    },
    "004042ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042ec(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        var_4h = arg_ch;\n        do {\n            iVar1 = *(iVar2 + *(in_ECX + 0xc));\n            if (iVar1 != 0) {\n                fcn.00402425();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar1);\n            }\n            iVar2 = iVar2 + 4;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    fcn.0040e90a(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 220
    },
    "00404405": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.00404405(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint lpszPath;\n    uint ARG_0;\n    uint var_18h;\n    uint var_ch;\n    \n    fcn.00401f47();\n    *0x417764 = fcn.00401f9d(3);\n    *0x417760 = fcn.00401f9d(0x28);\n    *0x41775c = fcn.00401f9d(2);\n    *0x417758 = fcn.00401f9d(5);\n    *0x417754 = fcn.00401f9d(0x15);\n    *0x417750 = fcn.00401f9d(0x16);\n    *0x41774c = fcn.00401f9d(0x17);\n    iVar2 = 0;\n    *0x417744 = 0;\n    *0x417748 = 0;\n    do {\n        uVar3 = 0;\n        iVar1 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)(0, &lpszPath, iVar2, 0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x41440c, iVar2);\n            fcn.00401411();\n            fcn.00401411();\n            fcn.00401329(&ARG_0);\n            fcn.00401329(&lpszPath);\n            puVar4 = &var_18h;\n            fcn.00402f6c(puVar4);\n            do {\n                if (*(uVar3 + 0x41735c) == iVar2) {\n                    fcn.00401329(*(uVar3 + 0x417360));\n                    fcn.00401329(&lpszPath);\n                    puVar4 = &var_18h;\n                    fcn.00402f6c();\n                }\n                uVar3 = uVar3 + 8;\n            } while (uVar3 < 0x28);\n            fcn.00402425(puVar4);\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x40);\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    return;\n}\n",
        "token_count": 534
    },
    "0040453e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040453e(uint param_1, int32_t *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    param_2[1] = 0;\n    **param_2 = 0;\n    iVar2 = fcn.0040243b(param_1, L\"Directory\", 0);\n    if (iVar2 != 0) {\n        fcn.00401329(iVar2);\n        fcn.00403b7f(param_2);\n        iVar1 = *(*param_2 + -2 + param_2[1] * 2);\n        if ((iVar1 != 0x5c) && (iVar1 != 0x2f)) {\n            fcn.00401429(0x5c);\n        }\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0040484d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040484d(uint arg_8h, uint16_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    \n    fcn.004024fc(arg_8h);\n    uVar2 = 0x414438;\n    fcn.0040254d(0x414438);\n    for (; uVar1 = *arg_ch,  0x20 < *arg_ch; arg_ch = arg_ch + 1) {\n        fcn.00401429();\n        uVar2 = uVar1;\n    }\n    fcn.0040254d(0x414434, uVar2);\n    fcn.0040408b(var_ch, arg_10h);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 195
    },
    "00404e3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e3f(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint var_70h;\n    uint var_ch;\n    \n    fcn.00403e86(\",!@Install@!UTF-8!\");\n    fcn.00403e86(\",!@InstallEnd@!\");\n    fcn.00404343(&var_ch, 0, *(arg_ch + 4) + -1);\n    fcn.00403ec1(&var_ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    fcn.00404343(&var_ch, 0, *(arg_10h + 4) + -1);\n    fcn.00403ec1(&var_ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_70h, \":Language:%u!\", arg_8h);\n    fcn.00403ef6(&var_70h);\n    fcn.00403ef6(&var_70h);\n    return;\n}\n",
        "token_count": 249
    },
    "0040653f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040653f(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.MSVCRT.dll__beginthreadex)(0, 0, arg_ch, arg_10h, 0, &var_4h);\n    *arg_8h = uVar1;\n    fcn.00406501(uVar1);\n    return;\n}\n",
        "token_count": 110
    },
    "004065c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004065c9(uint param_1, uint param_2)\n\n{\n    fcn.00406568(param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 42
    },
    "00406706": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406706(int32_t param_1)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_1 + 4), &var_10h);\n    *0x4177d4 = (var_8h - var_10h) / 2 + var_10h;\n    *0x4177d8 = (var_4h - var_ch) / 2 + var_ch;\n    return;\n}\n",
        "token_count": 137
    },
    "004067ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004067ed(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint pvParam;\n    int32_t var_1f8h;\n    int32_t var_1f4h;\n    uint var_1f0h;\n    uint var_14h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    var_4h = 0;\n    pvParam = 500;\n    iVar1 = (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x29, 500, &pvParam, 0);\n    if (iVar1 != 0) {\n        var_1f8h = in_ECX[7] + -0x1a + var_1f8h;\n        if ((*0x41734c & 0x200) == 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x31);\n            var_1f8h = var_1f8h + iVar1;\n        }\n        iVar1 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(&var_1f0h);\n        if (iVar1 != 0) {\n            iVar2 = (**(*in_ECX + 8))(arg_8h, &var_14h, iVar1, 0x860);\n            if (iVar2 != 0) {\n                var_1f8h = var_1f8h + var_ch;\n                var_4h = 1;\n            }\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar1);\n        }\n        *arg_ch = var_1f8h;\n        arg_ch[1] = var_1f4h;\n    }\n    return var_4h;\n}\n",
        "token_count": 407
    },
    "00406db2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406db2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint var_358h;\n    uint var_1c0h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_164h;\n    int16_t var_144h;\n    uint var_142h;\n    uint var_4h;\n    \n    sub.MSVCRT.dll_memcpy(&var_164h, 0x417410, 0x160);\n    var_358h = 500;\n    iVar1 = (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x29, 0, &var_358h, 0);\n    if (iVar1 != 0) {\n        var_4h = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(var_4h, 0x5a);\n        var_144h = (*_sym.imp.KERNEL32.dll_MulDiv)(var_1c0h, 0x48, uVar2);\n        var_144h = -var_144h;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, var_4h);\n        var_142h._0_2_ = var_1b0h;\n        var_142h._2_1_ = var_1ach;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if (*(in_ECX + 0x38) != 0) {\n        puVar3 = fcn.00401bdf(5, *(in_ECX + 0x38), 0);\n        if (puVar3 != NULL) goto code_r0x00406e76;\n    }\n    puVar3 = &var_164h;\n    *(in_ECX + 0x38) = 0;\ncode_r0x00406e76:\n    (*_sym.imp.USER32.dll_DialogBoxIndirectParamW)(uVar2, puVar3, arg_8h, fcn.0040667a);\n    return;\n}\n",
        "token_count": 503
    },
    "00406e8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406e8e(int32_t param_1)\n\n{\n    int32_t arg_14h;\n    uint lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00406a47();\n    fcn.0040690f(0x4b3, &var_10h);\n    fcn.0040690f(0x4b6, &lpRect);\n    var_ch = var_ch + -0x12 + (var_1ch - var_14h);\n    var_10h = 0xc;\n    var_4h = (var_ch - var_1ch) + var_14h;\n    (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 4), &lpRect);\n    var_8h = (var_18h - *(param_1 + 0x44)) + -0xd;\n    fcn.00406a18(0x4b6, var_10h, var_ch, var_8h - var_10h, var_4h - var_ch, 0);\n    arg_14h = *(param_1 + 0x44);\n    fcn.00406a18(0x4b7, (var_18h - arg_14h) + -0xb, var_ch + -1, arg_14h, arg_14h, 0);\n    return;\n}\n",
        "token_count": 363
    },
    "0040748a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040748a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint pszPath;\n    uint var_24h;\n    uint var_14h;\n    int32_t *var_4h;\n    \n    sub.MSVCRT.dll_memset(&var_24h, 0, 0x20);\n    var_24h = *(param_1 + 4);\n    var_14h = 1;\n    iVar1 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&var_24h);\n    if (iVar1 != 0) {\n        pszPath._0_2_ = 0;\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(iVar1, &pszPath);\n        if (iVar2 != 0) {\n            fcn.00401329(&pszPath);\n            fcn.004072dd();\n        }\n        var_4h = NULL;\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetMalloc)(&var_4h);\n        if ((iVar2 == 0) && (var_4h != NULL)) {\n            (**(*var_4h + 0x14))(var_4h, iVar1);\n            (**(*var_4h + 8))(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "00407613": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407613(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    uint var_58h;\n    uint var_3ch;\n    \n    uVar1 = -((*0x41734c & 0x1000) != 0) & 3;\n    if ((*0x41734c & 0x800) == 0) {\n        if ((*0x41734c & 0x1000) == 0) {\n            arg_8h_00 = uVar1 + 8;\n        }\n        else {\n            arg_8h_00 = uVar1 + 0x10;\n        }\n    }\n    else {\n        arg_8h_00 = uVar1 + 4;\n    }\n    if ((*0x41734c & 0x40) == 0) {\n        fcn.00407154();\n    }\n    else {\n        fcn.00407186();\n    }\n    fcn.004073d1(arg_8h_00, arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 254
    },
    "00408783": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408783(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0040e811(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.004087c0();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00408858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00408858(void)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(unaff_ESI + 8);\n    if (uVar1 != *(unaff_EDI + 8)) {\n        return uVar1 & 0xffffff00;\n    }\n    var_4h = 0;\n    if (0 < uVar1) {\n        do {\n            piVar2 = fcn.00408711();\n            if (piVar2 == '\\0') goto code_r0x0040890e;\n            var_4h = var_4h + 1;\n        } while (var_4h < *(unaff_ESI + 8));\n    }\n    piVar2 = *(unaff_ESI + 0x1c);\n    if (piVar2 == *(unaff_EDI + 0x1c)) {\n        var_4h = 0;\n        if (0 < piVar2) {\n            do {\n                piVar2 = fcn.00408711();\n                if (piVar2 == '\\0') goto code_r0x0040890e;\n                var_4h = var_4h + 1;\n            } while (var_4h < *(unaff_ESI + 0x1c));\n        }\n        var_4h = 0;\n        if (0 < *(unaff_ESI + 0x58)) {\n            piVar2 = *(unaff_EDI + 0x5c);\n            iVar3 = *(unaff_ESI + 0x5c) - piVar2;\n            do {\n                if ((*(iVar3 + piVar2) != *piVar2) || (*(iVar3 + 4 + piVar2) != piVar2[1])) goto code_r0x0040890e;\n                var_4h = var_4h + 1;\n                piVar2 = piVar2 + 2;\n            } while (var_4h < *(unaff_ESI + 0x58));\n        }\n        piVar2 = *(unaff_ESI + 0x30);\n        if (piVar2 == *(unaff_EDI + 0x30)) {\n            return *(unaff_ESI + 0x44) & 0xffffff00 | *(unaff_ESI + 0x44) == *(unaff_EDI + 0x44);\n        }\n    }\ncode_r0x0040890e:\n    return piVar2 & 0xffffff00;\n}\n",
        "token_count": 595
    },
    "004089f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004089f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            if (*(iVar2 + *(in_ECX + 0xc)) != 0) {\n                fcn.004089cd(1);\n            }\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.0040e90a(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 198
    },
    "00408a55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00408a55(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x1c)) {\n        piVar2 = *(param_1 + 0x20);\n        do {\n            if (*piVar2 == param_2) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 2;\n        } while (iVar1 < *(param_1 + 0x1c));\n    }\n    return -1;\n}\n",
        "token_count": 155
    },
    "00408a79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00408a79(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x1c)) {\n        piVar2 = *(param_1 + 0x20) + 4;\n        do {\n            if (*piVar2 == param_2) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 2;\n        } while (iVar1 < *(param_1 + 0x1c));\n    }\n    return -1;\n}\n",
        "token_count": 159
    },
    "00408aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00408aa0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x30)) {\n        piVar2 = *(param_1 + 0x34);\n        do {\n            if (*piVar2 == param_2) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 < *(param_1 + 0x30));\n    }\n    return -1;\n}\n",
        "token_count": 153
    },
    "00408b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408b18(int32_t param_1)\n\n{\n    fcn.0040650f(param_1 + 8);\n    fcn.0040650f(param_1 + 4);\n    fcn.0040650f(param_1);\n    return;\n}\n",
        "token_count": 65
    },
    "00408b38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408b38(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    uint unaff_ESI;\n    \n    fcn.0040e959();\n    fcn.0040e959();\n    fcn.00408963();\n    fcn.00408963();\n    fcn.0040f1cb();\n    ppiVar2 = -(param_1 != 0) & param_1 + 0x14U;\n    fcn.0040e959(unaff_ESI);\n    fcn.0040e959();\n    fcn.0040e959();\n    fcn.0040e959();\n    piVar1 = ppiVar2[1];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    piVar1 = *ppiVar2;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00408b7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408b7c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.004086f0();\n    fcn.0040e8da();\n    iVar2 = 0;\n    if (0 < *(unaff_EDI + 0x1c)) {\n        do {\n            fcn.004087c0();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_EDI + 0x1c));\n    }\n    var_4h = 0;\n    var_8h = 0;\n    if (0 < *(unaff_EDI + 8)) {\n        do {\n            iVar2 = *(*(unaff_EDI + 0xc) + var_8h * 4);\n            iVar1 = *(iVar2 + 0x18);\n            iVar3 = iVar1;\n            fcn.004087c0(*(iVar2 + 0x14), iVar1);\n            fcn.004087c0();\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                iVar2 = fcn.00408a79(iVar3, var_4h);\n                if (iVar2 < 0) {\n                    fcn.00408761();\n                }\n                var_4h = var_4h + 1;\n            }\n            var_8h = var_8h + 1;\n        } while (var_8h < *(unaff_EDI + 8));\n    }\n    iVar2 = 0;\n    if (0 < *(unaff_EDI + 0x30)) {\n        do {\n            fcn.00408761();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_EDI + 0x30));\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "00408d46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00408d46(uint param_1, int32_t param_2)\n\n{\n    fcn.0040894c(param_2);\n    fcn.0040894c(param_2 + 0x14);\n    fcn.0040d3c8(param_2 + 0x28);\n    fcn.0040d3c8(param_2 + 0x3c);\n    return param_1;\n}\n",
        "token_count": 100
    },
    "00408d7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d7f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        var_4h = arg_ch;\n        do {\n            iVar1 = *(iVar2 + *(in_ECX + 0xc));\n            if (iVar1 != 0) {\n                fcn.00408b18();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar1);\n            }\n            iVar2 = iVar2 + 4;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    fcn.0040e90a(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 223
    },
    "00408dd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408dd6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        var_4h = arg_ch;\n        do {\n            iVar1 = *(iVar2 + *(in_ECX + 0xc));\n            if (iVar1 != 0) {\n                fcn.00408b38();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar1);\n            }\n            iVar2 = iVar2 + 4;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    fcn.0040e90a(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 222
    },
    "00408e83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00408e83(uint param_1, int32_t param_2)\n\n{\n    fcn.00408d46(param_2);\n    fcn.0040894c(param_2 + 0x50);\n    return param_1;\n}\n",
        "token_count": 61
    },
    "00409476": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409476(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0040e811(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.00409403();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00409551": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409551(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            if (*(iVar2 + *(in_ECX + 0xc)) != 0) {\n                fcn.00409457(1);\n            }\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.0040e90a(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 197
    },
    "00409ba7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409ba7(int32_t param_1, uint param_2)\n\n{\n    fcn.0040874d();\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    *(param_1 + 0x2e) = 0;\n    (**(**(param_1 + 0x1c) + 0x1c))(*(param_1 + 0x1c), param_2);\n    return;\n}\n",
        "token_count": 116
    },
    "00409dc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409dc2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = *(*(*(param_1 + 0x14) + 0x70) + (*(param_1 + 0x28) + *(param_1 + 0x24)) * 4);\n    if ((((*(iVar1 + 0x1d) == '\\0') && (*(iVar1 + 0x1e) != '\\0')) && (*(param_1 + 0x2d) != '\\0')) &&\n       (*(iVar1 + 0xc) != ~*(*(param_1 + 0xc) + 0x18))) {\n        uVar2 = 3;\n    }\n    else {\n        uVar2 = 0;\n    }\n    fcn.00409ba7(uVar2);\n    return;\n}\n",
        "token_count": 196
    },
    "00409dff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409dff(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    \n    do {\n        if ((*(*(param_1 + 0x18) + 8) <= *(param_1 + 0x28)) ||\n           (puVar1 = *(*(*(param_1 + 0x14) + 0x70) + (*(param_1 + 0x24) + *(param_1 + 0x28)) * 4), \n           (*puVar1 | puVar1[1]) != 0)) {\n            return 0;\n        }\n        iVar2 = fcn.00409cde();\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = fcn.00409dc2();\n    } while (iVar2 == 0);\n    return iVar2;\n}\n",
        "token_count": 200
    },
    "0040a1a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a1a2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(*(in_ECX + 0xc) + iVar2));\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.0040e90a(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 195
    },
    "0040a4a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a4a8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            if (*(iVar2 + *(in_ECX + 0xc)) != 0) {\n                fcn.0040a2c0(1);\n            }\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.0040e90a(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 203
    },
    "0040a4f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a4f7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            if (*(iVar2 + *(in_ECX + 0xc)) != 0) {\n                fcn.0040a31f(1);\n            }\n            iVar2 = iVar2 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.0040e90a(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 202
    },
    "0040a91d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a91d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar2 = arg_8h << 2;\n        var_4h = arg_ch;\n        do {\n            iVar1 = *(iVar2 + *(in_ECX + 0xc));\n            if (iVar1 != 0) {\n                fcn.0040a35b();\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(iVar1);\n            }\n            iVar2 = iVar2 + 4;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    fcn.0040e90a(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 224
    },
    "0040aca4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0040aca4(int32_t param_1)\n\n{\n    uchar uVar1;\n    uint32_t in_EAX;\n    uchar *puVar2;\n    \n    if (*(param_1 + 8) <= in_EAX) {\n        return 1;\n    }\n    puVar2 = *(param_1 + 0xc) + in_EAX;\n    uVar1 = *puVar2;\n    *puVar2 = 1;\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "0040ad6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ad6e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040e8da();\n    fcn.0040e811(*(param_1 + 8));\n    iVar1 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            fcn.004087c0();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0040adc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040adc3(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    if (param_2 != *(param_1 + 4)) {\n        if (param_2 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(param_2);\n            uVar2 = *(param_1 + 4);\n            if (uVar2 != 0) {\n                if (param_2 <= uVar2) {\n                    uVar2 = param_2;\n                }\n                (*_sym.imp.MSVCRT.dll_memmove)(uVar1, *(param_1 + 8), uVar2);\n            }\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(param_1 + 8));\n        *(param_1 + 8) = uVar1;\n        *(param_1 + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040ae12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ae12(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    iVar2 = arg_8h;\n    fcn.00403e56(arg_8h, &arg_ch);\n    if (0 < arg_ch) {\n        iVar3 = arg_8h << 2;\n        arg_8h = arg_ch;\n        do {\n            puVar1 = *(iVar3 + *(in_ECX + 0xc));\n            if (puVar1 != NULL) {\n                (***puVar1)(1);\n            }\n            iVar3 = iVar3 + 4;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.0040e90a(iVar2, arg_ch);\n    return;\n}\n",
        "token_count": 212
    },
    "0040aebe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040aebe(int32_t param_1, int32_t param_2)\n\n{\n    fcn.0040ac64();\n    if (*(param_2 + 4) != 0) {\n        fcn.0040adc3(*(param_2 + 4));\n        (*_sym.imp.MSVCRT.dll_memmove)(*(param_1 + 8), *(param_2 + 8), *(param_2 + 4));\n    }\n    return param_1;\n}\n",
        "token_count": 115
    },
    "0040b4b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b4b2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040e8da();\n    fcn.0040e811(*(param_1 + 0x44));\n    iVar1 = 0;\n    if (0 < *(param_1 + 0x44)) {\n        do {\n            fcn.00408761();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0x44));\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0040b623": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040b623(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 8);\n    iVar1 = 0;\n    if (0 < iVar3) {\n        piVar2 = *(param_1 + 0xc);\n        do {\n            iVar1 = iVar1 + *(*piVar2 + 0x18);\n            piVar2 = piVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "0040bb61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bb61(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0040e811(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.0040bb37();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0040ce37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce37(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0040e811(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.00408761();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0040d26b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040d26b(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0x7c)) {\n        piVar1 = *(param_1 + 0x80);\n        do {\n            if (*(*piVar1 + 0x74) == param_2) {\n                return param_2;\n            }\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 < *(param_1 + 0x7c));\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "0040d3df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d3df(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h + 8);\n    fcn.0040e811(*(in_ECX + 8) + iVar1);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.0040cdb8();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040d560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040d560(int32_t param_1, int32_t param_2)\n\n{\n    fcn.0040cd36(param_2);\n    fcn.0040cd36(param_2 + 4);\n    *(param_1 + 8) = *(param_2 + 8);\n    *(param_1 + 0xc) = *(param_2 + 0xc);\n    fcn.0040b6c4(param_2 + 0x10);\n    fcn.0040b6c4(param_2 + 0x24);\n    fcn.0040b6ee(param_2 + 0x38);\n    fcn.0040b6ee(param_2 + 0x4c);\n    return param_1;\n}\n",
        "token_count": 176
    },
    "0040d5e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040d5e7(uint *param_1, int32_t param_2)\n\n{\n    fcn.0040d560(-(param_2 != 0) & param_2 + 0x14U);\n    fcn.0040ce10(param_2);\n    *param_1 = 0x414a0c;\n    param_1[0x1d] = *(param_2 + 0x74);\n    fcn.0040d5bd(param_2 + 0x78);\n    fcn.0040d5bd(param_2 + 0x8c);\n    fcn.0040b6ee(param_2 + 0xa0);\n    fcn.0040b6ee(param_2 + 0xb4);\n    return param_1;\n}\n",
        "token_count": 183
    },
    "0040d68d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d68d(int32_t param_1)\n\n{\n    uint *puVar1;\n    uchar auStack204 [200];\n    \n    puVar1 = *(param_1 + 0x18) + *(param_1 + 0x7c) * 8;\n    fcn.0040d418(*puVar1, puVar1[1]);\n    fcn.0040d660(auStack204);\n    fcn.00408b38();\n    return;\n}\n",
        "token_count": 112
    },
    "0040d6cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d6cb(uint param_1)\n\n{\n    fcn.0040d68d();\n    fcn.00408726(param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "0040d6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d6f0(uint param_1)\n\n{\n    fcn.0040d68d();\n    fcn.00408726(param_1);\n    return;\n}\n",
        "token_count": 42
    },
    "0040d76f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040d76f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040d715(0x40000);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040d715(0x200000);\n        if (iVar1 != 0) {\n            fcn.0040d72e(0, param_1, param_1 + 4, param_1 + 0xc, param_1 + 8);\n            fcn.0040d72e(1, param_1 + 0x10, param_1 + 0x14, param_1 + 0x18, param_1 + 0x1c);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "0040d7cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040d7cc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    \n    iVar1 = 0;\n    piVar2 = 0x4175b4;\n    uVar3 = 0;\n    while (((piVar2[-2] != *(param_1 + 4) || (piVar2[-1] != *(param_1 + 8))) || (*piVar2 != *(param_1 + 0xc)))) {\n        uVar3 = uVar3 + 0xc;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 3;\n        if (0x23 < uVar3) {\n            return -1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 186
    },
    "0040d94b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d94b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    uVar1 = fcn.0040d89f(arg_8h, arg_ch, &var_4h, arg_10h, arg_14h, arg_18h, 1);\n    if (var_4h != NULL) {\n        (**(*var_4h + 8))(var_4h);\n    }\n    return uVar1;\n}\n",
        "token_count": 147
    },
    "0040dc1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040dc1b(uint param_1)\n\n{\n    fcn.0040daac(param_1, 0);\n    return;\n}\n",
        "token_count": 35
    },
    "0040dc23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dc23(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.0040d9f0(0, 0, 1, &var_8h);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.0040dbe0(arg_ch, arg_10h);\n        if ((cVar2 == '\\0') || (cVar2 = fcn.0040da3b(var_8h, var_4h, &var_10h),  cVar2 == '\\0')) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        return (-uVar1 & 0x7fffbffb) + 0x80004005;\n    }\n    return -0x7fffbffb;\n}\n",
        "token_count": 234
    },
    "0040dcb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040dcb2(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x4143d0;\n    param_1[1] = 0x4143c0;\n    iVar1 = param_1[3];\n    if (iVar1 != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        param_1[3] = -1;\n    }\n    return 1;\n}\n",
        "token_count": 131
    },
    "0040dcc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dcc7(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = fcn.0040db09(arg_ch, arg_10h, &arg_10h);\n    arg_ch = arg_ch & 0xffffff00 | uVar1;\n    if (arg_14h != NULL) {\n        *arg_14h = arg_10h;\n    }\n    fcn.0040dc8b(arg_ch);\n    return;\n}\n",
        "token_count": 129
    },
    "0040dd5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dd5f(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    \n    uVar3 = fcn.0040db97(arg_ch, arg_10h, &arg_10h);\n    arg_ch = arg_ch & 0xffffff00 | uVar3;\n    puVar1 = arg_8h + 0x10;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + arg_10h;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + CARRY4(uVar2, arg_10h);\n    if (arg_14h != NULL) {\n        *arg_14h = arg_10h;\n    }\n    fcn.0040dc8b(arg_ch);\n    return;\n}\n",
        "token_count": 231
    },
    "0040e5cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040e5cb(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 4))(param_2);\n    }\n    piVar1 = *(param_1 + 0xc);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    *(param_1 + 0xc) = param_2;\n    return param_2;\n}\n",
        "token_count": 130
    },
    "0040e63c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0040e63c(uint *param_1)\n\n{\n    uint32_t *puVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    \n    cVar4 = fcn.0040e5d3();\n    if (cVar4 == '\\0') {\n        puVar1 = param_1 + 4;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + 1;\n        param_1[5] = param_1[5] + (0xfffffffe < uVar3);\n        return 0xff;\n    }\n    uVar2 = **param_1;\n    *param_1 = *param_1 + 1;\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "0040e6d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e6d8(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    iVar2 = fcn.0040e6bb(*(arg_8h + 0x10) - *(arg_8h + 0x18), \n                         (*(arg_8h + 0x14) - *(arg_8h + 0x1c)) - (*(arg_8h + 0x10) < *(arg_8h + 0x18)), arg_10h, 0);\n    uVar3 = 0;\n    uVar4 = 0;\n    if (iVar2 != 0) {\n        uVar3 = (**(**(arg_8h + 8) + 0xc))(*(arg_8h + 8), arg_ch, iVar2, &var_4h);\n        puVar1 = arg_8h + 0x18;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 + var_4h;\n        *(arg_8h + 0x1c) = *(arg_8h + 0x1c) + CARRY4(uVar4, var_4h);\n        uVar4 = var_4h;\n        if (var_4h == 0) {\n            *(arg_8h + 0x20) = 1;\n        }\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = uVar4;\n    }\n    return uVar3;\n}\n",
        "token_count": 404
    },
    "0040e785": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e785(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    fcn.0040e73a(*(arg_8h + 0x10), *(arg_8h + 0x14), arg_ch, arg_10h, &var_4h);\n    puVar1 = arg_8h + 0x10;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + var_4h;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + CARRY4(uVar2, var_4h);\n    if (arg_14h != NULL) {\n        *arg_14h = var_4h;\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0040e811": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e811(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t unaff_EDI;\n    \n    if (arg_8h != *(in_ECX + 4)) {\n        uVar1 = unaff_EDI;\n        if (arg_8h < 0x80000000) goto code_r0x0040e841;\n        do {\n            do {\n                sub.MSVCRT.dll__CxxThrowException();\n                uVar1 = unaff_EDI;\ncode_r0x0040e841:\n                unaff_EDI = *(in_ECX + 0x10);\n                uVar2 = unaff_EDI * arg_8h;\n            } while (uVar2 / unaff_EDI != arg_8h);\n            unaff_EDI = 0;\n            if (uVar2 == 0) goto code_r0x0040e895;\n            unaff_EDI = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(uVar2, uVar1);\n        } while (unaff_EDI == 0);\n        uVar1 = *(in_ECX + 8);\n        if (arg_8h <= *(in_ECX + 8)) {\n            uVar1 = arg_8h;\n        }\n        sub.MSVCRT.dll_memcpy(unaff_EDI, *(in_ECX + 0xc), *(in_ECX + 0x10) * uVar1);\ncode_r0x0040e895:\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*(in_ECX + 0xc));\n        *(in_ECX + 0xc) = unaff_EDI;\n        *(in_ECX + 4) = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "0040e8ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e8ab(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x10);\n    (*_sym.imp.MSVCRT.dll_memmove)\n              (iVar1 * param_2 + *(param_1 + 0xc), iVar1 * param_3 + *(param_1 + 0xc), \n               (*(param_1 + 8) - param_3) * iVar1);\n    return;\n}\n",
        "token_count": 127
    },
    "0040e9ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040e9ef(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 4))(param_2);\n    }\n    piVar1 = *(param_1 + 0x14);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    *(param_1 + 0x14) = param_2;\n    return param_2;\n}\n",
        "token_count": 132
    },
    "0040ecae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040ecae(ushort *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ec65();\n    if (-1 < iVar1) {\n        sub.MSVCRT.dll_memcpy(param_2, param_1, 0x10);\n        *param_1 = 0;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 101
    },
    "0040edc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040edc8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004065b6(param_1, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004065b6(param_1 + 4, 0);\n        if (iVar1 == 0) {\n            fcn.004065b6(param_1 + 8, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0040ee18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ee18(int32_t param_1)\n\n{\n    fcn.0040658e(param_1 + 8);\n    return;\n}\n",
        "token_count": 38
    },
    "0040ee82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ee82(int32_t param_1)\n\n{\n    fcn.0040658e(param_1 + 4);\n    return;\n}\n",
        "token_count": 38
    },
    "0040f06b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f06b(int32_t *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    puVar1 = arg_10h;\n    uVar4 = *arg_10h;\n    *arg_10h = 0;\n    while( true ) {\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar2 = 0x80000000;\n        if (uVar4 < 0x80000000) {\n            uVar2 = uVar4;\n        }\n        iVar3 = (**(*arg_8h + 0xc))(arg_8h, arg_ch, uVar2, &arg_10h);\n        *puVar1 = *puVar1 + arg_10h;\n        arg_ch = arg_ch + arg_10h;\n        uVar4 = uVar4 - arg_10h;\n        if (iVar3 != 0) break;\n        if (arg_10h == NULL) {\n            return 0;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 277
    },
    "0040f0b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f0b6(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = arg_10h;\n    uVar2 = fcn.0040f06b(arg_8h, arg_ch, &arg_10h);\n    if (uVar2 == 0) {\n        uVar2 = iVar1 != arg_10h;\n    }\n    return uVar2;\n}\n",
        "token_count": 119
    },
    "0040f0df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f0df(int32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg_10h;\n    if (arg_10h != 0) {\n        do {\n            uVar1 = uVar3;\n            if (0x7fffffff < uVar3) {\n                uVar1 = 0x80000000;\n            }\n            iVar2 = (**(*arg_8h + 0xc))(arg_8h, arg_ch, uVar1, &arg_10h);\n            arg_ch = arg_ch + arg_10h;\n            uVar3 = uVar3 - arg_10h;\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_10h == 0) {\n                return -0x7fffbffb;\n            }\n        } while (uVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "0040f1bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f1bc(int32_t param_1)\n\n{\n    *(param_1 + 0x10) = 0;\n    fcn.0040658e(param_1 + 4);\n    return;\n}\n",
        "token_count": 54
    },
    "00410c58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410c58(uint *arg_8h, uint arg_ch, uint arg_10h, code **arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00410bb6(&var_10h, arg_ch, arg_10h);\n    if ((iVar1 == 0) && (iVar1 = fcn.00410c16(),  iVar1 == 0)) {\n        if ((arg_8h[5] == 0) || (var_4h != arg_8h[10])) {\n            fcn.00410b8c();\n            iVar1 = (**arg_14h)(arg_14h, var_4h);\n            arg_8h[5] = iVar1;\n            if (iVar1 == 0) {\n                fcn.00410b74(arg_8h, arg_14h);\n                return 2;\n            }\n        }\n        arg_8h[10] = var_4h;\n        *arg_8h = var_10h;\n        arg_8h[1] = uStack16;\n        arg_8h[2] = uStack12;\n        arg_8h[3] = var_4h;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 318
    },
    "00410cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410cd0(uint *param_1)\n\n{\n    int32_t *piVar1;\n    \n    *param_1 = 0x414b6c;\n    param_1[1] = 0x414b5c;\n    param_1[2] = 0x414b48;\n    param_1[3] = 0x414b34;\n    param_1[4] = 0x414b24;\n    param_1[5] = 0x414b14;\n    fcn.00410b9a(param_1 + 0xb, 0x417680);\n    sub.MSVCRT.dll_free(param_1[8]);\n    piVar1 = param_1[7];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00411606": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00411606(uint8_t param_1, char param_2)\n\n{\n    if (param_2 == -0x18) {\n        return param_1;\n    }\n    return (param_2 != -0x17) + 0x100;\n}\n",
        "token_count": 63
    },
    "00406532": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00406532(uint param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1, 0xffffffff);\n    return;\n}\n",
        "token_count": 41
    },
    "0040ee23": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ee23(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpHandles;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        in_ECX[4] = arg_8h;\n        in_ECX[3] = arg_ch;\n        fcn.004065a2();\n        fcn.0040658e(in_ECX + 1);\n        lpHandles = *in_ECX;\n        var_4h = in_ECX[2];\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &lpHandles, 0, 0xffffffff);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    return 0;\n}\n",
        "token_count": 218
    },
    "0040e7c1": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.0040e7c1(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    \n    while( true ) {\n        uVar1 = *param_1;\n        uVar2 = *param_2;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n        if (uVar1 < uVar2) {\n            return 0xffffffff;\n        }\n        if (uVar2 < uVar1) break;\n        if (uVar1 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 154
    },
    "004024c4": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid fcn.004024c4(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040245a(param_1);\n    if (iVar1 == 0) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x1000, 4);\n    return;\n}\n",
        "token_count": 85
    },
    "0040677a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040677a(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), 0x4b3);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar3, 0xf4, 0, 1);\n    uVar5 = 0x4b4;\n    uVar3 = (*pcVar1)(*(param_1 + 4), 0x4b4);\n    uVar4 = 0xf4;\n    (*pcVar2)(uVar3, 0xf4, 0, 1);\n    (*pcVar2)(*(param_1 + 4), 0x401, uVar5, 0);\n    uVar3 = (*pcVar1)(*(param_1 + 4), uVar4);\n    (*pcVar2)(uVar3, 0xf4, 1, 1);\n    uVar3 = (*pcVar1)(*(param_1 + 4), uVar4);\n    (*_sym.imp.USER32.dll_SetFocus)(uVar3);\n    return;\n}\n",
        "token_count": 316
    },
    "00407d06": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inspect load icon resource"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00407d06(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    \n    pcVar2 = _sym.imp.USER32.dll_LoadIconW;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    *0x417778 = 0;\n    if ((*0x41734c & 0x200) == 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0x65);\n        (*pcVar2)(uVar4);\n        pcVar3 = _sym.imp.USER32.dll_GetSystemMetrics;\n        uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x32, 0);\n        uVar4 = (*pcVar3)(0x31, uVar4);\n        uVar9 = 0;\n        uVar5 = (*pcVar1)(0, 0x65, 1, uVar4);\n        (*_sym.imp.USER32.dll_LoadImageW)(uVar5);\n        (*_sym.imp.USER32.dll_SendMessageW)(param_1[1], 0x80, 1, uVar4);\n        (*_sym.imp.USER32.dll_SendMessageW)(param_1[1], 0x80, 0, uVar9);\n    }\n    fcn.00407134(0x4b2, param_1[4]);\n    fcn.004078e9(param_1[3]);\n    uVar6 = param_1[2] & 3;\n    if (uVar6 == 0) {\n        uVar4 = fcn.00401f9d(0x1b);\n        fcn.0040725a(0x4b3, uVar4);\n        uVar4 = 0x1c;\ncode_r0x00407e45:\n        uVar4 = fcn.00401f9d(uVar4);\n        fcn.0040725a(0x4b4, uVar4);\n    }\n    else if (uVar6 == 1) {\n        uVar4 = fcn.00401f9d(0x19);\n        fcn.0040725a(0x4b3, uVar4);\n        fcn.0040692c(0x4b4, 0);\n    }\n    else if (uVar6 == 2) {\n        uVar4 = fcn.00401f9d(0x1a);\n        fcn.0040725a(0x4b4, uVar4);\n        fcn.0040692c(0x4b3, 0);\n        fcn.0040677a(0x4b4);\n    }\n    else if (uVar6 == 3) {\n        uVar4 = fcn.00401f9d(0x19);\n        fcn.0040725a(0x4b3, uVar4);\n        uVar4 = 0x1a;\n        goto code_r0x00407e45;\n    }\n    pcVar3 = _sym.imp.USER32.dll_GetWindow;\n    if (param_1[0xe] != 0) {\n        uVar4 = 5;\n        iVar7 = param_1[1];\n        while (iVar7 = (*pcVar3)(iVar7, uVar4),  iVar7 != 0) {\n            fcn.00403ab1(iVar7);\n            uVar4 = 2;\n        }\n        do {\n            uVar4 = 5;\n            iVar7 = param_1[1];\n            while( true ) {\n                iVar7 = (*pcVar3)(iVar7, uVar4);\n                if (iVar7 == 0) {\n                    uVar4 = 5;\n                    iVar7 = param_1[1];\n                    while (iVar7 = (*pcVar3)(iVar7, uVar4),  iVar7 != 0) {\n                        fcn.00401df3(iVar7);\n                        uVar4 = 2;\n                    }\n                    if ((*0x41734c & 8) == 0) {\n                        fcn.00406d5d();\n                    }\n                    goto code_r0x00407f65;\n                }\n                iVar8 = fcn.00402dc0(iVar7);\n                if (iVar8 != 0) break;\n                uVar4 = 2;\n            }\n        } while( true );\n    }\n    uVar6 = param_1[2] & 0x1c;\n    if (uVar6 == 4) {\n        uVar5 = 0x65;\n        uVar4 = (*pcVar1)(0, 0x65);\ncode_r0x00407f0d:\n        iVar7 = (*pcVar2)(uVar4, uVar5);\n        if (iVar7 != 0) {\n            param_1[0xc] = 1;\n            uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(param_1[1], 0x4b1, 0x172, 1, iVar7);\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar4);\n            goto code_r0x00407f47;\n        }\n    }\n    else {\n        if (uVar6 == 8) {\n            uVar5 = 0x7f02;\ncode_r0x00407eef:\n            uVar4 = 0;\n            goto code_r0x00407f0d;\n        }\n        if (uVar6 == 0xc) {\n            uVar5 = 0x7f01;\n            goto code_r0x00407eef;\n        }\n        if (uVar6 == 0x10) {\n            uVar5 = 0x7f04;\n            goto code_r0x00407eef;\n        }\n        if (uVar6 == 0x14) {\n            uVar5 = 0x7f03;\n            goto code_r0x00407eef;\n        }\n    }\n    param_1[0xc] = 0;\n    fcn.0040692c(0x4b1, 0);\ncode_r0x00407f47:\n    if ((*0x41734c & 8) == 0) {\n        fcn.00406d5d();\n    }\n    (**(*param_1 + 0x24))();\n    (**(*param_1 + 0x20))();\ncode_r0x00407f65:\n    fcn.00406896();\n    return 0;\n}\n",
        "token_count": 1491
    },
    "00408c41": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408c41(uint *param_1)\n\n{\n    *param_1 = 0x4149e8;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 8;\n    param_1[9] = 8;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[5] = 0x4149e8;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[0xe] = 4;\n    param_1[10] = 0x4149e8;\n    param_1[0x13] = 4;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    param_1[0xf] = 0x4149e8;\n    return;\n}\n",
        "token_count": 273
    },
    "00409fb4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00409fb4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x14) = arg_8h;\n    *(in_ECX + 0x20) = arg_ch;\n    *(in_ECX + 0x24) = arg_10h;\n    *(in_ECX + 0x18) = arg_14h;\n    fcn.00408726(arg_18h);\n    *(in_ECX + 0x28) = 0;\n    *(in_ECX + 0x2c) = arg_1ch;\n    *(in_ECX + 0x2d) = arg_20h;\n    *(in_ECX + 0x2e) = 0;\n    fcn.00409dff();\n    return;\n}\n",
        "token_count": 218
    },
    "0040a37e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a37e(uint *param_1)\n\n{\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 8;\n    *param_1 = 0x4149e8;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 1;\n    param_1[5] = 0x4149e8;\n    return;\n}\n",
        "token_count": 141
    },
    "0040a546": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040a546(uint *param_1)\n\n{\n    param_1[4] = 8;\n    *param_1 = 0x4149e8;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 1;\n    param_1[5] = 0x4149e8;\n    param_1[10] = 0x4149e8;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[0xe] = 4;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    param_1[0x13] = 4;\n    param_1[0xf] = 0x414990;\n    param_1[0x14] = 0x4149e8;\n    param_1[0x15] = 0;\n    param_1[0x16] = 0;\n    param_1[0x17] = 0;\n    param_1[0x18] = 4;\n    param_1[0x1a] = 0;\n    param_1[0x1b] = 0;\n    param_1[0x1c] = 0;\n    param_1[0x1d] = 4;\n    param_1[0x19] = 0x414998;\n    fcn.0040a37e();\n    fcn.0040a37e();\n    fcn.0040a37e();\n    fcn.0040a37e();\n    param_1[0x47] = 0;\n    param_1[0x48] = 0;\n    param_1[0x49] = 0;\n    param_1[0x4a] = 1;\n    param_1[0x46] = 0x4149e8;\n    return param_1;\n}\n",
        "token_count": 528
    },
    "0040b5c8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b5c8(uint *param_1)\n\n{\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    *param_1 = 0x4149a8;\n    param_1[4] = 4;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[5] = 0x4149e8;\n    param_1[9] = 8;\n    param_1[0xe] = 4;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[10] = 0x4149e8;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0;\n    param_1[0x13] = 8;\n    param_1[0xf] = 0x4149e8;\n    *(param_1 + 0x15) = 0;\n    return;\n}\n",
        "token_count": 290
    },
    "0040ba70": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040ba70(uint *param_1, uint *param_2)\n\n{\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    fcn.0040b6a4(param_2 + 2);\n    param_1[5] = param_2[5];\n    param_1[6] = param_2[6];\n    return param_1;\n}\n",
        "token_count": 103
    },
    "0040de46": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040de46(uint *param_1)\n\n{\n    int32_t *piVar1;\n    \n    *param_1 = 0x414a8c;\n    param_1[1] = 0x414a78;\n    param_1[2] = 0x414a68;\n    param_1[3] = 0x414a54;\n    param_1[4] = 0x414a44;\n    param_1[5] = 0x414a34;\n    param_1[6] = 0x414a24;\n    fcn.00401b1f(param_1[8]);\n    piVar1 = param_1[0x16];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    piVar1 = param_1[0x15];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    piVar1 = param_1[0x14];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    piVar1 = param_1[10];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    piVar1 = param_1[9];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0040e21d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e21d(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = arg_8h;\n    if (*(arg_8h + 0x18) != 0) {\n        uVar1 = (**(**(arg_8h + 0x44) + 0x10))(*(arg_8h + 0x44), *(arg_8h + 0xc), *(arg_8h + 0x18));\n        if (*(iVar4 + 0x18) < uVar1) {\n            do {\n                *(*(iVar4 + 0xc) + *(iVar4 + 0x18)) = 0;\n                *(iVar4 + 0x18) = *(iVar4 + 0x18) + 1;\n            } while (*(iVar4 + 0x18) < uVar1);\n            uVar2 = (**(**(iVar4 + 0x44) + 0x10))(*(iVar4 + 0x44), *(iVar4 + 0xc), uVar1);\n            if (uVar2 != uVar1) {\n                return -0x7fffbffb;\n            }\n        }\n        iVar3 = fcn.0040dde6(*(iVar4 + 0x14), *(iVar4 + 0x18));\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    arg_8h = NULL;\n    (****(iVar4 + 0x14))(*(iVar4 + 0x14), 0x414838, &arg_8h);\n    if (arg_8h == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = (**(*arg_8h + 0xc))(arg_8h);\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 475
    },
    "0040e456": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040e456(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *var_4h;\n    \n    param_1[1] = 0x414a10;\n    param_1[2] = 0x414950;\n    param_1[3] = 0x414a10;\n    param_1[4] = 0x414950;\n    param_1[5] = 0x414950;\n    param_1[6] = 0x414950;\n    param_1[7] = 0;\n    *param_1 = 0x414a8c;\n    param_1[1] = 0x414a78;\n    param_1[2] = 0x414a68;\n    param_1[3] = 0x414a54;\n    param_1[4] = 0x414a44;\n    param_1[5] = 0x414a34;\n    param_1[6] = 0x414a24;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[0x14] = 0;\n    param_1[0x15] = 0;\n    param_1[0x16] = 0;\n    var_4h = param_1;\n    iVar1 = fcn.004024c4(0x20000);\n    param_1[8] = iVar1;\n    if (iVar1 == 0) {\n        var_4h = 0x1;\n        sub.MSVCRT.dll__CxxThrowException(&var_4h, 0x414cfc);\n    }\n    return param_1;\n}\n",
        "token_count": 390
    },
    "00407fa5": {
        "rules": [
            "get file system object information",
            "get common file path"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00407fa5(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_4d0h;\n    uint var_21ch;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    fcn.0040690f(0x4b6, &var_10h);\n    *(param_1 + 0x44) = (var_4h - var_ch) + 2;\n    fcn.0040692c(0x4b6, 1);\n    fcn.0040692c(0x4b7, 1);\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&var_21ch, 0x104);\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoW)(&var_21ch, 0, &var_4d0h, 0x2b4, 0x103);\n    *(param_1 + 0x3c) = var_4d0h;\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), 0x4b7);\n    uVar1 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xfffffffc, fcn.00406f37);\n    *(param_1 + 0x40) = uVar1;\n    uVar1 = fcn.00407d06();\n    fcn.004072dd();\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "0040d418": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040d418(uint *param_1, uint param_2, uint param_3)\n\n{\n    fcn.0040cc96(param_2, param_3);\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    *param_1 = 0x414a0c;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x1e] = 0x4148f4;\n    param_1[0x22] = 4;\n    param_1[0x27] = 4;\n    param_1[0x24] = 0;\n    param_1[0x25] = 0;\n    param_1[0x26] = 0;\n    param_1[0x23] = 0x4148f4;\n    param_1[0x2c] = 4;\n    param_1[0x29] = 0;\n    param_1[0x2a] = 0;\n    param_1[0x2b] = 0;\n    param_1[0x28] = 0x4149e8;\n    param_1[0x2e] = 0;\n    param_1[0x2f] = 0;\n    param_1[0x30] = 0;\n    param_1[0x31] = 4;\n    param_1[0x2d] = 0x4149e8;\n    fcn.0040e811(param_1[7]);\n    fcn.0040e811(param_1[7]);\n    fcn.0040e811(param_1[8]);\n    fcn.0040e811(param_1[8]);\n    return param_1;\n}\n",
        "token_count": 444
    },
    "0040eb24": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040eb24(int32_t param_1, uint param_2)\n\n{\n    uchar unaff_SI;\n    \n    fcn.0040874d();\n    fcn.00408726(param_2);\n    (****(param_1 + 8))(*(param_1 + 8), 0x414848, param_1 + 0xc);\n    *(param_1 + 0x10) = unaff_SI;\n    return;\n}\n",
        "token_count": 105
    },
    "004010fb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.004010fb(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = param_1;\n    do {\n        iVar1 = *param_2;\n        *param_1 = iVar1;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n    } while (iVar1 != 0);\n    return piVar2;\n}\n",
        "token_count": 116
    },
    "0040112b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040112b(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_2 + 1;\n    if (uVar3 != param_1[2]) {\n        iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n        iVar2 = 0;\n        if (0 < param_1[2]) {\n            if (0 < param_1[1]) {\n                do {\n                    *(iVar1 + iVar2 * 2) = *(*param_1 + iVar2 * 2);\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < param_1[1]);\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*param_1);\n        }\n        *param_1 = iVar1;\n        *(iVar1 + param_1[1] * 2) = 0;\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "0040224f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040224f(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_8h[1];\n    if (iVar2 != 0) {\n        if (arg_ch < in_ECX[1]) {\n            do {\n                iVar1 = 0;\n                if (0 < iVar2) {\n                    iVar2 = arg_ch * 2;\n                    do {\n                        if ((in_ECX[1] <= iVar1 + arg_ch) || (*(iVar2 + *in_ECX) != *(*arg_8h + iVar1 * 2))) break;\n                        iVar1 = iVar1 + 1;\n                        iVar2 = iVar2 + 2;\n                    } while (iVar1 < arg_8h[1]);\n                }\n                iVar2 = arg_8h[1];\n                if (iVar1 == iVar2) {\n                    return arg_ch;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_ch < in_ECX[1]);\n        }\n        arg_ch = -1;\n    }\n    return arg_ch;\n}\n",
        "token_count": 264
    },
    "004022b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004022b0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    param_2 = param_2 + 1;\n    if (param_2 != param_1[2]) {\n        iVar1 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(param_2);\n        iVar2 = 0;\n        if (0 < param_1[2]) {\n            if (0 < param_1[1]) {\n                do {\n                    *(iVar2 + iVar1) = *(iVar2 + *param_1);\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < param_1[1]);\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(*param_1);\n        }\n        *param_1 = iVar1;\n        *(iVar1 + param_1[1]) = 0;\n        param_1[2] = param_2;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0040236e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.0040236e(char *param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *param_2;\n        *param_1 = cVar1;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 != '\\0');\n    return pcVar2;\n}\n",
        "token_count": 111
    },
    "004023dd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004023dd(int32_t param_1, uint param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_3 == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *param_3;\n    }\n    while( true ) {\n        if (*(param_1 + 8) <= iVar2) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(**(*(param_1 + 0xc) + iVar2 * 4), param_2);\n        if (iVar1 == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    if (param_3 != NULL) {\n        *param_3 = iVar2;\n    }\n    return *(*(param_1 + 0xc) + iVar2 * 4);\n}\n",
        "token_count": 206
    },
    "00402583": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402583(int16_t **param_1, int16_t param_2)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[1] == NULL) {\ncode_r0x004025a8:\n        iVar3 = -1;\n    }\n    else {\n        piVar1 = *param_1;\n        for (piVar2 = piVar1 + param_1[1] + -1; *piVar2 != param_2; piVar2 = piVar2 + -1) {\n            if (piVar2 == piVar1) goto code_r0x004025a8;\n        }\n        iVar3 = piVar2 - piVar1 >> 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 187
    },
    "00402689": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402689(int32_t *param_1, int16_t param_2, int32_t param_3)\n\n{\n    int16_t *piVar1;\n    \n    piVar1 = *param_1 + param_3 * 2;\n    while( true ) {\n        if (*piVar1 == param_2) {\n            return piVar1 - *param_1 >> 1;\n        }\n        if (*piVar1 == 0) break;\n        piVar1 = piVar1 + 1;\n    }\n    return -1;\n}\n",
        "token_count": 129
    },
    "00403c63": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t * fcn.00403c63(uint16_t *param_1, uint32_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    \n    while ((((uVar1 = *param_1,  0x2f < uVar1 && (uVar1 < 0x3a)) || (uVar1 == 0x2b)) || (uVar1 == 0x2d))) {\n        uVar2 = (*_sym.imp.MSVCRT.dll__wtol)(param_1);\n        for (; (*param_1 == 0x2d || (*param_1 == 0x2b)); param_1 = param_1 + 1) {\n        }\n        for (; (0x2f < *param_1 && (*param_1 < 0x3a)); param_1 = param_1 + 1) {\n        }\n        if (uVar2 < 1) {\n            *param_2 = *param_2 & uVar2 - 1;\n        }\n        else {\n            *param_2 = *param_2 | uVar2;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 265
    },
    "00403e86": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00403e86(uint *param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0;\n    **param_1 = 0;\n    iVar2 = 0;\n    cVar1 = *param_2;\n    while (cVar1 != '\\0') {\n        iVar2 = iVar2 + 1;\n        cVar1 = param_2[iVar2];\n    }\n    fcn.004022b0(iVar2);\n    fcn.0040236e(*param_1, param_2);\n    param_1[1] = iVar2;\n    return param_1;\n}\n",
        "token_count": 158
    },
    "00406d5d": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406d5d(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"uxtheme\");\n    if ((iVar2 != 0) &&\n       (pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"SetWindowTheme\"), \n       pcVar1 = _sym.imp.USER32.dll_GetWindow,  pcVar3 != NULL)) {\n        for (iVar2 = (*_sym.imp.USER32.dll_GetWindow)(*(param_1 + 4), 5); iVar2 != 0; iVar2 = (*pcVar1)(iVar2, 2)) {\n            (*pcVar3)(iVar2, 0x41455c, 0x41455c);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "004078e9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078e9(uint16_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint16_t uVar1;\n    uint var_ch;\n    \n    fcn.00401411();\n    for (; uVar1 = *arg_8h,  uVar1 != 0; arg_8h = arg_8h + 1) {\n        if (uVar1 < 0x20) {\n            uVar1 = 0x20;\n        }\n        fcn.00401429(uVar1);\n    }\n    fcn.004068f4(*(in_ECX + 4), var_ch);\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_ch);\n    return;\n}\n",
        "token_count": 164
    },
    "004095b7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004095b7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t var_4h;\n    \n    iVar2 = *(param_1 + 0x44);\n    var_4h = param_1;\n    iVar1 = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        do {\n            iVar1 = iVar1 + -1;\n            if (iVar1 < 0) {\n                var_4h = 1;\n                sub.MSVCRT.dll__CxxThrowException(&var_4h, 0x414cfc);\n                break;\n            }\n            iVar2 = fcn.00408a79();\n        } while (-1 < iVar2);\n        iVar2 = *(*(param_1 + 0x48) + iVar1 * 8);\n        uVar3 = *(*(param_1 + 0x48) + 4 + iVar1 * 8);\n    }\n    return CONCAT44(uVar3, iVar2);\n}\n",
        "token_count": 248
    },
    "0040ac7a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ac7a(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0040e8da();\n    fcn.0040e811(in_EAX);\n    if (0 < in_EAX) {\n        do {\n            fcn.00409403();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0040ad23": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad23(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0040aacb();\n    if (cVar1 == '\\0') {\n        fcn.0040accf(arg_8h, arg_ch);\n    }\n    else {\n        fcn.0040e8da();\n        fcn.0040e811(arg_8h);\n        if (0 < arg_8h) {\n            do {\n                fcn.00409403();\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0040b344": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b344(void)\n\n{\n    int64_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0040ab46();\n        if (iVar1 == 0) break;\n        fcn.0040acb7();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040b361": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b361(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    while( true ) {\n        iVar2 = fcn.0040ab46();\n        if (iVar2 == CONCAT44(param_2, param_1)) {\n            return;\n        }\n        if (iVar2 == 0) break;\n        fcn.0040acb7();\n    }\n    fcn.0040aaab();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 126
    },
    "0040b390": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b390(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.0040ad23(arg_8h, arg_ch);\n    fcn.0040e8da();\n    fcn.0040e811(arg_8h);\n    iVar1 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*(iVar1 + *(arg_ch + 0xc)) != '\\0') {\n                fcn.0040abf1();\n            }\n            fcn.00408761();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0040bdab": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bdab(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040ad23(arg_10h, arg_ch + 0x14);\n    fcn.0040baf0();\n    iVar1 = arg_10h;\n    fcn.0040e811(arg_10h);\n    iVar2 = 0;\n    if (0 < arg_10h) {\n        do {\n            iVar1 = 0;\n            if (*(iVar2 + *(arg_ch + 0x20)) != '\\0') {\n                iVar1 = fcn.0040ac0c();\n            }\n            fcn.004087c0();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < arg_10h);\n    }\n    fcn.0040baa1(iVar1);\n    return;\n}\n",
        "token_count": 227
    },
    "0040c05d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040c05d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    \n    uVar2 = fcn.0040ab46();\n    while ((uVar1 = uVar2,  uVar2 >> 0x20 == 0 && (uVar1 < 0x40000001))) {\n        if (uVar1 == 0) {\n            return;\n        }\n        if (uVar1 == 6) {\n            fcn.0040b3e8(arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n        else if (uVar1 == 7) {\n            fcn.0040bec7(arg_8h, arg_1ch);\n        }\n        else {\n            if (uVar1 != 8) break;\n            fcn.0040b718(arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n        }\n        uVar2 = fcn.0040ab46();\n    }\n    fcn.0040aaab();\n    return;\n}\n",
        "token_count": 305
    },
    "0040cf89": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cf89(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.0040e8da();\n    fcn.0040e8da();\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            if ((unaff_EBX == 0) || (puVar1 = *(unaff_EBX + uVar2 * 4),  puVar1 == NULL)) {\n                fcn.004087c0(0, 0);\n                iVar3 = 0;\n            }\n            else {\n                fcn.004087c0(*puVar1, puVar1[1]);\n                iVar3 = *(unaff_ESI + 0xc) + -8 + *(unaff_ESI + 8) * 8;\n            }\n            fcn.00408761(iVar3);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0040ea88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ea88(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    do {\n        if (*(param_1 + 0xc) == *(param_1 + 4)) {\n            return 0;\n        }\n        iVar1 = fcn.0040e9f7();\n    } while (iVar1 == 0);\n    return iVar1;\n}\n",
        "token_count": 90
    },
    "004019f0": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019f0(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h._0_3_ = CONCAT12(10, CONCAT11(0xd, arg_8h));\n    arg_8h = arg_8h & 0xff000000 | arg_8h;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff5, &arg_8h, 3, &var_4h, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(uVar1);\n    return;\n}\n",
        "token_count": 143
    },
    "0040db97": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040db97(uint lpBuffer, uint32_t nNumberOfBytesToWrite, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint lpNumberOfBytesWritten;\n    \n    if (*0x4175d0 < nNumberOfBytesToWrite) {\n        nNumberOfBytesToWrite = *0x4175d0;\n    }\n    lpNumberOfBytesWritten = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*in_ECX, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n    *arg_10h = lpNumberOfBytesWritten;\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 169
    },
    "004021b9": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004021b9(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *0x417730 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32\", \"Wow64DisableWow64FsRedirection\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x417734);\n        *0x417730 = 1;\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00402f10": {
        "rules": [
            "query environment variable"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00402f10(int32_t *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetEnvironmentVariableW;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(arg_ch, &var_4h, 1);\n    fcn.00401411();\n    fcn.00402535(iVar2 + 2);\n    uVar3 = fcn.00402535(iVar2 + 2, iVar2 + 1);\n    (*pcVar1)(arg_ch, uVar3);\n    iVar2 = *arg_8h;\n    iVar4 = fcn.00401117(iVar2);\n    *(iVar2 + iVar4 * 2) = 0;\n    arg_8h[1] = iVar4;\n    return arg_8h;\n}\n",
        "token_count": 227
    },
    "00402d7d": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nint32_t * fcn.00402d7d(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    fcn.00401411();\n    iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthW)(param_2);\n    if (0 < iVar1) {\n        uVar2 = fcn.00402535(iVar1 + 1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextW)(unaff_retaddr, uVar2);\n        *(*param_1 + iVar1 * 2) = 0;\n        param_1[1] = iVar1;\n    }\n    return param_1;\n}\n",
        "token_count": 166
    },
    "0040db09": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040db09(uint lpBuffer, uint32_t nNumberOfBytesToRead, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint lpNumberOfBytesRead;\n    \n    if (*0x4175d0 < nNumberOfBytesToRead) {\n        nNumberOfBytesToRead = *0x4175d0;\n    }\n    lpNumberOfBytesRead = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    *arg_10h = lpNumberOfBytesRead;\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 169
    }
}